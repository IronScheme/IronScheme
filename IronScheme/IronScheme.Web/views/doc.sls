(library (views doc)
  (export 
    index
    (rename (view:library library)))
  (import
    (ironscheme)
    (ironscheme linq)
    (ironscheme web)
    (ironscheme web views))
    
  (define (page-template . body)
    `(html (xmlns . "http://www.w3.org/1999/xhtml")
        (head 
          (title "Documentation for IronScheme")
          ,(css-link "~/doc.css"))
        (body
          (h1 "Documentation for IronScheme")
          . ,body)))    
          
  (define (make-lib-link lib)
    (action/id-link lib "library" lib))
    
  (define-view (index)
    (page-template
      '(h2 "Libraries")
      `(h3 ,(make-lib-link "(ironscheme)"))
      `(h3 ,(make-lib-link "(ironscheme clr)"))
      `(h3 ,(make-lib-link "(ironscheme console)"))
      `(h3 ,(make-lib-link "(ironscheme conversions)"))
      `(h3 ,(make-lib-link "(ironscheme datetime)"))
      `(h3 ,(make-lib-link "(ironscheme define-macro)"))
      `(h3 ,(make-lib-link "(ironscheme docs)"))
      `(h3 ,(make-lib-link "(ironscheme environment)"))
      `(h3 ,(make-lib-link "(ironscheme format)"))
      `(h3 ,(make-lib-link "(ironscheme linq)"))
      `(h3 ,(make-lib-link "(ironscheme pretty-print)"))
      `(h3 ,(make-lib-link "(ironscheme process)"))
      `(h3 ,(make-lib-link "(ironscheme random)"))
      `(h3 ,(make-lib-link "(ironscheme record-case)"))
      `(h3 ,(make-lib-link "(ironscheme regex)"))
      `(h3 ,(make-lib-link "(ironscheme registry)"))
      `(h3 ,(make-lib-link "(ironscheme strings)"))
      `(h3 ,(make-lib-link "(ironscheme syntax-format)"))
      `(h3 ,(make-lib-link "(ironscheme threading)"))
      `(h3 ,(make-lib-link "(ironscheme typed)"))
      `(h3 ,(make-lib-link "(ironscheme web-utils)"))
      `(h3 ,(make-lib-link "(ironscheme web)"))
      `(h3 ,(make-lib-link "(ironscheme xml)"))
      `(h3 ,(make-lib-link "(rnrs)"))
      `(h3 ,(make-lib-link "(rnrs base)"))
      `(h3 ,(make-lib-link "(rnrs r5rs)"))
      `(h3 ,(make-lib-link "(rnrs control)"))
      `(h3 ,(make-lib-link "(rnrs eval)"))
      `(h3 ,(make-lib-link "(rnrs mutable-pairs)"))
      `(h3 ,(make-lib-link "(rnrs mutable-strings)"))
      `(h3 ,(make-lib-link "(rnrs programs)"))
      `(h3 ,(make-lib-link "(rnrs syntax-case)"))
      `(h3 ,(make-lib-link "(rnrs files)"))
      `(h3 ,(make-lib-link "(rnrs sorting)"))
      `(h3 ,(make-lib-link "(rnrs lists)"))
      `(h3 ,(make-lib-link "(rnrs io simple)"))
      `(h3 ,(make-lib-link "(rnrs bytevectors)"))
      `(h3 ,(make-lib-link "(rnrs unicode)"))
      `(h3 ,(make-lib-link "(rnrs exceptions)"))
      `(h3 ,(make-lib-link "(rnrs arithmetic bitwise)"))
      `(h3 ,(make-lib-link "(rnrs arithmetic fixnums)"))
      `(h3 ,(make-lib-link "(rnrs arithmetic flonums)"))
      `(h3 ,(make-lib-link "(rnrs hashtables)"))
      `(h3 ,(make-lib-link "(rnrs io ports)"))
      `(h3 ,(make-lib-link "(rnrs enums)"))
      `(h3 ,(make-lib-link "(rnrs conditions)"))
      `(h3 ,(make-lib-link "(rnrs records inspection)"))
      `(h3 ,(make-lib-link "(rnrs records procedural)"))
      `(h3 ,(make-lib-link "(rnrs records syntactic)"))
      ))
    
  (define-view (view:library id symbols)
    (page-template 
      `(h2 (no-escape ,id))
      `(ol
        ,@(map (lambda (x)
                `(li ,x))
               symbols
               ))
      ))    
)
