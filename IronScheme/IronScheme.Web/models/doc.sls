(library (models doc)
  (export
    get-libraries
    get-symbols)
  (import
    (ironscheme)
    (ironscheme strings)
    (ironscheme linq))
 
  (define (get-symbols lib)
    (from i in (environment-bindings (environment lib))
     orderby (car i)
     select i))
     
  (define (get-libraries) 
    (from l in libraries
     select 
      (cons (car l) 
        (from ll in (cdr l)
         let n = (format "~a" ll)
         orderby (substring n 1 (- (string-length n) 1))
         select ll))))
     
  (define libraries
    '(("IronScheme"
      (ironscheme) 
      (ironscheme clr)
      (ironscheme console)
      (ironscheme conversions)
      (ironscheme datetime)
      (ironscheme define-macro)
      (ironscheme docs)
      (ironscheme environment)
      (ironscheme linq)
      (ironscheme pretty-print)
      (ironscheme process)
      (ironscheme random)
      (ironscheme record-case)
      (ironscheme regex)
      (ironscheme registry)
      (ironscheme strings)
      (ironscheme syntax-format)
      (ironscheme threading)
      (ironscheme typed)
      (ironscheme web-utils)
      (ironscheme web)
      (ironscheme xml)
      (ironscheme web controllers)
      (ironscheme web views)
      (ironscheme web routing)
      (ironscheme collections arraylist)
      (ironscheme collections icollection)
      (ironscheme collections ilist)
      (ironscheme collections stack))
    ("R6RS"
      (rnrs)
      (rnrs base)
      (rnrs r5rs)
      (rnrs control)
      (rnrs eval)
      (rnrs mutable-pairs)
      (rnrs mutable-strings)
      (rnrs programs)
      (rnrs syntax-case)
      (rnrs files)
      (rnrs sorting)
      (rnrs lists)
      (rnrs io simple)
      (rnrs bytevectors)
      (rnrs unicode)
      (rnrs exceptions)
      (rnrs arithmetic bitwise)
      (rnrs arithmetic fixnums)
      (rnrs arithmetic flonums)
      (rnrs hashtables)
      (rnrs io ports)
      (rnrs enums)
      (rnrs conditions)
      (rnrs records inspection)
      (rnrs records procedural)
      (rnrs records syntactic))
    ("SRFI"
      (srfi and-let)
      (srfi format)
      (srfi land)
      (srfi lists)
      (srfi parameters)
      (srfi receive)
      (srfi streams)
      (srfi string-ports))
    ("Other"
      (datatype)
      (declare-type)
      (draw-tree)
      (match)
      (pregexp)
      (schelog)
      (tiny-talk))))         

)    