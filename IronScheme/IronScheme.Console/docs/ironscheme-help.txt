IronScheme Help
===============

Procedures/forms provided in the (ironscheme) library, beyond those provided in the R6RS specification.

compile
Compiles a toplevel program's dependent libraries.

compile->closure
Compiles a toplevel program to a thunk.

load
Load a R6RS top level program and executes it.

load/args
Load a R6RS top level program with the specified command line arguments and executes it.

enum-set?
Returns #t if the object is an enum-set, else #f.

environment-bindings
Returns a list a pairs of the symbols and their type exported from the specified environment.

environment-symbols
Returns a list of symbols exported from the specified environment.

interaction-environment-symbols
Returns a list of symbols currently defined in the interaction environment.

gensym
Generates a unique symbol name.

ungensym
Attempts to strip unique information from a gensym created symbol.

include
Includes a file into the toplevel program.

include-into
Includes the contents of a file in the current location.

export
Extended version of the R6RS export syntax.

import
Extended version of the R6RS import syntax.

library
Extended version of the R6RS library syntax.

fluid-let-syntax
See Chez Scheme documentation for this one.

module
Creates a module as described in the Chez Scheme documentation.

format
Provides string formatting.

fprintf
Provides string formatting.

printf
Provides string formatting.

gc-collect
Forces a GC collection.

clr-type?
Returns #t is the object is a CLR type object, else #f.

get-clr-type
Constructs a CLR type with the specified name and optional type arguments.

compile-system-libraries
Compiles commonly used libraries.

ironscheme-build
Builds the IronScheme bootfile.

last-pair
Returns the last pair of a list.

make-list
Makes a list of a specified size and content.

license
Prints the IronScheme license to the current outpyut port.

make-guid
Makes a GUID object.

make-parameter
Creates a parameter. See SRFI 8?

parameterize
Alters the binding temporarily of a parameter.

optimization-level
Gets or sets the current optimization level. Accepts 'none , 'safe or 'unchecked .
Note: This procedure is obsolete.

procedure-arity
Returns multiple values for the procedure arities. 

procedure-environment
Does nothing currently.

procedure-form
Returns multiple values for the procedure signature.

procedure-name
Returns the name of a procedure.

serialize-port
Uses the .NET binary serializer to serialize an object to a port.
Note: procedures (including closures) and continuations cannot be serialized currently.

deserialize-port
Uses the .NET binary serializer to deserialize a port to an object.

stacktrace
Prints the stacktrace of the last exception.
Note: This procedure is obsolete.

string-ci-compare
Used for comparing case-insensitive strings.

string-compare
Used for comparing case-sensitive strings.

string-format
Same as string.Format(format, args).

symbol-value
Gets the value bound to a toplevel symbol.

set-symbol-value!
Sets a toplevel symbol value to specified value.

cosh
Math.Cosh

sinh
Math.Sinh

tanh
Math.Tanh

time
Times an expression, and prints the statistics, and returns the result.

time-it
Times a thunk, and prints the statistics, and returns the result.

trace-define
Tracing form of define.

trace-define-syntax
Tracing form of define-syntax.

trace-lambda
Tracing form of lambda.

trace-let-syntax
Tracing form of let-syntax.

trace-letrec-syntax
Tracing form of letrec-syntax.

trace-printer
Gets or sets the current printer used for tracing (eg write or pretty-print).

vector-append
Appends 2 or more vectors.

vector-binary-search
Returns the index of a binary search for an object (.NET dependent).

vector-contains?
Returns #t if the vector contains the specified object (based on eqv?).

vector-copy
Makes a copy of the specified vector.

vector-filter
Analogous to filter.

vector-index-of
Returns the index of the specified obejct if found (based on eqv?).

vector-reverse!
Destructively reverses a vector.

void
Returns an unspecified object.

unspecified?
Tests for void.

Tip:

The above list can be generated by:
(import (ironscheme linq))
(define ironscheme (make-enumeration (environment-symbols (environment '(ironscheme)))))
(define sc (enum-set-constructor ironscheme))
(define rnrs (sc (environment-symbols (environment '(rnrs)'(rnrs mutable-pairs)'(rnrs mutable-strings)'(rnrs eval)'(rnrs r5rs)))))

(for-each (lambda (e) 
            (display e)
            (newline)) 
          (from e in (enum-set->list (enum-set-difference ironscheme rnrs)) 
           join 
           orderby e 
           select e))

