Builtins
========

A list of builtin procedures still written in C#.

(rnrs base):

*
+
-
/
append
apply [1][5][7]
assertion-violation [2][4]
call-with-current-continuation/call/cc [1][5]
call-with-values [1][5][7]
car [7]
cdr [7]
char->integer
cons [7]
dynamic-wind [1][5]
eq? [7]
equal?
eqv?
error [2][4]
integer->char
length
list [7]
list?
make-string
make-vector
not [7]
null? [7]
number->string
pair? [7]
string [7]
string->list
string->number 
string->symbol
string-append
string-copy
string-length
string-ref
string?
substring
symbol->string
values [5][6][7]
vector [7]
vector->list
vector-length

(rnrs r5rs):


(rnrs control):


(rnrs eval):


(rnrs mutable-pairs):

set-car!
set-cdr!

(rnrs mutable-strings):

string-fill!
string-set!

(rnrs programs):

exit

(rnrs syntax-case):


(rnrs files):


(rnrs sorting):

vector-sort [7]
vector-sort! [7]

(rnrs lists):


(rnrs io simple):

close-input-port
close-output-port
current-error-port
current-input-port
current-output-port
display [7]
eof-object
eof-object?
input-port?
open-input-file
open-output-file
output-port?
read [7]
write [7]


(rnrs bytevectors):

bytevector-sint-ref
bytevector-sint-set!
bytevector-uint-ref
bytevector-uint-set!

(rnrs unicode):

char-alphabetic?
char-downcase
char-foldcase
char-general-category
char-lower-case?
char-numeric?
char-title-case?
char-titlecase
char-upcase
char-upper-case?
char-whitespace?
string-downcase
string-foldcase
string-titlecase
string-upcase

(rnrs exceptions):

raise [4]
raise-continuable [4]
with-exception-handler [1][4]

(rnrs arithmetic bitwise):

bitwise-arithmetic-shift
bitwise-reverse-bit-field

(rnrs arithmetic fixnums):

(rnrs arithmetic flonums):

(rnrs hashtables):

equal-hash [3] 
hashtable-copy
hashtable-entries [6]
hashtable-equivalence-function [3]
hashtable-hash-function [3]
hashtable-keys
hashtable-mutable?
hashtable?
make-hashtable [1]
string-ci-hash [3]
string-hash [3]
symbol-hash [3]

(rnrs io ports):

binary-port?
bytevector->string
call-with-bytevector-output-port [1]
close-port
current-error-port
current-input-port
current-output-port
eof-object
eof-object?
flush-output-port
get-bytevector-all
get-bytevector-n
get-bytevector-n!
get-bytevector-some
get-char
get-line
get-string-all
get-string-n
get-string-n!
get-u8
input-port?
latin-1-codec
lookahead-char
lookahead-u8
make-custom-binary-input-port [1]
make-custom-binary-input/output-port [1]
make-custom-binary-output-port [1]
make-custom-textual-input-port [1]
make-custom-textual-input/output-port [1]
make-custom-textual-output-port [1]
make-transcoder
native-transcoder
open-bytevector-input-port
open-bytevector-output-port
open-file-input-port
open-file-input/output-port
open-file-output-port
open-string-input-port
output-port-buffer-mode
output-port?
port-eof?
port-has-port-position?
port-has-set-port-position!?
port-position
port-transcoder
put-bytevector
put-char
put-string
put-u8
set-port-position!
string->bytevector
textual-port?
transcoded-port
transcoder-codec
transcoder-eol-style
transcoder-error-handling-mode
utf-16-codec
utf-8-codec

(rnrs enums):


(rnrs conditions):

condition
condition-accessor [3]
condition-predicate [3]
condition?
simple-conditions

(rnrs records inspection):

record-field-mutable?
record-rtd
record-type-field-names
record-type-generative?
record-type-name
record-type-opaque?
record-type-parent
record-type-sealed?
record-type-uid
record?

(rnrs records procedural):

make-record-constructor-descriptor
make-record-type-descriptor
record-accessor [3]
record-constructor [3]
record-mutator [3]
record-predicate [3]
record-type-descriptor?

(rnrs records syntactic):


Notes:

[1] accepts a procedure as an argument, meant to be called
[2] calls a scheme procedure internally
[3] returns a scheme procedure
[4] implemented in Scheme in CPS mode
[5] special CPS primitive
[6] returns multiple values
[7] optimized builtin