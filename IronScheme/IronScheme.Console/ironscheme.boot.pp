;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$11657$1S&e0X
     g$list-tail$11813$1S&e0X
     (case-lambda
       ((g$lst$11685$1S&e0X g$index$11686$1S&e0X)
        (if ((case-lambda
               ((g$t$11687$1S&e0X)
                (if g$t$11687$1S&e0X
                  g$t$11687$1S&e0X
                  (begin
                    '#f
                    (g$negative?$13687$1S&e0X g$index$11686$1S&e0X)))))
             (null? g$lst$11685$1S&e0X))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$11685$1S&e0X
            g$index$11686$1S&e0X)
          (if (g$zero?$13685$1S&e0X g$index$11686$1S&e0X)
            g$lst$11685$1S&e0X
            (begin
              '#f
              (g$list-tail$11657$1S&e0X
                (cdr g$lst$11685$1S&e0X)
                (- g$index$11686$1S&e0X '1))))))))
   (g$list-ref$11658$1S&e0X
     g$list-ref$11814$1S&e0X
     (case-lambda
       ((g$lst$11688$1S&e0X g$index$11689$1S&e0X)
        (car (g$list-tail$11657$1S&e0X
               g$lst$11688$1S&e0X
               g$index$11689$1S&e0X)))))
   (g$last-pair$11659$1S&e0X
     g$last-pair$11815$1S&e0X
     (case-lambda
       ((g$lst$11690$1S&e0X)
        (if (null? g$lst$11690$1S&e0X)
          g$lst$11690$1S&e0X
          (if (null? (cdr g$lst$11690$1S&e0X))
            g$lst$11690$1S&e0X
            (begin
              '#f
              (g$last-pair$11659$1S&e0X (cdr g$lst$11690$1S&e0X))))))))
   (g$make-list$11660$1S&e0X
     g$make-list$11816$1S&e0X
     (case-lambda
       ((g$n$11691$1S&e0X)
        (vector->list (make-vector g$n$11691$1S&e0X)))
       ((g$n$11692$1S&e0X g$fill$11693$1S&e0X)
        (vector->list
          (make-vector g$n$11692$1S&e0X g$fill$11693$1S&e0X)))))
   (g$find$11661$1S&e0X
     g$find$11817$1S&e0X
     (case-lambda
       ((g$proc$11694$1S&e0X g$l$11695$1S&e0X)
        (if (null? g$l$11695$1S&e0X)
          '#f
          ((case-lambda
             ((g$e$11696$1S&e0X g$r$11697$1S&e0X g$proc$11698$1S&e0X)
              (if (g$proc$11698$1S&e0X g$e$11696$1S&e0X)
                g$e$11696$1S&e0X
                (g$find$11661$1S&e0X
                  g$proc$11698$1S&e0X
                  g$r$11697$1S&e0X))))
           (car g$l$11695$1S&e0X)
           (cdr g$l$11695$1S&e0X)
           g$proc$11694$1S&e0X)))))
   (g$partition$11662$1S&e0X
     g$partition$11818$1S&e0X
     (case-lambda
       ((g$proc$11699$1S&e0X g$l$11700$1S&e0X)
        ((letrec ((g$f$11701$1S&e0X
                    (case-lambda
                      ((g$l$11702$1S&e0X
                         g$a$11703$1S&e0X
                         g$b$11704$1S&e0X)
                       (if (null? g$l$11702$1S&e0X)
                         (values
                           (reverse! g$a$11703$1S&e0X)
                           (reverse! g$b$11704$1S&e0X))
                         ((case-lambda
                            ((g$e$11705$1S&e0X)
                             (if (g$proc$11699$1S&e0X g$e$11705$1S&e0X)
                               (g$f$11701$1S&e0X
                                 (cdr g$l$11702$1S&e0X)
                                 (cons
                                   g$e$11705$1S&e0X
                                   g$a$11703$1S&e0X)
                                 g$b$11704$1S&e0X)
                               (g$f$11701$1S&e0X
                                 (cdr g$l$11702$1S&e0X)
                                 g$a$11703$1S&e0X
                                 (cons
                                   g$e$11705$1S&e0X
                                   g$b$11704$1S&e0X)))))
                          (car g$l$11702$1S&e0X)))))))
           g$f$11701$1S&e0X)
         g$l$11700$1S&e0X
         '()
         '()))))
   (g$remp$11663$1S&e0X
     g$remp$11819$1S&e0X
     (case-lambda
       ((g$proc$11706$1S&e0X g$l$11707$1S&e0X)
        ((letrec ((g$f$11708$1S&e0X
                    (case-lambda
                      ((g$l$11709$1S&e0X g$a$11710$1S&e0X)
                       (if (null? g$l$11709$1S&e0X)
                         (reverse! g$a$11710$1S&e0X)
                         ((case-lambda
                            ((g$e$11711$1S&e0X)
                             (if (g$proc$11706$1S&e0X g$e$11711$1S&e0X)
                               (g$f$11708$1S&e0X
                                 (cdr g$l$11709$1S&e0X)
                                 g$a$11710$1S&e0X)
                               (g$f$11708$1S&e0X
                                 (cdr g$l$11709$1S&e0X)
                                 (cons
                                   g$e$11711$1S&e0X
                                   g$a$11710$1S&e0X)))))
                          (car g$l$11709$1S&e0X)))))))
           g$f$11708$1S&e0X)
         g$l$11707$1S&e0X
         '()))))
   (g$filter$11664$1S&e0X
     g$filter$11820$1S&e0X
     (case-lambda
       ((g$proc$11712$1S&e0X g$l$11713$1S&e0X)
        ((letrec ((g$f$11714$1S&e0X
                    (case-lambda
                      ((g$l$11715$1S&e0X g$a$11716$1S&e0X)
                       (if (null? g$l$11715$1S&e0X)
                         (reverse! g$a$11716$1S&e0X)
                         ((case-lambda
                            ((g$e$11717$1S&e0X)
                             (if (g$proc$11712$1S&e0X g$e$11717$1S&e0X)
                               (g$f$11714$1S&e0X
                                 (cdr g$l$11715$1S&e0X)
                                 (cons
                                   g$e$11717$1S&e0X
                                   g$a$11716$1S&e0X))
                               (g$f$11714$1S&e0X
                                 (cdr g$l$11715$1S&e0X)
                                 g$a$11716$1S&e0X))))
                          (car g$l$11715$1S&e0X)))))))
           g$f$11714$1S&e0X)
         g$l$11713$1S&e0X
         '()))))
   (g$assq$11665$1S&e0X
     g$assq$11821$1S&e0X
     (case-lambda
       ((g$obj$11718$1S&e0X g$lst$11719$1S&e0X)
        (if (null? g$lst$11719$1S&e0X)
          '#f
          ((case-lambda
             ((g$obj$11720$1S&e0X g$t$11721$1S&e0X g$r$11722$1S&e0X)
              (if (eq? g$obj$11720$1S&e0X (car g$t$11721$1S&e0X))
                g$t$11721$1S&e0X
                (g$assq$11665$1S&e0X
                  g$obj$11720$1S&e0X
                  g$r$11722$1S&e0X))))
           g$obj$11718$1S&e0X
           (car g$lst$11719$1S&e0X)
           (cdr g$lst$11719$1S&e0X))))))
   (g$assv$11666$1S&e0X
     g$assv$11822$1S&e0X
     (case-lambda
       ((g$obj$11723$1S&e0X g$lst$11724$1S&e0X)
        (if (null? g$lst$11724$1S&e0X)
          '#f
          ((case-lambda
             ((g$obj$11725$1S&e0X g$t$11726$1S&e0X g$r$11727$1S&e0X)
              (if (eqv? g$obj$11725$1S&e0X (car g$t$11726$1S&e0X))
                g$t$11726$1S&e0X
                (g$assv$11666$1S&e0X
                  g$obj$11725$1S&e0X
                  g$r$11727$1S&e0X))))
           g$obj$11723$1S&e0X
           (car g$lst$11724$1S&e0X)
           (cdr g$lst$11724$1S&e0X))))))
   (g$assoc$11667$1S&e0X
     g$assoc$11823$1S&e0X
     (case-lambda
       ((g$obj$11728$1S&e0X g$lst$11729$1S&e0X)
        (if (null? g$lst$11729$1S&e0X)
          '#f
          ((case-lambda
             ((g$obj$11730$1S&e0X g$t$11731$1S&e0X g$r$11732$1S&e0X)
              (if (equal? g$obj$11730$1S&e0X (car g$t$11731$1S&e0X))
                g$t$11731$1S&e0X
                (g$assoc$11667$1S&e0X
                  g$obj$11730$1S&e0X
                  g$r$11732$1S&e0X))))
           g$obj$11728$1S&e0X
           (car g$lst$11729$1S&e0X)
           (cdr g$lst$11729$1S&e0X))))))
   (g$assp$11668$1S&e0X
     g$assp$11824$1S&e0X
     (case-lambda
       ((g$p?$11733$1S&e0X g$lst$11734$1S&e0X)
        (if (null? g$lst$11734$1S&e0X)
          '#f
          ((case-lambda
             ((g$p?$11735$1S&e0X g$t$11736$1S&e0X g$r$11737$1S&e0X)
              (if (g$p?$11735$1S&e0X (car g$t$11736$1S&e0X))
                g$t$11736$1S&e0X
                (g$assp$11668$1S&e0X
                  g$p?$11735$1S&e0X
                  g$r$11737$1S&e0X))))
           g$p?$11733$1S&e0X
           (car g$lst$11734$1S&e0X)
           (cdr g$lst$11734$1S&e0X))))))
   (g$memq$11669$1S&e0X
     g$memq$11825$1S&e0X
     (case-lambda
       ((g$obj$11738$1S&e0X g$lst$11739$1S&e0X)
        (if (null? g$lst$11739$1S&e0X)
          '#f
          (if (eq? g$obj$11738$1S&e0X (car g$lst$11739$1S&e0X))
            g$lst$11739$1S&e0X
            (g$memq$11669$1S&e0X
              g$obj$11738$1S&e0X
              (cdr g$lst$11739$1S&e0X)))))))
   (g$memv$11670$1S&e0X
     g$memv$11826$1S&e0X
     (case-lambda
       ((g$obj$11740$1S&e0X g$lst$11741$1S&e0X)
        (if (null? g$lst$11741$1S&e0X)
          '#f
          (if (eqv? g$obj$11740$1S&e0X (car g$lst$11741$1S&e0X))
            g$lst$11741$1S&e0X
            (g$memv$11670$1S&e0X
              g$obj$11740$1S&e0X
              (cdr g$lst$11741$1S&e0X)))))))
   (g$member$11671$1S&e0X
     g$member$11827$1S&e0X
     (case-lambda
       ((g$obj$11742$1S&e0X g$lst$11743$1S&e0X)
        (if (null? g$lst$11743$1S&e0X)
          '#f
          (if (equal? g$obj$11742$1S&e0X (car g$lst$11743$1S&e0X))
            g$lst$11743$1S&e0X
            (g$member$11671$1S&e0X
              g$obj$11742$1S&e0X
              (cdr g$lst$11743$1S&e0X)))))))
   (g$memp$11672$1S&e0X
     g$memp$11828$1S&e0X
     (case-lambda
       ((g$p?$11744$1S&e0X g$lst$11745$1S&e0X)
        (if (null? g$lst$11745$1S&e0X)
          '#f
          (if (g$p?$11744$1S&e0X (car g$lst$11745$1S&e0X))
            g$lst$11745$1S&e0X
            (g$memp$11672$1S&e0X
              g$p?$11744$1S&e0X
              (cdr g$lst$11745$1S&e0X)))))))
   (g$all-empty?$11673$1S&e0X
     g$all-empty?$11829$1S&e0X
     (case-lambda
       ((g$ls$11746$1S&e0X)
        ((case-lambda
           ((g$t$11747$1S&e0X)
            (if g$t$11747$1S&e0X
              g$t$11747$1S&e0X
              (begin
                '#f
                (if (null? (car g$ls$11746$1S&e0X))
                  (begin
                    '#f
                    (g$all-empty?$11673$1S&e0X (cdr g$ls$11746$1S&e0X)))
                  '#f)))))
         (null? g$ls$11746$1S&e0X)))))
   (g$split$11674$1S&e0X
     g$split$11830$1S&e0X
     (case-lambda
       ((g$ls$11748$1S&e0X)
        (if (null? g$ls$11748$1S&e0X)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (() (g$split$11674$1S&e0X (cdr g$ls$11748$1S&e0X))))
              (case-lambda
                ((g$cars$11749$1S&e0X g$cdrs$11750$1S&e0X)
                 ((case-lambda
                    ((g$a$11751$1S&e0X)
                     (values
                       (cons (car g$a$11751$1S&e0X) g$cars$11749$1S&e0X)
                       (cons
                         (cdr g$a$11751$1S&e0X)
                         g$cdrs$11750$1S&e0X))))
                  (car g$ls$11748$1S&e0X))))))))))
   (g$for-all$11675$1S&e0X
     g$for-all$11831$1S&e0X
     (case-lambda
       ((g$f$11752$1S&e0X g$arg1$11753$1S&e0X)
        (if (null? g$arg1$11753$1S&e0X)
          '#t
          (if (null? (cdr g$arg1$11753$1S&e0X))
            (g$f$11752$1S&e0X (car g$arg1$11753$1S&e0X))
            (if (g$f$11752$1S&e0X (car g$arg1$11753$1S&e0X))
              (begin
                '#f
                (g$for-all$11675$1S&e0X
                  g$f$11752$1S&e0X
                  (cdr g$arg1$11753$1S&e0X)))
              '#f))))
       ((g$f$11754$1S&e0X g$arg1$11755$1S&e0X . g$args$11756$1S&e0X)
        ((case-lambda
           ((g$args$11757$1S&e0X)
            (if (g$all-empty?$11673$1S&e0X g$args$11757$1S&e0X)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$11674$1S&e0X g$args$11757$1S&e0X)))
                (case-lambda
                  ((g$cars$11758$1S&e0X g$cdrs$11759$1S&e0X)
                   (if (g$all-empty?$11673$1S&e0X g$cdrs$11759$1S&e0X)
                     (apply g$f$11754$1S&e0X g$cars$11758$1S&e0X)
                     (if (apply g$f$11754$1S&e0X g$cars$11758$1S&e0X)
                       (begin
                         '#f
                         (apply
                           g$for-all$11675$1S&e0X
                           g$f$11754$1S&e0X
                           g$cdrs$11759$1S&e0X))
                       '#f))))))))
         (cons g$arg1$11755$1S&e0X g$args$11756$1S&e0X)))))
   (g$exists$11676$1S&e0X
     g$exists$11832$1S&e0X
     (case-lambda
       ((g$f$11760$1S&e0X g$arg1$11761$1S&e0X)
        (if (null? g$arg1$11761$1S&e0X)
          '#f
          ((case-lambda
             ((g$t$11762$1S&e0X)
              (if g$t$11762$1S&e0X
                g$t$11762$1S&e0X
                (begin
                  '#f
                  (g$exists$11676$1S&e0X
                    g$f$11760$1S&e0X
                    (cdr g$arg1$11761$1S&e0X))))))
           (g$f$11760$1S&e0X (car g$arg1$11761$1S&e0X)))))
       ((g$f$11763$1S&e0X g$arg1$11764$1S&e0X . g$args$11765$1S&e0X)
        ((case-lambda
           ((g$args$11766$1S&e0X)
            (if (g$all-empty?$11673$1S&e0X g$args$11766$1S&e0X)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$11674$1S&e0X g$args$11766$1S&e0X)))
                (case-lambda
                  ((g$cars$11767$1S&e0X g$cdrs$11768$1S&e0X)
                   ((case-lambda
                      ((g$t$11769$1S&e0X)
                       (if g$t$11769$1S&e0X
                         g$t$11769$1S&e0X
                         (begin
                           '#f
                           (apply
                             g$exists$11676$1S&e0X
                             g$f$11763$1S&e0X
                             g$cdrs$11768$1S&e0X)))))
                    (apply g$f$11763$1S&e0X g$cars$11767$1S&e0X))))))))
         (cons g$arg1$11764$1S&e0X g$args$11765$1S&e0X)))))
   (g$map$11677$1S&e0X
     g$map$11833$1S&e0X
     (case-lambda
       ((g$proc$11770$1S&e0X g$list1$11771$1S&e0X)
        ((letrec ((g$f$11772$1S&e0X
                    (case-lambda
                      ((g$lst$11773$1S&e0X g$a$11774$1S&e0X)
                       (if (null? g$lst$11773$1S&e0X)
                         (reverse! g$a$11774$1S&e0X)
                         (g$f$11772$1S&e0X
                           (cdr g$lst$11773$1S&e0X)
                           (cons
                             (g$proc$11770$1S&e0X
                               (car g$lst$11773$1S&e0X))
                             g$a$11774$1S&e0X)))))))
           g$f$11772$1S&e0X)
         g$list1$11771$1S&e0X
         '()))
       ((g$proc$11775$1S&e0X
          g$list1$11776$1S&e0X
          .
          g$lists$11777$1S&e0X)
        ((letrec ((g$f$11778$1S&e0X
                    (case-lambda
                      ((g$lists$11779$1S&e0X g$a$11780$1S&e0X)
                       (if (g$all-empty?$11673$1S&e0X
                             g$lists$11779$1S&e0X)
                         (reverse! g$a$11780$1S&e0X)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$11674$1S&e0X
                                g$lists$11779$1S&e0X)))
                           (case-lambda
                             ((g$cars$11781$1S&e0X g$cdrs$11782$1S&e0X)
                              (g$f$11778$1S&e0X
                                g$cdrs$11782$1S&e0X
                                (cons
                                  (apply
                                    g$proc$11775$1S&e0X
                                    g$cars$11781$1S&e0X)
                                  g$a$11780$1S&e0X))))))))))
           g$f$11778$1S&e0X)
         (cons g$list1$11776$1S&e0X g$lists$11777$1S&e0X)
         '()))))
   (g$for-each$11678$1S&e0X
     g$for-each$11834$1S&e0X
     (case-lambda
       ((g$f$11783$1S&e0X g$arg1$11784$1S&e0X)
        (if (not (null? g$arg1$11784$1S&e0X))
          (begin
            (g$f$11783$1S&e0X (car g$arg1$11784$1S&e0X))
            (g$for-each$11678$1S&e0X
              g$f$11783$1S&e0X
              (cdr g$arg1$11784$1S&e0X)))
          (void)))
       ((g$f$11785$1S&e0X g$arg1$11786$1S&e0X . g$args$11787$1S&e0X)
        ((case-lambda
           ((g$args$11788$1S&e0X)
            (if (not (g$all-empty?$11673$1S&e0X g$args$11788$1S&e0X))
              (call-with-values
                (case-lambda
                  (() (g$split$11674$1S&e0X g$args$11788$1S&e0X)))
                (case-lambda
                  ((g$cars$11789$1S&e0X g$cdrs$11790$1S&e0X)
                   (begin
                     (apply g$f$11785$1S&e0X g$cars$11789$1S&e0X)
                     (apply
                       g$for-each$11678$1S&e0X
                       g$f$11785$1S&e0X
                       g$cdrs$11790$1S&e0X)))))
              (void))))
         (cons g$arg1$11786$1S&e0X g$args$11787$1S&e0X)))))
   (g$cons*$11679$1S&e0X
     g$cons*$11835$1S&e0X
     (case-lambda
       ((g$a$11791$1S&e0X . g$rest$11792$1S&e0X)
        ((letrec ((g$f$11793$1S&e0X
                    (case-lambda
                      ((g$a$11794$1S&e0X g$rest$11795$1S&e0X)
                       (if (null? g$rest$11795$1S&e0X)
                         g$a$11794$1S&e0X
                         (cons
                           g$a$11794$1S&e0X
                           (g$f$11793$1S&e0X
                             (car g$rest$11795$1S&e0X)
                             (cdr g$rest$11795$1S&e0X))))))))
           g$f$11793$1S&e0X)
         g$a$11791$1S&e0X
         g$rest$11792$1S&e0X))))
   (g$fold-left$11680$1S&e0X
     g$fold-left$11836$1S&e0X
     (case-lambda
       ((g$combine$11796$1S&e0X
          g$nil$11797$1S&e0X
          g$list1$11798$1S&e0X
          .
          g$lists$11799$1S&e0X)
        (if (null? g$list1$11798$1S&e0X)
          g$nil$11797$1S&e0X
          (if (null? g$lists$11799$1S&e0X)
            (g$fold-left$11680$1S&e0X
              g$combine$11796$1S&e0X
              (g$combine$11796$1S&e0X
                g$nil$11797$1S&e0X
                (car g$list1$11798$1S&e0X))
              (cdr g$list1$11798$1S&e0X))
            (begin
              '#f
              (apply
                g$fold-left$11680$1S&e0X
                (g$cons*$11679$1S&e0X
                  g$combine$11796$1S&e0X
                  (apply
                    g$combine$11796$1S&e0X
                    (g$cons*$11679$1S&e0X
                      g$nil$11797$1S&e0X
                      (car g$list1$11798$1S&e0X)
                      (g$map$11677$1S&e0X car g$lists$11799$1S&e0X)))
                  (cdr g$list1$11798$1S&e0X)
                  (g$map$11677$1S&e0X cdr g$lists$11799$1S&e0X)))))))))
   (g$fold-right$11681$1S&e0X
     g$fold-right$11837$1S&e0X
     (case-lambda
       ((g$combine$11800$1S&e0X
          g$nil$11801$1S&e0X
          g$list1$11802$1S&e0X
          .
          g$lists$11803$1S&e0X)
        (if (null? g$list1$11802$1S&e0X)
          g$nil$11801$1S&e0X
          (if (null? g$lists$11803$1S&e0X)
            (g$combine$11800$1S&e0X
              (car g$list1$11802$1S&e0X)
              (g$fold-right$11681$1S&e0X
                g$combine$11800$1S&e0X
                g$nil$11801$1S&e0X
                (cdr g$list1$11802$1S&e0X)))
            (begin
              '#f
              (apply
                g$combine$11800$1S&e0X
                (append
                  (list (car g$list1$11802$1S&e0X))
                  (g$map$11677$1S&e0X car g$lists$11803$1S&e0X)
                  (list
                    (apply
                      g$fold-right$11681$1S&e0X
                      (g$cons*$11679$1S&e0X
                        g$combine$11800$1S&e0X
                        g$nil$11801$1S&e0X
                        (cdr g$list1$11802$1S&e0X)
                        (g$map$11677$1S&e0X
                          cdr
                          g$lists$11803$1S&e0X))))))))))))
   (g$remove$11682$1S&e0X
     g$remove$11838$1S&e0X
     (case-lambda
       ((g$obj$11804$1S&e0X g$list$11805$1S&e0X)
        (g$remp$11663$1S&e0X
          (case-lambda
            ((g$x$11806$1S&e0X)
             (equal? g$obj$11804$1S&e0X g$x$11806$1S&e0X)))
          g$list$11805$1S&e0X))))
   (g$remv$11683$1S&e0X
     g$remv$11839$1S&e0X
     (case-lambda
       ((g$obj$11807$1S&e0X g$list$11808$1S&e0X)
        (g$remp$11663$1S&e0X
          (case-lambda
            ((g$x$11809$1S&e0X)
             (eqv? g$obj$11807$1S&e0X g$x$11809$1S&e0X)))
          g$list$11808$1S&e0X))))
   (g$remq$11684$1S&e0X
     g$remq$11840$1S&e0X
     (case-lambda
       ((g$obj$11810$1S&e0X g$list$11811$1S&e0X)
        (g$remp$11663$1S&e0X
          (case-lambda
            ((g$x$11812$1S&e0X)
             (eq? g$obj$11810$1S&e0X g$x$11812$1S&e0X)))
          g$list$11811$1S&e0X)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$char?$12325$1S&e0X
     g$char?$12662$1S&e0X
     (case-lambda
       ((g$obj$12478$1S&e0X)
        (clr-is-internal 'system.char g$obj$12478$1S&e0X))))
   (g$vector?$12326$1S&e0X
     g$vector?$12663$1S&e0X
     (case-lambda
       ((g$obj$12479$1S&e0X)
        (clr-is-internal 'system.object[] g$obj$12479$1S&e0X))))
   (g$bytevector?$12327$1S&e0X
     g$bytevector?$12664$1S&e0X
     (case-lambda
       ((g$obj$12480$1S&e0X)
        (clr-is-internal 'system.byte[] g$obj$12480$1S&e0X))))
   (g$symbol?$12328$1S&e0X
     g$symbol?$12665$1S&e0X
     (case-lambda
       ((g$obj$12481$1S&e0X)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$12481$1S&e0X))))
   (g$boolean?$12329$1S&e0X
     g$boolean?$12666$1S&e0X
     (case-lambda
       ((g$obj$12482$1S&e0X)
        (clr-is-internal 'system.boolean g$obj$12482$1S&e0X))))
   (g$procedure?$12330$1S&e0X
     g$procedure?$12667$1S&e0X
     (case-lambda
       ((g$obj$12483$1S&e0X)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$12483$1S&e0X))))
   (g$fixnum?$12331$1S&e0X
     g$fixnum?$12668$1S&e0X
     (case-lambda
       ((g$obj$12484$1S&e0X)
        (clr-is-internal 'system.int32 g$obj$12484$1S&e0X))))
   (g$flonum?$12332$1S&e0X
     g$flonum?$12669$1S&e0X
     (case-lambda
       ((g$obj$12485$1S&e0X)
        (clr-is-internal 'system.double g$obj$12485$1S&e0X))))
   (g$fixnum-width$12333$1S&e0X
     g$fixnum-width$12670$1S&e0X
     (case-lambda (() '32)))
   (g$div0$12334$1S&e0X
     g$div0$12671$1S&e0X
     (case-lambda
       ((g$x1$12486$1S&e0X g$x2$12487$1S&e0X)
        ((case-lambda
           ((g$d$12488$1S&e0X)
            ((case-lambda
               ((g$m$12489$1S&e0X)
                (if (g$<$13695$1S&e0X
                      g$m$12489$1S&e0X
                      (g$magnitude$13702$1S&e0X
                        (/ g$x2$12487$1S&e0X '2)))
                  g$d$12488$1S&e0X
                  (if (g$positive?$13686$1S&e0X g$x2$12487$1S&e0X)
                    (+ g$d$12488$1S&e0X '1)
                    (begin '#f (- g$d$12488$1S&e0X '1))))))
             (- g$x1$12486$1S&e0X
                (* g$d$12488$1S&e0X g$x2$12487$1S&e0X)))))
         (g$div$13719$1S&e0X g$x1$12486$1S&e0X g$x2$12487$1S&e0X)))))
   (g$mod$12335$1S&e0X
     g$mod$12672$1S&e0X
     (case-lambda
       ((g$x1$12490$1S&e0X g$x2$12491$1S&e0X)
        (- g$x1$12490$1S&e0X
           (* (g$div$13719$1S&e0X g$x1$12490$1S&e0X g$x2$12491$1S&e0X)
              g$x2$12491$1S&e0X)))))
   (g$mod0$12336$1S&e0X
     g$mod0$12673$1S&e0X
     (case-lambda
       ((g$x1$12492$1S&e0X g$x2$12493$1S&e0X)
        (- g$x1$12492$1S&e0X
           (* (g$div0$12334$1S&e0X g$x1$12492$1S&e0X g$x2$12493$1S&e0X)
              g$x2$12493$1S&e0X)))))
   (g$div-and-mod$12337$1S&e0X
     g$div-and-mod$12674$1S&e0X
     (case-lambda
       ((g$x1$12494$1S&e0X g$x2$12495$1S&e0X)
        ((case-lambda
           ((g$d$12496$1S&e0X)
            (values
              g$d$12496$1S&e0X
              (- g$x1$12494$1S&e0X
                 (* g$d$12496$1S&e0X g$x2$12495$1S&e0X)))))
         (g$div$13719$1S&e0X g$x1$12494$1S&e0X g$x2$12495$1S&e0X)))))
   (g$div0-and-mod0$12338$1S&e0X
     g$div0-and-mod0$12675$1S&e0X
     (case-lambda
       ((g$x1$12497$1S&e0X g$x2$12498$1S&e0X)
        ((case-lambda
           ((g$d$12499$1S&e0X)
            (values
              g$d$12499$1S&e0X
              (- g$x1$12497$1S&e0X
                 (* g$d$12499$1S&e0X g$x2$12498$1S&e0X)))))
         (g$div0$12334$1S&e0X g$x1$12497$1S&e0X g$x2$12498$1S&e0X)))))
   (g$list->vector$12339$1S&e0X
     g$list->vector$12676$1S&e0X
     (case-lambda
       ((g$lst$12500$1S&e0X) (apply vector g$lst$12500$1S&e0X))))
   (g$list->string$12340$1S&e0X
     g$list->string$12677$1S&e0X
     (case-lambda
       ((g$lst$12501$1S&e0X) (apply string g$lst$12501$1S&e0X))))
   (g$vector-ref$12341$1S&e0X
     g$vector-ref$12678$1S&e0X
     (case-lambda
       ((g$x$12502$1S&e0X g$n$12503$1S&e0X)
        (begin
          (if (not (g$vector?$12326$1S&e0X g$x$12502$1S&e0X))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$12502$1S&e0X)
            (void))
          (if (not (g$integer?$13681$1S&e0X g$n$12503$1S&e0X))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$12503$1S&e0X)
            (void))
          (if (g$negative?$13687$1S&e0X g$n$12503$1S&e0X)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$12503$1S&e0X)
            (void))
          ($vector-ref g$x$12502$1S&e0X g$n$12503$1S&e0X)))))
   (g$vector-set!$12342$1S&e0X
     g$vector-set!$12679$1S&e0X
     (case-lambda
       ((g$x$12504$1S&e0X g$n$12505$1S&e0X g$value$12506$1S&e0X)
        (begin
          (if (not (g$vector?$12326$1S&e0X g$x$12504$1S&e0X))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$12504$1S&e0X)
            (void))
          (if (not (g$integer?$13681$1S&e0X g$n$12505$1S&e0X))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$12505$1S&e0X)
            (void))
          (if (g$negative?$13687$1S&e0X g$n$12505$1S&e0X)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$12505$1S&e0X)
            (void))
          ($vector-set!
            g$x$12504$1S&e0X
            g$n$12505$1S&e0X
            g$value$12506$1S&e0X)
          (void)))))
   (g$vector-fill!$12343$1S&e0X
     g$vector-fill!$12680$1S&e0X
     (case-lambda
       ((g$vec$12507$1S&e0X g$val$12508$1S&e0X)
        ((case-lambda
           ((g$len$12509$1S&e0X)
            (letrec ((g$loop$12510$1S&e0X
                       (case-lambda
                         ((g$i$12511$1S&e0X)
                          (if (g$fx=?$16980$1S&e0X
                                g$i$12511$1S&e0X
                                g$len$12509$1S&e0X)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$12342$1S&e0X
                                g$vec$12507$1S&e0X
                                g$i$12511$1S&e0X
                                g$val$12508$1S&e0X)
                              (g$loop$12510$1S&e0X
                                (g$fx+$16967$1S&e0X
                                  g$i$12511$1S&e0X
                                  '1))))))))
              (g$loop$12510$1S&e0X '0))))
         (vector-length g$vec$12507$1S&e0X)))))
   (g$xcons$12344$1S&e0X
     g$xcons$12681$1S&e0X
     (case-lambda
       ((g$x$12512$1S&e0X g$y$12513$1S&e0X)
        (cons g$y$12513$1S&e0X g$x$12512$1S&e0X))))
   (g$reverse$12345$1S&e0X
     g$reverse$12682$1S&e0X
     (case-lambda
       ((g$lst$12514$1S&e0X)
        (g$fold-left$11836$1S&e0X
          g$xcons$12344$1S&e0X
          '()
          g$lst$12514$1S&e0X))))
   (g$caar$12346$1S&e0X
     g$caar$12683$1S&e0X
     (case-lambda ((g$x$12515$1S&e0X) (car (car g$x$12515$1S&e0X)))))
   (g$cadr$12347$1S&e0X
     g$cadr$12684$1S&e0X
     (case-lambda ((g$x$12516$1S&e0X) (car (cdr g$x$12516$1S&e0X)))))
   (g$cdar$12348$1S&e0X
     g$cdar$12685$1S&e0X
     (case-lambda ((g$x$12517$1S&e0X) (cdr (car g$x$12517$1S&e0X)))))
   (g$cddr$12349$1S&e0X
     g$cddr$12686$1S&e0X
     (case-lambda ((g$x$12518$1S&e0X) (cdr (cdr g$x$12518$1S&e0X)))))
   (g$caaar$12350$1S&e0X
     g$caaar$12687$1S&e0X
     (case-lambda
       ((g$x$12519$1S&e0X)
        (g$caar$12346$1S&e0X (car g$x$12519$1S&e0X)))))
   (g$caadr$12351$1S&e0X
     g$caadr$12688$1S&e0X
     (case-lambda
       ((g$x$12520$1S&e0X)
        (g$caar$12346$1S&e0X (cdr g$x$12520$1S&e0X)))))
   (g$cadar$12352$1S&e0X
     g$cadar$12689$1S&e0X
     (case-lambda
       ((g$x$12521$1S&e0X)
        (g$cadr$12347$1S&e0X (car g$x$12521$1S&e0X)))))
   (g$caddr$12353$1S&e0X
     g$caddr$12690$1S&e0X
     (case-lambda
       ((g$x$12522$1S&e0X)
        (g$cadr$12347$1S&e0X (cdr g$x$12522$1S&e0X)))))
   (g$cdaar$12354$1S&e0X
     g$cdaar$12691$1S&e0X
     (case-lambda
       ((g$x$12523$1S&e0X)
        (g$cdar$12348$1S&e0X (car g$x$12523$1S&e0X)))))
   (g$cdadr$12355$1S&e0X
     g$cdadr$12692$1S&e0X
     (case-lambda
       ((g$x$12524$1S&e0X)
        (g$cdar$12348$1S&e0X (cdr g$x$12524$1S&e0X)))))
   (g$cddar$12356$1S&e0X
     g$cddar$12693$1S&e0X
     (case-lambda
       ((g$x$12525$1S&e0X)
        (g$cddr$12349$1S&e0X (car g$x$12525$1S&e0X)))))
   (g$cdddr$12357$1S&e0X
     g$cdddr$12694$1S&e0X
     (case-lambda
       ((g$x$12526$1S&e0X)
        (g$cddr$12349$1S&e0X (cdr g$x$12526$1S&e0X)))))
   (g$caaaar$12358$1S&e0X
     g$caaaar$12695$1S&e0X
     (case-lambda
       ((g$x$12527$1S&e0X)
        (g$caaar$12350$1S&e0X (car g$x$12527$1S&e0X)))))
   (g$caaadr$12359$1S&e0X
     g$caaadr$12696$1S&e0X
     (case-lambda
       ((g$x$12528$1S&e0X)
        (g$caaar$12350$1S&e0X (cdr g$x$12528$1S&e0X)))))
   (g$caadar$12360$1S&e0X
     g$caadar$12697$1S&e0X
     (case-lambda
       ((g$x$12529$1S&e0X)
        (g$caadr$12351$1S&e0X (car g$x$12529$1S&e0X)))))
   (g$caaddr$12361$1S&e0X
     g$caaddr$12698$1S&e0X
     (case-lambda
       ((g$x$12530$1S&e0X)
        (g$caadr$12351$1S&e0X (cdr g$x$12530$1S&e0X)))))
   (g$cadaar$12362$1S&e0X
     g$cadaar$12699$1S&e0X
     (case-lambda
       ((g$x$12531$1S&e0X)
        (g$cadar$12352$1S&e0X (car g$x$12531$1S&e0X)))))
   (g$cadadr$12363$1S&e0X
     g$cadadr$12700$1S&e0X
     (case-lambda
       ((g$x$12532$1S&e0X)
        (g$cadar$12352$1S&e0X (cdr g$x$12532$1S&e0X)))))
   (g$caddar$12364$1S&e0X
     g$caddar$12701$1S&e0X
     (case-lambda
       ((g$x$12533$1S&e0X)
        (g$caddr$12353$1S&e0X (car g$x$12533$1S&e0X)))))
   (g$cadddr$12365$1S&e0X
     g$cadddr$12702$1S&e0X
     (case-lambda
       ((g$x$12534$1S&e0X)
        (g$caddr$12353$1S&e0X (cdr g$x$12534$1S&e0X)))))
   (g$cdaaar$12366$1S&e0X
     g$cdaaar$12703$1S&e0X
     (case-lambda
       ((g$x$12535$1S&e0X)
        (g$cdaar$12354$1S&e0X (car g$x$12535$1S&e0X)))))
   (g$cdaadr$12367$1S&e0X
     g$cdaadr$12704$1S&e0X
     (case-lambda
       ((g$x$12536$1S&e0X)
        (g$cdaar$12354$1S&e0X (cdr g$x$12536$1S&e0X)))))
   (g$cdadar$12368$1S&e0X
     g$cdadar$12705$1S&e0X
     (case-lambda
       ((g$x$12537$1S&e0X)
        (g$cdadr$12355$1S&e0X (car g$x$12537$1S&e0X)))))
   (g$cdaddr$12369$1S&e0X
     g$cdaddr$12706$1S&e0X
     (case-lambda
       ((g$x$12538$1S&e0X)
        (g$cdadr$12355$1S&e0X (cdr g$x$12538$1S&e0X)))))
   (g$cddaar$12370$1S&e0X
     g$cddaar$12707$1S&e0X
     (case-lambda
       ((g$x$12539$1S&e0X)
        (g$cddar$12356$1S&e0X (car g$x$12539$1S&e0X)))))
   (g$cddadr$12371$1S&e0X
     g$cddadr$12708$1S&e0X
     (case-lambda
       ((g$x$12540$1S&e0X)
        (g$cddar$12356$1S&e0X (cdr g$x$12540$1S&e0X)))))
   (g$cdddar$12372$1S&e0X
     g$cdddar$12709$1S&e0X
     (case-lambda
       ((g$x$12541$1S&e0X)
        (g$cdddr$12357$1S&e0X (car g$x$12541$1S&e0X)))))
   (g$cddddr$12373$1S&e0X
     g$cddddr$12710$1S&e0X
     (case-lambda
       ((g$x$12542$1S&e0X)
        (g$cdddr$12357$1S&e0X (cdr g$x$12542$1S&e0X)))))
   (g$even?$12374$1S&e0X
     g$even?$12711$1S&e0X
     (case-lambda
       ((g$n$12543$1S&e0X)
        (begin
          (if (not (g$integer-valued?$13684$1S&e0X g$n$12543$1S&e0X))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$12543$1S&e0X)
            (void))
          (g$=$13694$1S&e0X
            '0
            (g$mod$12335$1S&e0X g$n$12543$1S&e0X '2))))))
   (g$odd?$12375$1S&e0X
     g$odd?$12712$1S&e0X
     (case-lambda
       ((g$n$12544$1S&e0X)
        (begin
          (if (not (g$integer-valued?$13684$1S&e0X g$n$12544$1S&e0X))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$12544$1S&e0X)
            (void))
          (g$=$13694$1S&e0X
            '1
            (g$mod$12335$1S&e0X g$n$12544$1S&e0X '2))))))
   (g$max$12376$1S&e0X
     g$max$12713$1S&e0X
     (case-lambda
       ((g$a$12545$1S&e0X . g$rest$12546$1S&e0X)
        (begin
          (if (not (g$real-valued?$13682$1S&e0X g$a$12545$1S&e0X))
            (assertion-violation 'max '"not a real" g$a$12545$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            (case-lambda
              ((g$a$12547$1S&e0X g$b$12548$1S&e0X)
               ((case-lambda
                  ((g$r$12549$1S&e0X)
                   (if ((case-lambda
                          ((g$t$12550$1S&e0X)
                           (if g$t$12550$1S&e0X
                             g$t$12550$1S&e0X
                             (begin
                               '#f
                               (g$inexact?$13677$1S&e0X
                                 g$b$12548$1S&e0X)))))
                        (g$inexact?$13677$1S&e0X g$a$12547$1S&e0X))
                     (g$inexact$13688$1S&e0X g$r$12549$1S&e0X)
                     g$r$12549$1S&e0X)))
                (if (g$<$13695$1S&e0X g$a$12547$1S&e0X g$b$12548$1S&e0X)
                  g$b$12548$1S&e0X
                  g$a$12547$1S&e0X))))
            g$a$12545$1S&e0X
            g$rest$12546$1S&e0X)))))
   (g$min$12377$1S&e0X
     g$min$12714$1S&e0X
     (case-lambda
       ((g$a$12551$1S&e0X . g$rest$12552$1S&e0X)
        (begin
          (if (not (g$real-valued?$13682$1S&e0X g$a$12551$1S&e0X))
            (assertion-violation 'min '"not a real" g$a$12551$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            (case-lambda
              ((g$a$12553$1S&e0X g$b$12554$1S&e0X)
               ((case-lambda
                  ((g$r$12555$1S&e0X)
                   (if ((case-lambda
                          ((g$t$12556$1S&e0X)
                           (if g$t$12556$1S&e0X
                             g$t$12556$1S&e0X
                             (begin
                               '#f
                               (g$inexact?$13677$1S&e0X
                                 g$b$12554$1S&e0X)))))
                        (g$inexact?$13677$1S&e0X g$a$12553$1S&e0X))
                     (g$inexact$13688$1S&e0X g$r$12555$1S&e0X)
                     g$r$12555$1S&e0X)))
                (if (g$>$13697$1S&e0X g$a$12553$1S&e0X g$b$12554$1S&e0X)
                  g$b$12554$1S&e0X
                  g$a$12553$1S&e0X))))
            g$a$12551$1S&e0X
            g$rest$12552$1S&e0X)))))
   (g$gcd$12378$1S&e0X
     g$gcd$12715$1S&e0X
     (case-lambda
       (g$nums$12557$1S&e0X
        ((case-lambda
           ((g$t$12558$1S&e0X)
            (if (eqv? g$t$12558$1S&e0X '0)
              '0
              (if (eqv? g$t$12558$1S&e0X '1)
                ((case-lambda
                   ((g$n$12559$1S&e0X)
                    (begin
                      (if (not (g$integer-valued?$13684$1S&e0X
                                 g$n$12559$1S&e0X))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$12559$1S&e0X)
                        (void))
                      (g$abs$13720$1S&e0X g$n$12559$1S&e0X))))
                 (car g$nums$12557$1S&e0X))
                (if (eqv? g$t$12558$1S&e0X '2)
                  ((case-lambda
                     ((g$a$12560$1S&e0X g$b$12561$1S&e0X)
                      (begin
                        (if (not (g$integer-valued?$13684$1S&e0X
                                   g$a$12560$1S&e0X))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$12560$1S&e0X)
                          (void))
                        (if (not (g$integer-valued?$13684$1S&e0X
                                   g$b$12561$1S&e0X))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$12561$1S&e0X)
                          (void))
                        (if (g$zero?$13685$1S&e0X g$b$12561$1S&e0X)
                          (g$abs$13720$1S&e0X g$a$12560$1S&e0X)
                          (g$abs$13720$1S&e0X
                            (g$gcd$12378$1S&e0X
                              g$b$12561$1S&e0X
                              (g$mod$12335$1S&e0X
                                g$a$12560$1S&e0X
                                g$b$12561$1S&e0X)))))))
                   (car g$nums$12557$1S&e0X)
                   (g$cadr$12347$1S&e0X g$nums$12557$1S&e0X))
                  (begin
                    '#f
                    (g$fold-left$11836$1S&e0X
                      g$gcd$12378$1S&e0X
                      (g$abs$13720$1S&e0X (car g$nums$12557$1S&e0X))
                      (cdr g$nums$12557$1S&e0X))))))))
         (length g$nums$12557$1S&e0X)))))
   (g$lcm$12379$1S&e0X
     g$lcm$12716$1S&e0X
     (case-lambda
       (g$nums$12562$1S&e0X
        ((case-lambda
           ((g$t$12563$1S&e0X)
            (if (eqv? g$t$12563$1S&e0X '0)
              '1
              (if (eqv? g$t$12563$1S&e0X '1)
                ((case-lambda
                   ((g$n$12564$1S&e0X)
                    (begin
                      (if (not (g$integer-valued?$13684$1S&e0X
                                 g$n$12564$1S&e0X))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$12564$1S&e0X)
                        (void))
                      (g$abs$13720$1S&e0X g$n$12564$1S&e0X))))
                 (car g$nums$12562$1S&e0X))
                (if (eqv? g$t$12563$1S&e0X '2)
                  ((case-lambda
                     ((g$a$12565$1S&e0X g$b$12566$1S&e0X)
                      (begin
                        (if (not (g$integer-valued?$13684$1S&e0X
                                   g$a$12565$1S&e0X))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$12565$1S&e0X)
                          (void))
                        (if (not (g$integer-valued?$13684$1S&e0X
                                   g$b$12566$1S&e0X))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$12566$1S&e0X)
                          (void))
                        (if ((case-lambda
                               ((g$t$12567$1S&e0X)
                                (if g$t$12567$1S&e0X
                                  g$t$12567$1S&e0X
                                  (begin
                                    '#f
                                    (g$zero?$13685$1S&e0X
                                      g$b$12566$1S&e0X)))))
                             (g$zero?$13685$1S&e0X g$a$12565$1S&e0X))
                          '0
                          (g$abs$13720$1S&e0X
                            (* (/ g$a$12565$1S&e0X
                                  (g$gcd$12378$1S&e0X
                                    g$a$12565$1S&e0X
                                    g$b$12566$1S&e0X))
                               g$b$12566$1S&e0X))))))
                   (car g$nums$12562$1S&e0X)
                   (g$cadr$12347$1S&e0X g$nums$12562$1S&e0X))
                  (begin
                    '#f
                    (g$fold-left$11836$1S&e0X
                      g$lcm$12379$1S&e0X
                      (g$abs$13720$1S&e0X (car g$nums$12562$1S&e0X))
                      (cdr g$nums$12562$1S&e0X))))))))
         (length g$nums$12562$1S&e0X)))))
   (g$string=?$12420$1S&e0X
     g$string=?$12717$1S&e0X
     (case-lambda
       ((g$a$12568$1S&e0X g$b$12569$1S&e0X . g$rest$12570$1S&e0X)
        (begin
          (if (not (string? g$a$12568$1S&e0X))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$12568$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12571$1S&e0X)
               (begin
                 (if (not (string? g$x$12571$1S&e0X))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$12571$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12572$1S&e0X)
                     (begin
                       (set! g$a$12568$1S&e0X g$x$12571$1S&e0X)
                       g$r$12572$1S&e0X)))
                  (g$fx=?$16980$1S&e0X
                    (string-compare g$a$12568$1S&e0X g$x$12571$1S&e0X)
                    '0)))))
            (cons g$b$12569$1S&e0X g$rest$12570$1S&e0X))))))
   (g$string<?$12421$1S&e0X
     g$string<?$12718$1S&e0X
     (case-lambda
       ((g$a$12573$1S&e0X g$b$12574$1S&e0X . g$rest$12575$1S&e0X)
        (begin
          (if (not (string? g$a$12573$1S&e0X))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$12573$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12576$1S&e0X)
               (begin
                 (if (not (string? g$x$12576$1S&e0X))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$12576$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12577$1S&e0X)
                     (begin
                       (set! g$a$12573$1S&e0X g$x$12576$1S&e0X)
                       g$r$12577$1S&e0X)))
                  (g$fx<?$16981$1S&e0X
                    (string-compare g$a$12573$1S&e0X g$x$12576$1S&e0X)
                    '0)))))
            (cons g$b$12574$1S&e0X g$rest$12575$1S&e0X))))))
   (g$string>?$12422$1S&e0X
     g$string>?$12719$1S&e0X
     (case-lambda
       ((g$a$12578$1S&e0X g$b$12579$1S&e0X . g$rest$12580$1S&e0X)
        (begin
          (if (not (string? g$a$12578$1S&e0X))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$12578$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12581$1S&e0X)
               (begin
                 (if (not (string? g$x$12581$1S&e0X))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$12581$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12582$1S&e0X)
                     (begin
                       (set! g$a$12578$1S&e0X g$x$12581$1S&e0X)
                       g$r$12582$1S&e0X)))
                  (g$fx>?$16983$1S&e0X
                    (string-compare g$a$12578$1S&e0X g$x$12581$1S&e0X)
                    '0)))))
            (cons g$b$12579$1S&e0X g$rest$12580$1S&e0X))))))
   (g$string<=?$12423$1S&e0X
     g$string<=?$12720$1S&e0X
     (case-lambda
       ((g$a$12583$1S&e0X g$b$12584$1S&e0X . g$rest$12585$1S&e0X)
        (begin
          (if (not (string? g$a$12583$1S&e0X))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$12583$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12586$1S&e0X)
               (begin
                 (if (not (string? g$x$12586$1S&e0X))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$12586$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12587$1S&e0X)
                     (begin
                       (set! g$a$12583$1S&e0X g$x$12586$1S&e0X)
                       g$r$12587$1S&e0X)))
                  (g$fx<=?$16982$1S&e0X
                    (string-compare g$a$12583$1S&e0X g$x$12586$1S&e0X)
                    '0)))))
            (cons g$b$12584$1S&e0X g$rest$12585$1S&e0X))))))
   (g$string>=?$12424$1S&e0X
     g$string>=?$12721$1S&e0X
     (case-lambda
       ((g$a$12588$1S&e0X g$b$12589$1S&e0X . g$rest$12590$1S&e0X)
        (begin
          (if (not (string? g$a$12588$1S&e0X))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$12588$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12591$1S&e0X)
               (begin
                 (if (not (string? g$x$12591$1S&e0X))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$12591$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12592$1S&e0X)
                     (begin
                       (set! g$a$12588$1S&e0X g$x$12591$1S&e0X)
                       g$r$12592$1S&e0X)))
                  (g$fx>=?$16984$1S&e0X
                    (string-compare g$a$12588$1S&e0X g$x$12591$1S&e0X)
                    '0)))))
            (cons g$b$12589$1S&e0X g$rest$12590$1S&e0X))))))
   (g$symbol=?$12425$1S&e0X
     g$symbol=?$12722$1S&e0X
     (case-lambda
       ((g$a$12593$1S&e0X g$b$12594$1S&e0X . g$rest$12595$1S&e0X)
        (begin
          (if (not (g$symbol?$12328$1S&e0X g$a$12593$1S&e0X))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$12593$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12596$1S&e0X)
               (begin
                 (if (not (g$symbol?$12328$1S&e0X g$x$12596$1S&e0X))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$12596$1S&e0X)
                   (void))
                 (eq? g$a$12593$1S&e0X g$x$12596$1S&e0X))))
            (cons g$b$12594$1S&e0X g$rest$12595$1S&e0X))))))
   (g$boolean=?$12426$1S&e0X
     g$boolean=?$12723$1S&e0X
     (case-lambda
       ((g$a$12597$1S&e0X g$b$12598$1S&e0X . g$rest$12599$1S&e0X)
        (begin
          (if (not (g$boolean?$12329$1S&e0X g$a$12597$1S&e0X))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$12597$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12600$1S&e0X)
               (begin
                 (if (not (g$boolean?$12329$1S&e0X g$x$12600$1S&e0X))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$12600$1S&e0X)
                   (void))
                 (eq? g$a$12597$1S&e0X g$x$12600$1S&e0X))))
            (cons g$b$12598$1S&e0X g$rest$12599$1S&e0X))))))
   (g$char=?$12467$1S&e0X
     g$char=?$12724$1S&e0X
     (case-lambda
       ((g$a$12601$1S&e0X g$b$12602$1S&e0X . g$rest$12603$1S&e0X)
        (begin
          (if (not (g$char?$12325$1S&e0X g$a$12601$1S&e0X))
            (assertion-violation 'char=? '"not a char" g$a$12601$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12604$1S&e0X)
               (begin
                 (if (not (g$char?$12325$1S&e0X g$x$12604$1S&e0X))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$12604$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12605$1S&e0X)
                     (begin
                       (set! g$a$12601$1S&e0X g$x$12604$1S&e0X)
                       g$r$12605$1S&e0X)))
                  (g$fx=?$16980$1S&e0X
                    (char->integer g$a$12601$1S&e0X)
                    (char->integer g$x$12604$1S&e0X))))))
            (cons g$b$12602$1S&e0X g$rest$12603$1S&e0X))))))
   (g$char<?$12468$1S&e0X
     g$char<?$12725$1S&e0X
     (case-lambda
       ((g$a$12606$1S&e0X g$b$12607$1S&e0X . g$rest$12608$1S&e0X)
        (begin
          (if (not (g$char?$12325$1S&e0X g$a$12606$1S&e0X))
            (assertion-violation 'char<? '"not a char" g$a$12606$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12609$1S&e0X)
               (begin
                 (if (not (g$char?$12325$1S&e0X g$x$12609$1S&e0X))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$12609$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12610$1S&e0X)
                     (begin
                       (set! g$a$12606$1S&e0X g$x$12609$1S&e0X)
                       g$r$12610$1S&e0X)))
                  (g$fx<?$16981$1S&e0X
                    (char->integer g$a$12606$1S&e0X)
                    (char->integer g$x$12609$1S&e0X))))))
            (cons g$b$12607$1S&e0X g$rest$12608$1S&e0X))))))
   (g$char>?$12469$1S&e0X
     g$char>?$12726$1S&e0X
     (case-lambda
       ((g$a$12611$1S&e0X g$b$12612$1S&e0X . g$rest$12613$1S&e0X)
        (begin
          (if (not (g$char?$12325$1S&e0X g$a$12611$1S&e0X))
            (assertion-violation 'char>? '"not a char" g$a$12611$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12614$1S&e0X)
               (begin
                 (if (not (g$char?$12325$1S&e0X g$x$12614$1S&e0X))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$12614$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12615$1S&e0X)
                     (begin
                       (set! g$a$12611$1S&e0X g$x$12614$1S&e0X)
                       g$r$12615$1S&e0X)))
                  (g$fx>?$16983$1S&e0X
                    (char->integer g$a$12611$1S&e0X)
                    (char->integer g$x$12614$1S&e0X))))))
            (cons g$b$12612$1S&e0X g$rest$12613$1S&e0X))))))
   (g$char<=?$12470$1S&e0X
     g$char<=?$12727$1S&e0X
     (case-lambda
       ((g$a$12616$1S&e0X g$b$12617$1S&e0X . g$rest$12618$1S&e0X)
        (begin
          (if (not (g$char?$12325$1S&e0X g$a$12616$1S&e0X))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$12616$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12619$1S&e0X)
               (begin
                 (if (not (g$char?$12325$1S&e0X g$x$12619$1S&e0X))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$12619$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12620$1S&e0X)
                     (begin
                       (set! g$a$12616$1S&e0X g$x$12619$1S&e0X)
                       g$r$12620$1S&e0X)))
                  (g$fx<=?$16982$1S&e0X
                    (char->integer g$a$12616$1S&e0X)
                    (char->integer g$x$12619$1S&e0X))))))
            (cons g$b$12617$1S&e0X g$rest$12618$1S&e0X))))))
   (g$char>=?$12471$1S&e0X
     g$char>=?$12728$1S&e0X
     (case-lambda
       ((g$a$12621$1S&e0X g$b$12622$1S&e0X . g$rest$12623$1S&e0X)
        (begin
          (if (not (g$char?$12325$1S&e0X g$a$12621$1S&e0X))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$12621$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$12624$1S&e0X)
               (begin
                 (if (not (g$char?$12325$1S&e0X g$x$12624$1S&e0X))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$12624$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$12625$1S&e0X)
                     (begin
                       (set! g$a$12621$1S&e0X g$x$12624$1S&e0X)
                       g$r$12625$1S&e0X)))
                  (g$fx>=?$16984$1S&e0X
                    (char->integer g$a$12621$1S&e0X)
                    (char->integer g$x$12624$1S&e0X))))))
            (cons g$b$12622$1S&e0X g$rest$12623$1S&e0X))))))
   (g$rationalize$12472$1S&e0X
     g$rationalize$12729$1S&e0X
     (case-lambda
       ((g$x$12626$1S&e0X g$e$12627$1S&e0X)
        (if (if (g$infinite?$13675$1S&e0X g$x$12626$1S&e0X)
              (begin '#f (g$infinite?$13675$1S&e0X g$e$12627$1S&e0X))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$12628$1S&e0X)
              (if (if (g$exact?$13676$1S&e0X g$x$12626$1S&e0X)
                    (begin '#f (g$exact?$13676$1S&e0X g$e$12627$1S&e0X))
                    '#f)
                g$r$12628$1S&e0X
                (g$inexact$13688$1S&e0X g$r$12628$1S&e0X))))
           (apply
             /
             (g$find-ratio$12473$1S&e0X
               g$x$12626$1S&e0X
               g$e$12627$1S&e0X)))))))
   (g$find-ratio$12473$1S&e0X
     g$find-ratio$12730$1S&e0X
     (case-lambda
       ((g$x$12629$1S&e0X g$e$12630$1S&e0X)
        (g$find-ratio-between$12474$1S&e0X
          (- g$x$12629$1S&e0X g$e$12630$1S&e0X)
          (+ g$x$12629$1S&e0X g$e$12630$1S&e0X)))))
   (g$find-ratio-between$12474$1S&e0X
     g$find-ratio-between$12731$1S&e0X
     (case-lambda
       ((g$x$12631$1S&e0X g$y$12632$1S&e0X)
        (letrec* ((g$sr$12633$1S&e0X
                    (case-lambda
                      ((g$x$12635$1S&e0X g$y$12636$1S&e0X)
                       ((case-lambda
                          ((g$fx$12637$1S&e0X g$fy$12638$1S&e0X)
                           (if (g$>=$13698$1S&e0X
                                 g$fx$12637$1S&e0X
                                 g$x$12635$1S&e0X)
                             (list g$fx$12637$1S&e0X '1)
                             (if (g$=$13694$1S&e0X
                                   g$fx$12637$1S&e0X
                                   g$fy$12638$1S&e0X)
                               ((case-lambda
                                  ((g$rat$12639$1S&e0X)
                                   (list
                                     (+ (g$cadr$12347$1S&e0X
                                          g$rat$12639$1S&e0X)
                                        (* g$fx$12637$1S&e0X
                                           (car g$rat$12639$1S&e0X)))
                                     (car g$rat$12639$1S&e0X))))
                                (g$sr$12633$1S&e0X
                                  (/ (- g$y$12636$1S&e0X
                                        g$fy$12638$1S&e0X))
                                  (/ (- g$x$12635$1S&e0X
                                        g$fx$12637$1S&e0X))))
                               (begin
                                 '#f
                                 (list (+ '1 g$fx$12637$1S&e0X) '1))))))
                        (g$exact$13689$1S&e0X
                          (g$floor$13721$1S&e0X g$x$12635$1S&e0X))
                        (g$exact$13689$1S&e0X
                          (g$floor$13721$1S&e0X g$y$12636$1S&e0X)))))))
          (if (g$<$13695$1S&e0X g$y$12632$1S&e0X g$x$12631$1S&e0X)
            (g$find-ratio-between$12474$1S&e0X
              g$y$12632$1S&e0X
              g$x$12631$1S&e0X)
            (if (g$>=$13698$1S&e0X g$x$12631$1S&e0X g$y$12632$1S&e0X)
              (list g$x$12631$1S&e0X '1)
              (if (g$positive?$13686$1S&e0X g$x$12631$1S&e0X)
                (g$sr$12633$1S&e0X g$x$12631$1S&e0X g$y$12632$1S&e0X)
                (if (g$negative?$13687$1S&e0X g$y$12632$1S&e0X)
                  ((case-lambda
                     ((g$rat$12634$1S&e0X)
                      (list
                        (- (car g$rat$12634$1S&e0X))
                        (g$cadr$12347$1S&e0X g$rat$12634$1S&e0X))))
                   (g$sr$12633$1S&e0X
                     (- g$y$12632$1S&e0X)
                     (- g$x$12631$1S&e0X)))
                  (begin '#f '(0 1))))))))))
   (g$vector-map$12475$1S&e0X
     g$vector-map$12732$1S&e0X
     (case-lambda
       ((g$p$12640$1S&e0X g$vec1$12641$1S&e0X . g$vecs$12642$1S&e0X)
        ((case-lambda
           ((g$len$12643$1S&e0X)
            ((case-lambda
               ((g$res$12644$1S&e0X)
                (letrec ((g$loop$12645$1S&e0X
                           (case-lambda
                             ((g$i$12646$1S&e0X)
                              (if (g$fx=?$16980$1S&e0X
                                    g$i$12646$1S&e0X
                                    g$len$12643$1S&e0X)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$12644$1S&e0X)
                                (begin
                                  (g$vector-set!$12342$1S&e0X
                                    g$res$12644$1S&e0X
                                    g$i$12646$1S&e0X
                                    (if (null? g$vecs$12642$1S&e0X)
                                      (g$p$12640$1S&e0X
                                        (g$vector-ref$12341$1S&e0X
                                          g$vec1$12641$1S&e0X
                                          g$i$12646$1S&e0X))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$11833$1S&e0X
                                               (case-lambda
                                                 ((g$x$12647$1S&e0X)
                                                  (g$vector-ref$12341$1S&e0X
                                                    g$x$12647$1S&e0X
                                                    g$i$12646$1S&e0X)))
                                               (cons
                                                 g$vec1$12641$1S&e0X
                                                 g$vecs$12642$1S&e0X)))))
                                        g$p$12640$1S&e0X)))
                                  (g$loop$12645$1S&e0X
                                    (g$fx+$16967$1S&e0X
                                      g$i$12646$1S&e0X
                                      '1))))))))
                  (g$loop$12645$1S&e0X '0))))
             (make-vector g$len$12643$1S&e0X '()))))
         (vector-length g$vec1$12641$1S&e0X)))))
   (g$vector-for-each$12476$1S&e0X
     g$vector-for-each$12733$1S&e0X
     (case-lambda
       ((g$p$12648$1S&e0X g$vec1$12649$1S&e0X . g$vecs$12650$1S&e0X)
        ((case-lambda
           ((g$len$12651$1S&e0X)
            (letrec ((g$loop$12652$1S&e0X
                       (case-lambda
                         ((g$i$12653$1S&e0X)
                          (if (g$fx=?$16980$1S&e0X
                                g$i$12653$1S&e0X
                                g$len$12651$1S&e0X)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$12650$1S&e0X)
                                (g$p$12648$1S&e0X
                                  (g$vector-ref$12341$1S&e0X
                                    g$vec1$12649$1S&e0X
                                    g$i$12653$1S&e0X))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11833$1S&e0X
                                         (case-lambda
                                           ((g$x$12654$1S&e0X)
                                            (g$vector-ref$12341$1S&e0X
                                              g$x$12654$1S&e0X
                                              g$i$12653$1S&e0X)))
                                         (cons
                                           g$vec1$12649$1S&e0X
                                           g$vecs$12650$1S&e0X)))))
                                  g$p$12648$1S&e0X))
                              (g$loop$12652$1S&e0X
                                (g$fx+$16967$1S&e0X
                                  g$i$12653$1S&e0X
                                  '1))))))))
              (g$loop$12652$1S&e0X '0))))
         (vector-length g$vec1$12649$1S&e0X)))))
   (g$string-for-each$12477$1S&e0X
     g$string-for-each$12734$1S&e0X
     (case-lambda
       ((g$p$12655$1S&e0X g$str1$12656$1S&e0X . g$strs$12657$1S&e0X)
        ((case-lambda
           ((g$len$12658$1S&e0X)
            (letrec ((g$loop$12659$1S&e0X
                       (case-lambda
                         ((g$i$12660$1S&e0X)
                          (if (g$fx=?$16980$1S&e0X
                                g$i$12660$1S&e0X
                                g$len$12658$1S&e0X)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$12657$1S&e0X)
                                (g$p$12655$1S&e0X
                                  (string-ref
                                    g$str1$12656$1S&e0X
                                    g$i$12660$1S&e0X))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11833$1S&e0X
                                         (case-lambda
                                           ((g$x$12661$1S&e0X)
                                            (string-ref
                                              g$x$12661$1S&e0X
                                              g$i$12660$1S&e0X)))
                                         (cons
                                           g$str1$12656$1S&e0X
                                           g$strs$12657$1S&e0X)))))
                                  g$p$12655$1S&e0X))
                              (g$loop$12659$1S&e0X
                                (g$fx+$16967$1S&e0X
                                  g$i$12660$1S&e0X
                                  '1))))))))
              (g$loop$12659$1S&e0X '0))))
         (string-length g$str1$12656$1S&e0X))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$12736$1S&e0X
     g$using$12778$1S&e0X
     (clr-using-internal 'system))
   (g$using$12738$1S&e0X
     g$using$12779$1S&e0X
     (clr-using-internal 'system.collections))
   (g$hashtable?$12739$1S&e0X
     g$hashtable?$12780$1S&e0X
     (case-lambda
       ((g$obj$12752$1S&e0X)
        (clr-is-internal 'Hashtable g$obj$12752$1S&e0X))))
   (g$make-eq-hashtable$12740$1S&e0X
     g$make-eq-hashtable$12781$1S&e0X
     (case-lambda
       (() (g$make-eq-hashtable$12740$1S&e0X '32))
       ((g$k$12753$1S&e0X)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$12753$1S&e0X)))))
   (g$make-eqv-hashtable$12741$1S&e0X
     g$make-eqv-hashtable$12782$1S&e0X
     (case-lambda
       (() (g$make-eqv-hashtable$12741$1S&e0X '32))
       ((g$k$12754$1S&e0X)
        (make-hashtable eqv-hash eqv? g$k$12754$1S&e0X))))
   (g$hashtable-size$12742$1S&e0X
     g$hashtable-size$12783$1S&e0X
     (case-lambda
       ((g$ht$12755$1S&e0X)
        (clr-call-internal 'hashtable 'get_count g$ht$12755$1S&e0X))))
   (g$hashtable-ref$12743$1S&e0X
     g$hashtable-ref$12784$1S&e0X
     (case-lambda
       ((g$ht$12756$1S&e0X g$key$12757$1S&e0X g$default$12758$1S&e0X)
        ((case-lambda
           ((g$r$12759$1S&e0X)
            (if ((case-lambda
                   ((g$t$12760$1S&e0X)
                    (if g$t$12760$1S&e0X
                      g$t$12760$1S&e0X
                      (begin
                        '#f
                        (g$hashtable-contains?$12746$1S&e0X
                          g$ht$12756$1S&e0X
                          g$key$12757$1S&e0X)))))
                 (not (null? g$r$12759$1S&e0X)))
              g$r$12759$1S&e0X
              g$default$12758$1S&e0X)))
         (clr-call-internal
           'hashtable
           'get_item
           g$ht$12756$1S&e0X
           g$key$12757$1S&e0X)))))
   (g$hashtable-set!$12744$1S&e0X
     g$hashtable-set!$12785$1S&e0X
     (case-lambda
       ((g$ht$12761$1S&e0X g$key$12762$1S&e0X g$obj$12763$1S&e0X)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$12761$1S&e0X
          g$key$12762$1S&e0X
          g$obj$12763$1S&e0X))))
   (g$hashtable-delete!$12745$1S&e0X
     g$hashtable-delete!$12786$1S&e0X
     (case-lambda
       ((g$ht$12764$1S&e0X g$key$12765$1S&e0X)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$12764$1S&e0X
          g$key$12765$1S&e0X))))
   (g$hashtable-contains?$12746$1S&e0X
     g$hashtable-contains?$12787$1S&e0X
     (case-lambda
       ((g$ht$12766$1S&e0X g$key$12767$1S&e0X)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$12766$1S&e0X
          g$key$12767$1S&e0X))))
   (g$hashtable-update!$12747$1S&e0X
     g$hashtable-update!$12788$1S&e0X
     (case-lambda
       ((g$ht$12768$1S&e0X
          g$key$12769$1S&e0X
          g$proc$12770$1S&e0X
          g$default$12771$1S&e0X)
        (g$hashtable-set!$12744$1S&e0X
          g$ht$12768$1S&e0X
          g$key$12769$1S&e0X
          (g$proc$12770$1S&e0X
            (g$hashtable-ref$12743$1S&e0X
              g$ht$12768$1S&e0X
              g$key$12769$1S&e0X
              g$default$12771$1S&e0X))))))
   (g$hashtable-clear!$12748$1S&e0X
     g$hashtable-clear!$12789$1S&e0X
     (case-lambda
       ((g$ht$12772$1S&e0X)
        (g$hashtable-clear!$12748$1S&e0X g$ht$12772$1S&e0X '32))
       ((g$ht$12773$1S&e0X g$k$12774$1S&e0X)
        (clr-call-internal 'hashtable 'clear g$ht$12773$1S&e0X))))
   (g$string-hash$12749$1S&e0X
     g$string-hash$12790$1S&e0X
     (case-lambda
       ((g$str$12775$1S&e0X)
        (begin
          (if (not (string? g$str$12775$1S&e0X))
            (assertion-violation
              'string-hash
              '"not a string"
              g$str$12775$1S&e0X)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal 'StringComparer 'get_Ordinal '())
            (clr-call-internal
              'Object
              'ToString
              g$str$12775$1S&e0X))))))
   (g$string-ci-hash$12750$1S&e0X
     g$string-ci-hash$12791$1S&e0X
     (case-lambda
       ((g$str$12776$1S&e0X)
        (begin
          (if (not (string? g$str$12776$1S&e0X))
            (assertion-violation
              'string-ci-hash
              '"not a string"
              g$str$12776$1S&e0X)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal
              'StringComparer
              'get_InvariantCultureIgnoreCase
              '())
            (clr-call-internal
              'Object
              'ToString
              g$str$12776$1S&e0X))))))
   (g$symbol-hash$12751$1S&e0X
     g$symbol-hash$12792$1S&e0X
     (case-lambda
       ((g$sym$12777$1S&e0X)
        (begin
          (if (not (g$symbol?$12665$1S&e0X g$sym$12777$1S&e0X))
            (assertion-violation
              'symbol-hash
              '"not a symbol"
              g$sym$12777$1S&e0X)
            (void))
          (clr-call-internal
            'Object
            'GetHashCode
            g$sym$12777$1S&e0X))))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$12794$1S&e0X
     g$using$12801$1S&e0X
     (clr-using-internal 'system.io))
   (g$file-exists?$12795$1S&e0X
     g$file-exists?$12802$1S&e0X
     (case-lambda
       ((g$fn$12798$1S&e0X)
        (clr-call-internal 'file 'exists '() g$fn$12798$1S&e0X))))
   (g$delete-file$12796$1S&e0X
     g$delete-file$12803$1S&e0X
     (case-lambda
       ((g$fn$12799$1S&e0X)
        (clr-call-internal 'file 'delete '() g$fn$12799$1S&e0X))))
   (g$get-directory-name$12797$1S&e0X
     g$get-directory-name$12804$1S&e0X
     (case-lambda
       ((g$path$12800$1S&e0X)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$12800$1S&e0X)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$12805$1S&e0X
     g$native-endianness$13117$1S&e0X
     (case-lambda (() 'little)))
   (g$utf8$12806$1S&e0X
     g$utf8$13118$1S&e0X
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$12807$1S&e0X
     g$utf16le$13119$1S&e0X
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$12808$1S&e0X
     g$utf16be$13120$1S&e0X
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$12809$1S&e0X
     g$utf32le$13121$1S&e0X
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$12810$1S&e0X
     g$utf32be$13122$1S&e0X
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$get-bytes$12811$1S&e0X
     g$get-bytes$13123$1S&e0X
     (case-lambda
       ((g$enc$12887$1S&e0X g$str$12888$1S&e0X)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$12887$1S&e0X
          g$str$12888$1S&e0X))))
   (g$get-string$12812$1S&e0X
     g$get-string$13124$1S&e0X
     (case-lambda
       ((g$enc$12889$1S&e0X g$bv$12890$1S&e0X)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$12889$1S&e0X
          g$bv$12890$1S&e0X))))
   (g$byte->sbyte$12813$1S&e0X
     g$byte->sbyte$13125$1S&e0X
     (case-lambda
       ((g$b$12891$1S&e0X)
        (clr-cast-internal
          'System.SByte
          (clr-cast-internal 'System.Byte g$b$12891$1S&e0X)))))
   (g$->byte$12814$1S&e0X
     g$->byte$13126$1S&e0X
     (case-lambda
       ((g$k$12892$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$k$12892$1S&e0X))
            (assertion-violation '#f '"not a fixnum" g$k$12892$1S&e0X)
            (void))
          (if ((case-lambda
                 ((g$t$12893$1S&e0X)
                  (if g$t$12893$1S&e0X
                    g$t$12893$1S&e0X
                    (begin
                      '#f
                      (g$fx>?$16983$1S&e0X g$k$12892$1S&e0X '255)))))
               (g$fx<?$16981$1S&e0X g$k$12892$1S&e0X '-128))
            (assertion-violation
              '#f
              '"too big or small for octect or byte"
              g$k$12892$1S&e0X)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$12892$1S&e0X))))))
   (g$residual-->fixnum$12830$1S&e0X
     g$residual-->fixnum$13127$1S&e0X
     (case-lambda
       ((g$b$12914$1S&e0X)
        (clr-cast-internal
          'System.Int32
          (clr-cast-internal 'System.Byte g$b$12914$1S&e0X)))))
   (g$make-bytevector$12831$1S&e0X
     g$make-bytevector$13128$1S&e0X
     (case-lambda
       ((g$k$12915$1S&e0X)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$12915$1S&e0X)))
       ((g$k$12916$1S&e0X g$fill$12917$1S&e0X)
        ((case-lambda
           ((g$bv$12918$1S&e0X)
            (begin
              (g$bytevector-fill!$12834$1S&e0X
                g$bv$12918$1S&e0X
                g$fill$12917$1S&e0X)
              g$bv$12918$1S&e0X)))
         (g$make-bytevector$12831$1S&e0X g$k$12916$1S&e0X)))))
   (g$bytevector-length$12832$1S&e0X
     g$bytevector-length$13129$1S&e0X
     (case-lambda
       ((g$bv$12919$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12919$1S&e0X))
            (assertion-violation
              'bytevector-length
              '"not a bytevector"
              g$bv$12919$1S&e0X)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$12919$1S&e0X)))))
   (g$bytevector=?$12833$1S&e0X
     g$bytevector=?$13130$1S&e0X
     (case-lambda
       ((g$bv1$12920$1S&e0X g$bv2$12921$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv1$12920$1S&e0X))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv1$12920$1S&e0X)
            (void))
          (if (not (g$bytevector?$12664$1S&e0X g$bv2$12921$1S&e0X))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv2$12921$1S&e0X)
            (void))
          (if (eq? g$bv1$12920$1S&e0X g$bv2$12921$1S&e0X)
            '#t
            ((case-lambda
               ((g$t$12922$1S&e0X)
                (if g$t$12922$1S&e0X
                  g$t$12922$1S&e0X
                  (begin '#f (begin '#f '#f)))))
             ((case-lambda
                ((g$bl$12923$1S&e0X)
                 (if (g$=$13694$1S&e0X
                       g$bl$12923$1S&e0X
                       (g$bytevector-length$12832$1S&e0X
                         g$bv2$12921$1S&e0X))
                   ((letrec ((g$f$12924$1S&e0X
                               (case-lambda
                                 ((g$i$12925$1S&e0X)
                                  (if (g$=$13694$1S&e0X
                                        g$i$12925$1S&e0X
                                        g$bl$12923$1S&e0X)
                                    '#t
                                    (if (g$=$13694$1S&e0X
                                          (g$bytevector-u8-ref$12837$1S&e0X
                                            g$bv1$12920$1S&e0X
                                            g$i$12925$1S&e0X)
                                          (g$bytevector-u8-ref$12837$1S&e0X
                                            g$bv2$12921$1S&e0X
                                            g$i$12925$1S&e0X))
                                      (g$f$12924$1S&e0X
                                        (+ g$i$12925$1S&e0X '1))
                                      (begin '#f '#f)))))))
                      g$f$12924$1S&e0X)
                    '0)
                   '#f)))
              (g$bytevector-length$12832$1S&e0X
                g$bv1$12920$1S&e0X))))))))
   (g$bytevector-fill!$12834$1S&e0X
     g$bytevector-fill!$13131$1S&e0X
     (case-lambda
       ((g$bv$12926$1S&e0X g$fill$12927$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12926$1S&e0X))
            (assertion-violation
              'bytevector-fill!
              '"not a bytevector"
              g$bv$12926$1S&e0X)
            (void))
          ((case-lambda
             ((g$fill$12928$1S&e0X g$k$12929$1S&e0X)
              ((letrec ((g$f$12930$1S&e0X
                          (case-lambda
                            ((g$i$12931$1S&e0X)
                             (if (not (g$=$13694$1S&e0X
                                        g$i$12931$1S&e0X
                                        g$k$12929$1S&e0X))
                               (begin
                                 (g$bytevector-u8-set!$12838$1S&e0X
                                   g$bv$12926$1S&e0X
                                   g$i$12931$1S&e0X
                                   g$fill$12928$1S&e0X)
                                 (g$f$12930$1S&e0X
                                   (+ g$i$12931$1S&e0X '1)))
                               (void))))))
                 g$f$12930$1S&e0X)
               '0)))
           (g$->byte$12814$1S&e0X g$fill$12927$1S&e0X)
           (g$bytevector-length$12832$1S&e0X g$bv$12926$1S&e0X))))))
   (g$bytevector-copy!$12835$1S&e0X
     g$bytevector-copy!$13132$1S&e0X
     (case-lambda
       ((g$bv1$12932$1S&e0X
          g$s1$12933$1S&e0X
          g$bv2$12934$1S&e0X
          g$s2$12935$1S&e0X
          g$len$12936$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv1$12932$1S&e0X))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$12932$1S&e0X)
            (void))
          (if (not (g$bytevector?$12664$1S&e0X g$bv2$12934$1S&e0X))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$12934$1S&e0X)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$12932$1S&e0X
            g$s1$12933$1S&e0X
            g$bv2$12934$1S&e0X
            g$s2$12935$1S&e0X
            g$len$12936$1S&e0X)))))
   (g$bytevector-copy$12836$1S&e0X
     g$bytevector-copy$13133$1S&e0X
     (case-lambda
       ((g$bv$12937$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12937$1S&e0X))
            (assertion-violation
              'bytevector-copy
              '"not a bytevector"
              g$bv$12937$1S&e0X)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$12937$1S&e0X)))))
   (g$bytevector-u8-ref$12837$1S&e0X
     g$bytevector-u8-ref$13134$1S&e0X
     (case-lambda
       ((g$bv$12938$1S&e0X g$k$12939$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12938$1S&e0X))
            (assertion-violation
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$12938$1S&e0X)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$12938$1S&e0X g$k$12939$1S&e0X))))))
   (g$bytevector-u8-set!$12838$1S&e0X
     g$bytevector-u8-set!$13135$1S&e0X
     (case-lambda
       ((g$bv$12940$1S&e0X g$k$12941$1S&e0X g$value$12942$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12940$1S&e0X))
            (assertion-violation
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$12940$1S&e0X)
            (void))
          ($bytevector-set!
            g$bv$12940$1S&e0X
            g$k$12941$1S&e0X
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$12942$1S&e0X))))))
   (g$bytevector-s8-ref$12839$1S&e0X
     g$bytevector-s8-ref$13136$1S&e0X
     (case-lambda
       ((g$bv$12943$1S&e0X g$k$12944$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12943$1S&e0X))
            (assertion-violation
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$12943$1S&e0X)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(SByte)"
            '()
            (g$byte->sbyte$12813$1S&e0X
              ($bytevector-ref g$bv$12943$1S&e0X g$k$12944$1S&e0X)))))))
   (g$bytevector-s8-set!$12840$1S&e0X
     g$bytevector-s8-set!$13137$1S&e0X
     (case-lambda
       ((g$bv$12945$1S&e0X g$k$12946$1S&e0X g$value$12947$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12945$1S&e0X))
            (assertion-violation
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$12945$1S&e0X)
            (void))
          ($bytevector-set!
            g$bv$12945$1S&e0X
            g$k$12946$1S&e0X
            (g$->byte$12814$1S&e0X g$value$12947$1S&e0X))))))
   (g$bytevector->u8-list$12841$1S&e0X
     g$bytevector->u8-list$13138$1S&e0X
     (case-lambda
       ((g$bv$12948$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12948$1S&e0X))
            (assertion-violation
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$12948$1S&e0X)
            (void))
          ((case-lambda
             ((g$l$12949$1S&e0X)
              ((letrec ((g$f$12950$1S&e0X
                          (case-lambda
                            ((g$i$12951$1S&e0X g$a$12952$1S&e0X)
                             (if (g$negative?$13687$1S&e0X
                                   g$i$12951$1S&e0X)
                               g$a$12952$1S&e0X
                               (g$f$12950$1S&e0X
                                 (- g$i$12951$1S&e0X '1)
                                 (cons
                                   (g$bytevector-u8-ref$12837$1S&e0X
                                     g$bv$12948$1S&e0X
                                     g$i$12951$1S&e0X)
                                   g$a$12952$1S&e0X)))))))
                 g$f$12950$1S&e0X)
               (- g$l$12949$1S&e0X '1)
               '())))
           (g$bytevector-length$12832$1S&e0X g$bv$12948$1S&e0X))))))
   (g$u8-list->bytevector$12842$1S&e0X
     g$u8-list->bytevector$13139$1S&e0X
     (case-lambda
       ((g$lst$12953$1S&e0X)
        (begin
          (if (not (list? g$lst$12953$1S&e0X))
            (assertion-violation
              'u8-list->bytevector
              '"not a list"
              g$lst$12953$1S&e0X)
            (void))
          ((case-lambda
             ((g$l$12954$1S&e0X)
              ((case-lambda
                 ((g$bv$12955$1S&e0X)
                  ((letrec ((g$f$12956$1S&e0X
                              (case-lambda
                                ((g$i$12957$1S&e0X g$lst$12958$1S&e0X)
                                 (if (g$=$13694$1S&e0X
                                       g$i$12957$1S&e0X
                                       g$l$12954$1S&e0X)
                                   g$bv$12955$1S&e0X
                                   (begin
                                     (g$bytevector-u8-set!$12838$1S&e0X
                                       g$bv$12955$1S&e0X
                                       g$i$12957$1S&e0X
                                       (car g$lst$12958$1S&e0X))
                                     (g$f$12956$1S&e0X
                                       (+ g$i$12957$1S&e0X '1)
                                       (cdr g$lst$12958$1S&e0X))))))))
                     g$f$12956$1S&e0X)
                   '0
                   g$lst$12953$1S&e0X)))
               (g$make-bytevector$12831$1S&e0X g$l$12954$1S&e0X))))
           (length g$lst$12953$1S&e0X))))))
   (g$string->utf8$12843$1S&e0X
     g$string->utf8$13140$1S&e0X
     (case-lambda
       ((g$s$12959$1S&e0X)
        (begin
          (if (not (string? g$s$12959$1S&e0X))
            (assertion-violation
              'string->utf8
              '"not a string"
              g$s$12959$1S&e0X)
            (void))
          (g$get-bytes$12811$1S&e0X
            g$utf8$12806$1S&e0X
            g$s$12959$1S&e0X)))))
   (g$string->utf16$12844$1S&e0X
     g$string->utf16$13141$1S&e0X
     (case-lambda
       ((g$s$12960$1S&e0X)
        (g$string->utf16$12844$1S&e0X g$s$12960$1S&e0X 'big))
       ((g$s$12961$1S&e0X g$end$12962$1S&e0X)
        (begin
          (if (not (string? g$s$12961$1S&e0X))
            (assertion-violation
              'string->utf16
              '"not a string"
              g$s$12961$1S&e0X)
            (void))
          ((case-lambda
             ((g$t$12963$1S&e0X)
              (if (eqv? g$t$12963$1S&e0X 'big)
                (g$get-bytes$12811$1S&e0X
                  g$utf16be$12808$1S&e0X
                  g$s$12961$1S&e0X)
                (if (eqv? g$t$12963$1S&e0X 'little)
                  (g$get-bytes$12811$1S&e0X
                    g$utf16le$12807$1S&e0X
                    g$s$12961$1S&e0X)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf16
                      '"unknown endianness"
                      g$end$12962$1S&e0X))))))
           g$end$12962$1S&e0X)))))
   (g$string->utf32$12845$1S&e0X
     g$string->utf32$13142$1S&e0X
     (case-lambda
       ((g$s$12964$1S&e0X)
        (g$string->utf32$12845$1S&e0X g$s$12964$1S&e0X 'big))
       ((g$s$12965$1S&e0X g$end$12966$1S&e0X)
        (begin
          (if (not (string? g$s$12965$1S&e0X))
            (assertion-violation
              'string->utf32
              '"not a string"
              g$s$12965$1S&e0X)
            (void))
          ((case-lambda
             ((g$t$12967$1S&e0X)
              (if (eqv? g$t$12967$1S&e0X 'big)
                (g$get-bytes$12811$1S&e0X
                  g$utf32be$12810$1S&e0X
                  g$s$12965$1S&e0X)
                (if (eqv? g$t$12967$1S&e0X 'little)
                  (g$get-bytes$12811$1S&e0X
                    g$utf32le$12809$1S&e0X
                    g$s$12965$1S&e0X)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf32
                      '"unknown endianness"
                      g$end$12966$1S&e0X))))))
           g$end$12966$1S&e0X)))))
   (g$utf8->string$12846$1S&e0X
     g$utf8->string$13143$1S&e0X
     (case-lambda
       ((g$bv$12968$1S&e0X)
        (begin
          (if (not (g$bytevector?$12664$1S&e0X g$bv$12968$1S&e0X))
            (assertion-violation
              'utf8->string
              '"not a bytevector"
              g$bv$12968$1S&e0X)
            (void))
          (g$get-string$12812$1S&e0X
            g$utf8$12806$1S&e0X
            g$bv$12968$1S&e0X)))))
   (g$trim-front$12847$1S&e0X
     g$trim-front$13144$1S&e0X
     (case-lambda
       ((g$bv$12969$1S&e0X g$k$12970$1S&e0X)
        ((case-lambda
           ((g$d$12971$1S&e0X)
            (begin
              (g$bytevector-copy!$12835$1S&e0X
                g$bv$12969$1S&e0X
                g$k$12970$1S&e0X
                g$d$12971$1S&e0X
                '0
                (g$bytevector-length$12832$1S&e0X g$d$12971$1S&e0X))
              g$d$12971$1S&e0X)))
         (g$make-bytevector$12831$1S&e0X
           (- (g$bytevector-length$12832$1S&e0X g$bv$12969$1S&e0X)
              g$k$12970$1S&e0X))))))
   (g$utf16->string$12848$1S&e0X
     g$utf16->string$13145$1S&e0X
     (case-lambda
       ((g$bv$12972$1S&e0X g$end$12973$1S&e0X)
        (g$utf16->string$12848$1S&e0X
          g$bv$12972$1S&e0X
          g$end$12973$1S&e0X
          '#f))
       ((g$bv$12974$1S&e0X g$end$12975$1S&e0X g$endman?$12976$1S&e0X)
        (if g$endman?$12976$1S&e0X
          (if (eq? g$end$12975$1S&e0X 'big)
            (g$get-string$12812$1S&e0X
              g$utf16be$12808$1S&e0X
              g$bv$12974$1S&e0X)
            (g$get-string$12812$1S&e0X
              g$utf16le$12807$1S&e0X
              g$bv$12974$1S&e0X))
          ((case-lambda
             ((g$b0$12977$1S&e0X g$b1$12978$1S&e0X)
              (if (if (g$=$13694$1S&e0X '255 g$b0$12977$1S&e0X)
                    (begin
                      '#f
                      (g$=$13694$1S&e0X g$b1$12978$1S&e0X '254))
                    '#f)
                (g$utf16->string$12848$1S&e0X
                  (g$trim-front$12847$1S&e0X g$bv$12974$1S&e0X '2)
                  'little
                  '#t)
                (if (if (g$=$13694$1S&e0X '254 g$b0$12977$1S&e0X)
                      (begin
                        '#f
                        (g$=$13694$1S&e0X g$b1$12978$1S&e0X '255))
                      '#f)
                  (g$utf16->string$12848$1S&e0X
                    (g$trim-front$12847$1S&e0X g$bv$12974$1S&e0X '2)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf16->string$12848$1S&e0X
                      g$bv$12974$1S&e0X
                      g$end$12975$1S&e0X
                      '#t))))))
           (g$bytevector-u8-ref$12837$1S&e0X g$bv$12974$1S&e0X '0)
           (g$bytevector-u8-ref$12837$1S&e0X g$bv$12974$1S&e0X '1))))))
   (g$utf32->string$12849$1S&e0X
     g$utf32->string$13146$1S&e0X
     (case-lambda
       ((g$bv$12979$1S&e0X g$end$12980$1S&e0X)
        (g$utf32->string$12849$1S&e0X
          g$bv$12979$1S&e0X
          g$end$12980$1S&e0X
          '#f))
       ((g$bv$12981$1S&e0X g$end$12982$1S&e0X g$endman?$12983$1S&e0X)
        (if g$endman?$12983$1S&e0X
          (if (eq? g$end$12982$1S&e0X 'big)
            (g$get-string$12812$1S&e0X
              g$utf32be$12810$1S&e0X
              g$bv$12981$1S&e0X)
            (g$get-string$12812$1S&e0X
              g$utf32le$12809$1S&e0X
              g$bv$12981$1S&e0X))
          ((case-lambda
             ((g$b0$12984$1S&e0X
                g$b1$12985$1S&e0X
                g$b2$12986$1S&e0X
                g$b3$12987$1S&e0X)
              (if (if (g$=$13694$1S&e0X '255 g$b0$12984$1S&e0X)
                    (if (g$=$13694$1S&e0X g$b1$12985$1S&e0X '254)
                      (if (g$zero?$13685$1S&e0X g$b2$12986$1S&e0X)
                        (begin
                          '#f
                          (g$zero?$13685$1S&e0X g$b3$12987$1S&e0X))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$12849$1S&e0X
                  (g$trim-front$12847$1S&e0X g$bv$12981$1S&e0X '4)
                  'little
                  '#t)
                (if (if (g$zero?$13685$1S&e0X g$b0$12984$1S&e0X)
                      (if (g$zero?$13685$1S&e0X g$b1$12985$1S&e0X)
                        (if (g$=$13694$1S&e0X '254 g$b2$12986$1S&e0X)
                          (begin
                            '#f
                            (g$=$13694$1S&e0X g$b3$12987$1S&e0X '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$12849$1S&e0X
                    (g$trim-front$12847$1S&e0X g$bv$12981$1S&e0X '4)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf32->string$12849$1S&e0X
                      g$bv$12981$1S&e0X
                      g$end$12982$1S&e0X
                      '#t))))))
           (g$bytevector-u8-ref$12837$1S&e0X g$bv$12981$1S&e0X '0)
           (g$bytevector-u8-ref$12837$1S&e0X g$bv$12981$1S&e0X '1)
           (g$bytevector-u8-ref$12837$1S&e0X g$bv$12981$1S&e0X '2)
           (g$bytevector-u8-ref$12837$1S&e0X g$bv$12981$1S&e0X '3))))))
   (g$uint-list->bytevector$12850$1S&e0X
     g$uint-list->bytevector$13147$1S&e0X
     (case-lambda
       ((g$lst$12988$1S&e0X g$end$12989$1S&e0X g$size$12990$1S&e0X)
        (begin
          (if (g$negative?$13687$1S&e0X g$size$12990$1S&e0X)
            (assertion-violation
              'uint-list->bytevector
              '"invalid size"
              g$size$12990$1S&e0X)
            (void))
          ((case-lambda
             ((g$bv$12991$1S&e0X)
              ((letrec ((g$f$12992$1S&e0X
                          (case-lambda
                            ((g$i$12993$1S&e0X g$lst$12994$1S&e0X)
                             (if (null? g$lst$12994$1S&e0X)
                               g$bv$12991$1S&e0X
                               (begin
                                 (bytevector-uint-set!
                                   g$bv$12991$1S&e0X
                                   g$i$12993$1S&e0X
                                   (car g$lst$12994$1S&e0X)
                                   g$end$12989$1S&e0X
                                   g$size$12990$1S&e0X)
                                 (g$f$12992$1S&e0X
                                   (+ g$i$12993$1S&e0X
                                      g$size$12990$1S&e0X)
                                   (cdr g$lst$12994$1S&e0X))))))))
                 g$f$12992$1S&e0X)
               '0
               g$lst$12988$1S&e0X)))
           (g$make-bytevector$12831$1S&e0X
             (* (length g$lst$12988$1S&e0X) g$size$12990$1S&e0X)))))))
   (g$sint-list->bytevector$12851$1S&e0X
     g$sint-list->bytevector$13148$1S&e0X
     (case-lambda
       ((g$lst$12995$1S&e0X g$end$12996$1S&e0X g$size$12997$1S&e0X)
        (begin
          (if (g$negative?$13687$1S&e0X g$size$12997$1S&e0X)
            (assertion-violation
              'sint-list->bytevector
              '"invalid size"
              g$size$12997$1S&e0X)
            (void))
          ((case-lambda
             ((g$bv$12998$1S&e0X)
              ((letrec ((g$f$12999$1S&e0X
                          (case-lambda
                            ((g$i$13000$1S&e0X g$lst$13001$1S&e0X)
                             (if (null? g$lst$13001$1S&e0X)
                               g$bv$12998$1S&e0X
                               (begin
                                 (bytevector-sint-set!
                                   g$bv$12998$1S&e0X
                                   g$i$13000$1S&e0X
                                   (car g$lst$13001$1S&e0X)
                                   g$end$12996$1S&e0X
                                   g$size$12997$1S&e0X)
                                 (g$f$12999$1S&e0X
                                   (+ g$i$13000$1S&e0X
                                      g$size$12997$1S&e0X)
                                   (cdr g$lst$13001$1S&e0X))))))))
                 g$f$12999$1S&e0X)
               '0
               g$lst$12995$1S&e0X)))
           (g$make-bytevector$12831$1S&e0X
             (* (length g$lst$12995$1S&e0X) g$size$12997$1S&e0X)))))))
   (g$bytevector->uint-list$12852$1S&e0X
     g$bytevector->uint-list$13149$1S&e0X
     (case-lambda
       ((g$bv$13002$1S&e0X g$end$13003$1S&e0X g$size$13004$1S&e0X)
        (begin
          (if (g$negative?$13687$1S&e0X g$size$13004$1S&e0X)
            (assertion-violation
              'bytevector->uint-list
              '"invalid size"
              g$size$13004$1S&e0X)
            (void))
          ((letrec ((g$f$13005$1S&e0X
                      (case-lambda
                        ((g$l$13006$1S&e0X g$a$13007$1S&e0X)
                         (if (g$zero?$13685$1S&e0X g$l$13006$1S&e0X)
                           g$a$13007$1S&e0X
                           (g$f$13005$1S&e0X
                             (- g$l$13006$1S&e0X g$size$13004$1S&e0X)
                             (cons
                               (bytevector-uint-ref
                                 g$bv$13002$1S&e0X
                                 (- g$l$13006$1S&e0X
                                    g$size$13004$1S&e0X)
                                 g$end$13003$1S&e0X
                                 g$size$13004$1S&e0X)
                               g$a$13007$1S&e0X)))))))
             g$f$13005$1S&e0X)
           (g$bytevector-length$12832$1S&e0X g$bv$13002$1S&e0X)
           '())))))
   (g$bytevector->sint-list$12853$1S&e0X
     g$bytevector->sint-list$13150$1S&e0X
     (case-lambda
       ((g$bv$13008$1S&e0X g$end$13009$1S&e0X g$size$13010$1S&e0X)
        (begin
          (if (g$negative?$13687$1S&e0X g$size$13010$1S&e0X)
            (assertion-violation
              'bytevector->sint-list
              '"invalid size"
              g$size$13010$1S&e0X)
            (void))
          ((letrec ((g$f$13011$1S&e0X
                      (case-lambda
                        ((g$l$13012$1S&e0X g$a$13013$1S&e0X)
                         (if (g$zero?$13685$1S&e0X g$l$13012$1S&e0X)
                           g$a$13013$1S&e0X
                           (g$f$13011$1S&e0X
                             (- g$l$13012$1S&e0X g$size$13010$1S&e0X)
                             (cons
                               (bytevector-sint-ref
                                 g$bv$13008$1S&e0X
                                 (- g$l$13012$1S&e0X
                                    g$size$13010$1S&e0X)
                                 g$end$13009$1S&e0X
                                 g$size$13010$1S&e0X)
                               g$a$13013$1S&e0X)))))))
             g$f$13011$1S&e0X)
           (g$bytevector-length$12832$1S&e0X g$bv$13008$1S&e0X)
           '())))))
   (g$single->double$12854$1S&e0X
     g$single->double$13151$1S&e0X
     (case-lambda
       ((g$s$13014$1S&e0X)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$13014$1S&e0X))))
   (g$bytevector-ieee-single-ref$12855$1S&e0X
     g$bytevector-ieee-single-ref$13152$1S&e0X
     (case-lambda
       ((g$bv$13015$1S&e0X g$k$13016$1S&e0X g$end$13017$1S&e0X)
        ((case-lambda
           ((g$d$13018$1S&e0X)
            (begin
              (g$bytevector-copy!$12835$1S&e0X
                g$bv$13015$1S&e0X
                g$k$13016$1S&e0X
                g$d$13018$1S&e0X
                '0
                '4)
              (if (eq? g$end$13017$1S&e0X 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$13018$1S&e0X)
                (void))
              (g$single->double$12854$1S&e0X
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$13018$1S&e0X
                  '0)))))
         (g$make-bytevector$12831$1S&e0X '4)))))
   (g$bytevector-ieee-double-ref$12856$1S&e0X
     g$bytevector-ieee-double-ref$13153$1S&e0X
     (case-lambda
       ((g$bv$13019$1S&e0X g$k$13020$1S&e0X g$end$13021$1S&e0X)
        ((case-lambda
           ((g$d$13022$1S&e0X)
            (begin
              (g$bytevector-copy!$12835$1S&e0X
                g$bv$13019$1S&e0X
                g$k$13020$1S&e0X
                g$d$13022$1S&e0X
                '0
                '8)
              (if (eq? g$end$13021$1S&e0X 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$13022$1S&e0X)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$13022$1S&e0X
                '0))))
         (g$make-bytevector$12831$1S&e0X '8)))))
   (g$bytevector-ieee-single-set!$12857$1S&e0X
     g$bytevector-ieee-single-set!$13154$1S&e0X
     (case-lambda
       ((g$bv$13023$1S&e0X
          g$k$13024$1S&e0X
          g$value$13025$1S&e0X
          g$end$13026$1S&e0X)
        ((case-lambda
           ((g$value$13027$1S&e0X)
            ((case-lambda
               ((g$data$13028$1S&e0X)
                (begin
                  (if (eq? g$end$13026$1S&e0X 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$13028$1S&e0X)
                    (void))
                  (g$bytevector-copy!$12835$1S&e0X
                    g$data$13028$1S&e0X
                    '0
                    g$bv$13023$1S&e0X
                    g$k$13024$1S&e0X
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$13027$1S&e0X))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$13025$1S&e0X)))))
   (g$bytevector-ieee-double-set!$12858$1S&e0X
     g$bytevector-ieee-double-set!$13155$1S&e0X
     (case-lambda
       ((g$bv$13029$1S&e0X
          g$k$13030$1S&e0X
          g$value$13031$1S&e0X
          g$end$13032$1S&e0X)
        ((case-lambda
           ((g$value$13033$1S&e0X)
            ((case-lambda
               ((g$data$13034$1S&e0X)
                (begin
                  (if (eq? g$end$13032$1S&e0X 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$13034$1S&e0X)
                    (void))
                  (g$bytevector-copy!$12835$1S&e0X
                    g$data$13034$1S&e0X
                    '0
                    g$bv$13029$1S&e0X
                    g$k$13030$1S&e0X
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$13033$1S&e0X))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$13031$1S&e0X)))))
   (g$bytevector-u16-ref$12859$1S&e0X
     g$bytevector-u16-ref$13156$1S&e0X
     (case-lambda
       ((g$bytevector$13035$1S&e0X
          g$k$13036$1S&e0X
          g$endianness$13037$1S&e0X)
        (bytevector-uint-ref
          g$bytevector$13035$1S&e0X
          g$k$13036$1S&e0X
          g$endianness$13037$1S&e0X
          '2))))
   (g$bytevector-s16-ref$12860$1S&e0X
     g$bytevector-s16-ref$13157$1S&e0X
     (case-lambda
       ((g$bytevector$13038$1S&e0X
          g$k$13039$1S&e0X
          g$endianness$13040$1S&e0X)
        (bytevector-sint-ref
          g$bytevector$13038$1S&e0X
          g$k$13039$1S&e0X
          g$endianness$13040$1S&e0X
          '2))))
   (g$bytevector-u16-native-ref$12861$1S&e0X
     g$bytevector-u16-native-ref$13158$1S&e0X
     (case-lambda
       ((g$bytevector$13041$1S&e0X g$k$13042$1S&e0X)
        (bytevector-uint-ref
          g$bytevector$13041$1S&e0X
          g$k$13042$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '2))))
   (g$bytevector-s16-native-ref$12862$1S&e0X
     g$bytevector-s16-native-ref$13159$1S&e0X
     (case-lambda
       ((g$bytevector$13043$1S&e0X g$k$13044$1S&e0X)
        (bytevector-sint-ref
          g$bytevector$13043$1S&e0X
          g$k$13044$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '2))))
   (g$bytevector-u16-set!$12863$1S&e0X
     g$bytevector-u16-set!$13160$1S&e0X
     (case-lambda
       ((g$bytevector$13045$1S&e0X
          g$k$13046$1S&e0X
          g$n$13047$1S&e0X
          g$endianness$13048$1S&e0X)
        (bytevector-uint-set!
          g$bytevector$13045$1S&e0X
          g$k$13046$1S&e0X
          g$n$13047$1S&e0X
          g$endianness$13048$1S&e0X
          '2))))
   (g$bytevector-s16-set!$12864$1S&e0X
     g$bytevector-s16-set!$13161$1S&e0X
     (case-lambda
       ((g$bytevector$13049$1S&e0X
          g$k$13050$1S&e0X
          g$n$13051$1S&e0X
          g$endianness$13052$1S&e0X)
        (bytevector-sint-set!
          g$bytevector$13049$1S&e0X
          g$k$13050$1S&e0X
          g$n$13051$1S&e0X
          g$endianness$13052$1S&e0X
          '2))))
   (g$bytevector-u16-native-set!$12865$1S&e0X
     g$bytevector-u16-native-set!$13162$1S&e0X
     (case-lambda
       ((g$bytevector$13053$1S&e0X g$k$13054$1S&e0X g$n$13055$1S&e0X)
        (bytevector-uint-set!
          g$bytevector$13053$1S&e0X
          g$k$13054$1S&e0X
          g$n$13055$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '2))))
   (g$bytevector-s16-native-set!$12866$1S&e0X
     g$bytevector-s16-native-set!$13163$1S&e0X
     (case-lambda
       ((g$bytevector$13056$1S&e0X g$k$13057$1S&e0X g$n$13058$1S&e0X)
        (bytevector-sint-set!
          g$bytevector$13056$1S&e0X
          g$k$13057$1S&e0X
          g$n$13058$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '2))))
   (g$bytevector-u32-ref$12867$1S&e0X
     g$bytevector-u32-ref$13164$1S&e0X
     (case-lambda
       ((g$bytevector$13059$1S&e0X
          g$k$13060$1S&e0X
          g$endianness$13061$1S&e0X)
        (bytevector-uint-ref
          g$bytevector$13059$1S&e0X
          g$k$13060$1S&e0X
          g$endianness$13061$1S&e0X
          '4))))
   (g$bytevector-s32-ref$12868$1S&e0X
     g$bytevector-s32-ref$13165$1S&e0X
     (case-lambda
       ((g$bytevector$13062$1S&e0X
          g$k$13063$1S&e0X
          g$endianness$13064$1S&e0X)
        (bytevector-sint-ref
          g$bytevector$13062$1S&e0X
          g$k$13063$1S&e0X
          g$endianness$13064$1S&e0X
          '4))))
   (g$bytevector-u32-native-ref$12869$1S&e0X
     g$bytevector-u32-native-ref$13166$1S&e0X
     (case-lambda
       ((g$bytevector$13065$1S&e0X g$k$13066$1S&e0X)
        (bytevector-uint-ref
          g$bytevector$13065$1S&e0X
          g$k$13066$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '4))))
   (g$bytevector-s32-native-ref$12870$1S&e0X
     g$bytevector-s32-native-ref$13167$1S&e0X
     (case-lambda
       ((g$bytevector$13067$1S&e0X g$k$13068$1S&e0X)
        (bytevector-sint-ref
          g$bytevector$13067$1S&e0X
          g$k$13068$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '4))))
   (g$bytevector-u32-set!$12871$1S&e0X
     g$bytevector-u32-set!$13168$1S&e0X
     (case-lambda
       ((g$bytevector$13069$1S&e0X
          g$k$13070$1S&e0X
          g$n$13071$1S&e0X
          g$endianness$13072$1S&e0X)
        (bytevector-uint-set!
          g$bytevector$13069$1S&e0X
          g$k$13070$1S&e0X
          g$n$13071$1S&e0X
          g$endianness$13072$1S&e0X
          '4))))
   (g$bytevector-s32-set!$12872$1S&e0X
     g$bytevector-s32-set!$13169$1S&e0X
     (case-lambda
       ((g$bytevector$13073$1S&e0X
          g$k$13074$1S&e0X
          g$n$13075$1S&e0X
          g$endianness$13076$1S&e0X)
        (bytevector-sint-set!
          g$bytevector$13073$1S&e0X
          g$k$13074$1S&e0X
          g$n$13075$1S&e0X
          g$endianness$13076$1S&e0X
          '4))))
   (g$bytevector-u32-native-set!$12873$1S&e0X
     g$bytevector-u32-native-set!$13170$1S&e0X
     (case-lambda
       ((g$bytevector$13077$1S&e0X g$k$13078$1S&e0X g$n$13079$1S&e0X)
        (bytevector-uint-set!
          g$bytevector$13077$1S&e0X
          g$k$13078$1S&e0X
          g$n$13079$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '4))))
   (g$bytevector-s32-native-set!$12874$1S&e0X
     g$bytevector-s32-native-set!$13171$1S&e0X
     (case-lambda
       ((g$bytevector$13080$1S&e0X g$k$13081$1S&e0X g$n$13082$1S&e0X)
        (bytevector-sint-set!
          g$bytevector$13080$1S&e0X
          g$k$13081$1S&e0X
          g$n$13082$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '4))))
   (g$bytevector-u64-ref$12875$1S&e0X
     g$bytevector-u64-ref$13172$1S&e0X
     (case-lambda
       ((g$bytevector$13083$1S&e0X
          g$k$13084$1S&e0X
          g$endianness$13085$1S&e0X)
        (bytevector-uint-ref
          g$bytevector$13083$1S&e0X
          g$k$13084$1S&e0X
          g$endianness$13085$1S&e0X
          '8))))
   (g$bytevector-s64-ref$12876$1S&e0X
     g$bytevector-s64-ref$13173$1S&e0X
     (case-lambda
       ((g$bytevector$13086$1S&e0X
          g$k$13087$1S&e0X
          g$endianness$13088$1S&e0X)
        (bytevector-sint-ref
          g$bytevector$13086$1S&e0X
          g$k$13087$1S&e0X
          g$endianness$13088$1S&e0X
          '8))))
   (g$bytevector-u64-native-ref$12877$1S&e0X
     g$bytevector-u64-native-ref$13174$1S&e0X
     (case-lambda
       ((g$bytevector$13089$1S&e0X g$k$13090$1S&e0X)
        (bytevector-uint-ref
          g$bytevector$13089$1S&e0X
          g$k$13090$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '8))))
   (g$bytevector-s64-native-ref$12878$1S&e0X
     g$bytevector-s64-native-ref$13175$1S&e0X
     (case-lambda
       ((g$bytevector$13091$1S&e0X g$k$13092$1S&e0X)
        (bytevector-sint-ref
          g$bytevector$13091$1S&e0X
          g$k$13092$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '8))))
   (g$bytevector-u64-set!$12879$1S&e0X
     g$bytevector-u64-set!$13176$1S&e0X
     (case-lambda
       ((g$bytevector$13093$1S&e0X
          g$k$13094$1S&e0X
          g$n$13095$1S&e0X
          g$endianness$13096$1S&e0X)
        (bytevector-uint-set!
          g$bytevector$13093$1S&e0X
          g$k$13094$1S&e0X
          g$n$13095$1S&e0X
          g$endianness$13096$1S&e0X
          '8))))
   (g$bytevector-s64-set!$12880$1S&e0X
     g$bytevector-s64-set!$13177$1S&e0X
     (case-lambda
       ((g$bytevector$13097$1S&e0X
          g$k$13098$1S&e0X
          g$n$13099$1S&e0X
          g$endianness$13100$1S&e0X)
        (bytevector-sint-set!
          g$bytevector$13097$1S&e0X
          g$k$13098$1S&e0X
          g$n$13099$1S&e0X
          g$endianness$13100$1S&e0X
          '8))))
   (g$bytevector-u64-native-set!$12881$1S&e0X
     g$bytevector-u64-native-set!$13178$1S&e0X
     (case-lambda
       ((g$bytevector$13101$1S&e0X g$k$13102$1S&e0X g$n$13103$1S&e0X)
        (bytevector-uint-set!
          g$bytevector$13101$1S&e0X
          g$k$13102$1S&e0X
          g$n$13103$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '8))))
   (g$bytevector-s64-native-set!$12882$1S&e0X
     g$bytevector-s64-native-set!$13179$1S&e0X
     (case-lambda
       ((g$bytevector$13104$1S&e0X g$k$13105$1S&e0X g$n$13106$1S&e0X)
        (bytevector-sint-set!
          g$bytevector$13104$1S&e0X
          g$k$13105$1S&e0X
          g$n$13106$1S&e0X
          (g$native-endianness$12805$1S&e0X)
          '8))))
   (g$bytevector-ieee-single-native-ref$12883$1S&e0X
     g$bytevector-ieee-single-native-ref$13180$1S&e0X
     (case-lambda
       ((g$bytevector$13107$1S&e0X g$k$13108$1S&e0X)
        (if (not (g$zero?$13685$1S&e0X
                   (g$mod$12672$1S&e0X g$k$13108$1S&e0X '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$13108$1S&e0X)
          (g$bytevector-ieee-single-ref$12855$1S&e0X
            g$bytevector$13107$1S&e0X
            g$k$13108$1S&e0X
            (g$native-endianness$12805$1S&e0X))))))
   (g$bytevector-ieee-double-native-ref$12884$1S&e0X
     g$bytevector-ieee-double-native-ref$13181$1S&e0X
     (case-lambda
       ((g$bytevector$13109$1S&e0X g$k$13110$1S&e0X)
        (if (not (g$zero?$13685$1S&e0X
                   (g$mod$12672$1S&e0X g$k$13110$1S&e0X '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$13110$1S&e0X)
          (g$bytevector-ieee-double-ref$12856$1S&e0X
            g$bytevector$13109$1S&e0X
            g$k$13110$1S&e0X
            (g$native-endianness$12805$1S&e0X))))))
   (g$bytevector-ieee-single-native-set!$12885$1S&e0X
     g$bytevector-ieee-single-native-set!$13182$1S&e0X
     (case-lambda
       ((g$bytevector$13111$1S&e0X g$k$13112$1S&e0X g$x$13113$1S&e0X)
        (if (not (g$zero?$13685$1S&e0X
                   (g$mod$12672$1S&e0X g$k$13112$1S&e0X '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$13112$1S&e0X)
          (g$bytevector-ieee-single-set!$12857$1S&e0X
            g$bytevector$13111$1S&e0X
            g$k$13112$1S&e0X
            g$x$13113$1S&e0X
            (g$native-endianness$12805$1S&e0X))))))
   (g$bytevector-ieee-double-native-set!$12886$1S&e0X
     g$bytevector-ieee-double-native-set!$13183$1S&e0X
     (case-lambda
       ((g$bytevector$13114$1S&e0X g$k$13115$1S&e0X g$x$13116$1S&e0X)
        (if (not (g$zero?$13685$1S&e0X
                   (g$mod$12672$1S&e0X g$k$13115$1S&e0X '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$13115$1S&e0X)
          (g$bytevector-ieee-double-set!$12858$1S&e0X
            g$bytevector$13114$1S&e0X
            g$k$13115$1S&e0X
            g$x$13116$1S&e0X
            (g$native-endianness$12805$1S&e0X)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$13184$1S&e0X
     g$bignum?$13646$1S&e0X
     (case-lambda
       ((g$obj$13397$1S&e0X)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$13397$1S&e0X))))
   (g$rectnum?$13185$1S&e0X
     g$rectnum?$13647$1S&e0X
     (case-lambda
       ((g$obj$13398$1S&e0X)
        (clr-is-internal
          'IronScheme.Runtime.ComplexFraction
          g$obj$13398$1S&e0X))))
   (g$make-rectnum$13186$1S&e0X
     g$make-rectnum$13648$1S&e0X
     (case-lambda
       ((g$r1$13399$1S&e0X g$r2$13400$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'Make
          '()
          g$r1$13399$1S&e0X
          g$r2$13400$1S&e0X))))
   (g$rectnum-imag-part$13187$1S&e0X
     g$rectnum-imag-part$13649$1S&e0X
     (case-lambda
       ((g$c$13401$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Imag
          g$c$13401$1S&e0X))))
   (g$rectnum-real-part$13188$1S&e0X
     g$rectnum-real-part$13650$1S&e0X
     (case-lambda
       ((g$c$13402$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Real
          g$c$13402$1S&e0X))))
   (g$ratnum?$13189$1S&e0X
     g$ratnum?$13651$1S&e0X
     (case-lambda
       ((g$obj$13403$1S&e0X)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$13403$1S&e0X))))
   (g$ratnum-denominator$13190$1S&e0X
     g$ratnum-denominator$13652$1S&e0X
     (case-lambda
       ((g$rat$13404$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$13404$1S&e0X))))
   (g$ratnum-numerator$13191$1S&e0X
     g$ratnum-numerator$13653$1S&e0X
     (case-lambda
       ((g$rat$13405$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$13405$1S&e0X))))
   (g$complexnum?$13192$1S&e0X
     g$complexnum?$13654$1S&e0X
     (case-lambda
       ((g$obj$13406$1S&e0X)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$13406$1S&e0X))))
   (g$make-complexnum$13193$1S&e0X
     g$make-complexnum$13655$1S&e0X
     (case-lambda
       ((g$r1$13407$1S&e0X g$r2$13408$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$13407$1S&e0X
          g$r2$13408$1S&e0X))))
   (g$complexnum-imag-part$13194$1S&e0X
     g$complexnum-imag-part$13656$1S&e0X
     (case-lambda
       ((g$c$13409$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$13409$1S&e0X))))
   (g$complexnum-real-part$13195$1S&e0X
     g$complexnum-real-part$13657$1S&e0X
     (case-lambda
       ((g$c$13410$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$13410$1S&e0X))))
   (g$bignum/$13196$1S&e0X
     g$bignum/$13658$1S&e0X
     (case-lambda
       ((g$a$13411$1S&e0X g$b$13412$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$13411$1S&e0X
          g$b$13412$1S&e0X))))
   (g$bignum%$13197$1S&e0X
     g$bignum%$13659$1S&e0X
     (case-lambda
       ((g$a$13413$1S&e0X g$b$13414$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$13413$1S&e0X
          g$b$13414$1S&e0X))))
   (g$bignum->fixnum$13198$1S&e0X
     g$bignum->fixnum$13660$1S&e0X
     (case-lambda
       ((g$b$13415$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$13415$1S&e0X))))
   (g$flonum->ratnum$13199$1S&e0X
     g$flonum->ratnum$13661$1S&e0X
     (case-lambda
       ((g$f$13416$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$13416$1S&e0X))))
   (g$ratnum->flonum$13200$1S&e0X
     g$ratnum->flonum$13662$1S&e0X
     (case-lambda
       ((g$r$13417$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$13417$1S&e0X
          '()))))
   (g$fixnum->bignum$13201$1S&e0X
     g$fixnum->bignum$13663$1S&e0X
     (case-lambda
       ((g$f$13418$1S&e0X)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$13418$1S&e0X))))
   (g$real->complexnum$13202$1S&e0X
     g$real->complexnum$13664$1S&e0X
     (case-lambda
       ((g$num$13419$1S&e0X)
        (if (g$complexnum?$13192$1S&e0X g$num$13419$1S&e0X)
          g$num$13419$1S&e0X
          (g$make-complexnum$13193$1S&e0X
            (g$inexact$13226$1S&e0X g$num$13419$1S&e0X)
            '0.0)))))
   (g$complexnum->rectnum$13203$1S&e0X
     g$complexnum->rectnum$13665$1S&e0X
     (case-lambda
       ((g$num$13420$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          '"op_Implicit(Microsoft.Scripting.Math.Complex64)"
          '()
          g$num$13420$1S&e0X))))
   (g$rectnum->complexnum$13204$1S&e0X
     g$rectnum->complexnum$13666$1S&e0X
     (case-lambda
       ((g$num$13421$1S&e0X)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'ToComplex64
          g$num$13421$1S&e0X))))
   (g$->fixnum$13205$1S&e0X
     g$->fixnum$13667$1S&e0X
     (case-lambda
       ((g$num$13422$1S&e0X)
        (if (g$fixnum?$12668$1S&e0X g$num$13422$1S&e0X)
          g$num$13422$1S&e0X
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$13422$1S&e0X)))))
   (g$->ratnum$13206$1S&e0X
     g$->ratnum$13668$1S&e0X
     (case-lambda
       ((g$num$13423$1S&e0X)
        (if (g$ratnum?$13189$1S&e0X g$num$13423$1S&e0X)
          g$num$13423$1S&e0X
          (if (g$real?$13217$1S&e0X g$num$13423$1S&e0X)
            (g$flonum->ratnum$13199$1S&e0X
              (g$real->flonum$13208$1S&e0X g$num$13423$1S&e0X))
            (begin
              '#f
              (assertion-violation
                '->ratnum
                '"not a real"
                g$num$13423$1S&e0X)))))))
   (g$->bignum$13207$1S&e0X
     g$->bignum$13669$1S&e0X
     (case-lambda
       ((g$num$13424$1S&e0X)
        (if (g$bignum?$13184$1S&e0X g$num$13424$1S&e0X)
          g$num$13424$1S&e0X
          (if (g$fixnum?$12668$1S&e0X g$num$13424$1S&e0X)
            (g$fixnum->bignum$13201$1S&e0X g$num$13424$1S&e0X)
            (begin
              '#f
              (assertion-violation
                '->bignum
                '"not an integer"
                g$num$13424$1S&e0X)))))))
   (g$real->flonum$13208$1S&e0X
     g$real->flonum$13670$1S&e0X
     (case-lambda
       ((g$x$13425$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x$13425$1S&e0X))
            (assertion-violation
              'real->flonum
              '"not a real"
              g$x$13425$1S&e0X)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$13425$1S&e0X)))))
   (g$fixnum->flonum$13209$1S&e0X
     g$fixnum->flonum$13671$1S&e0X
     (case-lambda
       ((g$x$13426$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x$13426$1S&e0X))
            (assertion-violation
              'fixnum->flonum
              '"not a fixnum"
              g$x$13426$1S&e0X)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$13426$1S&e0X))))))
   (g$number?$13210$1S&e0X
     g$number?$13672$1S&e0X
     (case-lambda
       ((g$obj$13427$1S&e0X)
        ((case-lambda
           ((g$t$13428$1S&e0X)
            (if g$t$13428$1S&e0X
              g$t$13428$1S&e0X
              ((case-lambda
                 ((g$t$13429$1S&e0X)
                  (if g$t$13429$1S&e0X
                    g$t$13429$1S&e0X
                    ((case-lambda
                       ((g$t$13430$1S&e0X)
                        (if g$t$13430$1S&e0X
                          g$t$13430$1S&e0X
                          ((case-lambda
                             ((g$t$13431$1S&e0X)
                              (if g$t$13431$1S&e0X
                                g$t$13431$1S&e0X
                                ((case-lambda
                                   ((g$t$13432$1S&e0X)
                                    (if g$t$13432$1S&e0X
                                      g$t$13432$1S&e0X
                                      (begin
                                        '#f
                                        (g$rectnum?$13185$1S&e0X
                                          g$obj$13427$1S&e0X)))))
                                 (g$complexnum?$13192$1S&e0X
                                   g$obj$13427$1S&e0X)))))
                           (g$ratnum?$13189$1S&e0X
                             g$obj$13427$1S&e0X)))))
                     (g$bignum?$13184$1S&e0X g$obj$13427$1S&e0X)))))
               (g$flonum?$12669$1S&e0X g$obj$13427$1S&e0X)))))
         (g$fixnum?$12668$1S&e0X g$obj$13427$1S&e0X)))))
   (g$nan?$13211$1S&e0X
     g$nan?$13673$1S&e0X
     (case-lambda
       ((g$num$13433$1S&e0X)
        (if ((case-lambda
               ((g$t$13434$1S&e0X)
                (if g$t$13434$1S&e0X
                  g$t$13434$1S&e0X
                  ((case-lambda
                     ((g$t$13435$1S&e0X)
                      (if g$t$13435$1S&e0X
                        g$t$13435$1S&e0X
                        ((case-lambda
                           ((g$t$13436$1S&e0X)
                            (if g$t$13436$1S&e0X
                              g$t$13436$1S&e0X
                              (begin
                                '#f
                                (g$rectnum?$13185$1S&e0X
                                  g$num$13433$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$num$13433$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$num$13433$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$num$13433$1S&e0X))
          '#f
          (if (g$flonum?$12669$1S&e0X g$num$13433$1S&e0X)
            (g$flnan?$18542$1S&e0X g$num$13433$1S&e0X)
            (if (g$complexnum?$13192$1S&e0X g$num$13433$1S&e0X)
              ((case-lambda
                 ((g$t$13437$1S&e0X)
                  (if g$t$13437$1S&e0X
                    g$t$13437$1S&e0X
                    (begin
                      '#f
                      (g$flnan?$18542$1S&e0X
                        (g$complexnum-imag-part$13194$1S&e0X
                          g$num$13433$1S&e0X))))))
               (g$flnan?$18542$1S&e0X
                 (g$complexnum-real-part$13195$1S&e0X
                   g$num$13433$1S&e0X)))
              (begin
                '#f
                (assertion-violation
                  'nan?
                  '"not a number"
                  g$num$13433$1S&e0X))))))))
   (g$finite?$13212$1S&e0X
     g$finite?$13674$1S&e0X
     (case-lambda
       ((g$num$13438$1S&e0X)
        (if ((case-lambda
               ((g$t$13439$1S&e0X)
                (if g$t$13439$1S&e0X
                  g$t$13439$1S&e0X
                  ((case-lambda
                     ((g$t$13440$1S&e0X)
                      (if g$t$13440$1S&e0X
                        g$t$13440$1S&e0X
                        ((case-lambda
                           ((g$t$13441$1S&e0X)
                            (if g$t$13441$1S&e0X
                              g$t$13441$1S&e0X
                              (begin
                                '#f
                                (g$rectnum?$13185$1S&e0X
                                  g$num$13438$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$num$13438$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$num$13438$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$num$13438$1S&e0X))
          '#t
          (if (g$flonum?$12669$1S&e0X g$num$13438$1S&e0X)
            (g$flfinite?$18539$1S&e0X g$num$13438$1S&e0X)
            (if (g$complexnum?$13192$1S&e0X g$num$13438$1S&e0X)
              (if (g$flfinite?$18539$1S&e0X
                    (g$complexnum-real-part$13195$1S&e0X
                      g$num$13438$1S&e0X))
                (begin
                  '#f
                  (g$flfinite?$18539$1S&e0X
                    (g$complexnum-imag-part$13194$1S&e0X
                      g$num$13438$1S&e0X)))
                '#f)
              (begin
                '#f
                (assertion-violation
                  'finite?
                  '"not a number"
                  g$num$13438$1S&e0X))))))))
   (g$infinite?$13213$1S&e0X
     g$infinite?$13675$1S&e0X
     (case-lambda
       ((g$num$13442$1S&e0X)
        (if ((case-lambda
               ((g$t$13443$1S&e0X)
                (if g$t$13443$1S&e0X
                  g$t$13443$1S&e0X
                  ((case-lambda
                     ((g$t$13444$1S&e0X)
                      (if g$t$13444$1S&e0X
                        g$t$13444$1S&e0X
                        ((case-lambda
                           ((g$t$13445$1S&e0X)
                            (if g$t$13445$1S&e0X
                              g$t$13445$1S&e0X
                              (begin
                                '#f
                                (g$rectnum?$13185$1S&e0X
                                  g$num$13442$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$num$13442$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$num$13442$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$num$13442$1S&e0X))
          '#f
          (if (g$flonum?$12669$1S&e0X g$num$13442$1S&e0X)
            (g$flinfinite?$18541$1S&e0X g$num$13442$1S&e0X)
            (if (g$complexnum?$13192$1S&e0X g$num$13442$1S&e0X)
              ((case-lambda
                 ((g$t$13446$1S&e0X)
                  (if g$t$13446$1S&e0X
                    g$t$13446$1S&e0X
                    (begin
                      '#f
                      (g$flinfinite?$18541$1S&e0X
                        (g$complexnum-imag-part$13194$1S&e0X
                          g$num$13442$1S&e0X))))))
               (g$flinfinite?$18541$1S&e0X
                 (g$complexnum-real-part$13195$1S&e0X
                   g$num$13442$1S&e0X)))
              (begin
                '#f
                (assertion-violation
                  'infinite?
                  '"not a number"
                  g$num$13442$1S&e0X))))))))
   (g$exact?$13214$1S&e0X
     g$exact?$13676$1S&e0X
     (case-lambda
       ((g$obj$13447$1S&e0X)
        (if ((case-lambda
               ((g$t$13448$1S&e0X)
                (if g$t$13448$1S&e0X
                  g$t$13448$1S&e0X
                  ((case-lambda
                     ((g$t$13449$1S&e0X)
                      (if g$t$13449$1S&e0X
                        g$t$13449$1S&e0X
                        ((case-lambda
                           ((g$t$13450$1S&e0X)
                            (if g$t$13450$1S&e0X
                              g$t$13450$1S&e0X
                              (begin
                                '#f
                                (g$rectnum?$13185$1S&e0X
                                  g$obj$13447$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$obj$13447$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$obj$13447$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13447$1S&e0X))
          '#t
          (if ((case-lambda
                 ((g$t$13451$1S&e0X)
                  (if g$t$13451$1S&e0X
                    g$t$13451$1S&e0X
                    (begin
                      '#f
                      (g$complexnum?$13192$1S&e0X
                        g$obj$13447$1S&e0X)))))
               (g$flonum?$12669$1S&e0X g$obj$13447$1S&e0X))
            '#f
            (begin
              '#f
              (assertion-violation
                'exact
                '"not a number"
                g$obj$13447$1S&e0X)))))))
   (g$inexact?$13215$1S&e0X
     g$inexact?$13677$1S&e0X
     (case-lambda
       ((g$obj$13452$1S&e0X)
        (if ((case-lambda
               ((g$t$13453$1S&e0X)
                (if g$t$13453$1S&e0X
                  g$t$13453$1S&e0X
                  ((case-lambda
                     ((g$t$13454$1S&e0X)
                      (if g$t$13454$1S&e0X
                        g$t$13454$1S&e0X
                        ((case-lambda
                           ((g$t$13455$1S&e0X)
                            (if g$t$13455$1S&e0X
                              g$t$13455$1S&e0X
                              (begin
                                '#f
                                (g$rectnum?$13185$1S&e0X
                                  g$obj$13452$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$obj$13452$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$obj$13452$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13452$1S&e0X))
          '#f
          (if ((case-lambda
                 ((g$t$13456$1S&e0X)
                  (if g$t$13456$1S&e0X
                    g$t$13456$1S&e0X
                    (begin
                      '#f
                      (g$complexnum?$13192$1S&e0X
                        g$obj$13452$1S&e0X)))))
               (g$flonum?$12669$1S&e0X g$obj$13452$1S&e0X))
            '#t
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$obj$13452$1S&e0X)))))))
   (g$complex?$13216$1S&e0X
     g$complex?$13678$1S&e0X
     (case-lambda
       ((g$obj$13457$1S&e0X)
        (g$number?$13210$1S&e0X g$obj$13457$1S&e0X))))
   (g$real?$13217$1S&e0X
     g$real?$13679$1S&e0X
     (case-lambda
       ((g$obj$13458$1S&e0X)
        (if ((case-lambda
               ((g$t$13459$1S&e0X)
                (if g$t$13459$1S&e0X
                  g$t$13459$1S&e0X
                  ((case-lambda
                     ((g$t$13460$1S&e0X)
                      (if g$t$13460$1S&e0X
                        g$t$13460$1S&e0X
                        ((case-lambda
                           ((g$t$13461$1S&e0X)
                            (if g$t$13461$1S&e0X
                              g$t$13461$1S&e0X
                              (begin
                                '#f
                                (g$flonum?$12669$1S&e0X
                                  g$obj$13458$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$obj$13458$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$obj$13458$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13458$1S&e0X))
          '#t
          (if ((case-lambda
                 ((g$t$13462$1S&e0X)
                  (if g$t$13462$1S&e0X
                    g$t$13462$1S&e0X
                    (begin
                      '#f
                      (g$rectnum?$13185$1S&e0X g$obj$13458$1S&e0X)))))
               (g$complexnum?$13192$1S&e0X g$obj$13458$1S&e0X))
            ((case-lambda
               ((g$i$13463$1S&e0X)
                (if (g$zero?$13223$1S&e0X g$i$13463$1S&e0X)
                  (begin '#f (g$exact?$13214$1S&e0X g$i$13463$1S&e0X))
                  '#f)))
             (g$imag-part$13343$1S&e0X g$obj$13458$1S&e0X))
            (begin '#f '#f))))))
   (g$rational?$13218$1S&e0X
     g$rational?$13680$1S&e0X
     (case-lambda
       ((g$obj$13464$1S&e0X)
        (if ((case-lambda
               ((g$t$13465$1S&e0X)
                (if g$t$13465$1S&e0X
                  g$t$13465$1S&e0X
                  ((case-lambda
                     ((g$t$13466$1S&e0X)
                      (if g$t$13466$1S&e0X
                        g$t$13466$1S&e0X
                        (begin
                          '#f
                          (g$ratnum?$13189$1S&e0X
                            g$obj$13464$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$obj$13464$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13464$1S&e0X))
          '#t
          (if (if ((case-lambda
                     ((g$t$13467$1S&e0X)
                      (if g$t$13467$1S&e0X
                        g$t$13467$1S&e0X
                        ((case-lambda
                           ((g$t$13468$1S&e0X)
                            (if g$t$13468$1S&e0X
                              g$t$13468$1S&e0X
                              (begin
                                '#f
                                (g$flonum?$12669$1S&e0X
                                  g$obj$13464$1S&e0X)))))
                         (g$rectnum?$13185$1S&e0X
                           g$obj$13464$1S&e0X)))))
                   (g$complexnum?$13192$1S&e0X g$obj$13464$1S&e0X))
                (if (g$finite?$13212$1S&e0X g$obj$13464$1S&e0X)
                  (begin
                    '#f
                    (not (g$nan?$13211$1S&e0X g$obj$13464$1S&e0X)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13469$1S&e0X)
                (if (g$exact?$13214$1S&e0X g$i$13469$1S&e0X)
                  (begin '#f (g$zero?$13223$1S&e0X g$i$13469$1S&e0X))
                  '#f)))
             (g$imag-part$13343$1S&e0X g$obj$13464$1S&e0X))
            (begin '#f '#f))))))
   (g$integer?$13219$1S&e0X
     g$integer?$13681$1S&e0X
     (case-lambda
       ((g$obj$13470$1S&e0X)
        (if ((case-lambda
               ((g$t$13471$1S&e0X)
                (if g$t$13471$1S&e0X
                  g$t$13471$1S&e0X
                  (begin
                    '#f
                    (g$bignum?$13184$1S&e0X g$obj$13470$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13470$1S&e0X))
          '#t
          (if (if ((case-lambda
                     ((g$t$13472$1S&e0X)
                      (if g$t$13472$1S&e0X
                        g$t$13472$1S&e0X
                        ((case-lambda
                           ((g$t$13473$1S&e0X)
                            (if g$t$13473$1S&e0X
                              g$t$13473$1S&e0X
                              ((case-lambda
                                 ((g$t$13474$1S&e0X)
                                  (if g$t$13474$1S&e0X
                                    g$t$13474$1S&e0X
                                    (begin
                                      '#f
                                      (g$flonum?$12669$1S&e0X
                                        g$obj$13470$1S&e0X)))))
                               (g$rectnum?$13185$1S&e0X
                                 g$obj$13470$1S&e0X)))))
                         (g$complexnum?$13192$1S&e0X
                           g$obj$13470$1S&e0X)))))
                   (g$ratnum?$13189$1S&e0X g$obj$13470$1S&e0X))
                (if (g$finite?$13212$1S&e0X g$obj$13470$1S&e0X)
                  (begin
                    '#f
                    (not (g$nan?$13211$1S&e0X g$obj$13470$1S&e0X)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13475$1S&e0X)
                (if (g$exact?$13214$1S&e0X g$i$13475$1S&e0X)
                  (if (g$zero?$13223$1S&e0X g$i$13475$1S&e0X)
                    (begin
                      '#f
                      (g$=$13330$1S&e0X
                        (g$denominator$13341$1S&e0X
                          (g$real-part$13342$1S&e0X g$obj$13470$1S&e0X))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$13343$1S&e0X g$obj$13470$1S&e0X))
            (begin '#f '#f))))))
   (g$real-valued?$13220$1S&e0X
     g$real-valued?$13682$1S&e0X
     (case-lambda
       ((g$obj$13476$1S&e0X)
        (if ((case-lambda
               ((g$t$13477$1S&e0X)
                (if g$t$13477$1S&e0X
                  g$t$13477$1S&e0X
                  ((case-lambda
                     ((g$t$13478$1S&e0X)
                      (if g$t$13478$1S&e0X
                        g$t$13478$1S&e0X
                        ((case-lambda
                           ((g$t$13479$1S&e0X)
                            (if g$t$13479$1S&e0X
                              g$t$13479$1S&e0X
                              (begin
                                '#f
                                (g$flonum?$12669$1S&e0X
                                  g$obj$13476$1S&e0X)))))
                         (g$ratnum?$13189$1S&e0X g$obj$13476$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$obj$13476$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13476$1S&e0X))
          '#t
          (if ((case-lambda
                 ((g$t$13480$1S&e0X)
                  (if g$t$13480$1S&e0X
                    g$t$13480$1S&e0X
                    (begin
                      '#f
                      (g$rectnum?$13185$1S&e0X g$obj$13476$1S&e0X)))))
               (g$complexnum?$13192$1S&e0X g$obj$13476$1S&e0X))
            ((case-lambda
               ((g$i$13481$1S&e0X)
                (g$zero?$13223$1S&e0X g$i$13481$1S&e0X)))
             (g$imag-part$13343$1S&e0X g$obj$13476$1S&e0X))
            (begin '#f '#f))))))
   (g$rational-valued?$13221$1S&e0X
     g$rational-valued?$13683$1S&e0X
     (case-lambda
       ((g$obj$13482$1S&e0X)
        (if ((case-lambda
               ((g$t$13483$1S&e0X)
                (if g$t$13483$1S&e0X
                  g$t$13483$1S&e0X
                  ((case-lambda
                     ((g$t$13484$1S&e0X)
                      (if g$t$13484$1S&e0X
                        g$t$13484$1S&e0X
                        (begin
                          '#f
                          (g$ratnum?$13189$1S&e0X
                            g$obj$13482$1S&e0X)))))
                   (g$bignum?$13184$1S&e0X g$obj$13482$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13482$1S&e0X))
          '#t
          (if (if ((case-lambda
                     ((g$t$13485$1S&e0X)
                      (if g$t$13485$1S&e0X
                        g$t$13485$1S&e0X
                        ((case-lambda
                           ((g$t$13486$1S&e0X)
                            (if g$t$13486$1S&e0X
                              g$t$13486$1S&e0X
                              (begin
                                '#f
                                (g$flonum?$12669$1S&e0X
                                  g$obj$13482$1S&e0X)))))
                         (g$rectnum?$13185$1S&e0X
                           g$obj$13482$1S&e0X)))))
                   (g$complexnum?$13192$1S&e0X g$obj$13482$1S&e0X))
                (if (g$finite?$13212$1S&e0X g$obj$13482$1S&e0X)
                  (begin
                    '#f
                    (not (g$nan?$13211$1S&e0X g$obj$13482$1S&e0X)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13487$1S&e0X)
                (g$zero?$13223$1S&e0X g$i$13487$1S&e0X)))
             (g$imag-part$13343$1S&e0X g$obj$13482$1S&e0X))
            (begin '#f '#f))))))
   (g$integer-valued?$13222$1S&e0X
     g$integer-valued?$13684$1S&e0X
     (case-lambda
       ((g$obj$13488$1S&e0X)
        (if ((case-lambda
               ((g$t$13489$1S&e0X)
                (if g$t$13489$1S&e0X
                  g$t$13489$1S&e0X
                  (begin
                    '#f
                    (g$bignum?$13184$1S&e0X g$obj$13488$1S&e0X)))))
             (g$fixnum?$12668$1S&e0X g$obj$13488$1S&e0X))
          '#t
          (if (if ((case-lambda
                     ((g$t$13490$1S&e0X)
                      (if g$t$13490$1S&e0X
                        g$t$13490$1S&e0X
                        ((case-lambda
                           ((g$t$13491$1S&e0X)
                            (if g$t$13491$1S&e0X
                              g$t$13491$1S&e0X
                              ((case-lambda
                                 ((g$t$13492$1S&e0X)
                                  (if g$t$13492$1S&e0X
                                    g$t$13492$1S&e0X
                                    (begin
                                      '#f
                                      (g$flonum?$12669$1S&e0X
                                        g$obj$13488$1S&e0X)))))
                               (g$rectnum?$13185$1S&e0X
                                 g$obj$13488$1S&e0X)))))
                         (g$complexnum?$13192$1S&e0X
                           g$obj$13488$1S&e0X)))))
                   (g$ratnum?$13189$1S&e0X g$obj$13488$1S&e0X))
                (if (g$finite?$13212$1S&e0X g$obj$13488$1S&e0X)
                  (begin
                    '#f
                    (not (g$nan?$13211$1S&e0X g$obj$13488$1S&e0X)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13493$1S&e0X)
                (if (g$zero?$13223$1S&e0X g$i$13493$1S&e0X)
                  (begin
                    '#f
                    (g$=$13330$1S&e0X
                      (g$denominator$13341$1S&e0X
                        (g$real-part$13342$1S&e0X g$obj$13488$1S&e0X))
                      '1))
                  '#f)))
             (g$imag-part$13343$1S&e0X g$obj$13488$1S&e0X))
            (begin '#f '#f))))))
   (g$zero?$13223$1S&e0X
     g$zero?$13685$1S&e0X
     (case-lambda
       ((g$num$13494$1S&e0X)
        (begin
          (if (not (g$number?$13210$1S&e0X g$num$13494$1S&e0X))
            (assertion-violation
              'zero?
              '"not a number"
              g$num$13494$1S&e0X)
            (void))
          (g$=$13330$1S&e0X g$num$13494$1S&e0X '0)))))
   (g$positive?$13224$1S&e0X
     g$positive?$13686$1S&e0X
     (case-lambda
       ((g$num$13495$1S&e0X)
        (begin
          (if (not (g$number?$13210$1S&e0X g$num$13495$1S&e0X))
            (assertion-violation
              'positive?
              '"not a number"
              g$num$13495$1S&e0X)
            (void))
          (g$>$13333$1S&e0X g$num$13495$1S&e0X '0)))))
   (g$negative?$13225$1S&e0X
     g$negative?$13687$1S&e0X
     (case-lambda
       ((g$num$13496$1S&e0X)
        (begin
          (if (not (g$number?$13210$1S&e0X g$num$13496$1S&e0X))
            (assertion-violation
              'negative?
              '"not a number"
              g$num$13496$1S&e0X)
            (void))
          (g$<$13331$1S&e0X g$num$13496$1S&e0X '0)))))
   (g$inexact$13226$1S&e0X
     g$inexact$13688$1S&e0X
     (case-lambda
       ((g$num$13497$1S&e0X)
        (if ((case-lambda
               ((g$t$13498$1S&e0X)
                (if g$t$13498$1S&e0X
                  g$t$13498$1S&e0X
                  (begin
                    '#f
                    (g$flonum?$12669$1S&e0X g$num$13497$1S&e0X)))))
             (g$complexnum?$13192$1S&e0X g$num$13497$1S&e0X))
          g$num$13497$1S&e0X
          (if ((case-lambda
                 ((g$t$13499$1S&e0X)
                  (if g$t$13499$1S&e0X
                    g$t$13499$1S&e0X
                    (begin
                      '#f
                      (g$ratnum?$13189$1S&e0X g$num$13497$1S&e0X)))))
               (g$exact-integer?$13339$1S&e0X g$num$13497$1S&e0X))
            (g$real->flonum$13208$1S&e0X g$num$13497$1S&e0X)
            (if (g$rectnum?$13185$1S&e0X g$num$13497$1S&e0X)
              (g$rectnum->complexnum$13204$1S&e0X g$num$13497$1S&e0X)
              (begin
                '#f
                (assertion-violation
                  'inexact
                  '"not a number"
                  g$num$13497$1S&e0X))))))))
   (g$exact$13227$1S&e0X
     g$exact$13689$1S&e0X
     (case-lambda
       ((g$num$13500$1S&e0X)
        (if (g$complexnum?$13192$1S&e0X g$num$13500$1S&e0X)
          (if (g$zero?$13223$1S&e0X
                (g$complexnum-imag-part$13194$1S&e0X
                  g$num$13500$1S&e0X))
            (g$exact$13227$1S&e0X
              (g$complexnum-real-part$13195$1S&e0X g$num$13500$1S&e0X))
            ((case-lambda
               ((g$t$13501$1S&e0X)
                (if g$t$13501$1S&e0X
                  g$t$13501$1S&e0X
                  (begin
                    '#f
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"no exact equivalent"
                        g$num$13500$1S&e0X))))))
             ((case-lambda
                ((g$i$13502$1S&e0X g$r$13503$1S&e0X)
                 (if (g$rational?$13218$1S&e0X g$r$13503$1S&e0X)
                   (if (g$rational?$13218$1S&e0X g$i$13502$1S&e0X)
                     (begin
                       '#f
                       (g$make-rectnum$13186$1S&e0X
                         (g$flonum->ratnum$13199$1S&e0X
                           g$r$13503$1S&e0X)
                         (g$flonum->ratnum$13199$1S&e0X
                           g$i$13502$1S&e0X)))
                     '#f)
                   '#f)))
              (g$complexnum-imag-part$13194$1S&e0X g$num$13500$1S&e0X)
              (g$complexnum-real-part$13195$1S&e0X
                g$num$13500$1S&e0X))))
          (if (g$flonum?$12669$1S&e0X g$num$13500$1S&e0X)
            (if ((case-lambda
                   ((g$t$13504$1S&e0X)
                    (if g$t$13504$1S&e0X
                      g$t$13504$1S&e0X
                      (begin
                        '#f
                        (g$flinfinite?$18541$1S&e0X
                          g$num$13500$1S&e0X)))))
                 (g$flnan?$18542$1S&e0X g$num$13500$1S&e0X))
              (assertion-violation
                'exact
                '"no exact equivalent"
                g$num$13500$1S&e0X)
              (g$flonum->ratnum$13199$1S&e0X g$num$13500$1S&e0X))
            (if (g$bignum?$13184$1S&e0X g$num$13500$1S&e0X)
              (if (g$fx<=?$16982$1S&e0X
                    (g$fixnum-width$12670$1S&e0X)
                    (g$bitwise-length$14723$1S&e0X g$num$13500$1S&e0X))
                g$num$13500$1S&e0X
                (g$bignum->fixnum$13198$1S&e0X g$num$13500$1S&e0X))
              (if (g$ratnum?$13189$1S&e0X g$num$13500$1S&e0X)
                (if (g$=$13330$1S&e0X
                      (g$ratnum-denominator$13190$1S&e0X
                        g$num$13500$1S&e0X)
                      '1)
                  (g$exact$13227$1S&e0X
                    (g$ratnum-numerator$13191$1S&e0X
                      g$num$13500$1S&e0X))
                  g$num$13500$1S&e0X)
                (if (g$rectnum?$13185$1S&e0X g$num$13500$1S&e0X)
                  (if (g$zero?$13223$1S&e0X
                        (g$rectnum-imag-part$13187$1S&e0X
                          g$num$13500$1S&e0X))
                    (g$exact$13227$1S&e0X
                      (g$rectnum-real-part$13188$1S&e0X
                        g$num$13500$1S&e0X))
                    g$num$13500$1S&e0X)
                  (if (g$fixnum?$12668$1S&e0X g$num$13500$1S&e0X)
                    g$num$13500$1S&e0X
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"not a number"
                        g$num$13500$1S&e0X)))))))))))
   (g$hex-char$13228$1S&e0X
     g$hex-char$13690$1S&e0X
     (case-lambda
       ((g$num$13505$1S&e0X)
        (integer->char
          (+ g$num$13505$1S&e0X
             (char->integer
               (if (g$fx<?$16981$1S&e0X g$num$13505$1S&e0X '10)
                 '#\0
                 '#\W)))))))
   (g$fixnum->string$13229$1S&e0X
     g$fixnum->string$13691$1S&e0X
     (case-lambda
       ((g$num$13506$1S&e0X g$radix$13507$1S&e0X)
        (if (g$fxnegative?$17001$1S&e0X g$num$13506$1S&e0X)
          (string-append
            '"-"
            (g$number->string$13231$1S&e0X
              (g$abs$13389$1S&e0X g$num$13506$1S&e0X)
              g$radix$13507$1S&e0X))
          (clr-call-internal
            'System.Convert
            '"ToString(Int32,Int32)"
            '()
            g$num$13506$1S&e0X
            g$radix$13507$1S&e0X)))))
   (g$bignum->string$13230$1S&e0X
     g$bignum->string$13692$1S&e0X
     (case-lambda
       ((g$num$13508$1S&e0X g$radix$13509$1S&e0X)
        ((case-lambda
           ((g$neg?$13510$1S&e0X)
            ((case-lambda
               ((g$num$13511$1S&e0X)
                ((case-lambda
                   ((g$out$13512$1S&e0X)
                    (if g$neg?$13510$1S&e0X
                      (string-append '"-" g$out$13512$1S&e0X)
                      g$out$13512$1S&e0X)))
                 ((letrec ((g$f$13513$1S&e0X
                             (case-lambda
                               ((g$num$13514$1S&e0X g$a$13515$1S&e0X)
                                (if (g$zero?$13223$1S&e0X
                                      g$num$13514$1S&e0X)
                                  (apply string g$a$13515$1S&e0X)
                                  (g$f$13513$1S&e0X
                                    (g$div$13388$1S&e0X
                                      g$num$13514$1S&e0X
                                      g$radix$13509$1S&e0X)
                                    (cons
                                      (g$hex-char$13228$1S&e0X
                                        (g$mod$12672$1S&e0X
                                          g$num$13514$1S&e0X
                                          g$radix$13509$1S&e0X))
                                      g$a$13515$1S&e0X)))))))
                    g$f$13513$1S&e0X)
                  g$num$13511$1S&e0X
                  '()))))
             (g$abs$13389$1S&e0X g$num$13508$1S&e0X))))
         (g$negative?$13225$1S&e0X g$num$13508$1S&e0X)))))
   (g$number->string$13231$1S&e0X
     g$number->string$13693$1S&e0X
     (case-lambda
       ((g$num$13516$1S&e0X)
        (g$number->string$13231$1S&e0X g$num$13516$1S&e0X '10))
       ((g$num$13517$1S&e0X g$radix$13518$1S&e0X g$prec$13519$1S&e0X)
        (g$number->string$13231$1S&e0X
          g$num$13517$1S&e0X
          g$radix$13518$1S&e0X))
       ((g$num$13520$1S&e0X g$radix$13521$1S&e0X)
        (if (g$fixnum?$12668$1S&e0X g$num$13520$1S&e0X)
          (g$fixnum->string$13229$1S&e0X
            g$num$13520$1S&e0X
            g$radix$13521$1S&e0X)
          (if (g$flonum?$12669$1S&e0X g$num$13520$1S&e0X)
            (begin
              (if (not (g$=$13330$1S&e0X g$radix$13521$1S&e0X '10))
                (assertion-violation
                  'number->string
                  '"invalid radix"
                  g$radix$13521$1S&e0X)
                (void))
              (flonum->string g$num$13520$1S&e0X))
            (if (g$ratnum?$13189$1S&e0X g$num$13520$1S&e0X)
              (string-append
                (if (g$negative?$13225$1S&e0X g$num$13520$1S&e0X)
                  '"-"
                  '"")
                (g$number->string$13231$1S&e0X
                  (g$abs$13389$1S&e0X
                    (g$ratnum-numerator$13191$1S&e0X
                      g$num$13520$1S&e0X))
                  g$radix$13521$1S&e0X)
                '"/"
                (g$number->string$13231$1S&e0X
                  (g$abs$13389$1S&e0X
                    (g$ratnum-denominator$13190$1S&e0X
                      g$num$13520$1S&e0X))
                  g$radix$13521$1S&e0X))
              (if (g$bignum?$13184$1S&e0X g$num$13520$1S&e0X)
                (g$bignum->string$13230$1S&e0X
                  g$num$13520$1S&e0X
                  g$radix$13521$1S&e0X)
                (if (g$complexnum?$13192$1S&e0X g$num$13520$1S&e0X)
                  (begin
                    (if (not (g$=$13330$1S&e0X
                               g$radix$13521$1S&e0X
                               '10))
                      (assertion-violation
                        'number->string
                        '"invalid radix"
                        g$radix$13521$1S&e0X)
                      (void))
                    (string-append
                      (if (g$zero?$13223$1S&e0X
                            (g$real-part$13342$1S&e0X
                              g$num$13520$1S&e0X))
                        '""
                        (g$number->string$13231$1S&e0X
                          (g$real-part$13342$1S&e0X g$num$13520$1S&e0X)
                          g$radix$13521$1S&e0X))
                      (if ((case-lambda
                             ((g$i$13522$1S&e0X)
                              ((case-lambda
                                 ((g$t$13523$1S&e0X)
                                  (if g$t$13523$1S&e0X
                                    g$t$13523$1S&e0X
                                    ((case-lambda
                                       ((g$t$13524$1S&e0X)
                                        (if g$t$13524$1S&e0X
                                          g$t$13524$1S&e0X
                                          (begin
                                            '#f
                                            (g$infinite?$13213$1S&e0X
                                              g$i$13522$1S&e0X)))))
                                     (g$nan?$13211$1S&e0X
                                       g$i$13522$1S&e0X)))))
                               (g$negative?$13225$1S&e0X
                                 g$i$13522$1S&e0X))))
                           (g$imag-part$13343$1S&e0X
                             g$num$13520$1S&e0X))
                        '""
                        '"+")
                      (if (g$=$13330$1S&e0X
                            '1.0
                            (g$imag-part$13343$1S&e0X
                              g$num$13520$1S&e0X))
                        '""
                        (g$number->string$13231$1S&e0X
                          (g$imag-part$13343$1S&e0X g$num$13520$1S&e0X)
                          g$radix$13521$1S&e0X))
                      '"i"))
                  (if (g$rectnum?$13185$1S&e0X g$num$13520$1S&e0X)
                    (string-append
                      (if (g$zero?$13223$1S&e0X
                            (g$real-part$13342$1S&e0X
                              g$num$13520$1S&e0X))
                        '""
                        (g$number->string$13231$1S&e0X
                          (g$real-part$13342$1S&e0X g$num$13520$1S&e0X)
                          g$radix$13521$1S&e0X))
                      (if (g$negative?$13225$1S&e0X
                            (g$imag-part$13343$1S&e0X
                              g$num$13520$1S&e0X))
                        '""
                        '"+")
                      (if (g$=$13330$1S&e0X
                            '1
                            (g$imag-part$13343$1S&e0X
                              g$num$13520$1S&e0X))
                        '""
                        (g$number->string$13231$1S&e0X
                          (g$imag-part$13343$1S&e0X g$num$13520$1S&e0X)
                          g$radix$13521$1S&e0X))
                      '"i")
                    (begin
                      '#f
                      (assertion-violation
                        'number->string
                        '"not a number"
                        g$num$13520$1S&e0X)))))))))))
   (g$=$13330$1S&e0X
     g$=$13694$1S&e0X
     (case-lambda
       ((g$a$13525$1S&e0X g$b$13526$1S&e0X)
        (if (if (g$real?$13217$1S&e0X g$a$13525$1S&e0X)
              (if (g$real?$13217$1S&e0X g$b$13526$1S&e0X)
                (if (g$finite?$13212$1S&e0X g$a$13525$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$b$13526$1S&e0X)
                    (if (not (g$nan?$13211$1S&e0X g$a$13525$1S&e0X))
                      (begin
                        '#f
                        (not (g$nan?$13211$1S&e0X g$b$13526$1S&e0X)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$13227$1S&e0X g$a$13525$1S&e0X)
              (g$exact$13227$1S&e0X g$b$13526$1S&e0X))
            '0)
          (if ((case-lambda
                 ((g$t$13527$1S&e0X)
                  (if g$t$13527$1S&e0X
                    g$t$13527$1S&e0X
                    (begin
                      '#f
                      (g$nan?$13211$1S&e0X g$b$13526$1S&e0X)))))
               (g$nan?$13211$1S&e0X g$a$13525$1S&e0X))
            '#f
            (if (if (g$number?$13210$1S&e0X g$a$13525$1S&e0X)
                  (begin '#f (g$number?$13210$1S&e0X g$b$13526$1S&e0X))
                  '#f)
              (inexact=?
                (g$inexact$13226$1S&e0X g$a$13525$1S&e0X)
                (g$inexact$13226$1S&e0X g$b$13526$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  '=
                  '"not number arguments"
                  g$a$13525$1S&e0X
                  g$b$13526$1S&e0X))))))
       ((g$x1$13528$1S&e0X g$x2$13529$1S&e0X . g$rest$13530$1S&e0X)
        ((letrec ((g$f$13531$1S&e0X
                    (case-lambda
                      ((g$a$13532$1S&e0X g$b$13533$1S&e0X)
                       (if (null? g$b$13533$1S&e0X)
                         '#t
                         (if (g$=$13330$1S&e0X
                               g$a$13532$1S&e0X
                               ($car g$b$13533$1S&e0X))
                           (g$f$13531$1S&e0X
                             ($car g$b$13533$1S&e0X)
                             ($cdr g$b$13533$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$13531$1S&e0X)
         g$x1$13528$1S&e0X
         (cons g$x2$13529$1S&e0X g$rest$13530$1S&e0X)))))
   (g$<$13331$1S&e0X
     g$<$13695$1S&e0X
     (case-lambda
       ((g$a$13534$1S&e0X g$b$13535$1S&e0X)
        (if (if (g$real?$13217$1S&e0X g$a$13534$1S&e0X)
              (if (g$real?$13217$1S&e0X g$b$13535$1S&e0X)
                (if (g$finite?$13212$1S&e0X g$a$13534$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$b$13535$1S&e0X)
                    (if (not (g$nan?$13211$1S&e0X g$a$13534$1S&e0X))
                      (begin
                        '#f
                        (not (g$nan?$13211$1S&e0X g$b$13535$1S&e0X)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$13227$1S&e0X g$a$13534$1S&e0X)
              (g$exact$13227$1S&e0X g$b$13535$1S&e0X))
            '0)
          (if ((case-lambda
                 ((g$t$13536$1S&e0X)
                  (if g$t$13536$1S&e0X
                    g$t$13536$1S&e0X
                    (begin
                      '#f
                      (g$nan?$13211$1S&e0X g$b$13535$1S&e0X)))))
               (g$nan?$13211$1S&e0X g$a$13534$1S&e0X))
            '#f
            (if (if (g$real?$13217$1S&e0X g$a$13534$1S&e0X)
                  (begin '#f (g$real?$13217$1S&e0X g$b$13535$1S&e0X))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$13226$1S&e0X g$a$13534$1S&e0X)
                  (g$inexact$13226$1S&e0X g$b$13535$1S&e0X))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<
                  '"not real arguments"
                  g$a$13534$1S&e0X
                  g$b$13535$1S&e0X))))))
       ((g$x1$13537$1S&e0X g$x2$13538$1S&e0X . g$rest$13539$1S&e0X)
        ((letrec ((g$f$13540$1S&e0X
                    (case-lambda
                      ((g$a$13541$1S&e0X g$b$13542$1S&e0X)
                       (if (null? g$b$13542$1S&e0X)
                         '#t
                         (if (g$<$13331$1S&e0X
                               g$a$13541$1S&e0X
                               ($car g$b$13542$1S&e0X))
                           (g$f$13540$1S&e0X
                             ($car g$b$13542$1S&e0X)
                             ($cdr g$b$13542$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$13540$1S&e0X)
         g$x1$13537$1S&e0X
         (cons g$x2$13538$1S&e0X g$rest$13539$1S&e0X)))))
   (g$<=$13332$1S&e0X
     g$<=$13696$1S&e0X
     (case-lambda
       ((g$a$13543$1S&e0X g$b$13544$1S&e0X)
        (if (if (g$real?$13217$1S&e0X g$a$13543$1S&e0X)
              (if (g$real?$13217$1S&e0X g$b$13544$1S&e0X)
                (if (g$finite?$13212$1S&e0X g$a$13543$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$b$13544$1S&e0X)
                    (if (not (g$nan?$13211$1S&e0X g$a$13543$1S&e0X))
                      (begin
                        '#f
                        (not (g$nan?$13211$1S&e0X g$b$13544$1S&e0X)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$13227$1S&e0X g$a$13543$1S&e0X)
              (g$exact$13227$1S&e0X g$b$13544$1S&e0X))
            '0)
          (if ((case-lambda
                 ((g$t$13545$1S&e0X)
                  (if g$t$13545$1S&e0X
                    g$t$13545$1S&e0X
                    (begin
                      '#f
                      (g$nan?$13211$1S&e0X g$b$13544$1S&e0X)))))
               (g$nan?$13211$1S&e0X g$a$13543$1S&e0X))
            '#f
            (if (if (g$real?$13217$1S&e0X g$a$13543$1S&e0X)
                  (begin '#f (g$real?$13217$1S&e0X g$b$13544$1S&e0X))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$13226$1S&e0X g$a$13543$1S&e0X)
                  (g$inexact$13226$1S&e0X g$b$13544$1S&e0X))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<=
                  '"not real arguments"
                  g$a$13543$1S&e0X
                  g$b$13544$1S&e0X))))))
       ((g$x1$13546$1S&e0X g$x2$13547$1S&e0X . g$rest$13548$1S&e0X)
        ((letrec ((g$f$13549$1S&e0X
                    (case-lambda
                      ((g$a$13550$1S&e0X g$b$13551$1S&e0X)
                       (if (null? g$b$13551$1S&e0X)
                         '#t
                         (if (g$<=$13332$1S&e0X
                               g$a$13550$1S&e0X
                               ($car g$b$13551$1S&e0X))
                           (g$f$13549$1S&e0X
                             ($car g$b$13551$1S&e0X)
                             ($cdr g$b$13551$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$13549$1S&e0X)
         g$x1$13546$1S&e0X
         (cons g$x2$13547$1S&e0X g$rest$13548$1S&e0X)))))
   (g$>$13333$1S&e0X
     g$>$13697$1S&e0X
     (case-lambda
       ((g$a$13552$1S&e0X g$b$13553$1S&e0X)
        (if (if (g$real?$13217$1S&e0X g$a$13552$1S&e0X)
              (if (g$real?$13217$1S&e0X g$b$13553$1S&e0X)
                (if (g$finite?$13212$1S&e0X g$a$13552$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$b$13553$1S&e0X)
                    (if (not (g$nan?$13211$1S&e0X g$a$13552$1S&e0X))
                      (begin
                        '#f
                        (not (g$nan?$13211$1S&e0X g$b$13553$1S&e0X)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$13227$1S&e0X g$a$13552$1S&e0X)
              (g$exact$13227$1S&e0X g$b$13553$1S&e0X))
            '0)
          (if ((case-lambda
                 ((g$t$13554$1S&e0X)
                  (if g$t$13554$1S&e0X
                    g$t$13554$1S&e0X
                    (begin
                      '#f
                      (g$nan?$13211$1S&e0X g$b$13553$1S&e0X)))))
               (g$nan?$13211$1S&e0X g$a$13552$1S&e0X))
            '#f
            (if (if (g$real?$13217$1S&e0X g$a$13552$1S&e0X)
                  (begin '#f (g$real?$13217$1S&e0X g$b$13553$1S&e0X))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$13226$1S&e0X g$a$13552$1S&e0X)
                  (g$inexact$13226$1S&e0X g$b$13553$1S&e0X))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>
                  '"not real arguments"
                  g$a$13552$1S&e0X
                  g$b$13553$1S&e0X))))))
       ((g$x1$13555$1S&e0X g$x2$13556$1S&e0X . g$rest$13557$1S&e0X)
        ((letrec ((g$f$13558$1S&e0X
                    (case-lambda
                      ((g$a$13559$1S&e0X g$b$13560$1S&e0X)
                       (if (null? g$b$13560$1S&e0X)
                         '#t
                         (if (g$>$13333$1S&e0X
                               g$a$13559$1S&e0X
                               ($car g$b$13560$1S&e0X))
                           (g$f$13558$1S&e0X
                             ($car g$b$13560$1S&e0X)
                             ($cdr g$b$13560$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$13558$1S&e0X)
         g$x1$13555$1S&e0X
         (cons g$x2$13556$1S&e0X g$rest$13557$1S&e0X)))))
   (g$>=$13334$1S&e0X
     g$>=$13698$1S&e0X
     (case-lambda
       ((g$a$13561$1S&e0X g$b$13562$1S&e0X)
        (if (if (g$real?$13217$1S&e0X g$a$13561$1S&e0X)
              (if (g$real?$13217$1S&e0X g$b$13562$1S&e0X)
                (if (g$finite?$13212$1S&e0X g$a$13561$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$b$13562$1S&e0X)
                    (if (not (g$nan?$13211$1S&e0X g$a$13561$1S&e0X))
                      (begin
                        '#f
                        (not (g$nan?$13211$1S&e0X g$b$13562$1S&e0X)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$13227$1S&e0X g$a$13561$1S&e0X)
              (g$exact$13227$1S&e0X g$b$13562$1S&e0X))
            '0)
          (if ((case-lambda
                 ((g$t$13563$1S&e0X)
                  (if g$t$13563$1S&e0X
                    g$t$13563$1S&e0X
                    (begin
                      '#f
                      (g$nan?$13211$1S&e0X g$b$13562$1S&e0X)))))
               (g$nan?$13211$1S&e0X g$a$13561$1S&e0X))
            '#f
            (if (if (g$real?$13217$1S&e0X g$a$13561$1S&e0X)
                  (begin '#f (g$real?$13217$1S&e0X g$b$13562$1S&e0X))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$13226$1S&e0X g$a$13561$1S&e0X)
                  (g$inexact$13226$1S&e0X g$b$13562$1S&e0X))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>=
                  '"not real arguments"
                  g$a$13561$1S&e0X
                  g$b$13562$1S&e0X))))))
       ((g$x1$13564$1S&e0X g$x2$13565$1S&e0X . g$rest$13566$1S&e0X)
        ((letrec ((g$f$13567$1S&e0X
                    (case-lambda
                      ((g$a$13568$1S&e0X g$b$13569$1S&e0X)
                       (if (null? g$b$13569$1S&e0X)
                         '#t
                         (if (g$>=$13334$1S&e0X
                               g$a$13568$1S&e0X
                               ($car g$b$13569$1S&e0X))
                           (g$f$13567$1S&e0X
                             ($car g$b$13569$1S&e0X)
                             ($cdr g$b$13569$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$13567$1S&e0X)
         g$x1$13564$1S&e0X
         (cons g$x2$13565$1S&e0X g$rest$13566$1S&e0X)))))
   (g$make-rectangular$13335$1S&e0X
     g$make-rectangular$13699$1S&e0X
     (case-lambda
       ((g$r1$13570$1S&e0X g$r2$13571$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$r1$13570$1S&e0X))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r1$13570$1S&e0X)
            (void))
          (if (not (g$real?$13217$1S&e0X g$r2$13571$1S&e0X))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r2$13571$1S&e0X)
            (void))
          (if (if (g$exact?$13214$1S&e0X g$r1$13570$1S&e0X)
                (begin '#f (g$exact?$13214$1S&e0X g$r2$13571$1S&e0X))
                '#f)
            (g$make-rectnum$13186$1S&e0X
              (g$->ratnum$13206$1S&e0X g$r1$13570$1S&e0X)
              (g$->ratnum$13206$1S&e0X g$r2$13571$1S&e0X))
            (if (if (g$exact?$13214$1S&e0X g$r2$13571$1S&e0X)
                  (begin '#f (g$zero?$13223$1S&e0X g$r2$13571$1S&e0X))
                  '#f)
              g$r1$13570$1S&e0X
              (begin
                '#f
                (g$make-complexnum$13193$1S&e0X
                  (g$inexact$13226$1S&e0X g$r1$13570$1S&e0X)
                  (g$inexact$13226$1S&e0X g$r2$13571$1S&e0X)))))))))
   (g$make-polar$13336$1S&e0X
     g$make-polar$13700$1S&e0X
     (case-lambda
       ((g$r1$13572$1S&e0X g$r2$13573$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$r1$13572$1S&e0X))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r1$13572$1S&e0X)
            (void))
          (if (not (g$real?$13217$1S&e0X g$r2$13573$1S&e0X))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r2$13573$1S&e0X)
            (void))
          (if (if (g$exact?$13214$1S&e0X g$r2$13573$1S&e0X)
                (begin '#f (g$zero?$13223$1S&e0X g$r2$13573$1S&e0X))
                '#f)
            g$r1$13572$1S&e0X
            (* g$r1$13572$1S&e0X
               (g$make-rectangular$13335$1S&e0X
                 (g$cos$13381$1S&e0X g$r2$13573$1S&e0X)
                 (g$sin$13378$1S&e0X g$r2$13573$1S&e0X))))))))
   (g$angle$13337$1S&e0X
     g$angle$13701$1S&e0X
     (case-lambda
       ((g$num$13574$1S&e0X)
        (begin
          (if (not (g$number?$13210$1S&e0X g$num$13574$1S&e0X))
            (assertion-violation
              'angle
              '"not a number"
              g$num$13574$1S&e0X)
            (void))
          (if (g$rectnum?$13185$1S&e0X g$num$13574$1S&e0X)
            (g$angle$13337$1S&e0X
              (g$inexact$13226$1S&e0X g$num$13574$1S&e0X))
            (g$atan$13386$1S&e0X
              (g$imag-part$13343$1S&e0X g$num$13574$1S&e0X)
              (g$real-part$13342$1S&e0X g$num$13574$1S&e0X)))))))
   (g$magnitude$13338$1S&e0X
     g$magnitude$13702$1S&e0X
     (case-lambda
       ((g$num$13575$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13575$1S&e0X)
          (g$magnitude$13338$1S&e0X
            (g$inexact$13226$1S&e0X g$num$13575$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13575$1S&e0X)
            ((case-lambda
               ((g$i$13576$1S&e0X g$r$13577$1S&e0X)
                (g$sqrt$13394$1S&e0X
                  (+ (* g$i$13576$1S&e0X g$i$13576$1S&e0X)
                     (* g$r$13577$1S&e0X g$r$13577$1S&e0X)))))
             (g$imag-part$13343$1S&e0X g$num$13575$1S&e0X)
             (g$real-part$13342$1S&e0X g$num$13575$1S&e0X))
            (if (g$real?$13217$1S&e0X g$num$13575$1S&e0X)
              (g$abs$13389$1S&e0X g$num$13575$1S&e0X)
              (begin
                '#f
                (assertion-violation
                  'magnitude
                  '"not a number"
                  g$num$13575$1S&e0X))))))))
   (g$exact-integer?$13339$1S&e0X
     g$exact-integer?$13703$1S&e0X
     (case-lambda
       ((g$obj$13578$1S&e0X)
        ((case-lambda
           ((g$t$13579$1S&e0X)
            (if g$t$13579$1S&e0X
              g$t$13579$1S&e0X
              (begin '#f (g$bignum?$13184$1S&e0X g$obj$13578$1S&e0X)))))
         (g$fixnum?$12668$1S&e0X g$obj$13578$1S&e0X)))))
   (g$numerator$13340$1S&e0X
     g$numerator$13704$1S&e0X
     (case-lambda
       ((g$num$13580$1S&e0X)
        (if (g$exact-integer?$13339$1S&e0X g$num$13580$1S&e0X)
          g$num$13580$1S&e0X
          (if (g$ratnum?$13189$1S&e0X g$num$13580$1S&e0X)
            (g$exact$13227$1S&e0X
              (g$ratnum-numerator$13191$1S&e0X g$num$13580$1S&e0X))
            (if (if (g$real?$13217$1S&e0X g$num$13580$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$num$13580$1S&e0X)
                    (begin
                      '#f
                      (not (g$nan?$13211$1S&e0X g$num$13580$1S&e0X)))
                    '#f)
                  '#f)
              (g$inexact$13226$1S&e0X
                (g$numerator$13340$1S&e0X
                  (g$exact$13227$1S&e0X g$num$13580$1S&e0X)))
              (begin
                '#f
                (assertion-violation
                  'numerator
                  '"not a real"
                  g$num$13580$1S&e0X))))))))
   (g$denominator$13341$1S&e0X
     g$denominator$13705$1S&e0X
     (case-lambda
       ((g$num$13581$1S&e0X)
        (if (g$exact-integer?$13339$1S&e0X g$num$13581$1S&e0X)
          '1
          (if (g$ratnum?$13189$1S&e0X g$num$13581$1S&e0X)
            (g$exact$13227$1S&e0X
              (g$ratnum-denominator$13190$1S&e0X g$num$13581$1S&e0X))
            (if (if (g$real?$13217$1S&e0X g$num$13581$1S&e0X)
                  (if (g$finite?$13212$1S&e0X g$num$13581$1S&e0X)
                    (begin
                      '#f
                      (not (g$nan?$13211$1S&e0X g$num$13581$1S&e0X)))
                    '#f)
                  '#f)
              (g$inexact$13226$1S&e0X
                (g$denominator$13341$1S&e0X
                  (g$exact$13227$1S&e0X g$num$13581$1S&e0X)))
              (begin
                '#f
                (assertion-violation
                  'denominator
                  '"not a real"
                  g$num$13581$1S&e0X))))))))
   (g$real-part$13342$1S&e0X
     g$real-part$13706$1S&e0X
     (case-lambda
       ((g$num$13582$1S&e0X)
        (if (g$complexnum?$13192$1S&e0X g$num$13582$1S&e0X)
          (g$complexnum-real-part$13195$1S&e0X g$num$13582$1S&e0X)
          (if (g$rectnum?$13185$1S&e0X g$num$13582$1S&e0X)
            (g$exact$13227$1S&e0X
              (g$rectnum-real-part$13188$1S&e0X g$num$13582$1S&e0X))
            (if (g$real?$13217$1S&e0X g$num$13582$1S&e0X)
              g$num$13582$1S&e0X
              (begin
                '#f
                (assertion-violation
                  'real-part
                  '"not a number"
                  g$num$13582$1S&e0X))))))))
   (g$imag-part$13343$1S&e0X
     g$imag-part$13707$1S&e0X
     (case-lambda
       ((g$num$13583$1S&e0X)
        (if (g$complexnum?$13192$1S&e0X g$num$13583$1S&e0X)
          (g$complexnum-imag-part$13194$1S&e0X g$num$13583$1S&e0X)
          (if (g$rectnum?$13185$1S&e0X g$num$13583$1S&e0X)
            (g$exact$13227$1S&e0X
              (g$rectnum-imag-part$13187$1S&e0X g$num$13583$1S&e0X))
            (if (g$real?$13217$1S&e0X g$num$13583$1S&e0X)
              '0
              (begin
                '#f
                (assertion-violation
                  'imag-part
                  '"not a number"
                  g$num$13583$1S&e0X))))))))
   (g$exp$13377$1S&e0X
     g$exp$13708$1S&e0X
     (case-lambda
       ((g$num$13584$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13584$1S&e0X)
          (g$exp$13377$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13584$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13584$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'exp
              '()
              g$num$13584$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13584$1S&e0X)
              (clr-call-internal
                'System.Math
                'exp
                '()
                (g$inexact$13226$1S&e0X g$num$13584$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'exp
                  '"not a number"
                  g$num$13584$1S&e0X))))))))
   (g$sin$13378$1S&e0X
     g$sin$13709$1S&e0X
     (case-lambda
       ((g$num$13585$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13585$1S&e0X)
          (g$sin$13378$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13585$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13585$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sin
              '()
              g$num$13585$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13585$1S&e0X)
              (clr-call-internal
                'System.Math
                'sin
                '()
                (g$inexact$13226$1S&e0X g$num$13585$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'sin
                  '"not a number"
                  g$num$13585$1S&e0X))))))))
   (g$asin$13379$1S&e0X
     g$asin$13710$1S&e0X
     (case-lambda
       ((g$num$13586$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13586$1S&e0X)
          (g$asin$13379$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13586$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13586$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'asin
              '()
              g$num$13586$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13586$1S&e0X)
              (clr-call-internal
                'System.Math
                'asin
                '()
                (g$inexact$13226$1S&e0X g$num$13586$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'asin
                  '"not a number"
                  g$num$13586$1S&e0X))))))))
   (g$sinh$13380$1S&e0X
     g$sinh$13711$1S&e0X
     (case-lambda
       ((g$num$13587$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13587$1S&e0X)
          (g$sinh$13380$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13587$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13587$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sinh
              '()
              g$num$13587$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13587$1S&e0X)
              (clr-call-internal
                'System.Math
                'sinh
                '()
                (g$inexact$13226$1S&e0X g$num$13587$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'sinh
                  '"not a number"
                  g$num$13587$1S&e0X))))))))
   (g$cos$13381$1S&e0X
     g$cos$13712$1S&e0X
     (case-lambda
       ((g$num$13588$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13588$1S&e0X)
          (g$cos$13381$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13588$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13588$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cos
              '()
              g$num$13588$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13588$1S&e0X)
              (clr-call-internal
                'System.Math
                'cos
                '()
                (g$inexact$13226$1S&e0X g$num$13588$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'cos
                  '"not a number"
                  g$num$13588$1S&e0X))))))))
   (g$acos$13382$1S&e0X
     g$acos$13713$1S&e0X
     (case-lambda
       ((g$num$13589$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13589$1S&e0X)
          (g$acos$13382$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13589$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13589$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'acos
              '()
              g$num$13589$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13589$1S&e0X)
              (clr-call-internal
                'System.Math
                'acos
                '()
                (g$inexact$13226$1S&e0X g$num$13589$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'acos
                  '"not a number"
                  g$num$13589$1S&e0X))))))))
   (g$cosh$13383$1S&e0X
     g$cosh$13714$1S&e0X
     (case-lambda
       ((g$num$13590$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13590$1S&e0X)
          (g$cosh$13383$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13590$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13590$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cosh
              '()
              g$num$13590$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13590$1S&e0X)
              (clr-call-internal
                'System.Math
                'cosh
                '()
                (g$inexact$13226$1S&e0X g$num$13590$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'cosh
                  '"not a number"
                  g$num$13590$1S&e0X))))))))
   (g$tan$13384$1S&e0X
     g$tan$13715$1S&e0X
     (case-lambda
       ((g$num$13591$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13591$1S&e0X)
          (g$tan$13384$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13591$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13591$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tan
              '()
              g$num$13591$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13591$1S&e0X)
              (clr-call-internal
                'System.Math
                'tan
                '()
                (g$inexact$13226$1S&e0X g$num$13591$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'tan
                  '"not a number"
                  g$num$13591$1S&e0X))))))))
   (g$tanh$13385$1S&e0X
     g$tanh$13716$1S&e0X
     (case-lambda
       ((g$num$13592$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13592$1S&e0X)
          (g$tanh$13385$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13592$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13592$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tanh
              '()
              g$num$13592$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13592$1S&e0X)
              (clr-call-internal
                'System.Math
                'tanh
                '()
                (g$inexact$13226$1S&e0X g$num$13592$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'tanh
                  '"not a number"
                  g$num$13592$1S&e0X))))))))
   (g$atan$13386$1S&e0X
     g$atan$13717$1S&e0X
     (case-lambda
       ((g$num$13593$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13593$1S&e0X)
          (g$atan$13386$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13593$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13593$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Atan
              '()
              g$num$13593$1S&e0X)
            (if (g$real?$13217$1S&e0X g$num$13593$1S&e0X)
              (clr-call-internal
                'System.Math
                'Atan
                '()
                (g$inexact$13226$1S&e0X g$num$13593$1S&e0X))
              (begin
                '#f
                (assertion-violation
                  'atan
                  '"not a number"
                  g$num$13593$1S&e0X))))))
       ((g$num1$13594$1S&e0X g$num2$13595$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$num1$13594$1S&e0X))
            (assertion-violation
              'atan
              '"not a real"
              g$num1$13594$1S&e0X)
            (void))
          (if (not (g$real?$13217$1S&e0X g$num2$13595$1S&e0X))
            (assertion-violation
              'atan
              '"not a real"
              g$num2$13595$1S&e0X)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$13226$1S&e0X g$num1$13594$1S&e0X)
            (g$inexact$13226$1S&e0X g$num2$13595$1S&e0X))))))
   (g$log$13387$1S&e0X
     g$log$13718$1S&e0X
     (case-lambda
       ((g$num$13596$1S&e0X)
        (begin
          (if (not (g$number?$13210$1S&e0X g$num$13596$1S&e0X))
            (assertion-violation
              'atan
              '"not a number"
              g$num$13596$1S&e0X)
            (void))
          (if (g$rectnum?$13185$1S&e0X g$num$13596$1S&e0X)
            (g$log$13387$1S&e0X
              (g$rectnum->complexnum$13204$1S&e0X g$num$13596$1S&e0X))
            (if (g$complexnum?$13192$1S&e0X g$num$13596$1S&e0X)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                g$num$13596$1S&e0X)
              (if (g$negative?$13225$1S&e0X g$num$13596$1S&e0X)
                (clr-call-internal
                  'Microsoft.Scripting.Math.Complex64
                  'Log
                  '()
                  (g$make-complexnum$13193$1S&e0X
                    (g$inexact$13226$1S&e0X g$num$13596$1S&e0X)
                    '0.0))
                (if (g$zero?$13223$1S&e0X g$num$13596$1S&e0X)
                  (if (g$exact?$13214$1S&e0X g$num$13596$1S&e0X)
                    (assertion-violation
                      'log
                      '"not possible"
                      g$num$13596$1S&e0X)
                    '-inf.0)
                  (if (g$infinite?$13213$1S&e0X g$num$13596$1S&e0X)
                    (if (g$negative?$13225$1S&e0X g$num$13596$1S&e0X)
                      (g$make-complexnum$13193$1S&e0X
                        (g$inexact$13226$1S&e0X
                          (g$abs$13389$1S&e0X g$num$13596$1S&e0X))
                        '0)
                      g$num$13596$1S&e0X)
                    (begin
                      '#f
                      (clr-call-internal
                        'System.Math
                        'Log
                        '()
                        (g$inexact$13226$1S&e0X
                          g$num$13596$1S&e0X))))))))))
       ((g$num1$13597$1S&e0X g$num2$13598$1S&e0X)
        (/ (g$log$13387$1S&e0X g$num1$13597$1S&e0X)
           (g$log$13387$1S&e0X g$num2$13598$1S&e0X)))))
   (g$div$13388$1S&e0X
     g$div$13719$1S&e0X
     (case-lambda
       ((g$x1$13599$1S&e0X g$x2$13600$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x1$13599$1S&e0X))
            (assertion-violation 'div '"not a real" g$x1$13599$1S&e0X)
            (void))
          (if (not (g$real?$13217$1S&e0X g$x2$13600$1S&e0X))
            (assertion-violation 'div '"not a real" g$x2$13600$1S&e0X)
            (void))
          (if (g$zero?$13223$1S&e0X g$x2$13600$1S&e0X)
            (assertion-violation
              'div
              '"divide by zero"
              g$x1$13599$1S&e0X
              g$x2$13600$1S&e0X)
            (void))
          (if ((case-lambda
                 ((g$t$13601$1S&e0X)
                  (if g$t$13601$1S&e0X
                    g$t$13601$1S&e0X
                    (begin
                      '#f
                      (g$infinite?$13213$1S&e0X g$x1$13599$1S&e0X)))))
               (g$nan?$13211$1S&e0X g$x1$13599$1S&e0X))
            (assertion-violation
              'div
              '"cannot be nan or infinite"
              g$x1$13599$1S&e0X
              g$x2$13600$1S&e0X)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$13214$1S&e0X g$x1$13599$1S&e0X)
                     (begin
                       '#f
                       (g$exact?$13214$1S&e0X g$x2$13600$1S&e0X))
                     '#f)
                 ((case-lambda
                    ((g$scale$13605$1S&e0X)
                     (values
                       (* g$x1$13599$1S&e0X g$scale$13605$1S&e0X)
                       (* g$x2$13600$1S&e0X g$scale$13605$1S&e0X)
                       '#t)))
                  (* (g$denominator$13341$1S&e0X g$x1$13599$1S&e0X)
                     (g$denominator$13341$1S&e0X g$x2$13600$1S&e0X)))
                 (values g$x1$13599$1S&e0X g$x2$13600$1S&e0X '#f))))
            (case-lambda
              ((g$x1$13606$1S&e0X
                 g$x2$13607$1S&e0X
                 g$exact-args?$13608$1S&e0X)
               ((case-lambda
                  ((g$exact-args?$13609$1S&e0X
                     g$x2$13610$1S&e0X
                     g$x1$13611$1S&e0X)
                   ((case-lambda
                      ((g$d$13612$1S&e0X)
                       (if (if g$exact-args?$13609$1S&e0X
                             (begin
                               '#f
                               (g$rational-valued?$13221$1S&e0X
                                 g$d$13612$1S&e0X))
                             '#f)
                         (g$exact$13227$1S&e0X g$d$13612$1S&e0X)
                         g$d$13612$1S&e0X)))
                    (if (g$positive?$13224$1S&e0X g$x2$13610$1S&e0X)
                      (g$floor$13390$1S&e0X
                        (/ g$x1$13611$1S&e0X g$x2$13610$1S&e0X))
                      (- (g$floor$13390$1S&e0X
                           (/ g$x1$13611$1S&e0X
                              (- g$x2$13610$1S&e0X))))))))
                g$exact-args?$13608$1S&e0X
                g$x2$13607$1S&e0X
                g$x1$13606$1S&e0X))))))))
   (g$abs$13389$1S&e0X
     g$abs$13720$1S&e0X
     (case-lambda
       ((g$x1$13613$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x1$13613$1S&e0X))
            (assertion-violation 'abs '"not a real" g$x1$13613$1S&e0X)
            (void))
          (if (g$negative?$13225$1S&e0X g$x1$13613$1S&e0X)
            (- g$x1$13613$1S&e0X)
            g$x1$13613$1S&e0X)))))
   (g$floor$13390$1S&e0X
     g$floor$13721$1S&e0X
     (case-lambda
       ((g$x$13614$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x$13614$1S&e0X))
            (assertion-violation 'floor '"not a real" g$x$13614$1S&e0X)
            (void))
          (if (g$exact-integer?$13339$1S&e0X g$x$13614$1S&e0X)
            g$x$13614$1S&e0X
            (if (g$ratnum?$13189$1S&e0X g$x$13614$1S&e0X)
              ((case-lambda
                 ((g$r$13615$1S&e0X)
                  (g$exact$13227$1S&e0X
                    (if (g$negative?$13225$1S&e0X g$x$13614$1S&e0X)
                      (- g$r$13615$1S&e0X '1)
                      g$r$13615$1S&e0X))))
               (g$bignum/$13196$1S&e0X
                 (g$ratnum-numerator$13191$1S&e0X g$x$13614$1S&e0X)
                 (g$ratnum-denominator$13190$1S&e0X g$x$13614$1S&e0X)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Floor(System.Double)"
                  '()
                  (g$inexact$13226$1S&e0X g$x$13614$1S&e0X)))))))))
   (g$ceiling$13391$1S&e0X
     g$ceiling$13722$1S&e0X
     (case-lambda
       ((g$x$13616$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x$13616$1S&e0X))
            (assertion-violation
              'ceiling
              '"not a real"
              g$x$13616$1S&e0X)
            (void))
          (if (g$exact-integer?$13339$1S&e0X g$x$13616$1S&e0X)
            g$x$13616$1S&e0X
            (if (g$ratnum?$13189$1S&e0X g$x$13616$1S&e0X)
              ((case-lambda
                 ((g$r$13617$1S&e0X)
                  (g$exact$13227$1S&e0X
                    (if (g$positive?$13224$1S&e0X g$r$13617$1S&e0X)
                      (+ g$r$13617$1S&e0X '1)
                      g$r$13617$1S&e0X))))
               (g$bignum/$13196$1S&e0X
                 (g$ratnum-numerator$13191$1S&e0X g$x$13616$1S&e0X)
                 (g$ratnum-denominator$13190$1S&e0X g$x$13616$1S&e0X)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Ceiling(System.Double)"
                  '()
                  (g$inexact$13226$1S&e0X g$x$13616$1S&e0X)))))))))
   (g$truncate$13392$1S&e0X
     g$truncate$13723$1S&e0X
     (case-lambda
       ((g$x$13618$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x$13618$1S&e0X))
            (assertion-violation
              'truncate
              '"not a real"
              g$x$13618$1S&e0X)
            (void))
          (if (g$exact-integer?$13339$1S&e0X g$x$13618$1S&e0X)
            g$x$13618$1S&e0X
            (begin
              '#f
              ((case-lambda
                 ((g$r$13619$1S&e0X)
                  (if (g$exact?$13214$1S&e0X g$x$13618$1S&e0X)
                    (g$exact$13227$1S&e0X g$r$13619$1S&e0X)
                    g$r$13619$1S&e0X)))
               (clr-call-internal
                 'System.Math
                 '"Truncate(System.Double)"
                 '()
                 (g$inexact$13226$1S&e0X g$x$13618$1S&e0X)))))))))
   (g$round$13393$1S&e0X
     g$round$13724$1S&e0X
     (case-lambda
       ((g$x$13620$1S&e0X)
        (begin
          (if (not (g$real?$13217$1S&e0X g$x$13620$1S&e0X))
            (assertion-violation 'round '"not a real" g$x$13620$1S&e0X)
            (void))
          (if (g$exact-integer?$13339$1S&e0X g$x$13620$1S&e0X)
            g$x$13620$1S&e0X
            (if (g$ratnum?$13189$1S&e0X g$x$13620$1S&e0X)
              ((case-lambda
                 ((g$num$13621$1S&e0X)
                  ((case-lambda
                     ((g$den$13622$1S&e0X)
                      ((case-lambda
                         ((g$d$13623$1S&e0X)
                          ((case-lambda
                             ((g$r$13624$1S&e0X)
                              ((case-lambda
                                 ((g$hd$13625$1S&e0X)
                                  (if (g$negative?$13225$1S&e0X
                                        g$r$13624$1S&e0X)
                                    (g$exact$13227$1S&e0X
                                      (if (g$>$13333$1S&e0X
                                            (- g$r$13624$1S&e0X)
                                            g$hd$13625$1S&e0X)
                                        (- g$d$13623$1S&e0X '1)
                                        (if (g$<$13331$1S&e0X
                                              (- g$r$13624$1S&e0X)
                                              g$hd$13625$1S&e0X)
                                          g$d$13623$1S&e0X
                                          (if (g$even?$12711$1S&e0X
                                                g$d$13623$1S&e0X)
                                            g$d$13623$1S&e0X
                                            (begin
                                              '#f
                                              (+ g$d$13623$1S&e0X
                                                 '1))))))
                                    (if (g$positive?$13224$1S&e0X
                                          g$r$13624$1S&e0X)
                                      (g$exact$13227$1S&e0X
                                        (if (g$>$13333$1S&e0X
                                              g$r$13624$1S&e0X
                                              g$hd$13625$1S&e0X)
                                          (+ g$d$13623$1S&e0X '1)
                                          (if (g$<$13331$1S&e0X
                                                g$r$13624$1S&e0X
                                                g$hd$13625$1S&e0X)
                                            g$d$13623$1S&e0X
                                            (if (g$even?$12711$1S&e0X
                                                  g$d$13623$1S&e0X)
                                              g$d$13623$1S&e0X
                                              (begin
                                                '#f
                                                (+ g$d$13623$1S&e0X
                                                   '1))))))
                                      (begin '#f g$d$13623$1S&e0X)))))
                               (g$div$13388$1S&e0X
                                 g$d$13623$1S&e0X
                                 '2))))
                           (g$bignum%$13197$1S&e0X
                             g$num$13621$1S&e0X
                             g$den$13622$1S&e0X))))
                       (g$bignum/$13196$1S&e0X
                         g$num$13621$1S&e0X
                         g$den$13622$1S&e0X))))
                   (g$ratnum-denominator$13190$1S&e0X
                     g$x$13620$1S&e0X))))
               (g$ratnum-numerator$13191$1S&e0X g$x$13620$1S&e0X))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Round(System.Double)"
                  '()
                  (g$inexact$13226$1S&e0X g$x$13620$1S&e0X)))))))))
   (g$sqrt$13394$1S&e0X
     g$sqrt$13725$1S&e0X
     (case-lambda
       ((g$num$13626$1S&e0X)
        (if (g$rectnum?$13185$1S&e0X g$num$13626$1S&e0X)
          (g$sqrt$13394$1S&e0X
            (g$rectnum->complexnum$13204$1S&e0X g$num$13626$1S&e0X))
          (if (g$complexnum?$13192$1S&e0X g$num$13626$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Sqrt
              '()
              g$num$13626$1S&e0X)
            (if (g$negative?$13225$1S&e0X g$num$13626$1S&e0X)
              (g$make-rectangular$13335$1S&e0X
                '0
                (g$sqrt$13394$1S&e0X (- g$num$13626$1S&e0X)))
              (if (g$bignum?$13184$1S&e0X g$num$13626$1S&e0X)
                (bignum-sqrt g$num$13626$1S&e0X)
                (if (g$infinite?$13213$1S&e0X g$num$13626$1S&e0X)
                  g$num$13626$1S&e0X
                  (begin
                    '#f
                    ((case-lambda
                       ((g$r$13627$1S&e0X)
                        (if (g$exact?$13214$1S&e0X g$num$13626$1S&e0X)
                          (g$exact$13227$1S&e0X g$r$13627$1S&e0X)
                          g$r$13627$1S&e0X)))
                     (clr-call-internal
                       'System.Math
                       'Sqrt
                       '()
                       (g$inexact$13226$1S&e0X
                         g$num$13626$1S&e0X))))))))))))
   (g$exact-integer-sqrt$13395$1S&e0X
     g$exact-integer-sqrt$13726$1S&e0X
     (case-lambda
       ((g$num$13628$1S&e0X)
        (if (g$bignum?$13184$1S&e0X g$num$13628$1S&e0X)
          (bignum-sqrt-exact g$num$13628$1S&e0X)
          ((case-lambda
             ((g$r$13629$1S&e0X)
              ((case-lambda
                 ((g$rf$13630$1S&e0X)
                  ((case-lambda
                     ((g$rest$13631$1S&e0X)
                      (values g$rf$13630$1S&e0X g$rest$13631$1S&e0X)))
                   (- g$num$13628$1S&e0X
                      (* g$rf$13630$1S&e0X g$rf$13630$1S&e0X)))))
               (g$exact$13227$1S&e0X
                 (g$floor$13390$1S&e0X g$r$13629$1S&e0X)))))
           (g$sqrt$13394$1S&e0X g$num$13628$1S&e0X))))))
   (g$expt$13396$1S&e0X
     g$expt$13727$1S&e0X
     (case-lambda
       ((g$obj1$13632$1S&e0X g$obj2$13633$1S&e0X)
        (letrec* ((g$make-restriction-violation$13634$1S&e0X
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$14265$1S&e0X)
                         (g$make-who-condition$14227$1S&e0X 'expt)
                         (g$make-message-condition$14167$1S&e0X
                           '"not supported")
                         (g$make-irritants-condition$14217$1S&e0X
                           g$obj1$13632$1S&e0X
                           g$obj2$13633$1S&e0X))))))
          (if (g$rectnum?$13185$1S&e0X g$obj1$13632$1S&e0X)
            (g$expt$13396$1S&e0X
              (g$rectnum->complexnum$13204$1S&e0X g$obj1$13632$1S&e0X)
              g$obj2$13633$1S&e0X)
            (if ((case-lambda
                   ((g$t$13635$1S&e0X)
                    (if g$t$13635$1S&e0X
                      g$t$13635$1S&e0X
                      (begin
                        '#f
                        (g$negative?$13225$1S&e0X
                          g$obj1$13632$1S&e0X)))))
                 (g$complexnum?$13192$1S&e0X g$obj1$13632$1S&e0X))
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Pow
                '()
                (g$real->complexnum$13202$1S&e0X g$obj1$13632$1S&e0X)
                (g$real->complexnum$13202$1S&e0X g$obj2$13633$1S&e0X))
              (begin
                '#f
                ((case-lambda
                   ((g$e$13636$1S&e0X
                      g$z1$13637$1S&e0X
                      g$z2$13638$1S&e0X)
                    (if (if g$z1$13637$1S&e0X
                          (begin '#f (not g$z2$13638$1S&e0X))
                          '#f)
                      (if g$e$13636$1S&e0X '0 '0.0)
                      (if ((case-lambda
                             ((g$t$13639$1S&e0X)
                              (if g$t$13639$1S&e0X
                                g$t$13639$1S&e0X
                                (begin
                                  '#f
                                  (g$=$13330$1S&e0X
                                    g$obj1$13632$1S&e0X
                                    '1)))))
                           g$z2$13638$1S&e0X)
                        (if g$e$13636$1S&e0X '1 '1.0)
                        (if (g$=$13330$1S&e0X g$obj2$13633$1S&e0X '1)
                          (if g$e$13636$1S&e0X
                            g$obj1$13632$1S&e0X
                            (g$inexact$13226$1S&e0X
                              g$obj1$13632$1S&e0X))
                          (begin
                            '#f
                            ((case-lambda
                               ((g$neg?$13640$1S&e0X)
                                ((case-lambda
                                   ((g$obj2$13641$1S&e0X)
                                    (if (if (g$integer?$13219$1S&e0X
                                              g$obj1$13632$1S&e0X)
                                          (begin
                                            '#f
                                            (g$integer?$13219$1S&e0X
                                              g$obj2$13641$1S&e0X))
                                          '#f)
                                      ((case-lambda
                                         ((g$a$13642$1S&e0X)
                                          ((case-lambda
                                             ((g$r$13643$1S&e0X)
                                              (if g$neg?$13640$1S&e0X
                                                (if (g$zero?$13223$1S&e0X
                                                      g$r$13643$1S&e0X)
                                                  (raise
                                                    (g$make-restriction-violation$13634$1S&e0X))
                                                  (/ '1
                                                     g$r$13643$1S&e0X))
                                                (g$exact$13227$1S&e0X
                                                  g$r$13643$1S&e0X))))
                                           (clr-call-internal
                                             'Microsoft.Scripting.Math.BigInteger
                                             'Power
                                             g$a$13642$1S&e0X
                                             (g$->fixnum$13205$1S&e0X
                                               g$obj2$13641$1S&e0X)))))
                                       (g$->bignum$13207$1S&e0X
                                         g$obj1$13632$1S&e0X))
                                      (if (if (g$rational?$13218$1S&e0X
                                                g$obj1$13632$1S&e0X)
                                            (begin
                                              '#f
                                              (g$integer?$13219$1S&e0X
                                                g$obj2$13641$1S&e0X))
                                            '#f)
                                        ((case-lambda
                                           ((g$f$13644$1S&e0X)
                                            (if g$neg?$13640$1S&e0X
                                              (/ (g$expt$13396$1S&e0X
                                                   (g$denominator$13341$1S&e0X
                                                     g$f$13644$1S&e0X)
                                                   g$obj2$13641$1S&e0X)
                                                 (g$expt$13396$1S&e0X
                                                   (g$numerator$13340$1S&e0X
                                                     g$f$13644$1S&e0X)
                                                   g$obj2$13641$1S&e0X))
                                              (/ (g$expt$13396$1S&e0X
                                                   (g$numerator$13340$1S&e0X
                                                     g$f$13644$1S&e0X)
                                                   g$obj2$13641$1S&e0X)
                                                 (g$expt$13396$1S&e0X
                                                   (g$denominator$13341$1S&e0X
                                                     g$f$13644$1S&e0X)
                                                   g$obj2$13641$1S&e0X)))))
                                         (g$->ratnum$13206$1S&e0X
                                           g$obj1$13632$1S&e0X))
                                        (if (if (g$real?$13217$1S&e0X
                                                  g$obj1$13632$1S&e0X)
                                              (begin
                                                '#f
                                                (g$real?$13217$1S&e0X
                                                  g$obj2$13641$1S&e0X))
                                              '#f)
                                          ((case-lambda
                                             ((g$r$13645$1S&e0X)
                                              (if g$neg?$13640$1S&e0X
                                                (/ '1 g$r$13645$1S&e0X)
                                                g$r$13645$1S&e0X)))
                                           (clr-call-internal
                                             'System.Math
                                             'Pow
                                             '()
                                             (g$inexact$13226$1S&e0X
                                               g$obj1$13632$1S&e0X)
                                             (g$inexact$13226$1S&e0X
                                               g$obj2$13641$1S&e0X)))
                                          (begin
                                            '#f
                                            (raise
                                              (g$make-restriction-violation$13634$1S&e0X))))))))
                                 (if g$neg?$13640$1S&e0X
                                   (g$abs$13389$1S&e0X
                                     g$obj2$13633$1S&e0X)
                                   g$obj2$13633$1S&e0X))))
                             (g$negative?$13225$1S&e0X
                               g$obj2$13633$1S&e0X))))))))
                 (if (g$exact?$13214$1S&e0X g$obj1$13632$1S&e0X)
                   (begin
                     '#f
                     (g$exact?$13214$1S&e0X g$obj2$13633$1S&e0X))
                   '#f)
                 (g$zero?$13223$1S&e0X g$obj1$13632$1S&e0X)
                 (g$zero?$13223$1S&e0X g$obj2$13633$1S&e0X))))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6479$13728$1S&e0X
     g$6479$14156$1S&e0X
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6482$1S&e0X
       '#f
       '#f
       '#()))
   (g$6481$13729$1S&e0X g$6481$14157$1S&e0X '#f)
   (g$6480$13730$1S&e0X
     g$6480$14158$1S&e0X
     (make-record-constructor-descriptor
       g$6479$13728$1S&e0X
       '#f
       g$6481$13729$1S&e0X))
   (g$&condition?$13733$1S&e0X
     g$&condition?$14159$1S&e0X
     (record-predicate g$6479$13728$1S&e0X))
   (g$make-&condition$13734$1S&e0X
     g$make-&condition$14160$1S&e0X
     (record-constructor g$6480$13730$1S&e0X))
   (g$&condition-rtd$13735$1S&e0X
     g$&condition-rtd$14161$1S&e0X
     g$6479$13728$1S&e0X)
   (g$&condition-rcd$13736$1S&e0X
     g$&condition-rcd$14162$1S&e0X
     g$6480$13730$1S&e0X)
   (g$6516$13834$1S&e0X
     g$6516$14163$1S&e0X
     (make-record-type-descriptor
       '&message
       g$6479$13728$1S&e0X
       'g$6519$1S&e0X
       '#f
       '#f
       '#((immutable message))))
   (g$6518$13835$1S&e0X g$6518$14164$1S&e0X '#f)
   (g$6517$13836$1S&e0X
     g$6517$14165$1S&e0X
     (make-record-constructor-descriptor
       g$6516$13834$1S&e0X
       g$6480$13730$1S&e0X
       g$6518$13835$1S&e0X))
   (g$p?$13839$1S&e0X
     g$p?$14166$1S&e0X
     (record-predicate g$6516$13834$1S&e0X))
   (g$make-message-condition$13840$1S&e0X
     g$make-message-condition$14167$1S&e0X
     (record-constructor g$6517$13836$1S&e0X))
   (g$condition-message$13841$1S&e0X
     g$condition-message$14168$1S&e0X
     (record-accessor g$6516$13834$1S&e0X '0))
   (g$message-condition?$13842$1S&e0X
     g$message-condition?$14169$1S&e0X
     (condition-predicate g$6516$13834$1S&e0X))
   (g$condition-message$13843$1S&e0X
     g$condition-message$14170$1S&e0X
     (condition-accessor
       g$6516$13834$1S&e0X
       g$condition-message$13841$1S&e0X))
   (g$&message-rtd$13844$1S&e0X
     g$&message-rtd$14171$1S&e0X
     g$6516$13834$1S&e0X)
   (g$&message-rcd$13845$1S&e0X
     g$&message-rcd$14172$1S&e0X
     g$6517$13836$1S&e0X)
   (g$6531$13846$1S&e0X
     g$6531$14173$1S&e0X
     (make-record-type-descriptor
       '&warning
       g$6479$13728$1S&e0X
       'g$6534$1S&e0X
       '#f
       '#f
       '#()))
   (g$6533$13847$1S&e0X g$6533$14174$1S&e0X '#f)
   (g$6532$13848$1S&e0X
     g$6532$14175$1S&e0X
     (make-record-constructor-descriptor
       g$6531$13846$1S&e0X
       g$6480$13730$1S&e0X
       g$6533$13847$1S&e0X))
   (g$p?$13851$1S&e0X
     g$p?$14176$1S&e0X
     (record-predicate g$6531$13846$1S&e0X))
   (g$make-warning$13852$1S&e0X
     g$make-warning$14177$1S&e0X
     (record-constructor g$6532$13848$1S&e0X))
   (g$warning?$13853$1S&e0X
     g$warning?$14178$1S&e0X
     (condition-predicate g$6531$13846$1S&e0X))
   (g$&warning-rtd$13854$1S&e0X
     g$&warning-rtd$14179$1S&e0X
     g$6531$13846$1S&e0X)
   (g$&warning-rcd$13855$1S&e0X
     g$&warning-rcd$14180$1S&e0X
     g$6532$13848$1S&e0X)
   (g$6544$13856$1S&e0X
     g$6544$14181$1S&e0X
     (make-record-type-descriptor
       '&serious
       g$6479$13728$1S&e0X
       'g$6547$1S&e0X
       '#f
       '#f
       '#()))
   (g$6546$13857$1S&e0X g$6546$14182$1S&e0X '#f)
   (g$6545$13858$1S&e0X
     g$6545$14183$1S&e0X
     (make-record-constructor-descriptor
       g$6544$13856$1S&e0X
       g$6480$13730$1S&e0X
       g$6546$13857$1S&e0X))
   (g$p?$13861$1S&e0X
     g$p?$14184$1S&e0X
     (record-predicate g$6544$13856$1S&e0X))
   (g$make-serious-condition$13862$1S&e0X
     g$make-serious-condition$14185$1S&e0X
     (record-constructor g$6545$13858$1S&e0X))
   (g$serious-condition?$13863$1S&e0X
     g$serious-condition?$14186$1S&e0X
     (condition-predicate g$6544$13856$1S&e0X))
   (g$&serious-rtd$13864$1S&e0X
     g$&serious-rtd$14187$1S&e0X
     g$6544$13856$1S&e0X)
   (g$&serious-rcd$13865$1S&e0X
     g$&serious-rcd$14188$1S&e0X
     g$6545$13858$1S&e0X)
   (g$6557$13866$1S&e0X
     g$6557$14189$1S&e0X
     (make-record-type-descriptor
       '&error
       g$6544$13856$1S&e0X
       'g$6560$1S&e0X
       '#f
       '#f
       '#()))
   (g$6559$13867$1S&e0X g$6559$14190$1S&e0X '#f)
   (g$6558$13868$1S&e0X
     g$6558$14191$1S&e0X
     (make-record-constructor-descriptor
       g$6557$13866$1S&e0X
       g$6545$13858$1S&e0X
       g$6559$13867$1S&e0X))
   (g$p?$13871$1S&e0X
     g$p?$14192$1S&e0X
     (record-predicate g$6557$13866$1S&e0X))
   (g$make-error$13872$1S&e0X
     g$make-error$14193$1S&e0X
     (record-constructor g$6558$13868$1S&e0X))
   (g$error?$13873$1S&e0X
     g$error?$14194$1S&e0X
     (condition-predicate g$6557$13866$1S&e0X))
   (g$&error-rtd$13874$1S&e0X
     g$&error-rtd$14195$1S&e0X
     g$6557$13866$1S&e0X)
   (g$&error-rcd$13875$1S&e0X
     g$&error-rcd$14196$1S&e0X
     g$6558$13868$1S&e0X)
   (g$6570$13876$1S&e0X
     g$6570$14197$1S&e0X
     (make-record-type-descriptor
       '&violation
       g$6544$13856$1S&e0X
       'g$6573$1S&e0X
       '#f
       '#f
       '#()))
   (g$6572$13877$1S&e0X g$6572$14198$1S&e0X '#f)
   (g$6571$13878$1S&e0X
     g$6571$14199$1S&e0X
     (make-record-constructor-descriptor
       g$6570$13876$1S&e0X
       g$6545$13858$1S&e0X
       g$6572$13877$1S&e0X))
   (g$p?$13881$1S&e0X
     g$p?$14200$1S&e0X
     (record-predicate g$6570$13876$1S&e0X))
   (g$make-violation$13882$1S&e0X
     g$make-violation$14201$1S&e0X
     (record-constructor g$6571$13878$1S&e0X))
   (g$violation?$13883$1S&e0X
     g$violation?$14202$1S&e0X
     (condition-predicate g$6570$13876$1S&e0X))
   (g$&violation-rtd$13884$1S&e0X
     g$&violation-rtd$14203$1S&e0X
     g$6570$13876$1S&e0X)
   (g$&violation-rcd$13885$1S&e0X
     g$&violation-rcd$14204$1S&e0X
     g$6571$13878$1S&e0X)
   (g$6583$13886$1S&e0X
     g$6583$14205$1S&e0X
     (make-record-type-descriptor
       '&assertion
       g$6570$13876$1S&e0X
       'g$6586$1S&e0X
       '#f
       '#f
       '#()))
   (g$6585$13887$1S&e0X g$6585$14206$1S&e0X '#f)
   (g$6584$13888$1S&e0X
     g$6584$14207$1S&e0X
     (make-record-constructor-descriptor
       g$6583$13886$1S&e0X
       g$6571$13878$1S&e0X
       g$6585$13887$1S&e0X))
   (g$p?$13891$1S&e0X
     g$p?$14208$1S&e0X
     (record-predicate g$6583$13886$1S&e0X))
   (g$make-assertion-violation$13892$1S&e0X
     g$make-assertion-violation$14209$1S&e0X
     (record-constructor g$6584$13888$1S&e0X))
   (g$assertion-violation?$13893$1S&e0X
     g$assertion-violation?$14210$1S&e0X
     (condition-predicate g$6583$13886$1S&e0X))
   (g$&assertion-rtd$13894$1S&e0X
     g$&assertion-rtd$14211$1S&e0X
     g$6583$13886$1S&e0X)
   (g$&assertion-rcd$13895$1S&e0X
     g$&assertion-rcd$14212$1S&e0X
     g$6584$13888$1S&e0X)
   (g$6596$13897$1S&e0X
     g$6596$14213$1S&e0X
     (make-record-type-descriptor
       '&irritants
       g$6479$13728$1S&e0X
       'g$6599$1S&e0X
       '#f
       '#f
       '#((immutable irritants))))
   (g$6598$13898$1S&e0X g$6598$14214$1S&e0X '#f)
   (g$6597$13899$1S&e0X
     g$6597$14215$1S&e0X
     (make-record-constructor-descriptor
       g$6596$13897$1S&e0X
       g$6480$13730$1S&e0X
       g$6598$13898$1S&e0X))
   (g$p?$13902$1S&e0X
     g$p?$14216$1S&e0X
     (record-predicate g$6596$13897$1S&e0X))
   (g$make-irritants-condition$13903$1S&e0X
     g$make-irritants-condition$14217$1S&e0X
     (record-constructor g$6597$13899$1S&e0X))
   (g$condition-irritants$13904$1S&e0X
     g$condition-irritants$14218$1S&e0X
     (record-accessor g$6596$13897$1S&e0X '0))
   (g$irritants-condition?$13905$1S&e0X
     g$irritants-condition?$14219$1S&e0X
     (condition-predicate g$6596$13897$1S&e0X))
   (g$condition-irritants$13906$1S&e0X
     g$condition-irritants$14220$1S&e0X
     (condition-accessor
       g$6596$13897$1S&e0X
       g$condition-irritants$13904$1S&e0X))
   (g$&irritants-rtd$13907$1S&e0X
     g$&irritants-rtd$14221$1S&e0X
     g$6596$13897$1S&e0X)
   (g$&irritants-rcd$13908$1S&e0X
     g$&irritants-rcd$14222$1S&e0X
     g$6597$13899$1S&e0X)
   (g$6611$13910$1S&e0X
     g$6611$14223$1S&e0X
     (make-record-type-descriptor
       '&who
       g$6479$13728$1S&e0X
       'g$6614$1S&e0X
       '#f
       '#f
       '#((immutable who))))
   (g$6613$13911$1S&e0X g$6613$14224$1S&e0X '#f)
   (g$6612$13912$1S&e0X
     g$6612$14225$1S&e0X
     (make-record-constructor-descriptor
       g$6611$13910$1S&e0X
       g$6480$13730$1S&e0X
       g$6613$13911$1S&e0X))
   (g$p?$13915$1S&e0X
     g$p?$14226$1S&e0X
     (record-predicate g$6611$13910$1S&e0X))
   (g$make-who-condition$13916$1S&e0X
     g$make-who-condition$14227$1S&e0X
     (record-constructor g$6612$13912$1S&e0X))
   (g$condition-who$13917$1S&e0X
     g$condition-who$14228$1S&e0X
     (record-accessor g$6611$13910$1S&e0X '0))
   (g$who-condition?$13918$1S&e0X
     g$who-condition?$14229$1S&e0X
     (condition-predicate g$6611$13910$1S&e0X))
   (g$condition-who$13919$1S&e0X
     g$condition-who$14230$1S&e0X
     (condition-accessor
       g$6611$13910$1S&e0X
       g$condition-who$13917$1S&e0X))
   (g$&who-rtd$13920$1S&e0X g$&who-rtd$14231$1S&e0X g$6611$13910$1S&e0X)
   (g$&who-rcd$13921$1S&e0X g$&who-rcd$14232$1S&e0X g$6612$13912$1S&e0X)
   (g$6626$13923$1S&e0X
     g$6626$14233$1S&e0X
     (make-record-type-descriptor
       '&where
       g$6479$13728$1S&e0X
       'g$6629$1S&e0X
       '#f
       '#f
       '#((immutable where))))
   (g$6628$13924$1S&e0X g$6628$14234$1S&e0X '#f)
   (g$6627$13925$1S&e0X
     g$6627$14235$1S&e0X
     (make-record-constructor-descriptor
       g$6626$13923$1S&e0X
       g$6480$13730$1S&e0X
       g$6628$13924$1S&e0X))
   (g$p?$13928$1S&e0X
     g$p?$14236$1S&e0X
     (record-predicate g$6626$13923$1S&e0X))
   (g$make-where-condition$13929$1S&e0X
     g$make-where-condition$14237$1S&e0X
     (record-constructor g$6627$13925$1S&e0X))
   (g$condition-where$13930$1S&e0X
     g$condition-where$14238$1S&e0X
     (record-accessor g$6626$13923$1S&e0X '0))
   (g$where-condition?$13931$1S&e0X
     g$where-condition?$14239$1S&e0X
     (condition-predicate g$6626$13923$1S&e0X))
   (g$condition-where$13932$1S&e0X
     g$condition-where$14240$1S&e0X
     (condition-accessor
       g$6626$13923$1S&e0X
       g$condition-where$13930$1S&e0X))
   (g$&where-rtd$13933$1S&e0X
     g$&where-rtd$14241$1S&e0X
     g$6626$13923$1S&e0X)
   (g$&where-rcd$13934$1S&e0X
     g$&where-rcd$14242$1S&e0X
     g$6627$13925$1S&e0X)
   (g$6641$13936$1S&e0X
     g$6641$14243$1S&e0X
     (make-record-type-descriptor
       '&stacktrace
       g$6479$13728$1S&e0X
       'g$6644$1S&e0X
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$6643$13937$1S&e0X g$6643$14244$1S&e0X '#f)
   (g$6642$13938$1S&e0X
     g$6642$14245$1S&e0X
     (make-record-constructor-descriptor
       g$6641$13936$1S&e0X
       g$6480$13730$1S&e0X
       g$6643$13937$1S&e0X))
   (g$p?$13941$1S&e0X
     g$p?$14246$1S&e0X
     (record-predicate g$6641$13936$1S&e0X))
   (g$make-stacktrace-condition$13942$1S&e0X
     g$make-stacktrace-condition$14247$1S&e0X
     (record-constructor g$6642$13938$1S&e0X))
   (g$condition-stacktrace$13943$1S&e0X
     g$condition-stacktrace$14248$1S&e0X
     (record-accessor g$6641$13936$1S&e0X '0))
   (g$stacktrace-condition?$13944$1S&e0X
     g$stacktrace-condition?$14249$1S&e0X
     (condition-predicate g$6641$13936$1S&e0X))
   (g$condition-stacktrace$13945$1S&e0X
     g$condition-stacktrace$14250$1S&e0X
     (condition-accessor
       g$6641$13936$1S&e0X
       g$condition-stacktrace$13943$1S&e0X))
   (g$&stacktrace-rtd$13946$1S&e0X
     g$&stacktrace-rtd$14251$1S&e0X
     g$6641$13936$1S&e0X)
   (g$&stacktrace-rcd$13947$1S&e0X
     g$&stacktrace-rcd$14252$1S&e0X
     g$6642$13938$1S&e0X)
   (g$6656$13948$1S&e0X
     g$6656$14253$1S&e0X
     (make-record-type-descriptor
       '&non-continuable
       g$6570$13876$1S&e0X
       'g$6659$1S&e0X
       '#f
       '#f
       '#()))
   (g$6658$13949$1S&e0X g$6658$14254$1S&e0X '#f)
   (g$6657$13950$1S&e0X
     g$6657$14255$1S&e0X
     (make-record-constructor-descriptor
       g$6656$13948$1S&e0X
       g$6571$13878$1S&e0X
       g$6658$13949$1S&e0X))
   (g$p?$13953$1S&e0X
     g$p?$14256$1S&e0X
     (record-predicate g$6656$13948$1S&e0X))
   (g$make-non-continuable-violation$13954$1S&e0X
     g$make-non-continuable-violation$14257$1S&e0X
     (record-constructor g$6657$13950$1S&e0X))
   (g$non-continuable-violation?$13955$1S&e0X
     g$non-continuable-violation?$14258$1S&e0X
     (condition-predicate g$6656$13948$1S&e0X))
   (g$&non-continuable-rtd$13956$1S&e0X
     g$&non-continuable-rtd$14259$1S&e0X
     g$6656$13948$1S&e0X)
   (g$&non-continuable-rcd$13957$1S&e0X
     g$&non-continuable-rcd$14260$1S&e0X
     g$6657$13950$1S&e0X)
   (g$6669$13958$1S&e0X
     g$6669$14261$1S&e0X
     (make-record-type-descriptor
       '&implementation-restriction
       g$6570$13876$1S&e0X
       'g$6672$1S&e0X
       '#f
       '#f
       '#()))
   (g$6671$13959$1S&e0X g$6671$14262$1S&e0X '#f)
   (g$6670$13960$1S&e0X
     g$6670$14263$1S&e0X
     (make-record-constructor-descriptor
       g$6669$13958$1S&e0X
       g$6571$13878$1S&e0X
       g$6671$13959$1S&e0X))
   (g$p?$13963$1S&e0X
     g$p?$14264$1S&e0X
     (record-predicate g$6669$13958$1S&e0X))
   (g$make-implementation-restriction-violation$13964$1S&e0X
     g$make-implementation-restriction-violation$14265$1S&e0X
     (record-constructor g$6670$13960$1S&e0X))
   (g$implementation-restriction-violation?$13965$1S&e0X
     g$implementation-restriction-violation?$14266$1S&e0X
     (condition-predicate g$6669$13958$1S&e0X))
   (g$&implementation-restriction-rtd$13966$1S&e0X
     g$&implementation-restriction-rtd$14267$1S&e0X
     g$6669$13958$1S&e0X)
   (g$&implementation-restriction-rcd$13967$1S&e0X
     g$&implementation-restriction-rcd$14268$1S&e0X
     g$6670$13960$1S&e0X)
   (g$6682$13968$1S&e0X
     g$6682$14269$1S&e0X
     (make-record-type-descriptor
       '&lexical
       g$6570$13876$1S&e0X
       'g$6685$1S&e0X
       '#f
       '#f
       '#()))
   (g$6684$13969$1S&e0X g$6684$14270$1S&e0X '#f)
   (g$6683$13970$1S&e0X
     g$6683$14271$1S&e0X
     (make-record-constructor-descriptor
       g$6682$13968$1S&e0X
       g$6571$13878$1S&e0X
       g$6684$13969$1S&e0X))
   (g$p?$13973$1S&e0X
     g$p?$14272$1S&e0X
     (record-predicate g$6682$13968$1S&e0X))
   (g$make-lexical-violation$13974$1S&e0X
     g$make-lexical-violation$14273$1S&e0X
     (record-constructor g$6683$13970$1S&e0X))
   (g$lexical-violation?$13975$1S&e0X
     g$lexical-violation?$14274$1S&e0X
     (condition-predicate g$6682$13968$1S&e0X))
   (g$&lexical-rtd$13976$1S&e0X
     g$&lexical-rtd$14275$1S&e0X
     g$6682$13968$1S&e0X)
   (g$&lexical-rcd$13977$1S&e0X
     g$&lexical-rcd$14276$1S&e0X
     g$6683$13970$1S&e0X)
   (g$6695$13980$1S&e0X
     g$6695$14277$1S&e0X
     (make-record-type-descriptor
       '&syntax
       g$6570$13876$1S&e0X
       'g$6698$1S&e0X
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6697$13981$1S&e0X g$6697$14278$1S&e0X '#f)
   (g$6696$13982$1S&e0X
     g$6696$14279$1S&e0X
     (make-record-constructor-descriptor
       g$6695$13980$1S&e0X
       g$6571$13878$1S&e0X
       g$6697$13981$1S&e0X))
   (g$p?$13985$1S&e0X
     g$p?$14280$1S&e0X
     (record-predicate g$6695$13980$1S&e0X))
   (g$make-syntax-violation$13986$1S&e0X
     g$make-syntax-violation$14281$1S&e0X
     (record-constructor g$6696$13982$1S&e0X))
   (g$syntax-violation-form$13987$1S&e0X
     g$syntax-violation-form$14282$1S&e0X
     (record-accessor g$6695$13980$1S&e0X '0))
   (g$syntax-violation-subform$13988$1S&e0X
     g$syntax-violation-subform$14283$1S&e0X
     (record-accessor g$6695$13980$1S&e0X '1))
   (g$syntax-violation?$13989$1S&e0X
     g$syntax-violation?$14284$1S&e0X
     (condition-predicate g$6695$13980$1S&e0X))
   (g$syntax-violation-form$13990$1S&e0X
     g$syntax-violation-form$14285$1S&e0X
     (condition-accessor
       g$6695$13980$1S&e0X
       g$syntax-violation-form$13987$1S&e0X))
   (g$syntax-violation-subform$13991$1S&e0X
     g$syntax-violation-subform$14286$1S&e0X
     (condition-accessor
       g$6695$13980$1S&e0X
       g$syntax-violation-subform$13988$1S&e0X))
   (g$&syntax-rtd$13992$1S&e0X
     g$&syntax-rtd$14287$1S&e0X
     g$6695$13980$1S&e0X)
   (g$&syntax-rcd$13993$1S&e0X
     g$&syntax-rcd$14288$1S&e0X
     g$6696$13982$1S&e0X)
   (g$6712$13994$1S&e0X
     g$6712$14289$1S&e0X
     (make-record-type-descriptor
       '&undefined
       g$6570$13876$1S&e0X
       'g$6715$1S&e0X
       '#f
       '#f
       '#()))
   (g$6714$13995$1S&e0X g$6714$14290$1S&e0X '#f)
   (g$6713$13996$1S&e0X
     g$6713$14291$1S&e0X
     (make-record-constructor-descriptor
       g$6712$13994$1S&e0X
       g$6571$13878$1S&e0X
       g$6714$13995$1S&e0X))
   (g$p?$13999$1S&e0X
     g$p?$14292$1S&e0X
     (record-predicate g$6712$13994$1S&e0X))
   (g$make-undefined-violation$14000$1S&e0X
     g$make-undefined-violation$14293$1S&e0X
     (record-constructor g$6713$13996$1S&e0X))
   (g$undefined-violation?$14001$1S&e0X
     g$undefined-violation?$14294$1S&e0X
     (condition-predicate g$6712$13994$1S&e0X))
   (g$&undefined-rtd$14002$1S&e0X
     g$&undefined-rtd$14295$1S&e0X
     g$6712$13994$1S&e0X)
   (g$&undefined-rcd$14003$1S&e0X
     g$&undefined-rcd$14296$1S&e0X
     g$6713$13996$1S&e0X)
   (g$6725$14004$1S&e0X
     g$6725$14297$1S&e0X
     (make-record-type-descriptor
       '&i/o
       g$6557$13866$1S&e0X
       'g$6728$1S&e0X
       '#f
       '#f
       '#()))
   (g$6727$14005$1S&e0X g$6727$14298$1S&e0X '#f)
   (g$6726$14006$1S&e0X
     g$6726$14299$1S&e0X
     (make-record-constructor-descriptor
       g$6725$14004$1S&e0X
       g$6558$13868$1S&e0X
       g$6727$14005$1S&e0X))
   (g$p?$14009$1S&e0X
     g$p?$14300$1S&e0X
     (record-predicate g$6725$14004$1S&e0X))
   (g$make-i/o-error$14010$1S&e0X
     g$make-i/o-error$14301$1S&e0X
     (record-constructor g$6726$14006$1S&e0X))
   (g$i/o-error?$14011$1S&e0X
     g$i/o-error?$14302$1S&e0X
     (condition-predicate g$6725$14004$1S&e0X))
   (g$&i/o-rtd$14012$1S&e0X g$&i/o-rtd$14303$1S&e0X g$6725$14004$1S&e0X)
   (g$&i/o-rcd$14013$1S&e0X g$&i/o-rcd$14304$1S&e0X g$6726$14006$1S&e0X)
   (g$6738$14014$1S&e0X
     g$6738$14305$1S&e0X
     (make-record-type-descriptor
       '&i/o-read
       g$6725$14004$1S&e0X
       'g$6741$1S&e0X
       '#f
       '#f
       '#()))
   (g$6740$14015$1S&e0X g$6740$14306$1S&e0X '#f)
   (g$6739$14016$1S&e0X
     g$6739$14307$1S&e0X
     (make-record-constructor-descriptor
       g$6738$14014$1S&e0X
       g$6726$14006$1S&e0X
       g$6740$14015$1S&e0X))
   (g$p?$14019$1S&e0X
     g$p?$14308$1S&e0X
     (record-predicate g$6738$14014$1S&e0X))
   (g$make-i/o-read-error$14020$1S&e0X
     g$make-i/o-read-error$14309$1S&e0X
     (record-constructor g$6739$14016$1S&e0X))
   (g$i/o-read-error?$14021$1S&e0X
     g$i/o-read-error?$14310$1S&e0X
     (condition-predicate g$6738$14014$1S&e0X))
   (g$&i/o-read-rtd$14022$1S&e0X
     g$&i/o-read-rtd$14311$1S&e0X
     g$6738$14014$1S&e0X)
   (g$&i/o-read-rcd$14023$1S&e0X
     g$&i/o-read-rcd$14312$1S&e0X
     g$6739$14016$1S&e0X)
   (g$6751$14024$1S&e0X
     g$6751$14313$1S&e0X
     (make-record-type-descriptor
       '&i/o-write
       g$6725$14004$1S&e0X
       'g$6754$1S&e0X
       '#f
       '#f
       '#()))
   (g$6753$14025$1S&e0X g$6753$14314$1S&e0X '#f)
   (g$6752$14026$1S&e0X
     g$6752$14315$1S&e0X
     (make-record-constructor-descriptor
       g$6751$14024$1S&e0X
       g$6726$14006$1S&e0X
       g$6753$14025$1S&e0X))
   (g$p?$14029$1S&e0X
     g$p?$14316$1S&e0X
     (record-predicate g$6751$14024$1S&e0X))
   (g$make-i/o-write-error$14030$1S&e0X
     g$make-i/o-write-error$14317$1S&e0X
     (record-constructor g$6752$14026$1S&e0X))
   (g$i/o-write-error?$14031$1S&e0X
     g$i/o-write-error?$14318$1S&e0X
     (condition-predicate g$6751$14024$1S&e0X))
   (g$&i/o-write-rtd$14032$1S&e0X
     g$&i/o-write-rtd$14319$1S&e0X
     g$6751$14024$1S&e0X)
   (g$&i/o-write-rcd$14033$1S&e0X
     g$&i/o-write-rcd$14320$1S&e0X
     g$6752$14026$1S&e0X)
   (g$6764$14035$1S&e0X
     g$6764$14321$1S&e0X
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6725$14004$1S&e0X
       'g$6767$1S&e0X
       '#f
       '#f
       '#((immutable position))))
   (g$6766$14036$1S&e0X g$6766$14322$1S&e0X '#f)
   (g$6765$14037$1S&e0X
     g$6765$14323$1S&e0X
     (make-record-constructor-descriptor
       g$6764$14035$1S&e0X
       g$6726$14006$1S&e0X
       g$6766$14036$1S&e0X))
   (g$p?$14040$1S&e0X
     g$p?$14324$1S&e0X
     (record-predicate g$6764$14035$1S&e0X))
   (g$make-i/o-invalid-position-error$14041$1S&e0X
     g$make-i/o-invalid-position-error$14325$1S&e0X
     (record-constructor g$6765$14037$1S&e0X))
   (g$i/o-error-position$14042$1S&e0X
     g$i/o-error-position$14326$1S&e0X
     (record-accessor g$6764$14035$1S&e0X '0))
   (g$i/o-invalid-position-error?$14043$1S&e0X
     g$i/o-invalid-position-error?$14327$1S&e0X
     (condition-predicate g$6764$14035$1S&e0X))
   (g$i/o-error-position$14044$1S&e0X
     g$i/o-error-position$14328$1S&e0X
     (condition-accessor
       g$6764$14035$1S&e0X
       g$i/o-error-position$14042$1S&e0X))
   (g$&i/o-invalid-position-rtd$14045$1S&e0X
     g$&i/o-invalid-position-rtd$14329$1S&e0X
     g$6764$14035$1S&e0X)
   (g$&i/o-invalid-position-rcd$14046$1S&e0X
     g$&i/o-invalid-position-rcd$14330$1S&e0X
     g$6765$14037$1S&e0X)
   (g$6779$14048$1S&e0X
     g$6779$14331$1S&e0X
     (make-record-type-descriptor
       '&i/o-filename
       g$6725$14004$1S&e0X
       'g$6782$1S&e0X
       '#f
       '#f
       '#((immutable filename))))
   (g$6781$14049$1S&e0X g$6781$14332$1S&e0X '#f)
   (g$6780$14050$1S&e0X
     g$6780$14333$1S&e0X
     (make-record-constructor-descriptor
       g$6779$14048$1S&e0X
       g$6726$14006$1S&e0X
       g$6781$14049$1S&e0X))
   (g$p?$14053$1S&e0X
     g$p?$14334$1S&e0X
     (record-predicate g$6779$14048$1S&e0X))
   (g$make-i/o-filename-error$14054$1S&e0X
     g$make-i/o-filename-error$14335$1S&e0X
     (record-constructor g$6780$14050$1S&e0X))
   (g$i/o-error-filename$14055$1S&e0X
     g$i/o-error-filename$14336$1S&e0X
     (record-accessor g$6779$14048$1S&e0X '0))
   (g$i/o-filename-error?$14056$1S&e0X
     g$i/o-filename-error?$14337$1S&e0X
     (condition-predicate g$6779$14048$1S&e0X))
   (g$i/o-error-filename$14057$1S&e0X
     g$i/o-error-filename$14338$1S&e0X
     (condition-accessor
       g$6779$14048$1S&e0X
       g$i/o-error-filename$14055$1S&e0X))
   (g$&i/o-filename-rtd$14058$1S&e0X
     g$&i/o-filename-rtd$14339$1S&e0X
     g$6779$14048$1S&e0X)
   (g$&i/o-filename-rcd$14059$1S&e0X
     g$&i/o-filename-rcd$14340$1S&e0X
     g$6780$14050$1S&e0X)
   (g$6794$14060$1S&e0X
     g$6794$14341$1S&e0X
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6779$14048$1S&e0X
       'g$6797$1S&e0X
       '#f
       '#f
       '#()))
   (g$6796$14061$1S&e0X g$6796$14342$1S&e0X '#f)
   (g$6795$14062$1S&e0X
     g$6795$14343$1S&e0X
     (make-record-constructor-descriptor
       g$6794$14060$1S&e0X
       g$6780$14050$1S&e0X
       g$6796$14061$1S&e0X))
   (g$p?$14065$1S&e0X
     g$p?$14344$1S&e0X
     (record-predicate g$6794$14060$1S&e0X))
   (g$make-i/o-file-protection-error$14066$1S&e0X
     g$make-i/o-file-protection-error$14345$1S&e0X
     (record-constructor g$6795$14062$1S&e0X))
   (g$i/o-file-protection-error?$14067$1S&e0X
     g$i/o-file-protection-error?$14346$1S&e0X
     (condition-predicate g$6794$14060$1S&e0X))
   (g$&i/o-file-protection-rtd$14068$1S&e0X
     g$&i/o-file-protection-rtd$14347$1S&e0X
     g$6794$14060$1S&e0X)
   (g$&i/o-file-protection-rcd$14069$1S&e0X
     g$&i/o-file-protection-rcd$14348$1S&e0X
     g$6795$14062$1S&e0X)
   (g$6807$14070$1S&e0X
     g$6807$14349$1S&e0X
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6794$14060$1S&e0X
       'g$6810$1S&e0X
       '#f
       '#f
       '#()))
   (g$6809$14071$1S&e0X g$6809$14350$1S&e0X '#f)
   (g$6808$14072$1S&e0X
     g$6808$14351$1S&e0X
     (make-record-constructor-descriptor
       g$6807$14070$1S&e0X
       g$6795$14062$1S&e0X
       g$6809$14071$1S&e0X))
   (g$p?$14075$1S&e0X
     g$p?$14352$1S&e0X
     (record-predicate g$6807$14070$1S&e0X))
   (g$make-i/o-file-is-read-only-error$14076$1S&e0X
     g$make-i/o-file-is-read-only-error$14353$1S&e0X
     (record-constructor g$6808$14072$1S&e0X))
   (g$i/o-file-is-read-only-error?$14077$1S&e0X
     g$i/o-file-is-read-only-error?$14354$1S&e0X
     (condition-predicate g$6807$14070$1S&e0X))
   (g$&i/o-file-is-read-only-rtd$14078$1S&e0X
     g$&i/o-file-is-read-only-rtd$14355$1S&e0X
     g$6807$14070$1S&e0X)
   (g$&i/o-file-is-read-only-rcd$14079$1S&e0X
     g$&i/o-file-is-read-only-rcd$14356$1S&e0X
     g$6808$14072$1S&e0X)
   (g$6820$14080$1S&e0X
     g$6820$14357$1S&e0X
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6779$14048$1S&e0X
       'g$6823$1S&e0X
       '#f
       '#f
       '#()))
   (g$6822$14081$1S&e0X g$6822$14358$1S&e0X '#f)
   (g$6821$14082$1S&e0X
     g$6821$14359$1S&e0X
     (make-record-constructor-descriptor
       g$6820$14080$1S&e0X
       g$6780$14050$1S&e0X
       g$6822$14081$1S&e0X))
   (g$p?$14085$1S&e0X
     g$p?$14360$1S&e0X
     (record-predicate g$6820$14080$1S&e0X))
   (g$make-i/o-file-already-exists-error$14086$1S&e0X
     g$make-i/o-file-already-exists-error$14361$1S&e0X
     (record-constructor g$6821$14082$1S&e0X))
   (g$i/o-file-already-exists-error?$14087$1S&e0X
     g$i/o-file-already-exists-error?$14362$1S&e0X
     (condition-predicate g$6820$14080$1S&e0X))
   (g$&i/o-file-already-exists-rtd$14088$1S&e0X
     g$&i/o-file-already-exists-rtd$14363$1S&e0X
     g$6820$14080$1S&e0X)
   (g$&i/o-file-already-exists-rcd$14089$1S&e0X
     g$&i/o-file-already-exists-rcd$14364$1S&e0X
     g$6821$14082$1S&e0X)
   (g$6833$14090$1S&e0X
     g$6833$14365$1S&e0X
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6779$14048$1S&e0X
       'g$6836$1S&e0X
       '#f
       '#f
       '#()))
   (g$6835$14091$1S&e0X g$6835$14366$1S&e0X '#f)
   (g$6834$14092$1S&e0X
     g$6834$14367$1S&e0X
     (make-record-constructor-descriptor
       g$6833$14090$1S&e0X
       g$6780$14050$1S&e0X
       g$6835$14091$1S&e0X))
   (g$p?$14095$1S&e0X
     g$p?$14368$1S&e0X
     (record-predicate g$6833$14090$1S&e0X))
   (g$make-i/o-file-does-not-exist-error$14096$1S&e0X
     g$make-i/o-file-does-not-exist-error$14369$1S&e0X
     (record-constructor g$6834$14092$1S&e0X))
   (g$i/o-file-does-not-exist-error?$14097$1S&e0X
     g$i/o-file-does-not-exist-error?$14370$1S&e0X
     (condition-predicate g$6833$14090$1S&e0X))
   (g$&i/o-file-does-not-exist-rtd$14098$1S&e0X
     g$&i/o-file-does-not-exist-rtd$14371$1S&e0X
     g$6833$14090$1S&e0X)
   (g$&i/o-file-does-not-exist-rcd$14099$1S&e0X
     g$&i/o-file-does-not-exist-rcd$14372$1S&e0X
     g$6834$14092$1S&e0X)
   (g$6846$14101$1S&e0X
     g$6846$14373$1S&e0X
     (make-record-type-descriptor
       '&i/o-port
       g$6725$14004$1S&e0X
       'g$6849$1S&e0X
       '#f
       '#f
       '#((immutable port))))
   (g$6848$14102$1S&e0X g$6848$14374$1S&e0X '#f)
   (g$6847$14103$1S&e0X
     g$6847$14375$1S&e0X
     (make-record-constructor-descriptor
       g$6846$14101$1S&e0X
       g$6726$14006$1S&e0X
       g$6848$14102$1S&e0X))
   (g$p?$14106$1S&e0X
     g$p?$14376$1S&e0X
     (record-predicate g$6846$14101$1S&e0X))
   (g$make-i/o-port-error$14107$1S&e0X
     g$make-i/o-port-error$14377$1S&e0X
     (record-constructor g$6847$14103$1S&e0X))
   (g$i/o-error-port$14108$1S&e0X
     g$i/o-error-port$14378$1S&e0X
     (record-accessor g$6846$14101$1S&e0X '0))
   (g$i/o-port-error?$14109$1S&e0X
     g$i/o-port-error?$14379$1S&e0X
     (condition-predicate g$6846$14101$1S&e0X))
   (g$i/o-error-port$14110$1S&e0X
     g$i/o-error-port$14380$1S&e0X
     (condition-accessor
       g$6846$14101$1S&e0X
       g$i/o-error-port$14108$1S&e0X))
   (g$&i/o-port-rtd$14111$1S&e0X
     g$&i/o-port-rtd$14381$1S&e0X
     g$6846$14101$1S&e0X)
   (g$&i/o-port-rcd$14112$1S&e0X
     g$&i/o-port-rcd$14382$1S&e0X
     g$6847$14103$1S&e0X)
   (g$6861$14113$1S&e0X
     g$6861$14383$1S&e0X
     (make-record-type-descriptor
       '&i/o-decoding
       g$6846$14101$1S&e0X
       'g$6864$1S&e0X
       '#f
       '#f
       '#()))
   (g$6863$14114$1S&e0X g$6863$14384$1S&e0X '#f)
   (g$6862$14115$1S&e0X
     g$6862$14385$1S&e0X
     (make-record-constructor-descriptor
       g$6861$14113$1S&e0X
       g$6847$14103$1S&e0X
       g$6863$14114$1S&e0X))
   (g$p?$14118$1S&e0X
     g$p?$14386$1S&e0X
     (record-predicate g$6861$14113$1S&e0X))
   (g$make-i/o-decoding-error$14119$1S&e0X
     g$make-i/o-decoding-error$14387$1S&e0X
     (record-constructor g$6862$14115$1S&e0X))
   (g$i/o-decoding-error?$14120$1S&e0X
     g$i/o-decoding-error?$14388$1S&e0X
     (condition-predicate g$6861$14113$1S&e0X))
   (g$&i/o-decoding-rtd$14121$1S&e0X
     g$&i/o-decoding-rtd$14389$1S&e0X
     g$6861$14113$1S&e0X)
   (g$&i/o-decoding-rcd$14122$1S&e0X
     g$&i/o-decoding-rcd$14390$1S&e0X
     g$6862$14115$1S&e0X)
   (g$6874$14124$1S&e0X
     g$6874$14391$1S&e0X
     (make-record-type-descriptor
       '&i/o-encoding
       g$6846$14101$1S&e0X
       'g$6877$1S&e0X
       '#f
       '#f
       '#((immutable char))))
   (g$6876$14125$1S&e0X g$6876$14392$1S&e0X '#f)
   (g$6875$14126$1S&e0X
     g$6875$14393$1S&e0X
     (make-record-constructor-descriptor
       g$6874$14124$1S&e0X
       g$6847$14103$1S&e0X
       g$6876$14125$1S&e0X))
   (g$p?$14129$1S&e0X
     g$p?$14394$1S&e0X
     (record-predicate g$6874$14124$1S&e0X))
   (g$make-i/o-encoding-error$14130$1S&e0X
     g$make-i/o-encoding-error$14395$1S&e0X
     (record-constructor g$6875$14126$1S&e0X))
   (g$i/o-encoding-error-char$14131$1S&e0X
     g$i/o-encoding-error-char$14396$1S&e0X
     (record-accessor g$6874$14124$1S&e0X '0))
   (g$i/o-encoding-error?$14132$1S&e0X
     g$i/o-encoding-error?$14397$1S&e0X
     (condition-predicate g$6874$14124$1S&e0X))
   (g$i/o-encoding-error-char$14133$1S&e0X
     g$i/o-encoding-error-char$14398$1S&e0X
     (condition-accessor
       g$6874$14124$1S&e0X
       g$i/o-encoding-error-char$14131$1S&e0X))
   (g$&i/o-encoding-rtd$14134$1S&e0X
     g$&i/o-encoding-rtd$14399$1S&e0X
     g$6874$14124$1S&e0X)
   (g$&i/o-encoding-rcd$14135$1S&e0X
     g$&i/o-encoding-rcd$14400$1S&e0X
     g$6875$14126$1S&e0X)
   (g$6889$14136$1S&e0X
     g$6889$14401$1S&e0X
     (make-record-type-descriptor
       '&no-infinities
       g$6669$13958$1S&e0X
       'g$6892$1S&e0X
       '#f
       '#f
       '#()))
   (g$6891$14137$1S&e0X g$6891$14402$1S&e0X '#f)
   (g$6890$14138$1S&e0X
     g$6890$14403$1S&e0X
     (make-record-constructor-descriptor
       g$6889$14136$1S&e0X
       g$6670$13960$1S&e0X
       g$6891$14137$1S&e0X))
   (g$p?$14141$1S&e0X
     g$p?$14404$1S&e0X
     (record-predicate g$6889$14136$1S&e0X))
   (g$make-no-infinities-violation$14142$1S&e0X
     g$make-no-infinities-violation$14405$1S&e0X
     (record-constructor g$6890$14138$1S&e0X))
   (g$no-infinities-violation?$14143$1S&e0X
     g$no-infinities-violation?$14406$1S&e0X
     (condition-predicate g$6889$14136$1S&e0X))
   (g$&no-infinities-rtd$14144$1S&e0X
     g$&no-infinities-rtd$14407$1S&e0X
     g$6889$14136$1S&e0X)
   (g$&no-infinities-rcd$14145$1S&e0X
     g$&no-infinities-rcd$14408$1S&e0X
     g$6890$14138$1S&e0X)
   (g$6902$14146$1S&e0X
     g$6902$14409$1S&e0X
     (make-record-type-descriptor
       '&no-nans
       g$6669$13958$1S&e0X
       'g$6905$1S&e0X
       '#f
       '#f
       '#()))
   (g$6904$14147$1S&e0X g$6904$14410$1S&e0X '#f)
   (g$6903$14148$1S&e0X
     g$6903$14411$1S&e0X
     (make-record-constructor-descriptor
       g$6902$14146$1S&e0X
       g$6670$13960$1S&e0X
       g$6904$14147$1S&e0X))
   (g$p?$14151$1S&e0X
     g$p?$14412$1S&e0X
     (record-predicate g$6902$14146$1S&e0X))
   (g$make-no-nans-violation$14152$1S&e0X
     g$make-no-nans-violation$14413$1S&e0X
     (record-constructor g$6903$14148$1S&e0X))
   (g$no-nans-violation?$14153$1S&e0X
     g$no-nans-violation?$14414$1S&e0X
     (condition-predicate g$6902$14146$1S&e0X))
   (g$&no-nans-rtd$14154$1S&e0X
     g$&no-nans-rtd$14415$1S&e0X
     g$6902$14146$1S&e0X)
   (g$&no-nans-rcd$14155$1S&e0X
     g$&no-nans-rcd$14416$1S&e0X
     g$6903$14148$1S&e0X))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$14417$1S&e0X
     g$append!$14423$1S&e0X
     (case-lambda
       ((g$a$14418$1S&e0X . g$b$14419$1S&e0X)
        (if (null? g$a$14418$1S&e0X)
          g$b$14419$1S&e0X
          (if (null? g$b$14419$1S&e0X)
            g$a$14418$1S&e0X
            (begin
              '#f
              ((letrec ((g$f$14420$1S&e0X
                          (case-lambda
                            ((g$a$14421$1S&e0X)
                             ((case-lambda
                                ((g$n$14422$1S&e0X)
                                 (if (null? g$n$14422$1S&e0X)
                                   (set-cdr!
                                     g$a$14421$1S&e0X
                                     g$b$14419$1S&e0X)
                                   (g$f$14420$1S&e0X
                                     g$n$14422$1S&e0X))))
                              (cdr g$a$14421$1S&e0X))))))
                 g$f$14420$1S&e0X)
               g$a$14418$1S&e0X)
              g$a$14418$1S&e0X)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$14424$1S&e0X
     g$inexact->exact$14444$1S&e0X
     g$exact$13689$1S&e0X)
   (g$exact->inexact$14425$1S&e0X
     g$exact->inexact$14445$1S&e0X
     g$inexact$13688$1S&e0X)
   (g$sign$14426$1S&e0X
     g$sign$14446$1S&e0X
     (case-lambda
       ((g$n$14432$1S&e0X)
        (if (g$>$13697$1S&e0X g$n$14432$1S&e0X '0)
          '1
          (if (g$<$13695$1S&e0X g$n$14432$1S&e0X '0)
            '-1
            (begin '#f '0))))))
   (g$quotient$14427$1S&e0X
     g$quotient$14447$1S&e0X
     (case-lambda
       ((g$n1$14433$1S&e0X g$n2$14434$1S&e0X)
        (begin
          (if (not (g$integer-valued?$13684$1S&e0X g$n1$14433$1S&e0X))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$14433$1S&e0X)
            (void))
          (if (not (g$integer-valued?$13684$1S&e0X g$n2$14434$1S&e0X))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$14434$1S&e0X)
            (void))
          (* (g$sign$14426$1S&e0X g$n1$14433$1S&e0X)
             (g$sign$14426$1S&e0X g$n2$14434$1S&e0X)
             (g$div$13719$1S&e0X
               (g$abs$13720$1S&e0X g$n1$14433$1S&e0X)
               (g$abs$13720$1S&e0X g$n2$14434$1S&e0X)))))))
   (g$remainder$14428$1S&e0X
     g$remainder$14448$1S&e0X
     (case-lambda
       ((g$n1$14435$1S&e0X g$n2$14436$1S&e0X)
        (begin
          (if (not (g$integer-valued?$13684$1S&e0X g$n1$14435$1S&e0X))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$14435$1S&e0X)
            (void))
          (if (not (g$integer-valued?$13684$1S&e0X g$n2$14436$1S&e0X))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$14436$1S&e0X)
            (void))
          (* (g$sign$14426$1S&e0X g$n1$14435$1S&e0X)
             (g$mod$12672$1S&e0X
               (g$abs$13720$1S&e0X g$n1$14435$1S&e0X)
               (g$abs$13720$1S&e0X g$n2$14436$1S&e0X)))))))
   (g$modulo$14429$1S&e0X
     g$modulo$14449$1S&e0X
     (case-lambda
       ((g$n1$14437$1S&e0X g$n2$14438$1S&e0X)
        (begin
          (if (not (g$integer-valued?$13684$1S&e0X g$n1$14437$1S&e0X))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$14437$1S&e0X)
            (void))
          (if (not (g$integer-valued?$13684$1S&e0X g$n2$14438$1S&e0X))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$14438$1S&e0X)
            (void))
          (* (g$sign$14426$1S&e0X g$n2$14438$1S&e0X)
             (g$mod$12672$1S&e0X
               (* (g$sign$14426$1S&e0X g$n2$14438$1S&e0X)
                  g$n1$14437$1S&e0X)
               (g$abs$13720$1S&e0X g$n2$14438$1S&e0X)))))))
   (g$make-promise$14430$1S&e0X
     g$make-promise$14450$1S&e0X
     (case-lambda
       ((g$proc$14439$1S&e0X)
        ((case-lambda
           ((g$result-ready?$14440$1S&e0X g$result$14441$1S&e0X)
            (case-lambda
              (()
               (if g$result-ready?$14440$1S&e0X
                 g$result$14441$1S&e0X
                 ((case-lambda
                    ((g$x$14442$1S&e0X)
                     (if g$result-ready?$14440$1S&e0X
                       g$result$14441$1S&e0X
                       (begin
                         (set! g$result-ready?$14440$1S&e0X '#t)
                         (set! g$result$14441$1S&e0X g$x$14442$1S&e0X)
                         g$result$14441$1S&e0X))))
                  (g$proc$14439$1S&e0X)))))))
         '#f
         '#f))))
   (g$force$14431$1S&e0X
     g$force$14451$1S&e0X
     (case-lambda ((g$object$14443$1S&e0X) (g$object$14443$1S&e0X)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$14452$1S&e0X
     g$split$14477$1S&e0X
     (case-lambda
       ((g$ls$14456$1S&e0X)
        ((letrec ((g$loop$14457$1S&e0X
                    (case-lambda
                      ((g$rest$14458$1S&e0X
                         g$left$14459$1S&e0X
                         g$right$14460$1S&e0X)
                       (if (null? g$rest$14458$1S&e0X)
                         (cons g$left$14459$1S&e0X g$right$14460$1S&e0X)
                         (if (null? (cdr g$rest$14458$1S&e0X))
                           (cons
                             (cons
                               (car g$rest$14458$1S&e0X)
                               g$left$14459$1S&e0X)
                             g$right$14460$1S&e0X)
                           (begin
                             '#f
                             (g$loop$14457$1S&e0X
                               (g$cddr$12686$1S&e0X g$rest$14458$1S&e0X)
                               (cons
                                 (car g$rest$14458$1S&e0X)
                                 g$left$14459$1S&e0X)
                               (cons
                                 (g$cadr$12684$1S&e0X
                                   g$rest$14458$1S&e0X)
                                 g$right$14460$1S&e0X)))))))))
           g$loop$14457$1S&e0X)
         g$ls$14456$1S&e0X
         '()
         '()))))
   (g$reverse-it$14453$1S&e0X
     g$reverse-it$14478$1S&e0X
     (case-lambda
       ((g$head$14461$1S&e0X g$tail$14462$1S&e0X)
        (if (null? g$head$14461$1S&e0X)
          g$tail$14462$1S&e0X
          (g$reverse-it$14453$1S&e0X
            (cdr g$head$14461$1S&e0X)
            (cons (car g$head$14461$1S&e0X) g$tail$14462$1S&e0X))))))
   (g$merge$14454$1S&e0X
     g$merge$14479$1S&e0X
     (case-lambda
       ((g$list-1$14463$1S&e0X
          g$list-2$14464$1S&e0X
          g$precedes?$14465$1S&e0X)
        ((letrec ((g$loop$14466$1S&e0X
                    (case-lambda
                      ((g$source-1$14467$1S&e0X
                         g$source-2$14468$1S&e0X
                         g$so-far$14469$1S&e0X)
                       (if (null? g$source-1$14467$1S&e0X)
                         (g$reverse-it$14453$1S&e0X
                           g$so-far$14469$1S&e0X
                           g$source-2$14468$1S&e0X)
                         (if (null? g$source-2$14468$1S&e0X)
                           (g$reverse-it$14453$1S&e0X
                             g$so-far$14469$1S&e0X
                             g$source-1$14467$1S&e0X)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$car-1$14470$1S&e0X
                                   g$car-2$14471$1S&e0X)
                                 (if (g$precedes?$14465$1S&e0X
                                       g$car-2$14471$1S&e0X
                                       g$car-1$14470$1S&e0X)
                                   (g$loop$14466$1S&e0X
                                     g$source-1$14467$1S&e0X
                                     (cdr g$source-2$14468$1S&e0X)
                                     (cons
                                       g$car-2$14471$1S&e0X
                                       g$so-far$14469$1S&e0X))
                                   (g$loop$14466$1S&e0X
                                     g$source-2$14468$1S&e0X
                                     (cdr g$source-1$14467$1S&e0X)
                                     (cons
                                       g$car-1$14470$1S&e0X
                                       g$so-far$14469$1S&e0X)))))
                              (car g$source-1$14467$1S&e0X)
                              (car g$source-2$14468$1S&e0X)))))))))
           g$loop$14466$1S&e0X)
         g$list-1$14463$1S&e0X
         g$list-2$14464$1S&e0X
         '()))))
   (g$list-sort$14455$1S&e0X
     g$list-sort$14480$1S&e0X
     (case-lambda
       ((g$precedes?$14472$1S&e0X g$ls$14473$1S&e0X)
        (if (null? g$ls$14473$1S&e0X)
          '()
          ((letrec ((g$helper$14474$1S&e0X
                      (case-lambda
                        ((g$piece$14475$1S&e0X)
                         (if (null? (cdr g$piece$14475$1S&e0X))
                           g$piece$14475$1S&e0X
                           ((case-lambda
                              ((g$parts$14476$1S&e0X)
                               (g$merge$14454$1S&e0X
                                 (g$helper$14474$1S&e0X
                                   (car g$parts$14476$1S&e0X))
                                 (g$helper$14474$1S&e0X
                                   (cdr g$parts$14476$1S&e0X))
                                 g$precedes?$14472$1S&e0X)))
                            (g$split$14452$1S&e0X
                              g$piece$14475$1S&e0X)))))))
             g$helper$14474$1S&e0X)
           g$ls$14473$1S&e0X))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$14519$1S&e0X
     g$string-ci=?$14625$1S&e0X
     (case-lambda
       ((g$a$14571$1S&e0X g$b$14572$1S&e0X . g$rest$14573$1S&e0X)
        (begin
          (if (not (string? g$a$14571$1S&e0X))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$14571$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14574$1S&e0X)
               (begin
                 (if (not (string? g$x$14574$1S&e0X))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$14574$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14575$1S&e0X)
                     (begin
                       (set! g$a$14571$1S&e0X g$x$14574$1S&e0X)
                       g$r$14575$1S&e0X)))
                  (g$=$13694$1S&e0X
                    (string-ci-compare
                      g$a$14571$1S&e0X
                      g$x$14574$1S&e0X)
                    '0)))))
            (cons g$b$14572$1S&e0X g$rest$14573$1S&e0X))))))
   (g$string-ci<?$14520$1S&e0X
     g$string-ci<?$14626$1S&e0X
     (case-lambda
       ((g$a$14576$1S&e0X g$b$14577$1S&e0X . g$rest$14578$1S&e0X)
        (begin
          (if (not (string? g$a$14576$1S&e0X))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$14576$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14579$1S&e0X)
               (begin
                 (if (not (string? g$x$14579$1S&e0X))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$14579$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14580$1S&e0X)
                     (begin
                       (set! g$a$14576$1S&e0X g$x$14579$1S&e0X)
                       g$r$14580$1S&e0X)))
                  (g$<$13695$1S&e0X
                    (string-ci-compare
                      g$a$14576$1S&e0X
                      g$x$14579$1S&e0X)
                    '0)))))
            (cons g$b$14577$1S&e0X g$rest$14578$1S&e0X))))))
   (g$string-ci>?$14521$1S&e0X
     g$string-ci>?$14627$1S&e0X
     (case-lambda
       ((g$a$14581$1S&e0X g$b$14582$1S&e0X . g$rest$14583$1S&e0X)
        (begin
          (if (not (string? g$a$14581$1S&e0X))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$14581$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14584$1S&e0X)
               (begin
                 (if (not (string? g$x$14584$1S&e0X))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$14584$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14585$1S&e0X)
                     (begin
                       (set! g$a$14581$1S&e0X g$x$14584$1S&e0X)
                       g$r$14585$1S&e0X)))
                  (g$>$13697$1S&e0X
                    (string-ci-compare
                      g$a$14581$1S&e0X
                      g$x$14584$1S&e0X)
                    '0)))))
            (cons g$b$14582$1S&e0X g$rest$14583$1S&e0X))))))
   (g$string-ci<=?$14522$1S&e0X
     g$string-ci<=?$14628$1S&e0X
     (case-lambda
       ((g$a$14586$1S&e0X g$b$14587$1S&e0X . g$rest$14588$1S&e0X)
        (begin
          (if (not (string? g$a$14586$1S&e0X))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$14586$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14589$1S&e0X)
               (begin
                 (if (not (string? g$x$14589$1S&e0X))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$14589$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14590$1S&e0X)
                     (begin
                       (set! g$a$14586$1S&e0X g$x$14589$1S&e0X)
                       g$r$14590$1S&e0X)))
                  (g$<=$13696$1S&e0X
                    (string-ci-compare
                      g$a$14586$1S&e0X
                      g$x$14589$1S&e0X)
                    '0)))))
            (cons g$b$14587$1S&e0X g$rest$14588$1S&e0X))))))
   (g$string-ci>=?$14523$1S&e0X
     g$string-ci>=?$14629$1S&e0X
     (case-lambda
       ((g$a$14591$1S&e0X g$b$14592$1S&e0X . g$rest$14593$1S&e0X)
        (begin
          (if (not (string? g$a$14591$1S&e0X))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$14591$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14594$1S&e0X)
               (begin
                 (if (not (string? g$x$14594$1S&e0X))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$14594$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14595$1S&e0X)
                     (begin
                       (set! g$a$14591$1S&e0X g$x$14594$1S&e0X)
                       g$r$14595$1S&e0X)))
                  (g$>=$13698$1S&e0X
                    (string-ci-compare
                      g$a$14591$1S&e0X
                      g$x$14594$1S&e0X)
                    '0)))))
            (cons g$b$14592$1S&e0X g$rest$14593$1S&e0X))))))
   (g$char-ci=?$14562$1S&e0X
     g$char-ci=?$14630$1S&e0X
     (case-lambda
       ((g$a$14596$1S&e0X g$b$14597$1S&e0X . g$rest$14598$1S&e0X)
        (begin
          (if (not (g$char?$12662$1S&e0X g$a$14596$1S&e0X))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$14596$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14599$1S&e0X)
               (begin
                 (if (not (g$char?$12662$1S&e0X g$x$14599$1S&e0X))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$14599$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14600$1S&e0X)
                     (begin
                       (set! g$a$14596$1S&e0X g$x$14599$1S&e0X)
                       g$r$14600$1S&e0X)))
                  (g$=$13694$1S&e0X
                    (char->integer (char-upcase g$a$14596$1S&e0X))
                    (char->integer (char-upcase g$x$14599$1S&e0X)))))))
            (cons g$b$14597$1S&e0X g$rest$14598$1S&e0X))))))
   (g$char-ci<?$14563$1S&e0X
     g$char-ci<?$14631$1S&e0X
     (case-lambda
       ((g$a$14601$1S&e0X g$b$14602$1S&e0X . g$rest$14603$1S&e0X)
        (begin
          (if (not (g$char?$12662$1S&e0X g$a$14601$1S&e0X))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$14601$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14604$1S&e0X)
               (begin
                 (if (not (g$char?$12662$1S&e0X g$x$14604$1S&e0X))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$14604$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14605$1S&e0X)
                     (begin
                       (set! g$a$14601$1S&e0X g$x$14604$1S&e0X)
                       g$r$14605$1S&e0X)))
                  (g$<$13695$1S&e0X
                    (char->integer (char-upcase g$a$14601$1S&e0X))
                    (char->integer (char-upcase g$x$14604$1S&e0X)))))))
            (cons g$b$14602$1S&e0X g$rest$14603$1S&e0X))))))
   (g$char-ci>?$14564$1S&e0X
     g$char-ci>?$14632$1S&e0X
     (case-lambda
       ((g$a$14606$1S&e0X g$b$14607$1S&e0X . g$rest$14608$1S&e0X)
        (begin
          (if (not (g$char?$12662$1S&e0X g$a$14606$1S&e0X))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$14606$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14609$1S&e0X)
               (begin
                 (if (not (g$char?$12662$1S&e0X g$x$14609$1S&e0X))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$14609$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14610$1S&e0X)
                     (begin
                       (set! g$a$14606$1S&e0X g$x$14609$1S&e0X)
                       g$r$14610$1S&e0X)))
                  (g$>$13697$1S&e0X
                    (char->integer (char-upcase g$a$14606$1S&e0X))
                    (char->integer (char-upcase g$x$14609$1S&e0X)))))))
            (cons g$b$14607$1S&e0X g$rest$14608$1S&e0X))))))
   (g$char-ci<=?$14565$1S&e0X
     g$char-ci<=?$14633$1S&e0X
     (case-lambda
       ((g$a$14611$1S&e0X g$b$14612$1S&e0X . g$rest$14613$1S&e0X)
        (begin
          (if (not (g$char?$12662$1S&e0X g$a$14611$1S&e0X))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$14611$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14614$1S&e0X)
               (begin
                 (if (not (g$char?$12662$1S&e0X g$x$14614$1S&e0X))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$14614$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14615$1S&e0X)
                     (begin
                       (set! g$a$14611$1S&e0X g$x$14614$1S&e0X)
                       g$r$14615$1S&e0X)))
                  (g$<=$13696$1S&e0X
                    (char->integer (char-upcase g$a$14611$1S&e0X))
                    (char->integer (char-upcase g$x$14614$1S&e0X)))))))
            (cons g$b$14612$1S&e0X g$rest$14613$1S&e0X))))))
   (g$char-ci>=?$14566$1S&e0X
     g$char-ci>=?$14634$1S&e0X
     (case-lambda
       ((g$a$14616$1S&e0X g$b$14617$1S&e0X . g$rest$14618$1S&e0X)
        (begin
          (if (not (g$char?$12662$1S&e0X g$a$14616$1S&e0X))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$14616$1S&e0X)
            (void))
          (g$for-all$11831$1S&e0X
            (case-lambda
              ((g$x$14619$1S&e0X)
               (begin
                 (if (not (g$char?$12662$1S&e0X g$x$14619$1S&e0X))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$14619$1S&e0X)
                   (void))
                 ((case-lambda
                    ((g$r$14620$1S&e0X)
                     (begin
                       (set! g$a$14616$1S&e0X g$x$14619$1S&e0X)
                       g$r$14620$1S&e0X)))
                  (g$>=$13698$1S&e0X
                    (char->integer (char-upcase g$a$14616$1S&e0X))
                    (char->integer (char-upcase g$x$14619$1S&e0X)))))))
            (cons g$b$14617$1S&e0X g$rest$14618$1S&e0X))))))
   (g$string-normalize-nfc$14567$1S&e0X
     g$string-normalize-nfc$14635$1S&e0X
     (case-lambda
       ((g$s$14621$1S&e0X) (string-normalize g$s$14621$1S&e0X 'formc))))
   (g$string-normalize-nfd$14568$1S&e0X
     g$string-normalize-nfd$14636$1S&e0X
     (case-lambda
       ((g$s$14622$1S&e0X) (string-normalize g$s$14622$1S&e0X 'formd))))
   (g$string-normalize-nfkc$14569$1S&e0X
     g$string-normalize-nfkc$14637$1S&e0X
     (case-lambda
       ((g$s$14623$1S&e0X)
        (string-normalize g$s$14623$1S&e0X 'formkc))))
   (g$string-normalize-nfkd$14570$1S&e0X
     g$string-normalize-nfkd$14638$1S&e0X
     (case-lambda
       ((g$s$14624$1S&e0X)
        (string-normalize g$s$14624$1S&e0X 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$14639$1S&e0X
     g$bignum?$14716$1S&e0X
     (case-lambda
       ((g$obj$14656$1S&e0X)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$14656$1S&e0X))))
   (g$->bignum$14640$1S&e0X
     g$->bignum$14717$1S&e0X
     (case-lambda
       ((g$ei$14657$1S&e0X)
        (if (g$bignum?$14639$1S&e0X g$ei$14657$1S&e0X)
          g$ei$14657$1S&e0X
          (if (g$fixnum?$12668$1S&e0X g$ei$14657$1S&e0X)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$14657$1S&e0X)
            (begin
              '#f
              (assertion-violation
                '#f
                '"not a exact integer"
                g$ei$14657$1S&e0X)))))))
   (g$bitwise-not$14641$1S&e0X
     g$bitwise-not$14718$1S&e0X
     (case-lambda
       ((g$ei$14658$1S&e0X)
        (g$exact$13689$1S&e0X
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$14640$1S&e0X g$ei$14658$1S&e0X))))))
   (g$bitwise-and$14642$1S&e0X
     g$bitwise-and$14719$1S&e0X
     (case-lambda
       (() '-1)
       ((g$ei$14659$1S&e0X) (g$->bignum$14640$1S&e0X g$ei$14659$1S&e0X))
       ((g$ei1$14660$1S&e0X g$ei2$14661$1S&e0X)
        (g$exact$13689$1S&e0X
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$14640$1S&e0X g$ei1$14660$1S&e0X)
            (g$->bignum$14640$1S&e0X g$ei2$14661$1S&e0X))))
       ((g$ei1$14662$1S&e0X g$ei2$14663$1S&e0X . g$rest$14664$1S&e0X)
        (g$fold-left$11836$1S&e0X
          g$bitwise-and$14642$1S&e0X
          (g$->bignum$14640$1S&e0X g$ei1$14662$1S&e0X)
          (cons g$ei2$14663$1S&e0X g$rest$14664$1S&e0X)))))
   (g$bitwise-ior$14643$1S&e0X
     g$bitwise-ior$14720$1S&e0X
     (case-lambda
       (() '0)
       ((g$ei$14665$1S&e0X) (g$->bignum$14640$1S&e0X g$ei$14665$1S&e0X))
       ((g$ei1$14666$1S&e0X g$ei2$14667$1S&e0X)
        (g$exact$13689$1S&e0X
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$14640$1S&e0X g$ei1$14666$1S&e0X)
            (g$->bignum$14640$1S&e0X g$ei2$14667$1S&e0X))))
       ((g$ei1$14668$1S&e0X g$ei2$14669$1S&e0X . g$rest$14670$1S&e0X)
        (g$fold-left$11836$1S&e0X
          g$bitwise-ior$14643$1S&e0X
          (g$->bignum$14640$1S&e0X g$ei1$14668$1S&e0X)
          (cons g$ei2$14669$1S&e0X g$rest$14670$1S&e0X)))))
   (g$bitwise-xor$14644$1S&e0X
     g$bitwise-xor$14721$1S&e0X
     (case-lambda
       (() '0)
       ((g$ei$14671$1S&e0X) (g$->bignum$14640$1S&e0X g$ei$14671$1S&e0X))
       ((g$ei1$14672$1S&e0X g$ei2$14673$1S&e0X)
        (g$exact$13689$1S&e0X
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$14640$1S&e0X g$ei1$14672$1S&e0X)
            (g$->bignum$14640$1S&e0X g$ei2$14673$1S&e0X))))
       ((g$ei1$14674$1S&e0X g$ei2$14675$1S&e0X . g$rest$14676$1S&e0X)
        (g$fold-left$11836$1S&e0X
          g$bitwise-xor$14644$1S&e0X
          (g$->bignum$14640$1S&e0X g$ei1$14674$1S&e0X)
          (cons g$ei2$14675$1S&e0X g$rest$14676$1S&e0X)))))
   (g$bitwise-bit-count$14645$1S&e0X
     g$bitwise-bit-count$14722$1S&e0X
     (case-lambda
       ((g$ei$14677$1S&e0X)
        (if (g$positive?$13686$1S&e0X g$ei$14677$1S&e0X)
          ((letrec ((g$f$14678$1S&e0X
                      (case-lambda
                        ((g$c$14679$1S&e0X g$ei$14680$1S&e0X)
                         (if (g$positive?$13686$1S&e0X
                               g$ei$14680$1S&e0X)
                           (g$f$14678$1S&e0X
                             (+ g$c$14679$1S&e0X
                                (g$bitwise-and$14642$1S&e0X
                                  g$ei$14680$1S&e0X
                                  '1))
                             (g$bitwise-arithmetic-shift-right$14654$1S&e0X
                               g$ei$14680$1S&e0X
                               '1))
                           g$c$14679$1S&e0X)))))
             g$f$14678$1S&e0X)
           '0
           (g$->bignum$14640$1S&e0X g$ei$14677$1S&e0X))
          (g$bitwise-not$14641$1S&e0X
            (g$bitwise-bit-count$14645$1S&e0X
              (g$bitwise-not$14641$1S&e0X g$ei$14677$1S&e0X)))))))
   (g$bitwise-length$14646$1S&e0X
     g$bitwise-length$14723$1S&e0X
     (case-lambda
       ((g$ei$14681$1S&e0X)
        ((case-lambda
           ((g$ei$14682$1S&e0X)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$14682$1S&e0X
                  (g$->bignum$14640$1S&e0X '0))
              (g$bitwise-length$14646$1S&e0X
                (g$bitwise-not$14641$1S&e0X g$ei$14682$1S&e0X))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$14682$1S&e0X))))
         (g$->bignum$14640$1S&e0X g$ei$14681$1S&e0X)))))
   (g$bitwise-first-bit-set$14647$1S&e0X
     g$bitwise-first-bit-set$14724$1S&e0X
     (case-lambda
       ((g$ei$14683$1S&e0X)
        ((case-lambda
           ((g$ei$14684$1S&e0X)
            (if (g$zero?$13685$1S&e0X g$ei$14684$1S&e0X)
              '-1
              ((letrec ((g$f$14685$1S&e0X
                          (case-lambda
                            ((g$c$14686$1S&e0X g$ei$14687$1S&e0X)
                             (if (g$=$13694$1S&e0X
                                   '1
                                   (g$bitwise-and$14642$1S&e0X
                                     g$ei$14687$1S&e0X
                                     '1))
                               g$c$14686$1S&e0X
                               (g$f$14685$1S&e0X
                                 (+ g$c$14686$1S&e0X '1)
                                 (g$bitwise-arithmetic-shift-right$14654$1S&e0X
                                   g$ei$14687$1S&e0X
                                   '1)))))))
                 g$f$14685$1S&e0X)
               '0
               g$ei$14684$1S&e0X))))
         (g$->bignum$14640$1S&e0X g$ei$14683$1S&e0X)))))
   (g$bitwise-bit-set?$14648$1S&e0X
     g$bitwise-bit-set?$14725$1S&e0X
     (case-lambda
       ((g$ei$14688$1S&e0X g$k$14689$1S&e0X)
        ((case-lambda
           ((g$ei$14690$1S&e0X g$k$14691$1S&e0X)
            (begin
              (if (g$negative?$13687$1S&e0X g$k$14691$1S&e0X)
                (assertion-violation
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$14691$1S&e0X)
                (void))
              (if (g$=$13694$1S&e0X '-1 g$ei$14690$1S&e0X)
                '#t
                (begin
                  '#f
                  (g$=$13694$1S&e0X
                    '1
                    (g$bitwise-and$14642$1S&e0X
                      '1
                      (g$bitwise-arithmetic-shift-right$14654$1S&e0X
                        g$ei$14690$1S&e0X
                        g$k$14691$1S&e0X))))))))
         (g$->bignum$14640$1S&e0X g$ei$14688$1S&e0X)
         (g$->bignum$14640$1S&e0X g$k$14689$1S&e0X)))))
   (g$bitwise-if$14649$1S&e0X
     g$bitwise-if$14726$1S&e0X
     (case-lambda
       ((g$ei1$14692$1S&e0X g$ei2$14693$1S&e0X g$ei3$14694$1S&e0X)
        (g$bitwise-ior$14643$1S&e0X
          (g$bitwise-and$14642$1S&e0X
            g$ei1$14692$1S&e0X
            g$ei2$14693$1S&e0X)
          (g$bitwise-and$14642$1S&e0X
            (g$bitwise-not$14641$1S&e0X g$ei1$14692$1S&e0X)
            g$ei3$14694$1S&e0X)))))
   (g$bitwise-copy-bit$14650$1S&e0X
     g$bitwise-copy-bit$14727$1S&e0X
     (case-lambda
       ((g$ei1$14695$1S&e0X g$ei2$14696$1S&e0X g$ei3$14697$1S&e0X)
        (g$bitwise-if$14649$1S&e0X
          (g$bitwise-arithmetic-shift-left$14653$1S&e0X
            '1
            g$ei2$14696$1S&e0X)
          (g$bitwise-arithmetic-shift-left$14653$1S&e0X
            g$ei3$14697$1S&e0X
            g$ei2$14696$1S&e0X)
          g$ei1$14695$1S&e0X))))
   (g$bitwise-bit-field$14651$1S&e0X
     g$bitwise-bit-field$14728$1S&e0X
     (case-lambda
       ((g$ei1$14698$1S&e0X g$ei2$14699$1S&e0X g$ei3$14700$1S&e0X)
        (g$bitwise-arithmetic-shift-right$14654$1S&e0X
          (g$bitwise-and$14642$1S&e0X
            g$ei1$14698$1S&e0X
            (g$bitwise-not$14641$1S&e0X
              (g$bitwise-arithmetic-shift-left$14653$1S&e0X
                '-1
                g$ei3$14700$1S&e0X)))
          g$ei2$14699$1S&e0X))))
   (g$bitwise-copy-bit-field$14652$1S&e0X
     g$bitwise-copy-bit-field$14729$1S&e0X
     (case-lambda
       ((g$to$14701$1S&e0X
          g$start$14702$1S&e0X
          g$end$14703$1S&e0X
          g$from$14704$1S&e0X)
        (g$bitwise-if$14649$1S&e0X
          (g$bitwise-and$14642$1S&e0X
            (g$bitwise-arithmetic-shift-left$14653$1S&e0X
              '-1
              g$start$14702$1S&e0X)
            (g$bitwise-not$14641$1S&e0X
              (g$bitwise-arithmetic-shift-left$14653$1S&e0X
                '-1
                g$end$14703$1S&e0X)))
          (g$bitwise-arithmetic-shift-left$14653$1S&e0X
            g$from$14704$1S&e0X
            g$start$14702$1S&e0X)
          g$to$14701$1S&e0X))))
   (g$bitwise-arithmetic-shift-left$14653$1S&e0X
     g$bitwise-arithmetic-shift-left$14730$1S&e0X
     (case-lambda
       ((g$ei1$14705$1S&e0X g$ei2$14706$1S&e0X)
        (bitwise-arithmetic-shift
          g$ei1$14705$1S&e0X
          g$ei2$14706$1S&e0X))))
   (g$bitwise-arithmetic-shift-right$14654$1S&e0X
     g$bitwise-arithmetic-shift-right$14731$1S&e0X
     (case-lambda
       ((g$ei1$14707$1S&e0X g$ei2$14708$1S&e0X)
        (bitwise-arithmetic-shift
          g$ei1$14707$1S&e0X
          (- g$ei2$14708$1S&e0X)))))
   (g$bitwise-rotate-bit-field$14655$1S&e0X
     g$bitwise-rotate-bit-field$14732$1S&e0X
     (case-lambda
       ((g$n$14709$1S&e0X
          g$start$14710$1S&e0X
          g$end$14711$1S&e0X
          g$count$14712$1S&e0X)
        ((case-lambda
           ((g$width$14713$1S&e0X)
            (if (g$positive?$13686$1S&e0X g$width$14713$1S&e0X)
              ((case-lambda
                 ((g$count$14714$1S&e0X g$field$14715$1S&e0X)
                  (g$bitwise-copy-bit-field$14652$1S&e0X
                    g$n$14709$1S&e0X
                    g$start$14710$1S&e0X
                    g$end$14711$1S&e0X
                    (g$bitwise-ior$14643$1S&e0X
                      (g$bitwise-arithmetic-shift-left$14653$1S&e0X
                        g$field$14715$1S&e0X
                        g$count$14714$1S&e0X)
                      (g$bitwise-arithmetic-shift-right$14654$1S&e0X
                        g$field$14715$1S&e0X
                        (- g$width$14713$1S&e0X
                           g$count$14714$1S&e0X))))))
               (g$mod$12672$1S&e0X
                 g$count$14712$1S&e0X
                 g$width$14713$1S&e0X)
               (g$bitwise-bit-field$14651$1S&e0X
                 g$n$14709$1S&e0X
                 g$start$14710$1S&e0X
                 g$end$14711$1S&e0X))
              g$n$14709$1S&e0X)))
         (- g$end$14711$1S&e0X g$start$14710$1S&e0X))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$14733$1S&e0X
     g$greatest-fixnum$16965$1S&e0X
     (case-lambda (() '2147483647)))
   (g$least-fixnum$14734$1S&e0X
     g$least-fixnum$16966$1S&e0X
     (case-lambda (() '-2147483648)))
   (g$fx+$14840$1S&e0X
     g$fx+$16967$1S&e0X
     (case-lambda
       ((g$x1$15235$1S&e0X g$x2$15236$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15235$1S&e0X))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$15235$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15236$1S&e0X))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$15236$1S&e0X)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$15235$1S&e0X g$x2$15236$1S&e0X)
                (g$overflow-error$14843$1S&e0X '#f)))))))))
   (g$fx*$14841$1S&e0X
     g$fx*$16968$1S&e0X
     (case-lambda
       ((g$x1$15237$1S&e0X g$x2$15238$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15237$1S&e0X))
            (assertion-violation 'fx* '"not a fixnum" g$x1$15237$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15238$1S&e0X))
            (assertion-violation 'fx* '"not a fixnum" g$x2$15238$1S&e0X)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$15237$1S&e0X g$x2$15238$1S&e0X)
                (g$overflow-error$14843$1S&e0X '#f)))))))))
   (g$fx-$14842$1S&e0X
     g$fx-$16969$1S&e0X
     (case-lambda
       ((g$x1$15239$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15239$1S&e0X))
            (assertion-violation 'fx- '"not a fixnum" g$x1$15239$1S&e0X)
            (void))
          (if ($fx=? (g$least-fixnum$14734$1S&e0X) g$x1$15239$1S&e0X)
            (g$overflow-error$14843$1S&e0X 'fx- g$x1$15239$1S&e0X)
            (void))
          ($$fx- g$x1$15239$1S&e0X)))
       ((g$x1$15240$1S&e0X g$x2$15241$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15240$1S&e0X))
            (assertion-violation 'fx- '"not a fixnum" g$x1$15240$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15241$1S&e0X))
            (assertion-violation 'fx- '"not a fixnum" g$x2$15241$1S&e0X)
            (void))
          ($try
            ($fx- g$x1$15240$1S&e0X g$x2$15241$1S&e0X)
            (g$overflow-error$14843$1S&e0X '#f))))))
   (g$overflow-error$14843$1S&e0X
     g$overflow-error$16970$1S&e0X
     (case-lambda
       ((g$name$15242$1S&e0X . g$irritants$15243$1S&e0X)
        (raise
          (condition
            (g$make-implementation-restriction-violation$14265$1S&e0X)
            (g$make-who-condition$14227$1S&e0X g$name$15242$1S&e0X)
            (g$make-message-condition$14167$1S&e0X
              '"arithmetic overflow")
            (g$make-irritants-condition$14217$1S&e0X
              g$irritants$15243$1S&e0X))))))
   (g$residual-fxarithmetic-shift*$14859$1S&e0X
     g$residual-fxarithmetic-shift*$16971$1S&e0X
     (case-lambda
       ((g$x$15264$1S&e0X g$k$15265$1S&e0X)
        (if ($fx=? g$k$15265$1S&e0X '0)
          g$x$15264$1S&e0X
          (if ($fx<? g$k$15265$1S&e0X '0)
            ($fxarithmetic-shift-right
              g$x$15264$1S&e0X
              ($$fx- g$k$15265$1S&e0X))
            (begin
              '#f
              ((case-lambda
                 ((g$i$15266$1S&e0X)
                  (begin
                    (if ($fx>?
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$x$15264$1S&e0X)
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$i$15266$1S&e0X))
                      (g$overflow-error$14843$1S&e0X
                        'fxarithmetic-shift
                        g$x$15264$1S&e0X
                        g$k$15265$1S&e0X)
                      (void))
                    g$i$15266$1S&e0X)))
               ($fxarithmetic-shift-left
                 g$x$15264$1S&e0X
                 g$k$15265$1S&e0X))))))))
   (g$fxarithmetic-shift$14860$1S&e0X
     g$fxarithmetic-shift$16972$1S&e0X
     (case-lambda
       ((g$x$15267$1S&e0X g$k$15268$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x$15267$1S&e0X))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$15267$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$k$15268$1S&e0X))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$15268$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15289$1S&e0X g$k$15290$1S&e0X)
                  (if ($fx=? g$k$15290$1S&e0X '0)
                    g$x$15289$1S&e0X
                    (if ($fx<? g$k$15290$1S&e0X '0)
                      ($fxarithmetic-shift-right
                        g$x$15289$1S&e0X
                        ($$fx- g$k$15290$1S&e0X))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$15291$1S&e0X)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$15289$1S&e0X)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$15291$1S&e0X))
                                (g$overflow-error$14843$1S&e0X
                                  'fxarithmetic-shift
                                  g$x$15289$1S&e0X
                                  g$k$15290$1S&e0X)
                                (void))
                              g$i$15291$1S&e0X)))
                         ($fxarithmetic-shift-left
                           g$x$15289$1S&e0X
                           g$k$15290$1S&e0X)))))))
               g$x$15267$1S&e0X
               g$k$15268$1S&e0X))))))))
   (g$residual-fxbit-count*$14876$1S&e0X
     g$residual-fxbit-count*$16973$1S&e0X
     (case-lambda
       ((g$x$15312$1S&e0X)
        (if ($fx<=? g$x$15312$1S&e0X '0)
          ($fxnot
            (g$residual-fxbit-count*$14876$1S&e0X
              ($fxnot g$x$15312$1S&e0X)))
          ((letrec ((g$f$15313$1S&e0X
                      (case-lambda
                        ((g$count$15314$1S&e0X g$x$15315$1S&e0X)
                         (if ($fx<? '0 g$x$15315$1S&e0X)
                           (g$f$15313$1S&e0X
                             ($$fx+
                               g$count$15314$1S&e0X
                               ($fxand g$x$15315$1S&e0X '1))
                             ($fxarithmetic-shift-right
                               g$x$15315$1S&e0X
                               '1))
                           g$count$15314$1S&e0X)))))
             g$f$15313$1S&e0X)
           '0
           g$x$15312$1S&e0X)))))
   (g$fxbit-count$14877$1S&e0X
     g$fxbit-count$16974$1S&e0X
     (case-lambda
       ((g$x$15316$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x$15316$1S&e0X))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$15316$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15337$1S&e0X)
                  (if ($fx<=? g$x$15337$1S&e0X '0)
                    ($fxnot
                      (g$residual-fxbit-count*$14876$1S&e0X
                        ($fxnot g$x$15337$1S&e0X)))
                    ((letrec ((g$f$15338$1S&e0X
                                (case-lambda
                                  ((g$count$15339$1S&e0X
                                     g$x$15340$1S&e0X)
                                   (if ($fx<? '0 g$x$15340$1S&e0X)
                                     (g$f$15338$1S&e0X
                                       ($$fx+
                                         g$count$15339$1S&e0X
                                         ($fxand g$x$15340$1S&e0X '1))
                                       ($fxarithmetic-shift-right
                                         g$x$15340$1S&e0X
                                         '1))
                                     g$count$15339$1S&e0X)))))
                       g$f$15338$1S&e0X)
                     '0
                     g$x$15337$1S&e0X))))
               g$x$15316$1S&e0X))))))))
   (g$residual-fxlength*$14893$1S&e0X
     g$residual-fxlength*$16975$1S&e0X
     (case-lambda
       ((g$x$15361$1S&e0X)
        (if ($fx<? g$x$15361$1S&e0X '0)
          (g$residual-fxlength*$14893$1S&e0X ($fxnot g$x$15361$1S&e0X))
          ((letrec ((g$f$15362$1S&e0X
                      (case-lambda
                        ((g$count$15363$1S&e0X g$x$15364$1S&e0X)
                         (if ($fx<? '0 g$x$15364$1S&e0X)
                           (g$f$15362$1S&e0X
                             ($$fx+ g$count$15363$1S&e0X '1)
                             ($fxarithmetic-shift-right
                               g$x$15364$1S&e0X
                               '1))
                           g$count$15363$1S&e0X)))))
             g$f$15362$1S&e0X)
           '0
           g$x$15361$1S&e0X)))))
   (g$fxlength$14894$1S&e0X
     g$fxlength$16976$1S&e0X
     (case-lambda
       ((g$x$15365$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x$15365$1S&e0X))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$15365$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15386$1S&e0X)
                  (if ($fx<? g$x$15386$1S&e0X '0)
                    (g$residual-fxlength*$14893$1S&e0X
                      ($fxnot g$x$15386$1S&e0X))
                    ((letrec ((g$f$15387$1S&e0X
                                (case-lambda
                                  ((g$count$15388$1S&e0X
                                     g$x$15389$1S&e0X)
                                   (if ($fx<? '0 g$x$15389$1S&e0X)
                                     (g$f$15387$1S&e0X
                                       ($$fx+ g$count$15388$1S&e0X '1)
                                       ($fxarithmetic-shift-right
                                         g$x$15389$1S&e0X
                                         '1))
                                     g$count$15388$1S&e0X)))))
                       g$f$15387$1S&e0X)
                     '0
                     g$x$15386$1S&e0X))))
               g$x$15365$1S&e0X))))))))
   (g$fxfirst-bit-set$14895$1S&e0X
     g$fxfirst-bit-set$16977$1S&e0X
     (case-lambda
       ((g$x$15390$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x$15390$1S&e0X))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$15390$1S&e0X)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$15390$1S&e0X '0)
                '-1
                ((letrec ((g$f$15391$1S&e0X
                            (case-lambda
                              ((g$count$15392$1S&e0X g$x$15393$1S&e0X)
                               (if (not ($fx=? '0 g$x$15393$1S&e0X))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$15393$1S&e0X))
                                   g$count$15392$1S&e0X
                                   (g$f$15391$1S&e0X
                                     ($$fx+ g$count$15392$1S&e0X '1)
                                     ($fxarithmetic-shift-right
                                       g$x$15393$1S&e0X
                                       '1)))
                                 g$count$15392$1S&e0X)))))
                   g$f$15391$1S&e0X)
                 '0
                 g$x$15390$1S&e0X)))))))))
   (g$fxbit-set?$14896$1S&e0X
     g$fxbit-set?$16978$1S&e0X
     (case-lambda
       ((g$x$15394$1S&e0X g$k$15395$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x$15394$1S&e0X))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$15394$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$k$15395$1S&e0X))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$15395$1S&e0X)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$15395$1S&e0X '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$15395$1S&e0X)
                  (void))
                (if ($fx>=? g$k$15395$1S&e0X '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$15395$1S&e0X)
                  (void))
                (if ($fx=? '0 g$x$15394$1S&e0X)
                  '#f
                  ((letrec ((g$f$15396$1S&e0X
                              (case-lambda
                                ((g$count$15397$1S&e0X g$x$15398$1S&e0X)
                                 (if (not ($fx=? '0 g$x$15398$1S&e0X))
                                   (if (if ($fx=?
                                             g$count$15397$1S&e0X
                                             g$k$15395$1S&e0X)
                                         (begin
                                           '#f
                                           ($fx=?
                                             '1
                                             ($fxand
                                               '1
                                               g$x$15398$1S&e0X)))
                                         '#f)
                                     '#t
                                     (g$f$15396$1S&e0X
                                       ($$fx+ g$count$15397$1S&e0X '1)
                                       ($fxarithmetic-shift-right
                                         g$x$15398$1S&e0X
                                         '1)))
                                   '#f)))))
                     g$f$15396$1S&e0X)
                   '0
                   g$x$15394$1S&e0X))))))))))
   (g$fxnot$14897$1S&e0X
     g$fxnot$16979$1S&e0X
     (case-lambda
       ((g$x1$15399$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15399$1S&e0X))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$15399$1S&e0X)
            (void))
          ((case-lambda (() ($fxnot g$x1$15399$1S&e0X))))))))
   (g$fx=?$14948$1S&e0X
     g$fx=?$16980$1S&e0X
     (case-lambda
       ((g$x1$15400$1S&e0X g$x2$15401$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15400$1S&e0X))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$15400$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15401$1S&e0X))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$15401$1S&e0X)
            (void))
          ($fx=? g$x1$15400$1S&e0X g$x2$15401$1S&e0X)))
       ((g$x1$15402$1S&e0X g$x2$15403$1S&e0X . g$rest$15404$1S&e0X)
        ((letrec ((g$f$15405$1S&e0X
                    (case-lambda
                      ((g$a$15406$1S&e0X g$b$15407$1S&e0X)
                       (if (null? g$b$15407$1S&e0X)
                         '#t
                         (if (g$fx=?$14948$1S&e0X
                               g$a$15406$1S&e0X
                               ($car g$b$15407$1S&e0X))
                           (g$f$15405$1S&e0X
                             ($car g$b$15407$1S&e0X)
                             ($cdr g$b$15407$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$15405$1S&e0X)
         g$x1$15402$1S&e0X
         (cons g$x2$15403$1S&e0X g$rest$15404$1S&e0X)))))
   (g$fx<?$14949$1S&e0X
     g$fx<?$16981$1S&e0X
     (case-lambda
       ((g$x1$15408$1S&e0X g$x2$15409$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15408$1S&e0X))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$15408$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15409$1S&e0X))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$15409$1S&e0X)
            (void))
          ($fx<? g$x1$15408$1S&e0X g$x2$15409$1S&e0X)))
       ((g$x1$15410$1S&e0X g$x2$15411$1S&e0X . g$rest$15412$1S&e0X)
        ((letrec ((g$f$15413$1S&e0X
                    (case-lambda
                      ((g$a$15414$1S&e0X g$b$15415$1S&e0X)
                       (if (null? g$b$15415$1S&e0X)
                         '#t
                         (if (g$fx<?$14949$1S&e0X
                               g$a$15414$1S&e0X
                               ($car g$b$15415$1S&e0X))
                           (g$f$15413$1S&e0X
                             ($car g$b$15415$1S&e0X)
                             ($cdr g$b$15415$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$15413$1S&e0X)
         g$x1$15410$1S&e0X
         (cons g$x2$15411$1S&e0X g$rest$15412$1S&e0X)))))
   (g$fx<=?$14950$1S&e0X
     g$fx<=?$16982$1S&e0X
     (case-lambda
       ((g$x1$15416$1S&e0X g$x2$15417$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15416$1S&e0X))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$15416$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15417$1S&e0X))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$15417$1S&e0X)
            (void))
          ($fx<=? g$x1$15416$1S&e0X g$x2$15417$1S&e0X)))
       ((g$x1$15418$1S&e0X g$x2$15419$1S&e0X . g$rest$15420$1S&e0X)
        ((letrec ((g$f$15421$1S&e0X
                    (case-lambda
                      ((g$a$15422$1S&e0X g$b$15423$1S&e0X)
                       (if (null? g$b$15423$1S&e0X)
                         '#t
                         (if (g$fx<=?$14950$1S&e0X
                               g$a$15422$1S&e0X
                               ($car g$b$15423$1S&e0X))
                           (g$f$15421$1S&e0X
                             ($car g$b$15423$1S&e0X)
                             ($cdr g$b$15423$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$15421$1S&e0X)
         g$x1$15418$1S&e0X
         (cons g$x2$15419$1S&e0X g$rest$15420$1S&e0X)))))
   (g$fx>?$14951$1S&e0X
     g$fx>?$16983$1S&e0X
     (case-lambda
       ((g$x1$15424$1S&e0X g$x2$15425$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15424$1S&e0X))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$15424$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15425$1S&e0X))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$15425$1S&e0X)
            (void))
          ($fx>? g$x1$15424$1S&e0X g$x2$15425$1S&e0X)))
       ((g$x1$15426$1S&e0X g$x2$15427$1S&e0X . g$rest$15428$1S&e0X)
        ((letrec ((g$f$15429$1S&e0X
                    (case-lambda
                      ((g$a$15430$1S&e0X g$b$15431$1S&e0X)
                       (if (null? g$b$15431$1S&e0X)
                         '#t
                         (if (g$fx>?$14951$1S&e0X
                               g$a$15430$1S&e0X
                               ($car g$b$15431$1S&e0X))
                           (g$f$15429$1S&e0X
                             ($car g$b$15431$1S&e0X)
                             ($cdr g$b$15431$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$15429$1S&e0X)
         g$x1$15426$1S&e0X
         (cons g$x2$15427$1S&e0X g$rest$15428$1S&e0X)))))
   (g$fx>=?$14952$1S&e0X
     g$fx>=?$16984$1S&e0X
     (case-lambda
       ((g$x1$15432$1S&e0X g$x2$15433$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15432$1S&e0X))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$15432$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15433$1S&e0X))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$15433$1S&e0X)
            (void))
          ($fx>=? g$x1$15432$1S&e0X g$x2$15433$1S&e0X)))
       ((g$x1$15434$1S&e0X g$x2$15435$1S&e0X . g$rest$15436$1S&e0X)
        ((letrec ((g$f$15437$1S&e0X
                    (case-lambda
                      ((g$a$15438$1S&e0X g$b$15439$1S&e0X)
                       (if (null? g$b$15439$1S&e0X)
                         '#t
                         (if (g$fx>=?$14952$1S&e0X
                               g$a$15438$1S&e0X
                               ($car g$b$15439$1S&e0X))
                           (g$f$15437$1S&e0X
                             ($car g$b$15439$1S&e0X)
                             ($cdr g$b$15439$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$15437$1S&e0X)
         g$x1$15434$1S&e0X
         (cons g$x2$15435$1S&e0X g$rest$15436$1S&e0X)))))
   (g$fxand$15000$1S&e0X
     g$fxand$16985$1S&e0X
     (case-lambda
       (() '-1)
       ((g$x1$15440$1S&e0X g$x2$15441$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15440$1S&e0X))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$15440$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15441$1S&e0X))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$15441$1S&e0X)
            (void))
          ($fxand g$x1$15440$1S&e0X g$x2$15441$1S&e0X)))
       (g$args$15442$1S&e0X
        (g$fold-left$11836$1S&e0X
          g$fxand$15000$1S&e0X
          (g$fxand$15000$1S&e0X)
          g$args$15442$1S&e0X))))
   (g$fxior$15001$1S&e0X
     g$fxior$16986$1S&e0X
     (case-lambda
       (() '0)
       ((g$x1$15443$1S&e0X g$x2$15444$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15443$1S&e0X))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$15443$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15444$1S&e0X))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$15444$1S&e0X)
            (void))
          ($fxior g$x1$15443$1S&e0X g$x2$15444$1S&e0X)))
       (g$args$15445$1S&e0X
        (g$fold-left$11836$1S&e0X
          g$fxior$15001$1S&e0X
          (g$fxior$15001$1S&e0X)
          g$args$15445$1S&e0X))))
   (g$fxxor$15002$1S&e0X
     g$fxxor$16987$1S&e0X
     (case-lambda
       (() '0)
       ((g$x1$15446$1S&e0X g$x2$15447$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15446$1S&e0X))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$15446$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15447$1S&e0X))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$15447$1S&e0X)
            (void))
          ($fxxor g$x1$15446$1S&e0X g$x2$15447$1S&e0X)))
       (g$args$15448$1S&e0X
        (g$fold-left$11836$1S&e0X
          g$fxxor$15002$1S&e0X
          (g$fxxor$15002$1S&e0X)
          g$args$15448$1S&e0X))))
   (g$residual-fxdiv*$15018$1S&e0X
     g$residual-fxdiv*$16988$1S&e0X
     (case-lambda
       ((g$x1$15469$1S&e0X g$x2$15470$1S&e0X)
        (begin
          (if ($fx=? '0 g$x2$15470$1S&e0X)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$15469$1S&e0X
              g$x2$15470$1S&e0X)
            (void))
          (if (if ($fx=? '-1 g$x2$15470$1S&e0X)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$14734$1S&e0X)
                    g$x1$15469$1S&e0X))
                '#f)
            (g$overflow-error$14843$1S&e0X
              'fxdiv
              g$x1$15469$1S&e0X
              g$x2$15470$1S&e0X)
            (void))
          (if ($fx=? '0 g$x1$15469$1S&e0X)
            '0
            (if ($fx<? '0 g$x1$15469$1S&e0X)
              ((case-lambda
                 ((g$x1$15491$1S&e0X g$x2$15492$1S&e0X)
                  ($fxdiv0 g$x1$15491$1S&e0X g$x2$15492$1S&e0X)))
               g$x1$15469$1S&e0X
               g$x2$15470$1S&e0X)
              (if ($fx<? '0 g$x2$15470$1S&e0X)
                ((case-lambda
                   ((g$x1$15513$1S&e0X g$x2$15514$1S&e0X)
                    ($fxdiv0 g$x1$15513$1S&e0X g$x2$15514$1S&e0X)))
                 ($$fx- g$x1$15469$1S&e0X ($$fx- g$x2$15470$1S&e0X '1))
                 g$x2$15470$1S&e0X)
                (begin
                  '#f
                  ((case-lambda
                     ((g$x1$15535$1S&e0X g$x2$15536$1S&e0X)
                      ($fxdiv0 g$x1$15535$1S&e0X g$x2$15536$1S&e0X)))
                   ($$fx+
                     g$x1$15469$1S&e0X
                     ($$fx+ g$x2$15470$1S&e0X '1))
                   g$x2$15470$1S&e0X)))))))))
   (g$fxdiv$15019$1S&e0X
     g$fxdiv$16989$1S&e0X
     (case-lambda
       ((g$x1$15537$1S&e0X g$x2$15538$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15537$1S&e0X))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$15537$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15538$1S&e0X))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$15538$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15559$1S&e0X g$x2$15560$1S&e0X)
                  (begin
                    (if ($fx=? '0 g$x2$15560$1S&e0X)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$15559$1S&e0X
                        g$x2$15560$1S&e0X)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15560$1S&e0X)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$14734$1S&e0X)
                              g$x1$15559$1S&e0X))
                          '#f)
                      (g$overflow-error$14843$1S&e0X
                        'fxdiv
                        g$x1$15559$1S&e0X
                        g$x2$15560$1S&e0X)
                      (void))
                    (if ($fx=? '0 g$x1$15559$1S&e0X)
                      '0
                      (if ($fx<? '0 g$x1$15559$1S&e0X)
                        ((case-lambda
                           ((g$x1$15581$1S&e0X g$x2$15582$1S&e0X)
                            ($fxdiv0
                              g$x1$15581$1S&e0X
                              g$x2$15582$1S&e0X)))
                         g$x1$15559$1S&e0X
                         g$x2$15560$1S&e0X)
                        (if ($fx<? '0 g$x2$15560$1S&e0X)
                          ((case-lambda
                             ((g$x1$15603$1S&e0X g$x2$15604$1S&e0X)
                              ($fxdiv0
                                g$x1$15603$1S&e0X
                                g$x2$15604$1S&e0X)))
                           ($$fx-
                             g$x1$15559$1S&e0X
                             ($$fx- g$x2$15560$1S&e0X '1))
                           g$x2$15560$1S&e0X)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$x1$15625$1S&e0X g$x2$15626$1S&e0X)
                                ($fxdiv0
                                  g$x1$15625$1S&e0X
                                  g$x2$15626$1S&e0X)))
                             ($$fx+
                               g$x1$15559$1S&e0X
                               ($$fx+ g$x2$15560$1S&e0X '1))
                             g$x2$15560$1S&e0X))))))))
               g$x1$15537$1S&e0X
               g$x2$15538$1S&e0X))))))))
   (g$residual-fxmod*$15035$1S&e0X
     g$residual-fxmod*$16990$1S&e0X
     (case-lambda
       ((g$x1$15647$1S&e0X g$x2$15648$1S&e0X)
        ($$fx-
          g$x1$15647$1S&e0X
          ($$fx*
            ((case-lambda
               ((g$x1$15669$1S&e0X g$x2$15670$1S&e0X)
                (begin
                  (if ($fx=? '0 g$x2$15670$1S&e0X)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$15669$1S&e0X
                      g$x2$15670$1S&e0X)
                    (void))
                  (if (if ($fx=? '-1 g$x2$15670$1S&e0X)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$14734$1S&e0X)
                            g$x1$15669$1S&e0X))
                        '#f)
                    (g$overflow-error$14843$1S&e0X
                      'fxdiv
                      g$x1$15669$1S&e0X
                      g$x2$15670$1S&e0X)
                    (void))
                  (if ($fx=? '0 g$x1$15669$1S&e0X)
                    '0
                    (if ($fx<? '0 g$x1$15669$1S&e0X)
                      ((case-lambda
                         ((g$x1$15691$1S&e0X g$x2$15692$1S&e0X)
                          ($fxdiv0
                            g$x1$15691$1S&e0X
                            g$x2$15692$1S&e0X)))
                       g$x1$15669$1S&e0X
                       g$x2$15670$1S&e0X)
                      (if ($fx<? '0 g$x2$15670$1S&e0X)
                        ((case-lambda
                           ((g$x1$15713$1S&e0X g$x2$15714$1S&e0X)
                            ($fxdiv0
                              g$x1$15713$1S&e0X
                              g$x2$15714$1S&e0X)))
                         ($$fx-
                           g$x1$15669$1S&e0X
                           ($$fx- g$x2$15670$1S&e0X '1))
                         g$x2$15670$1S&e0X)
                        (begin
                          '#f
                          ((case-lambda
                             ((g$x1$15735$1S&e0X g$x2$15736$1S&e0X)
                              ($fxdiv0
                                g$x1$15735$1S&e0X
                                g$x2$15736$1S&e0X)))
                           ($$fx+
                             g$x1$15669$1S&e0X
                             ($$fx+ g$x2$15670$1S&e0X '1))
                           g$x2$15670$1S&e0X))))))))
             g$x1$15647$1S&e0X
             g$x2$15648$1S&e0X)
            g$x2$15648$1S&e0X)))))
   (g$fxmod$15036$1S&e0X
     g$fxmod$16991$1S&e0X
     (case-lambda
       ((g$x1$15737$1S&e0X g$x2$15738$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15737$1S&e0X))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$15737$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15738$1S&e0X))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$15738$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15759$1S&e0X g$x2$15760$1S&e0X)
                  ($$fx-
                    g$x1$15759$1S&e0X
                    ($$fx*
                      ((case-lambda
                         ((g$x1$15781$1S&e0X g$x2$15782$1S&e0X)
                          (begin
                            (if ($fx=? '0 g$x2$15782$1S&e0X)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$15781$1S&e0X
                                g$x2$15782$1S&e0X)
                              (void))
                            (if (if ($fx=? '-1 g$x2$15782$1S&e0X)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$14734$1S&e0X)
                                      g$x1$15781$1S&e0X))
                                  '#f)
                              (g$overflow-error$14843$1S&e0X
                                'fxdiv
                                g$x1$15781$1S&e0X
                                g$x2$15782$1S&e0X)
                              (void))
                            (if ($fx=? '0 g$x1$15781$1S&e0X)
                              '0
                              (if ($fx<? '0 g$x1$15781$1S&e0X)
                                ((case-lambda
                                   ((g$x1$15803$1S&e0X
                                      g$x2$15804$1S&e0X)
                                    ($fxdiv0
                                      g$x1$15803$1S&e0X
                                      g$x2$15804$1S&e0X)))
                                 g$x1$15781$1S&e0X
                                 g$x2$15782$1S&e0X)
                                (if ($fx<? '0 g$x2$15782$1S&e0X)
                                  ((case-lambda
                                     ((g$x1$15825$1S&e0X
                                        g$x2$15826$1S&e0X)
                                      ($fxdiv0
                                        g$x1$15825$1S&e0X
                                        g$x2$15826$1S&e0X)))
                                   ($$fx-
                                     g$x1$15781$1S&e0X
                                     ($$fx- g$x2$15782$1S&e0X '1))
                                   g$x2$15782$1S&e0X)
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$x1$15847$1S&e0X
                                          g$x2$15848$1S&e0X)
                                        ($fxdiv0
                                          g$x1$15847$1S&e0X
                                          g$x2$15848$1S&e0X)))
                                     ($$fx+
                                       g$x1$15781$1S&e0X
                                       ($$fx+ g$x2$15782$1S&e0X '1))
                                     g$x2$15782$1S&e0X))))))))
                       g$x1$15759$1S&e0X
                       g$x2$15760$1S&e0X)
                      g$x2$15760$1S&e0X))))
               g$x1$15737$1S&e0X
               g$x2$15738$1S&e0X))))))))
   (g$fxmod0$15037$1S&e0X
     g$fxmod0$16992$1S&e0X
     (case-lambda
       ((g$x1$15849$1S&e0X g$x2$15850$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15849$1S&e0X))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$15849$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15850$1S&e0X))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$15850$1S&e0X)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$15850$1S&e0X)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$15849$1S&e0X
                    g$x2$15850$1S&e0X)
                  (void))
                (if (if ($fx=? '-1 g$x2$15850$1S&e0X)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$14734$1S&e0X)
                          g$x1$15849$1S&e0X))
                      '#f)
                  (g$overflow-error$14843$1S&e0X
                    'fxmod0
                    g$x1$15849$1S&e0X
                    g$x2$15850$1S&e0X)
                  (void))
                ($fxmod0 g$x1$15849$1S&e0X g$x2$15850$1S&e0X)))))))))
   (g$fxdiv-and-mod$15038$1S&e0X
     g$fxdiv-and-mod$16993$1S&e0X
     (case-lambda
       ((g$x1$15851$1S&e0X g$x2$15852$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15851$1S&e0X))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$15851$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15852$1S&e0X))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$15852$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15853$1S&e0X)
                  (values
                    g$d$15853$1S&e0X
                    ($$fx-
                      g$x1$15851$1S&e0X
                      ($$fx* g$d$15853$1S&e0X g$x2$15852$1S&e0X)))))
               ((case-lambda
                  ((g$x1$15874$1S&e0X g$x2$15875$1S&e0X)
                   (begin
                     (if ($fx=? '0 g$x2$15875$1S&e0X)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$15874$1S&e0X
                         g$x2$15875$1S&e0X)
                       (void))
                     (if (if ($fx=? '-1 g$x2$15875$1S&e0X)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$14734$1S&e0X)
                               g$x1$15874$1S&e0X))
                           '#f)
                       (g$overflow-error$14843$1S&e0X
                         'fxdiv
                         g$x1$15874$1S&e0X
                         g$x2$15875$1S&e0X)
                       (void))
                     (if ($fx=? '0 g$x1$15874$1S&e0X)
                       '0
                       (if ($fx<? '0 g$x1$15874$1S&e0X)
                         ((case-lambda
                            ((g$x1$15896$1S&e0X g$x2$15897$1S&e0X)
                             ($fxdiv0
                               g$x1$15896$1S&e0X
                               g$x2$15897$1S&e0X)))
                          g$x1$15874$1S&e0X
                          g$x2$15875$1S&e0X)
                         (if ($fx<? '0 g$x2$15875$1S&e0X)
                           ((case-lambda
                              ((g$x1$15918$1S&e0X g$x2$15919$1S&e0X)
                               ($fxdiv0
                                 g$x1$15918$1S&e0X
                                 g$x2$15919$1S&e0X)))
                            ($$fx-
                              g$x1$15874$1S&e0X
                              ($$fx- g$x2$15875$1S&e0X '1))
                            g$x2$15875$1S&e0X)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x1$15940$1S&e0X g$x2$15941$1S&e0X)
                                 ($fxdiv0
                                   g$x1$15940$1S&e0X
                                   g$x2$15941$1S&e0X)))
                              ($$fx+
                                g$x1$15874$1S&e0X
                                ($$fx+ g$x2$15875$1S&e0X '1))
                              g$x2$15875$1S&e0X))))))))
                g$x1$15851$1S&e0X
                g$x2$15852$1S&e0X)))))))))
   (g$residual-fxdiv0*$15054$1S&e0X
     g$residual-fxdiv0*$16994$1S&e0X
     (case-lambda
       ((g$x1$15962$1S&e0X g$x2$15963$1S&e0X)
        (begin
          (if ($fx=? '0 g$x2$15963$1S&e0X)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$15962$1S&e0X
              g$x2$15963$1S&e0X)
            (void))
          (if (if ($fx=? '-1 g$x2$15963$1S&e0X)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$14734$1S&e0X)
                    g$x1$15962$1S&e0X))
                '#f)
            (g$overflow-error$14843$1S&e0X
              'fxdiv0
              g$x1$15962$1S&e0X
              g$x2$15963$1S&e0X)
            (void))
          ((case-lambda
             ((g$x1$15984$1S&e0X g$x2$15985$1S&e0X)
              ($fxdiv0 g$x1$15984$1S&e0X g$x2$15985$1S&e0X)))
           g$x1$15962$1S&e0X
           g$x2$15963$1S&e0X)))))
   (g$fxdiv0$15055$1S&e0X
     g$fxdiv0$16995$1S&e0X
     (case-lambda
       ((g$x1$15986$1S&e0X g$x2$15987$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$15986$1S&e0X))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$15986$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$15987$1S&e0X))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$15987$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$16008$1S&e0X g$x2$16009$1S&e0X)
                  (begin
                    (if ($fx=? '0 g$x2$16009$1S&e0X)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$16008$1S&e0X
                        g$x2$16009$1S&e0X)
                      (void))
                    (if (if ($fx=? '-1 g$x2$16009$1S&e0X)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$14734$1S&e0X)
                              g$x1$16008$1S&e0X))
                          '#f)
                      (g$overflow-error$14843$1S&e0X
                        'fxdiv0
                        g$x1$16008$1S&e0X
                        g$x2$16009$1S&e0X)
                      (void))
                    ((case-lambda
                       ((g$x1$16030$1S&e0X g$x2$16031$1S&e0X)
                        ($fxdiv0 g$x1$16030$1S&e0X g$x2$16031$1S&e0X)))
                     g$x1$16008$1S&e0X
                     g$x2$16009$1S&e0X))))
               g$x1$15986$1S&e0X
               g$x2$15987$1S&e0X))))))))
   (g$residual-%%fxdiv0$15071$1S&e0X
     g$residual-%%fxdiv0$16996$1S&e0X
     (case-lambda
       ((g$x1$16052$1S&e0X g$x2$16053$1S&e0X)
        ($fxdiv0 g$x1$16052$1S&e0X g$x2$16053$1S&e0X))))
   (g$fxdiv0-and-mod0$15072$1S&e0X
     g$fxdiv0-and-mod0$16997$1S&e0X
     (case-lambda
       ((g$x1$16054$1S&e0X g$x2$16055$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$16054$1S&e0X))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$16054$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$x2$16055$1S&e0X))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$16055$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$16056$1S&e0X)
                  (values
                    g$d$16056$1S&e0X
                    ($$fx-
                      g$x1$16054$1S&e0X
                      ($$fx* g$d$16056$1S&e0X g$x2$16055$1S&e0X)))))
               ((case-lambda
                  ((g$x1$16077$1S&e0X g$x2$16078$1S&e0X)
                   (begin
                     (if ($fx=? '0 g$x2$16078$1S&e0X)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$16077$1S&e0X
                         g$x2$16078$1S&e0X)
                       (void))
                     (if (if ($fx=? '-1 g$x2$16078$1S&e0X)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$14734$1S&e0X)
                               g$x1$16077$1S&e0X))
                           '#f)
                       (g$overflow-error$14843$1S&e0X
                         'fxdiv0
                         g$x1$16077$1S&e0X
                         g$x2$16078$1S&e0X)
                       (void))
                     ((case-lambda
                        ((g$x1$16099$1S&e0X g$x2$16100$1S&e0X)
                         ($fxdiv0 g$x1$16099$1S&e0X g$x2$16100$1S&e0X)))
                      g$x1$16077$1S&e0X
                      g$x2$16078$1S&e0X))))
                g$x1$16054$1S&e0X
                g$x2$16055$1S&e0X)))))))))
   (g$residual-fxpositive?*$15088$1S&e0X
     g$residual-fxpositive?*$16998$1S&e0X
     (case-lambda ((g$r$16121$1S&e0X) ($fx<? '0 g$r$16121$1S&e0X))))
   (g$fxpositive?$15089$1S&e0X
     g$fxpositive?$16999$1S&e0X
     (case-lambda
       ((g$r$16122$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$r$16122$1S&e0X))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$16122$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$16143$1S&e0X) ($fx<? '0 g$r$16143$1S&e0X)))
               g$r$16122$1S&e0X))))))))
   (g$residual-fxnegative?*$15105$1S&e0X
     g$residual-fxnegative?*$17000$1S&e0X
     (case-lambda ((g$r$16164$1S&e0X) ($fx>? '0 g$r$16164$1S&e0X))))
   (g$fxnegative?$15106$1S&e0X
     g$fxnegative?$17001$1S&e0X
     (case-lambda
       ((g$r$16165$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$r$16165$1S&e0X))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$16165$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$16186$1S&e0X) ($fx>? '0 g$r$16186$1S&e0X)))
               g$r$16165$1S&e0X))))))))
   (g$residual-fxzero?*$15122$1S&e0X
     g$residual-fxzero?*$17002$1S&e0X
     (case-lambda ((g$r$16207$1S&e0X) ($fx=? '0 g$r$16207$1S&e0X))))
   (g$fxzero?$15123$1S&e0X
     g$fxzero?$17003$1S&e0X
     (case-lambda
       ((g$r$16208$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$r$16208$1S&e0X))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$16208$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$16229$1S&e0X) ($fx=? '0 g$r$16229$1S&e0X)))
               g$r$16208$1S&e0X))))))))
   (g$residual-fxeven?*$15139$1S&e0X
     g$residual-fxeven?*$17004$1S&e0X
     (case-lambda
       ((g$n$16250$1S&e0X) ($fx=? '0 ($fxand g$n$16250$1S&e0X '1)))))
   (g$fxeven?$15140$1S&e0X
     g$fxeven?$17005$1S&e0X
     (case-lambda
       ((g$n$16251$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$n$16251$1S&e0X))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$16251$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$16272$1S&e0X)
                  ($fx=? '0 ($fxand g$n$16272$1S&e0X '1))))
               g$n$16251$1S&e0X))))))))
   (g$residual-fxodd?*$15156$1S&e0X
     g$residual-fxodd?*$17006$1S&e0X
     (case-lambda
       ((g$n$16293$1S&e0X) ($fx=? '1 ($fxand g$n$16293$1S&e0X '1)))))
   (g$fxodd?$15157$1S&e0X
     g$fxodd?$17007$1S&e0X
     (case-lambda
       ((g$n$16294$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$n$16294$1S&e0X))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$16294$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$16315$1S&e0X)
                  ($fx=? '1 ($fxand g$n$16315$1S&e0X '1))))
               g$n$16294$1S&e0X))))))))
   (g$fxmax$15158$1S&e0X
     g$fxmax$17008$1S&e0X
     (case-lambda
       ((g$a$16316$1S&e0X . g$rest$16317$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$a$16316$1S&e0X))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$16316$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            (case-lambda
              ((g$a$16318$1S&e0X g$b$16319$1S&e0X)
               (if (g$fx<?$14949$1S&e0X
                     g$a$16318$1S&e0X
                     g$b$16319$1S&e0X)
                 g$b$16319$1S&e0X
                 g$a$16318$1S&e0X)))
            g$a$16316$1S&e0X
            g$rest$16317$1S&e0X)))))
   (g$fxmin$15159$1S&e0X
     g$fxmin$17009$1S&e0X
     (case-lambda
       ((g$a$16320$1S&e0X . g$rest$16321$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$a$16320$1S&e0X))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$16320$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            (case-lambda
              ((g$a$16322$1S&e0X g$b$16323$1S&e0X)
               (if (g$fx>?$14951$1S&e0X
                     g$a$16322$1S&e0X
                     g$b$16323$1S&e0X)
                 g$b$16323$1S&e0X
                 g$a$16322$1S&e0X)))
            g$a$16320$1S&e0X
            g$rest$16321$1S&e0X)))))
   (g$fx*/carry$15160$1S&e0X
     g$fx*/carry$17010$1S&e0X
     (case-lambda
       ((g$fx1$16324$1S&e0X g$fx2$16325$1S&e0X g$fx3$16326$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16324$1S&e0X))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$16324$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16325$1S&e0X))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$16325$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx3$16326$1S&e0X))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$16326$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$16327$1S&e0X g$e$16328$1S&e0X)
                  (values
                    (g$mod0$12673$1S&e0X
                      g$s$16327$1S&e0X
                      g$e$16328$1S&e0X)
                    (g$div0$12671$1S&e0X
                      g$s$16327$1S&e0X
                      g$e$16328$1S&e0X))))
               (+ (* g$fx1$16324$1S&e0X g$fx2$16325$1S&e0X)
                  g$fx3$16326$1S&e0X)
               (g$expt$13727$1S&e0X
                 '2
                 (g$fixnum-width$12670$1S&e0X))))))))))
   (g$fx-/carry$15161$1S&e0X
     g$fx-/carry$17011$1S&e0X
     (case-lambda
       ((g$fx1$16329$1S&e0X g$fx2$16330$1S&e0X g$fx3$16331$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16329$1S&e0X))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$16329$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16330$1S&e0X))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$16330$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx3$16331$1S&e0X))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$16331$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$16332$1S&e0X g$e$16333$1S&e0X)
                  (values
                    (g$mod0$12673$1S&e0X
                      g$s$16332$1S&e0X
                      g$e$16333$1S&e0X)
                    (g$div0$12671$1S&e0X
                      g$s$16332$1S&e0X
                      g$e$16333$1S&e0X))))
               (- g$fx1$16329$1S&e0X
                  g$fx2$16330$1S&e0X
                  g$fx3$16331$1S&e0X)
               (g$expt$13727$1S&e0X
                 '2
                 (g$fixnum-width$12670$1S&e0X))))))))))
   (g$fx+/carry$15162$1S&e0X
     g$fx+/carry$17012$1S&e0X
     (case-lambda
       ((g$fx1$16334$1S&e0X g$fx2$16335$1S&e0X g$fx3$16336$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16334$1S&e0X))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$16334$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16335$1S&e0X))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$16335$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx3$16336$1S&e0X))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$16336$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$16337$1S&e0X g$e$16338$1S&e0X)
                  (values
                    (g$mod0$12673$1S&e0X
                      g$s$16337$1S&e0X
                      g$e$16338$1S&e0X)
                    (g$div0$12671$1S&e0X
                      g$s$16337$1S&e0X
                      g$e$16338$1S&e0X))))
               (+ g$fx1$16334$1S&e0X
                  g$fx2$16335$1S&e0X
                  g$fx3$16336$1S&e0X)
               (g$expt$13727$1S&e0X
                 '2
                 (g$fixnum-width$12670$1S&e0X))))))))))
   (g$residual-fxif*$15178$1S&e0X
     g$residual-fxif*$17013$1S&e0X
     (case-lambda
       ((g$fx1$16359$1S&e0X g$fx2$16360$1S&e0X g$fx3$16361$1S&e0X)
        ($fxior
          ($fxand g$fx1$16359$1S&e0X g$fx2$16360$1S&e0X)
          ($fxand ($fxnot g$fx1$16359$1S&e0X) g$fx3$16361$1S&e0X)))))
   (g$fxif$15179$1S&e0X
     g$fxif$17014$1S&e0X
     (case-lambda
       ((g$fx1$16362$1S&e0X g$fx2$16363$1S&e0X g$fx3$16364$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16362$1S&e0X))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$16362$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16363$1S&e0X))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$16363$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx3$16364$1S&e0X))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$16364$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16385$1S&e0X
                    g$fx2$16386$1S&e0X
                    g$fx3$16387$1S&e0X)
                  ($fxior
                    ($fxand g$fx1$16385$1S&e0X g$fx2$16386$1S&e0X)
                    ($fxand
                      ($fxnot g$fx1$16385$1S&e0X)
                      g$fx3$16387$1S&e0X))))
               g$fx1$16362$1S&e0X
               g$fx2$16363$1S&e0X
               g$fx3$16364$1S&e0X))))))))
   (g$residual-fxcopy-bit*$15195$1S&e0X
     g$residual-fxcopy-bit*$17015$1S&e0X
     (case-lambda
       ((g$fx1$16408$1S&e0X g$fx2$16409$1S&e0X g$fx3$16410$1S&e0X)
        ((case-lambda
           ((g$fx1$16431$1S&e0X g$fx2$16432$1S&e0X g$fx3$16433$1S&e0X)
            ($fxior
              ($fxand g$fx1$16431$1S&e0X g$fx2$16432$1S&e0X)
              ($fxand ($fxnot g$fx1$16431$1S&e0X) g$fx3$16433$1S&e0X))))
         ($fxarithmetic-shift-left '1 g$fx2$16409$1S&e0X)
         ($fxarithmetic-shift-left
           g$fx3$16410$1S&e0X
           g$fx2$16409$1S&e0X)
         g$fx1$16408$1S&e0X))))
   (g$fxcopy-bit$15196$1S&e0X
     g$fxcopy-bit$17016$1S&e0X
     (case-lambda
       ((g$fx1$16434$1S&e0X g$fx2$16435$1S&e0X g$fx3$16436$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16434$1S&e0X))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$16434$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16435$1S&e0X))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$16435$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx3$16436$1S&e0X))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$16436$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16457$1S&e0X
                    g$fx2$16458$1S&e0X
                    g$fx3$16459$1S&e0X)
                  ((case-lambda
                     ((g$fx1$16480$1S&e0X
                        g$fx2$16481$1S&e0X
                        g$fx3$16482$1S&e0X)
                      ($fxior
                        ($fxand g$fx1$16480$1S&e0X g$fx2$16481$1S&e0X)
                        ($fxand
                          ($fxnot g$fx1$16480$1S&e0X)
                          g$fx3$16482$1S&e0X))))
                   ($fxarithmetic-shift-left '1 g$fx2$16458$1S&e0X)
                   ($fxarithmetic-shift-left
                     g$fx3$16459$1S&e0X
                     g$fx2$16458$1S&e0X)
                   g$fx1$16457$1S&e0X)))
               g$fx1$16434$1S&e0X
               g$fx2$16435$1S&e0X
               g$fx3$16436$1S&e0X))))))))
   (g$residual-fxbit-field*$15212$1S&e0X
     g$residual-fxbit-field*$17017$1S&e0X
     (case-lambda
       ((g$fx1$16503$1S&e0X g$fx2$16504$1S&e0X g$fx3$16505$1S&e0X)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$16503$1S&e0X
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$16505$1S&e0X)))
          g$fx2$16504$1S&e0X))))
   (g$fxbit-field$15213$1S&e0X
     g$fxbit-field$17018$1S&e0X
     (case-lambda
       ((g$fx1$16506$1S&e0X g$fx2$16507$1S&e0X g$fx3$16508$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16506$1S&e0X))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$16506$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16507$1S&e0X))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$16507$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx3$16508$1S&e0X))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$16508$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16529$1S&e0X
                    g$fx2$16530$1S&e0X
                    g$fx3$16531$1S&e0X)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$16529$1S&e0X
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$16531$1S&e0X)))
                    g$fx2$16530$1S&e0X)))
               g$fx1$16506$1S&e0X
               g$fx2$16507$1S&e0X
               g$fx3$16508$1S&e0X))))))))
   (g$residual-fxcopy-bit-field*$15229$1S&e0X
     g$residual-fxcopy-bit-field*$17019$1S&e0X
     (case-lambda
       ((g$to$16552$1S&e0X
          g$start$16553$1S&e0X
          g$end$16554$1S&e0X
          g$from$16555$1S&e0X)
        ((case-lambda
           ((g$fx1$16576$1S&e0X g$fx2$16577$1S&e0X g$fx3$16578$1S&e0X)
            ($fxior
              ($fxand g$fx1$16576$1S&e0X g$fx2$16577$1S&e0X)
              ($fxand ($fxnot g$fx1$16576$1S&e0X) g$fx3$16578$1S&e0X))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$16553$1S&e0X)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$16554$1S&e0X)))
         ($fxarithmetic-shift-left
           g$from$16555$1S&e0X
           g$start$16553$1S&e0X)
         g$to$16552$1S&e0X))))
   (g$fxcopy-bit-field$15230$1S&e0X
     g$fxcopy-bit-field$17020$1S&e0X
     (case-lambda
       ((g$to$16579$1S&e0X
          g$start$16580$1S&e0X
          g$end$16581$1S&e0X
          g$from$16582$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$to$16579$1S&e0X))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$16579$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$start$16580$1S&e0X))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$16580$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$end$16581$1S&e0X))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$16581$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$from$16582$1S&e0X))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$16582$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$16603$1S&e0X
                    g$start$16604$1S&e0X
                    g$end$16605$1S&e0X
                    g$from$16606$1S&e0X)
                  ((case-lambda
                     ((g$fx1$16627$1S&e0X
                        g$fx2$16628$1S&e0X
                        g$fx3$16629$1S&e0X)
                      ($fxior
                        ($fxand g$fx1$16627$1S&e0X g$fx2$16628$1S&e0X)
                        ($fxand
                          ($fxnot g$fx1$16627$1S&e0X)
                          g$fx3$16629$1S&e0X))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$16604$1S&e0X)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$16605$1S&e0X)))
                   ($fxarithmetic-shift-left
                     g$from$16606$1S&e0X
                     g$start$16604$1S&e0X)
                   g$to$16603$1S&e0X)))
               g$to$16579$1S&e0X
               g$start$16580$1S&e0X
               g$end$16581$1S&e0X
               g$from$16582$1S&e0X))))))))
   (g$fxarithmetic-shift-left$15231$1S&e0X
     g$fxarithmetic-shift-left$17021$1S&e0X
     (case-lambda
       ((g$fx1$16630$1S&e0X g$fx2$16631$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16630$1S&e0X))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$16630$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16631$1S&e0X))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$16631$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$16652$1S&e0X g$k$16653$1S&e0X)
                  (if ($fx=? g$k$16653$1S&e0X '0)
                    g$x$16652$1S&e0X
                    (if ($fx<? g$k$16653$1S&e0X '0)
                      ($fxarithmetic-shift-right
                        g$x$16652$1S&e0X
                        ($$fx- g$k$16653$1S&e0X))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$16654$1S&e0X)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$16652$1S&e0X)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$16654$1S&e0X))
                                (g$overflow-error$14843$1S&e0X
                                  'fxarithmetic-shift
                                  g$x$16652$1S&e0X
                                  g$k$16653$1S&e0X)
                                (void))
                              g$i$16654$1S&e0X)))
                         ($fxarithmetic-shift-left
                           g$x$16652$1S&e0X
                           g$k$16653$1S&e0X)))))))
               g$fx1$16630$1S&e0X
               g$fx2$16631$1S&e0X))))))))
   (g$fxarithmetic-shift-right$15232$1S&e0X
     g$fxarithmetic-shift-right$17022$1S&e0X
     (case-lambda
       ((g$fx1$16655$1S&e0X g$fx2$16656$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$fx1$16655$1S&e0X))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$16655$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$fx2$16656$1S&e0X))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$16656$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$16677$1S&e0X g$k$16678$1S&e0X)
                  (if ($fx=? g$k$16678$1S&e0X '0)
                    g$x$16677$1S&e0X
                    (if ($fx<? g$k$16678$1S&e0X '0)
                      ($fxarithmetic-shift-right
                        g$x$16677$1S&e0X
                        ($$fx- g$k$16678$1S&e0X))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$16679$1S&e0X)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$16677$1S&e0X)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$16679$1S&e0X))
                                (g$overflow-error$14843$1S&e0X
                                  'fxarithmetic-shift
                                  g$x$16677$1S&e0X
                                  g$k$16678$1S&e0X)
                                (void))
                              g$i$16679$1S&e0X)))
                         ($fxarithmetic-shift-left
                           g$x$16677$1S&e0X
                           g$k$16678$1S&e0X)))))))
               g$fx1$16655$1S&e0X
               ($$fx- g$fx2$16656$1S&e0X)))))))))
   (g$fxrotate-bit-field$15233$1S&e0X
     g$fxrotate-bit-field$17023$1S&e0X
     (case-lambda
       ((g$n$16680$1S&e0X
          g$start$16681$1S&e0X
          g$end$16682$1S&e0X
          g$count$16683$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$n$16680$1S&e0X))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$16680$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$start$16681$1S&e0X))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$16681$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$end$16682$1S&e0X))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$16682$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$count$16683$1S&e0X))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$16683$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$16684$1S&e0X)
                  (if ((case-lambda
                         ((g$r$16705$1S&e0X)
                          ($fx<? '0 g$r$16705$1S&e0X)))
                       g$width$16684$1S&e0X)
                    ((case-lambda
                       ((g$count$16706$1S&e0X g$field$16707$1S&e0X)
                        ((case-lambda
                           ((g$to$16728$1S&e0X
                              g$start$16729$1S&e0X
                              g$end$16730$1S&e0X
                              g$from$16731$1S&e0X)
                            ((case-lambda
                               ((g$fx1$16752$1S&e0X
                                  g$fx2$16753$1S&e0X
                                  g$fx3$16754$1S&e0X)
                                ($fxior
                                  ($fxand
                                    g$fx1$16752$1S&e0X
                                    g$fx2$16753$1S&e0X)
                                  ($fxand
                                    ($fxnot g$fx1$16752$1S&e0X)
                                    g$fx3$16754$1S&e0X))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$16729$1S&e0X)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$16730$1S&e0X)))
                             ($fxarithmetic-shift-left
                               g$from$16731$1S&e0X
                               g$start$16729$1S&e0X)
                             g$to$16728$1S&e0X)))
                         g$n$16680$1S&e0X
                         g$start$16681$1S&e0X
                         g$end$16682$1S&e0X
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$16707$1S&e0X
                             g$count$16706$1S&e0X)
                           ($fxarithmetic-shift-right
                             g$field$16707$1S&e0X
                             ($$fx-
                               g$width$16684$1S&e0X
                               g$count$16706$1S&e0X))))))
                     ((case-lambda
                        ((g$x1$16775$1S&e0X g$x2$16776$1S&e0X)
                         ($$fx-
                           g$x1$16775$1S&e0X
                           ($$fx*
                             ((case-lambda
                                ((g$x1$16797$1S&e0X g$x2$16798$1S&e0X)
                                 (begin
                                   (if ($fx=? '0 g$x2$16798$1S&e0X)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$16797$1S&e0X
                                       g$x2$16798$1S&e0X)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$16798$1S&e0X)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$14734$1S&e0X)
                                             g$x1$16797$1S&e0X))
                                         '#f)
                                     (g$overflow-error$14843$1S&e0X
                                       'fxdiv
                                       g$x1$16797$1S&e0X
                                       g$x2$16798$1S&e0X)
                                     (void))
                                   (if ($fx=? '0 g$x1$16797$1S&e0X)
                                     '0
                                     (if ($fx<? '0 g$x1$16797$1S&e0X)
                                       ((case-lambda
                                          ((g$x1$16819$1S&e0X
                                             g$x2$16820$1S&e0X)
                                           ($fxdiv0
                                             g$x1$16819$1S&e0X
                                             g$x2$16820$1S&e0X)))
                                        g$x1$16797$1S&e0X
                                        g$x2$16798$1S&e0X)
                                       (if ($fx<? '0 g$x2$16798$1S&e0X)
                                         ((case-lambda
                                            ((g$x1$16841$1S&e0X
                                               g$x2$16842$1S&e0X)
                                             ($fxdiv0
                                               g$x1$16841$1S&e0X
                                               g$x2$16842$1S&e0X)))
                                          ($$fx-
                                            g$x1$16797$1S&e0X
                                            ($$fx-
                                              g$x2$16798$1S&e0X
                                              '1))
                                          g$x2$16798$1S&e0X)
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$x1$16863$1S&e0X
                                                 g$x2$16864$1S&e0X)
                                               ($fxdiv0
                                                 g$x1$16863$1S&e0X
                                                 g$x2$16864$1S&e0X)))
                                            ($$fx+
                                              g$x1$16797$1S&e0X
                                              ($$fx+
                                                g$x2$16798$1S&e0X
                                                '1))
                                            g$x2$16798$1S&e0X))))))))
                              g$x1$16775$1S&e0X
                              g$x2$16776$1S&e0X)
                             g$x2$16776$1S&e0X))))
                      g$count$16683$1S&e0X
                      g$width$16684$1S&e0X)
                     ((case-lambda
                        ((g$fx1$16885$1S&e0X
                           g$fx2$16886$1S&e0X
                           g$fx3$16887$1S&e0X)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$16885$1S&e0X
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$16887$1S&e0X)))
                           g$fx2$16886$1S&e0X)))
                      g$n$16680$1S&e0X
                      g$start$16681$1S&e0X
                      g$end$16682$1S&e0X))
                    g$n$16680$1S&e0X)))
               ($$fx- g$end$16682$1S&e0X g$start$16681$1S&e0X)))))))))
   (g$fxreverse-bit-field$15234$1S&e0X
     g$fxreverse-bit-field$17024$1S&e0X
     (case-lambda
       ((g$x1$16888$1S&e0X g$start$16889$1S&e0X g$end$16890$1S&e0X)
        (begin
          (if (not (g$fixnum?$12668$1S&e0X g$x1$16888$1S&e0X))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$16888$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$start$16889$1S&e0X))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$16889$1S&e0X)
            (void))
          (if (not (g$fixnum?$12668$1S&e0X g$end$16890$1S&e0X))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$16890$1S&e0X)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$16889$1S&e0X
                           g$end$16890$1S&e0X))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$16889$1S&e0X
                    g$end$16890$1S&e0X)
                  (void))
                (letrec ((g$loop$16891$1S&e0X
                           (case-lambda
                             ((g$width$16915$1S&e0X
                                g$bits$16916$1S&e0X
                                g$rbits$16917$1S&e0X)
                              (if ($fx=? g$width$16915$1S&e0X '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$16938$1S&e0X
                                        g$start$16939$1S&e0X
                                        g$end$16940$1S&e0X
                                        g$from$16941$1S&e0X)
                                      ((case-lambda
                                         ((g$fx1$16962$1S&e0X
                                            g$fx2$16963$1S&e0X
                                            g$fx3$16964$1S&e0X)
                                          ($fxior
                                            ($fxand
                                              g$fx1$16962$1S&e0X
                                              g$fx2$16963$1S&e0X)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$16962$1S&e0X)
                                              g$fx3$16964$1S&e0X))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$16939$1S&e0X)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$16940$1S&e0X)))
                                       ($fxarithmetic-shift-left
                                         g$from$16941$1S&e0X
                                         g$start$16939$1S&e0X)
                                       g$to$16938$1S&e0X)))
                                   g$x1$16888$1S&e0X
                                   g$start$16889$1S&e0X
                                   g$end$16890$1S&e0X
                                   g$rbits$16917$1S&e0X))
                                (g$loop$16891$1S&e0X
                                  ($$fx- g$width$16915$1S&e0X '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$16916$1S&e0X
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$16917$1S&e0X
                                      '1)
                                    ($fxand
                                      g$bits$16916$1S&e0X
                                      '1))))))))
                  (g$loop$16891$1S&e0X
                    ($$fx- g$end$16890$1S&e0X g$start$16889$1S&e0X)
                    ((case-lambda
                       ((g$fx1$16912$1S&e0X
                          g$fx2$16913$1S&e0X
                          g$fx3$16914$1S&e0X)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$16912$1S&e0X
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$16914$1S&e0X)))
                          g$fx2$16913$1S&e0X)))
                     g$x1$16888$1S&e0X
                     g$start$16889$1S&e0X
                     g$end$16890$1S&e0X)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$17203$1S&e0X
     g$fl+$18518$1S&e0X
     (case-lambda
       (() '0.0)
       ((g$x1$17326$1S&e0X g$x2$17327$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17326$1S&e0X))
            (assertion-violation 'fl+ '"not a flonum" g$x1$17326$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17327$1S&e0X))
            (assertion-violation 'fl+ '"not a flonum" g$x2$17327$1S&e0X)
            (void))
          ($fl+ g$x1$17326$1S&e0X g$x2$17327$1S&e0X)))
       (g$args$17328$1S&e0X
        (g$fold-left$11836$1S&e0X
          g$fl+$17203$1S&e0X
          (g$fl+$17203$1S&e0X)
          g$args$17328$1S&e0X))))
   (g$fl*$17204$1S&e0X
     g$fl*$18519$1S&e0X
     (case-lambda
       (() '1.0)
       ((g$x1$17329$1S&e0X g$x2$17330$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17329$1S&e0X))
            (assertion-violation 'fl* '"not a flonum" g$x1$17329$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17330$1S&e0X))
            (assertion-violation 'fl* '"not a flonum" g$x2$17330$1S&e0X)
            (void))
          ($fl* g$x1$17329$1S&e0X g$x2$17330$1S&e0X)))
       (g$args$17331$1S&e0X
        (g$fold-left$11836$1S&e0X
          g$fl*$17204$1S&e0X
          (g$fl*$17204$1S&e0X)
          g$args$17331$1S&e0X))))
   (g$fldenominator$17205$1S&e0X
     g$fldenominator$18520$1S&e0X
     (case-lambda
       ((g$fl$17332$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$17332$1S&e0X))
            (assertion-violation
              'fldenominator
              '"not a flonum"
              g$fl$17332$1S&e0X)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$17333$1S&e0X)
                      (if g$t$17333$1S&e0X
                        g$t$17333$1S&e0X
                        (begin
                          '#f
                          (g$flinfinite?$17286$1S&e0X
                            g$fl$17332$1S&e0X)))))
                   (g$flnan?$17287$1S&e0X g$fl$17332$1S&e0X))
                '1.0
                (g$real->flonum$13670$1S&e0X
                  (g$denominator$13705$1S&e0X
                    g$fl$17332$1S&e0X))))))))))
   (g$flnumerator$17206$1S&e0X
     g$flnumerator$18521$1S&e0X
     (case-lambda
       ((g$fl$17334$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$17334$1S&e0X))
            (assertion-violation
              'flnumerator
              '"not a flonum"
              g$fl$17334$1S&e0X)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$17335$1S&e0X)
                      (if g$t$17335$1S&e0X
                        g$t$17335$1S&e0X
                        (begin
                          '#f
                          (g$flinfinite?$17286$1S&e0X
                            g$fl$17334$1S&e0X)))))
                   (g$flnan?$17287$1S&e0X g$fl$17334$1S&e0X))
                g$fl$17334$1S&e0X
                (g$real->flonum$13670$1S&e0X
                  (g$numerator$13704$1S&e0X g$fl$17334$1S&e0X))))))))))
   (g$fl-$17207$1S&e0X
     g$fl-$18522$1S&e0X
     (case-lambda
       ((g$x1$17336$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17336$1S&e0X))
            (assertion-violation 'fl- '"not a flonum" g$x1$17336$1S&e0X)
            (void))
          ($fl- g$x1$17336$1S&e0X)))
       ((g$x1$17337$1S&e0X g$x2$17338$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17337$1S&e0X))
            (assertion-violation 'fl- '"not a flonum" g$x1$17337$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17338$1S&e0X))
            (assertion-violation 'fl- '"not a flonum" g$x2$17338$1S&e0X)
            (void))
          ($fl- g$x1$17337$1S&e0X g$x2$17338$1S&e0X)))
       ((g$x1$17339$1S&e0X g$x2$17340$1S&e0X . g$rest$17341$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17339$1S&e0X))
            (assertion-violation 'fl- '"not a flonum" g$x1$17339$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            g$fl-$17207$1S&e0X
            g$x1$17339$1S&e0X
            (cons g$x2$17340$1S&e0X g$rest$17341$1S&e0X))))))
   (g$fl/$17208$1S&e0X
     g$fl/$18523$1S&e0X
     (case-lambda
       ((g$x1$17342$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17342$1S&e0X))
            (assertion-violation 'fl/ '"not a flonum" g$x1$17342$1S&e0X)
            (void))
          ($fl/ '1.0 g$x1$17342$1S&e0X)))
       ((g$x1$17343$1S&e0X g$x2$17344$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17343$1S&e0X))
            (assertion-violation 'fl/ '"not a flonum" g$x1$17343$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17344$1S&e0X))
            (assertion-violation 'fl/ '"not a flonum" g$x2$17344$1S&e0X)
            (void))
          ($fl/ g$x1$17343$1S&e0X g$x2$17344$1S&e0X)))
       ((g$x1$17345$1S&e0X g$x2$17346$1S&e0X . g$rest$17347$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17345$1S&e0X))
            (assertion-violation 'fl/ '"not a flonum" g$x1$17345$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            g$fl/$17208$1S&e0X
            g$x1$17345$1S&e0X
            (cons g$x2$17346$1S&e0X g$rest$17347$1S&e0X))))))
   (g$fl=?$17209$1S&e0X
     g$fl=?$18524$1S&e0X
     (case-lambda
       ((g$x1$17348$1S&e0X g$x2$17349$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17348$1S&e0X))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$17348$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17349$1S&e0X))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$17349$1S&e0X)
            (void))
          ($fl=? g$x1$17348$1S&e0X g$x2$17349$1S&e0X)))
       ((g$x1$17350$1S&e0X g$x2$17351$1S&e0X . g$rest$17352$1S&e0X)
        ((letrec ((g$f$17353$1S&e0X
                    (case-lambda
                      ((g$a$17354$1S&e0X g$b$17355$1S&e0X)
                       (if (null? g$b$17355$1S&e0X)
                         '#t
                         (if (g$fl=?$17209$1S&e0X
                               g$a$17354$1S&e0X
                               ($car g$b$17355$1S&e0X))
                           (g$f$17353$1S&e0X
                             ($car g$b$17355$1S&e0X)
                             ($cdr g$b$17355$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$17353$1S&e0X)
         g$x1$17350$1S&e0X
         (cons g$x2$17351$1S&e0X g$rest$17352$1S&e0X)))))
   (g$fl<?$17210$1S&e0X
     g$fl<?$18525$1S&e0X
     (case-lambda
       ((g$x1$17356$1S&e0X g$x2$17357$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17356$1S&e0X))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$17356$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17357$1S&e0X))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$17357$1S&e0X)
            (void))
          ($fl<? g$x1$17356$1S&e0X g$x2$17357$1S&e0X)))
       ((g$x1$17358$1S&e0X g$x2$17359$1S&e0X . g$rest$17360$1S&e0X)
        ((letrec ((g$f$17361$1S&e0X
                    (case-lambda
                      ((g$a$17362$1S&e0X g$b$17363$1S&e0X)
                       (if (null? g$b$17363$1S&e0X)
                         '#t
                         (if (g$fl<?$17210$1S&e0X
                               g$a$17362$1S&e0X
                               ($car g$b$17363$1S&e0X))
                           (g$f$17361$1S&e0X
                             ($car g$b$17363$1S&e0X)
                             ($cdr g$b$17363$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$17361$1S&e0X)
         g$x1$17358$1S&e0X
         (cons g$x2$17359$1S&e0X g$rest$17360$1S&e0X)))))
   (g$fl<=?$17211$1S&e0X
     g$fl<=?$18526$1S&e0X
     (case-lambda
       ((g$x1$17364$1S&e0X g$x2$17365$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17364$1S&e0X))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$17364$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17365$1S&e0X))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$17365$1S&e0X)
            (void))
          ($fl<=? g$x1$17364$1S&e0X g$x2$17365$1S&e0X)))
       ((g$x1$17366$1S&e0X g$x2$17367$1S&e0X . g$rest$17368$1S&e0X)
        ((letrec ((g$f$17369$1S&e0X
                    (case-lambda
                      ((g$a$17370$1S&e0X g$b$17371$1S&e0X)
                       (if (null? g$b$17371$1S&e0X)
                         '#t
                         (if (g$fl<=?$17211$1S&e0X
                               g$a$17370$1S&e0X
                               ($car g$b$17371$1S&e0X))
                           (g$f$17369$1S&e0X
                             ($car g$b$17371$1S&e0X)
                             ($cdr g$b$17371$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$17369$1S&e0X)
         g$x1$17366$1S&e0X
         (cons g$x2$17367$1S&e0X g$rest$17368$1S&e0X)))))
   (g$fl>?$17212$1S&e0X
     g$fl>?$18527$1S&e0X
     (case-lambda
       ((g$x1$17372$1S&e0X g$x2$17373$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17372$1S&e0X))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$17372$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17373$1S&e0X))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$17373$1S&e0X)
            (void))
          ($fl>? g$x1$17372$1S&e0X g$x2$17373$1S&e0X)))
       ((g$x1$17374$1S&e0X g$x2$17375$1S&e0X . g$rest$17376$1S&e0X)
        ((letrec ((g$f$17377$1S&e0X
                    (case-lambda
                      ((g$a$17378$1S&e0X g$b$17379$1S&e0X)
                       (if (null? g$b$17379$1S&e0X)
                         '#t
                         (if (g$fl>?$17212$1S&e0X
                               g$a$17378$1S&e0X
                               ($car g$b$17379$1S&e0X))
                           (g$f$17377$1S&e0X
                             ($car g$b$17379$1S&e0X)
                             ($cdr g$b$17379$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$17377$1S&e0X)
         g$x1$17374$1S&e0X
         (cons g$x2$17375$1S&e0X g$rest$17376$1S&e0X)))))
   (g$fl>=?$17213$1S&e0X
     g$fl>=?$18528$1S&e0X
     (case-lambda
       ((g$x1$17380$1S&e0X g$x2$17381$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17380$1S&e0X))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$17380$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17381$1S&e0X))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$17381$1S&e0X)
            (void))
          ($fl>=? g$x1$17380$1S&e0X g$x2$17381$1S&e0X)))
       ((g$x1$17382$1S&e0X g$x2$17383$1S&e0X . g$rest$17384$1S&e0X)
        ((letrec ((g$f$17385$1S&e0X
                    (case-lambda
                      ((g$a$17386$1S&e0X g$b$17387$1S&e0X)
                       (if (null? g$b$17387$1S&e0X)
                         '#t
                         (if (g$fl>=?$17213$1S&e0X
                               g$a$17386$1S&e0X
                               ($car g$b$17387$1S&e0X))
                           (g$f$17385$1S&e0X
                             ($car g$b$17387$1S&e0X)
                             ($cdr g$b$17387$1S&e0X))
                           (begin '#f '#f)))))))
           g$f$17385$1S&e0X)
         g$x1$17382$1S&e0X
         (cons g$x2$17383$1S&e0X g$rest$17384$1S&e0X)))))
   (g$residual-fldiv0*$17229$1S&e0X
     g$residual-fldiv0*$18529$1S&e0X
     (case-lambda
       ((g$x1$17408$1S&e0X g$x2$17409$1S&e0X)
        ((case-lambda
           ((g$d$17410$1S&e0X)
            ((case-lambda
               ((g$m$17411$1S&e0X)
                (if ($fl<?
                      g$m$17411$1S&e0X
                      (g$magnitude$13702$1S&e0X
                        ($fl/ g$x2$17409$1S&e0X '2.0)))
                  g$d$17410$1S&e0X
                  (if ($fl<? '0.0 g$x2$17409$1S&e0X)
                    ($fl+ g$d$17410$1S&e0X '1.0)
                    (begin '#f ($fl- g$d$17410$1S&e0X '1.0))))))
             ($fl-
               g$x1$17408$1S&e0X
               ($fl* g$d$17410$1S&e0X g$x2$17409$1S&e0X)))))
         ((case-lambda
            ((g$x1$17432$1S&e0X g$x2$17433$1S&e0X)
             (if ($fl<? '0.0 g$x2$17433$1S&e0X)
               ((case-lambda
                  ((g$fl$17454$1S&e0X)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$17454$1S&e0X)))
                ($fl/ g$x1$17432$1S&e0X g$x2$17433$1S&e0X))
               ($fl-
                 ((case-lambda
                    ((g$fl$17475$1S&e0X)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$17475$1S&e0X)))
                  ($fl/ g$x1$17432$1S&e0X ($fl- g$x2$17433$1S&e0X)))))))
          g$x1$17408$1S&e0X
          g$x2$17409$1S&e0X)))))
   (g$fldiv0$17230$1S&e0X
     g$fldiv0$18530$1S&e0X
     (case-lambda
       ((g$x1$17476$1S&e0X g$x2$17477$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17476$1S&e0X))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$17476$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17477$1S&e0X))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$17477$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17498$1S&e0X g$x2$17499$1S&e0X)
                  ((case-lambda
                     ((g$d$17500$1S&e0X)
                      ((case-lambda
                         ((g$m$17501$1S&e0X)
                          (if ($fl<?
                                g$m$17501$1S&e0X
                                (g$magnitude$13702$1S&e0X
                                  ($fl/ g$x2$17499$1S&e0X '2.0)))
                            g$d$17500$1S&e0X
                            (if ($fl<? '0.0 g$x2$17499$1S&e0X)
                              ($fl+ g$d$17500$1S&e0X '1.0)
                              (begin
                                '#f
                                ($fl- g$d$17500$1S&e0X '1.0))))))
                       ($fl-
                         g$x1$17498$1S&e0X
                         ($fl* g$d$17500$1S&e0X g$x2$17499$1S&e0X)))))
                   ((case-lambda
                      ((g$x1$17522$1S&e0X g$x2$17523$1S&e0X)
                       (if ($fl<? '0.0 g$x2$17523$1S&e0X)
                         ((case-lambda
                            ((g$fl$17544$1S&e0X)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$17544$1S&e0X)))
                          ($fl/ g$x1$17522$1S&e0X g$x2$17523$1S&e0X))
                         ($fl-
                           ((case-lambda
                              ((g$fl$17565$1S&e0X)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$17565$1S&e0X)))
                            ($fl/
                              g$x1$17522$1S&e0X
                              ($fl- g$x2$17523$1S&e0X)))))))
                    g$x1$17498$1S&e0X
                    g$x2$17499$1S&e0X))))
               g$x1$17476$1S&e0X
               g$x2$17477$1S&e0X))))))))
   (g$residual-flmod*$17246$1S&e0X
     g$residual-flmod*$18531$1S&e0X
     (case-lambda
       ((g$x1$17586$1S&e0X g$x2$17587$1S&e0X)
        ($fl-
          g$x1$17586$1S&e0X
          ($fl*
            ((case-lambda
               ((g$x1$17608$1S&e0X g$x2$17609$1S&e0X)
                (if ($fl<? '0.0 g$x2$17609$1S&e0X)
                  ((case-lambda
                     ((g$fl$17630$1S&e0X)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$17630$1S&e0X)))
                   ($fl/ g$x1$17608$1S&e0X g$x2$17609$1S&e0X))
                  ($fl-
                    ((case-lambda
                       ((g$fl$17651$1S&e0X)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17651$1S&e0X)))
                     ($fl/
                       g$x1$17608$1S&e0X
                       ($fl- g$x2$17609$1S&e0X)))))))
             g$x1$17586$1S&e0X
             g$x2$17587$1S&e0X)
            g$x2$17587$1S&e0X)))))
   (g$flmod$17247$1S&e0X
     g$flmod$18532$1S&e0X
     (case-lambda
       ((g$x1$17652$1S&e0X g$x2$17653$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17652$1S&e0X))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$17652$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17653$1S&e0X))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$17653$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17674$1S&e0X g$x2$17675$1S&e0X)
                  ($fl-
                    g$x1$17674$1S&e0X
                    ($fl*
                      ((case-lambda
                         ((g$x1$17696$1S&e0X g$x2$17697$1S&e0X)
                          (if ($fl<? '0.0 g$x2$17697$1S&e0X)
                            ((case-lambda
                               ((g$fl$17718$1S&e0X)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$17718$1S&e0X)))
                             ($fl/ g$x1$17696$1S&e0X g$x2$17697$1S&e0X))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$17739$1S&e0X)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$17739$1S&e0X)))
                               ($fl/
                                 g$x1$17696$1S&e0X
                                 ($fl- g$x2$17697$1S&e0X)))))))
                       g$x1$17674$1S&e0X
                       g$x2$17675$1S&e0X)
                      g$x2$17675$1S&e0X))))
               g$x1$17652$1S&e0X
               g$x2$17653$1S&e0X))))))))
   (g$flmod0$17248$1S&e0X
     g$flmod0$18533$1S&e0X
     (case-lambda
       ((g$x1$17740$1S&e0X g$x2$17741$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17740$1S&e0X))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$17740$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17741$1S&e0X))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$17741$1S&e0X)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$17740$1S&e0X
                ($fl*
                  ((case-lambda
                     ((g$x1$17762$1S&e0X g$x2$17763$1S&e0X)
                      ((case-lambda
                         ((g$d$17764$1S&e0X)
                          ((case-lambda
                             ((g$m$17765$1S&e0X)
                              (if ($fl<?
                                    g$m$17765$1S&e0X
                                    (g$magnitude$13702$1S&e0X
                                      ($fl/ g$x2$17763$1S&e0X '2.0)))
                                g$d$17764$1S&e0X
                                (if ($fl<? '0.0 g$x2$17763$1S&e0X)
                                  ($fl+ g$d$17764$1S&e0X '1.0)
                                  (begin
                                    '#f
                                    ($fl- g$d$17764$1S&e0X '1.0))))))
                           ($fl-
                             g$x1$17762$1S&e0X
                             ($fl*
                               g$d$17764$1S&e0X
                               g$x2$17763$1S&e0X)))))
                       ((case-lambda
                          ((g$x1$17786$1S&e0X g$x2$17787$1S&e0X)
                           (if ($fl<? '0.0 g$x2$17787$1S&e0X)
                             ((case-lambda
                                ((g$fl$17808$1S&e0X)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$17808$1S&e0X)))
                              ($fl/
                                g$x1$17786$1S&e0X
                                g$x2$17787$1S&e0X))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$17829$1S&e0X)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$17829$1S&e0X)))
                                ($fl/
                                  g$x1$17786$1S&e0X
                                  ($fl- g$x2$17787$1S&e0X)))))))
                        g$x1$17762$1S&e0X
                        g$x2$17763$1S&e0X))))
                   g$x1$17740$1S&e0X
                   g$x2$17741$1S&e0X)
                  g$x2$17741$1S&e0X)))))))))
   (g$fldiv-and-mod$17249$1S&e0X
     g$fldiv-and-mod$18534$1S&e0X
     (case-lambda
       ((g$x1$17830$1S&e0X g$x2$17831$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17830$1S&e0X))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$17830$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17831$1S&e0X))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$17831$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17832$1S&e0X)
                  (values
                    g$d$17832$1S&e0X
                    ($fl-
                      g$x1$17830$1S&e0X
                      ($fl* g$d$17832$1S&e0X g$x2$17831$1S&e0X)))))
               ((case-lambda
                  ((g$x1$17853$1S&e0X g$x2$17854$1S&e0X)
                   (if ($fl<? '0.0 g$x2$17854$1S&e0X)
                     ((case-lambda
                        ((g$fl$17875$1S&e0X)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$17875$1S&e0X)))
                      ($fl/ g$x1$17853$1S&e0X g$x2$17854$1S&e0X))
                     ($fl-
                       ((case-lambda
                          ((g$fl$17896$1S&e0X)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$17896$1S&e0X)))
                        ($fl/
                          g$x1$17853$1S&e0X
                          ($fl- g$x2$17854$1S&e0X)))))))
                g$x1$17830$1S&e0X
                g$x2$17831$1S&e0X)))))))))
   (g$residual-fldiv*$17265$1S&e0X
     g$residual-fldiv*$18535$1S&e0X
     (case-lambda
       ((g$x1$17917$1S&e0X g$x2$17918$1S&e0X)
        (if ($fl<? '0.0 g$x2$17918$1S&e0X)
          ((case-lambda
             ((g$fl$17939$1S&e0X)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$17939$1S&e0X)))
           ($fl/ g$x1$17917$1S&e0X g$x2$17918$1S&e0X))
          ($fl-
            ((case-lambda
               ((g$fl$17960$1S&e0X)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$17960$1S&e0X)))
             ($fl/ g$x1$17917$1S&e0X ($fl- g$x2$17918$1S&e0X))))))))
   (g$fldiv$17266$1S&e0X
     g$fldiv$18536$1S&e0X
     (case-lambda
       ((g$x1$17961$1S&e0X g$x2$17962$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$17961$1S&e0X))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$17961$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$17962$1S&e0X))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$17962$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17983$1S&e0X g$x2$17984$1S&e0X)
                  (if ($fl<? '0.0 g$x2$17984$1S&e0X)
                    ((case-lambda
                       ((g$fl$18005$1S&e0X)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$18005$1S&e0X)))
                     ($fl/ g$x1$17983$1S&e0X g$x2$17984$1S&e0X))
                    ($fl-
                      ((case-lambda
                         ((g$fl$18026$1S&e0X)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$18026$1S&e0X)))
                       ($fl/
                         g$x1$17983$1S&e0X
                         ($fl- g$x2$17984$1S&e0X)))))))
               g$x1$17961$1S&e0X
               g$x2$17962$1S&e0X))))))))
   (g$fldiv0-and-mod0$17267$1S&e0X
     g$fldiv0-and-mod0$18537$1S&e0X
     (case-lambda
       ((g$x1$18027$1S&e0X g$x2$18028$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$x1$18027$1S&e0X))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$18027$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$x2$18028$1S&e0X))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$18028$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$18029$1S&e0X)
                  (values
                    g$d$18029$1S&e0X
                    ($fl-
                      g$x1$18027$1S&e0X
                      ($fl* g$d$18029$1S&e0X g$x2$18028$1S&e0X)))))
               ((case-lambda
                  ((g$x1$18050$1S&e0X g$x2$18051$1S&e0X)
                   ((case-lambda
                      ((g$d$18052$1S&e0X)
                       ((case-lambda
                          ((g$m$18053$1S&e0X)
                           (if ($fl<?
                                 g$m$18053$1S&e0X
                                 (g$magnitude$13702$1S&e0X
                                   ($fl/ g$x2$18051$1S&e0X '2.0)))
                             g$d$18052$1S&e0X
                             (if ($fl<? '0.0 g$x2$18051$1S&e0X)
                               ($fl+ g$d$18052$1S&e0X '1.0)
                               (begin
                                 '#f
                                 ($fl- g$d$18052$1S&e0X '1.0))))))
                        ($fl-
                          g$x1$18050$1S&e0X
                          ($fl* g$d$18052$1S&e0X g$x2$18051$1S&e0X)))))
                    ((case-lambda
                       ((g$x1$18074$1S&e0X g$x2$18075$1S&e0X)
                        (if ($fl<? '0.0 g$x2$18075$1S&e0X)
                          ((case-lambda
                             ((g$fl$18096$1S&e0X)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$18096$1S&e0X)))
                           ($fl/ g$x1$18074$1S&e0X g$x2$18075$1S&e0X))
                          ($fl-
                            ((case-lambda
                               ((g$fl$18117$1S&e0X)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$18117$1S&e0X)))
                             ($fl/
                               g$x1$18074$1S&e0X
                               ($fl- g$x2$18075$1S&e0X)))))))
                     g$x1$18050$1S&e0X
                     g$x2$18051$1S&e0X))))
                g$x1$18027$1S&e0X
                g$x2$18028$1S&e0X)))))))))
   (g$flinteger?$17268$1S&e0X
     g$flinteger?$18538$1S&e0X
     (case-lambda
       ((g$fl$18118$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18118$1S&e0X))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$18118$1S&e0X)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$18139$1S&e0X g$x2$18140$1S&e0X)
                    ($fl-
                      g$x1$18139$1S&e0X
                      ($fl*
                        ((case-lambda
                           ((g$x1$18161$1S&e0X g$x2$18162$1S&e0X)
                            (if ($fl<? '0.0 g$x2$18162$1S&e0X)
                              ((case-lambda
                                 ((g$fl$18183$1S&e0X)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$18183$1S&e0X)))
                               ($fl/
                                 g$x1$18161$1S&e0X
                                 g$x2$18162$1S&e0X))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$18204$1S&e0X)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18204$1S&e0X)))
                                 ($fl/
                                   g$x1$18161$1S&e0X
                                   ($fl- g$x2$18162$1S&e0X)))))))
                         g$x1$18139$1S&e0X
                         g$x2$18140$1S&e0X)
                        g$x2$18140$1S&e0X))))
                 g$fl$18118$1S&e0X
                 '1.0)))))))))
   (g$flfinite?$17269$1S&e0X
     g$flfinite?$18539$1S&e0X
     (case-lambda
       ((g$fl$18205$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18205$1S&e0X))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$18205$1S&e0X)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$18226$1S&e0X)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$18226$1S&e0X)))
                    g$fl$18205$1S&e0X)))))))))
   (g$residual-flinfinite?*$17285$1S&e0X
     g$residual-flinfinite?*$18540$1S&e0X
     (case-lambda
       ((g$fl$18247$1S&e0X)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$18247$1S&e0X))))
   (g$flinfinite?$17286$1S&e0X
     g$flinfinite?$18541$1S&e0X
     (case-lambda
       ((g$fl$18248$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18248$1S&e0X))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$18248$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$18269$1S&e0X)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$18269$1S&e0X)))
               g$fl$18248$1S&e0X))))))))
   (g$flnan?$17287$1S&e0X
     g$flnan?$18542$1S&e0X
     (case-lambda
       ((g$fl$18270$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18270$1S&e0X))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$18270$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$18270$1S&e0X))))))))
   (g$flsin$17288$1S&e0X
     g$flsin$18543$1S&e0X
     (case-lambda
       ((g$fl$18271$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18271$1S&e0X))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$18271$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$18271$1S&e0X))))))))
   (g$flcos$17289$1S&e0X
     g$flcos$18544$1S&e0X
     (case-lambda
       ((g$fl$18272$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18272$1S&e0X))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$18272$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$18272$1S&e0X))))))))
   (g$fltan$17290$1S&e0X
     g$fltan$18545$1S&e0X
     (case-lambda
       ((g$fl$18273$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18273$1S&e0X))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$18273$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$18273$1S&e0X))))))))
   (g$flasin$17291$1S&e0X
     g$flasin$18546$1S&e0X
     (case-lambda
       ((g$fl$18274$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18274$1S&e0X))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$18274$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$18274$1S&e0X))))))))
   (g$flacos$17292$1S&e0X
     g$flacos$18547$1S&e0X
     (case-lambda
       ((g$fl$18275$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18275$1S&e0X))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$18275$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$18275$1S&e0X))))))))
   (g$flatan$17293$1S&e0X
     g$flatan$18548$1S&e0X
     (case-lambda
       ((g$fl$18276$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18276$1S&e0X))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$18276$1S&e0X)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$18276$1S&e0X)))
       ((g$fl1$18277$1S&e0X g$fl2$18278$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl1$18277$1S&e0X))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$18277$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$fl2$18278$1S&e0X))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$18278$1S&e0X)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$18277$1S&e0X
            g$fl2$18278$1S&e0X)))))
   (g$fllog$17294$1S&e0X
     g$fllog$18549$1S&e0X
     (case-lambda
       ((g$fl$18279$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18279$1S&e0X))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$18279$1S&e0X)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$18279$1S&e0X)))
       ((g$fl1$18280$1S&e0X g$fl2$18281$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl1$18280$1S&e0X))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$18280$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$fl2$18281$1S&e0X))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$18281$1S&e0X)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$18280$1S&e0X
            g$fl2$18281$1S&e0X)))))
   (g$flsqrt$17295$1S&e0X
     g$flsqrt$18550$1S&e0X
     (case-lambda
       ((g$fl$18282$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18282$1S&e0X))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$18282$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$18282$1S&e0X))))))))
   (g$flexp$17296$1S&e0X
     g$flexp$18551$1S&e0X
     (case-lambda
       ((g$fl$18283$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18283$1S&e0X))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$18283$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$18283$1S&e0X))))))))
   (g$flexpt$17297$1S&e0X
     g$flexpt$18552$1S&e0X
     (case-lambda
       ((g$fl$18284$1S&e0X g$n$18285$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18284$1S&e0X))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$18284$1S&e0X)
            (void))
          (if (not (g$flonum?$12669$1S&e0X g$n$18285$1S&e0X))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$18285$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$18284$1S&e0X
                g$n$18285$1S&e0X))))))))
   (g$flceiling$17298$1S&e0X
     g$flceiling$18553$1S&e0X
     (case-lambda
       ((g$fl$18286$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18286$1S&e0X))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$18286$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$18286$1S&e0X))))))))
   (g$residual-flfloor*$17314$1S&e0X
     g$residual-flfloor*$18554$1S&e0X
     (case-lambda
       ((g$fl$18307$1S&e0X)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$18307$1S&e0X))))
   (g$flfloor$17315$1S&e0X
     g$flfloor$18555$1S&e0X
     (case-lambda
       ((g$fl$18308$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18308$1S&e0X))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$18308$1S&e0X)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$18329$1S&e0X)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$18329$1S&e0X)))
               g$fl$18308$1S&e0X))))))))
   (g$fltruncate$17316$1S&e0X
     g$fltruncate$18556$1S&e0X
     (case-lambda
       ((g$fl$18330$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18330$1S&e0X))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$18330$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$18330$1S&e0X))))))))
   (g$flround$17317$1S&e0X
     g$flround$18557$1S&e0X
     (case-lambda
       ((g$fl$18331$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18331$1S&e0X))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$18331$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$18331$1S&e0X))))))))
   (g$flabs$17318$1S&e0X
     g$flabs$18558$1S&e0X
     (case-lambda
       ((g$fl$18332$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$fl$18332$1S&e0X))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$18332$1S&e0X)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$18332$1S&e0X))))))))
   (g$flpositive?$17319$1S&e0X
     g$flpositive?$18559$1S&e0X
     (case-lambda
       ((g$r$18333$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$r$18333$1S&e0X))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$18333$1S&e0X)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$18333$1S&e0X))))))))
   (g$flnegative?$17320$1S&e0X
     g$flnegative?$18560$1S&e0X
     (case-lambda
       ((g$r$18334$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$r$18334$1S&e0X))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$18334$1S&e0X)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$18334$1S&e0X))))))))
   (g$flzero?$17321$1S&e0X
     g$flzero?$18561$1S&e0X
     (case-lambda
       ((g$r$18335$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$r$18335$1S&e0X))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$18335$1S&e0X)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$18335$1S&e0X))))))))
   (g$fleven?$17322$1S&e0X
     g$fleven?$18562$1S&e0X
     (case-lambda
       ((g$n$18336$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$n$18336$1S&e0X))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$18336$1S&e0X)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$13684$1S&e0X
                           g$n$18336$1S&e0X))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$18336$1S&e0X)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$18357$1S&e0X g$x2$18358$1S&e0X)
                      ($fl-
                        g$x1$18357$1S&e0X
                        ($fl*
                          ((case-lambda
                             ((g$x1$18379$1S&e0X g$x2$18380$1S&e0X)
                              (if ($fl<? '0.0 g$x2$18380$1S&e0X)
                                ((case-lambda
                                   ((g$fl$18401$1S&e0X)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18401$1S&e0X)))
                                 ($fl/
                                   g$x1$18379$1S&e0X
                                   g$x2$18380$1S&e0X))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18422$1S&e0X)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18422$1S&e0X)))
                                   ($fl/
                                     g$x1$18379$1S&e0X
                                     ($fl- g$x2$18380$1S&e0X)))))))
                           g$x1$18357$1S&e0X
                           g$x2$18358$1S&e0X)
                          g$x2$18358$1S&e0X))))
                   g$n$18336$1S&e0X
                   '2.0))))))))))
   (g$flodd?$17323$1S&e0X
     g$flodd?$18563$1S&e0X
     (case-lambda
       ((g$n$18423$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$n$18423$1S&e0X))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$18423$1S&e0X)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$13684$1S&e0X
                           g$n$18423$1S&e0X))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$18423$1S&e0X)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$18444$1S&e0X g$x2$18445$1S&e0X)
                      ($fl-
                        g$x1$18444$1S&e0X
                        ($fl*
                          ((case-lambda
                             ((g$x1$18466$1S&e0X g$x2$18467$1S&e0X)
                              (if ($fl<? '0.0 g$x2$18467$1S&e0X)
                                ((case-lambda
                                   ((g$fl$18488$1S&e0X)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18488$1S&e0X)))
                                 ($fl/
                                   g$x1$18466$1S&e0X
                                   g$x2$18467$1S&e0X))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18509$1S&e0X)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18509$1S&e0X)))
                                   ($fl/
                                     g$x1$18466$1S&e0X
                                     ($fl- g$x2$18467$1S&e0X)))))))
                           g$x1$18444$1S&e0X
                           g$x2$18445$1S&e0X)
                          g$x2$18445$1S&e0X))))
                   g$n$18423$1S&e0X
                   '2.0))))))))))
   (g$flmax$17324$1S&e0X
     g$flmax$18564$1S&e0X
     (case-lambda
       ((g$a$18510$1S&e0X . g$rest$18511$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$a$18510$1S&e0X))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$18510$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            (case-lambda
              ((g$a$18512$1S&e0X g$b$18513$1S&e0X)
               (if (g$fl<?$17210$1S&e0X
                     g$a$18512$1S&e0X
                     g$b$18513$1S&e0X)
                 g$b$18513$1S&e0X
                 g$a$18512$1S&e0X)))
            g$a$18510$1S&e0X
            g$rest$18511$1S&e0X)))))
   (g$flmin$17325$1S&e0X
     g$flmin$18565$1S&e0X
     (case-lambda
       ((g$a$18514$1S&e0X . g$rest$18515$1S&e0X)
        (begin
          (if (not (g$flonum?$12669$1S&e0X g$a$18514$1S&e0X))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$18514$1S&e0X)
            (void))
          (g$fold-left$11836$1S&e0X
            (case-lambda
              ((g$a$18516$1S&e0X g$b$18517$1S&e0X)
               (if (g$fl>?$17212$1S&e0X
                     g$a$18516$1S&e0X
                     g$b$18517$1S&e0X)
                 g$b$18517$1S&e0X
                 g$a$18516$1S&e0X)))
            g$a$18514$1S&e0X
            g$rest$18515$1S&e0X))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$18567$1S&e0X
     g$using$18593$1S&e0X
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$18568$1S&e0X
     g$standard-error-port$18594$1S&e0X
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$18569$1S&e0X
     g$standard-input-port$18595$1S&e0X
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$18570$1S&e0X
     g$standard-output-port$18596$1S&e0X
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$18571$1S&e0X
     g$native-eol-style$18597$1S&e0X
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$18572$1S&e0X
     g$buffer-mode?$18598$1S&e0X
     (case-lambda
       ((g$obj$18581$1S&e0X)
        (if (g$symbol?$12665$1S&e0X g$obj$18581$1S&e0X)
          (if (g$memq$11825$1S&e0X
                g$obj$18581$1S&e0X
                '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$18573$1S&e0X
     g$put-datum$18599$1S&e0X
     (case-lambda
       ((g$p$18582$1S&e0X g$datum$18583$1S&e0X)
        (write g$datum$18583$1S&e0X g$p$18582$1S&e0X))))
   (g$get-datum$18574$1S&e0X g$get-datum$18600$1S&e0X read)
   (g$get-output-string$18575$1S&e0X
     g$get-output-string$18601$1S&e0X
     (case-lambda
       ((g$port$18584$1S&e0X)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$18584$1S&e0X))))
   (g$open-output-string$18576$1S&e0X
     g$open-output-string$18602$1S&e0X
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$18577$1S&e0X
     g$open-string-output-port$18603$1S&e0X
     (case-lambda
       (()
        ((case-lambda
           ((g$p$18585$1S&e0X)
            (values
              g$p$18585$1S&e0X
              (case-lambda
                (()
                 (g$get-output-string$18575$1S&e0X
                   g$p$18585$1S&e0X))))))
         (g$open-output-string$18576$1S&e0X)))))
   (g$port?$18578$1S&e0X
     g$port?$18604$1S&e0X
     (case-lambda
       ((g$obj$18586$1S&e0X)
        ((case-lambda
           ((g$t$18587$1S&e0X)
            (if g$t$18587$1S&e0X
              g$t$18587$1S&e0X
              (begin '#f (binary-port? g$obj$18586$1S&e0X)))))
         (textual-port? g$obj$18586$1S&e0X)))))
   (g$call-with-string-output-port$18579$1S&e0X
     g$call-with-string-output-port$18605$1S&e0X
     (case-lambda
       ((g$proc$18588$1S&e0X)
        ((case-lambda
           ((g$p$18589$1S&e0X)
            (begin
              (g$call-with-port$18580$1S&e0X
                g$p$18589$1S&e0X
                g$proc$18588$1S&e0X)
              (g$get-output-string$18575$1S&e0X g$p$18589$1S&e0X))))
         (g$open-output-string$18576$1S&e0X)))))
   (g$call-with-port$18580$1S&e0X
     g$call-with-port$18606$1S&e0X
     (case-lambda
       ((g$port$18590$1S&e0X g$proc$18591$1S&e0X)
        ((case-lambda
           ((g$r$18592$1S&e0X)
            (begin (close-port g$port$18590$1S&e0X) g$r$18592$1S&e0X)))
         (g$proc$18591$1S&e0X g$port$18590$1S&e0X))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$18607$1S&e0X
     g$peek-char$18662$1S&e0X
     (case-lambda
       (() (g$peek-char$18607$1S&e0X (current-input-port)))
       ((g$port$18634$1S&e0X) (lookahead-char g$port$18634$1S&e0X))))
   (g$read-char$18608$1S&e0X
     g$read-char$18663$1S&e0X
     (case-lambda
       (() (g$read-char$18608$1S&e0X (current-input-port)))
       ((g$port$18635$1S&e0X) (get-char g$port$18635$1S&e0X))))
   (g$write-char$18609$1S&e0X
     g$write-char$18664$1S&e0X
     (case-lambda
       ((g$chr$18636$1S&e0X)
        (g$write-char$18609$1S&e0X
          g$chr$18636$1S&e0X
          (current-output-port)))
       ((g$chr$18637$1S&e0X g$port$18638$1S&e0X)
        (put-char g$port$18638$1S&e0X g$chr$18637$1S&e0X))))
   (g$with-input-from-file$18629$1S&e0X
     g$with-input-from-file$18665$1S&e0X
     (case-lambda
       ((g$filename$18639$1S&e0X g$thunk$18640$1S&e0X)
        ((case-lambda
           ((g$current-input-port$18643$1S&e0X g$t$18644$1S&e0X)
            ((case-lambda
               ((g$swap$18645$1S&e0X)
                (dynamic-wind
                  g$swap$18645$1S&e0X
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$18640$1S&e0X)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$18645$1S&e0X)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$18646$1S&e0X)
                    (begin
                      (g$current-input-port$18643$1S&e0X
                        g$t$18644$1S&e0X)
                      (set! g$t$18644$1S&e0X g$t$18646$1S&e0X))))
                 (g$current-input-port$18643$1S&e0X)))))))
         current-input-port
         (open-input-file g$filename$18639$1S&e0X)))))
   (g$with-output-to-file$18630$1S&e0X
     g$with-output-to-file$18666$1S&e0X
     (case-lambda
       ((g$filename$18647$1S&e0X g$thunk$18648$1S&e0X)
        ((case-lambda
           ((g$current-output-port$18651$1S&e0X g$t$18652$1S&e0X)
            ((case-lambda
               ((g$swap$18653$1S&e0X)
                (dynamic-wind
                  g$swap$18653$1S&e0X
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$18648$1S&e0X)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$18653$1S&e0X)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$18654$1S&e0X)
                    (begin
                      (g$current-output-port$18651$1S&e0X
                        g$t$18652$1S&e0X)
                      (set! g$t$18652$1S&e0X g$t$18654$1S&e0X))))
                 (g$current-output-port$18651$1S&e0X)))))))
         current-output-port
         (open-output-file g$filename$18647$1S&e0X)))))
   (g$call-with-input-file$18631$1S&e0X
     g$call-with-input-file$18667$1S&e0X
     (case-lambda
       ((g$filename$18655$1S&e0X g$proc$18656$1S&e0X)
        ((case-lambda
           ((g$p$18657$1S&e0X)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$18656$1S&e0X g$p$18657$1S&e0X)))
              (case-lambda (() (close-input-port g$p$18657$1S&e0X))))))
         (open-input-file g$filename$18655$1S&e0X)))))
   (g$call-with-output-file$18632$1S&e0X
     g$call-with-output-file$18668$1S&e0X
     (case-lambda
       ((g$filename$18658$1S&e0X g$proc$18659$1S&e0X)
        ((case-lambda
           ((g$p$18660$1S&e0X)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$18659$1S&e0X g$p$18660$1S&e0X)))
              (case-lambda (() (close-output-port g$p$18660$1S&e0X))))))
         (open-output-file g$filename$18658$1S&e0X)))))
   (g$newline$18633$1S&e0X
     g$newline$18669$1S&e0X
     (case-lambda
       (() (g$newline$18633$1S&e0X (current-output-port)))
       ((g$port$18661$1S&e0X) (display '"
" g$port$18661$1S&e0X)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8823$18670$1S&e0X
     g$8823$18783$1S&e0X
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8825$18671$1S&e0X g$8825$18784$1S&e0X '#f)
   (g$8824$18672$1S&e0X
     g$8824$18785$1S&e0X
     (make-record-constructor-descriptor
       g$8823$18670$1S&e0X
       '#f
       g$8825$18671$1S&e0X))
   (g$enum?$18675$1S&e0X
     g$enum?$18786$1S&e0X
     (record-predicate g$8823$18670$1S&e0X))
   (g$make-enum$18676$1S&e0X
     g$make-enum$18787$1S&e0X
     (record-constructor g$8824$18672$1S&e0X))
   (g$enum-value$18677$1S&e0X
     g$enum-value$18788$1S&e0X
     (record-accessor g$8823$18670$1S&e0X '0))
   (g$enum-info$18678$1S&e0X
     g$enum-info$18789$1S&e0X
     (record-accessor g$8823$18670$1S&e0X '1))
   (g$8834$18679$1S&e0X
     g$8834$18790$1S&e0X
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8836$18680$1S&e0X g$8836$18791$1S&e0X '#f)
   (g$8835$18681$1S&e0X
     g$8835$18792$1S&e0X
     (make-record-constructor-descriptor
       g$8834$18679$1S&e0X
       '#f
       g$8836$18680$1S&e0X))
   (g$enum-universe?$18684$1S&e0X
     g$enum-universe?$18793$1S&e0X
     (record-predicate g$8834$18679$1S&e0X))
   (g$make-enum-universe$18685$1S&e0X
     g$make-enum-universe$18794$1S&e0X
     (record-constructor g$8835$18681$1S&e0X))
   (g$enum-universe-id$18686$1S&e0X
     g$enum-universe-id$18795$1S&e0X
     (record-accessor g$8834$18679$1S&e0X '0))
   (g$enum-universe-symbols$18687$1S&e0X
     g$enum-universe-symbols$18796$1S&e0X
     (record-accessor g$8834$18679$1S&e0X '1))
   (g$enum-universe-mapping$18688$1S&e0X
     g$enum-universe-mapping$18797$1S&e0X
     (record-accessor g$8834$18679$1S&e0X '2))
   (g$enum-universe-value$18689$1S&e0X
     g$enum-universe-value$18798$1S&e0X
     (record-accessor g$8834$18679$1S&e0X '3))
   (g$enum-type=?$18690$1S&e0X
     g$enum-type=?$18799$1S&e0X
     (case-lambda
       ((g$enumset1$18712$1S&e0X g$enumset2$18713$1S&e0X)
        (eq? (g$enum-universe-id$18686$1S&e0X
               (g$enum-info$18678$1S&e0X g$enumset1$18712$1S&e0X))
             (g$enum-universe-id$18686$1S&e0X
               (g$enum-info$18678$1S&e0X g$enumset2$18713$1S&e0X))))))
   (g$get-symbols$18691$1S&e0X
     g$get-symbols$18800$1S&e0X
     (case-lambda
       ((g$enumset$18714$1S&e0X)
        (g$enum-universe-symbols$18687$1S&e0X
          (g$enum-info$18678$1S&e0X g$enumset$18714$1S&e0X)))))
   (g$get-value$18692$1S&e0X
     g$get-value$18801$1S&e0X
     (case-lambda
       ((g$enumset$18715$1S&e0X g$s$18716$1S&e0X)
        (g$hashtable-ref$12784$1S&e0X
          (g$enum-universe-mapping$18688$1S&e0X
            (g$enum-info$18678$1S&e0X g$enumset$18715$1S&e0X))
          g$s$18716$1S&e0X
          '#f))))
   (g$assert-enum$18693$1S&e0X
     g$assert-enum$18802$1S&e0X
     (case-lambda
       ((g$who$18717$1S&e0X g$enumset$18718$1S&e0X)
        (if (not (g$enum?$18675$1S&e0X g$enumset$18718$1S&e0X))
          (assertion-violation
            g$who$18717$1S&e0X
            '"not an enumeration"
            g$enumset$18718$1S&e0X)
          (void)))))
   (g$make-info$18694$1S&e0X
     g$make-info$18803$1S&e0X
     (case-lambda
       ((g$symbols$18719$1S&e0X)
        ((case-lambda
           ((g$ht$18720$1S&e0X)
            ((letrec ((g$f$18721$1S&e0X
                        (case-lambda
                          ((g$s$18722$1S&e0X
                             g$a$18723$1S&e0X
                             g$mask$18724$1S&e0X)
                           (if (null? g$s$18722$1S&e0X)
                             (values
                               (reverse! g$a$18723$1S&e0X)
                               g$ht$18720$1S&e0X
                               (- g$mask$18724$1S&e0X '1))
                             ((case-lambda
                                ((g$n$18725$1S&e0X)
                                 (if (g$symbol?$12665$1S&e0X
                                       g$n$18725$1S&e0X)
                                   (if (g$hashtable-contains?$12787$1S&e0X
                                         g$ht$18720$1S&e0X
                                         g$n$18725$1S&e0X)
                                     (g$f$18721$1S&e0X
                                       (cdr g$s$18722$1S&e0X)
                                       g$a$18723$1S&e0X
                                       g$mask$18724$1S&e0X)
                                     (begin
                                       (g$hashtable-set!$12785$1S&e0X
                                         g$ht$18720$1S&e0X
                                         g$n$18725$1S&e0X
                                         g$mask$18724$1S&e0X)
                                       (g$f$18721$1S&e0X
                                         (cdr g$s$18722$1S&e0X)
                                         (cons
                                           g$n$18725$1S&e0X
                                           g$a$18723$1S&e0X)
                                         (g$bitwise-arithmetic-shift-left$14730$1S&e0X
                                           g$mask$18724$1S&e0X
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$18725$1S&e0X))))
                              (car g$s$18722$1S&e0X)))))))
               g$f$18721$1S&e0X)
             g$symbols$18719$1S&e0X
             '()
             '1)))
         (g$make-eq-hashtable$12781$1S&e0X)))))
   (g$make-name$18695$1S&e0X
     g$make-name$18804$1S&e0X
     (case-lambda
       ((g$symbols$18726$1S&e0X)
        (string->symbol
          (g$format$18843$1S&e0X '"~a" g$symbols$18726$1S&e0X)))))
   (g$make-enumeration$18696$1S&e0X
     g$make-enumeration$18805$1S&e0X
     (case-lambda
       ((g$symbols$18727$1S&e0X)
        (call-with-values
          (case-lambda
            (() (g$make-info$18694$1S&e0X g$symbols$18727$1S&e0X)))
          (case-lambda
            ((g$s$18731$1S&e0X
               g$mapping$18732$1S&e0X
               g$mask$18733$1S&e0X)
             ((case-lambda
                ((g$mask$18734$1S&e0X
                   g$mapping$18735$1S&e0X
                   g$s$18736$1S&e0X)
                 (g$make-enum$18676$1S&e0X
                   g$mask$18734$1S&e0X
                   (g$make-enum-universe$18685$1S&e0X
                     (g$make-name$18695$1S&e0X g$s$18736$1S&e0X)
                     g$s$18736$1S&e0X
                     g$mapping$18735$1S&e0X
                     g$mask$18734$1S&e0X))))
              g$mask$18733$1S&e0X
              g$mapping$18732$1S&e0X
              g$s$18731$1S&e0X)))))))
   (g$enum-set-universe$18697$1S&e0X
     g$enum-set-universe$18806$1S&e0X
     (case-lambda
       ((g$enumset$18737$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-universe
            g$enumset$18737$1S&e0X)
          ((case-lambda
             ((g$ei$18738$1S&e0X)
              (g$make-enum$18676$1S&e0X
                (g$enum-universe-value$18689$1S&e0X g$ei$18738$1S&e0X)
                g$ei$18738$1S&e0X)))
           (g$enum-info$18678$1S&e0X g$enumset$18737$1S&e0X))))))
   (g$enum-set-indexer$18698$1S&e0X
     g$enum-set-indexer$18807$1S&e0X
     (case-lambda
       ((g$enumset$18739$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-indexer
            g$enumset$18739$1S&e0X)
          (case-lambda
            ((g$symbol$18740$1S&e0X)
             (begin
               (if (not (g$symbol?$12665$1S&e0X g$symbol$18740$1S&e0X))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$18740$1S&e0X)
                 (void))
               ((case-lambda
                  ((g$v$18741$1S&e0X)
                   (if g$v$18741$1S&e0X
                     (- (g$bitwise-length$14723$1S&e0X g$v$18741$1S&e0X)
                        '1)
                     '#f)))
                (g$get-value$18692$1S&e0X
                  g$enumset$18739$1S&e0X
                  g$symbol$18740$1S&e0X)))))))))
   (g$enum-set-constructor$18699$1S&e0X
     g$enum-set-constructor$18808$1S&e0X
     (case-lambda
       ((g$enumset$18742$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-constructor
            g$enumset$18742$1S&e0X)
          (case-lambda
            ((g$symbols$18743$1S&e0X)
             ((letrec ((g$f$18744$1S&e0X
                         (case-lambda
                           ((g$v$18745$1S&e0X g$s$18746$1S&e0X)
                            (if (null? g$s$18746$1S&e0X)
                              (g$make-enum$18676$1S&e0X
                                g$v$18745$1S&e0X
                                (g$enum-info$18678$1S&e0X
                                  g$enumset$18742$1S&e0X))
                              ((case-lambda
                                 ((g$n$18747$1S&e0X)
                                  (if (g$symbol?$12665$1S&e0X
                                        g$n$18747$1S&e0X)
                                    ((case-lambda
                                       ((g$v*$18748$1S&e0X)
                                        (if g$v*$18748$1S&e0X
                                          (g$f$18744$1S&e0X
                                            (g$bitwise-ior$14720$1S&e0X
                                              g$v$18745$1S&e0X
                                              g$v*$18748$1S&e0X)
                                            (cdr g$s$18746$1S&e0X))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$18747$1S&e0X))))
                                     (g$get-value$18692$1S&e0X
                                       g$enumset$18742$1S&e0X
                                       g$n$18747$1S&e0X))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$18747$1S&e0X))))
                               (car g$s$18746$1S&e0X)))))))
                g$f$18744$1S&e0X)
              '0
              g$symbols$18743$1S&e0X)))))))
   (g$enum-set->list$18700$1S&e0X
     g$enum-set->list$18809$1S&e0X
     (case-lambda
       ((g$enumset$18749$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set->list
            g$enumset$18749$1S&e0X)
          ((case-lambda
             ((g$value$18750$1S&e0X)
              ((letrec ((g$f$18751$1S&e0X
                          (case-lambda
                            ((g$s$18752$1S&e0X g$l$18753$1S&e0X)
                             (if (null? g$s$18752$1S&e0X)
                               (reverse! g$l$18753$1S&e0X)
                               (if (g$zero?$13685$1S&e0X
                                     (g$bitwise-and$14719$1S&e0X
                                       (g$get-value$18692$1S&e0X
                                         g$enumset$18749$1S&e0X
                                         (car g$s$18752$1S&e0X))
                                       g$value$18750$1S&e0X))
                                 (g$f$18751$1S&e0X
                                   (cdr g$s$18752$1S&e0X)
                                   g$l$18753$1S&e0X)
                                 (g$f$18751$1S&e0X
                                   (cdr g$s$18752$1S&e0X)
                                   (cons
                                     (car g$s$18752$1S&e0X)
                                     g$l$18753$1S&e0X))))))))
                 g$f$18751$1S&e0X)
               (g$get-symbols$18691$1S&e0X g$enumset$18749$1S&e0X)
               '())))
           (g$enum-value$18677$1S&e0X g$enumset$18749$1S&e0X))))))
   (g$enum-set-member?$18701$1S&e0X
     g$enum-set-member?$18810$1S&e0X
     (case-lambda
       ((g$symbol$18754$1S&e0X g$enumset$18755$1S&e0X)
        (begin
          (if (not (g$symbol?$12665$1S&e0X g$symbol$18754$1S&e0X))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$18754$1S&e0X)
            (void))
          (g$assert-enum$18693$1S&e0X
            'enum-set-member?
            g$enumset$18755$1S&e0X)
          ((case-lambda
             ((g$v$18756$1S&e0X)
              (if g$v$18756$1S&e0X
                (not (g$zero?$13685$1S&e0X
                       (g$bitwise-and$14719$1S&e0X
                         g$v$18756$1S&e0X
                         (g$enum-value$18677$1S&e0X
                           g$enumset$18755$1S&e0X))))
                '#f)))
           (g$get-value$18692$1S&e0X
             g$enumset$18755$1S&e0X
             g$symbol$18754$1S&e0X))))))
   (g$enum-set-subset?$18702$1S&e0X
     g$enum-set-subset?$18811$1S&e0X
     (case-lambda
       ((g$enumset1$18757$1S&e0X g$enumset2$18758$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-subset?
            g$enumset1$18757$1S&e0X)
          (g$assert-enum$18693$1S&e0X
            'enum-set-subset?
            g$enumset2$18758$1S&e0X)
          ((case-lambda
             ((g$v1$18759$1S&e0X g$v2$18760$1S&e0X)
              (if (g$enum-type=?$18690$1S&e0X
                    g$enumset1$18757$1S&e0X
                    g$enumset2$18758$1S&e0X)
                (g$=$13694$1S&e0X
                  (g$bitwise-and$14719$1S&e0X
                    g$v1$18759$1S&e0X
                    g$v2$18760$1S&e0X)
                  g$v1$18759$1S&e0X)
                ((letrec ((g$f$18761$1S&e0X
                            (case-lambda
                              ((g$s$18762$1S&e0X)
                               (if (null? g$s$18762$1S&e0X)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$18763$1S&e0X
                                       g$v2*$18764$1S&e0X)
                                     (if g$v2*$18764$1S&e0X
                                       ((case-lambda
                                          ((g$has1$18765$1S&e0X
                                             g$has2$18766$1S&e0X)
                                           (if (if g$has1$18765$1S&e0X
                                                 (begin
                                                   '#f
                                                   (not g$has2$18766$1S&e0X))
                                                 '#f)
                                             '#f
                                             (g$f$18761$1S&e0X
                                               (cdr g$s$18762$1S&e0X)))))
                                        (not (g$zero?$13685$1S&e0X
                                               (g$bitwise-and$14719$1S&e0X
                                                 g$v1$18759$1S&e0X
                                                 g$v1*$18763$1S&e0X)))
                                        (not (g$zero?$13685$1S&e0X
                                               (g$bitwise-and$14719$1S&e0X
                                                 g$v2$18760$1S&e0X
                                                 g$v2*$18764$1S&e0X))))
                                       '#f)))
                                  (g$get-value$18692$1S&e0X
                                    g$enumset1$18757$1S&e0X
                                    (car g$s$18762$1S&e0X))
                                  (g$get-value$18692$1S&e0X
                                    g$enumset2$18758$1S&e0X
                                    (car g$s$18762$1S&e0X))))))))
                   g$f$18761$1S&e0X)
                 (g$get-symbols$18691$1S&e0X
                   g$enumset1$18757$1S&e0X)))))
           (g$enum-value$18677$1S&e0X g$enumset1$18757$1S&e0X)
           (g$enum-value$18677$1S&e0X g$enumset2$18758$1S&e0X))))))
   (g$enum-set=?$18703$1S&e0X
     g$enum-set=?$18812$1S&e0X
     (case-lambda
       ((g$enumset1$18767$1S&e0X g$enumset2$18768$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set=?
            g$enumset1$18767$1S&e0X)
          (g$assert-enum$18693$1S&e0X
            'enum-set=?
            g$enumset2$18768$1S&e0X)
          (if (g$enum-set-subset?$18702$1S&e0X
                g$enumset1$18767$1S&e0X
                g$enumset2$18768$1S&e0X)
            (begin
              '#f
              (g$enum-set-subset?$18702$1S&e0X
                g$enumset2$18768$1S&e0X
                g$enumset1$18767$1S&e0X))
            '#f)))))
   (g$enum-set-union$18704$1S&e0X
     g$enum-set-union$18813$1S&e0X
     (case-lambda
       ((g$enumset1$18769$1S&e0X g$enumset2$18770$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-union
            g$enumset1$18769$1S&e0X)
          (g$assert-enum$18693$1S&e0X
            'enum-set-union
            g$enumset2$18770$1S&e0X)
          (if (g$enum-type=?$18690$1S&e0X
                g$enumset1$18769$1S&e0X
                g$enumset2$18770$1S&e0X)
            (g$make-enum$18676$1S&e0X
              (g$bitwise-ior$14720$1S&e0X
                (g$enum-value$18677$1S&e0X g$enumset1$18769$1S&e0X)
                (g$enum-value$18677$1S&e0X g$enumset2$18770$1S&e0X))
              (g$enum-info$18678$1S&e0X g$enumset1$18769$1S&e0X))
            '#f)))))
   (g$enum-set-intersection$18705$1S&e0X
     g$enum-set-intersection$18814$1S&e0X
     (case-lambda
       ((g$enumset1$18771$1S&e0X g$enumset2$18772$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-intersection
            g$enumset1$18771$1S&e0X)
          (g$assert-enum$18693$1S&e0X
            'enum-set-intersection
            g$enumset2$18772$1S&e0X)
          (if (g$enum-type=?$18690$1S&e0X
                g$enumset1$18771$1S&e0X
                g$enumset2$18772$1S&e0X)
            (g$make-enum$18676$1S&e0X
              (g$bitwise-and$14719$1S&e0X
                (g$enum-value$18677$1S&e0X g$enumset1$18771$1S&e0X)
                (g$enum-value$18677$1S&e0X g$enumset2$18772$1S&e0X))
              (g$enum-info$18678$1S&e0X g$enumset1$18771$1S&e0X))
            '#f)))))
   (g$enum-set-difference$18706$1S&e0X
     g$enum-set-difference$18815$1S&e0X
     (case-lambda
       ((g$enumset1$18773$1S&e0X g$enumset2$18774$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-difference
            g$enumset1$18773$1S&e0X)
          (g$assert-enum$18693$1S&e0X
            'enum-set-difference
            g$enumset2$18774$1S&e0X)
          (if (g$enum-type=?$18690$1S&e0X
                g$enumset1$18773$1S&e0X
                g$enumset2$18774$1S&e0X)
            (g$make-enum$18676$1S&e0X
              (g$bitwise-and$14719$1S&e0X
                (g$enum-value$18677$1S&e0X g$enumset1$18773$1S&e0X)
                (g$bitwise-not$14718$1S&e0X
                  (g$enum-value$18677$1S&e0X g$enumset2$18774$1S&e0X)))
              (g$enum-info$18678$1S&e0X g$enumset1$18773$1S&e0X))
            '#f)))))
   (g$enum-set-complement$18707$1S&e0X
     g$enum-set-complement$18816$1S&e0X
     (case-lambda
       ((g$enumset$18775$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-complement
            g$enumset$18775$1S&e0X)
          (g$make-enum$18676$1S&e0X
            (g$bitwise-not$14718$1S&e0X
              (g$enum-value$18677$1S&e0X g$enumset$18775$1S&e0X))
            (g$enum-info$18678$1S&e0X g$enumset$18775$1S&e0X))))))
   (g$enum-set-projection$18708$1S&e0X
     g$enum-set-projection$18817$1S&e0X
     (case-lambda
       ((g$enumset1$18776$1S&e0X g$enumset2$18777$1S&e0X)
        (begin
          (g$assert-enum$18693$1S&e0X
            'enum-set-projection
            g$enumset1$18776$1S&e0X)
          (g$assert-enum$18693$1S&e0X
            'enum-set-projection
            g$enumset2$18777$1S&e0X)
          ((case-lambda
             ((g$v1$18778$1S&e0X)
              ((letrec ((g$f$18779$1S&e0X
                          (case-lambda
                            ((g$s$18780$1S&e0X g$v$18781$1S&e0X)
                             (if (null? g$s$18780$1S&e0X)
                               (g$make-enum$18676$1S&e0X
                                 g$v$18781$1S&e0X
                                 (g$enum-info$18678$1S&e0X
                                   g$enumset2$18777$1S&e0X))
                               (if (g$zero?$13685$1S&e0X
                                     (g$bitwise-and$14719$1S&e0X
                                       g$v1$18778$1S&e0X
                                       (g$get-value$18692$1S&e0X
                                         g$enumset1$18776$1S&e0X
                                         (car g$s$18780$1S&e0X))))
                                 (g$f$18779$1S&e0X
                                   (cdr g$s$18780$1S&e0X)
                                   g$v$18781$1S&e0X)
                                 ((case-lambda
                                    ((g$v2$18782$1S&e0X)
                                     (if g$v2$18782$1S&e0X
                                       (g$f$18779$1S&e0X
                                         (cdr g$s$18780$1S&e0X)
                                         (g$bitwise-ior$14720$1S&e0X
                                           g$v$18781$1S&e0X
                                           g$v2$18782$1S&e0X))
                                       (g$f$18779$1S&e0X
                                         (cdr g$s$18780$1S&e0X)
                                         g$v$18781$1S&e0X))))
                                  (g$get-value$18692$1S&e0X
                                    g$enumset2$18777$1S&e0X
                                    (car g$s$18780$1S&e0X)))))))))
                 g$f$18779$1S&e0X)
               (g$get-symbols$18691$1S&e0X g$enumset1$18776$1S&e0X)
               '0)))
           (g$enum-value$18677$1S&e0X g$enumset1$18776$1S&e0X)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$18709$1S&e0X g$p$18710$1S&e0X g$wr$18711$1S&e0X)
       (g$fprintf$18842$1S&e0X
         g$p$18710$1S&e0X
         '"#[enum-set ~a]"
         (g$enum-set->list$18700$1S&e0X g$x$18709$1S&e0X))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$18818$1S&e0X
     g$dofmt$18840$1S&e0X
     (case-lambda
       ((g$p$18822$1S&e0X g$cntl$18823$1S&e0X g$args$18824$1S&e0X)
        ((case-lambda
           ((g$nmax$18825$1S&e0X)
            ((letrec ((g$loop$18826$1S&e0X
                        (case-lambda
                          ((g$n$18827$1S&e0X g$a$18828$1S&e0X)
                           (if (g$fx<=?$16982$1S&e0X
                                 g$n$18827$1S&e0X
                                 g$nmax$18825$1S&e0X)
                             ((case-lambda
                                ((g$c$18829$1S&e0X)
                                 (if (if (g$char=?$12724$1S&e0X
                                           g$c$18829$1S&e0X
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$16981$1S&e0X
                                           g$n$18827$1S&e0X
                                           g$nmax$18825$1S&e0X))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$18830$1S&e0X)
                                       (if (eqv? g$t$18830$1S&e0X '#\a)
                                         (begin
                                           (display
                                             (car g$a$18828$1S&e0X)
                                             g$p$18822$1S&e0X)
                                           (g$loop$18826$1S&e0X
                                             (g$fx+$16967$1S&e0X
                                               g$n$18827$1S&e0X
                                               '2)
                                             (cdr g$a$18828$1S&e0X)))
                                         (if (eqv?
                                               g$t$18830$1S&e0X
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$18828$1S&e0X)
                                               g$p$18822$1S&e0X)
                                             (g$loop$18826$1S&e0X
                                               (g$fx+$16967$1S&e0X
                                                 g$n$18827$1S&e0X
                                                 '2)
                                               (cdr g$a$18828$1S&e0X)))
                                           (if (eqv?
                                                 g$t$18830$1S&e0X
                                                 '#\b)
                                             (begin
                                               (write
                                                 (g$number->string$13693$1S&e0X
                                                   (car g$a$18828$1S&e0X)
                                                   '2)
                                                 g$p$18822$1S&e0X)
                                               (g$loop$18826$1S&e0X
                                                 (g$fx+$16967$1S&e0X
                                                   g$n$18827$1S&e0X
                                                   '2)
                                                 (cdr g$a$18828$1S&e0X)))
                                             (if (eqv?
                                                   g$t$18830$1S&e0X
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (g$number->string$13693$1S&e0X
                                                     (car g$a$18828$1S&e0X)
                                                     '8)
                                                   g$p$18822$1S&e0X)
                                                 (g$loop$18826$1S&e0X
                                                   (g$fx+$16967$1S&e0X
                                                     g$n$18827$1S&e0X
                                                     '2)
                                                   (cdr g$a$18828$1S&e0X)))
                                               (if (eqv?
                                                     g$t$18830$1S&e0X
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (g$number->string$13693$1S&e0X
                                                       (car g$a$18828$1S&e0X)
                                                       '16)
                                                     g$p$18822$1S&e0X)
                                                   (g$loop$18826$1S&e0X
                                                     (g$fx+$16967$1S&e0X
                                                       g$n$18827$1S&e0X
                                                       '2)
                                                     (cdr g$a$18828$1S&e0X)))
                                                 (if (eqv?
                                                       g$t$18830$1S&e0X
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (g$number->string$13693$1S&e0X
                                                         (car g$a$18828$1S&e0X)
                                                         '10)
                                                       g$p$18822$1S&e0X)
                                                     (g$loop$18826$1S&e0X
                                                       (g$fx+$16967$1S&e0X
                                                         g$n$18827$1S&e0X
                                                         '2)
                                                       (cdr g$a$18828$1S&e0X)))
                                                   (if (eqv?
                                                         g$t$18830$1S&e0X
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$18664$1S&e0X
                                                         '#\~
                                                         g$p$18822$1S&e0X)
                                                       (g$loop$18826$1S&e0X
                                                         (g$fx+$16967$1S&e0X
                                                           g$n$18827$1S&e0X
                                                           '2)
                                                         g$a$18828$1S&e0X))
                                                     (begin
                                                       '#f
                                                       (g$write-char$18664$1S&e0X
                                                         g$c$18829$1S&e0X
                                                         g$p$18822$1S&e0X)
                                                       (g$loop$18826$1S&e0X
                                                         (g$fx+$16967$1S&e0X
                                                           g$n$18827$1S&e0X
                                                           '1)
                                                         g$a$18828$1S&e0X)))))))))))
                                    (string-ref
                                      g$cntl$18823$1S&e0X
                                      (g$fx+$16967$1S&e0X
                                        g$n$18827$1S&e0X
                                        '1)))
                                   (begin
                                     (g$write-char$18664$1S&e0X
                                       g$c$18829$1S&e0X
                                       g$p$18822$1S&e0X)
                                     (g$loop$18826$1S&e0X
                                       (g$fx+$16967$1S&e0X
                                         g$n$18827$1S&e0X
                                         '1)
                                       g$a$18828$1S&e0X)))))
                              (string-ref
                                g$cntl$18823$1S&e0X
                                g$n$18827$1S&e0X))
                             (void))))))
               g$loop$18826$1S&e0X)
             '0
             g$args$18824$1S&e0X)))
         (g$fx-$16969$1S&e0X (string-length g$cntl$18823$1S&e0X) '1)))))
   (g$printf$18819$1S&e0X
     g$printf$18841$1S&e0X
     (case-lambda
       ((g$control$18831$1S&e0X . g$args$18832$1S&e0X)
        (g$dofmt$18818$1S&e0X
          (current-output-port)
          g$control$18831$1S&e0X
          g$args$18832$1S&e0X))))
   (g$fprintf$18820$1S&e0X
     g$fprintf$18842$1S&e0X
     (case-lambda
       ((g$p$18833$1S&e0X g$control$18834$1S&e0X . g$args$18835$1S&e0X)
        (g$dofmt$18818$1S&e0X
          g$p$18833$1S&e0X
          g$control$18834$1S&e0X
          g$args$18835$1S&e0X))))
   (g$format$18821$1S&e0X
     g$format$18843$1S&e0X
     (case-lambda
       ((g$control$18836$1S&e0X . g$args$18837$1S&e0X)
        (call-with-values
          g$open-string-output-port$18603$1S&e0X
          (case-lambda
            ((g$p$18838$1S&e0X g$c$18839$1S&e0X)
             (begin
               (g$dofmt$18818$1S&e0X
                 g$p$18838$1S&e0X
                 g$control$18836$1S&e0X
                 g$args$18837$1S&e0X)
               (g$c$18839$1S&e0X)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$18844$1S&e0X
     g$make-traced-macro$18847$1S&e0X
     (case-lambda
       ((g$name$18845$1S&e0X g$x$18846$1S&e0X)
        (if (g$procedure?$12667$1S&e0X g$x$18846$1S&e0X)
          (make-traced-procedure
            g$name$18845$1S&e0X
            g$x$18846$1S&e0X
            g$syntax->datum$24400$1S&e0X)
          (if (g$variable-transformer?$24221$1S&e0X g$x$18846$1S&e0X)
            (g$make-variable-transformer$24219$1S&e0X
              (make-traced-procedure
                g$name$18845$1S&e0X
                (g$variable-transformer-procedure$24222$1S&e0X
                  g$x$18846$1S&e0X)
                g$syntax->datum$24400$1S&e0X))
            (begin '#f g$x$18846$1S&e0X)))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$18848$1S&e0X
     g$library-version-mismatch-warning$19049$1S&e0X
     (case-lambda
       ((g$name$19021$1S&e0X
          g$depname$19022$1S&e0X
          g$filename$19023$1S&e0X)
        (g$fprintf$18842$1S&e0X
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$19021$1S&e0X
          g$depname$19022$1S&e0X
          g$filename$19023$1S&e0X))))
   (g$file-locator-resolution-error$18849$1S&e0X
     g$file-locator-resolution-error$19050$1S&e0X
     (case-lambda
       ((g$libname$19024$1S&e0X g$failed-list$19025$1S&e0X)
        (letrec* ((g$9012$19026$1S&e0X
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$14161$1S&e0X
                      'g$9015$1S&e0X
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$9014$19027$1S&e0X '#f)
                  (g$9013$19028$1S&e0X
                    (make-record-constructor-descriptor
                      g$9012$19026$1S&e0X
                      g$&condition-rcd$14162$1S&e0X
                      g$9014$19027$1S&e0X))
                  (g$9011$19031$1S&e0X
                    (record-predicate g$9012$19026$1S&e0X))
                  (g$make-library-resolution-condition$19032$1S&e0X
                    (record-constructor g$9013$19028$1S&e0X))
                  (g$9009$19033$1S&e0X
                    (record-accessor g$9012$19026$1S&e0X '0))
                  (g$9010$19034$1S&e0X
                    (record-accessor g$9012$19026$1S&e0X '1))
                  (g$library-resolution-condition?$19035$1S&e0X
                    (condition-predicate g$9012$19026$1S&e0X))
                  (g$condition-library$19036$1S&e0X
                    (condition-accessor
                      g$9012$19026$1S&e0X
                      g$9009$19033$1S&e0X))
                  (g$condition-files$19037$1S&e0X
                    (condition-accessor
                      g$9012$19026$1S&e0X
                      g$9010$19034$1S&e0X)))
          (raise
            (condition
              (g$make-error$14193$1S&e0X)
              (g$make-who-condition$14227$1S&e0X 'expander)
              (g$make-message-condition$14167$1S&e0X
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$19032$1S&e0X
                g$libname$19024$1S&e0X
                g$failed-list$19025$1S&e0X)))))))
   (g$read-library-source-file$18850$1S&e0X
     g$read-library-source-file$19051$1S&e0X
     (case-lambda
       ((g$file-name$19038$1S&e0X)
        (g$with-input-from-file$18665$1S&e0X
          g$file-name$19038$1S&e0X
          read-annotated))))
   (g$make-parameter$18851$1S&e0X
     g$make-parameter$19052$1S&e0X
     (case-lambda
       ((g$x$19039$1S&e0X)
        (g$make-parameter$18851$1S&e0X
          g$x$19039$1S&e0X
          (case-lambda ((g$x$19040$1S&e0X) g$x$19040$1S&e0X))))
       ((g$x$19041$1S&e0X g$fender$19042$1S&e0X)
        (begin
          (if (not (g$procedure?$12667$1S&e0X g$fender$19042$1S&e0X))
            (g$assertion-error$24393$1S&e0X
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$19043$1S&e0X)
              (case-lambda
                (() g$x$19043$1S&e0X)
                ((g$v$19044$1S&e0X)
                 (set! g$x$19043$1S&e0X
                   (g$fender$19042$1S&e0X g$v$19044$1S&e0X))))))
           (g$fender$19042$1S&e0X g$x$19041$1S&e0X))))))
   (g$file-options-constructor$19017$1S&e0X
     g$file-options-constructor$19053$1S&e0X
     (g$make-parameter$18851$1S&e0X '#f))
   (g$file-options-spec$19018$1S&e0X
     g$file-options-spec$19054$1S&e0X
     (case-lambda
       ((g$x$19045$1S&e0X)
        ((g$file-options-constructor$19017$1S&e0X) g$x$19045$1S&e0X))))
   (g$set-label-binding!$19019$1S&e0X
     g$set-label-binding!$19055$1S&e0X
     (case-lambda
       ((g$label$19046$1S&e0X g$binding$19047$1S&e0X)
        (set-symbol-value!
          g$label$19046$1S&e0X
          g$binding$19047$1S&e0X))))
   (g$label-binding$19020$1S&e0X
     g$label-binding$19056$1S&e0X
     (case-lambda
       ((g$label$19048$1S&e0X)
        (if (symbol-bound? g$label$19048$1S&e0X)
          (begin '#f (symbol-value g$label$19048$1S&e0X))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$19057$1S&e0X
     g$genwrite:newline-str$19250$1S&e0X
     (make-string '1 '#\newline))
   (g$symbol->string$19058$1S&e0X
     g$symbol->string$19251$1S&e0X
     (case-lambda
       ((g$s$19070$1S&e0X)
        (symbol->string
          (if (g$pretty-gensyms$19067$1S&e0X)
            (ungensym g$s$19070$1S&e0X)
            g$s$19070$1S&e0X)))))
   (g$read-macro-body$19059$1S&e0X
     g$read-macro-body$19252$1S&e0X
     (case-lambda
       ((g$l$19071$1S&e0X) (g$cadr$12684$1S&e0X g$l$19071$1S&e0X))))
   (g$read-macro-prefix$19060$1S&e0X
     g$read-macro-prefix$19253$1S&e0X
     (case-lambda
       ((g$l$19072$1S&e0X)
        ((case-lambda
           ((g$head$19073$1S&e0X g$tail$19074$1S&e0X)
            ((case-lambda
               ((g$t$19075$1S&e0X)
                (if (eqv? g$t$19075$1S&e0X 'syntax)
                  '"#'"
                  (if (eqv? g$t$19075$1S&e0X 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$19075$1S&e0X 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$19075$1S&e0X 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$19075$1S&e0X 'quote)
                          '"'"
                          (if (eqv? g$t$19075$1S&e0X 'quasiquote)
                            '"`"
                            (if (eqv? g$t$19075$1S&e0X 'unquote)
                              '","
                              (if (eqv?
                                    g$t$19075$1S&e0X
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$19073$1S&e0X)))
         (car g$l$19072$1S&e0X)
         (cdr g$l$19072$1S&e0X)))))
   (g$length1?$19061$1S&e0X
     g$length1?$19254$1S&e0X
     (case-lambda
       ((g$l$19076$1S&e0X)
        (if (pair? g$l$19076$1S&e0X)
          (begin '#f (null? (cdr g$l$19076$1S&e0X)))
          '#f))))
   (g$read-macro?$19062$1S&e0X
     g$read-macro?$19255$1S&e0X
     (case-lambda
       ((g$l$19077$1S&e0X)
        ((case-lambda
           ((g$head$19078$1S&e0X g$tail$19079$1S&e0X)
            ((case-lambda
               ((g$t$19080$1S&e0X)
                (if (g$memv$11826$1S&e0X
                      g$t$19080$1S&e0X
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$19061$1S&e0X g$tail$19079$1S&e0X)
                  (begin '#f '#f))))
             g$head$19078$1S&e0X)))
         (car g$l$19077$1S&e0X)
         (cdr g$l$19077$1S&e0X)))))
   (g$generic-write$19063$1S&e0X
     g$generic-write$19256$1S&e0X
     (case-lambda
       ((g$obj$19081$1S&e0X
          g$display?$19082$1S&e0X
          g$width$19083$1S&e0X
          g$output$19084$1S&e0X)
        (letrec* ((g$out$19085$1S&e0X
                    (case-lambda
                      ((g$str$19234$1S&e0X g$col$19235$1S&e0X)
                       (if g$col$19235$1S&e0X
                         (if (g$output$19084$1S&e0X g$str$19234$1S&e0X)
                           (begin
                             '#f
                             (g$fx+$16967$1S&e0X
                               g$col$19235$1S&e0X
                               (string-length g$str$19234$1S&e0X)))
                           '#f)
                         '#f))))
                  (g$wr$19086$1S&e0X
                    (case-lambda
                      ((g$obj$19217$1S&e0X g$col$19218$1S&e0X)
                       (letrec* ((g$wr-expr$19219$1S&e0X
                                   (case-lambda
                                     ((g$expr$19232$1S&e0X
                                        g$col$19233$1S&e0X)
                                      (if (g$read-macro?$19062$1S&e0X
                                            g$expr$19232$1S&e0X)
                                        (g$wr$19086$1S&e0X
                                          (g$read-macro-body$19059$1S&e0X
                                            g$expr$19232$1S&e0X)
                                          (g$out$19085$1S&e0X
                                            (g$read-macro-prefix$19060$1S&e0X
                                              g$expr$19232$1S&e0X)
                                            g$col$19233$1S&e0X))
                                        (g$wr-lst$19220$1S&e0X
                                          g$expr$19232$1S&e0X
                                          g$col$19233$1S&e0X)))))
                                 (g$wr-lst$19220$1S&e0X
                                   (case-lambda
                                     ((g$l$19227$1S&e0X
                                        g$col$19228$1S&e0X)
                                      (if (pair? g$l$19227$1S&e0X)
                                        ((letrec ((g$loop$19229$1S&e0X
                                                    (case-lambda
                                                      ((g$l$19230$1S&e0X
                                                         g$col$19231$1S&e0X)
                                                       (if (not g$col$19231$1S&e0X)
                                                         g$col$19231$1S&e0X
                                                         (if (pair?
                                                               g$l$19230$1S&e0X)
                                                           (g$loop$19229$1S&e0X
                                                             (cdr g$l$19230$1S&e0X)
                                                             (g$wr$19086$1S&e0X
                                                               (car g$l$19230$1S&e0X)
                                                               (g$out$19085$1S&e0X
                                                                 '" "
                                                                 g$col$19231$1S&e0X)))
                                                           (if (null?
                                                                 g$l$19230$1S&e0X)
                                                             (g$out$19085$1S&e0X
                                                               '")"
                                                               g$col$19231$1S&e0X)
                                                             (begin
                                                               '#f
                                                               (g$out$19085$1S&e0X
                                                                 '")"
                                                                 (g$wr$19086$1S&e0X
                                                                   g$l$19230$1S&e0X
                                                                   (g$out$19085$1S&e0X
                                                                     '" . "
                                                                     g$col$19231$1S&e0X)))))))))))
                                           g$loop$19229$1S&e0X)
                                         (cdr g$l$19227$1S&e0X)
                                         (if g$col$19228$1S&e0X
                                           (begin
                                             '#f
                                             (g$wr$19086$1S&e0X
                                               (car g$l$19227$1S&e0X)
                                               (g$out$19085$1S&e0X
                                                 '"("
                                                 g$col$19228$1S&e0X)))
                                           '#f))
                                        (g$out$19085$1S&e0X
                                          '"()"
                                          g$col$19228$1S&e0X))))))
                         (if (pair? g$obj$19217$1S&e0X)
                           (g$wr-expr$19219$1S&e0X
                             g$obj$19217$1S&e0X
                             g$col$19218$1S&e0X)
                           (if (null? g$obj$19217$1S&e0X)
                             (g$wr-lst$19220$1S&e0X
                               g$obj$19217$1S&e0X
                               g$col$19218$1S&e0X)
                             (if (g$vector?$12663$1S&e0X
                                   g$obj$19217$1S&e0X)
                               (g$wr-lst$19220$1S&e0X
                                 (vector->list g$obj$19217$1S&e0X)
                                 (g$out$19085$1S&e0X
                                   '"#"
                                   g$col$19218$1S&e0X))
                               (if (g$boolean?$12666$1S&e0X
                                     g$obj$19217$1S&e0X)
                                 (g$out$19085$1S&e0X
                                   (if g$obj$19217$1S&e0X '"#t" '"#f")
                                   g$col$19218$1S&e0X)
                                 (if (g$number?$13672$1S&e0X
                                       g$obj$19217$1S&e0X)
                                   (g$out$19085$1S&e0X
                                     (g$number->string$13693$1S&e0X
                                       g$obj$19217$1S&e0X)
                                     g$col$19218$1S&e0X)
                                   (if (g$symbol?$12665$1S&e0X
                                         g$obj$19217$1S&e0X)
                                     (g$out$19085$1S&e0X
                                       (g$symbol->string$19058$1S&e0X
                                         g$obj$19217$1S&e0X)
                                       g$col$19218$1S&e0X)
                                     (if (string? g$obj$19217$1S&e0X)
                                       (if g$display?$19082$1S&e0X
                                         (g$out$19085$1S&e0X
                                           g$obj$19217$1S&e0X
                                           g$col$19218$1S&e0X)
                                         ((letrec ((g$loop$19221$1S&e0X
                                                     (case-lambda
                                                       ((g$i$19222$1S&e0X
                                                          g$j$19223$1S&e0X
                                                          g$col$19224$1S&e0X)
                                                        (if (if g$col$19224$1S&e0X
                                                              (begin
                                                                '#f
                                                                (g$fx<?$16981$1S&e0X
                                                                  g$j$19223$1S&e0X
                                                                  (string-length
                                                                    g$obj$19217$1S&e0X)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$19225$1S&e0X)
                                                              (if ((case-lambda
                                                                     ((g$t$19226$1S&e0X)
                                                                      (if g$t$19226$1S&e0X
                                                                        g$t$19226$1S&e0X
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$12724$1S&e0X
                                                                            g$c$19225$1S&e0X
                                                                            '#\")))))
                                                                   (g$char=?$12724$1S&e0X
                                                                     g$c$19225$1S&e0X
                                                                     '#\\))
                                                                (g$loop$19221$1S&e0X
                                                                  g$j$19223$1S&e0X
                                                                  (g$fx+$16967$1S&e0X
                                                                    g$j$19223$1S&e0X
                                                                    '1)
                                                                  (g$out$19085$1S&e0X
                                                                    '"\\"
                                                                    (g$out$19085$1S&e0X
                                                                      (substring
                                                                        g$obj$19217$1S&e0X
                                                                        g$i$19222$1S&e0X
                                                                        g$j$19223$1S&e0X)
                                                                      g$col$19224$1S&e0X)))
                                                                (g$loop$19221$1S&e0X
                                                                  g$i$19222$1S&e0X
                                                                  (g$fx+$16967$1S&e0X
                                                                    g$j$19223$1S&e0X
                                                                    '1)
                                                                  g$col$19224$1S&e0X))))
                                                           (string-ref
                                                             g$obj$19217$1S&e0X
                                                             g$j$19223$1S&e0X))
                                                          (g$out$19085$1S&e0X
                                                            '"\""
                                                            (g$out$19085$1S&e0X
                                                              (substring
                                                                g$obj$19217$1S&e0X
                                                                g$i$19222$1S&e0X
                                                                g$j$19223$1S&e0X)
                                                              g$col$19224$1S&e0X)))))))
                                            g$loop$19221$1S&e0X)
                                          '0
                                          '0
                                          (g$out$19085$1S&e0X
                                            '"\""
                                            g$col$19218$1S&e0X)))
                                       (begin
                                         '#f
                                         (g$out$19085$1S&e0X
                                           (g$format$18843$1S&e0X
                                             (if g$display?$19082$1S&e0X
                                               '"~a"
                                               '"~s")
                                             g$obj$19217$1S&e0X)
                                           g$col$19218$1S&e0X)))))))))))))
                  (g$pp$19087$1S&e0X
                    (case-lambda
                      ((g$obj$19088$1S&e0X g$col$19089$1S&e0X)
                       (letrec* ((g$spaces$19090$1S&e0X
                                   (case-lambda
                                     ((g$n$19215$1S&e0X
                                        g$col$19216$1S&e0X)
                                      (if (g$fx>?$16983$1S&e0X
                                            g$n$19215$1S&e0X
                                            '0)
                                        (if (g$fx>?$16983$1S&e0X
                                              g$n$19215$1S&e0X
                                              '7)
                                          (g$spaces$19090$1S&e0X
                                            (g$fx-$16969$1S&e0X
                                              g$n$19215$1S&e0X
                                              '8)
                                            (g$out$19085$1S&e0X
                                              '"        "
                                              g$col$19216$1S&e0X))
                                          (g$out$19085$1S&e0X
                                            (substring
                                              '"        "
                                              '0
                                              g$n$19215$1S&e0X)
                                            g$col$19216$1S&e0X))
                                        g$col$19216$1S&e0X))))
                                 (g$indent$19091$1S&e0X
                                   (case-lambda
                                     ((g$to$19213$1S&e0X
                                        g$col$19214$1S&e0X)
                                      (if g$col$19214$1S&e0X
                                        (begin
                                          '#f
                                          (if (g$fx<?$16981$1S&e0X
                                                g$to$19213$1S&e0X
                                                g$col$19214$1S&e0X)
                                            (if (g$out$19085$1S&e0X
                                                  g$genwrite:newline-str$19057$1S&e0X
                                                  g$col$19214$1S&e0X)
                                              (begin
                                                '#f
                                                (g$spaces$19090$1S&e0X
                                                  g$to$19213$1S&e0X
                                                  '0))
                                              '#f)
                                            (g$spaces$19090$1S&e0X
                                              (g$fx-$16969$1S&e0X
                                                g$to$19213$1S&e0X
                                                g$col$19214$1S&e0X)
                                              g$col$19214$1S&e0X)))
                                        '#f))))
                                 (g$pr$19092$1S&e0X
                                   (case-lambda
                                     ((g$obj$19205$1S&e0X
                                        g$col$19206$1S&e0X
                                        g$extra$19207$1S&e0X
                                        g$pp-pair$19208$1S&e0X)
                                      (if ((case-lambda
                                             ((g$t$19209$1S&e0X)
                                              (if g$t$19209$1S&e0X
                                                g$t$19209$1S&e0X
                                                (begin
                                                  '#f
                                                  (g$vector?$12663$1S&e0X
                                                    g$obj$19205$1S&e0X)))))
                                           (pair? g$obj$19205$1S&e0X))
                                        ((case-lambda
                                           ((g$result$19210$1S&e0X
                                              g$left$19211$1S&e0X)
                                            (begin
                                              (g$generic-write$19063$1S&e0X
                                                g$obj$19205$1S&e0X
                                                g$display?$19082$1S&e0X
                                                '#f
                                                (case-lambda
                                                  ((g$str$19212$1S&e0X)
                                                   (begin
                                                     (set! g$result$19210$1S&e0X
                                                       (cons
                                                         g$str$19212$1S&e0X
                                                         g$result$19210$1S&e0X))
                                                     (set! g$left$19211$1S&e0X
                                                       (g$fx-$16969$1S&e0X
                                                         g$left$19211$1S&e0X
                                                         (string-length
                                                           g$str$19212$1S&e0X)))
                                                     (g$fx>?$16983$1S&e0X
                                                       g$left$19211$1S&e0X
                                                       '0)))))
                                              (if (g$fx>?$16983$1S&e0X
                                                    g$left$19211$1S&e0X
                                                    '0)
                                                (g$out$19085$1S&e0X
                                                  (g$reverse-string-append$19068$1S&e0X
                                                    g$result$19210$1S&e0X)
                                                  g$col$19206$1S&e0X)
                                                (if (pair?
                                                      g$obj$19205$1S&e0X)
                                                  (g$pp-pair$19208$1S&e0X
                                                    g$obj$19205$1S&e0X
                                                    g$col$19206$1S&e0X
                                                    g$extra$19207$1S&e0X)
                                                  (g$pp-list$19095$1S&e0X
                                                    (vector->list
                                                      g$obj$19205$1S&e0X)
                                                    (g$out$19085$1S&e0X
                                                      '"#"
                                                      g$col$19206$1S&e0X)
                                                    g$extra$19207$1S&e0X
                                                    g$pp-expr$19093$1S&e0X))))))
                                         '()
                                         (g$min$12714$1S&e0X
                                           (g$fx+$16967$1S&e0X
                                             (g$fx-$16969$1S&e0X
                                               (g$fx-$16969$1S&e0X
                                                 g$width$19083$1S&e0X
                                                 g$col$19206$1S&e0X)
                                               g$extra$19207$1S&e0X)
                                             '1)
                                           (g$pretty-width$19064$1S&e0X)))
                                        (g$wr$19086$1S&e0X
                                          g$obj$19205$1S&e0X
                                          g$col$19206$1S&e0X)))))
                                 (g$pp-expr$19093$1S&e0X
                                   (case-lambda
                                     ((g$expr$19200$1S&e0X
                                        g$col$19201$1S&e0X
                                        g$extra$19202$1S&e0X)
                                      (if (g$read-macro?$19062$1S&e0X
                                            g$expr$19200$1S&e0X)
                                        (g$pr$19092$1S&e0X
                                          (g$read-macro-body$19059$1S&e0X
                                            g$expr$19200$1S&e0X)
                                          (g$out$19085$1S&e0X
                                            (g$read-macro-prefix$19060$1S&e0X
                                              g$expr$19200$1S&e0X)
                                            g$col$19201$1S&e0X)
                                          g$extra$19202$1S&e0X
                                          g$pp-expr$19093$1S&e0X)
                                        ((case-lambda
                                           ((g$head$19203$1S&e0X)
                                            (if (g$symbol?$12665$1S&e0X
                                                  g$head$19203$1S&e0X)
                                              ((case-lambda
                                                 ((g$proc$19204$1S&e0X)
                                                  (if g$proc$19204$1S&e0X
                                                    (g$proc$19204$1S&e0X
                                                      g$expr$19200$1S&e0X
                                                      g$col$19201$1S&e0X
                                                      g$extra$19202$1S&e0X)
                                                    (if (g$fx>?$16983$1S&e0X
                                                          (string-length
                                                            (g$symbol->string$19058$1S&e0X
                                                              g$head$19203$1S&e0X))
                                                          (g$max-call-head-width$19066$1S&e0X))
                                                      (g$pp-general$19097$1S&e0X
                                                        g$expr$19200$1S&e0X
                                                        g$col$19201$1S&e0X
                                                        g$extra$19202$1S&e0X
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$19093$1S&e0X)
                                                      (g$pp-call$19094$1S&e0X
                                                        g$expr$19200$1S&e0X
                                                        g$col$19201$1S&e0X
                                                        g$extra$19202$1S&e0X
                                                        g$pp-expr$19093$1S&e0X)))))
                                               (g$style$19109$1S&e0X
                                                 g$head$19203$1S&e0X))
                                              (g$pp-list$19095$1S&e0X
                                                g$expr$19200$1S&e0X
                                                g$col$19201$1S&e0X
                                                g$extra$19202$1S&e0X
                                                g$pp-expr$19093$1S&e0X))))
                                         (car g$expr$19200$1S&e0X))))))
                                 (g$pp-call$19094$1S&e0X
                                   (case-lambda
                                     ((g$expr$19195$1S&e0X
                                        g$col$19196$1S&e0X
                                        g$extra$19197$1S&e0X
                                        g$pp-item$19198$1S&e0X)
                                      ((case-lambda
                                         ((g$col*$19199$1S&e0X)
                                          (if g$col$19196$1S&e0X
                                            (begin
                                              '#f
                                              (g$pp-down$19096$1S&e0X
                                                (cdr g$expr$19195$1S&e0X)
                                                g$col*$19199$1S&e0X
                                                (g$fx+$16967$1S&e0X
                                                  g$col*$19199$1S&e0X
                                                  '1)
                                                g$extra$19197$1S&e0X
                                                g$pp-item$19198$1S&e0X))
                                            '#f)))
                                       (g$wr$19086$1S&e0X
                                         (car g$expr$19195$1S&e0X)
                                         (g$out$19085$1S&e0X
                                           '"("
                                           g$col$19196$1S&e0X))))))
                                 (g$pp-list$19095$1S&e0X
                                   (case-lambda
                                     ((g$l$19190$1S&e0X
                                        g$col$19191$1S&e0X
                                        g$extra$19192$1S&e0X
                                        g$pp-item$19193$1S&e0X)
                                      ((case-lambda
                                         ((g$col$19194$1S&e0X)
                                          (g$pp-down$19096$1S&e0X
                                            g$l$19190$1S&e0X
                                            g$col$19194$1S&e0X
                                            g$col$19194$1S&e0X
                                            g$extra$19192$1S&e0X
                                            g$pp-item$19193$1S&e0X)))
                                       (g$out$19085$1S&e0X
                                         '"("
                                         g$col$19191$1S&e0X)))))
                                 (g$pp-down$19096$1S&e0X
                                   (case-lambda
                                     ((g$l$19180$1S&e0X
                                        g$col1$19181$1S&e0X
                                        g$col2$19182$1S&e0X
                                        g$extra$19183$1S&e0X
                                        g$pp-item$19184$1S&e0X)
                                      ((letrec ((g$loop$19185$1S&e0X
                                                  (case-lambda
                                                    ((g$l$19186$1S&e0X
                                                       g$col$19187$1S&e0X)
                                                     (if g$col$19187$1S&e0X
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$19186$1S&e0X)
                                                           ((case-lambda
                                                              ((g$rest$19188$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$extra$19189$1S&e0X)
                                                                   (g$loop$19185$1S&e0X
                                                                     g$rest$19188$1S&e0X
                                                                     (g$pr$19092$1S&e0X
                                                                       (car g$l$19186$1S&e0X)
                                                                       (g$indent$19091$1S&e0X
                                                                         g$col2$19182$1S&e0X
                                                                         g$col$19187$1S&e0X)
                                                                       g$extra$19189$1S&e0X
                                                                       g$pp-item$19184$1S&e0X))))
                                                                (if (null?
                                                                      g$rest$19188$1S&e0X)
                                                                  (g$fx+$16967$1S&e0X
                                                                    g$extra$19183$1S&e0X
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$19186$1S&e0X))
                                                           (if (null?
                                                                 g$l$19186$1S&e0X)
                                                             (g$out$19085$1S&e0X
                                                               '")"
                                                               g$col$19187$1S&e0X)
                                                             (begin
                                                               '#f
                                                               (g$out$19085$1S&e0X
                                                                 '")"
                                                                 (g$pr$19092$1S&e0X
                                                                   g$l$19186$1S&e0X
                                                                   (g$indent$19091$1S&e0X
                                                                     g$col2$19182$1S&e0X
                                                                     (g$out$19085$1S&e0X
                                                                       '"."
                                                                       (g$indent$19091$1S&e0X
                                                                         g$col2$19182$1S&e0X
                                                                         g$col$19187$1S&e0X)))
                                                                   (g$fx+$16967$1S&e0X
                                                                     g$extra$19183$1S&e0X
                                                                     '1)
                                                                   g$pp-item$19184$1S&e0X))))))
                                                       '#f)))))
                                         g$loop$19185$1S&e0X)
                                       g$l$19180$1S&e0X
                                       g$col1$19181$1S&e0X))))
                                 (g$pp-general$19097$1S&e0X
                                   (case-lambda
                                     ((g$expr$19147$1S&e0X
                                        g$col$19148$1S&e0X
                                        g$extra$19149$1S&e0X
                                        g$named?$19150$1S&e0X
                                        g$pp-1$19151$1S&e0X
                                        g$pp-2$19152$1S&e0X
                                        g$pp-3$19153$1S&e0X)
                                      (letrec* ((g$tail1$19154$1S&e0X
                                                  (case-lambda
                                                    ((g$rest$19173$1S&e0X
                                                       g$col1$19174$1S&e0X
                                                       g$col2$19175$1S&e0X
                                                       g$col3$19176$1S&e0X)
                                                     (if (if g$pp-1$19151$1S&e0X
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$19173$1S&e0X))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$19177$1S&e0X)
                                                           ((case-lambda
                                                              ((g$rest$19178$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$extra$19179$1S&e0X)
                                                                   (g$tail2$19155$1S&e0X
                                                                     g$rest$19178$1S&e0X
                                                                     g$col1$19174$1S&e0X
                                                                     (g$pr$19092$1S&e0X
                                                                       g$val1$19177$1S&e0X
                                                                       (g$indent$19091$1S&e0X
                                                                         g$col3$19176$1S&e0X
                                                                         g$col2$19175$1S&e0X)
                                                                       g$extra$19179$1S&e0X
                                                                       g$pp-1$19151$1S&e0X)
                                                                     g$col3$19176$1S&e0X)))
                                                                (if (null?
                                                                      g$rest$19178$1S&e0X)
                                                                  (g$fx+$16967$1S&e0X
                                                                    g$extra$19149$1S&e0X
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$19173$1S&e0X))))
                                                        (car g$rest$19173$1S&e0X))
                                                       (g$tail2$19155$1S&e0X
                                                         g$rest$19173$1S&e0X
                                                         g$col1$19174$1S&e0X
                                                         g$col2$19175$1S&e0X
                                                         g$col3$19176$1S&e0X)))))
                                                (g$tail2$19155$1S&e0X
                                                  (case-lambda
                                                    ((g$rest$19166$1S&e0X
                                                       g$col1$19167$1S&e0X
                                                       g$col2$19168$1S&e0X
                                                       g$col3$19169$1S&e0X)
                                                     (if (if g$pp-2$19152$1S&e0X
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$19166$1S&e0X))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$19170$1S&e0X)
                                                           ((case-lambda
                                                              ((g$rest$19171$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$extra$19172$1S&e0X)
                                                                   (g$tail3$19156$1S&e0X
                                                                     g$rest$19171$1S&e0X
                                                                     g$col1$19167$1S&e0X
                                                                     (g$pr$19092$1S&e0X
                                                                       g$val1$19170$1S&e0X
                                                                       (g$indent$19091$1S&e0X
                                                                         g$col3$19169$1S&e0X
                                                                         g$col2$19168$1S&e0X)
                                                                       g$extra$19172$1S&e0X
                                                                       g$pp-2$19152$1S&e0X))))
                                                                (if (null?
                                                                      g$rest$19171$1S&e0X)
                                                                  (g$fx+$16967$1S&e0X
                                                                    g$extra$19149$1S&e0X
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$19166$1S&e0X))))
                                                        (car g$rest$19166$1S&e0X))
                                                       (g$tail3$19156$1S&e0X
                                                         g$rest$19166$1S&e0X
                                                         g$col1$19167$1S&e0X
                                                         g$col2$19168$1S&e0X)))))
                                                (g$tail3$19156$1S&e0X
                                                  (case-lambda
                                                    ((g$rest$19163$1S&e0X
                                                       g$col1$19164$1S&e0X
                                                       g$col2$19165$1S&e0X)
                                                     (g$pp-down$19096$1S&e0X
                                                       g$rest$19163$1S&e0X
                                                       g$col2$19165$1S&e0X
                                                       g$col1$19164$1S&e0X
                                                       g$extra$19149$1S&e0X
                                                       g$pp-3$19153$1S&e0X)))))
                                        ((case-lambda
                                           ((g$head$19157$1S&e0X)
                                            ((case-lambda
                                               ((g$rest$19158$1S&e0X)
                                                ((case-lambda
                                                   ((g$col*$19159$1S&e0X)
                                                    (if (if g$named?$19150$1S&e0X
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$19158$1S&e0X))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$19160$1S&e0X)
                                                          ((case-lambda
                                                             ((g$rest$19161$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$col**$19162$1S&e0X)
                                                                  (g$tail1$19154$1S&e0X
                                                                    g$rest$19161$1S&e0X
                                                                    (g$fx+$16967$1S&e0X
                                                                      g$col$19148$1S&e0X
                                                                      (g$indent-general$19065$1S&e0X))
                                                                    g$col**$19162$1S&e0X
                                                                    (g$fx+$16967$1S&e0X
                                                                      g$col**$19162$1S&e0X
                                                                      '1))))
                                                               (g$wr$19086$1S&e0X
                                                                 g$name$19160$1S&e0X
                                                                 (g$out$19085$1S&e0X
                                                                   '" "
                                                                   g$col*$19159$1S&e0X)))))
                                                           (cdr g$rest$19158$1S&e0X))))
                                                       (car g$rest$19158$1S&e0X))
                                                      (g$tail1$19154$1S&e0X
                                                        g$rest$19158$1S&e0X
                                                        (g$fx+$16967$1S&e0X
                                                          g$col$19148$1S&e0X
                                                          (g$indent-general$19065$1S&e0X))
                                                        g$col*$19159$1S&e0X
                                                        (g$fx+$16967$1S&e0X
                                                          g$col*$19159$1S&e0X
                                                          '1)))))
                                                 (g$wr$19086$1S&e0X
                                                   g$head$19157$1S&e0X
                                                   (g$out$19085$1S&e0X
                                                     '"("
                                                     g$col$19148$1S&e0X)))))
                                             (cdr g$expr$19147$1S&e0X))))
                                         (car g$expr$19147$1S&e0X))))))
                                 (g$pp-expr-list$19098$1S&e0X
                                   (case-lambda
                                     ((g$l$19144$1S&e0X
                                        g$col$19145$1S&e0X
                                        g$extra$19146$1S&e0X)
                                      (g$pp-list$19095$1S&e0X
                                        g$l$19144$1S&e0X
                                        g$col$19145$1S&e0X
                                        g$extra$19146$1S&e0X
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$pp-SYNTAX-CASE$19099$1S&e0X
                                   (case-lambda
                                     ((g$expr$19141$1S&e0X
                                        g$col$19142$1S&e0X
                                        g$extra$19143$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19141$1S&e0X
                                        g$col$19142$1S&e0X
                                        g$extra$19143$1S&e0X
                                        '#t
                                        g$pp-expr-list$19098$1S&e0X
                                        '#f
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$pp-LAMBDA$19100$1S&e0X
                                   (case-lambda
                                     ((g$expr$19138$1S&e0X
                                        g$col$19139$1S&e0X
                                        g$extra$19140$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19138$1S&e0X
                                        g$col$19139$1S&e0X
                                        g$extra$19140$1S&e0X
                                        '#f
                                        g$pp-expr-list$19098$1S&e0X
                                        '#f
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$pp-IF$19101$1S&e0X
                                   (case-lambda
                                     ((g$expr$19135$1S&e0X
                                        g$col$19136$1S&e0X
                                        g$extra$19137$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19135$1S&e0X
                                        g$col$19136$1S&e0X
                                        g$extra$19137$1S&e0X
                                        '#f
                                        g$pp-expr$19093$1S&e0X
                                        '#f
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$pp-COND$19102$1S&e0X
                                   (case-lambda
                                     ((g$expr$19132$1S&e0X
                                        g$col$19133$1S&e0X
                                        g$extra$19134$1S&e0X)
                                      (g$pp-call$19094$1S&e0X
                                        g$expr$19132$1S&e0X
                                        g$col$19133$1S&e0X
                                        g$extra$19134$1S&e0X
                                        g$pp-expr-list$19098$1S&e0X))))
                                 (g$pp-CASE$19103$1S&e0X
                                   (case-lambda
                                     ((g$expr$19129$1S&e0X
                                        g$col$19130$1S&e0X
                                        g$extra$19131$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19129$1S&e0X
                                        g$col$19130$1S&e0X
                                        g$extra$19131$1S&e0X
                                        '#f
                                        g$pp-expr$19093$1S&e0X
                                        '#f
                                        g$pp-expr-list$19098$1S&e0X))))
                                 (g$pp-CASE-LAMBDA$19104$1S&e0X
                                   (case-lambda
                                     ((g$expr$19126$1S&e0X
                                        g$col$19127$1S&e0X
                                        g$extra$19128$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19126$1S&e0X
                                        g$col$19127$1S&e0X
                                        g$extra$19128$1S&e0X
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$19098$1S&e0X))))
                                 (g$pp-AND$19105$1S&e0X
                                   (case-lambda
                                     ((g$expr$19123$1S&e0X
                                        g$col$19124$1S&e0X
                                        g$extra$19125$1S&e0X)
                                      (g$pp-call$19094$1S&e0X
                                        g$expr$19123$1S&e0X
                                        g$col$19124$1S&e0X
                                        g$extra$19125$1S&e0X
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$pp-LET$19106$1S&e0X
                                   (case-lambda
                                     ((g$expr$19118$1S&e0X
                                        g$col$19119$1S&e0X
                                        g$extra$19120$1S&e0X)
                                      ((case-lambda
                                         ((g$rest$19121$1S&e0X)
                                          ((case-lambda
                                             ((g$named?$19122$1S&e0X)
                                              (g$pp-general$19097$1S&e0X
                                                g$expr$19118$1S&e0X
                                                g$col$19119$1S&e0X
                                                g$extra$19120$1S&e0X
                                                g$named?$19122$1S&e0X
                                                g$pp-expr-list$19098$1S&e0X
                                                '#f
                                                g$pp-expr$19093$1S&e0X)))
                                           (if (pair?
                                                 g$rest$19121$1S&e0X)
                                             (begin
                                               '#f
                                               (g$symbol?$12665$1S&e0X
                                                 (car g$rest$19121$1S&e0X)))
                                             '#f))))
                                       (cdr g$expr$19118$1S&e0X)))))
                                 (g$pp-BEGIN$19107$1S&e0X
                                   (case-lambda
                                     ((g$expr$19115$1S&e0X
                                        g$col$19116$1S&e0X
                                        g$extra$19117$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19115$1S&e0X
                                        g$col$19116$1S&e0X
                                        g$extra$19117$1S&e0X
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$pp-DO$19108$1S&e0X
                                   (case-lambda
                                     ((g$expr$19112$1S&e0X
                                        g$col$19113$1S&e0X
                                        g$extra$19114$1S&e0X)
                                      (g$pp-general$19097$1S&e0X
                                        g$expr$19112$1S&e0X
                                        g$col$19113$1S&e0X
                                        g$extra$19114$1S&e0X
                                        '#f
                                        g$pp-expr-list$19098$1S&e0X
                                        g$pp-expr-list$19098$1S&e0X
                                        g$pp-expr$19093$1S&e0X))))
                                 (g$style$19109$1S&e0X
                                   (case-lambda
                                     ((g$head$19110$1S&e0X)
                                      ((case-lambda
                                         ((g$t$19111$1S&e0X)
                                          (if (g$memv$11826$1S&e0X
                                                g$t$19111$1S&e0X
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$19100$1S&e0X
                                            (if (eqv?
                                                  g$t$19111$1S&e0X
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$19099$1S&e0X
                                              (if (g$memv$11826$1S&e0X
                                                    g$t$19111$1S&e0X
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$19101$1S&e0X
                                                (if (eqv?
                                                      g$t$19111$1S&e0X
                                                      'cond)
                                                  g$pp-COND$19102$1S&e0X
                                                  (if (eqv?
                                                        g$t$19111$1S&e0X
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$19104$1S&e0X
                                                    (if (eqv?
                                                          g$t$19111$1S&e0X
                                                          'case)
                                                      g$pp-CASE$19103$1S&e0X
                                                      (if (g$memv$11826$1S&e0X
                                                            g$t$19111$1S&e0X
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$19105$1S&e0X
                                                        (if (eqv?
                                                              g$t$19111$1S&e0X
                                                              'let)
                                                          g$pp-LET$19106$1S&e0X
                                                          (if (eqv?
                                                                g$t$19111$1S&e0X
                                                                'begin)
                                                            g$pp-BEGIN$19107$1S&e0X
                                                            (if (eqv?
                                                                  g$t$19111$1S&e0X
                                                                  'do)
                                                              g$pp-DO$19108$1S&e0X
                                                              (begin
                                                                '#f
                                                                '#f)))))))))))))
                                       g$head$19110$1S&e0X)))))
                         (g$pr$19092$1S&e0X
                           g$obj$19088$1S&e0X
                           g$col$19089$1S&e0X
                           '0
                           g$pp-expr$19093$1S&e0X))))))
          (if g$width$19083$1S&e0X
            (g$out$19085$1S&e0X
              g$genwrite:newline-str$19057$1S&e0X
              (g$pp$19087$1S&e0X g$obj$19081$1S&e0X '0))
            (g$wr$19086$1S&e0X g$obj$19081$1S&e0X '0))))))
   (g$pretty-width$19064$1S&e0X
     g$pretty-width$19257$1S&e0X
     (g$make-parameter$19052$1S&e0X '72))
   (g$indent-general$19065$1S&e0X
     g$indent-general$19258$1S&e0X
     (g$make-parameter$19052$1S&e0X '2))
   (g$max-call-head-width$19066$1S&e0X
     g$max-call-head-width$19259$1S&e0X
     (g$make-parameter$19052$1S&e0X '3))
   (g$pretty-gensyms$19067$1S&e0X
     g$pretty-gensyms$19260$1S&e0X
     (g$make-parameter$19052$1S&e0X '#f))
   (g$reverse-string-append$19068$1S&e0X
     g$reverse-string-append$19261$1S&e0X
     (case-lambda
       ((g$l$19236$1S&e0X)
        (letrec* ((g$rev-string-append$19237$1S&e0X
                    (case-lambda
                      ((g$l$19238$1S&e0X g$i$19239$1S&e0X)
                       (if (pair? g$l$19238$1S&e0X)
                         ((case-lambda
                            ((g$str$19240$1S&e0X)
                             ((case-lambda
                                ((g$len$19241$1S&e0X)
                                 ((case-lambda
                                    ((g$result$19242$1S&e0X)
                                     ((letrec ((g$loop$19243$1S&e0X
                                                 (case-lambda
                                                   ((g$j$19244$1S&e0X
                                                      g$k$19245$1S&e0X)
                                                    (if (g$fx<?$16981$1S&e0X
                                                          g$j$19244$1S&e0X
                                                          g$len$19241$1S&e0X)
                                                      (begin
                                                        (string-set!
                                                          g$result$19242$1S&e0X
                                                          g$k$19245$1S&e0X
                                                          (string-ref
                                                            g$str$19240$1S&e0X
                                                            g$j$19244$1S&e0X))
                                                        (g$loop$19243$1S&e0X
                                                          (g$fx+$16967$1S&e0X
                                                            g$j$19244$1S&e0X
                                                            '1)
                                                          (g$fx+$16967$1S&e0X
                                                            g$k$19245$1S&e0X
                                                            '1)))
                                                      g$result$19242$1S&e0X)))))
                                        g$loop$19243$1S&e0X)
                                      '0
                                      (g$fx-$16969$1S&e0X
                                        (g$fx-$16969$1S&e0X
                                          (string-length
                                            g$result$19242$1S&e0X)
                                          g$i$19239$1S&e0X)
                                        g$len$19241$1S&e0X))))
                                  (g$rev-string-append$19237$1S&e0X
                                    (cdr g$l$19238$1S&e0X)
                                    (g$fx+$16967$1S&e0X
                                      g$i$19239$1S&e0X
                                      g$len$19241$1S&e0X)))))
                              (string-length g$str$19240$1S&e0X))))
                          (car g$l$19238$1S&e0X))
                         (make-string g$i$19239$1S&e0X))))))
          (g$rev-string-append$19237$1S&e0X g$l$19236$1S&e0X '0)))))
   (g$pretty-print$19069$1S&e0X
     g$pretty-print$19262$1S&e0X
     (case-lambda
       ((g$obj$19246$1S&e0X . g$opt$19247$1S&e0X)
        ((case-lambda
           ((g$port$19248$1S&e0X)
            (g$generic-write$19063$1S&e0X
              g$obj$19246$1S&e0X
              '#f
              (g$pretty-width$19064$1S&e0X)
              (case-lambda
                ((g$s$19249$1S&e0X)
                 (begin
                   (display g$s$19249$1S&e0X g$port$19248$1S&e0X)
                   '#t))))))
         (if (pair? g$opt$19247$1S&e0X)
           (car g$opt$19247$1S&e0X)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$19263$1S&e0X
     g$cps/generate-reference$19528$1S&e0X
     (case-lambda
       ((g$variable$19316$1S&e0X)
        (g$cps/generate-operand$19267$1S&e0X
          (g$make-reference$19293$1S&e0X g$variable$19316$1S&e0X)))))
   (g$cps/generate-literal$19264$1S&e0X
     g$cps/generate-literal$19529$1S&e0X
     (case-lambda
       ((g$datum$19317$1S&e0X)
        (g$cps/generate-operand$19267$1S&e0X
          (g$make-literal$19292$1S&e0X g$datum$19317$1S&e0X)))))
   (g$cps/generate-abstraction$19265$1S&e0X
     g$cps/generate-abstraction$19530$1S&e0X
     (case-lambda
       ((g$bvl$19318$1S&e0X g$body-generator$19319$1S&e0X)
        (g$cps/generate-operand$19267$1S&e0X
          (g$make-user-abstraction$19294$1S&e0X
            g$bvl$19318$1S&e0X
            (case-lambda
              ((g$continuation-variable$19320$1S&e0X)
               (g$body-generator$19319$1S&e0X
                 (g$variable-continuator$19280$1S&e0X
                   g$continuation-variable$19320$1S&e0X)))))))))
   (g$cps/generate-abstractions$19266$1S&e0X
     g$cps/generate-abstractions$19531$1S&e0X
     (case-lambda
       ((g$bvls$19321$1S&e0X g$body-generators$19322$1S&e0X)
        (g$cps/generate-operand$19267$1S&e0X
          (g$make-user-abstractions$19295$1S&e0X
            g$bvls$19321$1S&e0X
            (g$map$11833$1S&e0X
              (case-lambda
                ((g$body-generator$19323$1S&e0X)
                 (case-lambda
                   ((g$continuation-variable$19324$1S&e0X)
                    (g$body-generator$19323$1S&e0X
                      (g$variable-continuator$19280$1S&e0X
                        g$continuation-variable$19324$1S&e0X))))))
              g$body-generators$19322$1S&e0X))))))
   (g$cps/generate-operand$19267$1S&e0X
     g$cps/generate-operand$19532$1S&e0X
     (case-lambda
       ((g$operand$19325$1S&e0X)
        (case-lambda
          ((g$continuator$19326$1S&e0X)
           (g$continue-with-operand$19283$1S&e0X
             g$continuator$19326$1S&e0X
             g$operand$19325$1S&e0X))))))
   (g$cps/generate-conditional$19268$1S&e0X
     g$cps/generate-conditional$19533$1S&e0X
     (case-lambda
       ((g$condition-generator$19327$1S&e0X
          g$consequent-generator$19328$1S&e0X
          g$alternative-generator$19329$1S&e0X)
        (case-lambda
          ((g$continuator$19330$1S&e0X)
           (letrec* ((g$if-variable$19331$1S&e0X
                       (case-lambda
                         ((g$continuation-variable$19333$1S&e0X)
                          ((case-lambda
                             ((g$continuator*$19334$1S&e0X)
                              (g$condition-generator$19327$1S&e0X
                                (g$conditional-continuator$19279$1S&e0X
                                  (case-lambda
                                    ((g$condition$19335$1S&e0X)
                                     (g$make-conditional$19302$1S&e0X
                                       g$condition$19335$1S&e0X
                                       (g$consequent-generator$19328$1S&e0X
                                         g$continuator*$19334$1S&e0X)
                                       (g$alternative-generator$19329$1S&e0X
                                         g$continuator*$19334$1S&e0X))))))))
                           (g$variable-continuator$19280$1S&e0X
                             g$continuation-variable$19333$1S&e0X))))))
             (g$reify-continuation*$19285$1S&e0X
               g$continuator$19330$1S&e0X
               g$if-variable$19331$1S&e0X
               (case-lambda
                 ((g$continuation-abstraction$19332$1S&e0X)
                  (g$make-conditional-join$19303$1S&e0X
                    g$continuation-abstraction$19332$1S&e0X
                    g$if-variable$19331$1S&e0X))))))))))
   (g$cps/generate-recursive-bind$19269$1S&e0X
     g$cps/generate-recursive-bind$19534$1S&e0X
     (case-lambda
       ((g$variables$19336$1S&e0X
          g$generators$19337$1S&e0X
          g$body-generator$19338$1S&e0X)
        (case-lambda
          ((g$continuator$19339$1S&e0X)
           (g$make-recursive-bind$19297$1S&e0X
             g$variables$19336$1S&e0X
             (g$map$11833$1S&e0X
               (case-lambda
                 ((g$generator$19340$1S&e0X)
                  (case-lambda
                    ((g$continuation-variable$19341$1S&e0X)
                     (g$generator$19340$1S&e0X
                       (g$variable-continuator$19280$1S&e0X
                         g$continuation-variable$19341$1S&e0X))))))
               g$generators$19337$1S&e0X)
             (g$body-generator$19338$1S&e0X
               (g$reified-continuator$19282$1S&e0X
                 g$continuator$19339$1S&e0X))))))))
   (g$cps/generate-recursive*-bind$19270$1S&e0X
     g$cps/generate-recursive*-bind$19535$1S&e0X
     (case-lambda
       ((g$variables$19342$1S&e0X
          g$generators$19343$1S&e0X
          g$body-generator$19344$1S&e0X)
        (case-lambda
          ((g$continuator$19345$1S&e0X)
           (g$make-recursive*-bind$19298$1S&e0X
             g$variables$19342$1S&e0X
             (g$map$11833$1S&e0X
               (case-lambda
                 ((g$generator$19346$1S&e0X)
                  (case-lambda
                    ((g$continuation-variable$19347$1S&e0X)
                     (g$generator$19346$1S&e0X
                       (g$variable-continuator$19280$1S&e0X
                         g$continuation-variable$19347$1S&e0X))))))
               g$generators$19343$1S&e0X)
             (g$body-generator$19344$1S&e0X
               (g$reified-continuator$19282$1S&e0X
                 g$continuator$19345$1S&e0X))))))))
   (g$cps/generate-recursive*-library-bind$19271$1S&e0X
     g$cps/generate-recursive*-library-bind$19536$1S&e0X
     (case-lambda
       ((g$name$19348$1S&e0X
          g$variables$19349$1S&e0X
          g$variables*$19350$1S&e0X
          g$generators$19351$1S&e0X
          g$body-generator$19352$1S&e0X)
        (case-lambda
          ((g$continuator$19353$1S&e0X)
           (g$make-recursive*-library-bind$19299$1S&e0X
             g$name$19348$1S&e0X
             g$variables$19349$1S&e0X
             g$variables*$19350$1S&e0X
             (g$map$11833$1S&e0X
               (case-lambda
                 ((g$generator$19354$1S&e0X)
                  (case-lambda
                    ((g$continuation-variable$19355$1S&e0X)
                     (g$generator$19354$1S&e0X
                       (g$variable-continuator$19280$1S&e0X
                         g$continuation-variable$19355$1S&e0X))))))
               g$generators$19351$1S&e0X)
             (g$body-generator$19352$1S&e0X
               (g$reified-continuator$19282$1S&e0X
                 g$continuator$19353$1S&e0X))))))))
   (g$cps/generate-sequence$19272$1S&e0X
     g$cps/generate-sequence$19537$1S&e0X
     (case-lambda
       ((g$generators$19356$1S&e0X)
        (case-lambda
          ((g$continuator$19357$1S&e0X)
           ((letrec ((g$recur$19358$1S&e0X
                       (case-lambda
                         ((g$generators$19359$1S&e0X)
                          ((car g$generators$19359$1S&e0X)
                           ((case-lambda
                              ((g$generators$19360$1S&e0X)
                               (if (pair? g$generators$19360$1S&e0X)
                                 (g$effect-continuator$19278$1S&e0X
                                   (case-lambda
                                     (()
                                      (g$recur$19358$1S&e0X
                                        g$generators$19360$1S&e0X))))
                                 g$continuator$19357$1S&e0X)))
                            (cdr g$generators$19359$1S&e0X)))))))
              g$recur$19358$1S&e0X)
            g$generators$19356$1S&e0X))))))
   (g$cps/generate-assignment$19273$1S&e0X
     g$cps/generate-assignment$19538$1S&e0X
     (case-lambda
       ((g$location$19361$1S&e0X g$expression-generator$19362$1S&e0X)
        (case-lambda
          ((g$continuator$19363$1S&e0X)
           (g$expression-generator$19362$1S&e0X
             (g$operand-continuator$19277$1S&e0X
               (case-lambda
                 ((g$operand$19364$1S&e0X)
                  (g$make-assignment$19305$1S&e0X
                    g$location$19361$1S&e0X
                    g$operand$19364$1S&e0X
                    (g$continue-with-operand$19283$1S&e0X
                      g$continuator$19363$1S&e0X
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$19274$1S&e0X
     g$cps/generate-declaration$19539$1S&e0X
     (case-lambda
       ((g$location$19365$1S&e0X g$expression-generator$19366$1S&e0X)
        (case-lambda
          ((g$continuator$19367$1S&e0X)
           (g$expression-generator$19366$1S&e0X
             (g$operand-continuator$19277$1S&e0X
               (case-lambda
                 ((g$operand$19368$1S&e0X)
                  (g$make-declaration$19306$1S&e0X
                    g$location$19365$1S&e0X
                    g$operand$19368$1S&e0X
                    (g$continue-with-operand$19283$1S&e0X
                      g$continuator$19367$1S&e0X
                      '(cps-void))))))))))))
   (g$cps/generate-combination$19275$1S&e0X
     g$cps/generate-combination$19540$1S&e0X
     (case-lambda
       ((g$operator-generator$19369$1S&e0X
          g$operand-generators$19370$1S&e0X)
        (g$cps/generate-subproblems$19276$1S&e0X
          (g$reverse$12682$1S&e0X
            (cons
              g$operator-generator$19369$1S&e0X
              g$operand-generators$19370$1S&e0X))
          (case-lambda
            ((g$operands$19371$1S&e0X g$continuator$19372$1S&e0X)
             (g$make-combination$19300$1S&e0X
               (car g$operands$19371$1S&e0X)
               (g$reify-continuation$19284$1S&e0X
                 g$continuator$19372$1S&e0X)
               (cdr g$operands$19371$1S&e0X))))))))
   (g$cps/generate-subproblems$19276$1S&e0X
     g$cps/generate-subproblems$19541$1S&e0X
     (case-lambda
       ((g$generators$19373$1S&e0X g$combiner$19374$1S&e0X)
        (case-lambda
          ((g$continuator$19375$1S&e0X)
           ((letrec ((g$recur$19376$1S&e0X
                       (case-lambda
                         ((g$generators$19377$1S&e0X
                            g$operands$19378$1S&e0X)
                          (if (pair? g$generators$19377$1S&e0X)
                            ((car g$generators$19377$1S&e0X)
                             ((case-lambda
                                ((g$generators$19379$1S&e0X)
                                 (g$operand-continuator$19277$1S&e0X
                                   (case-lambda
                                     ((g$operand$19380$1S&e0X)
                                      (g$recur$19376$1S&e0X
                                        g$generators$19379$1S&e0X
                                        (cons
                                          g$operand$19380$1S&e0X
                                          g$operands$19378$1S&e0X)))))))
                              (cdr g$generators$19377$1S&e0X)))
                            (g$combiner$19374$1S&e0X
                              g$operands$19378$1S&e0X
                              g$continuator$19375$1S&e0X))))))
              g$recur$19376$1S&e0X)
            g$generators$19373$1S&e0X
            '()))))))
   (g$operand-continuator$19277$1S&e0X
     g$operand-continuator$19542$1S&e0X
     (case-lambda
       ((g$generator$19381$1S&e0X)
        (case-lambda
          ((g$if-operand$19382$1S&e0X
             g$if-effect$19383$1S&e0X
             g$if-conditional$19384$1S&e0X
             g$if-variable$19385$1S&e0X
             g$if-inline$19386$1S&e0X)
           (begin
             g$if-effect$19383$1S&e0X
             g$if-conditional$19384$1S&e0X
             g$if-variable$19385$1S&e0X
             g$if-inline$19386$1S&e0X
             (g$if-operand$19382$1S&e0X g$generator$19381$1S&e0X)))))))
   (g$effect-continuator$19278$1S&e0X
     g$effect-continuator$19543$1S&e0X
     (case-lambda
       ((g$generator$19387$1S&e0X)
        (case-lambda
          ((g$if-operand$19388$1S&e0X
             g$if-effect$19389$1S&e0X
             g$if-conditional$19390$1S&e0X
             g$if-variable$19391$1S&e0X
             g$if-inline$19392$1S&e0X)
           (begin
             g$if-operand$19388$1S&e0X
             g$if-conditional$19390$1S&e0X
             g$if-variable$19391$1S&e0X
             g$if-inline$19392$1S&e0X
             (g$if-effect$19389$1S&e0X g$generator$19387$1S&e0X)))))))
   (g$conditional-continuator$19279$1S&e0X
     g$conditional-continuator$19544$1S&e0X
     (case-lambda
       ((g$generator$19393$1S&e0X)
        (case-lambda
          ((g$if-operand$19394$1S&e0X
             g$if-effect$19395$1S&e0X
             g$if-conditional$19396$1S&e0X
             g$if-variable$19397$1S&e0X
             g$if-inline$19398$1S&e0X)
           (begin
             g$if-operand$19394$1S&e0X
             g$if-effect$19395$1S&e0X
             g$if-variable$19397$1S&e0X
             g$if-inline$19398$1S&e0X
             (g$if-conditional$19396$1S&e0X
               g$generator$19393$1S&e0X)))))))
   (g$variable-continuator$19280$1S&e0X
     g$variable-continuator$19545$1S&e0X
     (case-lambda
       ((g$variable$19399$1S&e0X)
        (case-lambda
          ((g$if-operand$19400$1S&e0X
             g$if-effect$19401$1S&e0X
             g$if-conditional$19402$1S&e0X
             g$if-variable$19403$1S&e0X
             g$if-inline$19404$1S&e0X)
           (begin
             g$if-operand$19400$1S&e0X
             g$if-effect$19401$1S&e0X
             g$if-variable$19403$1S&e0X
             g$if-inline$19404$1S&e0X
             (g$if-variable$19403$1S&e0X g$variable$19399$1S&e0X)))))))
   (g$inline-continuator$19281$1S&e0X
     g$inline-continuator$19546$1S&e0X
     (case-lambda
       ((g$continuation$19405$1S&e0X)
        (case-lambda
          ((g$if-operand$19406$1S&e0X
             g$if-effect$19407$1S&e0X
             g$if-conditional$19408$1S&e0X
             g$if-variable$19409$1S&e0X
             g$if-inline$19410$1S&e0X)
           (begin
             g$if-operand$19406$1S&e0X
             g$if-effect$19407$1S&e0X
             g$if-conditional$19408$1S&e0X
             g$if-variable$19409$1S&e0X
             (g$if-inline$19410$1S&e0X
               g$continuation$19405$1S&e0X)))))))
   (g$reified-continuator$19282$1S&e0X
     g$reified-continuator$19547$1S&e0X
     (case-lambda
       ((g$continuator$19411$1S&e0X)
        (case-lambda
          ((g$if-operand$19412$1S&e0X
             g$if-effect$19413$1S&e0X
             g$if-conditional$19414$1S&e0X
             g$if-variable$19415$1S&e0X
             g$if-inline$19416$1S&e0X)
           (begin
             g$if-operand$19412$1S&e0X
             g$if-effect$19413$1S&e0X
             g$if-conditional$19414$1S&e0X
             (g$reify-continuation*$19285$1S&e0X
               g$continuator$19411$1S&e0X
               g$if-variable$19415$1S&e0X
               g$if-inline$19416$1S&e0X)))))))
   (g$continue-with-operand$19283$1S&e0X
     g$continue-with-operand$19548$1S&e0X
     (case-lambda
       ((g$continuator$19417$1S&e0X g$operand$19418$1S&e0X)
        (g$continuator$19417$1S&e0X
          (case-lambda
            ((g$generator$19419$1S&e0X)
             (g$generator$19419$1S&e0X g$operand$19418$1S&e0X)))
          (case-lambda
            ((g$generator$19420$1S&e0X) (g$generator$19420$1S&e0X)))
          (case-lambda
            ((g$generator$19421$1S&e0X)
             (g$generator$19421$1S&e0X
               (g$make-truth-test$19307$1S&e0X
                 g$operand$19418$1S&e0X))))
          (case-lambda
            ((g$continuation-variable$19422$1S&e0X)
             (g$make-return$19301$1S&e0X
               (g$make-reference$19293$1S&e0X
                 g$continuation-variable$19422$1S&e0X)
               (list g$operand$19418$1S&e0X))))
          (case-lambda
            ((g$continuation-abstraction$19423$1S&e0X)
             (g$make-return$19301$1S&e0X
               g$continuation-abstraction$19423$1S&e0X
               (list g$operand$19418$1S&e0X))))))))
   (g$reify-continuation$19284$1S&e0X
     g$reify-continuation$19549$1S&e0X
     (case-lambda
       ((g$continuator$19424$1S&e0X)
        (g$continuator$19424$1S&e0X
          g$operand-continuation-reifier$19287$1S&e0X
          g$effect-continuation-reifier$19289$1S&e0X
          g$conditional-continuation-reifier$19291$1S&e0X
          (case-lambda
            ((g$variable$19425$1S&e0X)
             (g$make-reference$19293$1S&e0X g$variable$19425$1S&e0X)))
          (case-lambda
            ((g$continuation$19426$1S&e0X)
             g$continuation$19426$1S&e0X))))))
   (g$reify-continuation*$19285$1S&e0X
     g$reify-continuation*$19550$1S&e0X
     (case-lambda
       ((g$continuator$19427$1S&e0X
          g$if-variable$19428$1S&e0X
          g$if-inline$19429$1S&e0X)
        (g$continuator$19427$1S&e0X
          (g$operand-continuation-reifier*$19286$1S&e0X
            g$if-inline$19429$1S&e0X)
          (g$effect-continuation-reifier*$19288$1S&e0X
            g$if-inline$19429$1S&e0X)
          (g$conditional-continuation-reifier*$19290$1S&e0X
            g$if-inline$19429$1S&e0X)
          g$if-variable$19428$1S&e0X
          g$if-inline$19429$1S&e0X))))
   (g$operand-continuation-reifier*$19286$1S&e0X
     g$operand-continuation-reifier*$19551$1S&e0X
     (case-lambda
       ((g$receiver$19430$1S&e0X)
        (case-lambda
          ((g$generator$19431$1S&e0X)
           (g$receiver$19430$1S&e0X
             ((case-lambda
                ((g$variable$19432$1S&e0X)
                 (g$make-continuation-abstraction$19296$1S&e0X
                   (list g$variable$19432$1S&e0X)
                   (g$generator$19431$1S&e0X
                     (g$make-reference$19293$1S&e0X
                       g$variable$19432$1S&e0X)))))
              (g$generate-variable$19308$1S&e0X 'V))))))))
   (g$operand-continuation-reifier$19287$1S&e0X
     g$operand-continuation-reifier$19552$1S&e0X
     (g$operand-continuation-reifier*$19286$1S&e0X values))
   (g$effect-continuation-reifier*$19288$1S&e0X
     g$effect-continuation-reifier*$19553$1S&e0X
     (case-lambda
       ((g$receiver$19433$1S&e0X)
        (case-lambda
          ((g$generator$19434$1S&e0X)
           (g$receiver$19433$1S&e0X
             ((case-lambda
                ((g$variable$19435$1S&e0X)
                 (g$make-continuation-abstraction$19296$1S&e0X
                   g$variable$19435$1S&e0X
                   (g$generator$19434$1S&e0X))))
              (g$generate-variable$19308$1S&e0X 'IGNORE))))))))
   (g$effect-continuation-reifier$19289$1S&e0X
     g$effect-continuation-reifier$19554$1S&e0X
     (g$effect-continuation-reifier*$19288$1S&e0X values))
   (g$conditional-continuation-reifier*$19290$1S&e0X
     g$conditional-continuation-reifier*$19555$1S&e0X
     (case-lambda
       ((g$receiver$19436$1S&e0X)
        (case-lambda
          ((g$generator$19437$1S&e0X)
           (g$receiver$19436$1S&e0X
             ((case-lambda
                ((g$variable$19438$1S&e0X)
                 (g$make-continuation-abstraction$19296$1S&e0X
                   (list g$variable$19438$1S&e0X)
                   (g$generator$19437$1S&e0X
                     (g$make-truth-test$19307$1S&e0X
                       (g$make-reference$19293$1S&e0X
                         g$variable$19438$1S&e0X))))))
              (g$generate-variable$19308$1S&e0X 'T))))))))
   (g$conditional-continuation-reifier$19291$1S&e0X
     g$conditional-continuation-reifier$19556$1S&e0X
     (g$conditional-continuation-reifier*$19290$1S&e0X values))
   (g$make-literal$19292$1S&e0X
     g$make-literal$19557$1S&e0X
     (case-lambda
       ((g$datum$19439$1S&e0X) (list 'quote g$datum$19439$1S&e0X))))
   (g$make-reference$19293$1S&e0X
     g$make-reference$19558$1S&e0X
     (case-lambda ((g$variable$19440$1S&e0X) g$variable$19440$1S&e0X)))
   (g$make-user-abstraction$19294$1S&e0X
     g$make-user-abstraction$19559$1S&e0X
     (case-lambda
       ((g$bvl$19441$1S&e0X g$body-constructor$19442$1S&e0X)
        ((case-lambda
           ((g$continuation$19443$1S&e0X)
            (list
              'case-lambda
              (list
                (cons g$continuation$19443$1S&e0X g$bvl$19441$1S&e0X)
                (g$body-constructor$19442$1S&e0X
                  g$continuation$19443$1S&e0X)))))
         (g$generate-variable$19308$1S&e0X 'C)))))
   (g$make-user-abstractions$19295$1S&e0X
     g$make-user-abstractions$19560$1S&e0X
     (case-lambda
       ((g$bvls$19444$1S&e0X g$body-constructors$19445$1S&e0X)
        ((case-lambda
           ((g$continuation$19446$1S&e0X)
            (cons
              'case-lambda
              (g$map$11833$1S&e0X
                (case-lambda
                  ((g$bvl$19447$1S&e0X g$body-constructor$19448$1S&e0X)
                   (list
                     (cons
                       g$continuation$19446$1S&e0X
                       g$bvl$19447$1S&e0X)
                     (g$body-constructor$19448$1S&e0X
                       g$continuation$19446$1S&e0X))))
                g$bvls$19444$1S&e0X
                g$body-constructors$19445$1S&e0X))))
         (g$generate-variable$19308$1S&e0X 'C)))))
   (g$make-continuation-abstraction$19296$1S&e0X
     g$make-continuation-abstraction$19561$1S&e0X
     (case-lambda
       ((g$bvl$19449$1S&e0X g$body$19450$1S&e0X)
        (list
          'case-lambda
          (list g$bvl$19449$1S&e0X g$body$19450$1S&e0X)))))
   (g$make-recursive-bind$19297$1S&e0X
     g$make-recursive-bind$19562$1S&e0X
     (case-lambda
       ((g$variables$19451$1S&e0X
          g$constructors$19452$1S&e0X
          g$body$19453$1S&e0X)
        (list
          'letrec
          (g$map$11833$1S&e0X
            (case-lambda
              ((g$variable$19454$1S&e0X g$constructor$19455$1S&e0X)
               (list
                 g$variable$19454$1S&e0X
                 (list
                   (g$make-user-abstraction$19294$1S&e0X
                     '()
                     g$constructor$19455$1S&e0X)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$19454$1S&e0X))))))
            g$variables$19451$1S&e0X
            g$constructors$19452$1S&e0X)
          g$body$19453$1S&e0X))))
   (g$make-recursive*-bind$19298$1S&e0X
     g$make-recursive*-bind$19563$1S&e0X
     (case-lambda
       ((g$variables$19456$1S&e0X
          g$constructors$19457$1S&e0X
          g$body$19458$1S&e0X)
        (list
          'letrec*
          (g$map$11833$1S&e0X
            (case-lambda
              ((g$variable$19459$1S&e0X g$constructor$19460$1S&e0X)
               (list
                 g$variable$19459$1S&e0X
                 (list
                   (g$make-user-abstraction$19294$1S&e0X
                     '()
                     g$constructor$19460$1S&e0X)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$19459$1S&e0X))))))
            g$variables$19456$1S&e0X
            g$constructors$19457$1S&e0X)
          g$body$19458$1S&e0X))))
   (g$make-recursive*-library-bind$19299$1S&e0X
     g$make-recursive*-library-bind$19564$1S&e0X
     (case-lambda
       ((g$name$19461$1S&e0X
          g$variables$19462$1S&e0X
          g$variables*$19463$1S&e0X
          g$constructors$19464$1S&e0X
          g$body$19465$1S&e0X)
        (list
          'library-letrec*
          g$name$19461$1S&e0X
          (g$map$11833$1S&e0X
            (case-lambda
              ((g$variable$19466$1S&e0X
                 g$variable*$19467$1S&e0X
                 g$constructor$19468$1S&e0X)
               (list
                 g$variable$19466$1S&e0X
                 g$variable*$19467$1S&e0X
                 (list
                   (g$make-user-abstraction$19294$1S&e0X
                     '()
                     g$constructor$19468$1S&e0X)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$19466$1S&e0X))))))
            g$variables$19462$1S&e0X
            g$variables*$19463$1S&e0X
            g$constructors$19464$1S&e0X)
          g$body$19465$1S&e0X))))
   (g$make-combination$19300$1S&e0X
     g$make-combination$19565$1S&e0X
     (case-lambda
       ((g$operator$19469$1S&e0X
          g$continuation$19470$1S&e0X
          g$operands$19471$1S&e0X)
        (cons
          g$operator$19469$1S&e0X
          (cons g$continuation$19470$1S&e0X g$operands$19471$1S&e0X)))))
   (g$make-return$19301$1S&e0X
     g$make-return$19566$1S&e0X
     (case-lambda
       ((g$continuation$19472$1S&e0X g$operands$19473$1S&e0X)
        (cons g$continuation$19472$1S&e0X g$operands$19473$1S&e0X))))
   (g$make-conditional$19302$1S&e0X
     g$make-conditional$19567$1S&e0X
     (case-lambda
       ((g$condition$19474$1S&e0X
          g$consequent$19475$1S&e0X
          g$alternative$19476$1S&e0X)
        (list
          'if
          g$condition$19474$1S&e0X
          g$consequent$19475$1S&e0X
          g$alternative$19476$1S&e0X))))
   (g$make-conditional-join$19303$1S&e0X
     g$make-conditional-join$19568$1S&e0X
     (case-lambda
       ((g$continuation$19477$1S&e0X g$constructor$19478$1S&e0X)
        ((case-lambda
           ((g$variable$19479$1S&e0X)
            (g$make-let$19304$1S&e0X
              (list g$variable$19479$1S&e0X)
              (list g$continuation$19477$1S&e0X)
              (g$constructor$19478$1S&e0X g$variable$19479$1S&e0X))))
         (g$generate-variable$19308$1S&e0X 'J)))))
   (g$make-let$19304$1S&e0X
     g$make-let$19569$1S&e0X
     (case-lambda
       ((g$variables$19480$1S&e0X
          g$expressions$19481$1S&e0X
          g$body$19482$1S&e0X)
        (cons
          (list
            'case-lambda
            (list g$variables$19480$1S&e0X g$body$19482$1S&e0X))
          g$expressions$19481$1S&e0X))))
   (g$make-assignment$19305$1S&e0X
     g$make-assignment$19570$1S&e0X
     (case-lambda
       ((g$location$19483$1S&e0X
          g$operand$19484$1S&e0X
          g$expression$19485$1S&e0X)
        (list
          'begin
          (list 'set! g$location$19483$1S&e0X g$operand$19484$1S&e0X)
          g$expression$19485$1S&e0X))))
   (g$make-declaration$19306$1S&e0X
     g$make-declaration$19571$1S&e0X
     (case-lambda
       ((g$location$19486$1S&e0X
          g$operand$19487$1S&e0X
          g$expression$19488$1S&e0X)
        (list
          'begin
          (list 'define g$location$19486$1S&e0X g$operand$19487$1S&e0X)
          g$expression$19488$1S&e0X))))
   (g$make-truth-test$19307$1S&e0X
     g$make-truth-test$19572$1S&e0X
     (case-lambda ((g$operand$19489$1S&e0X) g$operand$19489$1S&e0X)))
   (g$generate-variable$19308$1S&e0X
     g$generate-variable$19573$1S&e0X
     (case-lambda ((g$name$19490$1S&e0X) (gensym g$name$19490$1S&e0X))))
   (g$parse$19309$1S&e0X
     g$parse$19574$1S&e0X
     (case-lambda
       ((g$x$19491$1S&e0X)
        (if (pair? g$x$19491$1S&e0X)
          ((case-lambda
             ((g$t$19492$1S&e0X)
              (if (eqv? g$t$19492$1S&e0X 'quote)
                (g$cps/generate-literal$19264$1S&e0X
                  (g$cadr$12684$1S&e0X g$x$19491$1S&e0X))
                (if (eqv? g$t$19492$1S&e0X 'if)
                  (g$cps/generate-conditional$19268$1S&e0X
                    (g$parse$19309$1S&e0X
                      (g$cadr$12684$1S&e0X g$x$19491$1S&e0X))
                    (g$parse$19309$1S&e0X
                      (g$caddr$12690$1S&e0X g$x$19491$1S&e0X))
                    (g$parse$19309$1S&e0X
                      (g$cadddr$12702$1S&e0X g$x$19491$1S&e0X)))
                  (if (eqv? g$t$19492$1S&e0X 'case-lambda)
                    ((case-lambda
                       ((g$d$19493$1S&e0X)
                        (g$cps/generate-abstractions$19266$1S&e0X
                          (g$map$11833$1S&e0X car g$d$19493$1S&e0X)
                          (g$map$11833$1S&e0X
                            (case-lambda
                              ((g$e$19494$1S&e0X)
                               (g$cps/generate-sequence$19272$1S&e0X
                                 (g$map$11833$1S&e0X
                                   g$parse$19309$1S&e0X
                                   (cdr g$e$19494$1S&e0X)))))
                            g$d$19493$1S&e0X))))
                     (cdr g$x$19491$1S&e0X))
                    (if (eqv? g$t$19492$1S&e0X 'letrec)
                      ((case-lambda
                         ((g$bindings$19495$1S&e0X g$body*$19496$1S&e0X)
                          ((case-lambda
                             ((g$lhs*$19497$1S&e0X g$rhs*$19498$1S&e0X)
                              ((case-lambda
                                 ((g$t*$19499$1S&e0X
                                    g$tmps$19500$1S&e0X)
                                  ((case-lambda
                                     ((g$s*$19501$1S&e0X)
                                      (g$parse$19309$1S&e0X
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$19497$1S&e0X
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$19499$1S&e0X
                                                    (append
                                                      g$s*$19501$1S&e0X
                                                      g$body*$19496$1S&e0X)))
                                                g$rhs*$19498$1S&e0X)))
                                          g$tmps$19500$1S&e0X))))
                                   (g$map$11833$1S&e0X
                                     (case-lambda
                                       ((g$i$19502$1S&e0X
                                          g$t$19503$1S&e0X)
                                        (list
                                          'set!
                                          g$i$19502$1S&e0X
                                          g$t$19503$1S&e0X)))
                                     g$lhs*$19497$1S&e0X
                                     g$t*$19499$1S&e0X))))
                               (g$map$11833$1S&e0X
                                 gensym
                                 g$lhs*$19497$1S&e0X)
                               (g$map$11833$1S&e0X
                                 (case-lambda
                                   ((g$x$19504$1S&e0X) 'uninitialized))
                                 g$lhs*$19497$1S&e0X))))
                           (g$map$11833$1S&e0X
                             car
                             g$bindings$19495$1S&e0X)
                           (g$map$11833$1S&e0X
                             g$cadr$12684$1S&e0X
                             g$bindings$19495$1S&e0X))))
                       (g$cadr$12684$1S&e0X g$x$19491$1S&e0X)
                       (g$cddr$12686$1S&e0X g$x$19491$1S&e0X))
                      (if (eqv? g$t$19492$1S&e0X 'letrec*)
                        ((case-lambda
                           ((g$bindings$19505$1S&e0X
                              g$body*$19506$1S&e0X)
                            ((case-lambda
                               ((g$lhs*$19507$1S&e0X
                                  g$rhs*$19508$1S&e0X)
                                (g$cps/generate-recursive*-bind$19270$1S&e0X
                                  g$lhs*$19507$1S&e0X
                                  (g$map$11833$1S&e0X
                                    g$parse$19309$1S&e0X
                                    g$rhs*$19508$1S&e0X)
                                  (g$parse$19309$1S&e0X
                                    (cons
                                      'begin
                                      g$body*$19506$1S&e0X)))))
                             (g$map$11833$1S&e0X
                               car
                               g$bindings$19505$1S&e0X)
                             (g$map$11833$1S&e0X
                               g$cadr$12684$1S&e0X
                               g$bindings$19505$1S&e0X))))
                         (g$cadr$12684$1S&e0X g$x$19491$1S&e0X)
                         (g$cddr$12686$1S&e0X g$x$19491$1S&e0X))
                        (if (eqv? g$t$19492$1S&e0X 'library-letrec*)
                          ((case-lambda
                             ((g$name$19509$1S&e0X g$x$19510$1S&e0X)
                              ((case-lambda
                                 ((g$bindings$19511$1S&e0X
                                    g$body*$19512$1S&e0X)
                                  ((case-lambda
                                     ((g$lhs*$19513$1S&e0X
                                        g$lhs**$19514$1S&e0X
                                        g$rhs*$19515$1S&e0X)
                                      (g$cps/generate-recursive*-library-bind$19271$1S&e0X
                                        g$name$19509$1S&e0X
                                        g$lhs*$19513$1S&e0X
                                        g$lhs**$19514$1S&e0X
                                        (g$map$11833$1S&e0X
                                          g$parse$19309$1S&e0X
                                          g$rhs*$19515$1S&e0X)
                                        (g$parse$19309$1S&e0X
                                          (cons
                                            'begin
                                            g$body*$19512$1S&e0X)))))
                                   (g$map$11833$1S&e0X
                                     car
                                     g$bindings$19511$1S&e0X)
                                   (g$map$11833$1S&e0X
                                     g$cadr$12684$1S&e0X
                                     g$bindings$19511$1S&e0X)
                                   (g$map$11833$1S&e0X
                                     g$caddr$12690$1S&e0X
                                     g$bindings$19511$1S&e0X))))
                               (g$cadr$12684$1S&e0X g$x$19510$1S&e0X)
                               (g$cddr$12686$1S&e0X g$x$19510$1S&e0X))))
                           (g$cadr$12684$1S&e0X g$x$19491$1S&e0X)
                           (cdr g$x$19491$1S&e0X))
                          (if (eqv? g$t$19492$1S&e0X 'begin)
                            (g$cps/generate-sequence$19272$1S&e0X
                              (g$map$11833$1S&e0X
                                g$parse$19309$1S&e0X
                                (cdr g$x$19491$1S&e0X)))
                            (if (eqv? g$t$19492$1S&e0X 'set!)
                              (g$cps/generate-assignment$19273$1S&e0X
                                (g$cadr$12684$1S&e0X g$x$19491$1S&e0X)
                                (g$parse$19309$1S&e0X
                                  (g$caddr$12690$1S&e0X
                                    g$x$19491$1S&e0X)))
                              (if (eqv? g$t$19492$1S&e0X 'define)
                                (g$cps/generate-declaration$19274$1S&e0X
                                  (g$cadr$12684$1S&e0X g$x$19491$1S&e0X)
                                  (g$parse$19309$1S&e0X
                                    (g$caddr$12690$1S&e0X
                                      g$x$19491$1S&e0X)))
                                (begin
                                  '#f
                                  (if (list? g$x$19491$1S&e0X)
                                    (g$cps/generate-combination$19275$1S&e0X
                                      (g$parse$19309$1S&e0X
                                        (car g$x$19491$1S&e0X))
                                      (g$map$11833$1S&e0X
                                        g$parse$19309$1S&e0X
                                        (cdr g$x$19491$1S&e0X)))
                                    (error
                                      'rewrite
                                      '"invalid form ~s ~s"
                                      g$x$19491$1S&e0X
                                      (list?
                                        g$x$19491$1S&e0X)))))))))))))))
           (car g$x$19491$1S&e0X))
          (if (g$symbol?$12665$1S&e0X g$x$19491$1S&e0X)
            (g$cps/generate-reference$19263$1S&e0X g$x$19491$1S&e0X)
            (begin
              '#f
              (g$cps/generate-literal$19264$1S&e0X
                g$x$19491$1S&e0X)))))))
   (g$starts-with?$19310$1S&e0X
     g$starts-with?$19575$1S&e0X
     (case-lambda
       ((g$str$19516$1S&e0X g$sub$19517$1S&e0X)
        (clr-call-internal
          'system.string
          'startswith
          g$str$19516$1S&e0X
          g$sub$19517$1S&e0X))))
   (g$ends-with?$19311$1S&e0X
     g$ends-with?$19576$1S&e0X
     (case-lambda
       ((g$str$19518$1S&e0X g$sub$19519$1S&e0X)
        (clr-call-internal
          'system.string
          'endswith
          g$str$19518$1S&e0X
          g$sub$19519$1S&e0X))))
   (g$clr-generator?$19312$1S&e0X
     g$clr-generator?$19577$1S&e0X
     (case-lambda
       ((g$o$19520$1S&e0X)
        (if (g$symbol?$12665$1S&e0X g$o$19520$1S&e0X)
          (begin
            '#f
            ((case-lambda
               ((g$o$19521$1S&e0X)
                (if (g$starts-with?$19310$1S&e0X
                      g$o$19521$1S&e0X
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$19311$1S&e0X
                      g$o$19521$1S&e0X
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$19520$1S&e0X)))
          '#f))))
   (g$fix-primitives$19313$1S&e0X
     g$fix-primitives$19578$1S&e0X
     (case-lambda
       ((g$e$19522$1S&e0X)
        (if (if (pair? g$e$19522$1S&e0X)
              (begin '#f (list? g$e$19522$1S&e0X))
              '#f)
          ((case-lambda
             ((g$o$19523$1S&e0X)
              (if (eq? g$o$19523$1S&e0X 'quote)
                g$e$19522$1S&e0X
                (if (begin
                      '#f
                      (g$clr-generator?$19312$1S&e0X g$o$19523$1S&e0X))
                  (if (pair? (cdr g$e$19522$1S&e0X))
                    (list
                      (g$fix-primitives$19313$1S&e0X
                        (g$cadr$12684$1S&e0X g$e$19522$1S&e0X))
                      (cons
                        g$o$19523$1S&e0X
                        (g$map$11833$1S&e0X
                          g$fix-primitives$19313$1S&e0X
                          (g$cddr$12686$1S&e0X g$e$19522$1S&e0X))))
                    g$e$19522$1S&e0X)
                  (begin
                    '#f
                    (cons
                      (g$fix-primitives$19313$1S&e0X g$o$19523$1S&e0X)
                      (g$map$11833$1S&e0X
                        g$fix-primitives$19313$1S&e0X
                        (cdr g$e$19522$1S&e0X))))))))
           (car g$e$19522$1S&e0X))
          g$e$19522$1S&e0X))))
   (g$parse->cps$19314$1S&e0X
     g$parse->cps$19579$1S&e0X
     (case-lambda
       ((g$e$19524$1S&e0X g$var$19525$1S&e0X)
        ((g$parse$19309$1S&e0X g$e$19524$1S&e0X)
         (g$variable-continuator$19280$1S&e0X g$var$19525$1S&e0X)))))
   (g$convert->cps$19315$1S&e0X
     g$convert->cps$19580$1S&e0X
     (case-lambda
       ((g$e$19526$1S&e0X g$var$19527$1S&e0X)
        (g$fix-primitives$19313$1S&e0X
          (g$parse->cps$19314$1S&e0X
            g$e$19526$1S&e0X
            g$var$19527$1S&e0X))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$19581$1S&e0X
     g$current-primitive-locations$19626$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda ((g$x$19587$1S&e0X) '#f))
       (case-lambda
         ((g$p$19588$1S&e0X)
          (begin
            (if (not (g$procedure?$12667$1S&e0X g$p$19588$1S&e0X))
              (g$assertion-error$24393$1S&e0X
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$19588$1S&e0X)))))
   (g$mutable?$19582$1S&e0X
     g$mutable?$19627$1S&e0X
     (case-lambda
       ((g$x$19589$1S&e0X)
        (letrec* ((g$simple?$19590$1S&e0X
                    (case-lambda
                      ((g$x$19591$1S&e0X)
                       ((case-lambda
                          ((g$t$19592$1S&e0X)
                           (if g$t$19592$1S&e0X
                             g$t$19592$1S&e0X
                             ((case-lambda
                                ((g$t$19593$1S&e0X)
                                 (if g$t$19593$1S&e0X
                                   g$t$19593$1S&e0X
                                   ((case-lambda
                                      ((g$t$19594$1S&e0X)
                                       (if g$t$19594$1S&e0X
                                         g$t$19594$1S&e0X
                                         ((case-lambda
                                            ((g$t$19595$1S&e0X)
                                             (if g$t$19595$1S&e0X
                                               g$t$19595$1S&e0X
                                               ((case-lambda
                                                  ((g$t$19596$1S&e0X)
                                                   (if g$t$19596$1S&e0X
                                                     g$t$19596$1S&e0X
                                                     ((case-lambda
                                                        ((g$t$19597$1S&e0X)
                                                         (if g$t$19597$1S&e0X
                                                           g$t$19597$1S&e0X
                                                           (begin
                                                             '#f
                                                             (g$number?$13672$1S&e0X
                                                               g$x$19591$1S&e0X)))))
                                                      (g$bytevector?$12664$1S&e0X
                                                        g$x$19591$1S&e0X)))))
                                                (string?
                                                  g$x$19591$1S&e0X)))))
                                          (g$boolean?$12666$1S&e0X
                                            g$x$19591$1S&e0X)))))
                                    (g$symbol?$12665$1S&e0X
                                      g$x$19591$1S&e0X)))))
                              (g$char?$12662$1S&e0X
                                g$x$19591$1S&e0X)))))
                        (null? g$x$19591$1S&e0X))))))
          (not (g$simple?$19590$1S&e0X g$x$19589$1S&e0X))))))
   (g$rewriter$19583$1S&e0X
     g$rewriter$19628$1S&e0X
     (case-lambda
       ((g$quote-hack?$19598$1S&e0X)
        (letrec* ((g$f$19599$1S&e0X
                    (case-lambda
                      ((g$x$19600$1S&e0X)
                       (if (pair? g$x$19600$1S&e0X)
                         ((case-lambda
                            ((g$t$19601$1S&e0X)
                             (if (eqv? g$t$19601$1S&e0X 'quote)
                               (if (if g$quote-hack?$19598$1S&e0X
                                     (begin
                                       '#f
                                       (g$mutable?$19582$1S&e0X
                                         (g$cadr$12684$1S&e0X
                                           g$x$19600$1S&e0X)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$19602$1S&e0X)
                                     (begin
                                       (set-symbol-value!
                                         g$g$19602$1S&e0X
                                         (g$cadr$12684$1S&e0X
                                           g$x$19600$1S&e0X))
                                       g$g$19602$1S&e0X)))
                                  (gensym 'weak-temp))
                                 (begin '#f g$x$19600$1S&e0X))
                               (if (eqv? g$t$19601$1S&e0X 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$11833$1S&e0X
                                     (case-lambda
                                       ((g$x$19603$1S&e0X)
                                        (cons
                                          (car g$x$19603$1S&e0X)
                                          (g$map$11833$1S&e0X
                                            g$f$19599$1S&e0X
                                            (cdr g$x$19603$1S&e0X)))))
                                     (cdr g$x$19600$1S&e0X)))
                                 (if (eqv? g$t$19601$1S&e0X 'lambda)
                                   (g$cons*$11835$1S&e0X
                                     'lambda
                                     (g$cadr$12684$1S&e0X
                                       g$x$19600$1S&e0X)
                                     (g$map$11833$1S&e0X
                                       g$f$19599$1S&e0X
                                       (g$cddr$12686$1S&e0X
                                         g$x$19600$1S&e0X)))
                                   (if (eqv? g$t$19601$1S&e0X 'letrec)
                                     ((case-lambda
                                        ((g$bindings$19604$1S&e0X
                                           g$body*$19605$1S&e0X)
                                         ((case-lambda
                                            ((g$lhs*$19606$1S&e0X
                                               g$rhs*$19607$1S&e0X)
                                             (g$cons*$11835$1S&e0X
                                               'letrec
                                               (g$map$11833$1S&e0X
                                                 list
                                                 g$lhs*$19606$1S&e0X
                                                 (g$map$11833$1S&e0X
                                                   g$f$19599$1S&e0X
                                                   g$rhs*$19607$1S&e0X))
                                               (g$map$11833$1S&e0X
                                                 g$f$19599$1S&e0X
                                                 g$body*$19605$1S&e0X))))
                                          (g$map$11833$1S&e0X
                                            car
                                            g$bindings$19604$1S&e0X)
                                          (g$map$11833$1S&e0X
                                            g$cadr$12684$1S&e0X
                                            g$bindings$19604$1S&e0X))))
                                      (g$cadr$12684$1S&e0X
                                        g$x$19600$1S&e0X)
                                      (g$cddr$12686$1S&e0X
                                        g$x$19600$1S&e0X))
                                     (if (eqv?
                                           g$t$19601$1S&e0X
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$19608$1S&e0X
                                             g$body*$19609$1S&e0X)
                                           ((case-lambda
                                              ((g$lhs*$19610$1S&e0X
                                                 g$rhs*$19611$1S&e0X)
                                               (g$cons*$11835$1S&e0X
                                                 'letrec*
                                                 (g$map$11833$1S&e0X
                                                   list
                                                   g$lhs*$19610$1S&e0X
                                                   (g$map$11833$1S&e0X
                                                     g$f$19599$1S&e0X
                                                     g$rhs*$19611$1S&e0X))
                                                 (g$map$11833$1S&e0X
                                                   g$f$19599$1S&e0X
                                                   g$body*$19609$1S&e0X))))
                                            (g$map$11833$1S&e0X
                                              car
                                              g$bindings$19608$1S&e0X)
                                            (g$map$11833$1S&e0X
                                              g$cadr$12684$1S&e0X
                                              g$bindings$19608$1S&e0X))))
                                        (g$cadr$12684$1S&e0X
                                          g$x$19600$1S&e0X)
                                        (g$cddr$12686$1S&e0X
                                          g$x$19600$1S&e0X))
                                       (if (eqv?
                                             g$t$19601$1S&e0X
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$19612$1S&e0X
                                               g$x$19613$1S&e0X)
                                             ((case-lambda
                                                ((g$bindings$19614$1S&e0X
                                                   g$body*$19615$1S&e0X)
                                                 ((case-lambda
                                                    ((g$lhs*$19616$1S&e0X
                                                       g$lhs**$19617$1S&e0X
                                                       g$rhs*$19618$1S&e0X)
                                                     (g$cons*$11835$1S&e0X
                                                       'library-letrec*
                                                       g$name$19612$1S&e0X
                                                       (g$map$11833$1S&e0X
                                                         list
                                                         g$lhs*$19616$1S&e0X
                                                         g$lhs**$19617$1S&e0X
                                                         (g$map$11833$1S&e0X
                                                           g$f$19599$1S&e0X
                                                           g$rhs*$19618$1S&e0X))
                                                       (g$map$11833$1S&e0X
                                                         g$f$19599$1S&e0X
                                                         g$body*$19615$1S&e0X))))
                                                  (g$map$11833$1S&e0X
                                                    car
                                                    g$bindings$19614$1S&e0X)
                                                  (g$map$11833$1S&e0X
                                                    g$cadr$12684$1S&e0X
                                                    g$bindings$19614$1S&e0X)
                                                  (g$map$11833$1S&e0X
                                                    g$caddr$12690$1S&e0X
                                                    g$bindings$19614$1S&e0X))))
                                              (g$cadr$12684$1S&e0X
                                                g$x$19613$1S&e0X)
                                              (g$cddr$12686$1S&e0X
                                                g$x$19613$1S&e0X))))
                                          (g$cadr$12684$1S&e0X
                                            g$x$19600$1S&e0X)
                                          (cdr g$x$19600$1S&e0X))
                                         (if (eqv?
                                               g$t$19601$1S&e0X
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$11833$1S&e0X
                                               g$f$19599$1S&e0X
                                               (cdr g$x$19600$1S&e0X)))
                                           (if (eqv?
                                                 g$t$19601$1S&e0X
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$12684$1S&e0X
                                                 g$x$19600$1S&e0X)
                                               (g$f$19599$1S&e0X
                                                 (g$caddr$12690$1S&e0X
                                                   g$x$19600$1S&e0X)))
                                             (if (eqv?
                                                   g$t$19601$1S&e0X
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$19619$1S&e0X)
                                                   ((case-lambda
                                                      ((g$t$19620$1S&e0X)
                                                       (if g$t$19620$1S&e0X
                                                         ((case-lambda
                                                            ((g$loc$19621$1S&e0X)
                                                             g$loc$19621$1S&e0X))
                                                          g$t$19620$1S&e0X)
                                                         (begin
                                                           '#f
                                                           g$op$19619$1S&e0X))))
                                                    ((g$current-primitive-locations$19581$1S&e0X)
                                                     g$op$19619$1S&e0X))))
                                                (g$cadr$12684$1S&e0X
                                                  g$x$19600$1S&e0X))
                                               (if (eqv?
                                                     g$t$19601$1S&e0X
                                                     'define)
                                                 g$x$19600$1S&e0X
                                                 (begin
                                                   '#f
                                                   (if (list?
                                                         g$x$19600$1S&e0X)
                                                     (g$map$11833$1S&e0X
                                                       g$f$19599$1S&e0X
                                                       g$x$19600$1S&e0X)
                                                     (error
                                                       'rewrite
                                                       '"invalid form ~s ~s"
                                                       g$x$19600$1S&e0X
                                                       (list?
                                                         g$x$19600$1S&e0X))))))))))))))))
                          (car g$x$19600$1S&e0X))
                         (begin '#f g$x$19600$1S&e0X))))))
          g$f$19599$1S&e0X))))
   (g$expanded->core$19584$1S&e0X
     g$expanded->core$19629$1S&e0X
     (case-lambda
       ((g$x$19622$1S&e0X)
        ((g$rewriter$19583$1S&e0X '#t) g$x$19622$1S&e0X))))
   (g$compile-core-expr$19585$1S&e0X
     g$compile-core-expr$19630$1S&e0X
     (case-lambda
       ((g$x$19623$1S&e0X)
        ((g$rewriter$19583$1S&e0X '#f) g$x$19623$1S&e0X))))
   (g$compile-core-expr-to-port$19586$1S&e0X
     g$compile-core-expr-to-port$19631$1S&e0X
     (case-lambda
       ((g$x$19624$1S&e0X g$p$19625$1S&e0X)
        (g$pretty-print$19262$1S&e0X
          ((g$rewriter$19583$1S&e0X '#f) g$x$19624$1S&e0X)
          g$p$19625$1S&e0X)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$19632$1S&e0X
     g$make-collection$19841$1S&e0X
     (case-lambda
       (()
        ((case-lambda
           ((g$set$19695$1S&e0X)
            (letrec* ((g$set-cons$19696$1S&e0X
                        (case-lambda
                          ((g$x$19700$1S&e0X g$ls$19701$1S&e0X)
                           (if (g$memq$11825$1S&e0X
                                 g$x$19700$1S&e0X
                                 g$ls$19701$1S&e0X)
                             g$ls$19701$1S&e0X
                             (begin
                               '#f
                               (cons
                                 g$x$19700$1S&e0X
                                 g$ls$19701$1S&e0X)))))))
              (case-lambda
                (() g$set$19695$1S&e0X)
                ((g$x$19697$1S&e0X)
                 (set! g$set$19695$1S&e0X
                   (g$set-cons$19696$1S&e0X
                     g$x$19697$1S&e0X
                     g$set$19695$1S&e0X)))
                ((g$x$19698$1S&e0X g$del?$19699$1S&e0X)
                 (if g$del?$19699$1S&e0X
                   (set! g$set$19695$1S&e0X
                     (g$remq$11840$1S&e0X
                       g$x$19698$1S&e0X
                       g$set$19695$1S&e0X))
                   (set! g$set$19695$1S&e0X
                     (g$set-cons$19696$1S&e0X
                       g$x$19698$1S&e0X
                       g$set$19695$1S&e0X))))))))
         '()))))
   (g$current-library-collection$19633$1S&e0X
     g$current-library-collection$19842$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (g$make-collection$19632$1S&e0X)
       (case-lambda
         ((g$x$19702$1S&e0X)
          (begin
            (if (not (g$procedure?$12667$1S&e0X g$x$19702$1S&e0X))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$19702$1S&e0X)
              (void))
            g$x$19702$1S&e0X)))))
   (g$9549$19634$1S&e0X
     g$9549$19843$1S&e0X
     (make-record-type-descriptor
       'library
       '#f
       'g$9552$1S&e0X
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9551$19635$1S&e0X g$9551$19844$1S&e0X '#f)
   (g$9550$19636$1S&e0X
     g$9550$19845$1S&e0X
     (make-record-constructor-descriptor
       g$9549$19634$1S&e0X
       '#f
       g$9551$19635$1S&e0X))
   (g$library?$19639$1S&e0X
     g$library?$19846$1S&e0X
     (record-predicate g$9549$19634$1S&e0X))
   (g$make-library$19640$1S&e0X
     g$make-library$19847$1S&e0X
     (record-constructor g$9550$19636$1S&e0X))
   (g$library-id$19641$1S&e0X
     g$library-id$19848$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '0))
   (g$library-name$19642$1S&e0X
     g$library-name$19849$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '1))
   (g$library-version$19643$1S&e0X
     g$library-version$19850$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '2))
   (g$library-imp*$19644$1S&e0X
     g$library-imp*$19851$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '3))
   (g$library-vis*$19645$1S&e0X
     g$library-vis*$19852$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '4))
   (g$library-inv*$19646$1S&e0X
     g$library-inv*$19853$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '5))
   (g$library-subst$19647$1S&e0X
     g$library-subst$19854$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '6))
   (g$library-env$19648$1S&e0X
     g$library-env$19855$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '7))
   (g$library-visit-state$19649$1S&e0X
     g$library-visit-state$19856$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '8))
   (g$library-invoke-state$19650$1S&e0X
     g$library-invoke-state$19857$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '9))
   (g$library-visit-code$19651$1S&e0X
     g$library-visit-code$19858$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '10))
   (g$library-invoke-code$19652$1S&e0X
     g$library-invoke-code$19859$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '11))
   (g$library-visible?$19653$1S&e0X
     g$library-visible?$19860$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '12))
   (g$library-source-file-name$19654$1S&e0X
     g$library-source-file-name$19861$1S&e0X
     (record-accessor g$9549$19634$1S&e0X '13))
   (g$set-library-id!$19655$1S&e0X
     g$set-library-id!$19862$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '0))
   (g$set-library-name!$19656$1S&e0X
     g$set-library-name!$19863$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '1))
   (g$set-library-version!$19657$1S&e0X
     g$set-library-version!$19864$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '2))
   (g$set-library-imp*!$19658$1S&e0X
     g$set-library-imp*!$19865$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '3))
   (g$set-library-vis*!$19659$1S&e0X
     g$set-library-vis*!$19866$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '4))
   (g$set-library-inv*!$19660$1S&e0X
     g$set-library-inv*!$19867$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '5))
   (g$set-library-subst!$19661$1S&e0X
     g$set-library-subst!$19868$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '6))
   (g$set-library-env!$19662$1S&e0X
     g$set-library-env!$19869$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '7))
   (g$set-library-visit-state!$19663$1S&e0X
     g$set-library-visit-state!$19870$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '8))
   (g$set-library-invoke-state!$19664$1S&e0X
     g$set-library-invoke-state!$19871$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '9))
   (g$set-library-visit-code!$19665$1S&e0X
     g$set-library-visit-code!$19872$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '10))
   (g$set-library-invoke-code!$19666$1S&e0X
     g$set-library-invoke-code!$19873$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '11))
   (g$set-library-visible?!$19667$1S&e0X
     g$set-library-visible?!$19874$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '12))
   (g$set-library-source-file-name!$19668$1S&e0X
     g$set-library-source-file-name!$19875$1S&e0X
     (record-mutator g$9549$19634$1S&e0X '13))
   (g$rp$19669$1S&e0X
     g$rp$19876$1S&e0X
     (make-record-printer
       'library
       (case-lambda
         ((g$x$19703$1S&e0X g$p$19704$1S&e0X g$wr$19705$1S&e0X)
          (begin
            (if (not (g$library?$19639$1S&e0X g$x$19703$1S&e0X))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$18843$1S&e0X
                '"#<library ~s>"
                (if (null?
                      (g$library-version$19643$1S&e0X g$x$19703$1S&e0X))
                  (g$library-name$19642$1S&e0X g$x$19703$1S&e0X)
                  (append
                    (g$library-name$19642$1S&e0X g$x$19703$1S&e0X)
                    (list
                      (g$library-version$19643$1S&e0X
                        g$x$19703$1S&e0X)))))
              g$p$19704$1S&e0X))))))
   (g$find-dependencies$19670$1S&e0X
     g$find-dependencies$19877$1S&e0X
     (case-lambda
       ((g$ls$19706$1S&e0X)
        (if (null? g$ls$19706$1S&e0X)
          '()
          (begin
            '#f
            (assertion-violation
              'find-dependencies
              '"cannot handle deps yet"))))))
   (g$find-library-by$19671$1S&e0X
     g$find-library-by$19878$1S&e0X
     (case-lambda
       ((g$pred$19707$1S&e0X)
        ((letrec ((g$f$19708$1S&e0X
                    (case-lambda
                      ((g$ls$19709$1S&e0X)
                       (if (null? g$ls$19709$1S&e0X)
                         '#f
                         (if (g$pred$19707$1S&e0X
                               (car g$ls$19709$1S&e0X))
                           (car g$ls$19709$1S&e0X)
                           (begin
                             '#f
                             (g$f$19708$1S&e0X
                               (cdr g$ls$19709$1S&e0X)))))))))
           g$f$19708$1S&e0X)
         ((g$current-library-collection$19633$1S&e0X))))))
   (g$library-path$19672$1S&e0X
     g$library-path$19879$1S&e0X
     (g$make-parameter$19052$1S&e0X
       '(".")
       (case-lambda
         ((g$x$19710$1S&e0X)
          (if (if (list? g$x$19710$1S&e0X)
                (begin
                  '#f
                  (g$for-all$11831$1S&e0X string? g$x$19710$1S&e0X))
                '#f)
            (g$map$11833$1S&e0X
              (case-lambda ((g$x$19711$1S&e0X) g$x$19711$1S&e0X))
              g$x$19710$1S&e0X)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$19710$1S&e0X))))))
   (g$library-extensions$19673$1S&e0X
     g$library-extensions$19880$1S&e0X
     (g$make-parameter$19052$1S&e0X
       '(".sls" ".ss")
       (case-lambda
         ((g$x$19712$1S&e0X)
          (if (if (list? g$x$19712$1S&e0X)
                (begin
                  '#f
                  (g$for-all$11831$1S&e0X string? g$x$19712$1S&e0X))
                '#f)
            (g$map$11833$1S&e0X
              (case-lambda ((g$x$19713$1S&e0X) g$x$19713$1S&e0X))
              g$x$19712$1S&e0X)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$19712$1S&e0X))))))
   (g$library-name->file-name$19674$1S&e0X
     g$library-name->file-name$19881$1S&e0X
     (case-lambda
       ((g$x$19714$1S&e0X)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$18603$1S&e0X)))
          (case-lambda
            ((g$p$19717$1S&e0X g$extract$19718$1S&e0X)
             ((case-lambda
                ((g$extract$19719$1S&e0X g$p$19720$1S&e0X)
                 (letrec* ((g$display-hex$19721$1S&e0X
                             (case-lambda
                               ((g$n$19729$1S&e0X)
                                (if (g$<=$13696$1S&e0X
                                      '0
                                      g$n$19729$1S&e0X
                                      '9)
                                  (display
                                    g$n$19729$1S&e0X
                                    g$p$19720$1S&e0X)
                                  (begin
                                    '#f
                                    (display
                                      (integer->char
                                        (+ (char->integer '#\A)
                                           (- g$n$19729$1S&e0X '10)))
                                      g$p$19720$1S&e0X)))))))
                   (begin
                     ((letrec ((g$f$19722$1S&e0X
                                 (case-lambda
                                   ((g$ls$19723$1S&e0X)
                                    (if (not (null? g$ls$19723$1S&e0X))
                                      (begin
                                        (display '"/" g$p$19720$1S&e0X)
                                        (g$for-each$11834$1S&e0X
                                          (case-lambda
                                            ((g$c$19724$1S&e0X)
                                             (if ((case-lambda
                                                    ((g$t$19725$1S&e0X)
                                                     (if g$t$19725$1S&e0X
                                                       g$t$19725$1S&e0X
                                                       ((case-lambda
                                                          ((g$t$19726$1S&e0X)
                                                           (if g$t$19726$1S&e0X
                                                             g$t$19726$1S&e0X
                                                             ((case-lambda
                                                                ((g$t$19727$1S&e0X)
                                                                 (if g$t$19727$1S&e0X
                                                                   g$t$19727$1S&e0X
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$11826$1S&e0X
                                                                       g$c$19724$1S&e0X
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$12727$1S&e0X
                                                                '#\0
                                                                g$c$19724$1S&e0X
                                                                '#\9)))))
                                                        (g$char<=?$12727$1S&e0X
                                                          '#\A
                                                          g$c$19724$1S&e0X
                                                          '#\Z)))))
                                                  (g$char<=?$12727$1S&e0X
                                                    '#\a
                                                    g$c$19724$1S&e0X
                                                    '#\z))
                                               (display
                                                 g$c$19724$1S&e0X
                                                 g$p$19720$1S&e0X)
                                               (begin
                                                 '#f
                                                 (display
                                                   '"%"
                                                   g$p$19720$1S&e0X)
                                                 ((case-lambda
                                                    ((g$n$19728$1S&e0X)
                                                     (begin
                                                       (g$display-hex$19721$1S&e0X
                                                         (g$quotient$14447$1S&e0X
                                                           g$n$19728$1S&e0X
                                                           '16))
                                                       (g$display-hex$19721$1S&e0X
                                                         (g$remainder$14448$1S&e0X
                                                           g$n$19728$1S&e0X
                                                           '16)))))
                                                  (char->integer
                                                    g$c$19724$1S&e0X))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$19723$1S&e0X))))
                                        (g$f$19722$1S&e0X
                                          (cdr g$ls$19723$1S&e0X)))
                                      (void))))))
                        g$f$19722$1S&e0X)
                      g$x$19714$1S&e0X)
                     (g$extract$19719$1S&e0X)))))
              g$extract$19718$1S&e0X
              g$p$19717$1S&e0X)))))))
   (g$file-locator$19675$1S&e0X
     g$file-locator$19882$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda
         ((g$x$19730$1S&e0X)
          ((case-lambda
             ((g$str$19731$1S&e0X)
              ((letrec ((g$f$19732$1S&e0X
                          (case-lambda
                            ((g$ls$19733$1S&e0X
                               g$exts$19734$1S&e0X
                               g$failed-list$19735$1S&e0X)
                             (if (null? g$ls$19733$1S&e0X)
                               (g$file-locator-resolution-error$19050$1S&e0X
                                 g$x$19730$1S&e0X
                                 (g$reverse$12682$1S&e0X
                                   g$failed-list$19735$1S&e0X)
                                 ((case-lambda
                                    ((g$ls$19736$1S&e0X)
                                     (if (null? g$ls$19736$1S&e0X)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$19736$1S&e0X))))
                                  (g$external-pending-libraries$19681$1S&e0X)))
                               (if (null? g$exts$19734$1S&e0X)
                                 (g$f$19732$1S&e0X
                                   (cdr g$ls$19733$1S&e0X)
                                   (g$library-extensions$19673$1S&e0X)
                                   g$failed-list$19735$1S&e0X)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$name$19737$1S&e0X)
                                       (if (g$file-exists?$12802$1S&e0X
                                             g$name$19737$1S&e0X)
                                         g$name$19737$1S&e0X
                                         (g$f$19732$1S&e0X
                                           g$ls$19733$1S&e0X
                                           (cdr g$exts$19734$1S&e0X)
                                           (cons
                                             g$name$19737$1S&e0X
                                             g$failed-list$19735$1S&e0X)))))
                                    (string-append
                                      (car g$ls$19733$1S&e0X)
                                      g$str$19731$1S&e0X
                                      (car g$exts$19734$1S&e0X))))))))))
                 g$f$19732$1S&e0X)
               (g$library-path$19672$1S&e0X)
               (g$library-extensions$19673$1S&e0X)
               '())))
           (g$library-name->file-name$19674$1S&e0X g$x$19730$1S&e0X))))
       (case-lambda
         ((g$f$19738$1S&e0X)
          (if (g$procedure?$12667$1S&e0X g$f$19738$1S&e0X)
            g$f$19738$1S&e0X
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$19738$1S&e0X))))))
   (g$serialize-all$19676$1S&e0X
     g$serialize-all$19883$1S&e0X
     (case-lambda
       ((g$serialize$19739$1S&e0X g$compile$19740$1S&e0X)
        (letrec* ((g$library-desc$19741$1S&e0X
                    (case-lambda
                      ((g$x$19743$1S&e0X)
                       (list
                         (g$library-id$19641$1S&e0X g$x$19743$1S&e0X)
                         (g$library-name$19642$1S&e0X
                           g$x$19743$1S&e0X))))))
          (g$for-each$11834$1S&e0X
            (case-lambda
              ((g$x$19742$1S&e0X)
               (if (g$library-source-file-name$19654$1S&e0X
                     g$x$19742$1S&e0X)
                 (g$serialize$19739$1S&e0X
                   (g$library-source-file-name$19654$1S&e0X
                     g$x$19742$1S&e0X)
                   (list
                     (g$library-id$19641$1S&e0X g$x$19742$1S&e0X)
                     (g$library-name$19642$1S&e0X g$x$19742$1S&e0X)
                     (g$library-version$19643$1S&e0X g$x$19742$1S&e0X)
                     (g$map$11833$1S&e0X
                       g$library-desc$19741$1S&e0X
                       (g$library-imp*$19644$1S&e0X g$x$19742$1S&e0X))
                     (g$map$11833$1S&e0X
                       g$library-desc$19741$1S&e0X
                       (g$library-vis*$19645$1S&e0X g$x$19742$1S&e0X))
                     (g$map$11833$1S&e0X
                       g$library-desc$19741$1S&e0X
                       (g$library-inv*$19646$1S&e0X g$x$19742$1S&e0X))
                     (g$library-subst$19647$1S&e0X g$x$19742$1S&e0X)
                     (g$library-env$19648$1S&e0X g$x$19742$1S&e0X)
                     (g$compile$19740$1S&e0X
                       (g$library-visit-code$19651$1S&e0X
                         g$x$19742$1S&e0X))
                     (g$compile$19740$1S&e0X
                       (g$library-invoke-code$19652$1S&e0X
                         g$x$19742$1S&e0X))
                     (g$library-visible?$19653$1S&e0X
                       g$x$19742$1S&e0X)))
                 (void))))
            ((g$current-library-collection$19633$1S&e0X)))))))
   (g$current-precompiled-library-loader$19677$1S&e0X
     g$current-precompiled-library-loader$19884$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda ((g$filename$19744$1S&e0X g$sk$19745$1S&e0X) '#f))))
   (g$try-load-from-file$19678$1S&e0X
     g$try-load-from-file$19885$1S&e0X
     (case-lambda
       ((g$filename$19746$1S&e0X)
        ((g$current-precompiled-library-loader$19677$1S&e0X)
         g$filename$19746$1S&e0X
         (case-lambda
           ((g$id$19747$1S&e0X
              g$name$19748$1S&e0X
              g$ver$19749$1S&e0X
              g$imp*$19750$1S&e0X
              g$vis*$19751$1S&e0X
              g$inv*$19752$1S&e0X
              g$exp-subst$19753$1S&e0X
              g$exp-env$19754$1S&e0X
              g$visit-proc$19755$1S&e0X
              g$invoke-proc$19756$1S&e0X
              g$visible?$19757$1S&e0X)
            ((letrec ((g$f$19758$1S&e0X
                        (case-lambda
                          ((g$deps$19759$1S&e0X)
                           (if (null? g$deps$19759$1S&e0X)
                             (begin
                               (g$install-library$19688$1S&e0X
                                 g$id$19747$1S&e0X
                                 g$name$19748$1S&e0X
                                 g$ver$19749$1S&e0X
                                 g$imp*$19750$1S&e0X
                                 g$vis*$19751$1S&e0X
                                 g$inv*$19752$1S&e0X
                                 g$exp-subst$19753$1S&e0X
                                 g$exp-env$19754$1S&e0X
                                 g$visit-proc$19755$1S&e0X
                                 g$invoke-proc$19756$1S&e0X
                                 '#f
                                 '#f
                                 g$visible?$19757$1S&e0X
                                 '#f)
                               '#t)
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$d$19760$1S&e0X)
                                   ((case-lambda
                                      ((g$label$19761$1S&e0X
                                         g$dname$19762$1S&e0X)
                                       ((case-lambda
                                          ((g$l$19763$1S&e0X)
                                           (if (if (g$library?$19639$1S&e0X
                                                     g$l$19763$1S&e0X)
                                                 (begin
                                                   '#f
                                                   (eq? g$label$19761$1S&e0X
                                                        (g$library-id$19641$1S&e0X
                                                          g$l$19763$1S&e0X)))
                                                 '#f)
                                             (g$f$19758$1S&e0X
                                               (cdr g$deps$19759$1S&e0X))
                                             (begin
                                               '#f
                                               (g$library-version-mismatch-warning$19049$1S&e0X
                                                 g$name$19748$1S&e0X
                                                 g$dname$19762$1S&e0X
                                                 g$filename$19746$1S&e0X)
                                               '#f))))
                                        (g$find-library-by-name$19683$1S&e0X
                                          g$dname$19762$1S&e0X))))
                                    (car g$d$19760$1S&e0X)
                                    (g$cadr$12684$1S&e0X
                                      g$d$19760$1S&e0X))))
                                (car g$deps$19759$1S&e0X))))))))
               g$f$19758$1S&e0X)
             (append
               g$imp*$19750$1S&e0X
               g$vis*$19751$1S&e0X
               g$inv*$19752$1S&e0X)))
           (g$others$19764$1S&e0X '#f))))))
   (g$library-loader$19679$1S&e0X
     g$library-loader$19886$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda
         ((g$x$19765$1S&e0X)
          ((case-lambda
             ((g$file-name$19766$1S&e0X)
              (if (not g$file-name$19766$1S&e0X)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$19765$1S&e0X)
                ((case-lambda
                   ((g$t$19767$1S&e0X)
                    (if g$t$19767$1S&e0X
                      g$t$19767$1S&e0X
                      (begin
                        '#f
                        (begin
                          '#f
                          ((g$current-library-expander$19680$1S&e0X)
                           (g$read-library-source-file$19051$1S&e0X
                             g$file-name$19766$1S&e0X)
                           g$file-name$19766$1S&e0X
                           (case-lambda
                             ((g$name$19768$1S&e0X)
                              (if (not (equal?
                                         g$name$19768$1S&e0X
                                         g$x$19765$1S&e0X))
                                (assertion-violation
                                  'import
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$open-string-output-port$18603$1S&e0X)))
                                    (case-lambda
                                      ((g$p$19771$1S&e0X
                                         g$e$19772$1S&e0X)
                                       ((case-lambda
                                          ((g$e$19773$1S&e0X
                                             g$p$19774$1S&e0X)
                                           (begin
                                             (display
                                               '"expected to find library "
                                               g$p$19774$1S&e0X)
                                             (write
                                               g$x$19765$1S&e0X
                                               g$p$19774$1S&e0X)
                                             (display
                                               '" in file "
                                               g$p$19774$1S&e0X)
                                             (display
                                               g$file-name$19766$1S&e0X
                                               g$p$19774$1S&e0X)
                                             (display
                                               '", found "
                                               g$p$19774$1S&e0X)
                                             (write
                                               g$name$19768$1S&e0X
                                               g$p$19774$1S&e0X)
                                             (display
                                               '" instead"
                                               g$p$19774$1S&e0X)
                                             (g$e$19773$1S&e0X))))
                                        g$e$19772$1S&e0X
                                        g$p$19771$1S&e0X)))))
                                (void))))))))))
                 (g$try-load-from-file$19678$1S&e0X
                   g$file-name$19766$1S&e0X)))))
           ((g$file-locator$19675$1S&e0X) g$x$19765$1S&e0X))))
       (case-lambda
         ((g$f$19775$1S&e0X)
          (if (g$procedure?$12667$1S&e0X g$f$19775$1S&e0X)
            g$f$19775$1S&e0X
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$19775$1S&e0X))))))
   (g$current-library-expander$19680$1S&e0X
     g$current-library-expander$19887$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda
         ((g$x$19776$1S&e0X)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$19777$1S&e0X)
          (if (g$procedure?$12667$1S&e0X g$f$19777$1S&e0X)
            g$f$19777$1S&e0X
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$19777$1S&e0X))))))
   (g$external-pending-libraries$19681$1S&e0X
     g$external-pending-libraries$19888$1S&e0X
     (g$make-parameter$19052$1S&e0X '()))
   (g$find-external-library$19682$1S&e0X
     g$find-external-library$19889$1S&e0X
     (case-lambda
       ((g$name$19778$1S&e0X)
        (begin
          (if (g$member$11827$1S&e0X
                g$name$19778$1S&e0X
                (g$external-pending-libraries$19681$1S&e0X))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$19778$1S&e0X)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$19781$1S&e0X
                g$external-pending-libraries$19782$1S&e0X)
              ((case-lambda
                 ((g$swap$19783$1S&e0X)
                  (dynamic-wind
                    g$swap$19783$1S&e0X
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$19679$1S&e0X)
                          g$name$19778$1S&e0X)
                         ((case-lambda
                            ((g$t$19784$1S&e0X)
                             (if g$t$19784$1S&e0X
                               g$t$19784$1S&e0X
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$19778$1S&e0X)))))
                          (g$find-library-by$19671$1S&e0X
                            (case-lambda
                              ((g$x$19785$1S&e0X)
                               (equal?
                                 (g$library-name$19642$1S&e0X
                                   g$x$19785$1S&e0X)
                                 g$name$19778$1S&e0X))))))))
                    g$swap$19783$1S&e0X)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$19786$1S&e0X)
                      (begin
                        (g$external-pending-libraries$19781$1S&e0X
                          g$external-pending-libraries$19782$1S&e0X)
                        (set! g$external-pending-libraries$19782$1S&e0X
                          g$t$19786$1S&e0X))))
                   (g$external-pending-libraries$19781$1S&e0X)))))))
           g$external-pending-libraries$19681$1S&e0X
           (cons
             g$name$19778$1S&e0X
             (g$external-pending-libraries$19681$1S&e0X)))))))
   (g$find-library-by-name$19683$1S&e0X
     g$find-library-by-name$19890$1S&e0X
     (case-lambda
       ((g$name$19787$1S&e0X)
        ((case-lambda
           ((g$t$19788$1S&e0X)
            (if g$t$19788$1S&e0X
              g$t$19788$1S&e0X
              (begin
                '#f
                (g$find-external-library$19682$1S&e0X
                  g$name$19787$1S&e0X)))))
         (g$find-library-by$19671$1S&e0X
           (case-lambda
             ((g$x$19789$1S&e0X)
              (equal?
                (g$library-name$19642$1S&e0X g$x$19789$1S&e0X)
                g$name$19787$1S&e0X))))))))
   (g$uninstall-library$19684$1S&e0X
     g$uninstall-library$19891$1S&e0X
     (case-lambda
       ((g$name$19790$1S&e0X g$err?$19791$1S&e0X)
        (letrec* ((g$who$19792$1S&e0X 'uninstall-library))
          ((case-lambda
             ((g$lib$19793$1S&e0X)
              (begin
                (if (if g$err?$19791$1S&e0X
                      (begin '#f (not g$lib$19793$1S&e0X))
                      '#f)
                  (assertion-violation
                    g$who$19792$1S&e0X
                    '"library not installed"
                    g$name$19790$1S&e0X)
                  (void))
                ((g$current-library-collection$19633$1S&e0X)
                 g$lib$19793$1S&e0X
                 '#t)
                (g$for-each$11834$1S&e0X
                  (case-lambda
                    ((g$x$19794$1S&e0X)
                     ((case-lambda
                        ((g$label$19795$1S&e0X g$binding$19796$1S&e0X)
                         (begin
                           (remove-location g$label$19795$1S&e0X)
                           (if (g$memq$11825$1S&e0X
                                 (car g$binding$19796$1S&e0X)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$19796$1S&e0X))
                             (void)))))
                      (car g$x$19794$1S&e0X)
                      (cdr g$x$19794$1S&e0X))))
                  (g$library-env$19648$1S&e0X g$lib$19793$1S&e0X)))))
           (g$find-library-by$19671$1S&e0X
             (case-lambda
               ((g$x$19797$1S&e0X)
                (equal?
                  (g$library-name$19642$1S&e0X g$x$19797$1S&e0X)
                  g$name$19790$1S&e0X)))))))
       ((g$name$19798$1S&e0X)
        (g$uninstall-library$19684$1S&e0X g$name$19798$1S&e0X '#t))))
   (g$library-exists?$19685$1S&e0X
     g$library-exists?$19892$1S&e0X
     (case-lambda
       ((g$name$19799$1S&e0X)
        (if (g$find-library-by$19671$1S&e0X
              (case-lambda
                ((g$x$19800$1S&e0X)
                 (equal?
                   (g$library-name$19642$1S&e0X g$x$19800$1S&e0X)
                   g$name$19799$1S&e0X))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$19686$1S&e0X
     g$find-library-by-spec/die$19893$1S&e0X
     (case-lambda
       ((g$spec$19801$1S&e0X)
        ((case-lambda
           ((g$id$19802$1S&e0X)
            ((case-lambda
               ((g$t$19803$1S&e0X)
                (if g$t$19803$1S&e0X
                  g$t$19803$1S&e0X
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$19801$1S&e0X)))))
             (g$find-library-by$19671$1S&e0X
               (case-lambda
                 ((g$x$19804$1S&e0X)
                  (eq? g$id$19802$1S&e0X
                       (g$library-id$19641$1S&e0X
                         g$x$19804$1S&e0X))))))))
         (car g$spec$19801$1S&e0X)))))
   (g$install-library-record$19687$1S&e0X
     g$install-library-record$19894$1S&e0X
     (case-lambda
       ((g$lib$19805$1S&e0X)
        (begin
          ((case-lambda
             ((g$exp-env$19806$1S&e0X)
              (g$for-each$11834$1S&e0X
                (case-lambda
                  ((g$x$19807$1S&e0X)
                   ((case-lambda
                      ((g$label$19808$1S&e0X g$binding$19809$1S&e0X)
                       ((case-lambda
                          ((g$binding$19810$1S&e0X)
                           (g$set-label-binding!$19055$1S&e0X
                             g$label$19808$1S&e0X
                             g$binding$19810$1S&e0X)))
                        ((case-lambda
                           ((g$t$19811$1S&e0X)
                            (if (eqv? g$t$19811$1S&e0X 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$19805$1S&e0X
                                  (cdr g$binding$19809$1S&e0X)))
                              (if (eqv? g$t$19811$1S&e0X 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$19805$1S&e0X
                                    (cdr g$binding$19809$1S&e0X)))
                                (if (eqv?
                                      g$t$19811$1S&e0X
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$19805$1S&e0X
                                      (cdr g$binding$19809$1S&e0X)))
                                  (if (eqv?
                                        g$t$19811$1S&e0X
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$19805$1S&e0X
                                        (cdr g$binding$19809$1S&e0X)))
                                    (begin
                                      '#f
                                      g$binding$19809$1S&e0X)))))))
                         (car g$binding$19809$1S&e0X)))))
                    (car g$x$19807$1S&e0X)
                    (cdr g$x$19807$1S&e0X))))
                g$exp-env$19806$1S&e0X)))
           (g$library-env$19648$1S&e0X g$lib$19805$1S&e0X))
          ((g$current-library-collection$19633$1S&e0X)
           g$lib$19805$1S&e0X)))))
   (g$install-library$19688$1S&e0X
     g$install-library$19895$1S&e0X
     (case-lambda
       ((g$id$19812$1S&e0X
          g$name$19813$1S&e0X
          g$ver$19814$1S&e0X
          g$imp*$19815$1S&e0X
          g$vis*$19816$1S&e0X
          g$inv*$19817$1S&e0X
          g$exp-subst$19818$1S&e0X
          g$exp-env$19819$1S&e0X
          g$visit-proc$19820$1S&e0X
          g$invoke-proc$19821$1S&e0X
          g$visit-code$19822$1S&e0X
          g$invoke-code$19823$1S&e0X
          g$visible?$19824$1S&e0X
          g$source-file-name$19825$1S&e0X)
        ((case-lambda
           ((g$imp-lib*$19826$1S&e0X
              g$vis-lib*$19827$1S&e0X
              g$inv-lib*$19828$1S&e0X)
            (begin
              (if (not (if (g$symbol?$12665$1S&e0X g$id$19812$1S&e0X)
                         (if (list? g$name$19813$1S&e0X)
                           (begin '#f (list? g$ver$19814$1S&e0X))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$19812$1S&e0X
                  g$name$19813$1S&e0X
                  g$ver$19814$1S&e0X)
                (void))
              (if (g$library-exists?$19685$1S&e0X g$name$19813$1S&e0X)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$19813$1S&e0X)
                (void))
              ((case-lambda
                 ((g$lib$19829$1S&e0X)
                  (g$install-library-record$19687$1S&e0X
                    g$lib$19829$1S&e0X)))
               (g$make-library$19640$1S&e0X
                 g$id$19812$1S&e0X
                 g$name$19813$1S&e0X
                 g$ver$19814$1S&e0X
                 g$imp-lib*$19826$1S&e0X
                 g$vis-lib*$19827$1S&e0X
                 g$inv-lib*$19828$1S&e0X
                 g$exp-subst$19818$1S&e0X
                 g$exp-env$19819$1S&e0X
                 g$visit-proc$19820$1S&e0X
                 g$invoke-proc$19821$1S&e0X
                 g$visit-code$19822$1S&e0X
                 g$invoke-code$19823$1S&e0X
                 g$visible?$19824$1S&e0X
                 g$source-file-name$19825$1S&e0X)))))
         (g$map$11833$1S&e0X
           g$find-library-by-spec/die$19686$1S&e0X
           g$imp*$19815$1S&e0X)
         (g$map$11833$1S&e0X
           g$find-library-by-spec/die$19686$1S&e0X
           g$vis*$19816$1S&e0X)
         (g$map$11833$1S&e0X
           g$find-library-by-spec/die$19686$1S&e0X
           g$inv*$19817$1S&e0X)))))
   (g$imported-label->binding$19689$1S&e0X
     g$imported-label->binding$19896$1S&e0X
     (case-lambda
       ((g$lab$19830$1S&e0X)
        (g$label-binding$19056$1S&e0X g$lab$19830$1S&e0X))))
   (g$invoke-library$19690$1S&e0X
     g$invoke-library$19897$1S&e0X
     (case-lambda
       ((g$lib$19831$1S&e0X)
        ((case-lambda
           ((g$invoke$19832$1S&e0X)
            (if (g$procedure?$12667$1S&e0X g$invoke$19832$1S&e0X)
              (begin
                (g$set-library-invoke-state!$19664$1S&e0X
                  g$lib$19831$1S&e0X
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$19831$1S&e0X))))
                (g$for-each$11834$1S&e0X
                  g$invoke-library$19690$1S&e0X
                  (g$library-inv*$19646$1S&e0X g$lib$19831$1S&e0X))
                (g$set-library-invoke-state!$19664$1S&e0X
                  g$lib$19831$1S&e0X
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$19831$1S&e0X))))
                (g$invoke$19832$1S&e0X)
                (g$set-library-invoke-state!$19664$1S&e0X
                  g$lib$19831$1S&e0X
                  '#t))
              (void))))
         (g$library-invoke-state$19650$1S&e0X g$lib$19831$1S&e0X)))))
   (g$visit-library$19691$1S&e0X
     g$visit-library$19898$1S&e0X
     (case-lambda
       ((g$lib$19833$1S&e0X)
        ((case-lambda
           ((g$visit$19834$1S&e0X)
            (if (g$procedure?$12667$1S&e0X g$visit$19834$1S&e0X)
              (begin
                (g$set-library-visit-state!$19663$1S&e0X
                  g$lib$19833$1S&e0X
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$19833$1S&e0X))))
                (g$for-each$11834$1S&e0X
                  g$invoke-library$19690$1S&e0X
                  (g$library-vis*$19645$1S&e0X g$lib$19833$1S&e0X))
                (g$set-library-visit-state!$19663$1S&e0X
                  g$lib$19833$1S&e0X
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$19833$1S&e0X))))
                (g$visit$19834$1S&e0X)
                (g$set-library-visit-state!$19663$1S&e0X
                  g$lib$19833$1S&e0X
                  '#t))
              (void))))
         (g$library-visit-state$19649$1S&e0X g$lib$19833$1S&e0X)))))
   (g$invoke-library-by-spec$19692$1S&e0X
     g$invoke-library-by-spec$19899$1S&e0X
     (case-lambda
       ((g$spec$19835$1S&e0X)
        (g$invoke-library$19690$1S&e0X
          (g$find-library-by-spec/die$19686$1S&e0X
            g$spec$19835$1S&e0X)))))
   (g$installed-libraries$19693$1S&e0X
     g$installed-libraries$19900$1S&e0X
     (case-lambda
       ((g$all?$19836$1S&e0X)
        ((letrec ((g$f$19837$1S&e0X
                    (case-lambda
                      ((g$ls$19838$1S&e0X)
                       (if (null? g$ls$19838$1S&e0X)
                         '()
                         (if ((case-lambda
                                ((g$t$19839$1S&e0X)
                                 (if g$t$19839$1S&e0X
                                   g$t$19839$1S&e0X
                                   (begin
                                     '#f
                                     (g$library-visible?$19653$1S&e0X
                                       (car g$ls$19838$1S&e0X))))))
                              g$all?$19836$1S&e0X)
                           (cons
                             (g$library-name$19642$1S&e0X
                               (car g$ls$19838$1S&e0X))
                             (g$f$19837$1S&e0X (cdr g$ls$19838$1S&e0X)))
                           (begin
                             '#f
                             (g$f$19837$1S&e0X
                               (cdr g$ls$19838$1S&e0X)))))))))
           g$f$19837$1S&e0X)
         ((g$current-library-collection$19633$1S&e0X))))
       (() (g$installed-libraries$19693$1S&e0X '#f))))
   (g$library-spec$19694$1S&e0X
     g$library-spec$19901$1S&e0X
     (case-lambda
       ((g$x$19840$1S&e0X)
        (begin
          (if (not (g$library?$19639$1S&e0X g$x$19840$1S&e0X))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$19840$1S&e0X)
            (void))
          (list
            (g$library-id$19641$1S&e0X g$x$19840$1S&e0X)
            (g$library-name$19642$1S&e0X g$x$19840$1S&e0X)
            (g$library-version$19643$1S&e0X g$x$19840$1S&e0X)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$19902$1S&e0X
     g$build-global-define$20112$1S&e0X
     (case-lambda ((g$x$20083$1S&e0X) (g$build-void$20079$1S&e0X))))
   (g$build-lambda$20013$1S&e0X
     g$build-lambda$20113$1S&e0X
     (case-lambda
       ((g$ae$20084$1S&e0X g$vars$20085$1S&e0X g$exp$20086$1S&e0X)
        (list
          'case-lambda
          (list g$vars$20085$1S&e0X g$exp$20086$1S&e0X)))))
   (g$build-case-lambda$20014$1S&e0X
     g$build-case-lambda$20114$1S&e0X
     (case-lambda
       ((g$ae$20087$1S&e0X g$vars*$20088$1S&e0X g$exp*$20089$1S&e0X)
        (cons
          'case-lambda
          (g$map$11833$1S&e0X
            list
            g$vars*$20088$1S&e0X
            g$exp*$20089$1S&e0X)))))
   (g$build-let$20015$1S&e0X
     g$build-let$20115$1S&e0X
     (case-lambda
       ((g$ae$20090$1S&e0X
          g$lhs*$20091$1S&e0X
          g$rhs*$20092$1S&e0X
          g$body$20093$1S&e0X)
        (cons
          (g$build-lambda$20013$1S&e0X
            g$ae$20090$1S&e0X
            g$lhs*$20091$1S&e0X
            g$body$20093$1S&e0X)
          g$rhs*$20092$1S&e0X))))
   (g$build-sequence$20078$1S&e0X
     g$build-sequence$20116$1S&e0X
     (case-lambda
       ((g$ae$20094$1S&e0X g$exps$20095$1S&e0X)
        ((letrec ((g$loop$20096$1S&e0X
                    (case-lambda
                      ((g$exps$20097$1S&e0X)
                       (if (null? (cdr g$exps$20097$1S&e0X))
                         (car g$exps$20097$1S&e0X)
                         (if (equal?
                               (car g$exps$20097$1S&e0X)
                               (g$build-void$20079$1S&e0X))
                           (g$loop$20096$1S&e0X
                             (cdr g$exps$20097$1S&e0X))
                           (cons 'begin g$exps$20097$1S&e0X)))))))
           g$loop$20096$1S&e0X)
         g$exps$20095$1S&e0X))))
   (g$build-void$20079$1S&e0X
     g$build-void$20117$1S&e0X
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$20080$1S&e0X
     g$build-letrec$20118$1S&e0X
     (case-lambda
       ((g$ae$20098$1S&e0X
          g$vars$20099$1S&e0X
          g$val-exps$20100$1S&e0X
          g$body-exp$20101$1S&e0X)
        (if (null? g$vars$20099$1S&e0X)
          g$body-exp$20101$1S&e0X
          (list
            'letrec
            (g$map$11833$1S&e0X
              list
              g$vars$20099$1S&e0X
              g$val-exps$20100$1S&e0X)
            g$body-exp$20101$1S&e0X)))))
   (g$build-letrec*$20081$1S&e0X
     g$build-letrec*$20119$1S&e0X
     (case-lambda
       ((g$ae$20102$1S&e0X
          g$vars$20103$1S&e0X
          g$val-exps$20104$1S&e0X
          g$body-exp$20105$1S&e0X)
        (if (null? g$vars$20103$1S&e0X)
          g$body-exp$20105$1S&e0X
          (begin
            '#f
            (list
              'letrec*
              (g$map$11833$1S&e0X
                list
                g$vars$20103$1S&e0X
                g$val-exps$20104$1S&e0X)
              g$body-exp$20105$1S&e0X))))))
   (g$build-library-letrec*$20082$1S&e0X
     g$build-library-letrec*$20120$1S&e0X
     (case-lambda
       ((g$ae$20106$1S&e0X
          g$name$20107$1S&e0X
          g$vars$20108$1S&e0X
          g$locs$20109$1S&e0X
          g$val-exps$20110$1S&e0X
          g$body-exp$20111$1S&e0X)
        (list
          'library-letrec*
          g$name$20107$1S&e0X
          (g$map$11833$1S&e0X
            list
            g$vars$20108$1S&e0X
            g$locs$20109$1S&e0X
            g$val-exps$20110$1S&e0X)
          g$body-exp$20111$1S&e0X)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$20121$1S&e0X
     g$set-cons$24132$1S&e0X
     (case-lambda
       ((g$x$20817$1S&e0X g$ls$20818$1S&e0X)
        (if (g$memq$11825$1S&e0X g$x$20817$1S&e0X g$ls$20818$1S&e0X)
          g$ls$20818$1S&e0X
          (begin '#f (cons g$x$20817$1S&e0X g$ls$20818$1S&e0X))))))
   (g$set-union$20122$1S&e0X
     g$set-union$24133$1S&e0X
     (case-lambda
       ((g$ls1$20819$1S&e0X g$ls2$20820$1S&e0X)
        (if (null? g$ls1$20819$1S&e0X)
          g$ls2$20820$1S&e0X
          (if (g$memq$11825$1S&e0X
                (car g$ls1$20819$1S&e0X)
                g$ls2$20820$1S&e0X)
            (g$set-union$20122$1S&e0X
              (cdr g$ls1$20819$1S&e0X)
              g$ls2$20820$1S&e0X)
            (begin
              '#f
              (cons
                (car g$ls1$20819$1S&e0X)
                (g$set-union$20122$1S&e0X
                  (cdr g$ls1$20819$1S&e0X)
                  g$ls2$20820$1S&e0X))))))))
   (g$top-mark*$20124$1S&e0X g$top-mark*$24134$1S&e0X '(top))
   (g$top-marked?$20125$1S&e0X
     g$top-marked?$24135$1S&e0X
     (case-lambda
       ((g$m*$20821$1S&e0X)
        (g$memq$11825$1S&e0X 'top g$m*$20821$1S&e0X))))
   (g$gen-lexical$20126$1S&e0X
     g$gen-lexical$24136$1S&e0X
     (case-lambda
       ((g$sym$20822$1S&e0X)
        (if (g$symbol?$12665$1S&e0X g$sym$20822$1S&e0X)
          (gensym g$sym$20822$1S&e0X)
          (if (g$stx?$20163$1S&e0X g$sym$20822$1S&e0X)
            (g$gen-lexical$20126$1S&e0X
              (g$id->sym$20192$1S&e0X g$sym$20822$1S&e0X))
            (begin
              '#f
              (assertion-violation
                'gen-lexical
                '"BUG: invalid arg"
                g$sym$20822$1S&e0X)))))))
   (g$gen-global$20127$1S&e0X
     g$gen-global$24137$1S&e0X
     (case-lambda
       ((g$x$20823$1S&e0X)
        (g$gen-lexical$20126$1S&e0X g$x$20823$1S&e0X))))
   (g$gen-label$20128$1S&e0X
     g$gen-label$24138$1S&e0X
     (case-lambda ((g$_$20824$1S&e0X) (gensym))))
   (g$gen-top-level-label$20129$1S&e0X
     g$gen-top-level-label$24139$1S&e0X
     (case-lambda
       ((g$id$20825$1S&e0X g$rib$20826$1S&e0X)
        (letrec* ((g$find$20827$1S&e0X
                    (case-lambda
                      ((g$sym$20833$1S&e0X
                         g$mark*$20834$1S&e0X
                         g$sym*$20835$1S&e0X
                         g$mark**$20836$1S&e0X
                         g$label*$20837$1S&e0X)
                       (if (pair? g$sym*$20835$1S&e0X)
                         (begin
                           '#f
                           (if (if (eq? g$sym$20833$1S&e0X
                                        (car g$sym*$20835$1S&e0X))
                                 (begin
                                   '#f
                                   (g$same-marks?$20193$1S&e0X
                                     g$mark*$20834$1S&e0X
                                     (car g$mark**$20836$1S&e0X)))
                                 '#f)
                             (car g$label*$20837$1S&e0X)
                             (g$find$20827$1S&e0X
                               g$sym$20833$1S&e0X
                               g$mark*$20834$1S&e0X
                               (cdr g$sym*$20835$1S&e0X)
                               (cdr g$mark**$20836$1S&e0X)
                               (cdr g$label*$20837$1S&e0X))))
                         '#f)))))
          ((case-lambda
             ((g$sym$20828$1S&e0X g$mark*$20829$1S&e0X)
              ((case-lambda
                 ((g$sym*$20830$1S&e0X)
                  ((case-lambda
                     ((g$t$20831$1S&e0X)
                      (if g$t$20831$1S&e0X
                        ((case-lambda
                           ((g$label$20832$1S&e0X)
                            (if (g$imported-label->binding$19896$1S&e0X
                                  g$label$20832$1S&e0X)
                              (gensym)
                              (begin '#f g$label$20832$1S&e0X))))
                         g$t$20831$1S&e0X)
                        (begin '#f (gensym)))))
                   (if (g$memq$11825$1S&e0X
                         g$sym$20828$1S&e0X
                         (g$rib-sym*$20139$1S&e0X g$rib$20826$1S&e0X))
                     (begin
                       '#f
                       (g$find$20827$1S&e0X
                         g$sym$20828$1S&e0X
                         g$mark*$20829$1S&e0X
                         g$sym*$20830$1S&e0X
                         (g$rib-mark**$20140$1S&e0X g$rib$20826$1S&e0X)
                         (g$rib-label*$20141$1S&e0X
                           g$rib$20826$1S&e0X)))
                     '#f))))
               (g$rib-sym*$20139$1S&e0X g$rib$20826$1S&e0X))))
           (g$id->sym$20192$1S&e0X g$id$20825$1S&e0X)
           (g$stx-mark*$20166$1S&e0X g$id$20825$1S&e0X))))))
   (g$gen-define-label+loc$20130$1S&e0X
     g$gen-define-label+loc$24140$1S&e0X
     (case-lambda
       ((g$id$20838$1S&e0X g$rib$20839$1S&e0X g$sd?$20840$1S&e0X)
        (if g$sd?$20840$1S&e0X
          (values
            (gensym)
            (g$gen-lexical$20126$1S&e0X g$id$20838$1S&e0X))
          ((case-lambda
             ((g$env$20841$1S&e0X)
              ((case-lambda
                 ((g$label$20842$1S&e0X g$locs$20843$1S&e0X)
                  (values
                    g$label$20842$1S&e0X
                    ((case-lambda
                       ((g$t$20844$1S&e0X)
                        (if g$t$20844$1S&e0X
                          (cdr g$t$20844$1S&e0X)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$loc$20845$1S&e0X)
                                (begin
                                  (g$set-interaction-env-locs!$20779$1S&e0X
                                    g$env$20841$1S&e0X
                                    (cons
                                      (cons
                                        g$label$20842$1S&e0X
                                        g$loc$20845$1S&e0X)
                                      g$locs$20843$1S&e0X))
                                  g$loc$20845$1S&e0X)))
                             (g$gen-lexical$20126$1S&e0X
                               g$id$20838$1S&e0X))))))
                     (g$assq$11821$1S&e0X
                       g$label$20842$1S&e0X
                       g$locs$20843$1S&e0X)))))
               (g$gen-top-level-label$20129$1S&e0X
                 g$id$20838$1S&e0X
                 g$rib$20839$1S&e0X)
               (g$interaction-env-locs$20776$1S&e0X
                 g$env$20841$1S&e0X))))
           (g$top-level-context$20816$1S&e0X))))))
   (g$gen-define-label$20131$1S&e0X
     g$gen-define-label$24141$1S&e0X
     (case-lambda
       ((g$id$20846$1S&e0X g$rib$20847$1S&e0X g$sd?$20848$1S&e0X)
        (if g$sd?$20848$1S&e0X
          (gensym)
          (g$gen-top-level-label$20129$1S&e0X
            g$id$20846$1S&e0X
            g$rib$20847$1S&e0X)))))
   (g$9876$20132$1S&e0X
     g$9876$24142$1S&e0X
     (make-record-type-descriptor
       'rib
       '#f
       'g$9879$1S&e0X
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9878$20133$1S&e0X g$9878$24143$1S&e0X '#f)
   (g$9877$20134$1S&e0X
     g$9877$24144$1S&e0X
     (make-record-constructor-descriptor
       g$9876$20132$1S&e0X
       '#f
       g$9878$20133$1S&e0X))
   (g$rib?$20137$1S&e0X
     g$rib?$24145$1S&e0X
     (record-predicate g$9876$20132$1S&e0X))
   (g$make-rib$20138$1S&e0X
     g$make-rib$24146$1S&e0X
     (record-constructor g$9877$20134$1S&e0X))
   (g$rib-sym*$20139$1S&e0X
     g$rib-sym*$24147$1S&e0X
     (record-accessor g$9876$20132$1S&e0X '0))
   (g$rib-mark**$20140$1S&e0X
     g$rib-mark**$24148$1S&e0X
     (record-accessor g$9876$20132$1S&e0X '1))
   (g$rib-label*$20141$1S&e0X
     g$rib-label*$24149$1S&e0X
     (record-accessor g$9876$20132$1S&e0X '2))
   (g$rib-sealed/freq$20142$1S&e0X
     g$rib-sealed/freq$24150$1S&e0X
     (record-accessor g$9876$20132$1S&e0X '3))
   (g$rib-cache$20143$1S&e0X
     g$rib-cache$24151$1S&e0X
     (record-accessor g$9876$20132$1S&e0X '4))
   (g$set-rib-sym*!$20144$1S&e0X
     g$set-rib-sym*!$24152$1S&e0X
     (record-mutator g$9876$20132$1S&e0X '0))
   (g$set-rib-mark**!$20145$1S&e0X
     g$set-rib-mark**!$24153$1S&e0X
     (record-mutator g$9876$20132$1S&e0X '1))
   (g$set-rib-label*!$20146$1S&e0X
     g$set-rib-label*!$24154$1S&e0X
     (record-mutator g$9876$20132$1S&e0X '2))
   (g$set-rib-sealed/freq!$20147$1S&e0X
     g$set-rib-sealed/freq!$24155$1S&e0X
     (record-mutator g$9876$20132$1S&e0X '3))
   (g$set-rib-cache!$20148$1S&e0X
     g$set-rib-cache!$24156$1S&e0X
     (record-mutator g$9876$20132$1S&e0X '4))
   (g$make-empty-rib$20149$1S&e0X
     g$make-empty-rib$24157$1S&e0X
     (case-lambda (() (g$make-rib$20138$1S&e0X '() '() '() '#f '#f))))
   (g$make-cache-rib$20150$1S&e0X
     g$make-cache-rib$24158$1S&e0X
     (case-lambda
       (()
        (g$make-rib$20138$1S&e0X
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$12781$1S&e0X)))))
   (g$find-label$20151$1S&e0X
     g$find-label$24159$1S&e0X
     (case-lambda
       ((g$rib$20849$1S&e0X g$sym$20850$1S&e0X g$mark*$20851$1S&e0X)
        ((case-lambda
           ((g$ht$20852$1S&e0X)
            (if g$ht$20852$1S&e0X
              (begin
                '#f
                ((case-lambda
                   ((g$cv$20853$1S&e0X)
                    ((case-lambda
                       ((g$t$20854$1S&e0X)
                        (if g$t$20854$1S&e0X
                          (cdr g$t$20854$1S&e0X)
                          (begin '#f '#f))))
                     (if g$cv$20853$1S&e0X
                       (begin
                         '#f
                         (g$assp$11824$1S&e0X
                           (case-lambda
                             ((g$m$20855$1S&e0X)
                              (g$same-marks?$20193$1S&e0X
                                g$mark*$20851$1S&e0X
                                g$m$20855$1S&e0X)))
                           g$cv$20853$1S&e0X))
                       '#f))))
                 (g$hashtable-ref$12784$1S&e0X
                   g$ht$20852$1S&e0X
                   g$sym$20850$1S&e0X
                   '#f)))
              '#f)))
         (g$rib-cache$20143$1S&e0X g$rib$20849$1S&e0X)))))
   (g$extend-rib!$20152$1S&e0X
     g$extend-rib!$24160$1S&e0X
     (case-lambda
       ((g$rib$20856$1S&e0X
          g$id$20857$1S&e0X
          g$label$20858$1S&e0X
          g$sd?$20859$1S&e0X)
        (letrec* ((g$find$20860$1S&e0X
                    (case-lambda
                      ((g$sym$20869$1S&e0X
                         g$mark*$20870$1S&e0X
                         g$sym*$20871$1S&e0X
                         g$mark**$20872$1S&e0X
                         g$label*$20873$1S&e0X)
                       (if (pair? g$sym*$20871$1S&e0X)
                         (begin
                           '#f
                           (if (if (eq? g$sym$20869$1S&e0X
                                        (car g$sym*$20871$1S&e0X))
                                 (begin
                                   '#f
                                   (g$same-marks?$20193$1S&e0X
                                     g$mark*$20870$1S&e0X
                                     (car g$mark**$20872$1S&e0X)))
                                 '#f)
                             g$label*$20873$1S&e0X
                             (g$find$20860$1S&e0X
                               g$sym$20869$1S&e0X
                               g$mark*$20870$1S&e0X
                               (cdr g$sym*$20871$1S&e0X)
                               (cdr g$mark**$20872$1S&e0X)
                               (cdr g$label*$20873$1S&e0X))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$20142$1S&e0X g$rib$20856$1S&e0X)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$20856$1S&e0X)
              (void))
            ((case-lambda
               ((g$sym$20861$1S&e0X g$mark*$20862$1S&e0X)
                ((case-lambda
                   ((g$sym*$20863$1S&e0X)
                    ((case-lambda
                       ((g$t$20864$1S&e0X)
                        (if g$t$20864$1S&e0X
                          ((case-lambda
                             ((g$p$20865$1S&e0X)
                              (if (not (eq? g$label$20858$1S&e0X
                                            g$p$20865$1S&e0X))
                                (g$syntax-violation$20808$1S&e0X
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$20857$1S&e0X)
                                (void))))
                           g$t$20864$1S&e0X)
                          ((case-lambda
                             ((g$t$20866$1S&e0X)
                              (if g$t$20866$1S&e0X
                                ((case-lambda
                                   ((g$p$20867$1S&e0X)
                                    (if (not (eq? g$label$20858$1S&e0X
                                                  (car g$p$20867$1S&e0X)))
                                      (if (not g$sd?$20859$1S&e0X)
                                        (set-car!
                                          g$p$20867$1S&e0X
                                          g$label$20858$1S&e0X)
                                        (begin
                                          '#f
                                          (g$syntax-violation$20808$1S&e0X
                                            '#f
                                            '"multiple definitions of identifier"
                                            g$id$20857$1S&e0X)))
                                      (void))))
                                 g$t$20866$1S&e0X)
                                (begin
                                  '#f
                                  (if (g$rib-cache$20143$1S&e0X
                                        g$rib$20856$1S&e0X)
                                    (g$hashtable-update!$12788$1S&e0X
                                      (g$rib-cache$20143$1S&e0X
                                        g$rib$20856$1S&e0X)
                                      g$sym$20861$1S&e0X
                                      (case-lambda
                                        ((g$e$20868$1S&e0X)
                                         (cons
                                           (cons
                                             g$mark*$20862$1S&e0X
                                             g$label$20858$1S&e0X)
                                           g$e$20868$1S&e0X)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$20144$1S&e0X
                                    g$rib$20856$1S&e0X
                                    (cons
                                      g$sym$20861$1S&e0X
                                      g$sym*$20863$1S&e0X))
                                  (g$set-rib-mark**!$20145$1S&e0X
                                    g$rib$20856$1S&e0X
                                    (cons
                                      g$mark*$20862$1S&e0X
                                      (g$rib-mark**$20140$1S&e0X
                                        g$rib$20856$1S&e0X)))
                                  (g$set-rib-label*!$20146$1S&e0X
                                    g$rib$20856$1S&e0X
                                    (cons
                                      g$label$20858$1S&e0X
                                      (g$rib-label*$20141$1S&e0X
                                        g$rib$20856$1S&e0X)))))))
                           (if (g$memq$11825$1S&e0X
                                 g$sym$20861$1S&e0X
                                 (g$rib-sym*$20139$1S&e0X
                                   g$rib$20856$1S&e0X))
                             (begin
                               '#f
                               (g$find$20860$1S&e0X
                                 g$sym$20861$1S&e0X
                                 g$mark*$20862$1S&e0X
                                 g$sym*$20863$1S&e0X
                                 (g$rib-mark**$20140$1S&e0X
                                   g$rib$20856$1S&e0X)
                                 (g$rib-label*$20141$1S&e0X
                                   g$rib$20856$1S&e0X)))
                             '#f)))))
                     (g$find-label$20151$1S&e0X
                       g$rib$20856$1S&e0X
                       g$sym$20861$1S&e0X
                       g$mark*$20862$1S&e0X))))
                 (g$rib-sym*$20139$1S&e0X g$rib$20856$1S&e0X))))
             (g$id->sym$20192$1S&e0X g$id$20857$1S&e0X)
             (g$stx-mark*$20166$1S&e0X g$id$20857$1S&e0X)))))))
   (g$extend-rib/nc!$20153$1S&e0X
     g$extend-rib/nc!$24161$1S&e0X
     (case-lambda
       ((g$rib$20874$1S&e0X g$id$20875$1S&e0X g$label$20876$1S&e0X)
        ((case-lambda
           ((g$sym$20877$1S&e0X g$mark*$20878$1S&e0X)
            ((case-lambda
               ((g$sym*$20879$1S&e0X)
                (begin
                  (if (g$rib-cache$20143$1S&e0X g$rib$20874$1S&e0X)
                    (g$hashtable-update!$12788$1S&e0X
                      (g$rib-cache$20143$1S&e0X g$rib$20874$1S&e0X)
                      g$sym$20877$1S&e0X
                      (case-lambda
                        ((g$e$20880$1S&e0X)
                         (cons
                           (cons
                             g$mark*$20878$1S&e0X
                             g$label$20876$1S&e0X)
                           g$e$20880$1S&e0X)))
                      '())
                    (void))
                  (g$set-rib-sym*!$20144$1S&e0X
                    g$rib$20874$1S&e0X
                    (cons g$sym$20877$1S&e0X g$sym*$20879$1S&e0X))
                  (g$set-rib-mark**!$20145$1S&e0X
                    g$rib$20874$1S&e0X
                    (cons
                      g$mark*$20878$1S&e0X
                      (g$rib-mark**$20140$1S&e0X g$rib$20874$1S&e0X)))
                  (g$set-rib-label*!$20146$1S&e0X
                    g$rib$20874$1S&e0X
                    (cons
                      g$label$20876$1S&e0X
                      (g$rib-label*$20141$1S&e0X
                        g$rib$20874$1S&e0X))))))
             (g$rib-sym*$20139$1S&e0X g$rib$20874$1S&e0X))))
         (g$id->sym$20192$1S&e0X g$id$20875$1S&e0X)
         (g$stx-mark*$20166$1S&e0X g$id$20875$1S&e0X)))))
   (g$make-rib-map$20154$1S&e0X
     g$make-rib-map$24162$1S&e0X
     (case-lambda
       ((g$sym*$20881$1S&e0X)
        ((case-lambda
           ((g$ht$20882$1S&e0X)
            ((letrec ((g$f$20883$1S&e0X
                        (case-lambda
                          ((g$i$20884$1S&e0X g$sym*$20885$1S&e0X)
                           (if (null? g$sym*$20885$1S&e0X)
                             g$ht$20882$1S&e0X
                             (begin
                               (g$hashtable-update!$12788$1S&e0X
                                 g$ht$20882$1S&e0X
                                 (car g$sym*$20885$1S&e0X)
                                 (case-lambda
                                   ((g$x$20886$1S&e0X)
                                    (cons
                                      g$i$20884$1S&e0X
                                      g$x$20886$1S&e0X)))
                                 '())
                               (g$f$20883$1S&e0X
                                 (+ g$i$20884$1S&e0X '1)
                                 (cdr g$sym*$20885$1S&e0X))))))))
               g$f$20883$1S&e0X)
             '0
             g$sym*$20881$1S&e0X)))
         (g$make-eq-hashtable$12781$1S&e0X)))))
   (g$seal-rib!$20155$1S&e0X
     g$seal-rib!$24163$1S&e0X
     (case-lambda
       ((g$rib$20887$1S&e0X)
        ((case-lambda
           ((g$sym*$20888$1S&e0X)
            (if (not (null? g$sym*$20888$1S&e0X))
              (begin
                (g$set-rib-sym*!$20144$1S&e0X
                  g$rib$20887$1S&e0X
                  (g$list->vector$12676$1S&e0X g$sym*$20888$1S&e0X))
                (g$set-rib-mark**!$20145$1S&e0X
                  g$rib$20887$1S&e0X
                  (g$list->vector$12676$1S&e0X
                    (g$rib-mark**$20140$1S&e0X g$rib$20887$1S&e0X)))
                (g$set-rib-label*!$20146$1S&e0X
                  g$rib$20887$1S&e0X
                  (g$list->vector$12676$1S&e0X
                    (g$rib-label*$20141$1S&e0X g$rib$20887$1S&e0X)))
                (g$set-rib-sealed/freq!$20147$1S&e0X
                  g$rib$20887$1S&e0X
                  (g$make-rib-map$20154$1S&e0X g$sym*$20888$1S&e0X)))
              (void))))
         (g$rib-sym*$20139$1S&e0X g$rib$20887$1S&e0X)))))
   (g$unseal-rib!$20156$1S&e0X
     g$unseal-rib!$24164$1S&e0X
     (case-lambda
       ((g$rib$20889$1S&e0X)
        (if (g$rib-sealed/freq$20142$1S&e0X g$rib$20889$1S&e0X)
          (begin
            (g$set-rib-sealed/freq!$20147$1S&e0X g$rib$20889$1S&e0X '#f)
            (g$set-rib-sym*!$20144$1S&e0X
              g$rib$20889$1S&e0X
              (vector->list
                (g$rib-sym*$20139$1S&e0X g$rib$20889$1S&e0X)))
            (g$set-rib-mark**!$20145$1S&e0X
              g$rib$20889$1S&e0X
              (vector->list
                (g$rib-mark**$20140$1S&e0X g$rib$20889$1S&e0X)))
            (g$set-rib-label*!$20146$1S&e0X
              g$rib$20889$1S&e0X
              (vector->list
                (g$rib-label*$20141$1S&e0X g$rib$20889$1S&e0X))))
          (void)))))
   (g$make-full-rib$20157$1S&e0X
     g$make-full-rib$24165$1S&e0X
     (case-lambda
       ((g$id*$20890$1S&e0X g$label*$20891$1S&e0X)
        ((case-lambda
           ((g$r$20892$1S&e0X)
            (begin
              (g$seal-rib!$20155$1S&e0X g$r$20892$1S&e0X)
              g$r$20892$1S&e0X)))
         (g$make-rib$20138$1S&e0X
           (g$map$11833$1S&e0X
             g$id->sym$20192$1S&e0X
             g$id*$20890$1S&e0X)
           (g$map$11833$1S&e0X
             g$stx-mark*$20166$1S&e0X
             g$id*$20890$1S&e0X)
           g$label*$20891$1S&e0X
           '#f
           '#f)))))
   (g$9905$20158$1S&e0X
     g$9905$24166$1S&e0X
     (make-record-type-descriptor
       'stx
       '#f
       'g$9908$1S&e0X
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$9907$20159$1S&e0X g$9907$24167$1S&e0X '#f)
   (g$9906$20160$1S&e0X
     g$9906$24168$1S&e0X
     (make-record-constructor-descriptor
       g$9905$20158$1S&e0X
       '#f
       g$9907$20159$1S&e0X))
   (g$stx?$20163$1S&e0X
     g$stx?$24169$1S&e0X
     (record-predicate g$9905$20158$1S&e0X))
   (g$make-stx$20164$1S&e0X
     g$make-stx$24170$1S&e0X
     (record-constructor g$9906$20160$1S&e0X))
   (g$stx-expr$20165$1S&e0X
     g$stx-expr$24171$1S&e0X
     (record-accessor g$9905$20158$1S&e0X '0))
   (g$stx-mark*$20166$1S&e0X
     g$stx-mark*$24172$1S&e0X
     (record-accessor g$9905$20158$1S&e0X '1))
   (g$stx-subst*$20167$1S&e0X
     g$stx-subst*$24173$1S&e0X
     (record-accessor g$9905$20158$1S&e0X '2))
   (g$stx-ae*$20168$1S&e0X
     g$stx-ae*$24174$1S&e0X
     (record-accessor g$9905$20158$1S&e0X '3))
   (g$set-stx-expr!$20169$1S&e0X
     g$set-stx-expr!$24175$1S&e0X
     (record-mutator g$9905$20158$1S&e0X '0))
   (g$set-stx-mark*!$20170$1S&e0X
     g$set-stx-mark*!$24176$1S&e0X
     (record-mutator g$9905$20158$1S&e0X '1))
   (g$set-stx-subst*!$20171$1S&e0X
     g$set-stx-subst*!$24177$1S&e0X
     (record-mutator g$9905$20158$1S&e0X '2))
   (g$set-stx-ae*!$20172$1S&e0X
     g$set-stx-ae*!$24178$1S&e0X
     (record-mutator g$9905$20158$1S&e0X '3))
   (g$rp$20173$1S&e0X
     g$rp$24179$1S&e0X
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$20893$1S&e0X g$p$20894$1S&e0X g$wr$20895$1S&e0X)
          (begin
            (display '"#<syntax " g$p$20894$1S&e0X)
            (write
              (g$stx->datum$20202$1S&e0X g$x$20893$1S&e0X)
              g$p$20894$1S&e0X)
            ((case-lambda
               ((g$expr$20896$1S&e0X)
                (if (annotation? g$expr$20896$1S&e0X)
                  ((case-lambda
                     ((g$src$20897$1S&e0X)
                      (if (pair? g$src$20897$1S&e0X)
                        (begin
                          (display '" (" g$p$20894$1S&e0X)
                          (display
                            (cdr g$src$20897$1S&e0X)
                            g$p$20894$1S&e0X)
                          (display '" of " g$p$20894$1S&e0X)
                          (display
                            (car g$src$20897$1S&e0X)
                            g$p$20894$1S&e0X)
                          (display '")" g$p$20894$1S&e0X))
                        (void))))
                   (annotation-source g$expr$20896$1S&e0X))
                  (void))))
             (g$stx-expr$20165$1S&e0X g$x$20893$1S&e0X))
            (display '">" g$p$20894$1S&e0X))))))
   (g$datum->stx$20174$1S&e0X
     g$datum->stx$24180$1S&e0X
     (case-lambda
       ((g$id$20898$1S&e0X g$datum$20899$1S&e0X)
        (g$make-stx$20164$1S&e0X
          g$datum$20899$1S&e0X
          (g$stx-mark*$20166$1S&e0X g$id$20898$1S&e0X)
          (g$stx-subst*$20167$1S&e0X g$id$20898$1S&e0X)
          (g$stx-ae*$20168$1S&e0X g$id$20898$1S&e0X)))))
   (g$gen-mark$20175$1S&e0X
     g$gen-mark$24181$1S&e0X
     (case-lambda (() (string '#\m))))
   (g$anti-mark$20176$1S&e0X g$anti-mark$24182$1S&e0X '#f)
   (g$anti-mark?$20177$1S&e0X g$anti-mark?$24183$1S&e0X not)
   (g$join-wraps$20178$1S&e0X
     g$join-wraps$24184$1S&e0X
     (case-lambda
       ((g$m1*$20900$1S&e0X
          g$s1*$20901$1S&e0X
          g$ae1*$20902$1S&e0X
          g$e$20903$1S&e0X)
        (letrec* ((g$cancel$20904$1S&e0X
                    (case-lambda
                      ((g$ls1$20908$1S&e0X g$ls2$20909$1S&e0X)
                       ((letrec ((g$f$20910$1S&e0X
                                   (case-lambda
                                     ((g$x$20911$1S&e0X
                                        g$ls1$20912$1S&e0X)
                                      (if (null? g$ls1$20912$1S&e0X)
                                        (cdr g$ls2$20909$1S&e0X)
                                        (cons
                                          g$x$20911$1S&e0X
                                          (g$f$20910$1S&e0X
                                            (car g$ls1$20912$1S&e0X)
                                            (cdr g$ls1$20912$1S&e0X))))))))
                          g$f$20910$1S&e0X)
                        (car g$ls1$20908$1S&e0X)
                        (cdr g$ls1$20908$1S&e0X))))))
          ((case-lambda
             ((g$m2*$20905$1S&e0X
                g$s2*$20906$1S&e0X
                g$ae2*$20907$1S&e0X)
              (if (if (not (null? g$m1*$20900$1S&e0X))
                    (if (not (null? g$m2*$20905$1S&e0X))
                      (begin
                        '#f
                        (g$anti-mark?$20177$1S&e0X
                          (car g$m2*$20905$1S&e0X)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$20904$1S&e0X
                    g$m1*$20900$1S&e0X
                    g$m2*$20905$1S&e0X)
                  (g$cancel$20904$1S&e0X
                    g$s1*$20901$1S&e0X
                    g$s2*$20906$1S&e0X)
                  (g$cancel$20904$1S&e0X
                    g$ae1*$20902$1S&e0X
                    g$ae2*$20907$1S&e0X))
                (values
                  (append g$m1*$20900$1S&e0X g$m2*$20905$1S&e0X)
                  (append g$s1*$20901$1S&e0X g$s2*$20906$1S&e0X)
                  (append g$ae1*$20902$1S&e0X g$ae2*$20907$1S&e0X)))))
           (g$stx-mark*$20166$1S&e0X g$e$20903$1S&e0X)
           (g$stx-subst*$20167$1S&e0X g$e$20903$1S&e0X)
           (g$stx-ae*$20168$1S&e0X g$e$20903$1S&e0X))))))
   (g$mkstx$20179$1S&e0X
     g$mkstx$24185$1S&e0X
     (case-lambda
       ((g$e$20913$1S&e0X
          g$m*$20914$1S&e0X
          g$s*$20915$1S&e0X
          g$ae*$20916$1S&e0X)
        (if (if (g$stx?$20163$1S&e0X g$e$20913$1S&e0X)
              (begin
                '#f
                (not (g$top-marked?$20125$1S&e0X g$m*$20914$1S&e0X)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$20178$1S&e0X
                 g$m*$20914$1S&e0X
                 g$s*$20915$1S&e0X
                 g$ae*$20916$1S&e0X
                 g$e$20913$1S&e0X)))
            (case-lambda
              ((g$m*$20920$1S&e0X g$s*$20921$1S&e0X g$ae*$20922$1S&e0X)
               ((case-lambda
                  ((g$ae*$20923$1S&e0X
                     g$s*$20924$1S&e0X
                     g$m*$20925$1S&e0X)
                   (g$make-stx$20164$1S&e0X
                     (g$stx-expr$20165$1S&e0X g$e$20913$1S&e0X)
                     g$m*$20925$1S&e0X
                     g$s*$20924$1S&e0X
                     g$ae*$20923$1S&e0X)))
                g$ae*$20922$1S&e0X
                g$s*$20921$1S&e0X
                g$m*$20920$1S&e0X))))
          (g$make-stx$20164$1S&e0X
            g$e$20913$1S&e0X
            g$m*$20914$1S&e0X
            g$s*$20915$1S&e0X
            g$ae*$20916$1S&e0X)))))
   (g$add-mark$20180$1S&e0X
     g$add-mark$24186$1S&e0X
     (case-lambda
       ((g$m$20926$1S&e0X g$e$20927$1S&e0X g$ae$20928$1S&e0X)
        (g$mkstx$20179$1S&e0X
          g$e$20927$1S&e0X
          (list g$m$20926$1S&e0X)
          '(shift)
          (list g$ae$20928$1S&e0X)))))
   (g$add-subst$20181$1S&e0X
     g$add-subst$24187$1S&e0X
     (case-lambda
       ((g$subst$20929$1S&e0X g$e$20930$1S&e0X)
        (g$mkstx$20179$1S&e0X
          g$e$20930$1S&e0X
          '()
          (list g$subst$20929$1S&e0X)
          '()))))
   (g$syntax-kind?$20182$1S&e0X
     g$syntax-kind?$24188$1S&e0X
     (case-lambda
       ((g$x$20931$1S&e0X g$p?$20932$1S&e0X)
        (if (g$stx?$20163$1S&e0X g$x$20931$1S&e0X)
          (g$syntax-kind?$20182$1S&e0X
            (g$stx-expr$20165$1S&e0X g$x$20931$1S&e0X)
            g$p?$20932$1S&e0X)
          (if (annotation? g$x$20931$1S&e0X)
            (g$syntax-kind?$20182$1S&e0X
              (annotation-expression g$x$20931$1S&e0X)
              g$p?$20932$1S&e0X)
            (begin '#f (g$p?$20932$1S&e0X g$x$20931$1S&e0X)))))))
   (g$syntax-vector->list$20183$1S&e0X
     g$syntax-vector->list$24189$1S&e0X
     (case-lambda
       ((g$x$20933$1S&e0X)
        (if (g$stx?$20163$1S&e0X g$x$20933$1S&e0X)
          ((case-lambda
             ((g$ls$20934$1S&e0X
                g$m*$20935$1S&e0X
                g$s*$20936$1S&e0X
                g$ae*$20937$1S&e0X)
              (g$map$11833$1S&e0X
                (case-lambda
                  ((g$x$20938$1S&e0X)
                   (g$mkstx$20179$1S&e0X
                     g$x$20938$1S&e0X
                     g$m*$20935$1S&e0X
                     g$s*$20936$1S&e0X
                     g$ae*$20937$1S&e0X)))
                g$ls$20934$1S&e0X)))
           (g$syntax-vector->list$20183$1S&e0X
             (g$stx-expr$20165$1S&e0X g$x$20933$1S&e0X))
           (g$stx-mark*$20166$1S&e0X g$x$20933$1S&e0X)
           (g$stx-subst*$20167$1S&e0X g$x$20933$1S&e0X)
           (g$stx-ae*$20168$1S&e0X g$x$20933$1S&e0X))
          (if (annotation? g$x$20933$1S&e0X)
            (g$syntax-vector->list$20183$1S&e0X
              (annotation-expression g$x$20933$1S&e0X))
            (if (g$vector?$12663$1S&e0X g$x$20933$1S&e0X)
              (vector->list g$x$20933$1S&e0X)
              (begin
                '#f
                (assertion-violation
                  'syntax-vector->list
                  '"BUG: not a syntax vector"
                  g$x$20933$1S&e0X))))))))
   (g$syntax-pair?$20184$1S&e0X
     g$syntax-pair?$24190$1S&e0X
     (case-lambda
       ((g$x$20939$1S&e0X)
        (g$syntax-kind?$20182$1S&e0X g$x$20939$1S&e0X pair?))))
   (g$syntax-vector?$20185$1S&e0X
     g$syntax-vector?$24191$1S&e0X
     (case-lambda
       ((g$x$20940$1S&e0X)
        (g$syntax-kind?$20182$1S&e0X
          g$x$20940$1S&e0X
          g$vector?$12663$1S&e0X))))
   (g$syntax-null?$20186$1S&e0X
     g$syntax-null?$24192$1S&e0X
     (case-lambda
       ((g$x$20941$1S&e0X)
        (g$syntax-kind?$20182$1S&e0X g$x$20941$1S&e0X null?))))
   (g$syntax-list?$20187$1S&e0X
     g$syntax-list?$24193$1S&e0X
     (case-lambda
       ((g$x$20942$1S&e0X)
        ((case-lambda
           ((g$t$20943$1S&e0X)
            (if g$t$20943$1S&e0X
              g$t$20943$1S&e0X
              (begin
                '#f
                (if (g$syntax-pair?$20184$1S&e0X g$x$20942$1S&e0X)
                  (begin
                    '#f
                    (g$syntax-list?$20187$1S&e0X
                      (g$syntax-cdr$20189$1S&e0X g$x$20942$1S&e0X)))
                  '#f)))))
         (g$syntax-null?$20186$1S&e0X g$x$20942$1S&e0X)))))
   (g$syntax-car$20188$1S&e0X
     g$syntax-car$24194$1S&e0X
     (case-lambda
       ((g$x$20944$1S&e0X)
        (if (g$stx?$20163$1S&e0X g$x$20944$1S&e0X)
          (g$mkstx$20179$1S&e0X
            (g$syntax-car$20188$1S&e0X
              (g$stx-expr$20165$1S&e0X g$x$20944$1S&e0X))
            (g$stx-mark*$20166$1S&e0X g$x$20944$1S&e0X)
            (g$stx-subst*$20167$1S&e0X g$x$20944$1S&e0X)
            (g$stx-ae*$20168$1S&e0X g$x$20944$1S&e0X))
          (if (annotation? g$x$20944$1S&e0X)
            (g$syntax-car$20188$1S&e0X
              (annotation-expression g$x$20944$1S&e0X))
            (if (pair? g$x$20944$1S&e0X)
              (car g$x$20944$1S&e0X)
              (begin
                '#f
                (assertion-violation
                  'syntax-car
                  '"BUG: not a pair"
                  g$x$20944$1S&e0X))))))))
   (g$syntax-cdr$20189$1S&e0X
     g$syntax-cdr$24195$1S&e0X
     (case-lambda
       ((g$x$20945$1S&e0X)
        (if (g$stx?$20163$1S&e0X g$x$20945$1S&e0X)
          (g$mkstx$20179$1S&e0X
            (g$syntax-cdr$20189$1S&e0X
              (g$stx-expr$20165$1S&e0X g$x$20945$1S&e0X))
            (g$stx-mark*$20166$1S&e0X g$x$20945$1S&e0X)
            (g$stx-subst*$20167$1S&e0X g$x$20945$1S&e0X)
            (g$stx-ae*$20168$1S&e0X g$x$20945$1S&e0X))
          (if (annotation? g$x$20945$1S&e0X)
            (g$syntax-cdr$20189$1S&e0X
              (annotation-expression g$x$20945$1S&e0X))
            (if (pair? g$x$20945$1S&e0X)
              (cdr g$x$20945$1S&e0X)
              (begin
                '#f
                (assertion-violation
                  'syntax-cdr
                  '"BUG: not a pair"
                  g$x$20945$1S&e0X))))))))
   (g$syntax->list$20190$1S&e0X
     g$syntax->list$24196$1S&e0X
     (case-lambda
       ((g$x$20946$1S&e0X)
        (if (g$syntax-pair?$20184$1S&e0X g$x$20946$1S&e0X)
          (cons
            (g$syntax-car$20188$1S&e0X g$x$20946$1S&e0X)
            (g$syntax->list$20190$1S&e0X
              (g$syntax-cdr$20189$1S&e0X g$x$20946$1S&e0X)))
          (if (g$syntax-null?$20186$1S&e0X g$x$20946$1S&e0X)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$20946$1S&e0X))))))
   (g$id?$20191$1S&e0X
     g$id?$24197$1S&e0X
     (case-lambda
       ((g$x$20947$1S&e0X)
        (if (g$stx?$20163$1S&e0X g$x$20947$1S&e0X)
          (begin
            '#f
            ((case-lambda
               ((g$expr$20948$1S&e0X)
                (g$symbol?$12665$1S&e0X
                  (if (annotation? g$expr$20948$1S&e0X)
                    (annotation-stripped g$expr$20948$1S&e0X)
                    g$expr$20948$1S&e0X))))
             (g$stx-expr$20165$1S&e0X g$x$20947$1S&e0X)))
          '#f))))
   (g$id->sym$20192$1S&e0X
     g$id->sym$24198$1S&e0X
     (case-lambda
       ((g$x$20949$1S&e0X)
        (begin
          (if (not (g$stx?$20163$1S&e0X g$x$20949$1S&e0X))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$20949$1S&e0X)
            (void))
          ((case-lambda
             ((g$expr$20950$1S&e0X)
              ((case-lambda
                 ((g$sym$20951$1S&e0X)
                  (if (g$symbol?$12665$1S&e0X g$sym$20951$1S&e0X)
                    g$sym$20951$1S&e0X
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$20949$1S&e0X))))
               (if (annotation? g$expr$20950$1S&e0X)
                 (annotation-stripped g$expr$20950$1S&e0X)
                 g$expr$20950$1S&e0X))))
           (g$stx-expr$20165$1S&e0X g$x$20949$1S&e0X))))))
   (g$same-marks?$20193$1S&e0X
     g$same-marks?$24199$1S&e0X
     (case-lambda
       ((g$x$20952$1S&e0X g$y$20953$1S&e0X)
        ((case-lambda
           ((g$t$20954$1S&e0X)
            (if g$t$20954$1S&e0X
              g$t$20954$1S&e0X
              (begin
                '#f
                (if (pair? g$x$20952$1S&e0X)
                  (if (pair? g$y$20953$1S&e0X)
                    (if (eq? (car g$x$20952$1S&e0X)
                             (car g$y$20953$1S&e0X))
                      (begin
                        '#f
                        (g$same-marks?$20193$1S&e0X
                          (cdr g$x$20952$1S&e0X)
                          (cdr g$y$20953$1S&e0X)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$20952$1S&e0X)
           (begin '#f (null? g$y$20953$1S&e0X))
           '#f)))))
   (g$bound-id=?$20194$1S&e0X
     g$bound-id=?$24200$1S&e0X
     (case-lambda
       ((g$x$20955$1S&e0X g$y$20956$1S&e0X)
        (if (eq? (g$id->sym$20192$1S&e0X g$x$20955$1S&e0X)
                 (g$id->sym$20192$1S&e0X g$y$20956$1S&e0X))
          (begin
            '#f
            (g$same-marks?$20193$1S&e0X
              (g$stx-mark*$20166$1S&e0X g$x$20955$1S&e0X)
              (g$stx-mark*$20166$1S&e0X g$y$20956$1S&e0X)))
          '#f))))
   (g$free-id=?$20195$1S&e0X
     g$free-id=?$24201$1S&e0X
     (case-lambda
       ((g$i$20957$1S&e0X g$j$20958$1S&e0X)
        ((case-lambda
           ((g$t0$20959$1S&e0X g$t1$20960$1S&e0X)
            (if ((case-lambda
                   ((g$t$20961$1S&e0X)
                    (if g$t$20961$1S&e0X
                      g$t$20961$1S&e0X
                      (begin '#f g$t1$20960$1S&e0X))))
                 g$t0$20959$1S&e0X)
              (eq? g$t0$20959$1S&e0X g$t1$20960$1S&e0X)
              (eq? (g$id->sym$20192$1S&e0X g$i$20957$1S&e0X)
                   (g$id->sym$20192$1S&e0X g$j$20958$1S&e0X)))))
         (g$id->real-label$20205$1S&e0X g$i$20957$1S&e0X)
         (g$id->real-label$20205$1S&e0X g$j$20958$1S&e0X)))))
   (g$valid-bound-ids?$20196$1S&e0X
     g$valid-bound-ids?$24202$1S&e0X
     (case-lambda
       ((g$id*$20962$1S&e0X)
        (if (g$for-all$11831$1S&e0X
              g$id?$20191$1S&e0X
              g$id*$20962$1S&e0X)
          (begin
            '#f
            (g$distinct-bound-ids?$20197$1S&e0X g$id*$20962$1S&e0X))
          '#f))))
   (g$distinct-bound-ids?$20197$1S&e0X
     g$distinct-bound-ids?$24203$1S&e0X
     (case-lambda
       ((g$id*$20963$1S&e0X)
        ((case-lambda
           ((g$t$20964$1S&e0X)
            (if g$t$20964$1S&e0X
              g$t$20964$1S&e0X
              (begin
                '#f
                (if (not (g$bound-id-member?$20198$1S&e0X
                           (car g$id*$20963$1S&e0X)
                           (cdr g$id*$20963$1S&e0X)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$20197$1S&e0X
                      (cdr g$id*$20963$1S&e0X)))
                  '#f)))))
         (null? g$id*$20963$1S&e0X)))))
   (g$bound-id-member?$20198$1S&e0X
     g$bound-id-member?$24204$1S&e0X
     (case-lambda
       ((g$id$20965$1S&e0X g$id*$20966$1S&e0X)
        (if (pair? g$id*$20966$1S&e0X)
          (begin
            '#f
            ((case-lambda
               ((g$t$20967$1S&e0X)
                (if g$t$20967$1S&e0X
                  g$t$20967$1S&e0X
                  (begin
                    '#f
                    (g$bound-id-member?$20198$1S&e0X
                      g$id$20965$1S&e0X
                      (cdr g$id*$20966$1S&e0X))))))
             (g$bound-id=?$20194$1S&e0X
               g$id$20965$1S&e0X
               (car g$id*$20966$1S&e0X))))
          '#f))))
   (g$self-evaluating?$20199$1S&e0X
     g$self-evaluating?$24205$1S&e0X
     (case-lambda
       ((g$x$20968$1S&e0X)
        ((case-lambda
           ((g$t$20969$1S&e0X)
            (if g$t$20969$1S&e0X
              g$t$20969$1S&e0X
              ((case-lambda
                 ((g$t$20970$1S&e0X)
                  (if g$t$20970$1S&e0X
                    g$t$20970$1S&e0X
                    ((case-lambda
                       ((g$t$20971$1S&e0X)
                        (if g$t$20971$1S&e0X
                          g$t$20971$1S&e0X
                          ((case-lambda
                             ((g$t$20972$1S&e0X)
                              (if g$t$20972$1S&e0X
                                g$t$20972$1S&e0X
                                (begin
                                  '#f
                                  (g$bytevector?$12664$1S&e0X
                                    g$x$20968$1S&e0X)))))
                           (g$boolean?$12666$1S&e0X
                             g$x$20968$1S&e0X)))))
                     (g$char?$12662$1S&e0X g$x$20968$1S&e0X)))))
               (string? g$x$20968$1S&e0X)))))
         (g$number?$13672$1S&e0X g$x$20968$1S&e0X)))))
   (g$strip-annotations$20200$1S&e0X
     g$strip-annotations$24206$1S&e0X
     (case-lambda
       ((g$x$20973$1S&e0X)
        (if (pair? g$x$20973$1S&e0X)
          (cons
            (g$strip-annotations$20200$1S&e0X (car g$x$20973$1S&e0X))
            (g$strip-annotations$20200$1S&e0X (cdr g$x$20973$1S&e0X)))
          (if (g$vector?$12663$1S&e0X g$x$20973$1S&e0X)
            (g$vector-map$12732$1S&e0X
              g$strip-annotations$20200$1S&e0X
              g$x$20973$1S&e0X)
            (if (annotation? g$x$20973$1S&e0X)
              (annotation-stripped g$x$20973$1S&e0X)
              (begin '#f g$x$20973$1S&e0X)))))))
   (g$strip$20201$1S&e0X
     g$strip$24207$1S&e0X
     (case-lambda
       ((g$x$20974$1S&e0X g$m*$20975$1S&e0X)
        (if (g$top-marked?$20125$1S&e0X g$m*$20975$1S&e0X)
          (if ((case-lambda
                 ((g$t$20976$1S&e0X)
                  (if g$t$20976$1S&e0X
                    g$t$20976$1S&e0X
                    ((case-lambda
                       ((g$t$20977$1S&e0X)
                        (if g$t$20977$1S&e0X
                          g$t$20977$1S&e0X
                          (begin
                            '#f
                            (if (g$vector?$12663$1S&e0X
                                  g$x$20974$1S&e0X)
                              (if (g$>$13697$1S&e0X
                                    (vector-length g$x$20974$1S&e0X)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$12678$1S&e0X
                                      g$x$20974$1S&e0X
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$20974$1S&e0X)
                       (begin '#f (annotation? (car g$x$20974$1S&e0X)))
                       '#f)))))
               (annotation? g$x$20974$1S&e0X))
            (g$strip-annotations$20200$1S&e0X g$x$20974$1S&e0X)
            g$x$20974$1S&e0X)
          ((letrec ((g$f$20978$1S&e0X
                      (case-lambda
                        ((g$x$20979$1S&e0X)
                         (if (g$stx?$20163$1S&e0X g$x$20979$1S&e0X)
                           (g$strip$20201$1S&e0X
                             (g$stx-expr$20165$1S&e0X g$x$20979$1S&e0X)
                             (g$stx-mark*$20166$1S&e0X
                               g$x$20979$1S&e0X))
                           (if (annotation? g$x$20979$1S&e0X)
                             (annotation-stripped g$x$20979$1S&e0X)
                             (if (pair? g$x$20979$1S&e0X)
                               ((case-lambda
                                  ((g$a$20980$1S&e0X g$d$20981$1S&e0X)
                                   (if (if (eq? g$a$20980$1S&e0X
                                                (car g$x$20979$1S&e0X))
                                         (begin
                                           '#f
                                           (eq? g$d$20981$1S&e0X
                                                (cdr g$x$20979$1S&e0X)))
                                         '#f)
                                     g$x$20979$1S&e0X
                                     (cons
                                       g$a$20980$1S&e0X
                                       g$d$20981$1S&e0X))))
                                (g$f$20978$1S&e0X
                                  (car g$x$20979$1S&e0X))
                                (g$f$20978$1S&e0X
                                  (cdr g$x$20979$1S&e0X)))
                               (if (g$vector?$12663$1S&e0X
                                     g$x$20979$1S&e0X)
                                 ((case-lambda
                                    ((g$old$20982$1S&e0X)
                                     ((case-lambda
                                        ((g$new$20983$1S&e0X)
                                         (if (g$for-all$11831$1S&e0X
                                               eq?
                                               g$old$20982$1S&e0X
                                               g$new$20983$1S&e0X)
                                           g$x$20979$1S&e0X
                                           (g$list->vector$12676$1S&e0X
                                             g$new$20983$1S&e0X))))
                                      (g$map$11833$1S&e0X
                                        g$f$20978$1S&e0X
                                        g$old$20982$1S&e0X))))
                                  (vector->list g$x$20979$1S&e0X))
                                 (begin '#f g$x$20979$1S&e0X)))))))))
             g$f$20978$1S&e0X)
           g$x$20974$1S&e0X)))))
   (g$stx->datum$20202$1S&e0X
     g$stx->datum$24208$1S&e0X
     (case-lambda
       ((g$x$20984$1S&e0X)
        (g$strip$20201$1S&e0X g$x$20984$1S&e0X '()))))
   (g$same-marks*?$20203$1S&e0X
     g$same-marks*?$24209$1S&e0X
     (case-lambda
       ((g$mark*$20985$1S&e0X g$mark**$20986$1S&e0X g$si$20987$1S&e0X)
        (if (null? g$si$20987$1S&e0X)
          '#f
          (if (g$same-marks?$20193$1S&e0X
                g$mark*$20985$1S&e0X
                (g$vector-ref$12678$1S&e0X
                  g$mark**$20986$1S&e0X
                  (car g$si$20987$1S&e0X)))
            (car g$si$20987$1S&e0X)
            (g$same-marks*?$20203$1S&e0X
              g$mark*$20985$1S&e0X
              g$mark**$20986$1S&e0X
              (cdr g$si$20987$1S&e0X)))))))
   (g$id->label$20204$1S&e0X
     g$id->label$24210$1S&e0X
     (case-lambda
       ((g$id$20988$1S&e0X)
        ((case-lambda
           ((g$t$20989$1S&e0X)
            (if g$t$20989$1S&e0X
              g$t$20989$1S&e0X
              (begin
                '#f
                ((case-lambda
                   ((g$t$20990$1S&e0X)
                    (if g$t$20990$1S&e0X
                      ((case-lambda
                         ((g$env$20991$1S&e0X)
                          ((case-lambda
                             ((g$rib$20992$1S&e0X)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$20130$1S&e0X
                                     g$id$20988$1S&e0X
                                     g$rib$20992$1S&e0X
                                     '#f)))
                                (case-lambda
                                  ((g$lab$20995$1S&e0X
                                     g$_loc$20996$1S&e0X)
                                   ((case-lambda
                                      ((g$_loc$20997$1S&e0X
                                         g$lab$20998$1S&e0X)
                                       (begin
                                         (g$extend-rib!$20152$1S&e0X
                                           g$rib$20992$1S&e0X
                                           g$id$20988$1S&e0X
                                           g$lab$20998$1S&e0X
                                           '#t)
                                         g$lab$20998$1S&e0X)))
                                    g$_loc$20996$1S&e0X
                                    g$lab$20995$1S&e0X))))))
                           (g$interaction-env-rib$20774$1S&e0X
                             g$env$20991$1S&e0X))))
                       g$t$20990$1S&e0X)
                      (begin '#f '#f))))
                 (g$top-level-context$20816$1S&e0X))))))
         (g$id->real-label$20205$1S&e0X g$id$20988$1S&e0X)))))
   (g$id->real-label$20205$1S&e0X
     g$id->real-label$24211$1S&e0X
     (case-lambda
       ((g$id$20999$1S&e0X)
        ((case-lambda
           ((g$sym$21000$1S&e0X)
            ((letrec ((g$search$21001$1S&e0X
                        (case-lambda
                          ((g$subst*$21002$1S&e0X g$mark*$21003$1S&e0X)
                           (if (null? g$subst*$21002$1S&e0X)
                             '#f
                             (if (eq? (car g$subst*$21002$1S&e0X)
                                      'shift)
                               (g$search$21001$1S&e0X
                                 (cdr g$subst*$21002$1S&e0X)
                                 (cdr g$mark*$21003$1S&e0X))
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rib$21004$1S&e0X)
                                     ((case-lambda
                                        ((g$t$21005$1S&e0X)
                                         (if g$t$21005$1S&e0X
                                           ((case-lambda
                                              ((g$ht$21006$1S&e0X)
                                               ((case-lambda
                                                  ((g$si$21007$1S&e0X)
                                                   ((case-lambda
                                                      ((g$i$21008$1S&e0X)
                                                       (if g$i$21008$1S&e0X
                                                         (g$vector-ref$12678$1S&e0X
                                                           (g$rib-label*$20141$1S&e0X
                                                             g$rib$21004$1S&e0X)
                                                           g$i$21008$1S&e0X)
                                                         (g$search$21001$1S&e0X
                                                           (cdr g$subst*$21002$1S&e0X)
                                                           g$mark*$21003$1S&e0X))))
                                                    (if g$si$21007$1S&e0X
                                                      (begin
                                                        '#f
                                                        (g$same-marks*?$20203$1S&e0X
                                                          g$mark*$21003$1S&e0X
                                                          (g$rib-mark**$20140$1S&e0X
                                                            g$rib$21004$1S&e0X)
                                                          (g$reverse$12682$1S&e0X
                                                            g$si$21007$1S&e0X)))
                                                      '#f))))
                                                (g$hashtable-ref$12784$1S&e0X
                                                  g$ht$21006$1S&e0X
                                                  g$sym$21000$1S&e0X
                                                  '#f))))
                                            g$t$21005$1S&e0X)
                                           ((case-lambda
                                              ((g$t$21009$1S&e0X)
                                               (if g$t$21009$1S&e0X
                                                 g$t$21009$1S&e0X
                                                 (begin
                                                   '#f
                                                   (begin
                                                     '#f
                                                     ((letrec ((g$f$21010$1S&e0X
                                                                 (case-lambda
                                                                   ((g$sym*$21011$1S&e0X
                                                                      g$mark**$21012$1S&e0X
                                                                      g$label*$21013$1S&e0X)
                                                                    (if (null?
                                                                          g$sym*$21011$1S&e0X)
                                                                      (g$search$21001$1S&e0X
                                                                        (cdr g$subst*$21002$1S&e0X)
                                                                        g$mark*$21003$1S&e0X)
                                                                      (if (if (eq? (car g$sym*$21011$1S&e0X)
                                                                                   g$sym$21000$1S&e0X)
                                                                            (begin
                                                                              '#f
                                                                              (g$same-marks?$20193$1S&e0X
                                                                                (car g$mark**$21012$1S&e0X)
                                                                                g$mark*$21003$1S&e0X))
                                                                            '#f)
                                                                        (car g$label*$21013$1S&e0X)
                                                                        (begin
                                                                          '#f
                                                                          (g$f$21010$1S&e0X
                                                                            (cdr g$sym*$21011$1S&e0X)
                                                                            (cdr g$mark**$21012$1S&e0X)
                                                                            (cdr g$label*$21013$1S&e0X)))))))))
                                                        g$f$21010$1S&e0X)
                                                      (g$rib-sym*$20139$1S&e0X
                                                        g$rib$21004$1S&e0X)
                                                      (g$rib-mark**$20140$1S&e0X
                                                        g$rib$21004$1S&e0X)
                                                      (g$rib-label*$20141$1S&e0X
                                                        g$rib$21004$1S&e0X)))))))
                                            (g$find-label$20151$1S&e0X
                                              g$rib$21004$1S&e0X
                                              g$sym$21000$1S&e0X
                                              g$mark*$21003$1S&e0X)))))
                                      (g$rib-sealed/freq$20142$1S&e0X
                                        g$rib$21004$1S&e0X))))
                                  (car g$subst*$21002$1S&e0X)))))))))
               g$search$21001$1S&e0X)
             (g$stx-subst*$20167$1S&e0X g$id$20999$1S&e0X)
             (g$stx-mark*$20166$1S&e0X g$id$20999$1S&e0X))))
         (g$id->sym$20192$1S&e0X g$id$20999$1S&e0X)))))
   (g$label->binding$20206$1S&e0X
     g$label->binding$24212$1S&e0X
     (case-lambda
       ((g$x$21014$1S&e0X g$r$21015$1S&e0X)
        (if (not g$x$21014$1S&e0X)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$21016$1S&e0X)
              (if g$t$21016$1S&e0X
                ((case-lambda
                   ((g$b$21017$1S&e0X)
                    (if (if (pair? g$b$21017$1S&e0X)
                          (begin
                            '#f
                            (eq? (car g$b$21017$1S&e0X) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$11833$1S&e0X
                          g$bless$20652$1S&e0X
                          (cdr g$b$21017$1S&e0X)))
                      (if (if (pair? g$b$21017$1S&e0X)
                            (begin
                              '#f
                              (eq? (car g$b$21017$1S&e0X) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$21018$1S&e0X g$loc$21019$1S&e0X)
                            (cons
                              '$rtd
                              (symbol-value g$loc$21019$1S&e0X))))
                         (g$cadr$12684$1S&e0X g$b$21017$1S&e0X)
                         (g$cddr$12686$1S&e0X g$b$21017$1S&e0X))
                        (begin '#f g$b$21017$1S&e0X)))))
                 g$t$21016$1S&e0X)
                ((case-lambda
                   ((g$t$21020$1S&e0X)
                    (if g$t$21020$1S&e0X
                      (cdr g$t$21020$1S&e0X)
                      ((case-lambda
                         ((g$t$21021$1S&e0X)
                          (if g$t$21021$1S&e0X
                            ((case-lambda
                               ((g$env$21022$1S&e0X)
                                ((case-lambda
                                   ((g$t$21023$1S&e0X)
                                    (if g$t$21023$1S&e0X
                                      ((case-lambda
                                         ((g$p$21024$1S&e0X)
                                          (g$cons*$11835$1S&e0X
                                            'lexical
                                            (cdr g$p$21024$1S&e0X)
                                            '#f)))
                                       g$t$21023$1S&e0X)
                                      (begin
                                        '#f
                                        '(displaced-lexical . #f)))))
                                 (g$assq$11821$1S&e0X
                                   g$x$21014$1S&e0X
                                   (g$interaction-env-locs$20776$1S&e0X
                                     g$env$21022$1S&e0X)))))
                             g$t$21021$1S&e0X)
                            (begin '#f '(displaced-lexical . #f)))))
                       (g$top-level-context$20816$1S&e0X)))))
                 (g$assq$11821$1S&e0X
                   g$x$21014$1S&e0X
                   g$r$21015$1S&e0X)))))
           (g$imported-label->binding$19896$1S&e0X
             g$x$21014$1S&e0X))))))
   (g$make-binding$20207$1S&e0X g$make-binding$24213$1S&e0X cons)
   (g$binding-type$20208$1S&e0X g$binding-type$24214$1S&e0X car)
   (g$binding-value$20209$1S&e0X g$binding-value$24215$1S&e0X cdr)
   (g$raise-unbound-error$20210$1S&e0X
     g$raise-unbound-error$24216$1S&e0X
     (case-lambda
       ((g$id$21025$1S&e0X)
        (g$syntax-violation*$20807$1S&e0X
          '#f
          '"unbound identifier"
          g$id$21025$1S&e0X
          (g$make-undefined-violation$14293$1S&e0X)))))
   (g$syntax-type$20211$1S&e0X
     g$syntax-type$24217$1S&e0X
     (case-lambda
       ((g$e$21026$1S&e0X g$r$21027$1S&e0X)
        (if (g$id?$20191$1S&e0X g$e$21026$1S&e0X)
          ((case-lambda
             ((g$id$21028$1S&e0X)
              ((case-lambda
                 ((g$label$21029$1S&e0X)
                  ((case-lambda
                     ((g$b$21030$1S&e0X)
                      ((case-lambda
                         ((g$type$21031$1S&e0X)
                          (begin
                            (if (not g$label$21029$1S&e0X)
                              (g$raise-unbound-error$20210$1S&e0X
                                g$id$21028$1S&e0X)
                              (void))
                            ((case-lambda
                               ((g$t$21032$1S&e0X)
                                (if (g$memv$11826$1S&e0X
                                      g$t$21032$1S&e0X
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$21031$1S&e0X
                                    (g$binding-value$20209$1S&e0X
                                      g$b$21030$1S&e0X)
                                    g$id$21028$1S&e0X)
                                  (begin '#f (values 'other '#f '#f)))))
                             g$type$21031$1S&e0X))))
                       (g$binding-type$20208$1S&e0X g$b$21030$1S&e0X))))
                   (g$label->binding$20206$1S&e0X
                     g$label$21029$1S&e0X
                     g$r$21027$1S&e0X))))
               (g$id->label$20204$1S&e0X g$id$21028$1S&e0X))))
           g$e$21026$1S&e0X)
          (if (g$syntax-pair?$20184$1S&e0X g$e$21026$1S&e0X)
            ((case-lambda
               ((g$id$21033$1S&e0X)
                (if (g$id?$20191$1S&e0X g$id$21033$1S&e0X)
                  ((case-lambda
                     ((g$label$21034$1S&e0X)
                      ((case-lambda
                         ((g$b$21035$1S&e0X)
                          ((case-lambda
                             ((g$type$21036$1S&e0X)
                              (begin
                                (if (not g$label$21034$1S&e0X)
                                  (g$raise-unbound-error$20210$1S&e0X
                                    g$id$21033$1S&e0X)
                                  (void))
                                ((case-lambda
                                   ((g$t$21037$1S&e0X)
                                    (if (g$memv$11826$1S&e0X
                                          g$t$21037$1S&e0X
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$21036$1S&e0X
                                        (g$binding-value$20209$1S&e0X
                                          g$b$21035$1S&e0X)
                                        g$id$21033$1S&e0X)
                                      (begin
                                        '#f
                                        (values 'call '#f '#f)))))
                                 g$type$21036$1S&e0X))))
                           (g$binding-type$20208$1S&e0X
                             g$b$21035$1S&e0X))))
                       (g$label->binding$20206$1S&e0X
                         g$label$21034$1S&e0X
                         g$r$21027$1S&e0X))))
                   (g$id->label$20204$1S&e0X g$id$21033$1S&e0X))
                  (values 'call '#f '#f))))
             (g$syntax-car$20188$1S&e0X g$e$21026$1S&e0X))
            (begin
              '#f
              ((case-lambda
                 ((g$d$21038$1S&e0X)
                  (if (g$self-evaluating?$20199$1S&e0X g$d$21038$1S&e0X)
                    (values 'constant g$d$21038$1S&e0X '#f)
                    (values 'other '#f '#f))))
               (g$stx->datum$20202$1S&e0X g$e$21026$1S&e0X))))))))
   (g$sanitize-binding$20234$1S&e0X
     g$sanitize-binding$24218$1S&e0X
     (case-lambda
       ((g$x$21039$1S&e0X g$src$21040$1S&e0X)
        (if (g$procedure?$12667$1S&e0X g$x$21039$1S&e0X)
          (g$cons*$11835$1S&e0X
            'local-macro
            g$x$21039$1S&e0X
            g$src$21040$1S&e0X)
          (if (if (pair? g$x$21039$1S&e0X)
                (if (eq? (car g$x$21039$1S&e0X) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$12667$1S&e0X (cdr g$x$21039$1S&e0X)))
                  '#f)
                '#f)
            (g$cons*$11835$1S&e0X
              'local-macro!
              (cdr g$x$21039$1S&e0X)
              g$src$21040$1S&e0X)
            (if (if (pair? g$x$21039$1S&e0X)
                  (begin '#f (eq? (car g$x$21039$1S&e0X) '$rtd))
                  '#f)
              g$x$21039$1S&e0X
              (if (if (pair? g$x$21039$1S&e0X)
                    (begin '#f (eq? (car g$x$21039$1S&e0X) 'ctv))
                    '#f)
                (g$cons*$11835$1S&e0X
                  'local-ctv
                  (cdr g$x$21039$1S&e0X)
                  g$src$21040$1S&e0X)
                (begin
                  '#f
                  (assertion-violation
                    'expand
                    '"invalid transformer"
                    g$x$21039$1S&e0X)))))))))
   (g$make-variable-transformer$20235$1S&e0X
     g$make-variable-transformer$24219$1S&e0X
     (case-lambda
       ((g$x$21041$1S&e0X)
        (if (g$procedure?$12667$1S&e0X g$x$21041$1S&e0X)
          (cons 'macro! g$x$21041$1S&e0X)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$21041$1S&e0X)))))
   (g$make-compile-time-value$20236$1S&e0X
     g$make-compile-time-value$24220$1S&e0X
     (case-lambda ((g$x$21042$1S&e0X) (cons 'ctv g$x$21042$1S&e0X))))
   (g$variable-transformer?$20237$1S&e0X
     g$variable-transformer?$24221$1S&e0X
     (case-lambda
       ((g$x$21043$1S&e0X)
        (if (pair? g$x$21043$1S&e0X)
          (if (eq? (car g$x$21043$1S&e0X) 'macro!)
            (begin
              '#f
              (g$procedure?$12667$1S&e0X (cdr g$x$21043$1S&e0X)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$20238$1S&e0X
     g$variable-transformer-procedure$24222$1S&e0X
     (case-lambda
       ((g$x$21044$1S&e0X)
        (if (g$variable-transformer?$20237$1S&e0X g$x$21044$1S&e0X)
          (cdr g$x$21044$1S&e0X)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$21044$1S&e0X)))))
   (g$make-eval-transformer$20239$1S&e0X
     g$make-eval-transformer$24223$1S&e0X
     (case-lambda
       ((g$x$21045$1S&e0X)
        (g$sanitize-binding$20234$1S&e0X
          (eval-core (g$expanded->core$19629$1S&e0X g$x$21045$1S&e0X))
          g$x$21045$1S&e0X))))
   (g$parse-define$20629$1S&e0X
     g$parse-define$24224$1S&e0X
     (case-lambda
       ((g$x$21046$1S&e0X)
        ((case-lambda
           ((g$t$21047$1S&e0X)
            ((case-lambda
               ((g$ls/false$21048$1S&e0X)
                (if (if g$ls/false$21048$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21049$1S&e0X
                               g$fmls$21050$1S&e0X
                               g$b$21051$1S&e0X
                               g$b*$21052$1S&e0X)
                             (g$id?$20191$1S&e0X g$id$21049$1S&e0X)))
                          g$ls/false$21048$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21053$1S&e0X
                         g$fmls$21054$1S&e0X
                         g$b$21055$1S&e0X
                         g$b*$21056$1S&e0X)
                       (begin
                         (g$verify-formals$20709$1S&e0X
                           g$fmls$21054$1S&e0X
                           g$x$21046$1S&e0X)
                         (values
                           g$id$21053$1S&e0X
                           (cons
                             'defun
                             (cons
                               g$fmls$21054$1S&e0X
                               (cons
                                 g$b$21055$1S&e0X
                                 g$b*$21056$1S&e0X)))))))
                    g$ls/false$21048$1S&e0X)
                  ((case-lambda
                     ((g$t$21057$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21058$1S&e0X)
                          (if (if g$ls/false$21058$1S&e0X
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$21059$1S&e0X
                                         g$val$21060$1S&e0X)
                                       (g$id?$20191$1S&e0X
                                         g$id$21059$1S&e0X)))
                                    g$ls/false$21058$1S&e0X))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$21061$1S&e0X g$val$21062$1S&e0X)
                                 (values
                                   g$id$21061$1S&e0X
                                   (cons 'expr g$val$21062$1S&e0X))))
                              g$ls/false$21058$1S&e0X)
                            ((case-lambda
                               ((g$t$21063$1S&e0X)
                                ((case-lambda
                                   ((g$ls/false$21064$1S&e0X)
                                    (if (if g$ls/false$21064$1S&e0X
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$21065$1S&e0X)
                                                 (g$id?$20191$1S&e0X
                                                   g$id$21065$1S&e0X)))
                                              g$ls/false$21064$1S&e0X))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$21066$1S&e0X)
                                           (values
                                             g$id$21066$1S&e0X
                                             (cons
                                               'expr
                                               (g$bless$20652$1S&e0X
                                                 '(void))))))
                                        g$ls/false$21064$1S&e0X)
                                      (g$syntax-violation$20808$1S&e0X
                                        '#f
                                        '"invalid syntax"
                                        g$t$21063$1S&e0X))))
                                 (g$syntax-dispatch$20689$1S&e0X
                                   g$t$21063$1S&e0X
                                   '(_ any)))))
                             g$t$21057$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21057$1S&e0X
                         '(_ any any)))))
                   g$t$21047$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21047$1S&e0X
               '(_ (any . any) any . each-any)))))
         g$x$21046$1S&e0X))))
   (g$parse-define-syntax$20630$1S&e0X
     g$parse-define-syntax$24225$1S&e0X
     (case-lambda
       ((g$x$21067$1S&e0X)
        ((case-lambda
           ((g$t$21068$1S&e0X)
            ((case-lambda
               ((g$ls/false$21069$1S&e0X)
                (if (if g$ls/false$21069$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21070$1S&e0X g$val$21071$1S&e0X)
                             (g$id?$20191$1S&e0X g$id$21070$1S&e0X)))
                          g$ls/false$21069$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21072$1S&e0X g$val$21073$1S&e0X)
                       (values g$id$21072$1S&e0X g$val$21073$1S&e0X)))
                    g$ls/false$21069$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21068$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21068$1S&e0X
               '(_ any any)))))
         g$x$21067$1S&e0X))))
   (g$scheme-stx-hashtable$20631$1S&e0X
     g$scheme-stx-hashtable$24226$1S&e0X
     (g$make-eq-hashtable$12781$1S&e0X))
   (g$scheme-stx$20632$1S&e0X
     g$scheme-stx$24227$1S&e0X
     (case-lambda
       ((g$sym$21074$1S&e0X)
        ((case-lambda
           ((g$t$21075$1S&e0X)
            (if g$t$21075$1S&e0X
              g$t$21075$1S&e0X
              (begin
                '#f
                ((case-lambda
                   ((g$subst$21076$1S&e0X)
                    ((case-lambda
                       ((g$stx$21077$1S&e0X)
                        ((case-lambda
                           ((g$stx$21078$1S&e0X)
                            (begin
                              (g$hashtable-set!$12785$1S&e0X
                                g$scheme-stx-hashtable$20631$1S&e0X
                                g$sym$21074$1S&e0X
                                g$stx$21078$1S&e0X)
                              g$stx$21078$1S&e0X)))
                         ((case-lambda
                            ((g$t$21079$1S&e0X)
                             (if g$t$21079$1S&e0X
                               ((case-lambda
                                  ((g$x$21080$1S&e0X)
                                   ((case-lambda
                                      ((g$name$21081$1S&e0X
                                         g$label$21082$1S&e0X)
                                       (g$add-subst$20181$1S&e0X
                                         (g$make-rib$20138$1S&e0X
                                           (list g$name$21081$1S&e0X)
                                           (list
                                             g$top-mark*$20124$1S&e0X)
                                           (list g$label$21082$1S&e0X)
                                           '#f
                                           '#f)
                                         g$stx$21077$1S&e0X)))
                                    (car g$x$21080$1S&e0X)
                                    (cdr g$x$21080$1S&e0X))))
                                g$t$21079$1S&e0X)
                               (begin '#f g$stx$21077$1S&e0X))))
                          (g$assq$11821$1S&e0X
                            g$sym$21074$1S&e0X
                            g$subst$21076$1S&e0X)))))
                     (g$make-stx$20164$1S&e0X
                       g$sym$21074$1S&e0X
                       g$top-mark*$20124$1S&e0X
                       '()
                       '()))))
                 (g$library-subst$19854$1S&e0X
                   (g$find-library-by-name$19890$1S&e0X
                     '(psyntax system $all))))))))
         (g$hashtable-ref$12784$1S&e0X
           g$scheme-stx-hashtable$20631$1S&e0X
           g$sym$21074$1S&e0X
           '#f)))))
   (g$lexical-var$20633$1S&e0X g$lexical-var$24228$1S&e0X car)
   (g$lexical-mutable?$20634$1S&e0X g$lexical-mutable?$24229$1S&e0X cdr)
   (g$set-lexical-mutable!$20635$1S&e0X
     g$set-lexical-mutable!$24230$1S&e0X
     set-cdr!)
   (g$add-lexical$20636$1S&e0X
     g$add-lexical$24231$1S&e0X
     (case-lambda
       ((g$lab$21083$1S&e0X g$lex$21084$1S&e0X g$r$21085$1S&e0X)
        (cons
          (g$cons*$11835$1S&e0X
            g$lab$21083$1S&e0X
            'lexical
            g$lex$21084$1S&e0X
            '#f)
          g$r$21085$1S&e0X))))
   (g$add-lexicals$20637$1S&e0X
     g$add-lexicals$24232$1S&e0X
     (case-lambda
       ((g$lab*$21086$1S&e0X g$lex*$21087$1S&e0X g$r$21088$1S&e0X)
        (if (null? g$lab*$21086$1S&e0X)
          g$r$21088$1S&e0X
          (begin
            '#f
            (g$add-lexicals$20637$1S&e0X
              (cdr g$lab*$21086$1S&e0X)
              (cdr g$lex*$21087$1S&e0X)
              (g$add-lexical$20636$1S&e0X
                (car g$lab*$21086$1S&e0X)
                (car g$lex*$21087$1S&e0X)
                g$r$21088$1S&e0X)))))))
   (g$letrec-helper$20638$1S&e0X
     g$letrec-helper$24233$1S&e0X
     (case-lambda
       ((g$e$21089$1S&e0X
          g$r$21090$1S&e0X
          g$mr$21091$1S&e0X
          g$build$21092$1S&e0X)
        ((case-lambda
           ((g$t$21093$1S&e0X)
            ((case-lambda
               ((g$ls/false$21094$1S&e0X)
                (if g$ls/false$21094$1S&e0X
                  (apply
                    (case-lambda
                      ((g$lhs*$21095$1S&e0X
                         g$rhs*$21096$1S&e0X
                         g$b$21097$1S&e0X
                         g$b*$21098$1S&e0X)
                       (if (not (g$valid-bound-ids?$20196$1S&e0X
                                  g$lhs*$21095$1S&e0X))
                         (g$invalid-fmls-error$20654$1S&e0X
                           g$e$21089$1S&e0X
                           g$lhs*$21095$1S&e0X)
                         ((case-lambda
                            ((g$lex*$21099$1S&e0X g$lab*$21100$1S&e0X)
                             ((case-lambda
                                ((g$rib$21101$1S&e0X g$r$21102$1S&e0X)
                                 ((case-lambda
                                    ((g$body$21103$1S&e0X
                                       g$rhs*$21104$1S&e0X)
                                     (g$build$21092$1S&e0X
                                       '#f
                                       g$lex*$21099$1S&e0X
                                       g$rhs*$21104$1S&e0X
                                       g$body$21103$1S&e0X)))
                                  (g$chi-internal$20718$1S&e0X
                                    (g$add-subst$20181$1S&e0X
                                      g$rib$21101$1S&e0X
                                      (cons
                                        g$b$21097$1S&e0X
                                        g$b*$21098$1S&e0X))
                                    g$r$21102$1S&e0X
                                    g$mr$21091$1S&e0X)
                                  (g$chi-expr*$20705$1S&e0X
                                    (g$map$11833$1S&e0X
                                      (case-lambda
                                        ((g$x$21105$1S&e0X)
                                         (g$add-subst$20181$1S&e0X
                                           g$rib$21101$1S&e0X
                                           g$x$21105$1S&e0X)))
                                      g$rhs*$21096$1S&e0X)
                                    g$r$21102$1S&e0X
                                    g$mr$21091$1S&e0X))))
                              (g$make-full-rib$20157$1S&e0X
                                g$lhs*$21095$1S&e0X
                                g$lab*$21100$1S&e0X)
                              (g$add-lexicals$20637$1S&e0X
                                g$lab*$21100$1S&e0X
                                g$lex*$21099$1S&e0X
                                g$r$21090$1S&e0X))))
                          (g$map$11833$1S&e0X
                            g$gen-lexical$20126$1S&e0X
                            g$lhs*$21095$1S&e0X)
                          (g$map$11833$1S&e0X
                            g$gen-label$20128$1S&e0X
                            g$lhs*$21095$1S&e0X)))))
                    g$ls/false$21094$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21093$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21093$1S&e0X
               '(_ #(each (any any)) any . each-any)))))
         g$e$21089$1S&e0X))))
   (g$letrec-transformer$20639$1S&e0X
     g$letrec-transformer$24234$1S&e0X
     (case-lambda
       ((g$e$21106$1S&e0X g$r$21107$1S&e0X g$mr$21108$1S&e0X)
        (g$letrec-helper$20638$1S&e0X
          g$e$21106$1S&e0X
          g$r$21107$1S&e0X
          g$mr$21108$1S&e0X
          g$build-letrec$20118$1S&e0X))))
   (g$letrec*-transformer$20640$1S&e0X
     g$letrec*-transformer$24235$1S&e0X
     (case-lambda
       ((g$e$21109$1S&e0X g$r$21110$1S&e0X g$mr$21111$1S&e0X)
        (g$letrec-helper$20638$1S&e0X
          g$e$21109$1S&e0X
          g$r$21110$1S&e0X
          g$mr$21111$1S&e0X
          g$build-letrec*$20119$1S&e0X))))
   (g$fluid-let-syntax-transformer$20641$1S&e0X
     g$fluid-let-syntax-transformer$24236$1S&e0X
     (case-lambda
       ((g$e$21112$1S&e0X g$r$21113$1S&e0X g$mr$21114$1S&e0X)
        (letrec* ((g$lookup$21115$1S&e0X
                    (case-lambda
                      ((g$x$21125$1S&e0X)
                       ((case-lambda
                          ((g$t$21126$1S&e0X)
                           (if g$t$21126$1S&e0X
                             g$t$21126$1S&e0X
                             (begin
                               '#f
                               (g$syntax-violation$20808$1S&e0X
                                 '#f
                                 '"unbound identifier"
                                 g$e$21112$1S&e0X
                                 g$x$21125$1S&e0X)))))
                        (g$id->label$20204$1S&e0X g$x$21125$1S&e0X))))))
          ((case-lambda
             ((g$t$21116$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21117$1S&e0X)
                  (if g$ls/false$21117$1S&e0X
                    (apply
                      (case-lambda
                        ((g$lhs*$21118$1S&e0X
                           g$rhs*$21119$1S&e0X
                           g$b$21120$1S&e0X
                           g$b*$21121$1S&e0X)
                         (if (not (g$valid-bound-ids?$20196$1S&e0X
                                    g$lhs*$21118$1S&e0X))
                           (g$invalid-fmls-error$20654$1S&e0X
                             g$e$21112$1S&e0X
                             g$lhs*$21118$1S&e0X)
                           ((case-lambda
                              ((g$lab*$21122$1S&e0X g$rhs*$21123$1S&e0X)
                               (g$chi-internal$20718$1S&e0X
                                 (cons
                                   g$b$21120$1S&e0X
                                   g$b*$21121$1S&e0X)
                                 (append
                                   (g$map$11833$1S&e0X
                                     cons
                                     g$lab*$21122$1S&e0X
                                     g$rhs*$21123$1S&e0X)
                                   g$r$21113$1S&e0X)
                                 (append
                                   (g$map$11833$1S&e0X
                                     cons
                                     g$lab*$21122$1S&e0X
                                     g$rhs*$21123$1S&e0X)
                                   g$mr$21114$1S&e0X))))
                            (g$map$11833$1S&e0X
                              g$lookup$21115$1S&e0X
                              g$lhs*$21118$1S&e0X)
                            (g$map$11833$1S&e0X
                              (case-lambda
                                ((g$x$21124$1S&e0X)
                                 (g$make-eval-transformer$20239$1S&e0X
                                   (g$expand-transformer$20737$1S&e0X
                                     g$x$21124$1S&e0X
                                     g$mr$21114$1S&e0X))))
                              g$rhs*$21119$1S&e0X)))))
                      g$ls/false$21117$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$21116$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21116$1S&e0X
                 '(_ #(each (any any)) any . each-any)))))
           g$e$21112$1S&e0X)))))
   (g$type-descriptor-transformer$20642$1S&e0X
     g$type-descriptor-transformer$24237$1S&e0X
     (case-lambda
       ((g$e$21127$1S&e0X g$r$21128$1S&e0X g$mr$21129$1S&e0X)
        ((case-lambda
           ((g$t$21130$1S&e0X)
            ((case-lambda
               ((g$ls/false$21131$1S&e0X)
                (if (if g$ls/false$21131$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21132$1S&e0X)
                             (g$id?$20191$1S&e0X g$id$21132$1S&e0X)))
                          g$ls/false$21131$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21133$1S&e0X)
                       ((case-lambda
                          ((g$lab$21134$1S&e0X)
                           ((case-lambda
                              ((g$b$21135$1S&e0X)
                               ((case-lambda
                                  ((g$type$21136$1S&e0X)
                                   (begin
                                     (if (not g$lab$21134$1S&e0X)
                                       (g$raise-unbound-error$20210$1S&e0X
                                         g$id$21133$1S&e0X)
                                       (void))
                                     (if (not (if (eq? g$type$21136$1S&e0X
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$20209$1S&e0X
                                                           g$b$21135$1S&e0X))))
                                                '#f))
                                       (g$syntax-violation$20808$1S&e0X
                                         '#f
                                         '"not a record type"
                                         g$e$21127$1S&e0X)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$20209$1S&e0X
                                         g$b$21135$1S&e0X)))))
                                (g$binding-type$20208$1S&e0X
                                  g$b$21135$1S&e0X))))
                            (g$label->binding$20206$1S&e0X
                              g$lab$21134$1S&e0X
                              g$r$21128$1S&e0X))))
                        (g$id->label$20204$1S&e0X g$id$21133$1S&e0X))))
                    g$ls/false$21131$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21130$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21130$1S&e0X
               '(_ any)))))
         g$e$21127$1S&e0X))))
   (g$record-type-descriptor-transformer$20643$1S&e0X
     g$record-type-descriptor-transformer$24238$1S&e0X
     (case-lambda
       ((g$e$21137$1S&e0X g$r$21138$1S&e0X g$mr$21139$1S&e0X)
        ((case-lambda
           ((g$t$21140$1S&e0X)
            ((case-lambda
               ((g$ls/false$21141$1S&e0X)
                (if (if g$ls/false$21141$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21142$1S&e0X)
                             (g$id?$20191$1S&e0X g$id$21142$1S&e0X)))
                          g$ls/false$21141$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21143$1S&e0X)
                       ((case-lambda
                          ((g$lab$21144$1S&e0X)
                           ((case-lambda
                              ((g$b$21145$1S&e0X)
                               ((case-lambda
                                  ((g$type$21146$1S&e0X)
                                   (begin
                                     (if (not g$lab$21144$1S&e0X)
                                       (g$raise-unbound-error$20210$1S&e0X
                                         g$id$21143$1S&e0X)
                                       (void))
                                     (if (not (if (eq? g$type$21146$1S&e0X
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$20209$1S&e0X
                                                      g$b$21145$1S&e0X)))
                                                '#f))
                                       (g$syntax-violation$20808$1S&e0X
                                         '#f
                                         '"not a record type"
                                         g$e$21137$1S&e0X)
                                       (void))
                                     (g$chi-expr$20707$1S&e0X
                                       (car (g$binding-value$20209$1S&e0X
                                              g$b$21145$1S&e0X))
                                       g$r$21138$1S&e0X
                                       g$mr$21139$1S&e0X))))
                                (g$binding-type$20208$1S&e0X
                                  g$b$21145$1S&e0X))))
                            (g$label->binding$20206$1S&e0X
                              g$lab$21144$1S&e0X
                              g$r$21138$1S&e0X))))
                        (g$id->label$20204$1S&e0X g$id$21143$1S&e0X))))
                    g$ls/false$21141$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21140$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21140$1S&e0X
               '(_ any)))))
         g$e$21137$1S&e0X))))
   (g$record-constructor-descriptor-transformer$20644$1S&e0X
     g$record-constructor-descriptor-transformer$24239$1S&e0X
     (case-lambda
       ((g$e$21147$1S&e0X g$r$21148$1S&e0X g$mr$21149$1S&e0X)
        ((case-lambda
           ((g$t$21150$1S&e0X)
            ((case-lambda
               ((g$ls/false$21151$1S&e0X)
                (if (if g$ls/false$21151$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21152$1S&e0X)
                             (g$id?$20191$1S&e0X g$id$21152$1S&e0X)))
                          g$ls/false$21151$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21153$1S&e0X)
                       ((case-lambda
                          ((g$lab$21154$1S&e0X)
                           ((case-lambda
                              ((g$b$21155$1S&e0X)
                               ((case-lambda
                                  ((g$type$21156$1S&e0X)
                                   (begin
                                     (if (not g$lab$21154$1S&e0X)
                                       (g$raise-unbound-error$20210$1S&e0X
                                         g$id$21153$1S&e0X)
                                       (void))
                                     (if (not (if (eq? g$type$21156$1S&e0X
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$20209$1S&e0X
                                                      g$b$21155$1S&e0X)))
                                                '#f))
                                       (g$syntax-violation$20808$1S&e0X
                                         '#f
                                         '"invalid type"
                                         g$e$21147$1S&e0X)
                                       (void))
                                     (g$chi-expr$20707$1S&e0X
                                       (g$cadr$12684$1S&e0X
                                         (g$binding-value$20209$1S&e0X
                                           g$b$21155$1S&e0X))
                                       g$r$21148$1S&e0X
                                       g$mr$21149$1S&e0X))))
                                (g$binding-type$20208$1S&e0X
                                  g$b$21155$1S&e0X))))
                            (g$label->binding$20206$1S&e0X
                              g$lab$21154$1S&e0X
                              g$r$21148$1S&e0X))))
                        (g$id->label$20204$1S&e0X g$id$21153$1S&e0X))))
                    g$ls/false$21151$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21150$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21150$1S&e0X
               '(_ any)))))
         g$e$21147$1S&e0X))))
   (g$when-macro$20645$1S&e0X
     g$when-macro$24240$1S&e0X
     (case-lambda
       ((g$e$21157$1S&e0X)
        ((case-lambda
           ((g$t$21158$1S&e0X)
            ((case-lambda
               ((g$ls/false$21159$1S&e0X)
                (if g$ls/false$21159$1S&e0X
                  (apply
                    (case-lambda
                      ((g$test$21160$1S&e0X
                         g$e$21161$1S&e0X
                         g$e*$21162$1S&e0X)
                       (g$bless$20652$1S&e0X
                         (list
                           'if
                           g$test$21160$1S&e0X
                           (cons
                             'begin
                             (cons
                               g$e$21161$1S&e0X
                               g$e*$21162$1S&e0X))))))
                    g$ls/false$21159$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21158$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21158$1S&e0X
               '(_ any any . each-any)))))
         g$e$21157$1S&e0X))))
   (g$unless-macro$20646$1S&e0X
     g$unless-macro$24241$1S&e0X
     (case-lambda
       ((g$e$21163$1S&e0X)
        ((case-lambda
           ((g$t$21164$1S&e0X)
            ((case-lambda
               ((g$ls/false$21165$1S&e0X)
                (if g$ls/false$21165$1S&e0X
                  (apply
                    (case-lambda
                      ((g$test$21166$1S&e0X
                         g$e$21167$1S&e0X
                         g$e*$21168$1S&e0X)
                       (g$bless$20652$1S&e0X
                         (list
                           'if
                           (list 'not g$test$21166$1S&e0X)
                           (cons
                             'begin
                             (cons
                               g$e$21167$1S&e0X
                               g$e*$21168$1S&e0X))))))
                    g$ls/false$21165$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21164$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21164$1S&e0X
               '(_ any any . each-any)))))
         g$e$21163$1S&e0X))))
   (g$if-transformer$20647$1S&e0X
     g$if-transformer$24242$1S&e0X
     (case-lambda
       ((g$e$21169$1S&e0X g$r$21170$1S&e0X g$mr$21171$1S&e0X)
        ((case-lambda
           ((g$t$21172$1S&e0X)
            ((case-lambda
               ((g$ls/false$21173$1S&e0X)
                (if g$ls/false$21173$1S&e0X
                  (apply
                    (case-lambda
                      ((g$e0$21174$1S&e0X
                         g$e1$21175$1S&e0X
                         g$e2$21176$1S&e0X)
                       (list
                         'if
                         (g$chi-expr$20707$1S&e0X
                           g$e0$21174$1S&e0X
                           g$r$21170$1S&e0X
                           g$mr$21171$1S&e0X)
                         (g$chi-expr$20707$1S&e0X
                           g$e1$21175$1S&e0X
                           g$r$21170$1S&e0X
                           g$mr$21171$1S&e0X)
                         (g$chi-expr$20707$1S&e0X
                           g$e2$21176$1S&e0X
                           g$r$21170$1S&e0X
                           g$mr$21171$1S&e0X))))
                    g$ls/false$21173$1S&e0X)
                  ((case-lambda
                     ((g$t$21177$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21178$1S&e0X)
                          (if g$ls/false$21178$1S&e0X
                            (apply
                              (case-lambda
                                ((g$e0$21179$1S&e0X g$e1$21180$1S&e0X)
                                 (list
                                   'if
                                   (g$chi-expr$20707$1S&e0X
                                     g$e0$21179$1S&e0X
                                     g$r$21170$1S&e0X
                                     g$mr$21171$1S&e0X)
                                   (g$chi-expr$20707$1S&e0X
                                     g$e1$21180$1S&e0X
                                     g$r$21170$1S&e0X
                                     g$mr$21171$1S&e0X)
                                   (g$build-void$20117$1S&e0X))))
                              g$ls/false$21178$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21177$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21177$1S&e0X
                         '(_ any any)))))
                   g$t$21172$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21172$1S&e0X
               '(_ any any any)))))
         g$e$21169$1S&e0X))))
   (g$case-macro$20648$1S&e0X
     g$case-macro$24243$1S&e0X
     (case-lambda
       ((g$e$21181$1S&e0X)
        (letrec* ((g$build-last$21182$1S&e0X
                    (case-lambda
                      ((g$cls$21202$1S&e0X)
                       ((case-lambda
                          ((g$t$21203$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$21204$1S&e0X)
                               (if g$ls/false$21204$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$e$21205$1S&e0X
                                        g$e*$21206$1S&e0X)
                                      (cons
                                        'begin
                                        (cons
                                          '#f
                                          (cons
                                            g$e$21205$1S&e0X
                                            g$e*$21206$1S&e0X)))))
                                   g$ls/false$21204$1S&e0X)
                                 ((case-lambda
                                    ((g$t$21207$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$21208$1S&e0X)
                                         (if g$ls/false$21208$1S&e0X
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$21183$1S&e0X
                                                  g$cls$21202$1S&e0X
                                                  '(if #f #f))))
                                             g$ls/false$21208$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$21207$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$21207$1S&e0X
                                        '_))))
                                  g$t$21203$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$21203$1S&e0X
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$21202$1S&e0X))))
                  (g$build-one$21183$1S&e0X
                    (case-lambda
                      ((g$cls$21195$1S&e0X g$k$21196$1S&e0X)
                       ((case-lambda
                          ((g$t$21197$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$21198$1S&e0X)
                               (if g$ls/false$21198$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$d*$21199$1S&e0X
                                        g$e$21200$1S&e0X
                                        g$e*$21201$1S&e0X)
                                      (if (g$=$13694$1S&e0X
                                            '1
                                            (length g$d*$21199$1S&e0X))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$21199$1S&e0X)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$21200$1S&e0X
                                              g$e*$21201$1S&e0X))
                                          g$k$21196$1S&e0X)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$21199$1S&e0X))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$21200$1S&e0X
                                              g$e*$21201$1S&e0X))
                                          g$k$21196$1S&e0X))))
                                   g$ls/false$21198$1S&e0X)
                                 (g$syntax-violation$20808$1S&e0X
                                   '#f
                                   '"invalid syntax"
                                   g$t$21197$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$21197$1S&e0X
                              '(each-any any . each-any)))))
                        g$cls$21195$1S&e0X)))))
          ((case-lambda
             ((g$t$21184$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21185$1S&e0X)
                  (if g$ls/false$21185$1S&e0X
                    (apply
                      (case-lambda
                        ((g$expr$21186$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$21186$1S&e0X))
                               '((if #f #f)))))))
                      g$ls/false$21185$1S&e0X)
                    ((case-lambda
                       ((g$t$21187$1S&e0X)
                        ((case-lambda
                           ((g$ls/false$21188$1S&e0X)
                            (if g$ls/false$21188$1S&e0X
                              (apply
                                (case-lambda
                                  ((g$expr$21189$1S&e0X
                                     g$cls$21190$1S&e0X
                                     g$cls*$21191$1S&e0X)
                                   (g$bless$20652$1S&e0X
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$21189$1S&e0X))
                                       ((letrec ((g$f$21192$1S&e0X
                                                   (case-lambda
                                                     ((g$cls$21193$1S&e0X
                                                        g$cls*$21194$1S&e0X)
                                                      (if (null?
                                                            g$cls*$21194$1S&e0X)
                                                        (g$build-last$21182$1S&e0X
                                                          g$cls$21193$1S&e0X)
                                                        (g$build-one$21183$1S&e0X
                                                          g$cls$21193$1S&e0X
                                                          (g$f$21192$1S&e0X
                                                            (car g$cls*$21194$1S&e0X)
                                                            (cdr g$cls*$21194$1S&e0X))))))))
                                          g$f$21192$1S&e0X)
                                        g$cls$21190$1S&e0X
                                        g$cls*$21191$1S&e0X)))))
                                g$ls/false$21188$1S&e0X)
                              (g$syntax-violation$20808$1S&e0X
                                '#f
                                '"invalid syntax"
                                g$t$21187$1S&e0X))))
                         (g$syntax-dispatch$20689$1S&e0X
                           g$t$21187$1S&e0X
                           '(_ any any . each-any)))))
                     g$t$21184$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21184$1S&e0X
                 '(_ any)))))
           g$e$21181$1S&e0X)))))
   (g$quote-transformer$20649$1S&e0X
     g$quote-transformer$24244$1S&e0X
     (case-lambda
       ((g$e$21209$1S&e0X g$r$21210$1S&e0X g$mr$21211$1S&e0X)
        ((case-lambda
           ((g$t$21212$1S&e0X)
            ((case-lambda
               ((g$ls/false$21213$1S&e0X)
                (if g$ls/false$21213$1S&e0X
                  (apply
                    (case-lambda
                      ((g$datum$21214$1S&e0X)
                       (list
                         'quote
                         (g$stx->datum$20202$1S&e0X
                           g$datum$21214$1S&e0X))))
                    g$ls/false$21213$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21212$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21212$1S&e0X
               '(_ any)))))
         g$e$21209$1S&e0X))))
   (g$case-lambda-transformer$20650$1S&e0X
     g$case-lambda-transformer$24245$1S&e0X
     (case-lambda
       ((g$e$21215$1S&e0X g$r$21216$1S&e0X g$mr$21217$1S&e0X)
        ((case-lambda
           ((g$t$21218$1S&e0X)
            ((case-lambda
               ((g$ls/false$21219$1S&e0X)
                (if g$ls/false$21219$1S&e0X
                  (apply
                    (case-lambda
                      ((g$fmls*$21220$1S&e0X
                         g$b*$21221$1S&e0X
                         g$b**$21222$1S&e0X)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$20711$1S&e0X
                              g$e$21215$1S&e0X
                              g$fmls*$21220$1S&e0X
                              (g$map$11833$1S&e0X
                                cons
                                g$b*$21221$1S&e0X
                                g$b**$21222$1S&e0X)
                              g$r$21216$1S&e0X
                              g$mr$21217$1S&e0X)))
                         (case-lambda
                           ((g$fmls*$21225$1S&e0X g$body*$21226$1S&e0X)
                            ((case-lambda
                               ((g$body*$21227$1S&e0X
                                  g$fmls*$21228$1S&e0X)
                                (g$build-case-lambda$20114$1S&e0X
                                  '#f
                                  g$fmls*$21228$1S&e0X
                                  g$body*$21227$1S&e0X)))
                             g$body*$21226$1S&e0X
                             g$fmls*$21225$1S&e0X))))))
                    g$ls/false$21219$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21218$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21218$1S&e0X
               '(_ . #(each (any any . each-any)))))))
         g$e$21215$1S&e0X))))
   (g$lambda-transformer$20651$1S&e0X
     g$lambda-transformer$24246$1S&e0X
     (case-lambda
       ((g$e$21229$1S&e0X g$r$21230$1S&e0X g$mr$21231$1S&e0X)
        ((case-lambda
           ((g$t$21232$1S&e0X)
            ((case-lambda
               ((g$ls/false$21233$1S&e0X)
                (if g$ls/false$21233$1S&e0X
                  (apply
                    (case-lambda
                      ((g$fmls$21234$1S&e0X
                         g$b$21235$1S&e0X
                         g$b*$21236$1S&e0X)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$20710$1S&e0X
                              g$e$21229$1S&e0X
                              g$fmls$21234$1S&e0X
                              (cons g$b$21235$1S&e0X g$b*$21236$1S&e0X)
                              g$r$21230$1S&e0X
                              g$mr$21231$1S&e0X)))
                         (case-lambda
                           ((g$fmls$21239$1S&e0X g$body$21240$1S&e0X)
                            ((case-lambda
                               ((g$body$21241$1S&e0X
                                  g$fmls$21242$1S&e0X)
                                (g$build-lambda$20113$1S&e0X
                                  '#f
                                  g$fmls$21242$1S&e0X
                                  g$body$21241$1S&e0X)))
                             g$body$21240$1S&e0X
                             g$fmls$21239$1S&e0X))))))
                    g$ls/false$21233$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21232$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21232$1S&e0X
               '(_ any any . each-any)))))
         g$e$21229$1S&e0X))))
   (g$bless$20652$1S&e0X
     g$bless$24247$1S&e0X
     (case-lambda
       ((g$x$21243$1S&e0X)
        (g$mkstx$20179$1S&e0X
          ((letrec ((g$f$21244$1S&e0X
                      (case-lambda
                        ((g$x$21245$1S&e0X)
                         (if (g$stx?$20163$1S&e0X g$x$21245$1S&e0X)
                           g$x$21245$1S&e0X
                           (if (pair? g$x$21245$1S&e0X)
                             (cons
                               (g$f$21244$1S&e0X (car g$x$21245$1S&e0X))
                               (g$f$21244$1S&e0X
                                 (cdr g$x$21245$1S&e0X)))
                             (if (g$symbol?$12665$1S&e0X
                                   g$x$21245$1S&e0X)
                               (g$scheme-stx$20632$1S&e0X
                                 g$x$21245$1S&e0X)
                               (if (g$vector?$12663$1S&e0X
                                     g$x$21245$1S&e0X)
                                 (g$vector-map$12732$1S&e0X
                                   g$f$21244$1S&e0X
                                   g$x$21245$1S&e0X)
                                 (begin '#f g$x$21245$1S&e0X)))))))))
             g$f$21244$1S&e0X)
           g$x$21243$1S&e0X)
          '()
          '()
          '()))))
   (g$with-syntax-macro$20653$1S&e0X
     g$with-syntax-macro$24248$1S&e0X
     (case-lambda
       ((g$e$21246$1S&e0X)
        ((case-lambda
           ((g$t$21247$1S&e0X)
            ((case-lambda
               ((g$ls/false$21248$1S&e0X)
                (if g$ls/false$21248$1S&e0X
                  (apply
                    (case-lambda
                      ((g$pat*$21249$1S&e0X
                         g$expr*$21250$1S&e0X
                         g$b$21251$1S&e0X
                         g$b*$21252$1S&e0X)
                       ((case-lambda
                          ((g$idn*$21253$1S&e0X)
                           (begin
                             (g$verify-formals$20709$1S&e0X
                               (g$map$11833$1S&e0X
                                 car
                                 g$idn*$21253$1S&e0X)
                               g$e$21246$1S&e0X)
                             ((case-lambda
                                ((g$t*$21254$1S&e0X)
                                 (g$bless$20652$1S&e0X
                                   (list
                                     'let
                                     (g$map$11833$1S&e0X
                                       list
                                       g$t*$21254$1S&e0X
                                       g$expr*$21250$1S&e0X)
                                     ((letrec ((g$f$21255$1S&e0X
                                                 (case-lambda
                                                   ((g$pat*$21256$1S&e0X
                                                      g$t*$21257$1S&e0X)
                                                    (if (null?
                                                          g$pat*$21256$1S&e0X)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$21251$1S&e0X
                                                          g$b*$21252$1S&e0X))
                                                      (begin
                                                        '#f
                                                        (list
                                                          'syntax-case
                                                          (car g$t*$21257$1S&e0X)
                                                          '()
                                                          (list
                                                            (car g$pat*$21256$1S&e0X)
                                                            (g$f$21255$1S&e0X
                                                              (cdr g$pat*$21256$1S&e0X)
                                                              (cdr g$t*$21257$1S&e0X)))
                                                          (list
                                                            '_
                                                            (list
                                                              'assertion-violation
                                                              ''with-syntax
                                                              '"pattern does not match value"
                                                              (list
                                                                'quote
                                                                (car g$pat*$21256$1S&e0X))
                                                              (car g$t*$21257$1S&e0X))))))))))
                                        g$f$21255$1S&e0X)
                                      g$pat*$21249$1S&e0X
                                      g$t*$21254$1S&e0X)))))
                              (g$generate-temporaries$20798$1S&e0X
                                g$expr*$21250$1S&e0X)))))
                        ((letrec ((g$f$21258$1S&e0X
                                    (case-lambda
                                      ((g$pat*$21259$1S&e0X)
                                       (if (null? g$pat*$21259$1S&e0X)
                                         '()
                                         (begin
                                           '#f
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$convert-pattern$20688$1S&e0X
                                                  (car g$pat*$21259$1S&e0X)
                                                  '())))
                                             (case-lambda
                                               ((g$pat$21262$1S&e0X
                                                  g$idn*$21263$1S&e0X)
                                                ((case-lambda
                                                   ((g$idn*$21264$1S&e0X
                                                      g$pat$21265$1S&e0X)
                                                    (append
                                                      g$idn*$21264$1S&e0X
                                                      (g$f$21258$1S&e0X
                                                        (cdr g$pat*$21259$1S&e0X)))))
                                                 g$idn*$21263$1S&e0X
                                                 g$pat$21262$1S&e0X))))))))))
                           g$f$21258$1S&e0X)
                         g$pat*$21249$1S&e0X))))
                    g$ls/false$21248$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21247$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21247$1S&e0X
               '(_ #(each (any any)) any . each-any)))))
         g$e$21246$1S&e0X))))
   (g$invalid-fmls-error$20654$1S&e0X
     g$invalid-fmls-error$24249$1S&e0X
     (case-lambda
       ((g$stx$21266$1S&e0X g$fmls$21267$1S&e0X)
        ((case-lambda
           ((g$t$21268$1S&e0X)
            ((case-lambda
               ((g$ls/false$21269$1S&e0X)
                (if g$ls/false$21269$1S&e0X
                  (apply
                    (case-lambda
                      ((g$id*$21270$1S&e0X g$last$21271$1S&e0X)
                       ((letrec ((g$f$21272$1S&e0X
                                   (case-lambda
                                     ((g$id*$21273$1S&e0X)
                                      (if (null? g$id*$21273$1S&e0X)
                                        (values)
                                        (if (not (g$id?$20191$1S&e0X
                                                   (car g$id*$21273$1S&e0X)))
                                          (g$syntax-violation$20808$1S&e0X
                                            '#f
                                            '"not an identifier"
                                            g$stx$21266$1S&e0X
                                            (car g$id*$21273$1S&e0X))
                                          (begin
                                            '#f
                                            (g$f$21272$1S&e0X
                                              (cdr g$id*$21273$1S&e0X))
                                            (if (g$bound-id-member?$20198$1S&e0X
                                                  (car g$id*$21273$1S&e0X)
                                                  (cdr g$id*$21273$1S&e0X))
                                              (g$syntax-violation$20808$1S&e0X
                                                '#f
                                                '"duplicate binding"
                                                g$stx$21266$1S&e0X
                                                (car g$id*$21273$1S&e0X))
                                              (void)))))))))
                          g$f$21272$1S&e0X)
                        (if (g$id?$20191$1S&e0X g$last$21271$1S&e0X)
                          (cons g$last$21271$1S&e0X g$id*$21270$1S&e0X)
                          (if (g$syntax-null?$20186$1S&e0X
                                g$last$21271$1S&e0X)
                            g$id*$21270$1S&e0X
                            (begin
                              '#f
                              (g$syntax-violation$20808$1S&e0X
                                '#f
                                '"not an identifier"
                                g$stx$21266$1S&e0X
                                g$last$21271$1S&e0X)))))))
                    g$ls/false$21269$1S&e0X)
                  ((case-lambda
                     ((g$t$21274$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21275$1S&e0X)
                          (if g$ls/false$21275$1S&e0X
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$20808$1S&e0X
                                   '#f
                                   '"malformed binding form"
                                   g$stx$21266$1S&e0X
                                   g$fmls$21267$1S&e0X)))
                              g$ls/false$21275$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21274$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21274$1S&e0X
                         '_))))
                   g$t$21268$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21268$1S&e0X
               '#(each+ any () any)))))
         g$fmls$21267$1S&e0X))))
   (g$let-macro$20655$1S&e0X
     g$let-macro$24250$1S&e0X
     (case-lambda
       ((g$stx$21276$1S&e0X)
        ((case-lambda
           ((g$t$21277$1S&e0X)
            ((case-lambda
               ((g$ls/false$21278$1S&e0X)
                (if g$ls/false$21278$1S&e0X
                  (apply
                    (case-lambda
                      ((g$lhs*$21279$1S&e0X
                         g$rhs*$21280$1S&e0X
                         g$b$21281$1S&e0X
                         g$b*$21282$1S&e0X)
                       (if (g$valid-bound-ids?$20196$1S&e0X
                             g$lhs*$21279$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$21279$1S&e0X
                                 (cons
                                   g$b$21281$1S&e0X
                                   g$b*$21282$1S&e0X)))
                             g$rhs*$21280$1S&e0X))
                         (g$invalid-fmls-error$20654$1S&e0X
                           g$stx$21276$1S&e0X
                           g$lhs*$21279$1S&e0X))))
                    g$ls/false$21278$1S&e0X)
                  ((case-lambda
                     ((g$t$21283$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21284$1S&e0X)
                          (if (if g$ls/false$21284$1S&e0X
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$21285$1S&e0X
                                         g$lhs*$21286$1S&e0X
                                         g$rhs*$21287$1S&e0X
                                         g$b$21288$1S&e0X
                                         g$b*$21289$1S&e0X)
                                       (g$id?$20191$1S&e0X
                                         g$f$21285$1S&e0X)))
                                    g$ls/false$21284$1S&e0X))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$21290$1S&e0X
                                   g$lhs*$21291$1S&e0X
                                   g$rhs*$21292$1S&e0X
                                   g$b$21293$1S&e0X
                                   g$b*$21294$1S&e0X)
                                 (if (g$valid-bound-ids?$20196$1S&e0X
                                       g$lhs*$21291$1S&e0X)
                                   (g$bless$20652$1S&e0X
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$21290$1S&e0X
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$21291$1S&e0X
                                                 (cons
                                                   g$b$21293$1S&e0X
                                                   g$b*$21294$1S&e0X)))))
                                         g$f$21290$1S&e0X)
                                       g$rhs*$21292$1S&e0X))
                                   (g$invalid-fmls-error$20654$1S&e0X
                                     g$stx$21276$1S&e0X
                                     g$lhs*$21291$1S&e0X))))
                              g$ls/false$21284$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21283$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21283$1S&e0X
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$21277$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21277$1S&e0X
               '(_ #(each (any any)) any . each-any)))))
         g$stx$21276$1S&e0X))))
   (g$let-values-macro$20656$1S&e0X
     g$let-values-macro$24251$1S&e0X
     (case-lambda
       ((g$stx$21295$1S&e0X)
        (letrec* ((g$rename$21296$1S&e0X
                    (case-lambda
                      ((g$x$21347$1S&e0X
                         g$old*$21348$1S&e0X
                         g$new*$21349$1S&e0X)
                       (begin
                         (if (not (g$id?$20191$1S&e0X g$x$21347$1S&e0X))
                           (g$syntax-violation$20808$1S&e0X
                             '#f
                             '"not an indentifier"
                             g$stx$21295$1S&e0X
                             g$x$21347$1S&e0X)
                           (void))
                         (if (g$bound-id-member?$20198$1S&e0X
                               g$x$21347$1S&e0X
                               g$old*$21348$1S&e0X)
                           (g$syntax-violation$20808$1S&e0X
                             '#f
                             '"duplicate binding"
                             g$stx$21295$1S&e0X
                             g$x$21347$1S&e0X)
                           (void))
                         ((case-lambda
                            ((g$y$21350$1S&e0X)
                             (values
                               g$y$21350$1S&e0X
                               (cons
                                 g$x$21347$1S&e0X
                                 g$old*$21348$1S&e0X)
                               (cons
                                 g$y$21350$1S&e0X
                                 g$new*$21349$1S&e0X))))
                          (gensym
                            (g$syntax->datum$20811$1S&e0X
                              g$x$21347$1S&e0X)))))))
                  (g$rename*$21297$1S&e0X
                    (case-lambda
                      ((g$x*$21338$1S&e0X
                         g$old*$21339$1S&e0X
                         g$new*$21340$1S&e0X)
                       (if (null? g$x*$21338$1S&e0X)
                         (values
                           '()
                           g$old*$21339$1S&e0X
                           g$new*$21340$1S&e0X)
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$rename$21296$1S&e0X
                                  (car g$x*$21338$1S&e0X)
                                  g$old*$21339$1S&e0X
                                  g$new*$21340$1S&e0X)))
                             (case-lambda
                               ((g$x$21341$1S&e0X
                                  g$old*$21342$1S&e0X
                                  g$new*$21343$1S&e0X)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$rename*$21297$1S&e0X
                                       (cdr g$x*$21338$1S&e0X)
                                       g$old*$21342$1S&e0X
                                       g$new*$21343$1S&e0X)))
                                  (case-lambda
                                    ((g$x*$21344$1S&e0X
                                       g$old*$21345$1S&e0X
                                       g$new*$21346$1S&e0X)
                                     (values
                                       (cons
                                         g$x$21341$1S&e0X
                                         g$x*$21344$1S&e0X)
                                       g$old*$21345$1S&e0X
                                       g$new*$21346$1S&e0X)))))))))))))
          ((case-lambda
             ((g$t$21298$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21299$1S&e0X)
                  (if g$ls/false$21299$1S&e0X
                    (apply
                      (case-lambda
                        ((g$b$21300$1S&e0X g$b*$21301$1S&e0X)
                         (g$cons*$11835$1S&e0X
                           (g$bless$20652$1S&e0X 'let)
                           '()
                           g$b$21300$1S&e0X
                           g$b*$21301$1S&e0X)))
                      g$ls/false$21299$1S&e0X)
                    ((case-lambda
                       ((g$t$21302$1S&e0X)
                        ((case-lambda
                           ((g$ls/false$21303$1S&e0X)
                            (if g$ls/false$21303$1S&e0X
                              (apply
                                (case-lambda
                                  ((g$lhs*$21304$1S&e0X
                                     g$rhs*$21305$1S&e0X
                                     g$b$21306$1S&e0X
                                     g$b*$21307$1S&e0X)
                                   (g$bless$20652$1S&e0X
                                     ((letrec ((g$f$21308$1S&e0X
                                                 (case-lambda
                                                   ((g$lhs*$21309$1S&e0X
                                                      g$rhs*$21310$1S&e0X
                                                      g$old*$21311$1S&e0X
                                                      g$new*$21312$1S&e0X)
                                                    (if (null?
                                                          g$lhs*$21309$1S&e0X)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$11833$1S&e0X
                                                            list
                                                            g$old*$21311$1S&e0X
                                                            g$new*$21312$1S&e0X)
                                                          (cons
                                                            g$b$21306$1S&e0X
                                                            g$b*$21307$1S&e0X)))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$21313$1S&e0X)
                                                            ((case-lambda
                                                               ((g$ls/false$21314$1S&e0X)
                                                                (if g$ls/false$21314$1S&e0X
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$21315$1S&e0X)
                                                                       (call-with-values
                                                                         (case-lambda
                                                                           (()
                                                                            (g$rename*$21297$1S&e0X
                                                                              g$x*$21315$1S&e0X
                                                                              g$old*$21311$1S&e0X
                                                                              g$new*$21312$1S&e0X)))
                                                                         (case-lambda
                                                                           ((g$y*$21319$1S&e0X
                                                                              g$old*$21320$1S&e0X
                                                                              g$new*$21321$1S&e0X)
                                                                            ((case-lambda
                                                                               ((g$new*$21322$1S&e0X
                                                                                  g$old*$21323$1S&e0X
                                                                                  g$y*$21324$1S&e0X)
                                                                                (list
                                                                                  'call-with-values
                                                                                  (list
                                                                                    'lambda
                                                                                    '()
                                                                                    (car g$rhs*$21310$1S&e0X))
                                                                                  (list
                                                                                    'lambda
                                                                                    g$y*$21324$1S&e0X
                                                                                    (g$f$21308$1S&e0X
                                                                                      (cdr g$lhs*$21309$1S&e0X)
                                                                                      (cdr g$rhs*$21310$1S&e0X)
                                                                                      g$old*$21323$1S&e0X
                                                                                      g$new*$21322$1S&e0X)))))
                                                                             g$new*$21321$1S&e0X
                                                                             g$old*$21320$1S&e0X
                                                                             g$y*$21319$1S&e0X))))))
                                                                    g$ls/false$21314$1S&e0X)
                                                                  ((case-lambda
                                                                     ((g$t$21325$1S&e0X)
                                                                      ((case-lambda
                                                                         ((g$ls/false$21326$1S&e0X)
                                                                          (if g$ls/false$21326$1S&e0X
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$21327$1S&e0X
                                                                                   g$x$21328$1S&e0X)
                                                                                 (call-with-values
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$rename$21296$1S&e0X
                                                                                        g$x$21328$1S&e0X
                                                                                        g$old*$21311$1S&e0X
                                                                                        g$new*$21312$1S&e0X)))
                                                                                   (case-lambda
                                                                                     ((g$y$21329$1S&e0X
                                                                                        g$old*$21330$1S&e0X
                                                                                        g$new*$21331$1S&e0X)
                                                                                      (call-with-values
                                                                                        (case-lambda
                                                                                          (()
                                                                                           (g$rename*$21297$1S&e0X
                                                                                             g$x*$21327$1S&e0X
                                                                                             g$old*$21330$1S&e0X
                                                                                             g$new*$21331$1S&e0X)))
                                                                                        (case-lambda
                                                                                          ((g$y*$21332$1S&e0X
                                                                                             g$old*$21333$1S&e0X
                                                                                             g$new*$21334$1S&e0X)
                                                                                           (list
                                                                                             'call-with-values
                                                                                             (list
                                                                                               'lambda
                                                                                               '()
                                                                                               (car g$rhs*$21310$1S&e0X))
                                                                                             (list
                                                                                               'lambda
                                                                                               (append
                                                                                                 g$y*$21332$1S&e0X
                                                                                                 g$y$21329$1S&e0X)
                                                                                               (g$f$21308$1S&e0X
                                                                                                 (cdr g$lhs*$21309$1S&e0X)
                                                                                                 (cdr g$rhs*$21310$1S&e0X)
                                                                                                 g$old*$21333$1S&e0X
                                                                                                 g$new*$21334$1S&e0X)))))))))))
                                                                              g$ls/false$21326$1S&e0X)
                                                                            ((case-lambda
                                                                               ((g$t$21335$1S&e0X)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$21336$1S&e0X)
                                                                                    (if g$ls/false$21336$1S&e0X
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$21337$1S&e0X)
                                                                                           (g$syntax-violation$20808$1S&e0X
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$21295$1S&e0X
                                                                                             g$others$21337$1S&e0X)))
                                                                                        g$ls/false$21336$1S&e0X)
                                                                                      (g$syntax-violation$20808$1S&e0X
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$21335$1S&e0X))))
                                                                                 (g$syntax-dispatch$20689$1S&e0X
                                                                                   g$t$21335$1S&e0X
                                                                                   'any))))
                                                                             g$t$21325$1S&e0X))))
                                                                       (g$syntax-dispatch$20689$1S&e0X
                                                                         g$t$21325$1S&e0X
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$21313$1S&e0X))))
                                                             (g$syntax-dispatch$20689$1S&e0X
                                                               g$t$21313$1S&e0X
                                                               'each-any))))
                                                         (car g$lhs*$21309$1S&e0X))))))))
                                        g$f$21308$1S&e0X)
                                      g$lhs*$21304$1S&e0X
                                      g$rhs*$21305$1S&e0X
                                      '()
                                      '()))))
                                g$ls/false$21303$1S&e0X)
                              (g$syntax-violation$20808$1S&e0X
                                '#f
                                '"invalid syntax"
                                g$t$21302$1S&e0X))))
                         (g$syntax-dispatch$20689$1S&e0X
                           g$t$21302$1S&e0X
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$21298$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21298$1S&e0X
                 '(_ () any . each-any)))))
           g$stx$21295$1S&e0X)))))
   (g$let*-values-macro$20657$1S&e0X
     g$let*-values-macro$24252$1S&e0X
     (case-lambda
       ((g$stx$21351$1S&e0X)
        (letrec* ((g$check$21352$1S&e0X
                    (case-lambda
                      ((g$x*$21376$1S&e0X)
                       (if (not (null? g$x*$21376$1S&e0X))
                         ((case-lambda
                            ((g$x$21377$1S&e0X)
                             (begin
                               (if (not (g$id?$20191$1S&e0X
                                          g$x$21377$1S&e0X))
                                 (g$syntax-violation$20808$1S&e0X
                                   '#f
                                   '"not an identifier"
                                   g$stx$21351$1S&e0X
                                   g$x$21377$1S&e0X)
                                 (void))
                               (g$check$21352$1S&e0X
                                 (cdr g$x*$21376$1S&e0X))
                               (if (g$bound-id-member?$20198$1S&e0X
                                     g$x$21377$1S&e0X
                                     (cdr g$x*$21376$1S&e0X))
                                 (g$syntax-violation$20808$1S&e0X
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$21351$1S&e0X
                                   g$x$21377$1S&e0X)
                                 (void)))))
                          (car g$x*$21376$1S&e0X))
                         (void))))))
          ((case-lambda
             ((g$t$21353$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21354$1S&e0X)
                  (if g$ls/false$21354$1S&e0X
                    (apply
                      (case-lambda
                        ((g$b$21355$1S&e0X g$b*$21356$1S&e0X)
                         (g$cons*$11835$1S&e0X
                           (g$bless$20652$1S&e0X 'let)
                           '()
                           g$b$21355$1S&e0X
                           g$b*$21356$1S&e0X)))
                      g$ls/false$21354$1S&e0X)
                    ((case-lambda
                       ((g$t$21357$1S&e0X)
                        ((case-lambda
                           ((g$ls/false$21358$1S&e0X)
                            (if g$ls/false$21358$1S&e0X
                              (apply
                                (case-lambda
                                  ((g$lhs*$21359$1S&e0X
                                     g$rhs*$21360$1S&e0X
                                     g$b$21361$1S&e0X
                                     g$b*$21362$1S&e0X)
                                   (g$bless$20652$1S&e0X
                                     ((letrec ((g$f$21363$1S&e0X
                                                 (case-lambda
                                                   ((g$lhs*$21364$1S&e0X
                                                      g$rhs*$21365$1S&e0X)
                                                    (if (null?
                                                          g$lhs*$21364$1S&e0X)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$21361$1S&e0X
                                                          g$b*$21362$1S&e0X))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$21366$1S&e0X)
                                                            ((case-lambda
                                                               ((g$ls/false$21367$1S&e0X)
                                                                (if g$ls/false$21367$1S&e0X
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$21368$1S&e0X)
                                                                       (begin
                                                                         (g$check$21352$1S&e0X
                                                                           g$x*$21368$1S&e0X)
                                                                         (list
                                                                           'call-with-values
                                                                           (list
                                                                             'lambda
                                                                             '()
                                                                             (car g$rhs*$21365$1S&e0X))
                                                                           (list
                                                                             'lambda
                                                                             g$x*$21368$1S&e0X
                                                                             (g$f$21363$1S&e0X
                                                                               (cdr g$lhs*$21364$1S&e0X)
                                                                               (cdr g$rhs*$21365$1S&e0X)))))))
                                                                    g$ls/false$21367$1S&e0X)
                                                                  ((case-lambda
                                                                     ((g$t$21369$1S&e0X)
                                                                      ((case-lambda
                                                                         ((g$ls/false$21370$1S&e0X)
                                                                          (if g$ls/false$21370$1S&e0X
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$21371$1S&e0X
                                                                                   g$x$21372$1S&e0X)
                                                                                 (begin
                                                                                   (g$check$21352$1S&e0X
                                                                                     (cons
                                                                                       g$x$21372$1S&e0X
                                                                                       g$x*$21371$1S&e0X))
                                                                                   (list
                                                                                     'call-with-values
                                                                                     (list
                                                                                       'lambda
                                                                                       '()
                                                                                       (car g$rhs*$21365$1S&e0X))
                                                                                     (list
                                                                                       'lambda
                                                                                       (append
                                                                                         g$x*$21371$1S&e0X
                                                                                         g$x$21372$1S&e0X)
                                                                                       (g$f$21363$1S&e0X
                                                                                         (cdr g$lhs*$21364$1S&e0X)
                                                                                         (cdr g$rhs*$21365$1S&e0X)))))))
                                                                              g$ls/false$21370$1S&e0X)
                                                                            ((case-lambda
                                                                               ((g$t$21373$1S&e0X)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$21374$1S&e0X)
                                                                                    (if g$ls/false$21374$1S&e0X
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$21375$1S&e0X)
                                                                                           (g$syntax-violation$20808$1S&e0X
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$21351$1S&e0X
                                                                                             g$others$21375$1S&e0X)))
                                                                                        g$ls/false$21374$1S&e0X)
                                                                                      (g$syntax-violation$20808$1S&e0X
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$21373$1S&e0X))))
                                                                                 (g$syntax-dispatch$20689$1S&e0X
                                                                                   g$t$21373$1S&e0X
                                                                                   'any))))
                                                                             g$t$21369$1S&e0X))))
                                                                       (g$syntax-dispatch$20689$1S&e0X
                                                                         g$t$21369$1S&e0X
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$21366$1S&e0X))))
                                                             (g$syntax-dispatch$20689$1S&e0X
                                                               g$t$21366$1S&e0X
                                                               'each-any))))
                                                         (car g$lhs*$21364$1S&e0X))))))))
                                        g$f$21363$1S&e0X)
                                      g$lhs*$21359$1S&e0X
                                      g$rhs*$21360$1S&e0X))))
                                g$ls/false$21358$1S&e0X)
                              (g$syntax-violation$20808$1S&e0X
                                '#f
                                '"invalid syntax"
                                g$t$21357$1S&e0X))))
                         (g$syntax-dispatch$20689$1S&e0X
                           g$t$21357$1S&e0X
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$21353$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21353$1S&e0X
                 '(_ () any . each-any)))))
           g$stx$21351$1S&e0X)))))
   (g$trace-lambda-macro$20658$1S&e0X
     g$trace-lambda-macro$24253$1S&e0X
     (case-lambda
       ((g$stx$21378$1S&e0X)
        ((case-lambda
           ((g$t$21379$1S&e0X)
            ((case-lambda
               ((g$ls/false$21380$1S&e0X)
                (if g$ls/false$21380$1S&e0X
                  (apply
                    (case-lambda
                      ((g$who$21381$1S&e0X
                         g$fmls$21382$1S&e0X
                         g$b$21383$1S&e0X
                         g$b*$21384$1S&e0X)
                       (if (g$valid-bound-ids?$20196$1S&e0X
                             g$fmls$21382$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$21381$1S&e0X)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$21382$1S&e0X
                                 (cons
                                   g$b$21383$1S&e0X
                                   g$b*$21384$1S&e0X)))))
                         (g$invalid-fmls-error$20654$1S&e0X
                           g$stx$21378$1S&e0X
                           g$fmls$21382$1S&e0X))))
                    g$ls/false$21380$1S&e0X)
                  ((case-lambda
                     ((g$t$21385$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21386$1S&e0X)
                          (if g$ls/false$21386$1S&e0X
                            (apply
                              (case-lambda
                                ((g$who$21387$1S&e0X
                                   g$fmls$21388$1S&e0X
                                   g$last$21389$1S&e0X
                                   g$b$21390$1S&e0X
                                   g$b*$21391$1S&e0X)
                                 (if (g$valid-bound-ids?$20196$1S&e0X
                                       (cons
                                         g$last$21389$1S&e0X
                                         g$fmls$21388$1S&e0X))
                                   (g$bless$20652$1S&e0X
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$21387$1S&e0X)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$21388$1S&e0X
                                             g$last$21389$1S&e0X)
                                           (cons
                                             g$b$21390$1S&e0X
                                             g$b*$21391$1S&e0X)))))
                                   (g$invalid-fmls-error$20654$1S&e0X
                                     g$stx$21378$1S&e0X
                                     (append
                                       g$fmls$21388$1S&e0X
                                       g$last$21389$1S&e0X)))))
                              g$ls/false$21386$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21385$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21385$1S&e0X
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$21379$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21379$1S&e0X
               '(_ any each-any any . each-any)))))
         g$stx$21378$1S&e0X))))
   (g$trace-define-macro$20659$1S&e0X
     g$trace-define-macro$24254$1S&e0X
     (case-lambda
       ((g$stx$21392$1S&e0X)
        ((case-lambda
           ((g$t$21393$1S&e0X)
            ((case-lambda
               ((g$ls/false$21394$1S&e0X)
                (if g$ls/false$21394$1S&e0X
                  (apply
                    (case-lambda
                      ((g$who$21395$1S&e0X
                         g$fmls$21396$1S&e0X
                         g$b$21397$1S&e0X
                         g$b*$21398$1S&e0X)
                       (if (g$valid-bound-ids?$20196$1S&e0X
                             g$fmls$21396$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (list
                             'define
                             g$who$21395$1S&e0X
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$21395$1S&e0X)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$21396$1S&e0X
                                   (cons
                                     g$b$21397$1S&e0X
                                     g$b*$21398$1S&e0X))))))
                         (g$invalid-fmls-error$20654$1S&e0X
                           g$stx$21392$1S&e0X
                           g$fmls$21396$1S&e0X))))
                    g$ls/false$21394$1S&e0X)
                  ((case-lambda
                     ((g$t$21399$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21400$1S&e0X)
                          (if g$ls/false$21400$1S&e0X
                            (apply
                              (case-lambda
                                ((g$who$21401$1S&e0X
                                   g$fmls$21402$1S&e0X
                                   g$last$21403$1S&e0X
                                   g$b$21404$1S&e0X
                                   g$b*$21405$1S&e0X)
                                 (if (g$valid-bound-ids?$20196$1S&e0X
                                       (cons
                                         g$last$21403$1S&e0X
                                         g$fmls$21402$1S&e0X))
                                   (g$bless$20652$1S&e0X
                                     (list
                                       'define
                                       g$who$21401$1S&e0X
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$21401$1S&e0X)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$21402$1S&e0X
                                               g$last$21403$1S&e0X)
                                             (cons
                                               g$b$21404$1S&e0X
                                               g$b*$21405$1S&e0X))))))
                                   (g$invalid-fmls-error$20654$1S&e0X
                                     g$stx$21392$1S&e0X
                                     (append
                                       g$fmls$21402$1S&e0X
                                       g$last$21403$1S&e0X)))))
                              g$ls/false$21400$1S&e0X)
                            ((case-lambda
                               ((g$t$21406$1S&e0X)
                                ((case-lambda
                                   ((g$ls/false$21407$1S&e0X)
                                    (if g$ls/false$21407$1S&e0X
                                      (apply
                                        (case-lambda
                                          ((g$who$21408$1S&e0X
                                             g$expr$21409$1S&e0X)
                                           (if (g$id?$20191$1S&e0X
                                                 g$who$21408$1S&e0X)
                                             (g$bless$20652$1S&e0X
                                               (list
                                                 'define
                                                 g$who$21408$1S&e0X
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$21409$1S&e0X))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$21408$1S&e0X)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$20808$1S&e0X
                                               '#f
                                               '"invalid name"
                                               g$stx$21392$1S&e0X))))
                                        g$ls/false$21407$1S&e0X)
                                      (g$syntax-violation$20808$1S&e0X
                                        '#f
                                        '"invalid syntax"
                                        g$t$21406$1S&e0X))))
                                 (g$syntax-dispatch$20689$1S&e0X
                                   g$t$21406$1S&e0X
                                   '(_ any any)))))
                             g$t$21399$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21399$1S&e0X
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$21393$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21393$1S&e0X
               '(_ (any . each-any) any . each-any)))))
         g$stx$21392$1S&e0X))))
   (g$trace-define-syntax-macro$20660$1S&e0X
     g$trace-define-syntax-macro$24255$1S&e0X
     (case-lambda
       ((g$stx$21410$1S&e0X)
        ((case-lambda
           ((g$t$21411$1S&e0X)
            ((case-lambda
               ((g$ls/false$21412$1S&e0X)
                (if g$ls/false$21412$1S&e0X
                  (apply
                    (case-lambda
                      ((g$who$21413$1S&e0X g$expr$21414$1S&e0X)
                       (if (g$id?$20191$1S&e0X g$who$21413$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (list
                             'define-syntax
                             g$who$21413$1S&e0X
                             (list
                               'make-traced-macro
                               (list 'quote g$who$21413$1S&e0X)
                               g$expr$21414$1S&e0X)))
                         (g$syntax-violation$20808$1S&e0X
                           '#f
                           '"invalid name"
                           g$stx$21410$1S&e0X))))
                    g$ls/false$21412$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21411$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21411$1S&e0X
               '(_ any any)))))
         g$stx$21410$1S&e0X))))
   (g$trace-let/rec-syntax$20661$1S&e0X
     g$trace-let/rec-syntax$24256$1S&e0X
     (case-lambda
       ((g$who$21415$1S&e0X)
        (case-lambda
          ((g$stx$21416$1S&e0X)
           ((case-lambda
              ((g$t$21417$1S&e0X)
               ((case-lambda
                  ((g$ls/false$21418$1S&e0X)
                   (if g$ls/false$21418$1S&e0X
                     (apply
                       (case-lambda
                         ((g$lhs*$21419$1S&e0X
                            g$rhs*$21420$1S&e0X
                            g$b$21421$1S&e0X
                            g$b*$21422$1S&e0X)
                          (if (g$valid-bound-ids?$20196$1S&e0X
                                g$lhs*$21419$1S&e0X)
                            ((case-lambda
                               ((g$rhs*$21423$1S&e0X)
                                (g$bless$20652$1S&e0X
                                  (cons
                                    g$who$21415$1S&e0X
                                    (cons
                                      (g$map$11833$1S&e0X
                                        list
                                        g$lhs*$21419$1S&e0X
                                        g$rhs*$21423$1S&e0X)
                                      (cons
                                        g$b$21421$1S&e0X
                                        g$b*$21422$1S&e0X))))))
                             (g$map$11833$1S&e0X
                               (case-lambda
                                 ((g$lhs$21424$1S&e0X
                                    g$rhs$21425$1S&e0X)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$21424$1S&e0X)
                                    g$rhs$21425$1S&e0X)))
                               g$lhs*$21419$1S&e0X
                               g$rhs*$21420$1S&e0X))
                            (g$invalid-fmls-error$20654$1S&e0X
                              g$stx$21416$1S&e0X
                              g$lhs*$21419$1S&e0X))))
                       g$ls/false$21418$1S&e0X)
                     (g$syntax-violation$20808$1S&e0X
                       '#f
                       '"invalid syntax"
                       g$t$21417$1S&e0X))))
                (g$syntax-dispatch$20689$1S&e0X
                  g$t$21417$1S&e0X
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$21416$1S&e0X))))))
   (g$trace-let-syntax-macro$20662$1S&e0X
     g$trace-let-syntax-macro$24257$1S&e0X
     (g$trace-let/rec-syntax$20661$1S&e0X 'let-syntax))
   (g$trace-letrec-syntax-macro$20663$1S&e0X
     g$trace-letrec-syntax-macro$24258$1S&e0X
     (g$trace-let/rec-syntax$20661$1S&e0X 'letrec-syntax))
   (g$guard-macro$20664$1S&e0X
     g$guard-macro$24259$1S&e0X
     (case-lambda
       ((g$x$21426$1S&e0X)
        (letrec* ((g$gen-clauses$21427$1S&e0X
                    (case-lambda
                      ((g$con$21439$1S&e0X
                         g$outerk$21440$1S&e0X
                         g$clause*$21441$1S&e0X)
                       (letrec* ((g$f$21442$1S&e0X
                                   (case-lambda
                                     ((g$x$21470$1S&e0X
                                        g$k$21471$1S&e0X)
                                      ((case-lambda
                                         ((g$t$21472$1S&e0X)
                                          ((case-lambda
                                             ((g$ls/false$21473$1S&e0X)
                                              (if g$ls/false$21473$1S&e0X
                                                (apply
                                                  (case-lambda
                                                    ((g$e$21474$1S&e0X
                                                       g$p$21475$1S&e0X)
                                                     ((case-lambda
                                                        ((g$t$21476$1S&e0X)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$21476$1S&e0X
                                                               g$e$21474$1S&e0X))
                                                           (list
                                                             'if
                                                             g$t$21476$1S&e0X
                                                             (list
                                                               g$p$21475$1S&e0X
                                                               g$t$21476$1S&e0X)
                                                             g$k$21471$1S&e0X))))
                                                      (gensym))))
                                                  g$ls/false$21473$1S&e0X)
                                                ((case-lambda
                                                   ((g$t$21477$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$21478$1S&e0X)
                                                        (if g$ls/false$21478$1S&e0X
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$21479$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$t$21480$1S&e0X)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$21480$1S&e0X
                                                                         g$e$21479$1S&e0X))
                                                                     (list
                                                                       'if
                                                                       g$t$21480$1S&e0X
                                                                       g$t$21480$1S&e0X
                                                                       g$k$21471$1S&e0X))))
                                                                (gensym))))
                                                            g$ls/false$21478$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$21481$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$21482$1S&e0X)
                                                                  (if g$ls/false$21482$1S&e0X
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$21483$1S&e0X
                                                                           g$v$21484$1S&e0X
                                                                           g$v*$21485$1S&e0X)
                                                                         (list
                                                                           'if
                                                                           g$e$21483$1S&e0X
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$21484$1S&e0X
                                                                               g$v*$21485$1S&e0X))
                                                                           g$k$21471$1S&e0X)))
                                                                      g$ls/false$21482$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$t$21486$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21487$1S&e0X)
                                                                            (if g$ls/false$21487$1S&e0X
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$20808$1S&e0X
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$21470$1S&e0X)))
                                                                                g$ls/false$21487$1S&e0X)
                                                                              (g$syntax-violation$20808$1S&e0X
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$21486$1S&e0X))))
                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                           g$t$21486$1S&e0X
                                                                           '_))))
                                                                     g$t$21481$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$21481$1S&e0X
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$21477$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$21477$1S&e0X
                                                       '(any)))))
                                                 g$t$21472$1S&e0X))))
                                           (g$syntax-dispatch$20689$1S&e0X
                                             g$t$21472$1S&e0X
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$21470$1S&e0X))))
                                 (g$f*$21443$1S&e0X
                                   (case-lambda
                                     ((g$x*$21450$1S&e0X)
                                      ((case-lambda
                                         ((g$t$21451$1S&e0X)
                                          ((case-lambda
                                             ((g$ls/false$21452$1S&e0X)
                                              (if g$ls/false$21452$1S&e0X
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$21439$1S&e0X)
                                                       '#t)))
                                                  g$ls/false$21452$1S&e0X)
                                                ((case-lambda
                                                   ((g$t$21453$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$21454$1S&e0X)
                                                        (if g$ls/false$21454$1S&e0X
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$21455$1S&e0X
                                                                 g$e*$21456$1S&e0X)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$21455$1S&e0X
                                                                     g$e*$21456$1S&e0X))
                                                                 '#f)))
                                                            g$ls/false$21454$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$21457$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$21458$1S&e0X)
                                                                  (if g$ls/false$21458$1S&e0X
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$21459$1S&e0X
                                                                           g$cls*$21460$1S&e0X)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$21443$1S&e0X
                                                                                g$cls*$21460$1S&e0X)))
                                                                           (case-lambda
                                                                             ((g$e$21463$1S&e0X
                                                                                g$g$21464$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$g$21465$1S&e0X
                                                                                    g$e$21466$1S&e0X)
                                                                                  (values
                                                                                    (g$f$21442$1S&e0X
                                                                                      g$cls$21459$1S&e0X
                                                                                      g$e$21466$1S&e0X)
                                                                                    g$g$21465$1S&e0X)))
                                                                               g$g$21464$1S&e0X
                                                                               g$e$21463$1S&e0X))))))
                                                                      g$ls/false$21458$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$t$21467$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21468$1S&e0X)
                                                                            (if g$ls/false$21468$1S&e0X
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$21469$1S&e0X)
                                                                                   (g$syntax-violation$20808$1S&e0X
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$21469$1S&e0X)))
                                                                                g$ls/false$21468$1S&e0X)
                                                                              (g$syntax-violation$20808$1S&e0X
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$21467$1S&e0X))))
                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                           g$t$21467$1S&e0X
                                                                           'any))))
                                                                     g$t$21457$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$21457$1S&e0X
                                                                 '(any .
                                                                       any)))))
                                                           g$t$21453$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$21453$1S&e0X
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$21451$1S&e0X))))
                                           (g$syntax-dispatch$20689$1S&e0X
                                             g$t$21451$1S&e0X
                                             '()))))
                                       g$x*$21450$1S&e0X)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$21443$1S&e0X
                                g$clause*$21441$1S&e0X)))
                           (case-lambda
                             ((g$code$21446$1S&e0X
                                g$raisek$21447$1S&e0X)
                              ((case-lambda
                                 ((g$raisek$21448$1S&e0X
                                    g$code$21449$1S&e0X)
                                  (if g$raisek$21448$1S&e0X
                                    (list
                                      g$outerk$21440$1S&e0X
                                      g$code$21449$1S&e0X)
                                    g$code$21449$1S&e0X)))
                               g$raisek$21447$1S&e0X
                               g$code$21446$1S&e0X)))))))))
          ((case-lambda
             ((g$t$21428$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21429$1S&e0X)
                  (if (if g$ls/false$21429$1S&e0X
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$21430$1S&e0X
                                 g$clause*$21431$1S&e0X
                                 g$b$21432$1S&e0X
                                 g$b*$21433$1S&e0X)
                               (g$id?$20191$1S&e0X g$con$21430$1S&e0X)))
                            g$ls/false$21429$1S&e0X))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$21434$1S&e0X
                           g$clause*$21435$1S&e0X
                           g$b$21436$1S&e0X
                           g$b*$21437$1S&e0X)
                         ((case-lambda
                            ((g$outerk$21438$1S&e0X)
                             (g$bless$20652$1S&e0X
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$21438$1S&e0X)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$21434$1S&e0X)
                                           (g$gen-clauses$21427$1S&e0X
                                             g$con$21434$1S&e0X
                                             g$outerk$21438$1S&e0X
                                             g$clause*$21435$1S&e0X))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$21436$1S&e0X
                                               g$b*$21437$1S&e0X)))))))))))
                          (gensym))))
                      g$ls/false$21429$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$21428$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21428$1S&e0X
                 '(_ (any . each-any) any . each-any)))))
           g$x$21426$1S&e0X)))))
   (g$define-enumeration-macro$20665$1S&e0X
     g$define-enumeration-macro$24260$1S&e0X
     (case-lambda
       ((g$stx$21488$1S&e0X)
        (letrec* ((g$set?$21489$1S&e0X
                    (case-lambda
                      ((g$x$21502$1S&e0X)
                       ((case-lambda
                          ((g$t$21503$1S&e0X)
                           (if g$t$21503$1S&e0X
                             g$t$21503$1S&e0X
                             (begin
                               '#f
                               (if (not (g$memq$11825$1S&e0X
                                          (car g$x$21502$1S&e0X)
                                          (cdr g$x$21502$1S&e0X)))
                                 (begin
                                   '#f
                                   (g$set?$21489$1S&e0X
                                     (cdr g$x$21502$1S&e0X)))
                                 '#f)))))
                        (null? g$x$21502$1S&e0X)))))
                  (g$remove-dups$21490$1S&e0X
                    (case-lambda
                      ((g$ls$21501$1S&e0X)
                       (if (null? g$ls$21501$1S&e0X)
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$ls$21501$1S&e0X)
                             (g$remove-dups$21490$1S&e0X
                               (g$remq$11840$1S&e0X
                                 (car g$ls$21501$1S&e0X)
                                 (cdr g$ls$21501$1S&e0X))))))))))
          ((case-lambda
             ((g$t$21491$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21492$1S&e0X)
                  (if (if g$ls/false$21492$1S&e0X
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$21493$1S&e0X
                                 g$id*$21494$1S&e0X
                                 g$maker$21495$1S&e0X)
                               (if (g$id?$20191$1S&e0X
                                     g$name$21493$1S&e0X)
                                 (if (g$id?$20191$1S&e0X
                                       g$maker$21495$1S&e0X)
                                   (begin
                                     '#f
                                     (g$for-all$11831$1S&e0X
                                       g$id?$20191$1S&e0X
                                       g$id*$21494$1S&e0X))
                                   '#f)
                                 '#f)))
                            g$ls/false$21492$1S&e0X))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$21496$1S&e0X
                           g$id*$21497$1S&e0X
                           g$maker$21498$1S&e0X)
                         ((case-lambda
                            ((g$name*$21499$1S&e0X g$mk$21500$1S&e0X)
                             (g$bless$20652$1S&e0X
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$21500$1S&e0X
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$21499$1S&e0X))))
                                 (list
                                   'define-syntax
                                   g$name$21496$1S&e0X
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$21499$1S&e0X))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$21496$1S&e0X)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$21498$1S&e0X
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$21498$1S&e0X)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$21499$1S&e0X))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$21498$1S&e0X)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$21500$1S&e0X
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$21490$1S&e0X
                            (g$syntax->datum$20811$1S&e0X
                              g$id*$21497$1S&e0X))
                          (gensym))))
                      g$ls/false$21492$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$21491$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21491$1S&e0X
                 '(_ any each-any any)))))
           g$stx$21488$1S&e0X)))))
   (g$time-macro$20666$1S&e0X
     g$time-macro$24261$1S&e0X
     (case-lambda
       ((g$stx$21504$1S&e0X)
        ((case-lambda
           ((g$t$21505$1S&e0X)
            ((case-lambda
               ((g$ls/false$21506$1S&e0X)
                (if g$ls/false$21506$1S&e0X
                  (apply
                    (case-lambda
                      ((g$expr$21507$1S&e0X)
                       ((case-lambda
                          ((g$str$21508$1S&e0X)
                           (g$bless$20652$1S&e0X
                             (list
                               'time-it
                               g$str$21508$1S&e0X
                               (list
                                 'lambda
                                 '()
                                 g$expr$21507$1S&e0X)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$18603$1S&e0X)))
                          (case-lambda
                            ((g$p$21511$1S&e0X g$e$21512$1S&e0X)
                             ((case-lambda
                                ((g$e$21513$1S&e0X g$p$21514$1S&e0X)
                                 (begin
                                   (write
                                     (g$syntax->datum$20811$1S&e0X
                                       g$expr$21507$1S&e0X)
                                     g$p$21514$1S&e0X)
                                   (g$e$21513$1S&e0X))))
                              g$e$21512$1S&e0X
                              g$p$21511$1S&e0X)))))))
                    g$ls/false$21506$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21505$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21505$1S&e0X
               '(_ any)))))
         g$stx$21504$1S&e0X))))
   (g$delay-macro$20667$1S&e0X
     g$delay-macro$24262$1S&e0X
     (case-lambda
       ((g$stx$21515$1S&e0X)
        ((case-lambda
           ((g$t$21516$1S&e0X)
            ((case-lambda
               ((g$ls/false$21517$1S&e0X)
                (if g$ls/false$21517$1S&e0X
                  (apply
                    (case-lambda
                      ((g$expr$21518$1S&e0X)
                       (g$bless$20652$1S&e0X
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$21518$1S&e0X)))))
                    g$ls/false$21517$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21516$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21516$1S&e0X
               '(_ any)))))
         g$stx$21515$1S&e0X))))
   (g$assert-macro$20668$1S&e0X
     g$assert-macro$24263$1S&e0X
     (case-lambda
       ((g$stx$21519$1S&e0X)
        ((case-lambda
           ((g$t$21520$1S&e0X)
            ((case-lambda
               ((g$ls/false$21521$1S&e0X)
                (if g$ls/false$21521$1S&e0X
                  (apply
                    (case-lambda
                      ((g$expr$21522$1S&e0X)
                       ((case-lambda
                          ((g$pos$21523$1S&e0X)
                           (g$bless$20652$1S&e0X
                             (list
                               'unless
                               g$expr$21522$1S&e0X
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$21522$1S&e0X)
                                 (list 'quote g$pos$21523$1S&e0X))))))
                        ((case-lambda
                           ((g$t$21524$1S&e0X)
                            (if g$t$21524$1S&e0X
                              g$t$21524$1S&e0X
                              (begin
                                '#f
                                (g$expression-position$20803$1S&e0X
                                  g$expr$21522$1S&e0X)))))
                         (g$expression-position$20803$1S&e0X
                           g$stx$21519$1S&e0X)))))
                    g$ls/false$21521$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21520$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21520$1S&e0X
               '(_ any)))))
         g$stx$21519$1S&e0X))))
   (g$endianness-macro$20669$1S&e0X
     g$endianness-macro$24264$1S&e0X
     (case-lambda
       ((g$stx$21525$1S&e0X)
        ((case-lambda
           ((g$t$21526$1S&e0X)
            ((case-lambda
               ((g$ls/false$21527$1S&e0X)
                (if g$ls/false$21527$1S&e0X
                  (apply
                    (case-lambda
                      ((g$e$21528$1S&e0X)
                       ((case-lambda
                          ((g$t$21529$1S&e0X)
                           (if (eqv? g$t$21529$1S&e0X 'little)
                             (g$bless$20652$1S&e0X ''little)
                             (if (eqv? g$t$21529$1S&e0X 'big)
                               (g$bless$20652$1S&e0X ''big)
                               (begin
                                 '#f
                                 (g$syntax-violation$20808$1S&e0X
                                   '#f
                                   '"endianness must be big or little"
                                   g$stx$21525$1S&e0X))))))
                        (g$syntax->datum$20811$1S&e0X
                          g$e$21528$1S&e0X))))
                    g$ls/false$21527$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21526$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21526$1S&e0X
               '(_ any)))))
         g$stx$21525$1S&e0X))))
   (g$identifier-syntax-macro$20670$1S&e0X
     g$identifier-syntax-macro$24265$1S&e0X
     (case-lambda
       ((g$stx$21530$1S&e0X)
        ((case-lambda
           ((g$t$21531$1S&e0X)
            ((case-lambda
               ((g$ls/false$21532$1S&e0X)
                (if g$ls/false$21532$1S&e0X
                  (apply
                    (case-lambda
                      ((g$expr$21533$1S&e0X)
                       (g$bless$20652$1S&e0X
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$21533$1S&e0X))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$21533$1S&e0X)
                                   '(#'(e* ...))))))))))
                    g$ls/false$21532$1S&e0X)
                  ((case-lambda
                     ((g$t$21534$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21535$1S&e0X)
                          (if (if g$ls/false$21535$1S&e0X
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$21536$1S&e0X
                                         g$expr1$21537$1S&e0X
                                         g$id2$21538$1S&e0X
                                         g$expr2$21539$1S&e0X
                                         g$expr3$21540$1S&e0X)
                                       (if (g$id?$20191$1S&e0X
                                             g$id1$21536$1S&e0X)
                                         (if (g$id?$20191$1S&e0X
                                               g$id2$21538$1S&e0X)
                                           (begin
                                             '#f
                                             (g$id?$20191$1S&e0X
                                               g$expr2$21539$1S&e0X))
                                           '#f)
                                         '#f)))
                                    g$ls/false$21535$1S&e0X))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$21541$1S&e0X
                                   g$expr1$21542$1S&e0X
                                   g$id2$21543$1S&e0X
                                   g$expr2$21544$1S&e0X
                                   g$expr3$21545$1S&e0X)
                                 (g$bless$20652$1S&e0X
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$21542$1S&e0X))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$21544$1S&e0X)
                                           (list
                                             'syntax
                                             g$expr3$21545$1S&e0X))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$21542$1S&e0X
                                               '(e* ...))))))))))
                              g$ls/false$21535$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21534$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21534$1S&e0X
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$21531$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21531$1S&e0X
               '(_ any)))))
         g$stx$21530$1S&e0X))))
   (g$do-macro$20671$1S&e0X
     g$do-macro$24266$1S&e0X
     (case-lambda
       ((g$stx$21546$1S&e0X)
        (letrec* ((g$bind$21547$1S&e0X
                    (case-lambda
                      ((g$x$21559$1S&e0X)
                       ((case-lambda
                          ((g$t$21560$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$21561$1S&e0X)
                               (if g$ls/false$21561$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$x$21562$1S&e0X
                                        g$init$21563$1S&e0X)
                                      (list
                                        g$x$21562$1S&e0X
                                        g$init$21563$1S&e0X
                                        g$x$21562$1S&e0X)))
                                   g$ls/false$21561$1S&e0X)
                                 ((case-lambda
                                    ((g$t$21564$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$21565$1S&e0X)
                                         (if g$ls/false$21565$1S&e0X
                                           (apply
                                             (case-lambda
                                               ((g$x$21566$1S&e0X
                                                  g$init$21567$1S&e0X
                                                  g$step$21568$1S&e0X)
                                                (list
                                                  g$x$21566$1S&e0X
                                                  g$init$21567$1S&e0X
                                                  g$step$21568$1S&e0X)))
                                             g$ls/false$21565$1S&e0X)
                                           ((case-lambda
                                              ((g$t$21569$1S&e0X)
                                               ((case-lambda
                                                  ((g$ls/false$21570$1S&e0X)
                                                   (if g$ls/false$21570$1S&e0X
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$20808$1S&e0X
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$21546$1S&e0X)))
                                                       g$ls/false$21570$1S&e0X)
                                                     (g$syntax-violation$20808$1S&e0X
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21569$1S&e0X))))
                                                (g$syntax-dispatch$20689$1S&e0X
                                                  g$t$21569$1S&e0X
                                                  '_))))
                                            g$t$21564$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$21564$1S&e0X
                                        '(any any any)))))
                                  g$t$21560$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$21560$1S&e0X
                              '(any any)))))
                        g$x$21559$1S&e0X)))))
          ((case-lambda
             ((g$t$21548$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21549$1S&e0X)
                  (if g$ls/false$21549$1S&e0X
                    (apply
                      (case-lambda
                        ((g$binding*$21550$1S&e0X
                           g$test$21551$1S&e0X
                           g$expr*$21552$1S&e0X
                           g$command*$21553$1S&e0X)
                         ((case-lambda
                            ((g$t$21554$1S&e0X)
                             ((case-lambda
                                ((g$ls/false$21555$1S&e0X)
                                 (if g$ls/false$21555$1S&e0X
                                   (apply
                                     (case-lambda
                                       ((g$x*$21556$1S&e0X
                                          g$init*$21557$1S&e0X
                                          g$step*$21558$1S&e0X)
                                        (if (g$valid-bound-ids?$20196$1S&e0X
                                              g$x*$21556$1S&e0X)
                                          (g$bless$20652$1S&e0X
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$21556$1S&e0X
                                                    (list
                                                      'if
                                                      g$test$21551$1S&e0X
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$21552$1S&e0X))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$21553$1S&e0X
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$21558$1S&e0X))))))))
                                              (cons
                                                'loop
                                                g$init*$21557$1S&e0X)))
                                          (g$syntax-violation$20808$1S&e0X
                                            '#f
                                            '"invalid bindings"
                                            g$stx$21546$1S&e0X))))
                                     g$ls/false$21555$1S&e0X)
                                   (g$syntax-violation$20808$1S&e0X
                                     '#f
                                     '"invalid syntax"
                                     g$t$21554$1S&e0X))))
                              (g$syntax-dispatch$20689$1S&e0X
                                g$t$21554$1S&e0X
                                '#(each (any any any))))))
                          (g$map$11833$1S&e0X
                            g$bind$21547$1S&e0X
                            g$binding*$21550$1S&e0X))))
                      g$ls/false$21549$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$21548$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21548$1S&e0X
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$21546$1S&e0X)))))
   (g$let*-macro$20672$1S&e0X
     g$let*-macro$24267$1S&e0X
     (case-lambda
       ((g$stx$21571$1S&e0X)
        ((case-lambda
           ((g$t$21572$1S&e0X)
            ((case-lambda
               ((g$ls/false$21573$1S&e0X)
                (if (if g$ls/false$21573$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$21574$1S&e0X
                               g$rhs*$21575$1S&e0X
                               g$b$21576$1S&e0X
                               g$b*$21577$1S&e0X)
                             (g$for-all$11831$1S&e0X
                               g$id?$20191$1S&e0X
                               g$lhs*$21574$1S&e0X)))
                          g$ls/false$21573$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$21578$1S&e0X
                         g$rhs*$21579$1S&e0X
                         g$b$21580$1S&e0X
                         g$b*$21581$1S&e0X)
                       (g$bless$20652$1S&e0X
                         ((letrec ((g$f$21582$1S&e0X
                                     (case-lambda
                                       ((g$x*$21583$1S&e0X)
                                        (if (null? g$x*$21583$1S&e0X)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$21580$1S&e0X
                                                g$b*$21581$1S&e0X)))
                                          (if (null?
                                                (cdr g$x*$21583$1S&e0X))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$21583$1S&e0X))
                                                (cons
                                                  g$b$21580$1S&e0X
                                                  g$b*$21581$1S&e0X)))
                                            (begin
                                              '#f
                                              (list
                                                'let
                                                (list
                                                  (car g$x*$21583$1S&e0X))
                                                (g$f$21582$1S&e0X
                                                  (cdr g$x*$21583$1S&e0X))))))))))
                            g$f$21582$1S&e0X)
                          (g$map$11833$1S&e0X
                            list
                            g$lhs*$21578$1S&e0X
                            g$rhs*$21579$1S&e0X)))))
                    g$ls/false$21573$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21572$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21572$1S&e0X
               '(_ #(each (any any)) any . each-any)))))
         g$stx$21571$1S&e0X))))
   (g$or-macro$20673$1S&e0X
     g$or-macro$24268$1S&e0X
     (case-lambda
       ((g$stx$21584$1S&e0X)
        ((case-lambda
           ((g$t$21585$1S&e0X)
            ((case-lambda
               ((g$ls/false$21586$1S&e0X)
                (if g$ls/false$21586$1S&e0X
                  (apply (case-lambda (() '#f)) g$ls/false$21586$1S&e0X)
                  ((case-lambda
                     ((g$t$21587$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21588$1S&e0X)
                          (if g$ls/false$21588$1S&e0X
                            (apply
                              (case-lambda
                                ((g$e$21589$1S&e0X g$e*$21590$1S&e0X)
                                 (g$bless$20652$1S&e0X
                                   ((letrec ((g$f$21591$1S&e0X
                                               (case-lambda
                                                 ((g$e$21592$1S&e0X
                                                    g$e*$21593$1S&e0X)
                                                  (if (null?
                                                        g$e*$21593$1S&e0X)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$21592$1S&e0X)
                                                    (begin
                                                      '#f
                                                      (list
                                                        'let
                                                        (list
                                                          (list
                                                            't
                                                            g$e$21592$1S&e0X))
                                                        (list
                                                          'if
                                                          't
                                                          't
                                                          (g$f$21591$1S&e0X
                                                            (car g$e*$21593$1S&e0X)
                                                            (cdr g$e*$21593$1S&e0X))))))))))
                                      g$f$21591$1S&e0X)
                                    g$e$21589$1S&e0X
                                    g$e*$21590$1S&e0X))))
                              g$ls/false$21588$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21587$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21587$1S&e0X
                         '(_ any . each-any)))))
                   g$t$21585$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X g$t$21585$1S&e0X '(_)))))
         g$stx$21584$1S&e0X))))
   (g$and-macro$20674$1S&e0X
     g$and-macro$24269$1S&e0X
     (case-lambda
       ((g$stx$21594$1S&e0X)
        ((case-lambda
           ((g$t$21595$1S&e0X)
            ((case-lambda
               ((g$ls/false$21596$1S&e0X)
                (if g$ls/false$21596$1S&e0X
                  (apply (case-lambda (() '#t)) g$ls/false$21596$1S&e0X)
                  ((case-lambda
                     ((g$t$21597$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$21598$1S&e0X)
                          (if g$ls/false$21598$1S&e0X
                            (apply
                              (case-lambda
                                ((g$e$21599$1S&e0X g$e*$21600$1S&e0X)
                                 (g$bless$20652$1S&e0X
                                   ((letrec ((g$f$21601$1S&e0X
                                               (case-lambda
                                                 ((g$e$21602$1S&e0X
                                                    g$e*$21603$1S&e0X)
                                                  (if (null?
                                                        g$e*$21603$1S&e0X)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$21602$1S&e0X)
                                                    (begin
                                                      '#f
                                                      (cons
                                                        'if
                                                        (cons
                                                          g$e$21602$1S&e0X
                                                          (cons
                                                            (g$f$21601$1S&e0X
                                                              (car g$e*$21603$1S&e0X)
                                                              (cdr g$e*$21603$1S&e0X))
                                                            '(#f))))))))))
                                      g$f$21601$1S&e0X)
                                    g$e$21599$1S&e0X
                                    g$e*$21600$1S&e0X))))
                              g$ls/false$21598$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$21597$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$21597$1S&e0X
                         '(_ any . each-any)))))
                   g$t$21595$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X g$t$21595$1S&e0X '(_)))))
         g$stx$21594$1S&e0X))))
   (g$cond-macro$20675$1S&e0X
     g$cond-macro$24270$1S&e0X
     (case-lambda
       ((g$stx$21604$1S&e0X)
        ((case-lambda
           ((g$t$21605$1S&e0X)
            ((case-lambda
               ((g$ls/false$21606$1S&e0X)
                (if g$ls/false$21606$1S&e0X
                  (apply
                    (case-lambda
                      ((g$cls$21607$1S&e0X g$cls*$21608$1S&e0X)
                       (g$bless$20652$1S&e0X
                         ((letrec ((g$f$21609$1S&e0X
                                     (case-lambda
                                       ((g$cls$21610$1S&e0X
                                          g$cls*$21611$1S&e0X)
                                        (if (null? g$cls*$21611$1S&e0X)
                                          ((case-lambda
                                             ((g$t$21612$1S&e0X)
                                              ((case-lambda
                                                 ((g$ls/false$21613$1S&e0X)
                                                  (if g$ls/false$21613$1S&e0X
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$21614$1S&e0X
                                                           g$e*$21615$1S&e0X)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             '#f
                                                             (cons
                                                               g$e$21614$1S&e0X
                                                               g$e*$21615$1S&e0X)))))
                                                      g$ls/false$21613$1S&e0X)
                                                    ((case-lambda
                                                       ((g$t$21616$1S&e0X)
                                                        ((case-lambda
                                                           ((g$ls/false$21617$1S&e0X)
                                                            (if g$ls/false$21617$1S&e0X
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$21618$1S&e0X
                                                                     g$p$21619$1S&e0X)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$21618$1S&e0X))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$21619$1S&e0X
                                                                         '(t))))))
                                                                g$ls/false$21617$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$t$21620$1S&e0X)
                                                                  ((case-lambda
                                                                     ((g$ls/false$21621$1S&e0X)
                                                                      (if g$ls/false$21621$1S&e0X
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$21622$1S&e0X)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$21622$1S&e0X
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$21621$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$t$21623$1S&e0X)
                                                                            ((case-lambda
                                                                               ((g$ls/false$21624$1S&e0X)
                                                                                (if g$ls/false$21624$1S&e0X
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$21625$1S&e0X
                                                                                         g$e*$21626$1S&e0X)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$21625$1S&e0X
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$21626$1S&e0X))))
                                                                                    g$ls/false$21624$1S&e0X)
                                                                                  ((case-lambda
                                                                                     ((g$t$21627$1S&e0X)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$21628$1S&e0X)
                                                                                          (if g$ls/false$21628$1S&e0X
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$20808$1S&e0X
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$21604$1S&e0X)))
                                                                                              g$ls/false$21628$1S&e0X)
                                                                                            (g$syntax-violation$20808$1S&e0X
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$21627$1S&e0X))))
                                                                                       (g$syntax-dispatch$20689$1S&e0X
                                                                                         g$t$21627$1S&e0X
                                                                                         '_))))
                                                                                   g$t$21623$1S&e0X))))
                                                                             (g$syntax-dispatch$20689$1S&e0X
                                                                               g$t$21623$1S&e0X
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$21620$1S&e0X))))
                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                     g$t$21620$1S&e0X
                                                                     '(any)))))
                                                               g$t$21616$1S&e0X))))
                                                         (g$syntax-dispatch$20689$1S&e0X
                                                           g$t$21616$1S&e0X
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$21612$1S&e0X))))
                                               (g$syntax-dispatch$20689$1S&e0X
                                                 g$t$21612$1S&e0X
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$21610$1S&e0X)
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$t$21629$1S&e0X)
                                                ((case-lambda
                                                   ((g$ls/false$21630$1S&e0X)
                                                    (if g$ls/false$21630$1S&e0X
                                                      (apply
                                                        (case-lambda
                                                          ((g$e$21631$1S&e0X
                                                             g$e*$21632$1S&e0X)
                                                           (g$syntax-violation$20808$1S&e0X
                                                             '#f
                                                             '"incorrect position of keyword else"
                                                             g$stx$21604$1S&e0X)))
                                                        g$ls/false$21630$1S&e0X)
                                                      ((case-lambda
                                                         ((g$t$21633$1S&e0X)
                                                          ((case-lambda
                                                             ((g$ls/false$21634$1S&e0X)
                                                              (if g$ls/false$21634$1S&e0X
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$e$21635$1S&e0X
                                                                       g$p$21636$1S&e0X)
                                                                     (list
                                                                       'let
                                                                       (list
                                                                         (list
                                                                           't
                                                                           g$e$21635$1S&e0X))
                                                                       (list
                                                                         'if
                                                                         't
                                                                         (cons
                                                                           g$p$21636$1S&e0X
                                                                           '(t))
                                                                         (g$f$21609$1S&e0X
                                                                           (car g$cls*$21611$1S&e0X)
                                                                           (cdr g$cls*$21611$1S&e0X))))))
                                                                  g$ls/false$21634$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$t$21637$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21638$1S&e0X)
                                                                        (if g$ls/false$21638$1S&e0X
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$e$21639$1S&e0X)
                                                                               (list
                                                                                 'or
                                                                                 g$e$21639$1S&e0X
                                                                                 (g$f$21609$1S&e0X
                                                                                   (car g$cls*$21611$1S&e0X)
                                                                                   (cdr g$cls*$21611$1S&e0X)))))
                                                                            g$ls/false$21638$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$21640$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21641$1S&e0X)
                                                                                  (if g$ls/false$21641$1S&e0X
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$e$21642$1S&e0X
                                                                                           g$e*$21643$1S&e0X)
                                                                                         (list
                                                                                           'if
                                                                                           g$e$21642$1S&e0X
                                                                                           (cons
                                                                                             'begin
                                                                                             g$e*$21643$1S&e0X)
                                                                                           (g$f$21609$1S&e0X
                                                                                             (car g$cls*$21611$1S&e0X)
                                                                                             (cdr g$cls*$21611$1S&e0X)))))
                                                                                      g$ls/false$21641$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$21644$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21645$1S&e0X)
                                                                                            (if g$ls/false$21645$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$20808$1S&e0X
                                                                                                     '#f
                                                                                                     '"invalid last clause"
                                                                                                     g$stx$21604$1S&e0X)))
                                                                                                g$ls/false$21645$1S&e0X)
                                                                                              (g$syntax-violation$20808$1S&e0X
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21644$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$21644$1S&e0X
                                                                                           '_))))
                                                                                     g$t$21640$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$21640$1S&e0X
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$t$21637$1S&e0X))))
                                                                     (g$syntax-dispatch$20689$1S&e0X
                                                                       g$t$21637$1S&e0X
                                                                       '(any)))))
                                                                 g$t$21633$1S&e0X))))
                                                           (g$syntax-dispatch$20689$1S&e0X
                                                             g$t$21633$1S&e0X
                                                             '(any #(scheme-id
                                                                     =>)
                                                                   any)))))
                                                       g$t$21629$1S&e0X))))
                                                 (g$syntax-dispatch$20689$1S&e0X
                                                   g$t$21629$1S&e0X
                                                   '(#(scheme-id else)
                                                     any
                                                     .
                                                     each-any)))))
                                             g$cls$21610$1S&e0X)))))))
                            g$f$21609$1S&e0X)
                          g$cls$21607$1S&e0X
                          g$cls*$21608$1S&e0X))))
                    g$ls/false$21606$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21605$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21605$1S&e0X
               '(_ any . each-any)))))
         g$stx$21604$1S&e0X))))
   (g$do-include$20676$1S&e0X
     g$do-include$24271$1S&e0X
     (case-lambda
       ((g$stx$21646$1S&e0X g$id$21647$1S&e0X g$filename$21648$1S&e0X)
        ((case-lambda
           ((g$filename$21649$1S&e0X)
            (begin
              (if (not (if (string? g$filename$21649$1S&e0X)
                         (begin
                           '#f
                           (g$id?$20191$1S&e0X g$id$21647$1S&e0X))
                         '#f))
                (g$syntax-violation$20808$1S&e0X
                  '#f
                  '"invalid syntax"
                  g$stx$21646$1S&e0X)
                (void))
              (cons
                (g$bless$20652$1S&e0X 'begin)
                (g$with-input-from-file$18665$1S&e0X
                  g$filename$21649$1S&e0X
                  (case-lambda
                    (()
                     ((letrec ((g$f$21650$1S&e0X
                                 (case-lambda
                                   ((g$ls$21651$1S&e0X)
                                    ((case-lambda
                                       ((g$x$21652$1S&e0X)
                                        (if (eof-object?
                                              g$x$21652$1S&e0X)
                                          (g$reverse$12682$1S&e0X
                                            g$ls$21651$1S&e0X)
                                          (begin
                                            '#f
                                            (g$f$21650$1S&e0X
                                              (cons
                                                (g$datum->stx$20174$1S&e0X
                                                  g$id$21647$1S&e0X
                                                  g$x$21652$1S&e0X)
                                                g$ls$21651$1S&e0X))))))
                                     (read-annotated))))))
                        g$f$21650$1S&e0X)
                      '()))))))))
         (g$stx->datum$20202$1S&e0X g$filename$21648$1S&e0X)))))
   (g$include-macro$20677$1S&e0X
     g$include-macro$24272$1S&e0X
     (case-lambda
       ((g$e$21653$1S&e0X)
        ((case-lambda
           ((g$t$21654$1S&e0X)
            ((case-lambda
               ((g$ls/false$21655$1S&e0X)
                (if g$ls/false$21655$1S&e0X
                  (apply
                    (case-lambda
                      ((g$id$21656$1S&e0X g$filename$21657$1S&e0X)
                       (g$do-include$20676$1S&e0X
                         g$e$21653$1S&e0X
                         g$id$21656$1S&e0X
                         g$filename$21657$1S&e0X)))
                    g$ls/false$21655$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21654$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21654$1S&e0X
               '(any any)))))
         g$e$21653$1S&e0X))))
   (g$include-into-macro$20678$1S&e0X
     g$include-into-macro$24273$1S&e0X
     (case-lambda
       ((g$e$21658$1S&e0X)
        ((case-lambda
           ((g$t$21659$1S&e0X)
            ((case-lambda
               ((g$ls/false$21660$1S&e0X)
                (if g$ls/false$21660$1S&e0X
                  (apply
                    (case-lambda
                      ((g$id$21661$1S&e0X g$filename$21662$1S&e0X)
                       (g$do-include$20676$1S&e0X
                         g$e$21658$1S&e0X
                         g$id$21661$1S&e0X
                         g$filename$21662$1S&e0X)))
                    g$ls/false$21660$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21659$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21659$1S&e0X
               '(_ any any)))))
         g$e$21658$1S&e0X))))
   (g$syntax-rules-macro$20679$1S&e0X
     g$syntax-rules-macro$24274$1S&e0X
     (case-lambda
       ((g$e$21663$1S&e0X)
        ((case-lambda
           ((g$t$21664$1S&e0X)
            ((case-lambda
               ((g$ls/false$21665$1S&e0X)
                (if g$ls/false$21665$1S&e0X
                  (apply
                    (case-lambda
                      ((g$lits$21666$1S&e0X
                         g$pat*$21667$1S&e0X
                         g$tmp*$21668$1S&e0X)
                       (begin
                         (g$verify-literals$20692$1S&e0X
                           g$lits$21666$1S&e0X
                           g$e$21663$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$21666$1S&e0X
                                   (g$map$11833$1S&e0X
                                     (case-lambda
                                       ((g$pat$21669$1S&e0X
                                          g$tmp$21670$1S&e0X)
                                        ((case-lambda
                                           ((g$t$21671$1S&e0X)
                                            ((case-lambda
                                               ((g$ls/false$21672$1S&e0X)
                                                (if g$ls/false$21672$1S&e0X
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$21673$1S&e0X)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$21673$1S&e0X)
                                                         (list
                                                           'syntax
                                                           g$tmp$21670$1S&e0X))))
                                                    g$ls/false$21672$1S&e0X)
                                                  ((case-lambda
                                                     ((g$t$21674$1S&e0X)
                                                      ((case-lambda
                                                         ((g$ls/false$21675$1S&e0X)
                                                          (if g$ls/false$21675$1S&e0X
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$20808$1S&e0X
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$21663$1S&e0X
                                                                   g$pat$21669$1S&e0X)))
                                                              g$ls/false$21675$1S&e0X)
                                                            (g$syntax-violation$20808$1S&e0X
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$21674$1S&e0X))))
                                                       (g$syntax-dispatch$20689$1S&e0X
                                                         g$t$21674$1S&e0X
                                                         '_))))
                                                   g$t$21671$1S&e0X))))
                                             (g$syntax-dispatch$20689$1S&e0X
                                               g$t$21671$1S&e0X
                                               '(_ . any)))))
                                         g$pat$21669$1S&e0X)))
                                     g$pat*$21667$1S&e0X
                                     g$tmp*$21668$1S&e0X)))))))))
                    g$ls/false$21665$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$21664$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$21664$1S&e0X
               '(_ each-any . #(each (any any)))))))
         g$e$21663$1S&e0X))))
   (g$quasiquote-macro$20680$1S&e0X
     g$quasiquote-macro$24275$1S&e0X
     ((case-lambda
        (()
         (letrec* ((g$datum$21676$1S&e0X
                     (case-lambda
                       ((g$x$21826$1S&e0X)
                        (list
                          (g$scheme-stx$20632$1S&e0X 'quote)
                          (g$mkstx$20179$1S&e0X
                            g$x$21826$1S&e0X
                            '()
                            '()
                            '())))))
                   (g$quasicons*$21711$1S&e0X
                     (case-lambda
                       ((g$x$21822$1S&e0X g$y$21823$1S&e0X)
                        ((letrec ((g$f$21824$1S&e0X
                                    (case-lambda
                                      ((g$x$21825$1S&e0X)
                                       (if (null? g$x$21825$1S&e0X)
                                         g$y$21823$1S&e0X
                                         (g$quasicons$21712$1S&e0X
                                           (car g$x$21825$1S&e0X)
                                           (g$f$21824$1S&e0X
                                             (cdr g$x$21825$1S&e0X))))))))
                           g$f$21824$1S&e0X)
                         g$x$21822$1S&e0X))))
                   (g$quasicons$21712$1S&e0X
                     (case-lambda
                       ((g$x$21803$1S&e0X g$y$21804$1S&e0X)
                        ((case-lambda
                           ((g$t$21805$1S&e0X)
                            ((case-lambda
                               ((g$ls/false$21806$1S&e0X)
                                (if g$ls/false$21806$1S&e0X
                                  (apply
                                    (case-lambda
                                      ((g$dy$21807$1S&e0X)
                                       ((case-lambda
                                          ((g$t$21808$1S&e0X)
                                           ((case-lambda
                                              ((g$ls/false$21809$1S&e0X)
                                               (if g$ls/false$21809$1S&e0X
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$21810$1S&e0X)
                                                      (list
                                                        (g$scheme-stx$20632$1S&e0X
                                                          'quote)
                                                        (cons
                                                          g$dx$21810$1S&e0X
                                                          g$dy$21807$1S&e0X))))
                                                   g$ls/false$21809$1S&e0X)
                                                 ((case-lambda
                                                    ((g$t$21811$1S&e0X)
                                                     ((case-lambda
                                                        ((g$ls/false$21812$1S&e0X)
                                                         (if g$ls/false$21812$1S&e0X
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$21813$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21814$1S&e0X)
                                                                        (if g$ls/false$21814$1S&e0X
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$20632$1S&e0X
                                                                                   'list)
                                                                                 g$x$21803$1S&e0X)))
                                                                            g$ls/false$21814$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$21815$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21816$1S&e0X)
                                                                                  (if g$ls/false$21816$1S&e0X
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$20632$1S&e0X
                                                                                             'cons)
                                                                                           g$x$21803$1S&e0X
                                                                                           g$y$21804$1S&e0X)))
                                                                                      g$ls/false$21816$1S&e0X)
                                                                                    (g$syntax-violation$20808$1S&e0X
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$21815$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$21815$1S&e0X
                                                                                 '_))))
                                                                           g$t$21813$1S&e0X))))
                                                                     (g$syntax-dispatch$20689$1S&e0X
                                                                       g$t$21813$1S&e0X
                                                                       '()))))
                                                                 g$dy$21807$1S&e0X)))
                                                             g$ls/false$21812$1S&e0X)
                                                           (g$syntax-violation$20808$1S&e0X
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$21811$1S&e0X))))
                                                      (g$syntax-dispatch$20689$1S&e0X
                                                        g$t$21811$1S&e0X
                                                        '_))))
                                                  g$t$21808$1S&e0X))))
                                            (g$syntax-dispatch$20689$1S&e0X
                                              g$t$21808$1S&e0X
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$21803$1S&e0X)))
                                    g$ls/false$21806$1S&e0X)
                                  ((case-lambda
                                     ((g$t$21817$1S&e0X)
                                      ((case-lambda
                                         ((g$ls/false$21818$1S&e0X)
                                          (if g$ls/false$21818$1S&e0X
                                            (apply
                                              (case-lambda
                                                ((g$stuff$21819$1S&e0X)
                                                 (g$cons*$11835$1S&e0X
                                                   (g$scheme-stx$20632$1S&e0X
                                                     'list)
                                                   g$x$21803$1S&e0X
                                                   g$stuff$21819$1S&e0X)))
                                              g$ls/false$21818$1S&e0X)
                                            ((case-lambda
                                               ((g$t$21820$1S&e0X)
                                                ((case-lambda
                                                   ((g$ls/false$21821$1S&e0X)
                                                    (if g$ls/false$21821$1S&e0X
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$20632$1S&e0X
                                                               'cons)
                                                             g$x$21803$1S&e0X
                                                             g$y$21804$1S&e0X)))
                                                        g$ls/false$21821$1S&e0X)
                                                      (g$syntax-violation$20808$1S&e0X
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$21820$1S&e0X))))
                                                 (g$syntax-dispatch$20689$1S&e0X
                                                   g$t$21820$1S&e0X
                                                   '_))))
                                             g$t$21817$1S&e0X))))
                                       (g$syntax-dispatch$20689$1S&e0X
                                         g$t$21817$1S&e0X
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$21805$1S&e0X))))
                             (g$syntax-dispatch$20689$1S&e0X
                               g$t$21805$1S&e0X
                               '(#(scheme-id quote) any)))))
                         g$y$21804$1S&e0X))))
                   (g$quasiappend$21713$1S&e0X
                     (case-lambda
                       ((g$x$21790$1S&e0X g$y$21791$1S&e0X)
                        ((case-lambda
                           ((g$ls$21792$1S&e0X)
                            (if (null? g$ls$21792$1S&e0X)
                              (list
                                (g$scheme-stx$20632$1S&e0X 'quote)
                                '())
                              (if (null? (cdr g$ls$21792$1S&e0X))
                                (car g$ls$21792$1S&e0X)
                                (begin
                                  '#f
                                  (g$cons*$11835$1S&e0X
                                    (g$scheme-stx$20632$1S&e0X 'append)
                                    g$ls$21792$1S&e0X))))))
                         ((letrec ((g$f$21793$1S&e0X
                                     (case-lambda
                                       ((g$x$21794$1S&e0X)
                                        (if (null? g$x$21794$1S&e0X)
                                          ((case-lambda
                                             ((g$t$21795$1S&e0X)
                                              ((case-lambda
                                                 ((g$ls/false$21796$1S&e0X)
                                                  (if g$ls/false$21796$1S&e0X
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$21796$1S&e0X)
                                                    ((case-lambda
                                                       ((g$t$21797$1S&e0X)
                                                        ((case-lambda
                                                           ((g$ls/false$21798$1S&e0X)
                                                            (if g$ls/false$21798$1S&e0X
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$21791$1S&e0X)))
                                                                g$ls/false$21798$1S&e0X)
                                                              (g$syntax-violation$20808$1S&e0X
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21797$1S&e0X))))
                                                         (g$syntax-dispatch$20689$1S&e0X
                                                           g$t$21797$1S&e0X
                                                           '_))))
                                                     g$t$21795$1S&e0X))))
                                               (g$syntax-dispatch$20689$1S&e0X
                                                 g$t$21795$1S&e0X
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$21791$1S&e0X)
                                          ((case-lambda
                                             ((g$t$21799$1S&e0X)
                                              ((case-lambda
                                                 ((g$ls/false$21800$1S&e0X)
                                                  (if g$ls/false$21800$1S&e0X
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$21793$1S&e0X
                                                           (cdr g$x$21794$1S&e0X))))
                                                      g$ls/false$21800$1S&e0X)
                                                    ((case-lambda
                                                       ((g$t$21801$1S&e0X)
                                                        ((case-lambda
                                                           ((g$ls/false$21802$1S&e0X)
                                                            (if g$ls/false$21802$1S&e0X
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$21794$1S&e0X)
                                                                     (g$f$21793$1S&e0X
                                                                       (cdr g$x$21794$1S&e0X)))))
                                                                g$ls/false$21802$1S&e0X)
                                                              (g$syntax-violation$20808$1S&e0X
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21801$1S&e0X))))
                                                         (g$syntax-dispatch$20689$1S&e0X
                                                           g$t$21801$1S&e0X
                                                           '_))))
                                                     g$t$21799$1S&e0X))))
                                               (g$syntax-dispatch$20689$1S&e0X
                                                 g$t$21799$1S&e0X
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$21794$1S&e0X)))))))
                            g$f$21793$1S&e0X)
                          g$x$21790$1S&e0X)))))
                   (g$quasivector$21714$1S&e0X
                     (case-lambda
                       ((g$x$21765$1S&e0X)
                        ((case-lambda
                           ((g$pat-x$21766$1S&e0X)
                            ((case-lambda
                               ((g$t$21767$1S&e0X)
                                ((case-lambda
                                   ((g$ls/false$21768$1S&e0X)
                                    (if g$ls/false$21768$1S&e0X
                                      (apply
                                        (case-lambda
                                          ((g$x*$21769$1S&e0X)
                                           (list
                                             (g$scheme-stx$20632$1S&e0X
                                               'quote)
                                             (g$list->vector$12676$1S&e0X
                                               g$x*$21769$1S&e0X))))
                                        g$ls/false$21768$1S&e0X)
                                      ((case-lambda
                                         ((g$t$21770$1S&e0X)
                                          ((case-lambda
                                             ((g$ls/false$21771$1S&e0X)
                                              (if g$ls/false$21771$1S&e0X
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$21772$1S&e0X
                                                                 (case-lambda
                                                                   ((g$x$21773$1S&e0X
                                                                      g$k$21774$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$t$21775$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21776$1S&e0X)
                                                                            (if g$ls/false$21776$1S&e0X
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$21777$1S&e0X)
                                                                                   (g$k$21774$1S&e0X
                                                                                     (g$map$11833$1S&e0X
                                                                                       (case-lambda
                                                                                         ((g$x$21778$1S&e0X)
                                                                                          (list
                                                                                            (g$scheme-stx$20632$1S&e0X
                                                                                              'quote)
                                                                                            g$x$21778$1S&e0X)))
                                                                                       g$x*$21777$1S&e0X))))
                                                                                g$ls/false$21776$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$t$21779$1S&e0X)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$21780$1S&e0X)
                                                                                      (if g$ls/false$21780$1S&e0X
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$21781$1S&e0X)
                                                                                             (g$k$21774$1S&e0X
                                                                                               g$x*$21781$1S&e0X)))
                                                                                          g$ls/false$21780$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$t$21782$1S&e0X)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$21783$1S&e0X)
                                                                                                (if g$ls/false$21783$1S&e0X
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$21784$1S&e0X
                                                                                                         g$y$21785$1S&e0X)
                                                                                                       (g$f$21772$1S&e0X
                                                                                                         g$y$21785$1S&e0X
                                                                                                         (case-lambda
                                                                                                           ((g$ls$21786$1S&e0X)
                                                                                                            (g$k$21774$1S&e0X
                                                                                                              (cons
                                                                                                                g$x$21784$1S&e0X
                                                                                                                g$ls$21786$1S&e0X)))))))
                                                                                                    g$ls/false$21783$1S&e0X)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$21787$1S&e0X)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$21788$1S&e0X)
                                                                                                          (if g$ls/false$21788$1S&e0X
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$20632$1S&e0X
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$21766$1S&e0X)))
                                                                                                              g$ls/false$21788$1S&e0X)
                                                                                                            (g$syntax-violation$20808$1S&e0X
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$21787$1S&e0X))))
                                                                                                       (g$syntax-dispatch$20689$1S&e0X
                                                                                                         g$t$21787$1S&e0X
                                                                                                         '_))))
                                                                                                   g$t$21782$1S&e0X))))
                                                                                             (g$syntax-dispatch$20689$1S&e0X
                                                                                               g$t$21782$1S&e0X
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$21779$1S&e0X))))
                                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                                     g$t$21779$1S&e0X
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$21775$1S&e0X))))
                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                           g$t$21775$1S&e0X
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$21773$1S&e0X)))))
                                                        g$f$21772$1S&e0X)
                                                      g$x$21765$1S&e0X
                                                      (case-lambda
                                                        ((g$ls$21789$1S&e0X)
                                                         (g$cons*$11835$1S&e0X
                                                           (g$scheme-stx$20632$1S&e0X
                                                             'vector)
                                                           g$ls$21789$1S&e0X))))))
                                                  g$ls/false$21771$1S&e0X)
                                                (g$syntax-violation$20808$1S&e0X
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$21770$1S&e0X))))
                                           (g$syntax-dispatch$20689$1S&e0X
                                             g$t$21770$1S&e0X
                                             '_))))
                                       g$t$21767$1S&e0X))))
                                 (g$syntax-dispatch$20689$1S&e0X
                                   g$t$21767$1S&e0X
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$21766$1S&e0X)))
                         g$x$21765$1S&e0X))))
                   (g$vquasi$21715$1S&e0X
                     (case-lambda
                       ((g$p$21748$1S&e0X g$lev$21749$1S&e0X)
                        ((case-lambda
                           ((g$t$21750$1S&e0X)
                            ((case-lambda
                               ((g$ls/false$21751$1S&e0X)
                                (if g$ls/false$21751$1S&e0X
                                  (apply
                                    (case-lambda
                                      ((g$p$21752$1S&e0X
                                         g$q$21753$1S&e0X)
                                       ((case-lambda
                                          ((g$t$21754$1S&e0X)
                                           ((case-lambda
                                              ((g$ls/false$21755$1S&e0X)
                                               (if g$ls/false$21755$1S&e0X
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$21756$1S&e0X)
                                                      (if (g$=$13694$1S&e0X
                                                            g$lev$21749$1S&e0X
                                                            '0)
                                                        (g$quasicons*$21711$1S&e0X
                                                          g$p$21756$1S&e0X
                                                          (g$vquasi$21715$1S&e0X
                                                            g$q$21753$1S&e0X
                                                            g$lev$21749$1S&e0X))
                                                        (g$quasicons$21712$1S&e0X
                                                          (g$quasicons$21712$1S&e0X
                                                            (g$datum$21676$1S&e0X
                                                              'unquote)
                                                            (g$quasi$21716$1S&e0X
                                                              g$p$21756$1S&e0X
                                                              (- g$lev$21749$1S&e0X
                                                                 '1)))
                                                          (g$vquasi$21715$1S&e0X
                                                            g$q$21753$1S&e0X
                                                            g$lev$21749$1S&e0X)))))
                                                   g$ls/false$21755$1S&e0X)
                                                 ((case-lambda
                                                    ((g$t$21757$1S&e0X)
                                                     ((case-lambda
                                                        ((g$ls/false$21758$1S&e0X)
                                                         (if g$ls/false$21758$1S&e0X
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$21759$1S&e0X)
                                                                (if (g$=$13694$1S&e0X
                                                                      g$lev$21749$1S&e0X
                                                                      '0)
                                                                  (g$quasiappend$21713$1S&e0X
                                                                    g$p$21759$1S&e0X
                                                                    (g$vquasi$21715$1S&e0X
                                                                      g$q$21753$1S&e0X
                                                                      g$lev$21749$1S&e0X))
                                                                  (g$quasicons$21712$1S&e0X
                                                                    (g$quasicons$21712$1S&e0X
                                                                      (g$datum$21676$1S&e0X
                                                                        'unquote-splicing)
                                                                      (g$quasi$21716$1S&e0X
                                                                        g$p$21759$1S&e0X
                                                                        (- g$lev$21749$1S&e0X
                                                                           '1)))
                                                                    (g$vquasi$21715$1S&e0X
                                                                      g$q$21753$1S&e0X
                                                                      g$lev$21749$1S&e0X)))))
                                                             g$ls/false$21758$1S&e0X)
                                                           ((case-lambda
                                                              ((g$t$21760$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$ls/false$21761$1S&e0X)
                                                                   (if g$ls/false$21761$1S&e0X
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$21762$1S&e0X)
                                                                          (g$quasicons$21712$1S&e0X
                                                                            (g$quasi$21716$1S&e0X
                                                                              g$p$21762$1S&e0X
                                                                              g$lev$21749$1S&e0X)
                                                                            (g$vquasi$21715$1S&e0X
                                                                              g$q$21753$1S&e0X
                                                                              g$lev$21749$1S&e0X))))
                                                                       g$ls/false$21761$1S&e0X)
                                                                     (g$syntax-violation$20808$1S&e0X
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$21760$1S&e0X))))
                                                                (g$syntax-dispatch$20689$1S&e0X
                                                                  g$t$21760$1S&e0X
                                                                  'any))))
                                                            g$t$21757$1S&e0X))))
                                                      (g$syntax-dispatch$20689$1S&e0X
                                                        g$t$21757$1S&e0X
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$21754$1S&e0X))))
                                            (g$syntax-dispatch$20689$1S&e0X
                                              g$t$21754$1S&e0X
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$21752$1S&e0X)))
                                    g$ls/false$21751$1S&e0X)
                                  ((case-lambda
                                     ((g$t$21763$1S&e0X)
                                      ((case-lambda
                                         ((g$ls/false$21764$1S&e0X)
                                          (if g$ls/false$21764$1S&e0X
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$20632$1S&e0X
                                                     'quote)
                                                   '())))
                                              g$ls/false$21764$1S&e0X)
                                            (g$syntax-violation$20808$1S&e0X
                                              '#f
                                              '"invalid syntax"
                                              g$t$21763$1S&e0X))))
                                       (g$syntax-dispatch$20689$1S&e0X
                                         g$t$21763$1S&e0X
                                         '()))))
                                   g$t$21750$1S&e0X))))
                             (g$syntax-dispatch$20689$1S&e0X
                               g$t$21750$1S&e0X
                               '(any . any)))))
                         g$p$21748$1S&e0X))))
                   (g$quasi$21716$1S&e0X
                     (case-lambda
                       ((g$p$21721$1S&e0X g$lev$21722$1S&e0X)
                        ((case-lambda
                           ((g$t$21723$1S&e0X)
                            ((case-lambda
                               ((g$ls/false$21724$1S&e0X)
                                (if g$ls/false$21724$1S&e0X
                                  (apply
                                    (case-lambda
                                      ((g$p$21725$1S&e0X)
                                       (if (g$=$13694$1S&e0X
                                             g$lev$21722$1S&e0X
                                             '0)
                                         g$p$21725$1S&e0X
                                         (g$quasicons$21712$1S&e0X
                                           (g$datum$21676$1S&e0X
                                             'unquote)
                                           (g$quasi$21716$1S&e0X
                                             (list g$p$21725$1S&e0X)
                                             (- g$lev$21722$1S&e0X
                                                '1))))))
                                    g$ls/false$21724$1S&e0X)
                                  ((case-lambda
                                     ((g$t$21726$1S&e0X)
                                      ((case-lambda
                                         ((g$ls/false$21727$1S&e0X)
                                          (if g$ls/false$21727$1S&e0X
                                            (apply
                                              (case-lambda
                                                ((g$p$21728$1S&e0X
                                                   g$q$21729$1S&e0X)
                                                 (if (g$=$13694$1S&e0X
                                                       g$lev$21722$1S&e0X
                                                       '0)
                                                   (g$quasicons*$21711$1S&e0X
                                                     g$p$21728$1S&e0X
                                                     (g$quasi$21716$1S&e0X
                                                       g$q$21729$1S&e0X
                                                       g$lev$21722$1S&e0X))
                                                   (g$quasicons$21712$1S&e0X
                                                     (g$quasicons$21712$1S&e0X
                                                       (g$datum$21676$1S&e0X
                                                         'unquote)
                                                       (g$quasi$21716$1S&e0X
                                                         g$p$21728$1S&e0X
                                                         (- g$lev$21722$1S&e0X
                                                            '1)))
                                                     (g$quasi$21716$1S&e0X
                                                       g$q$21729$1S&e0X
                                                       g$lev$21722$1S&e0X)))))
                                              g$ls/false$21727$1S&e0X)
                                            ((case-lambda
                                               ((g$t$21730$1S&e0X)
                                                ((case-lambda
                                                   ((g$ls/false$21731$1S&e0X)
                                                    (if g$ls/false$21731$1S&e0X
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$21732$1S&e0X
                                                             g$q$21733$1S&e0X)
                                                           (if (g$=$13694$1S&e0X
                                                                 g$lev$21722$1S&e0X
                                                                 '0)
                                                             (g$quasiappend$21713$1S&e0X
                                                               g$p$21732$1S&e0X
                                                               (g$quasi$21716$1S&e0X
                                                                 g$q$21733$1S&e0X
                                                                 g$lev$21722$1S&e0X))
                                                             (g$quasicons$21712$1S&e0X
                                                               (g$quasicons$21712$1S&e0X
                                                                 (g$datum$21676$1S&e0X
                                                                   'unquote-splicing)
                                                                 (g$quasi$21716$1S&e0X
                                                                   g$p$21732$1S&e0X
                                                                   (- g$lev$21722$1S&e0X
                                                                      '1)))
                                                               (g$quasi$21716$1S&e0X
                                                                 g$q$21733$1S&e0X
                                                                 g$lev$21722$1S&e0X)))))
                                                        g$ls/false$21731$1S&e0X)
                                                      ((case-lambda
                                                         ((g$t$21734$1S&e0X)
                                                          ((case-lambda
                                                             ((g$ls/false$21735$1S&e0X)
                                                              (if g$ls/false$21735$1S&e0X
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$21736$1S&e0X)
                                                                     (g$quasicons$21712$1S&e0X
                                                                       (g$datum$21676$1S&e0X
                                                                         'quasiquote)
                                                                       (g$quasi$21716$1S&e0X
                                                                         (list
                                                                           g$p$21736$1S&e0X)
                                                                         (+ g$lev$21722$1S&e0X
                                                                            '1)))))
                                                                  g$ls/false$21735$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$t$21737$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21738$1S&e0X)
                                                                        (if g$ls/false$21738$1S&e0X
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$21739$1S&e0X
                                                                                 g$q$21740$1S&e0X)
                                                                               (g$quasicons$21712$1S&e0X
                                                                                 (g$quasi$21716$1S&e0X
                                                                                   g$p$21739$1S&e0X
                                                                                   g$lev$21722$1S&e0X)
                                                                                 (g$quasi$21716$1S&e0X
                                                                                   g$q$21740$1S&e0X
                                                                                   g$lev$21722$1S&e0X))))
                                                                            g$ls/false$21738$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$21741$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21742$1S&e0X)
                                                                                  (if (if g$ls/false$21742$1S&e0X
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$21743$1S&e0X)
                                                                                               (not (g$stx?$20163$1S&e0X
                                                                                                      g$x$21743$1S&e0X))))
                                                                                            g$ls/false$21742$1S&e0X))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$21744$1S&e0X)
                                                                                         (g$quasivector$21714$1S&e0X
                                                                                           (g$vquasi$21715$1S&e0X
                                                                                             g$x$21744$1S&e0X
                                                                                             g$lev$21722$1S&e0X))))
                                                                                      g$ls/false$21742$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$21745$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21746$1S&e0X)
                                                                                            (if g$ls/false$21746$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21747$1S&e0X)
                                                                                                   (list
                                                                                                     (g$scheme-stx$20632$1S&e0X
                                                                                                       'quote)
                                                                                                     g$p$21747$1S&e0X)))
                                                                                                g$ls/false$21746$1S&e0X)
                                                                                              (g$syntax-violation$20808$1S&e0X
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21745$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$21745$1S&e0X
                                                                                           'any))))
                                                                                     g$t$21741$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$21741$1S&e0X
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$21737$1S&e0X))))
                                                                     (g$syntax-dispatch$20689$1S&e0X
                                                                       g$t$21737$1S&e0X
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$21734$1S&e0X))))
                                                           (g$syntax-dispatch$20689$1S&e0X
                                                             g$t$21734$1S&e0X
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$21730$1S&e0X))))
                                                 (g$syntax-dispatch$20689$1S&e0X
                                                   g$t$21730$1S&e0X
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$21726$1S&e0X))))
                                       (g$syntax-dispatch$20689$1S&e0X
                                         g$t$21726$1S&e0X
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$21723$1S&e0X))))
                             (g$syntax-dispatch$20689$1S&e0X
                               g$t$21723$1S&e0X
                               '(#(scheme-id unquote) any)))))
                         g$p$21721$1S&e0X)))))
           (case-lambda
             ((g$x$21717$1S&e0X)
              ((case-lambda
                 ((g$t$21718$1S&e0X)
                  ((case-lambda
                     ((g$ls/false$21719$1S&e0X)
                      (if g$ls/false$21719$1S&e0X
                        (apply
                          (case-lambda
                            ((g$e$21720$1S&e0X)
                             (g$quasi$21716$1S&e0X
                               g$e$21720$1S&e0X
                               '0)))
                          g$ls/false$21719$1S&e0X)
                        (g$syntax-violation$20808$1S&e0X
                          '#f
                          '"invalid syntax"
                          g$t$21718$1S&e0X))))
                   (g$syntax-dispatch$20689$1S&e0X
                     g$t$21718$1S&e0X
                     '(_ any)))))
               g$x$21717$1S&e0X))))))))
   (g$quasisyntax-macro$20681$1S&e0X
     g$quasisyntax-macro$24276$1S&e0X
     ((case-lambda
        (()
         (letrec* ((g$quasi$21827$1S&e0X
                     (case-lambda
                       ((g$p$21841$1S&e0X g$lev$21842$1S&e0X)
                        ((case-lambda
                           ((g$t$21843$1S&e0X)
                            ((case-lambda
                               ((g$ls/false$21844$1S&e0X)
                                (if g$ls/false$21844$1S&e0X
                                  (apply
                                    (case-lambda
                                      ((g$p$21845$1S&e0X)
                                       (if (g$=$13694$1S&e0X
                                             g$lev$21842$1S&e0X
                                             '0)
                                         ((case-lambda
                                            ((g$g$21846$1S&e0X)
                                             (values
                                               (list g$g$21846$1S&e0X)
                                               (list g$p$21845$1S&e0X)
                                               g$g$21846$1S&e0X)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$21827$1S&e0X
                                                g$p$21845$1S&e0X
                                                (- g$lev$21842$1S&e0X
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$21850$1S&e0X
                                                g$rhs*$21851$1S&e0X
                                                g$p$21852$1S&e0X)
                                              ((case-lambda
                                                 ((g$p$21853$1S&e0X
                                                    g$rhs*$21854$1S&e0X
                                                    g$lhs*$21855$1S&e0X)
                                                  (values
                                                    g$lhs*$21855$1S&e0X
                                                    g$rhs*$21854$1S&e0X
                                                    (list
                                                      'unsyntax
                                                      g$p$21853$1S&e0X))))
                                               g$p$21852$1S&e0X
                                               g$rhs*$21851$1S&e0X
                                               g$lhs*$21850$1S&e0X)))))))
                                    g$ls/false$21844$1S&e0X)
                                  ((case-lambda
                                     ((g$t$21856$1S&e0X)
                                      ((case-lambda
                                         ((g$ls/false$21857$1S&e0X)
                                          (if (if g$ls/false$21857$1S&e0X
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$13694$1S&e0X
                                                         g$lev$21842$1S&e0X
                                                         '0)))
                                                    g$ls/false$21857$1S&e0X))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$20808$1S&e0X
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$21841$1S&e0X)))
                                              g$ls/false$21857$1S&e0X)
                                            ((case-lambda
                                               ((g$t$21858$1S&e0X)
                                                ((case-lambda
                                                   ((g$ls/false$21859$1S&e0X)
                                                    (if g$ls/false$21859$1S&e0X
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$21860$1S&e0X
                                                             g$q$21861$1S&e0X)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$21827$1S&e0X
                                                                  g$q$21861$1S&e0X
                                                                  g$lev$21842$1S&e0X)))
                                                             (case-lambda
                                                               ((g$lhs*$21865$1S&e0X
                                                                  g$rhs*$21866$1S&e0X
                                                                  g$q$21867$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$q$21868$1S&e0X
                                                                      g$rhs*$21869$1S&e0X
                                                                      g$lhs*$21870$1S&e0X)
                                                                    (if (g$=$13694$1S&e0X
                                                                          g$lev$21842$1S&e0X
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$21871$1S&e0X)
                                                                          (values
                                                                            (append
                                                                              g$g*$21871$1S&e0X
                                                                              g$lhs*$21870$1S&e0X)
                                                                            (append
                                                                              g$p*$21860$1S&e0X
                                                                              g$rhs*$21869$1S&e0X)
                                                                            (append
                                                                              g$g*$21871$1S&e0X
                                                                              g$q$21868$1S&e0X))))
                                                                       (g$map$11833$1S&e0X
                                                                         (case-lambda
                                                                           ((g$x$21872$1S&e0X)
                                                                            (gensym)))
                                                                         g$p*$21860$1S&e0X))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$21827$1S&e0X
                                                                             g$p*$21860$1S&e0X
                                                                             (- g$lev$21842$1S&e0X
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$21876$1S&e0X
                                                                             g$rhs2*$21877$1S&e0X
                                                                             g$p*$21878$1S&e0X)
                                                                           ((case-lambda
                                                                              ((g$p*$21879$1S&e0X
                                                                                 g$rhs2*$21880$1S&e0X
                                                                                 g$lhs2*$21881$1S&e0X)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$21881$1S&e0X
                                                                                   g$lhs*$21870$1S&e0X)
                                                                                 (append
                                                                                   g$rhs2*$21880$1S&e0X
                                                                                   g$rhs*$21869$1S&e0X)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$21879$1S&e0X)
                                                                                   g$q$21868$1S&e0X))))
                                                                            g$p*$21878$1S&e0X
                                                                            g$rhs2*$21877$1S&e0X
                                                                            g$lhs2*$21876$1S&e0X)))))))
                                                                 g$q$21867$1S&e0X
                                                                 g$rhs*$21866$1S&e0X
                                                                 g$lhs*$21865$1S&e0X))))))
                                                        g$ls/false$21859$1S&e0X)
                                                      ((case-lambda
                                                         ((g$t$21882$1S&e0X)
                                                          ((case-lambda
                                                             ((g$ls/false$21883$1S&e0X)
                                                              (if g$ls/false$21883$1S&e0X
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$21884$1S&e0X
                                                                       g$q$21885$1S&e0X)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$21827$1S&e0X
                                                                            g$q$21885$1S&e0X
                                                                            g$lev$21842$1S&e0X)))
                                                                       (case-lambda
                                                                         ((g$lhs*$21889$1S&e0X
                                                                            g$rhs*$21890$1S&e0X
                                                                            g$q$21891$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$q$21892$1S&e0X
                                                                                g$rhs*$21893$1S&e0X
                                                                                g$lhs*$21894$1S&e0X)
                                                                              (if (g$=$13694$1S&e0X
                                                                                    g$lev$21842$1S&e0X
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$21895$1S&e0X)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$11833$1S&e0X
                                                                                          (case-lambda
                                                                                            ((g$g$21896$1S&e0X)
                                                                                             (cons
                                                                                               g$g$21896$1S&e0X
                                                                                               '(...))))
                                                                                          g$g*$21895$1S&e0X)
                                                                                        g$lhs*$21894$1S&e0X)
                                                                                      (append
                                                                                        g$p*$21884$1S&e0X
                                                                                        g$rhs*$21893$1S&e0X)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$11833$1S&e0X
                                                                                            (case-lambda
                                                                                              ((g$g$21897$1S&e0X)
                                                                                               (cons
                                                                                                 g$g$21897$1S&e0X
                                                                                                 '(...))))
                                                                                            g$g*$21895$1S&e0X))
                                                                                        g$q$21892$1S&e0X))))
                                                                                 (g$map$11833$1S&e0X
                                                                                   (case-lambda
                                                                                     ((g$x$21898$1S&e0X)
                                                                                      (gensym)))
                                                                                   g$p*$21884$1S&e0X))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$21827$1S&e0X
                                                                                       g$p*$21884$1S&e0X
                                                                                       (- g$lev$21842$1S&e0X
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$21902$1S&e0X
                                                                                       g$rhs2*$21903$1S&e0X
                                                                                       g$p*$21904$1S&e0X)
                                                                                     ((case-lambda
                                                                                        ((g$p*$21905$1S&e0X
                                                                                           g$rhs2*$21906$1S&e0X
                                                                                           g$lhs2*$21907$1S&e0X)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$21907$1S&e0X
                                                                                             g$lhs*$21894$1S&e0X)
                                                                                           (append
                                                                                             g$rhs2*$21906$1S&e0X
                                                                                             g$rhs*$21893$1S&e0X)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$21905$1S&e0X)
                                                                                             g$q$21892$1S&e0X))))
                                                                                      g$p*$21904$1S&e0X
                                                                                      g$rhs2*$21903$1S&e0X
                                                                                      g$lhs2*$21902$1S&e0X)))))))
                                                                           g$q$21891$1S&e0X
                                                                           g$rhs*$21890$1S&e0X
                                                                           g$lhs*$21889$1S&e0X))))))
                                                                  g$ls/false$21883$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$t$21908$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21909$1S&e0X)
                                                                        (if (if g$ls/false$21909$1S&e0X
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$13694$1S&e0X
                                                                                       g$lev$21842$1S&e0X
                                                                                       '0)))
                                                                                  g$ls/false$21909$1S&e0X))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$20808$1S&e0X
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$21841$1S&e0X)))
                                                                            g$ls/false$21909$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$21910$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21911$1S&e0X)
                                                                                  (if g$ls/false$21911$1S&e0X
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$21912$1S&e0X)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$21827$1S&e0X
                                                                                                g$p$21912$1S&e0X
                                                                                                (+ g$lev$21842$1S&e0X
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$21916$1S&e0X
                                                                                                g$rhs*$21917$1S&e0X
                                                                                                g$p$21918$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$p$21919$1S&e0X
                                                                                                    g$rhs*$21920$1S&e0X
                                                                                                    g$lhs*$21921$1S&e0X)
                                                                                                  (values
                                                                                                    g$lhs*$21921$1S&e0X
                                                                                                    g$rhs*$21920$1S&e0X
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$21919$1S&e0X))))
                                                                                               g$p$21918$1S&e0X
                                                                                               g$rhs*$21917$1S&e0X
                                                                                               g$lhs*$21916$1S&e0X))))))
                                                                                      g$ls/false$21911$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$21922$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21923$1S&e0X)
                                                                                            (if g$ls/false$21923$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21924$1S&e0X
                                                                                                     g$q$21925$1S&e0X)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$21827$1S&e0X
                                                                                                          g$p$21924$1S&e0X
                                                                                                          g$lev$21842$1S&e0X)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$21932$1S&e0X
                                                                                                          g$rhs*$21933$1S&e0X
                                                                                                          g$p$21934$1S&e0X)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$21827$1S&e0X
                                                                                                               g$q$21925$1S&e0X
                                                                                                               g$lev$21842$1S&e0X)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$21935$1S&e0X
                                                                                                               g$rhs2*$21936$1S&e0X
                                                                                                               g$q$21937$1S&e0X)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$21938$1S&e0X
                                                                                                                   g$rhs2*$21939$1S&e0X
                                                                                                                   g$lhs2*$21940$1S&e0X
                                                                                                                   g$p$21941$1S&e0X
                                                                                                                   g$rhs*$21942$1S&e0X
                                                                                                                   g$lhs*$21943$1S&e0X)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$21940$1S&e0X
                                                                                                                     g$lhs*$21943$1S&e0X)
                                                                                                                   (append
                                                                                                                     g$rhs2*$21939$1S&e0X
                                                                                                                     g$rhs*$21942$1S&e0X)
                                                                                                                   (cons
                                                                                                                     g$p$21941$1S&e0X
                                                                                                                     g$q$21938$1S&e0X))))
                                                                                                              g$q$21937$1S&e0X
                                                                                                              g$rhs2*$21936$1S&e0X
                                                                                                              g$lhs2*$21935$1S&e0X
                                                                                                              g$p$21934$1S&e0X
                                                                                                              g$rhs*$21933$1S&e0X
                                                                                                              g$lhs*$21932$1S&e0X)))))))))
                                                                                                g$ls/false$21923$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$t$21944$1S&e0X)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$21945$1S&e0X)
                                                                                                      (if g$ls/false$21945$1S&e0X
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$21946$1S&e0X)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$21827$1S&e0X
                                                                                                                    g$x*$21946$1S&e0X
                                                                                                                    g$lev$21842$1S&e0X)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$21950$1S&e0X
                                                                                                                    g$rhs*$21951$1S&e0X
                                                                                                                    g$x*$21952$1S&e0X)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$21953$1S&e0X
                                                                                                                        g$rhs*$21954$1S&e0X
                                                                                                                        g$lhs*$21955$1S&e0X)
                                                                                                                      (values
                                                                                                                        g$lhs*$21955$1S&e0X
                                                                                                                        g$rhs*$21954$1S&e0X
                                                                                                                        (g$list->vector$12676$1S&e0X
                                                                                                                          g$x*$21953$1S&e0X))))
                                                                                                                   g$x*$21952$1S&e0X
                                                                                                                   g$rhs*$21951$1S&e0X
                                                                                                                   g$lhs*$21950$1S&e0X))))))
                                                                                                          g$ls/false$21945$1S&e0X)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$21956$1S&e0X)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$21957$1S&e0X)
                                                                                                                (if g$ls/false$21957$1S&e0X
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$21841$1S&e0X)))
                                                                                                                    g$ls/false$21957$1S&e0X)
                                                                                                                  (g$syntax-violation$20808$1S&e0X
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$21956$1S&e0X))))
                                                                                                             (g$syntax-dispatch$20689$1S&e0X
                                                                                                               g$t$21956$1S&e0X
                                                                                                               '_))))
                                                                                                         g$t$21944$1S&e0X))))
                                                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                                                     g$t$21944$1S&e0X
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$21922$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$21922$1S&e0X
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$21910$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$21910$1S&e0X
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$21908$1S&e0X))))
                                                                     (g$syntax-dispatch$20689$1S&e0X
                                                                       g$t$21908$1S&e0X
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$21882$1S&e0X))))
                                                           (g$syntax-dispatch$20689$1S&e0X
                                                             g$t$21882$1S&e0X
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$21858$1S&e0X))))
                                                 (g$syntax-dispatch$20689$1S&e0X
                                                   g$t$21858$1S&e0X
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$21856$1S&e0X))))
                                       (g$syntax-dispatch$20689$1S&e0X
                                         g$t$21856$1S&e0X
                                         '#(scheme-id unsyntax)))))
                                   g$t$21843$1S&e0X))))
                             (g$syntax-dispatch$20689$1S&e0X
                               g$t$21843$1S&e0X
                               '(#(scheme-id unsyntax) any)))))
                         g$p$21841$1S&e0X)))))
           (case-lambda
             ((g$x$21828$1S&e0X)
              ((case-lambda
                 ((g$t$21829$1S&e0X)
                  ((case-lambda
                     ((g$ls/false$21830$1S&e0X)
                      (if g$ls/false$21830$1S&e0X
                        (apply
                          (case-lambda
                            ((g$e$21831$1S&e0X)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$21827$1S&e0X
                                    g$e$21831$1S&e0X
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$21835$1S&e0X
                                    g$rhs*$21836$1S&e0X
                                    g$v$21837$1S&e0X)
                                  ((case-lambda
                                     ((g$v$21838$1S&e0X
                                        g$rhs*$21839$1S&e0X
                                        g$lhs*$21840$1S&e0X)
                                      (g$bless$20652$1S&e0X
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$21839$1S&e0X)
                                          '()
                                          (list
                                            g$lhs*$21840$1S&e0X
                                            (list
                                              'syntax
                                              g$v$21838$1S&e0X))))))
                                   g$v$21837$1S&e0X
                                   g$rhs*$21836$1S&e0X
                                   g$lhs*$21835$1S&e0X))))))
                          g$ls/false$21830$1S&e0X)
                        (g$syntax-violation$20808$1S&e0X
                          '#f
                          '"invalid syntax"
                          g$t$21829$1S&e0X))))
                   (g$syntax-dispatch$20689$1S&e0X
                     g$t$21829$1S&e0X
                     '(_ any)))))
               g$x$21828$1S&e0X))))))))
   (g$define-struct-macro$20682$1S&e0X
     g$define-struct-macro$24277$1S&e0X
     (case-lambda
       ((g$stx$21958$1S&e0X)
        (g$syntax-violation$20808$1S&e0X
          '#f
          '"define-struct not supported"
          g$stx$21958$1S&e0X))))
   (g$define-record-type-macro$20683$1S&e0X
     g$define-record-type-macro$24278$1S&e0X
     (case-lambda
       ((g$x$21959$1S&e0X)
        (letrec* ((g$id$21960$1S&e0X
                    (case-lambda
                      ((g$ctxt$22212$1S&e0X . g$str*$22213$1S&e0X)
                       (g$datum->syntax$20810$1S&e0X
                         g$ctxt$22212$1S&e0X
                         (string->symbol
                           (apply
                             string-append
                             (g$map$11833$1S&e0X
                               (case-lambda
                                 ((g$x$22214$1S&e0X)
                                  (if (g$symbol?$12665$1S&e0X
                                        g$x$22214$1S&e0X)
                                    (symbol->string g$x$22214$1S&e0X)
                                    (if (string? g$x$22214$1S&e0X)
                                      g$x$22214$1S&e0X
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'define-record-type
                                          '"BUG"))))))
                               g$str*$22213$1S&e0X)))))))
                  (g$get-record-name$21961$1S&e0X
                    (case-lambda
                      ((g$spec$22203$1S&e0X)
                       ((case-lambda
                          ((g$t$22204$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22205$1S&e0X)
                               (if g$ls/false$22205$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$foo$22206$1S&e0X
                                        g$make-foo$22207$1S&e0X
                                        g$foo?$22208$1S&e0X)
                                      g$foo$22206$1S&e0X))
                                   g$ls/false$22205$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22209$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22210$1S&e0X)
                                         (if g$ls/false$22210$1S&e0X
                                           (apply
                                             (case-lambda
                                               ((g$foo$22211$1S&e0X)
                                                g$foo$22211$1S&e0X))
                                             g$ls/false$22210$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22209$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22209$1S&e0X
                                        'any))))
                                  g$t$22204$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22204$1S&e0X
                              '(any any any)))))
                        g$spec$22203$1S&e0X))))
                  (g$get-record-constructor-name$21962$1S&e0X
                    (case-lambda
                      ((g$spec$22193$1S&e0X)
                       ((case-lambda
                          ((g$t$22194$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22195$1S&e0X)
                               (if g$ls/false$22195$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$foo$22196$1S&e0X
                                        g$make-foo$22197$1S&e0X
                                        g$foo?$22198$1S&e0X)
                                      g$make-foo$22197$1S&e0X))
                                   g$ls/false$22195$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22199$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22200$1S&e0X)
                                         (if (if g$ls/false$22200$1S&e0X
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$22201$1S&e0X)
                                                      (g$id?$20191$1S&e0X
                                                        g$foo$22201$1S&e0X)))
                                                   g$ls/false$22200$1S&e0X))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$22202$1S&e0X)
                                                (g$id$21960$1S&e0X
                                                  g$foo$22202$1S&e0X
                                                  '"make-"
                                                  (g$stx->datum$20202$1S&e0X
                                                    g$foo$22202$1S&e0X))))
                                             g$ls/false$22200$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22199$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22199$1S&e0X
                                        'any))))
                                  g$t$22194$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22194$1S&e0X
                              '(any any any)))))
                        g$spec$22193$1S&e0X))))
                  (g$get-record-predicate-name$21963$1S&e0X
                    (case-lambda
                      ((g$spec$22183$1S&e0X)
                       ((case-lambda
                          ((g$t$22184$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22185$1S&e0X)
                               (if g$ls/false$22185$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$foo$22186$1S&e0X
                                        g$make-foo$22187$1S&e0X
                                        g$foo?$22188$1S&e0X)
                                      g$foo?$22188$1S&e0X))
                                   g$ls/false$22185$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22189$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22190$1S&e0X)
                                         (if (if g$ls/false$22190$1S&e0X
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$22191$1S&e0X)
                                                      (g$id?$20191$1S&e0X
                                                        g$foo$22191$1S&e0X)))
                                                   g$ls/false$22190$1S&e0X))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$22192$1S&e0X)
                                                (g$id$21960$1S&e0X
                                                  g$foo$22192$1S&e0X
                                                  (g$stx->datum$20202$1S&e0X
                                                    g$foo$22192$1S&e0X)
                                                  '"?")))
                                             g$ls/false$22190$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22189$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22189$1S&e0X
                                        'any))))
                                  g$t$22184$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22184$1S&e0X
                              '(any any any)))))
                        g$spec$22183$1S&e0X))))
                  (g$get-clause$21964$1S&e0X
                    (case-lambda
                      ((g$id$22174$1S&e0X g$ls$22175$1S&e0X)
                       ((case-lambda
                          ((g$t$22176$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22177$1S&e0X)
                               (if g$ls/false$22177$1S&e0X
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$22177$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22178$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22179$1S&e0X)
                                         (if g$ls/false$22179$1S&e0X
                                           (apply
                                             (case-lambda
                                               ((g$x$22180$1S&e0X
                                                  g$rest$22181$1S&e0X
                                                  g$ls$22182$1S&e0X)
                                                (if (g$free-id=?$20195$1S&e0X
                                                      (g$bless$20652$1S&e0X
                                                        g$id$22174$1S&e0X)
                                                      g$x$22180$1S&e0X)
                                                  (cons
                                                    g$x$22180$1S&e0X
                                                    g$rest$22181$1S&e0X)
                                                  (g$get-clause$21964$1S&e0X
                                                    g$id$22174$1S&e0X
                                                    g$ls$22182$1S&e0X))))
                                             g$ls/false$22179$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22178$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22178$1S&e0X
                                        '((any . any) . any)))))
                                  g$t$22176$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22176$1S&e0X
                              '()))))
                        g$ls$22175$1S&e0X))))
                  (g$foo-rtd-code$21965$1S&e0X
                    (case-lambda
                      ((g$name$22133$1S&e0X
                         g$clause*$22134$1S&e0X
                         g$parent-rtd-code$22135$1S&e0X)
                       (letrec* ((g$convert-field-spec*$22136$1S&e0X
                                   (case-lambda
                                     ((g$ls$22161$1S&e0X)
                                      (g$list->vector$12676$1S&e0X
                                        (g$map$11833$1S&e0X
                                          (case-lambda
                                            ((g$x$22162$1S&e0X)
                                             ((case-lambda
                                                ((g$t$22163$1S&e0X)
                                                 ((case-lambda
                                                    ((g$ls/false$22164$1S&e0X)
                                                     (if g$ls/false$22164$1S&e0X
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$22165$1S&e0X
                                                              g$rest$22166$1S&e0X)
                                                            (list
                                                              'mutable
                                                              g$name$22165$1S&e0X)))
                                                         g$ls/false$22164$1S&e0X)
                                                       ((case-lambda
                                                          ((g$t$22167$1S&e0X)
                                                           ((case-lambda
                                                              ((g$ls/false$22168$1S&e0X)
                                                               (if g$ls/false$22168$1S&e0X
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$22169$1S&e0X
                                                                        g$rest$22170$1S&e0X)
                                                                      (list
                                                                        'immutable
                                                                        g$name$22169$1S&e0X)))
                                                                   g$ls/false$22168$1S&e0X)
                                                                 ((case-lambda
                                                                    ((g$t$22171$1S&e0X)
                                                                     ((case-lambda
                                                                        ((g$ls/false$22172$1S&e0X)
                                                                         (if g$ls/false$22172$1S&e0X
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$22173$1S&e0X)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$22173$1S&e0X)))
                                                                             g$ls/false$22172$1S&e0X)
                                                                           (g$syntax-violation$20808$1S&e0X
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$22171$1S&e0X))))
                                                                      (g$syntax-dispatch$20689$1S&e0X
                                                                        g$t$22171$1S&e0X
                                                                        'any))))
                                                                  g$t$22167$1S&e0X))))
                                                            (g$syntax-dispatch$20689$1S&e0X
                                                              g$t$22167$1S&e0X
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$22163$1S&e0X))))
                                                  (g$syntax-dispatch$20689$1S&e0X
                                                    g$t$22163$1S&e0X
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$22162$1S&e0X)))
                                          g$ls$22161$1S&e0X))))))
                         ((case-lambda
                            ((g$uid-code$22137$1S&e0X
                               g$sealed?$22138$1S&e0X
                               g$opaque?$22139$1S&e0X
                               g$fields$22140$1S&e0X)
                             (g$bless$20652$1S&e0X
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$22133$1S&e0X)
                                 g$parent-rtd-code$22135$1S&e0X
                                 g$uid-code$22137$1S&e0X
                                 g$sealed?$22138$1S&e0X
                                 g$opaque?$22139$1S&e0X
                                 g$fields$22140$1S&e0X))))
                          ((case-lambda
                             ((g$t$22141$1S&e0X)
                              ((case-lambda
                                 ((g$ls/false$22142$1S&e0X)
                                  (if g$ls/false$22142$1S&e0X
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$22142$1S&e0X)
                                    ((case-lambda
                                       ((g$t$22143$1S&e0X)
                                        ((case-lambda
                                           ((g$ls/false$22144$1S&e0X)
                                            (if g$ls/false$22144$1S&e0X
                                              (apply
                                                (case-lambda
                                                  ((g$uid$22145$1S&e0X)
                                                   (list
                                                     'quote
                                                     g$uid$22145$1S&e0X)))
                                                g$ls/false$22144$1S&e0X)
                                              ((case-lambda
                                                 ((g$t$22146$1S&e0X)
                                                  ((case-lambda
                                                     ((g$ls/false$22147$1S&e0X)
                                                      (if g$ls/false$22147$1S&e0X
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$22147$1S&e0X)
                                                        (g$syntax-violation$20808$1S&e0X
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$22146$1S&e0X))))
                                                   (g$syntax-dispatch$20689$1S&e0X
                                                     g$t$22146$1S&e0X
                                                     '_))))
                                               g$t$22143$1S&e0X))))
                                         (g$syntax-dispatch$20689$1S&e0X
                                           g$t$22143$1S&e0X
                                           '(_ any)))))
                                     g$t$22141$1S&e0X))))
                               (g$syntax-dispatch$20689$1S&e0X
                                 g$t$22141$1S&e0X
                                 '(_)))))
                           (g$get-clause$21964$1S&e0X
                             'nongenerative
                             g$clause*$22134$1S&e0X))
                          ((case-lambda
                             ((g$t$22148$1S&e0X)
                              ((case-lambda
                                 ((g$ls/false$22149$1S&e0X)
                                  (if g$ls/false$22149$1S&e0X
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$22149$1S&e0X)
                                    ((case-lambda
                                       ((g$t$22150$1S&e0X)
                                        ((case-lambda
                                           ((g$ls/false$22151$1S&e0X)
                                            (if g$ls/false$22151$1S&e0X
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$22151$1S&e0X)
                                              (g$syntax-violation$20808$1S&e0X
                                                '#f
                                                '"invalid syntax"
                                                g$t$22150$1S&e0X))))
                                         (g$syntax-dispatch$20689$1S&e0X
                                           g$t$22150$1S&e0X
                                           '_))))
                                     g$t$22148$1S&e0X))))
                               (g$syntax-dispatch$20689$1S&e0X
                                 g$t$22148$1S&e0X
                                 '(_ #(atom #t))))))
                           (g$get-clause$21964$1S&e0X
                             'sealed
                             g$clause*$22134$1S&e0X))
                          ((case-lambda
                             ((g$t$22152$1S&e0X)
                              ((case-lambda
                                 ((g$ls/false$22153$1S&e0X)
                                  (if g$ls/false$22153$1S&e0X
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$22153$1S&e0X)
                                    ((case-lambda
                                       ((g$t$22154$1S&e0X)
                                        ((case-lambda
                                           ((g$ls/false$22155$1S&e0X)
                                            (if g$ls/false$22155$1S&e0X
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$22155$1S&e0X)
                                              (g$syntax-violation$20808$1S&e0X
                                                '#f
                                                '"invalid syntax"
                                                g$t$22154$1S&e0X))))
                                         (g$syntax-dispatch$20689$1S&e0X
                                           g$t$22154$1S&e0X
                                           '_))))
                                     g$t$22152$1S&e0X))))
                               (g$syntax-dispatch$20689$1S&e0X
                                 g$t$22152$1S&e0X
                                 '(_ #(atom #t))))))
                           (g$get-clause$21964$1S&e0X
                             'opaque
                             g$clause*$22134$1S&e0X))
                          ((case-lambda
                             ((g$t$22156$1S&e0X)
                              ((case-lambda
                                 ((g$ls/false$22157$1S&e0X)
                                  (if g$ls/false$22157$1S&e0X
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$22158$1S&e0X)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$22136$1S&e0X
                                             g$field-spec*$22158$1S&e0X))))
                                      g$ls/false$22157$1S&e0X)
                                    ((case-lambda
                                       ((g$t$22159$1S&e0X)
                                        ((case-lambda
                                           ((g$ls/false$22160$1S&e0X)
                                            (if g$ls/false$22160$1S&e0X
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$22160$1S&e0X)
                                              (g$syntax-violation$20808$1S&e0X
                                                '#f
                                                '"invalid syntax"
                                                g$t$22159$1S&e0X))))
                                         (g$syntax-dispatch$20689$1S&e0X
                                           g$t$22159$1S&e0X
                                           '_))))
                                     g$t$22156$1S&e0X))))
                               (g$syntax-dispatch$20689$1S&e0X
                                 g$t$22156$1S&e0X
                                 '(_ . each-any)))))
                           (g$get-clause$21964$1S&e0X
                             'fields
                             g$clause*$22134$1S&e0X)))))))
                  (g$parent-rtd-code$21966$1S&e0X
                    (case-lambda
                      ((g$clause*$22121$1S&e0X)
                       ((case-lambda
                          ((g$t$22122$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22123$1S&e0X)
                               (if g$ls/false$22123$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$name$22124$1S&e0X)
                                      (list
                                        'record-type-descriptor
                                        g$name$22124$1S&e0X)))
                                   g$ls/false$22123$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22125$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22126$1S&e0X)
                                         (if g$ls/false$22126$1S&e0X
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$22127$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$22128$1S&e0X)
                                                        (if g$ls/false$22128$1S&e0X
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$22129$1S&e0X
                                                                 g$rcd$22130$1S&e0X)
                                                               g$rtd$22129$1S&e0X))
                                                            g$ls/false$22128$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$22131$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$22132$1S&e0X)
                                                                  (if g$ls/false$22132$1S&e0X
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$22132$1S&e0X)
                                                                    (g$syntax-violation$20808$1S&e0X
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22131$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$22131$1S&e0X
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$22127$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$22127$1S&e0X
                                                       '(_ any any)))))
                                                 (g$get-clause$21964$1S&e0X
                                                   'parent-rtd
                                                   g$clause*$22121$1S&e0X))))
                                             g$ls/false$22126$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22125$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22125$1S&e0X
                                        '#(atom #f)))))
                                  g$t$22122$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22122$1S&e0X
                              '(_ any)))))
                        (g$get-clause$21964$1S&e0X
                          'parent
                          g$clause*$22121$1S&e0X)))))
                  (g$parent-rcd-code$21967$1S&e0X
                    (case-lambda
                      ((g$clause*$22109$1S&e0X)
                       ((case-lambda
                          ((g$t$22110$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22111$1S&e0X)
                               (if g$ls/false$22111$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$name$22112$1S&e0X)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$22112$1S&e0X)))
                                   g$ls/false$22111$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22113$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22114$1S&e0X)
                                         (if g$ls/false$22114$1S&e0X
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$22115$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$22116$1S&e0X)
                                                        (if g$ls/false$22116$1S&e0X
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$22117$1S&e0X
                                                                 g$rcd$22118$1S&e0X)
                                                               g$rcd$22118$1S&e0X))
                                                            g$ls/false$22116$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$22119$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$22120$1S&e0X)
                                                                  (if g$ls/false$22120$1S&e0X
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$22120$1S&e0X)
                                                                    (g$syntax-violation$20808$1S&e0X
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22119$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$22119$1S&e0X
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$22115$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$22115$1S&e0X
                                                       '(_ any any)))))
                                                 (g$get-clause$21964$1S&e0X
                                                   'parent-rtd
                                                   g$clause*$22109$1S&e0X))))
                                             g$ls/false$22114$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22113$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22113$1S&e0X
                                        '#(atom #f)))))
                                  g$t$22110$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22110$1S&e0X
                              '(_ any)))))
                        (g$get-clause$21964$1S&e0X
                          'parent
                          g$clause*$22109$1S&e0X)))))
                  (g$foo-rcd-code$21968$1S&e0X
                    (case-lambda
                      ((g$clause*$22105$1S&e0X
                         g$foo-rtd$22106$1S&e0X
                         g$protocol$22107$1S&e0X
                         g$parent-rcd-code$22108$1S&e0X)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$22106$1S&e0X
                         g$parent-rcd-code$22108$1S&e0X
                         g$protocol$22107$1S&e0X))))
                  (g$get-protocol-code$21969$1S&e0X
                    (case-lambda
                      ((g$clause*$22099$1S&e0X)
                       ((case-lambda
                          ((g$t$22100$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22101$1S&e0X)
                               (if g$ls/false$22101$1S&e0X
                                 (apply
                                   (case-lambda
                                     ((g$expr$22102$1S&e0X)
                                      g$expr$22102$1S&e0X))
                                   g$ls/false$22101$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22103$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22104$1S&e0X)
                                         (if g$ls/false$22104$1S&e0X
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$22104$1S&e0X)
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$t$22103$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22103$1S&e0X
                                        '_))))
                                  g$t$22100$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22100$1S&e0X
                              '(_ any)))))
                        (g$get-clause$21964$1S&e0X
                          'protocol
                          g$clause*$22099$1S&e0X)))))
                  (g$get-fields$21970$1S&e0X
                    (case-lambda
                      ((g$clause*$22090$1S&e0X)
                       ((case-lambda
                          ((g$t$22091$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22092$1S&e0X)
                               (if g$ls/false$22092$1S&e0X
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$22092$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22093$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22094$1S&e0X)
                                         (if g$ls/false$22094$1S&e0X
                                           (apply
                                             (case-lambda
                                               ((g$f*$22095$1S&e0X)
                                                g$f*$22095$1S&e0X))
                                             g$ls/false$22094$1S&e0X)
                                           ((case-lambda
                                              ((g$t$22096$1S&e0X)
                                               ((case-lambda
                                                  ((g$ls/false$22097$1S&e0X)
                                                   (if g$ls/false$22097$1S&e0X
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$22098$1S&e0X)
                                                          (g$get-fields$21970$1S&e0X
                                                            g$rest$22098$1S&e0X)))
                                                       g$ls/false$22097$1S&e0X)
                                                     (g$syntax-violation$20808$1S&e0X
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22096$1S&e0X))))
                                                (g$syntax-dispatch$20689$1S&e0X
                                                  g$t$22096$1S&e0X
                                                  '(_ . any)))))
                                            g$t$22093$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22093$1S&e0X
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$22091$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22091$1S&e0X
                              '()))))
                        g$clause*$22090$1S&e0X))))
                  (g$get-mutator-indices$21971$1S&e0X
                    (case-lambda
                      ((g$fields$22078$1S&e0X)
                       ((letrec ((g$f$22079$1S&e0X
                                   (case-lambda
                                     ((g$fields$22080$1S&e0X
                                        g$i$22081$1S&e0X)
                                      ((case-lambda
                                         ((g$t$22082$1S&e0X)
                                          ((case-lambda
                                             ((g$ls/false$22083$1S&e0X)
                                              (if g$ls/false$22083$1S&e0X
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$22083$1S&e0X)
                                                ((case-lambda
                                                   ((g$t$22084$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$22085$1S&e0X)
                                                        (if g$ls/false$22085$1S&e0X
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$22086$1S&e0X)
                                                               (cons
                                                                 g$i$22081$1S&e0X
                                                                 (g$f$22079$1S&e0X
                                                                   g$rest$22086$1S&e0X
                                                                   (+ g$i$22081$1S&e0X
                                                                      '1)))))
                                                            g$ls/false$22085$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$22087$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$22088$1S&e0X)
                                                                  (if g$ls/false$22088$1S&e0X
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$22089$1S&e0X)
                                                                         (g$f$22079$1S&e0X
                                                                           g$rest$22089$1S&e0X
                                                                           (+ g$i$22081$1S&e0X
                                                                              '1))))
                                                                      g$ls/false$22088$1S&e0X)
                                                                    (g$syntax-violation$20808$1S&e0X
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22087$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$22087$1S&e0X
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$22084$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$22084$1S&e0X
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$22082$1S&e0X))))
                                           (g$syntax-dispatch$20689$1S&e0X
                                             g$t$22082$1S&e0X
                                             '()))))
                                       g$fields$22080$1S&e0X)))))
                          g$f$22079$1S&e0X)
                        g$fields$22078$1S&e0X
                        '0))))
                  (g$get-mutators$21972$1S&e0X
                    (case-lambda
                      ((g$foo$22057$1S&e0X g$fields$22058$1S&e0X)
                       (letrec* ((g$gen-name$22059$1S&e0X
                                   (case-lambda
                                     ((g$x$22077$1S&e0X)
                                      (g$datum->syntax$20810$1S&e0X
                                        g$foo$22057$1S&e0X
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$20811$1S&e0X
                                                g$foo$22057$1S&e0X))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$20811$1S&e0X
                                                g$x$22077$1S&e0X))
                                            '"-set!")))))))
                         ((letrec ((g$f$22060$1S&e0X
                                     (case-lambda
                                       ((g$fields$22061$1S&e0X)
                                        ((case-lambda
                                           ((g$t$22062$1S&e0X)
                                            ((case-lambda
                                               ((g$ls/false$22063$1S&e0X)
                                                (if g$ls/false$22063$1S&e0X
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$22063$1S&e0X)
                                                  ((case-lambda
                                                     ((g$t$22064$1S&e0X)
                                                      ((case-lambda
                                                         ((g$ls/false$22065$1S&e0X)
                                                          (if g$ls/false$22065$1S&e0X
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$22066$1S&e0X
                                                                   g$accessor$22067$1S&e0X
                                                                   g$mutator$22068$1S&e0X
                                                                   g$rest$22069$1S&e0X)
                                                                 (cons
                                                                   g$mutator$22068$1S&e0X
                                                                   (g$f$22060$1S&e0X
                                                                     g$rest$22069$1S&e0X))))
                                                              g$ls/false$22065$1S&e0X)
                                                            ((case-lambda
                                                               ((g$t$22070$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$ls/false$22071$1S&e0X)
                                                                    (if g$ls/false$22071$1S&e0X
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$22072$1S&e0X
                                                                             g$rest$22073$1S&e0X)
                                                                           (cons
                                                                             (g$gen-name$22059$1S&e0X
                                                                               g$name$22072$1S&e0X)
                                                                             (g$f$22060$1S&e0X
                                                                               g$rest$22073$1S&e0X))))
                                                                        g$ls/false$22071$1S&e0X)
                                                                      ((case-lambda
                                                                         ((g$t$22074$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$ls/false$22075$1S&e0X)
                                                                              (if g$ls/false$22075$1S&e0X
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$22076$1S&e0X)
                                                                                     (g$f$22060$1S&e0X
                                                                                       g$rest$22076$1S&e0X)))
                                                                                  g$ls/false$22075$1S&e0X)
                                                                                (g$syntax-violation$20808$1S&e0X
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$22074$1S&e0X))))
                                                                           (g$syntax-dispatch$20689$1S&e0X
                                                                             g$t$22074$1S&e0X
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$22070$1S&e0X))))
                                                                 (g$syntax-dispatch$20689$1S&e0X
                                                                   g$t$22070$1S&e0X
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$22064$1S&e0X))))
                                                       (g$syntax-dispatch$20689$1S&e0X
                                                         g$t$22064$1S&e0X
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$22062$1S&e0X))))
                                             (g$syntax-dispatch$20689$1S&e0X
                                               g$t$22062$1S&e0X
                                               '()))))
                                         g$fields$22061$1S&e0X)))))
                            g$f$22060$1S&e0X)
                          g$fields$22058$1S&e0X)))))
                  (g$get-accessors$21973$1S&e0X
                    (case-lambda
                      ((g$foo$22023$1S&e0X g$fields$22024$1S&e0X)
                       (letrec* ((g$gen-name$22025$1S&e0X
                                   (case-lambda
                                     ((g$x$22056$1S&e0X)
                                      (g$datum->syntax$20810$1S&e0X
                                        g$foo$22023$1S&e0X
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$20811$1S&e0X
                                                g$foo$22023$1S&e0X))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$20811$1S&e0X
                                                g$x$22056$1S&e0X)))))))))
                         (g$map$11833$1S&e0X
                           (case-lambda
                             ((g$field$22026$1S&e0X)
                              ((case-lambda
                                 ((g$t$22027$1S&e0X)
                                  ((case-lambda
                                     ((g$ls/false$22028$1S&e0X)
                                      (if (if g$ls/false$22028$1S&e0X
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$22029$1S&e0X
                                                     g$accessor$22030$1S&e0X
                                                     g$mutator$22031$1S&e0X)
                                                   (g$id?$20191$1S&e0X
                                                     g$accessor$22030$1S&e0X)))
                                                g$ls/false$22028$1S&e0X))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$22032$1S&e0X
                                               g$accessor$22033$1S&e0X
                                               g$mutator$22034$1S&e0X)
                                             g$accessor$22033$1S&e0X))
                                          g$ls/false$22028$1S&e0X)
                                        ((case-lambda
                                           ((g$t$22035$1S&e0X)
                                            ((case-lambda
                                               ((g$ls/false$22036$1S&e0X)
                                                (if (if g$ls/false$22036$1S&e0X
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$22037$1S&e0X
                                                               g$accessor$22038$1S&e0X)
                                                             (g$id?$20191$1S&e0X
                                                               g$accessor$22038$1S&e0X)))
                                                          g$ls/false$22036$1S&e0X))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$22039$1S&e0X
                                                         g$accessor$22040$1S&e0X)
                                                       g$accessor$22040$1S&e0X))
                                                    g$ls/false$22036$1S&e0X)
                                                  ((case-lambda
                                                     ((g$t$22041$1S&e0X)
                                                      ((case-lambda
                                                         ((g$ls/false$22042$1S&e0X)
                                                          (if (if g$ls/false$22042$1S&e0X
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$22043$1S&e0X)
                                                                       (g$id?$20191$1S&e0X
                                                                         g$name$22043$1S&e0X)))
                                                                    g$ls/false$22042$1S&e0X))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$22044$1S&e0X)
                                                                 (g$gen-name$22025$1S&e0X
                                                                   g$name$22044$1S&e0X)))
                                                              g$ls/false$22042$1S&e0X)
                                                            ((case-lambda
                                                               ((g$t$22045$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$ls/false$22046$1S&e0X)
                                                                    (if (if g$ls/false$22046$1S&e0X
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$22047$1S&e0X)
                                                                                 (g$id?$20191$1S&e0X
                                                                                   g$name$22047$1S&e0X)))
                                                                              g$ls/false$22046$1S&e0X))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$22048$1S&e0X)
                                                                           (g$gen-name$22025$1S&e0X
                                                                             g$name$22048$1S&e0X)))
                                                                        g$ls/false$22046$1S&e0X)
                                                                      ((case-lambda
                                                                         ((g$t$22049$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$ls/false$22050$1S&e0X)
                                                                              (if (if g$ls/false$22050$1S&e0X
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$22051$1S&e0X)
                                                                                           (g$id?$20191$1S&e0X
                                                                                             g$name$22051$1S&e0X)))
                                                                                        g$ls/false$22050$1S&e0X))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$22052$1S&e0X)
                                                                                     (g$gen-name$22025$1S&e0X
                                                                                       g$name$22052$1S&e0X)))
                                                                                  g$ls/false$22050$1S&e0X)
                                                                                ((case-lambda
                                                                                   ((g$t$22053$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$22054$1S&e0X)
                                                                                        (if g$ls/false$22054$1S&e0X
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$22055$1S&e0X)
                                                                                               (g$syntax-violation$20808$1S&e0X
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$22026$1S&e0X)))
                                                                                            g$ls/false$22054$1S&e0X)
                                                                                          (g$syntax-violation$20808$1S&e0X
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$22053$1S&e0X))))
                                                                                     (g$syntax-dispatch$20689$1S&e0X
                                                                                       g$t$22053$1S&e0X
                                                                                       'any))))
                                                                                 g$t$22049$1S&e0X))))
                                                                           (g$syntax-dispatch$20689$1S&e0X
                                                                             g$t$22049$1S&e0X
                                                                             'any))))
                                                                       g$t$22045$1S&e0X))))
                                                                 (g$syntax-dispatch$20689$1S&e0X
                                                                   g$t$22045$1S&e0X
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$22041$1S&e0X))))
                                                       (g$syntax-dispatch$20689$1S&e0X
                                                         g$t$22041$1S&e0X
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$22035$1S&e0X))))
                                             (g$syntax-dispatch$20689$1S&e0X
                                               g$t$22035$1S&e0X
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$22027$1S&e0X))))
                                   (g$syntax-dispatch$20689$1S&e0X
                                     g$t$22027$1S&e0X
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$22026$1S&e0X)))
                           g$fields$22024$1S&e0X)))))
                  (g$enumerate$21974$1S&e0X
                    (case-lambda
                      ((g$ls$22019$1S&e0X)
                       ((letrec ((g$f$22020$1S&e0X
                                   (case-lambda
                                     ((g$ls$22021$1S&e0X
                                        g$i$22022$1S&e0X)
                                      (if (null? g$ls$22021$1S&e0X)
                                        '()
                                        (begin
                                          '#f
                                          (cons
                                            g$i$22022$1S&e0X
                                            (g$f$22020$1S&e0X
                                              (cdr g$ls$22021$1S&e0X)
                                              (+ g$i$22022$1S&e0X
                                                 '1)))))))))
                          g$f$22020$1S&e0X)
                        g$ls$22019$1S&e0X
                        '0))))
                  (g$do-define-record$21975$1S&e0X
                    (case-lambda
                      ((g$namespec$21999$1S&e0X g$clause*$22000$1S&e0X)
                       ((case-lambda
                          ((g$foo$22001$1S&e0X)
                           ((case-lambda
                              ((g$foo-rtd$22002$1S&e0X)
                               ((case-lambda
                                  ((g$foo-rcd$22003$1S&e0X)
                                   ((case-lambda
                                      ((g$protocol$22004$1S&e0X)
                                       ((case-lambda
                                          ((g$make-foo$22005$1S&e0X)
                                           ((case-lambda
                                              ((g$fields$22006$1S&e0X)
                                               ((case-lambda
                                                  ((g$idx*$22007$1S&e0X)
                                                   ((case-lambda
                                                      ((g$foo-x*$22008$1S&e0X)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$22009$1S&e0X)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$22010$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$foo?$22011$1S&e0X)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$22012$1S&e0X)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$22013$1S&e0X)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$22014$1S&e0X)
                                                                               (g$bless$20652$1S&e0X
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$22002$1S&e0X
                                                                                       g$foo-rtd-code$22012$1S&e0X)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$22004$1S&e0X
                                                                                         g$protocol-code$22014$1S&e0X)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$22003$1S&e0X
                                                                                           g$foo-rcd-code$22013$1S&e0X)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$22001$1S&e0X
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$22002$1S&e0X)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$22003$1S&e0X)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$22011$1S&e0X
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$22002$1S&e0X))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$22005$1S&e0X
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$22003$1S&e0X))
                                                                                               (append
                                                                                                 (g$map$11833$1S&e0X
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$22015$1S&e0X
                                                                                                        g$idx$22016$1S&e0X)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$22015$1S&e0X
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$22002$1S&e0X
                                                                                                          g$idx$22016$1S&e0X))))
                                                                                                   g$foo-x*$22008$1S&e0X
                                                                                                   g$idx*$22007$1S&e0X)
                                                                                                 (g$map$11833$1S&e0X
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$22017$1S&e0X
                                                                                                        g$idx$22018$1S&e0X)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$22017$1S&e0X
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$22002$1S&e0X
                                                                                                          g$idx$22018$1S&e0X))))
                                                                                                   g$set-foo-x!*$22009$1S&e0X
                                                                                                   g$set-foo-idx*$22010$1S&e0X))))))))))))
                                                                            (g$get-protocol-code$21969$1S&e0X
                                                                              g$clause*$22000$1S&e0X))))
                                                                        (g$foo-rcd-code$21968$1S&e0X
                                                                          g$clause*$22000$1S&e0X
                                                                          g$foo-rtd$22002$1S&e0X
                                                                          g$protocol$22004$1S&e0X
                                                                          (g$parent-rcd-code$21967$1S&e0X
                                                                            g$clause*$22000$1S&e0X)))))
                                                                    (g$foo-rtd-code$21965$1S&e0X
                                                                      g$foo$22001$1S&e0X
                                                                      g$clause*$22000$1S&e0X
                                                                      (g$parent-rtd-code$21966$1S&e0X
                                                                        g$clause*$22000$1S&e0X)))))
                                                                (g$get-record-predicate-name$21963$1S&e0X
                                                                  g$namespec$21999$1S&e0X))))
                                                            (g$get-mutator-indices$21971$1S&e0X
                                                              g$fields$22006$1S&e0X))))
                                                        (g$get-mutators$21972$1S&e0X
                                                          g$foo$22001$1S&e0X
                                                          g$fields$22006$1S&e0X))))
                                                    (g$get-accessors$21973$1S&e0X
                                                      g$foo$22001$1S&e0X
                                                      g$fields$22006$1S&e0X))))
                                                (g$enumerate$21974$1S&e0X
                                                  g$fields$22006$1S&e0X))))
                                            (g$get-fields$21970$1S&e0X
                                              g$clause*$22000$1S&e0X))))
                                        (g$get-record-constructor-name$21962$1S&e0X
                                          g$namespec$21999$1S&e0X))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$21961$1S&e0X
                          g$namespec$21999$1S&e0X)))))
                  (g$verify-clauses$21976$1S&e0X
                    (case-lambda
                      ((g$x$21981$1S&e0X g$cls*$21982$1S&e0X)
                       (letrec* ((g$valid-kwds$21983$1S&e0X
                                   (g$map$11833$1S&e0X
                                     g$bless$20652$1S&e0X
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$21984$1S&e0X
                                   (case-lambda
                                     ((g$x$21996$1S&e0X
                                        g$ls$21997$1S&e0X)
                                      (if (pair? g$ls$21997$1S&e0X)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$21998$1S&e0X)
                                              (if g$t$21998$1S&e0X
                                                g$t$21998$1S&e0X
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$21984$1S&e0X
                                                    g$x$21996$1S&e0X
                                                    (cdr g$ls$21997$1S&e0X))))))
                                           (g$free-id=?$20195$1S&e0X
                                             g$x$21996$1S&e0X
                                             (car g$ls$21997$1S&e0X))))
                                        '#f)))))
                         ((letrec ((g$f$21985$1S&e0X
                                     (case-lambda
                                       ((g$cls*$21986$1S&e0X
                                          g$seen*$21987$1S&e0X)
                                        (if (not (null?
                                                   g$cls*$21986$1S&e0X))
                                          ((case-lambda
                                             ((g$t$21988$1S&e0X)
                                              ((case-lambda
                                                 ((g$ls/false$21989$1S&e0X)
                                                  (if g$ls/false$21989$1S&e0X
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$21990$1S&e0X
                                                           g$rest$21991$1S&e0X)
                                                         (if ((case-lambda
                                                                ((g$t$21992$1S&e0X)
                                                                 (if g$t$21992$1S&e0X
                                                                   g$t$21992$1S&e0X
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$21984$1S&e0X
                                                                            g$kwd$21990$1S&e0X
                                                                            g$valid-kwds$21983$1S&e0X))))))
                                                              (not (g$id?$20191$1S&e0X
                                                                     g$kwd$21990$1S&e0X)))
                                                           (g$syntax-violation$20808$1S&e0X
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$21990$1S&e0X)
                                                           (if (g$bound-id-member?$20198$1S&e0X
                                                                 g$kwd$21990$1S&e0X
                                                                 g$seen*$21987$1S&e0X)
                                                             (g$syntax-violation$20808$1S&e0X
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$21981$1S&e0X
                                                               g$kwd$21990$1S&e0X)
                                                             (begin
                                                               '#f
                                                               (g$f$21985$1S&e0X
                                                                 (cdr g$cls*$21986$1S&e0X)
                                                                 (cons
                                                                   g$kwd$21990$1S&e0X
                                                                   g$seen*$21987$1S&e0X)))))))
                                                      g$ls/false$21989$1S&e0X)
                                                    ((case-lambda
                                                       ((g$t$21993$1S&e0X)
                                                        ((case-lambda
                                                           ((g$ls/false$21994$1S&e0X)
                                                            (if g$ls/false$21994$1S&e0X
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$21995$1S&e0X)
                                                                   (g$syntax-violation$20808$1S&e0X
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$21995$1S&e0X)))
                                                                g$ls/false$21994$1S&e0X)
                                                              (g$syntax-violation$20808$1S&e0X
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21993$1S&e0X))))
                                                         (g$syntax-dispatch$20689$1S&e0X
                                                           g$t$21993$1S&e0X
                                                           'any))))
                                                     g$t$21988$1S&e0X))))
                                               (g$syntax-dispatch$20689$1S&e0X
                                                 g$t$21988$1S&e0X
                                                 '(any . any)))))
                                           (car g$cls*$21986$1S&e0X))
                                          (void))))))
                            g$f$21985$1S&e0X)
                          g$cls*$21982$1S&e0X
                          '()))))))
          ((case-lambda
             ((g$t$21977$1S&e0X)
              ((case-lambda
                 ((g$ls/false$21978$1S&e0X)
                  (if g$ls/false$21978$1S&e0X
                    (apply
                      (case-lambda
                        ((g$namespec$21979$1S&e0X
                           g$clause*$21980$1S&e0X)
                         (begin
                           (g$verify-clauses$21976$1S&e0X
                             g$x$21959$1S&e0X
                             g$clause*$21980$1S&e0X)
                           (g$do-define-record$21975$1S&e0X
                             g$namespec$21979$1S&e0X
                             g$clause*$21980$1S&e0X))))
                      g$ls/false$21978$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$21977$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$21977$1S&e0X
                 '(_ any . each-any)))))
           g$x$21959$1S&e0X)))))
   (g$define-condition-type-macro$20684$1S&e0X
     g$define-condition-type-macro$24279$1S&e0X
     (case-lambda
       ((g$x$22215$1S&e0X)
        (letrec* ((g$mkname$22216$1S&e0X
                    (case-lambda
                      ((g$name$22239$1S&e0X g$suffix$22240$1S&e0X)
                       (g$datum->syntax$20810$1S&e0X
                         g$name$22239$1S&e0X
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$20811$1S&e0X
                                 g$name$22239$1S&e0X))
                             g$suffix$22240$1S&e0X)))))))
          ((case-lambda
             ((g$t$22217$1S&e0X)
              ((case-lambda
                 ((g$ls/false$22218$1S&e0X)
                  (if (if g$ls/false$22218$1S&e0X
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$22219$1S&e0X
                                 g$name$22220$1S&e0X
                                 g$super$22221$1S&e0X
                                 g$constructor$22222$1S&e0X
                                 g$predicate$22223$1S&e0X
                                 g$field*$22224$1S&e0X
                                 g$accessor*$22225$1S&e0X)
                               (if (g$id?$20191$1S&e0X
                                     g$name$22220$1S&e0X)
                                 (if (g$id?$20191$1S&e0X
                                       g$super$22221$1S&e0X)
                                   (if (g$id?$20191$1S&e0X
                                         g$constructor$22222$1S&e0X)
                                     (if (g$id?$20191$1S&e0X
                                           g$predicate$22223$1S&e0X)
                                       (if (g$for-all$11831$1S&e0X
                                             g$id?$20191$1S&e0X
                                             g$field*$22224$1S&e0X)
                                         (begin
                                           '#f
                                           (g$for-all$11831$1S&e0X
                                             g$id?$20191$1S&e0X
                                             g$accessor*$22225$1S&e0X))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$22218$1S&e0X))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$22226$1S&e0X
                           g$name$22227$1S&e0X
                           g$super$22228$1S&e0X
                           g$constructor$22229$1S&e0X
                           g$predicate$22230$1S&e0X
                           g$field*$22231$1S&e0X
                           g$accessor*$22232$1S&e0X)
                         ((case-lambda
                            ((g$aux-accessor*$22233$1S&e0X)
                             (g$bless$20652$1S&e0X
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$22227$1S&e0X
                                         g$constructor$22229$1S&e0X
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$22228$1S&e0X)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$11833$1S&e0X
                                               (case-lambda
                                                 ((g$field$22234$1S&e0X
                                                    g$aux$22235$1S&e0X)
                                                  (list
                                                    'immutable
                                                    g$field$22234$1S&e0X
                                                    g$aux$22235$1S&e0X)))
                                               g$field*$22231$1S&e0X
                                               g$aux-accessor*$22233$1S&e0X))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$22230$1S&e0X
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$22227$1S&e0X)))
                                     (g$map$11833$1S&e0X
                                       (case-lambda
                                         ((g$accessor$22236$1S&e0X
                                            g$aux$22237$1S&e0X)
                                          (list
                                            'define
                                            g$accessor$22236$1S&e0X
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$22227$1S&e0X)
                                              g$aux$22237$1S&e0X))))
                                       g$accessor*$22232$1S&e0X
                                       g$aux-accessor*$22233$1S&e0X)))))))
                          (g$map$11833$1S&e0X
                            (case-lambda ((g$x$22238$1S&e0X) (gensym)))
                            g$accessor*$22232$1S&e0X))))
                      g$ls/false$22218$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$22217$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$22217$1S&e0X
                 '(any any any any any . #(each (any any)))))))
           g$x$22215$1S&e0X)))))
   (g$incorrect-usage-macro$20685$1S&e0X
     g$incorrect-usage-macro$24280$1S&e0X
     (case-lambda
       ((g$e$22241$1S&e0X)
        (g$syntax-violation$20808$1S&e0X
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$22241$1S&e0X))))
   (g$parameterize-macro$20686$1S&e0X
     g$parameterize-macro$24281$1S&e0X
     (case-lambda
       ((g$e$22242$1S&e0X)
        ((case-lambda
           ((g$t$22243$1S&e0X)
            ((case-lambda
               ((g$ls/false$22244$1S&e0X)
                (if g$ls/false$22244$1S&e0X
                  (apply
                    (case-lambda
                      ((g$b$22245$1S&e0X g$b*$22246$1S&e0X)
                       (g$bless$20652$1S&e0X
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$22245$1S&e0X
                               g$b*$22246$1S&e0X))))))
                    g$ls/false$22244$1S&e0X)
                  ((case-lambda
                     ((g$t$22247$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$22248$1S&e0X)
                          (if g$ls/false$22248$1S&e0X
                            (apply
                              (case-lambda
                                ((g$olhs*$22249$1S&e0X
                                   g$orhs*$22250$1S&e0X
                                   g$b$22251$1S&e0X
                                   g$b*$22252$1S&e0X)
                                 ((case-lambda
                                    ((g$lhs*$22253$1S&e0X
                                       g$rhs*$22254$1S&e0X)
                                     (g$bless$20652$1S&e0X
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$22253$1S&e0X
                                             g$rhs*$22254$1S&e0X)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$11833$1S&e0X
                                                       (case-lambda
                                                         ((g$lhs$22255$1S&e0X
                                                            g$rhs$22256$1S&e0X)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$22255$1S&e0X)))
                                                            (list
                                                              g$lhs$22255$1S&e0X
                                                              g$rhs$22256$1S&e0X)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$22256$1S&e0X
                                                                '(t))))))
                                                       g$lhs*$22253$1S&e0X
                                                       g$rhs*$22254$1S&e0X)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$22251$1S&e0X
                                                         g$b*$22252$1S&e0X)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$22249$1S&e0X
                                           g$orhs*$22250$1S&e0X)))))
                                  (g$generate-temporaries$20798$1S&e0X
                                    g$olhs*$22249$1S&e0X)
                                  (g$generate-temporaries$20798$1S&e0X
                                    g$orhs*$22250$1S&e0X))))
                              g$ls/false$22248$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$22247$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$22247$1S&e0X
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$22243$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22243$1S&e0X
               '(_ () any . each-any)))))
         g$e$22242$1S&e0X))))
   (g$foreign-call-transformer$20687$1S&e0X
     g$foreign-call-transformer$24282$1S&e0X
     (case-lambda
       ((g$e$22257$1S&e0X g$r$22258$1S&e0X g$mr$22259$1S&e0X)
        ((case-lambda
           ((g$t$22260$1S&e0X)
            ((case-lambda
               ((g$ls/false$22261$1S&e0X)
                (if g$ls/false$22261$1S&e0X
                  (apply
                    (case-lambda
                      ((g$name$22262$1S&e0X g$arg*$22263$1S&e0X)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$20707$1S&e0X
                             g$name$22262$1S&e0X
                             g$r$22258$1S&e0X
                             g$mr$22259$1S&e0X)
                           (g$chi-expr*$20705$1S&e0X
                             g$arg*$22263$1S&e0X
                             g$r$22258$1S&e0X
                             g$mr$22259$1S&e0X)))))
                    g$ls/false$22261$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$22260$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22260$1S&e0X
               '(_ any . each-any)))))
         g$e$22257$1S&e0X))))
   (g$convert-pattern$20688$1S&e0X
     g$convert-pattern$24283$1S&e0X
     (case-lambda
       ((g$pattern$22264$1S&e0X g$keys$22265$1S&e0X)
        (letrec* ((g$cvt*$22266$1S&e0X
                    (case-lambda
                      ((g$p*$22346$1S&e0X
                         g$n$22347$1S&e0X
                         g$ids$22348$1S&e0X)
                       (if (null? g$p*$22346$1S&e0X)
                         (values '() g$ids$22348$1S&e0X)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$22266$1S&e0X
                                (cdr g$p*$22346$1S&e0X)
                                g$n$22347$1S&e0X
                                g$ids$22348$1S&e0X)))
                           (case-lambda
                             ((g$y$22351$1S&e0X g$ids$22352$1S&e0X)
                              ((case-lambda
                                 ((g$ids$22353$1S&e0X g$y$22354$1S&e0X)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$22267$1S&e0X
                                         (car g$p*$22346$1S&e0X)
                                         g$n$22347$1S&e0X
                                         g$ids$22353$1S&e0X)))
                                    (case-lambda
                                      ((g$x$22357$1S&e0X
                                         g$ids$22358$1S&e0X)
                                       ((case-lambda
                                          ((g$ids$22359$1S&e0X
                                             g$x$22360$1S&e0X)
                                           (values
                                             (cons
                                               g$x$22360$1S&e0X
                                               g$y$22354$1S&e0X)
                                             g$ids$22359$1S&e0X)))
                                        g$ids$22358$1S&e0X
                                        g$x$22357$1S&e0X))))))
                               g$ids$22352$1S&e0X
                               g$y$22351$1S&e0X))))))))
                  (g$cvt$22267$1S&e0X
                    (case-lambda
                      ((g$p$22268$1S&e0X
                         g$n$22269$1S&e0X
                         g$ids$22270$1S&e0X)
                       ((case-lambda
                          ((g$t$22271$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$22272$1S&e0X)
                               (if (if g$ls/false$22272$1S&e0X
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$22273$1S&e0X)
                                            (g$id?$20191$1S&e0X
                                              g$id$22273$1S&e0X)))
                                         g$ls/false$22272$1S&e0X))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$22274$1S&e0X)
                                      (if (g$bound-id-member?$20198$1S&e0X
                                            g$p$22268$1S&e0X
                                            g$keys$22265$1S&e0X)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$22268$1S&e0X)
                                          g$ids$22270$1S&e0X)
                                        (if (g$free-id=?$20195$1S&e0X
                                              g$p$22268$1S&e0X
                                              (g$scheme-stx$20632$1S&e0X
                                                '_))
                                          (values '_ g$ids$22270$1S&e0X)
                                          (begin
                                            '#f
                                            (values
                                              'any
                                              (cons
                                                (cons
                                                  g$p$22268$1S&e0X
                                                  g$n$22269$1S&e0X)
                                                g$ids$22270$1S&e0X)))))))
                                   g$ls/false$22272$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22275$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$22276$1S&e0X)
                                         (if (if g$ls/false$22276$1S&e0X
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$22277$1S&e0X
                                                        g$dots$22278$1S&e0X)
                                                      (g$ellipsis?$20690$1S&e0X
                                                        g$dots$22278$1S&e0X)))
                                                   g$ls/false$22276$1S&e0X))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$22279$1S&e0X
                                                  g$dots$22280$1S&e0X)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$22267$1S&e0X
                                                       g$p$22279$1S&e0X
                                                       (+ g$n$22269$1S&e0X
                                                          '1)
                                                       g$ids$22270$1S&e0X)))
                                                  (case-lambda
                                                    ((g$p$22283$1S&e0X
                                                       g$ids$22284$1S&e0X)
                                                     ((case-lambda
                                                        ((g$ids$22285$1S&e0X
                                                           g$p$22286$1S&e0X)
                                                         (values
                                                           (if (eq? g$p$22286$1S&e0X
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$22286$1S&e0X))
                                                           g$ids$22285$1S&e0X)))
                                                      g$ids$22284$1S&e0X
                                                      g$p$22283$1S&e0X))))))
                                             g$ls/false$22276$1S&e0X)
                                           ((case-lambda
                                              ((g$t$22287$1S&e0X)
                                               ((case-lambda
                                                  ((g$ls/false$22288$1S&e0X)
                                                   (if (if g$ls/false$22288$1S&e0X
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$22289$1S&e0X
                                                                  g$dots$22290$1S&e0X
                                                                  g$ys$22291$1S&e0X
                                                                  g$z$22292$1S&e0X)
                                                                (g$ellipsis?$20690$1S&e0X
                                                                  g$dots$22290$1S&e0X)))
                                                             g$ls/false$22288$1S&e0X))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$22293$1S&e0X
                                                            g$dots$22294$1S&e0X
                                                            g$ys$22295$1S&e0X
                                                            g$z$22296$1S&e0X)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$22267$1S&e0X
                                                                 g$z$22296$1S&e0X
                                                                 g$n$22269$1S&e0X
                                                                 g$ids$22270$1S&e0X)))
                                                            (case-lambda
                                                              ((g$z$22299$1S&e0X
                                                                 g$ids$22300$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$ids$22301$1S&e0X
                                                                     g$z$22302$1S&e0X)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$22266$1S&e0X
                                                                          g$ys$22295$1S&e0X
                                                                          g$n$22269$1S&e0X
                                                                          g$ids$22301$1S&e0X)))
                                                                     (case-lambda
                                                                       ((g$ys$22305$1S&e0X
                                                                          g$ids$22306$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$ids$22307$1S&e0X
                                                                              g$ys$22308$1S&e0X)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$22267$1S&e0X
                                                                                   g$x$22293$1S&e0X
                                                                                   (+ g$n$22269$1S&e0X
                                                                                      '1)
                                                                                   g$ids$22307$1S&e0X)))
                                                                              (case-lambda
                                                                                ((g$x$22311$1S&e0X
                                                                                   g$ids$22312$1S&e0X)
                                                                                 ((case-lambda
                                                                                    ((g$ids$22313$1S&e0X
                                                                                       g$x$22314$1S&e0X)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$22314$1S&e0X
                                                                                         (g$reverse$12682$1S&e0X
                                                                                           g$ys$22308$1S&e0X)
                                                                                         g$z$22302$1S&e0X)
                                                                                       g$ids$22313$1S&e0X)))
                                                                                  g$ids$22312$1S&e0X
                                                                                  g$x$22311$1S&e0X))))))
                                                                         g$ids$22306$1S&e0X
                                                                         g$ys$22305$1S&e0X))))))
                                                                g$ids$22300$1S&e0X
                                                                g$z$22299$1S&e0X))))))
                                                       g$ls/false$22288$1S&e0X)
                                                     ((case-lambda
                                                        ((g$t$22315$1S&e0X)
                                                         ((case-lambda
                                                            ((g$ls/false$22316$1S&e0X)
                                                             (if g$ls/false$22316$1S&e0X
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$22317$1S&e0X
                                                                      g$y$22318$1S&e0X)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$22267$1S&e0X
                                                                           g$y$22318$1S&e0X
                                                                           g$n$22269$1S&e0X
                                                                           g$ids$22270$1S&e0X)))
                                                                      (case-lambda
                                                                        ((g$y$22321$1S&e0X
                                                                           g$ids$22322$1S&e0X)
                                                                         ((case-lambda
                                                                            ((g$ids$22323$1S&e0X
                                                                               g$y$22324$1S&e0X)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$22267$1S&e0X
                                                                                    g$x$22317$1S&e0X
                                                                                    g$n$22269$1S&e0X
                                                                                    g$ids$22323$1S&e0X)))
                                                                               (case-lambda
                                                                                 ((g$x$22327$1S&e0X
                                                                                    g$ids$22328$1S&e0X)
                                                                                  ((case-lambda
                                                                                     ((g$ids$22329$1S&e0X
                                                                                        g$x$22330$1S&e0X)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$22330$1S&e0X
                                                                                          g$y$22324$1S&e0X)
                                                                                        g$ids$22329$1S&e0X)))
                                                                                   g$ids$22328$1S&e0X
                                                                                   g$x$22327$1S&e0X))))))
                                                                          g$ids$22322$1S&e0X
                                                                          g$y$22321$1S&e0X))))))
                                                                 g$ls/false$22316$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$t$22331$1S&e0X)
                                                                   ((case-lambda
                                                                      ((g$ls/false$22332$1S&e0X)
                                                                       (if g$ls/false$22332$1S&e0X
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$22270$1S&e0X)))
                                                                           g$ls/false$22332$1S&e0X)
                                                                         ((case-lambda
                                                                            ((g$t$22333$1S&e0X)
                                                                             ((case-lambda
                                                                                ((g$ls/false$22334$1S&e0X)
                                                                                 (if (if g$ls/false$22334$1S&e0X
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$22335$1S&e0X)
                                                                                              (not (g$stx?$20163$1S&e0X
                                                                                                     g$p$22335$1S&e0X))))
                                                                                           g$ls/false$22334$1S&e0X))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$22336$1S&e0X)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$22267$1S&e0X
                                                                                               g$p$22336$1S&e0X
                                                                                               g$n$22269$1S&e0X
                                                                                               g$ids$22270$1S&e0X)))
                                                                                          (case-lambda
                                                                                            ((g$p$22339$1S&e0X
                                                                                               g$ids$22340$1S&e0X)
                                                                                             ((case-lambda
                                                                                                ((g$ids$22341$1S&e0X
                                                                                                   g$p$22342$1S&e0X)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$22342$1S&e0X)
                                                                                                   g$ids$22341$1S&e0X)))
                                                                                              g$ids$22340$1S&e0X
                                                                                              g$p$22339$1S&e0X))))))
                                                                                     g$ls/false$22334$1S&e0X)
                                                                                   ((case-lambda
                                                                                      ((g$t$22343$1S&e0X)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$22344$1S&e0X)
                                                                                           (if g$ls/false$22344$1S&e0X
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$22345$1S&e0X)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$20202$1S&e0X
                                                                                                        g$datum$22345$1S&e0X))
                                                                                                    g$ids$22270$1S&e0X)))
                                                                                               g$ls/false$22344$1S&e0X)
                                                                                             (g$syntax-violation$20808$1S&e0X
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$22343$1S&e0X))))
                                                                                        (g$syntax-dispatch$20689$1S&e0X
                                                                                          g$t$22343$1S&e0X
                                                                                          'any))))
                                                                                    g$t$22333$1S&e0X))))
                                                                              (g$syntax-dispatch$20689$1S&e0X
                                                                                g$t$22333$1S&e0X
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$22331$1S&e0X))))
                                                                    (g$syntax-dispatch$20689$1S&e0X
                                                                      g$t$22331$1S&e0X
                                                                      '()))))
                                                                g$t$22315$1S&e0X))))
                                                          (g$syntax-dispatch$20689$1S&e0X
                                                            g$t$22315$1S&e0X
                                                            '(any .
                                                                  any)))))
                                                      g$t$22287$1S&e0X))))
                                                (g$syntax-dispatch$20689$1S&e0X
                                                  g$t$22287$1S&e0X
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$22275$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$22275$1S&e0X
                                        '(any any)))))
                                  g$t$22271$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$22271$1S&e0X
                              'any))))
                        g$p$22268$1S&e0X)))))
          (g$cvt$22267$1S&e0X g$pattern$22264$1S&e0X '0 '())))))
   (g$syntax-dispatch$20689$1S&e0X
     g$syntax-dispatch$24284$1S&e0X
     (case-lambda
       ((g$e$22361$1S&e0X g$p$22362$1S&e0X)
        (letrec* ((g$stx^$22363$1S&e0X
                    (case-lambda
                      ((g$e$22471$1S&e0X
                         g$m*$22472$1S&e0X
                         g$s*$22473$1S&e0X
                         g$ae*$22474$1S&e0X)
                       (if (if (null? g$m*$22472$1S&e0X)
                             (if (null? g$s*$22473$1S&e0X)
                               (begin '#f (null? g$ae*$22474$1S&e0X))
                               '#f)
                             '#f)
                         g$e$22471$1S&e0X
                         (g$mkstx$20179$1S&e0X
                           g$e$22471$1S&e0X
                           g$m*$22472$1S&e0X
                           g$s*$22473$1S&e0X
                           g$ae*$22474$1S&e0X)))))
                  (g$match-each$22364$1S&e0X
                    (case-lambda
                      ((g$e$22455$1S&e0X
                         g$p$22456$1S&e0X
                         g$m*$22457$1S&e0X
                         g$s*$22458$1S&e0X
                         g$ae*$22459$1S&e0X)
                       (if (pair? g$e$22455$1S&e0X)
                         ((case-lambda
                            ((g$first$22460$1S&e0X)
                             (if g$first$22460$1S&e0X
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$22461$1S&e0X)
                                     (if g$rest$22461$1S&e0X
                                       (begin
                                         '#f
                                         (cons
                                           g$first$22460$1S&e0X
                                           g$rest$22461$1S&e0X))
                                       '#f)))
                                  (g$match-each$22364$1S&e0X
                                    (cdr g$e$22455$1S&e0X)
                                    g$p$22456$1S&e0X
                                    g$m*$22457$1S&e0X
                                    g$s*$22458$1S&e0X
                                    g$ae*$22459$1S&e0X)))
                               '#f)))
                          (g$match$22370$1S&e0X
                            (car g$e$22455$1S&e0X)
                            g$p$22456$1S&e0X
                            g$m*$22457$1S&e0X
                            g$s*$22458$1S&e0X
                            g$ae*$22459$1S&e0X
                            '()))
                         (if (null? g$e$22455$1S&e0X)
                           '()
                           (if (g$stx?$20163$1S&e0X g$e$22455$1S&e0X)
                             (if (not (g$top-marked?$20125$1S&e0X
                                        g$m*$22457$1S&e0X))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$20178$1S&e0X
                                        g$m*$22457$1S&e0X
                                        g$s*$22458$1S&e0X
                                        g$ae*$22459$1S&e0X
                                        g$e$22455$1S&e0X)))
                                   (case-lambda
                                     ((g$m*$22465$1S&e0X
                                        g$s*$22466$1S&e0X
                                        g$ae*$22467$1S&e0X)
                                      ((case-lambda
                                         ((g$ae*$22468$1S&e0X
                                            g$s*$22469$1S&e0X
                                            g$m*$22470$1S&e0X)
                                          (g$match-each$22364$1S&e0X
                                            (g$stx-expr$20165$1S&e0X
                                              g$e$22455$1S&e0X)
                                            g$p$22456$1S&e0X
                                            g$m*$22470$1S&e0X
                                            g$s*$22469$1S&e0X
                                            g$ae*$22468$1S&e0X)))
                                       g$ae*$22467$1S&e0X
                                       g$s*$22466$1S&e0X
                                       g$m*$22465$1S&e0X)))))
                               '#f)
                             (if (annotation? g$e$22455$1S&e0X)
                               (g$match-each$22364$1S&e0X
                                 (annotation-expression
                                   g$e$22455$1S&e0X)
                                 g$p$22456$1S&e0X
                                 g$m*$22457$1S&e0X
                                 g$s*$22458$1S&e0X
                                 g$ae*$22459$1S&e0X)
                               (begin '#f '#f))))))))
                  (g$match-each+$22365$1S&e0X
                    (case-lambda
                      ((g$e$22423$1S&e0X
                         g$x-pat$22424$1S&e0X
                         g$y-pat$22425$1S&e0X
                         g$z-pat$22426$1S&e0X
                         g$m*$22427$1S&e0X
                         g$s*$22428$1S&e0X
                         g$ae*$22429$1S&e0X
                         g$r$22430$1S&e0X)
                       ((letrec ((g$f$22431$1S&e0X
                                   (case-lambda
                                     ((g$e$22432$1S&e0X
                                        g$m*$22433$1S&e0X
                                        g$s*$22434$1S&e0X
                                        g$ae*$22435$1S&e0X)
                                      (if (pair? g$e$22432$1S&e0X)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$22431$1S&e0X
                                               (cdr g$e$22432$1S&e0X)
                                               g$m*$22433$1S&e0X
                                               g$s*$22434$1S&e0X
                                               g$ae*$22435$1S&e0X)))
                                          (case-lambda
                                            ((g$xr*$22439$1S&e0X
                                               g$y-pat$22440$1S&e0X
                                               g$r$22441$1S&e0X)
                                             ((case-lambda
                                                ((g$r$22442$1S&e0X
                                                   g$y-pat$22443$1S&e0X
                                                   g$xr*$22444$1S&e0X)
                                                 (if g$r$22442$1S&e0X
                                                   (if (null?
                                                         g$y-pat$22443$1S&e0X)
                                                     ((case-lambda
                                                        ((g$xr$22445$1S&e0X)
                                                         (if g$xr$22445$1S&e0X
                                                           (values
                                                             (cons
                                                               g$xr$22445$1S&e0X
                                                               g$xr*$22444$1S&e0X)
                                                             g$y-pat$22443$1S&e0X
                                                             g$r$22442$1S&e0X)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$22370$1S&e0X
                                                        (car g$e$22432$1S&e0X)
                                                        g$x-pat$22424$1S&e0X
                                                        g$m*$22433$1S&e0X
                                                        g$s*$22434$1S&e0X
                                                        g$ae*$22435$1S&e0X
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$22443$1S&e0X)
                                                       (g$match$22370$1S&e0X
                                                         (car g$e$22432$1S&e0X)
                                                         (car g$y-pat$22443$1S&e0X)
                                                         g$m*$22433$1S&e0X
                                                         g$s*$22434$1S&e0X
                                                         g$ae*$22435$1S&e0X
                                                         g$r$22442$1S&e0X)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$22441$1S&e0X
                                              g$y-pat$22440$1S&e0X
                                              g$xr*$22439$1S&e0X))))
                                        (if (g$stx?$20163$1S&e0X
                                              g$e$22432$1S&e0X)
                                          (if (g$top-marked?$20125$1S&e0X
                                                g$m*$22433$1S&e0X)
                                            (values
                                              '()
                                              g$y-pat$22425$1S&e0X
                                              (g$match$22370$1S&e0X
                                                g$e$22432$1S&e0X
                                                g$z-pat$22426$1S&e0X
                                                g$m*$22433$1S&e0X
                                                g$s*$22434$1S&e0X
                                                g$ae*$22435$1S&e0X
                                                g$r$22430$1S&e0X))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$20178$1S&e0X
                                                   g$m*$22433$1S&e0X
                                                   g$s*$22434$1S&e0X
                                                   g$ae*$22435$1S&e0X
                                                   g$e$22432$1S&e0X)))
                                              (case-lambda
                                                ((g$m*$22449$1S&e0X
                                                   g$s*$22450$1S&e0X
                                                   g$ae*$22451$1S&e0X)
                                                 ((case-lambda
                                                    ((g$ae*$22452$1S&e0X
                                                       g$s*$22453$1S&e0X
                                                       g$m*$22454$1S&e0X)
                                                     (g$f$22431$1S&e0X
                                                       (g$stx-expr$20165$1S&e0X
                                                         g$e$22432$1S&e0X)
                                                       g$m*$22454$1S&e0X
                                                       g$s*$22453$1S&e0X
                                                       g$ae*$22452$1S&e0X)))
                                                  g$ae*$22451$1S&e0X
                                                  g$s*$22450$1S&e0X
                                                  g$m*$22449$1S&e0X)))))
                                          (if (annotation?
                                                g$e$22432$1S&e0X)
                                            (g$f$22431$1S&e0X
                                              (annotation-expression
                                                g$e$22432$1S&e0X)
                                              g$m*$22433$1S&e0X
                                              g$s*$22434$1S&e0X
                                              g$ae*$22435$1S&e0X)
                                            (begin
                                              '#f
                                              (values
                                                '()
                                                g$y-pat$22425$1S&e0X
                                                (g$match$22370$1S&e0X
                                                  g$e$22432$1S&e0X
                                                  g$z-pat$22426$1S&e0X
                                                  g$m*$22433$1S&e0X
                                                  g$s*$22434$1S&e0X
                                                  g$ae*$22435$1S&e0X
                                                  g$r$22430$1S&e0X))))))))))
                          g$f$22431$1S&e0X)
                        g$e$22423$1S&e0X
                        g$m*$22427$1S&e0X
                        g$s*$22428$1S&e0X
                        g$ae*$22429$1S&e0X))))
                  (g$match-each-any$22366$1S&e0X
                    (case-lambda
                      ((g$e$22409$1S&e0X
                         g$m*$22410$1S&e0X
                         g$s*$22411$1S&e0X
                         g$ae*$22412$1S&e0X)
                       (if (pair? g$e$22409$1S&e0X)
                         ((case-lambda
                            ((g$l$22413$1S&e0X)
                             (if g$l$22413$1S&e0X
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$22363$1S&e0X
                                     (car g$e$22409$1S&e0X)
                                     g$m*$22410$1S&e0X
                                     g$s*$22411$1S&e0X
                                     g$ae*$22412$1S&e0X)
                                   g$l$22413$1S&e0X))
                               '#f)))
                          (g$match-each-any$22366$1S&e0X
                            (cdr g$e$22409$1S&e0X)
                            g$m*$22410$1S&e0X
                            g$s*$22411$1S&e0X
                            g$ae*$22412$1S&e0X))
                         (if (null? g$e$22409$1S&e0X)
                           '()
                           (if (g$stx?$20163$1S&e0X g$e$22409$1S&e0X)
                             (if (not (g$top-marked?$20125$1S&e0X
                                        g$m*$22410$1S&e0X))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$20178$1S&e0X
                                        g$m*$22410$1S&e0X
                                        g$s*$22411$1S&e0X
                                        g$ae*$22412$1S&e0X
                                        g$e$22409$1S&e0X)))
                                   (case-lambda
                                     ((g$m*$22417$1S&e0X
                                        g$s*$22418$1S&e0X
                                        g$ae*$22419$1S&e0X)
                                      ((case-lambda
                                         ((g$ae*$22420$1S&e0X
                                            g$s*$22421$1S&e0X
                                            g$m*$22422$1S&e0X)
                                          (g$match-each-any$22366$1S&e0X
                                            (g$stx-expr$20165$1S&e0X
                                              g$e$22409$1S&e0X)
                                            g$m*$22422$1S&e0X
                                            g$s*$22421$1S&e0X
                                            g$ae*$22420$1S&e0X)))
                                       g$ae*$22419$1S&e0X
                                       g$s*$22418$1S&e0X
                                       g$m*$22417$1S&e0X)))))
                               '#f)
                             (if (annotation? g$e$22409$1S&e0X)
                               (g$match-each-any$22366$1S&e0X
                                 (annotation-expression
                                   g$e$22409$1S&e0X)
                                 g$m*$22410$1S&e0X
                                 g$s*$22411$1S&e0X
                                 g$ae*$22412$1S&e0X)
                               (begin '#f '#f))))))))
                  (g$match-empty$22367$1S&e0X
                    (case-lambda
                      ((g$p$22406$1S&e0X g$r$22407$1S&e0X)
                       (if (null? g$p$22406$1S&e0X)
                         g$r$22407$1S&e0X
                         (if (eq? g$p$22406$1S&e0X '_)
                           g$r$22407$1S&e0X
                           (if (eq? g$p$22406$1S&e0X 'any)
                             (cons '() g$r$22407$1S&e0X)
                             (if (pair? g$p$22406$1S&e0X)
                               (g$match-empty$22367$1S&e0X
                                 (car g$p$22406$1S&e0X)
                                 (g$match-empty$22367$1S&e0X
                                   (cdr g$p$22406$1S&e0X)
                                   g$r$22407$1S&e0X))
                               (if (eq? g$p$22406$1S&e0X 'each-any)
                                 (cons '() g$r$22407$1S&e0X)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$22408$1S&e0X)
                                       (if (eqv? g$t$22408$1S&e0X 'each)
                                         (g$match-empty$22367$1S&e0X
                                           (g$vector-ref$12678$1S&e0X
                                             g$p$22406$1S&e0X
                                             '1)
                                           g$r$22407$1S&e0X)
                                         (if (eqv?
                                               g$t$22408$1S&e0X
                                               'each+)
                                           (g$match-empty$22367$1S&e0X
                                             (g$vector-ref$12678$1S&e0X
                                               g$p$22406$1S&e0X
                                               '1)
                                             (g$match-empty$22367$1S&e0X
                                               (g$reverse$12682$1S&e0X
                                                 (g$vector-ref$12678$1S&e0X
                                                   g$p$22406$1S&e0X
                                                   '2))
                                               (g$match-empty$22367$1S&e0X
                                                 (g$vector-ref$12678$1S&e0X
                                                   g$p$22406$1S&e0X
                                                   '3)
                                                 g$r$22407$1S&e0X)))
                                           (if (g$memv$11826$1S&e0X
                                                 g$t$22408$1S&e0X
                                                 '(free-id atom))
                                             g$r$22407$1S&e0X
                                             (if (g$memv$11826$1S&e0X
                                                   g$t$22408$1S&e0X
                                                   '(scheme-id atom))
                                               g$r$22407$1S&e0X
                                               (if (eqv?
                                                     g$t$22408$1S&e0X
                                                     'vector)
                                                 (g$match-empty$22367$1S&e0X
                                                   (g$vector-ref$12678$1S&e0X
                                                     g$p$22406$1S&e0X
                                                     '1)
                                                   g$r$22407$1S&e0X)
                                                 (begin
                                                   '#f
                                                   (assertion-violation
                                                     'syntax-dispatch
                                                     '"invalid pattern"
                                                     g$p$22406$1S&e0X)))))))))
                                    (g$vector-ref$12678$1S&e0X
                                      g$p$22406$1S&e0X
                                      '0)))))))))))
                  (g$combine$22368$1S&e0X
                    (case-lambda
                      ((g$r*$22404$1S&e0X g$r$22405$1S&e0X)
                       (if (null? (car g$r*$22404$1S&e0X))
                         g$r$22405$1S&e0X
                         (cons
                           (g$map$11833$1S&e0X car g$r*$22404$1S&e0X)
                           (g$combine$22368$1S&e0X
                             (g$map$11833$1S&e0X cdr g$r*$22404$1S&e0X)
                             g$r$22405$1S&e0X))))))
                  (g$match*$22369$1S&e0X
                    (case-lambda
                      ((g$e$22386$1S&e0X
                         g$p$22387$1S&e0X
                         g$m*$22388$1S&e0X
                         g$s*$22389$1S&e0X
                         g$ae*$22390$1S&e0X
                         g$r$22391$1S&e0X)
                       (if (null? g$p$22387$1S&e0X)
                         (if (null? g$e$22386$1S&e0X)
                           (begin '#f g$r$22391$1S&e0X)
                           '#f)
                         (if (pair? g$p$22387$1S&e0X)
                           (if (pair? g$e$22386$1S&e0X)
                             (begin
                               '#f
                               (g$match$22370$1S&e0X
                                 (car g$e$22386$1S&e0X)
                                 (car g$p$22387$1S&e0X)
                                 g$m*$22388$1S&e0X
                                 g$s*$22389$1S&e0X
                                 g$ae*$22390$1S&e0X
                                 (g$match$22370$1S&e0X
                                   (cdr g$e$22386$1S&e0X)
                                   (cdr g$p$22387$1S&e0X)
                                   g$m*$22388$1S&e0X
                                   g$s*$22389$1S&e0X
                                   g$ae*$22390$1S&e0X
                                   g$r$22391$1S&e0X)))
                             '#f)
                           (if (eq? g$p$22387$1S&e0X 'each-any)
                             ((case-lambda
                                ((g$l$22392$1S&e0X)
                                 (if g$l$22392$1S&e0X
                                   (begin
                                     '#f
                                     (cons
                                       g$l$22392$1S&e0X
                                       g$r$22391$1S&e0X))
                                   '#f)))
                              (g$match-each-any$22366$1S&e0X
                                g$e$22386$1S&e0X
                                g$m*$22388$1S&e0X
                                g$s*$22389$1S&e0X
                                g$ae*$22390$1S&e0X))
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$22393$1S&e0X)
                                   (if (eqv? g$t$22393$1S&e0X 'each)
                                     (if (null? g$e$22386$1S&e0X)
                                       (g$match-empty$22367$1S&e0X
                                         (g$vector-ref$12678$1S&e0X
                                           g$p$22387$1S&e0X
                                           '1)
                                         g$r$22391$1S&e0X)
                                       ((case-lambda
                                          ((g$r*$22394$1S&e0X)
                                           (if g$r*$22394$1S&e0X
                                             (begin
                                               '#f
                                               (g$combine$22368$1S&e0X
                                                 g$r*$22394$1S&e0X
                                                 g$r$22391$1S&e0X))
                                             '#f)))
                                        (g$match-each$22364$1S&e0X
                                          g$e$22386$1S&e0X
                                          (g$vector-ref$12678$1S&e0X
                                            g$p$22387$1S&e0X
                                            '1)
                                          g$m*$22388$1S&e0X
                                          g$s*$22389$1S&e0X
                                          g$ae*$22390$1S&e0X)))
                                     (if (eqv?
                                           g$t$22393$1S&e0X
                                           'free-id)
                                       (if (g$symbol?$12665$1S&e0X
                                             g$e$22386$1S&e0X)
                                         (if (g$top-marked?$20125$1S&e0X
                                               g$m*$22388$1S&e0X)
                                           (if (g$free-id=?$20195$1S&e0X
                                                 (g$stx^$22363$1S&e0X
                                                   g$e$22386$1S&e0X
                                                   g$m*$22388$1S&e0X
                                                   g$s*$22389$1S&e0X
                                                   g$ae*$22390$1S&e0X)
                                                 (g$vector-ref$12678$1S&e0X
                                                   g$p$22387$1S&e0X
                                                   '1))
                                             (begin
                                               '#f
                                               g$r$22391$1S&e0X)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$22393$1S&e0X
                                             'scheme-id)
                                         (if (g$symbol?$12665$1S&e0X
                                               g$e$22386$1S&e0X)
                                           (if (g$top-marked?$20125$1S&e0X
                                                 g$m*$22388$1S&e0X)
                                             (if (g$free-id=?$20195$1S&e0X
                                                   (g$stx^$22363$1S&e0X
                                                     g$e$22386$1S&e0X
                                                     g$m*$22388$1S&e0X
                                                     g$s*$22389$1S&e0X
                                                     g$ae*$22390$1S&e0X)
                                                   (g$scheme-stx$20632$1S&e0X
                                                     (g$vector-ref$12678$1S&e0X
                                                       g$p$22387$1S&e0X
                                                       '1)))
                                               (begin
                                                 '#f
                                                 g$r$22391$1S&e0X)
                                               '#f)
                                             '#f)
                                           '#f)
                                         (if (eqv?
                                               g$t$22393$1S&e0X
                                               'each+)
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$match-each+$22365$1S&e0X
                                                  g$e$22386$1S&e0X
                                                  (g$vector-ref$12678$1S&e0X
                                                    g$p$22387$1S&e0X
                                                    '1)
                                                  (g$vector-ref$12678$1S&e0X
                                                    g$p$22387$1S&e0X
                                                    '2)
                                                  (g$vector-ref$12678$1S&e0X
                                                    g$p$22387$1S&e0X
                                                    '3)
                                                  g$m*$22388$1S&e0X
                                                  g$s*$22389$1S&e0X
                                                  g$ae*$22390$1S&e0X
                                                  g$r$22391$1S&e0X)))
                                             (case-lambda
                                               ((g$xr*$22398$1S&e0X
                                                  g$y-pat$22399$1S&e0X
                                                  g$r$22400$1S&e0X)
                                                ((case-lambda
                                                   ((g$r$22401$1S&e0X
                                                      g$y-pat$22402$1S&e0X
                                                      g$xr*$22403$1S&e0X)
                                                    (if g$r$22401$1S&e0X
                                                      (if (null?
                                                            g$y-pat$22402$1S&e0X)
                                                        (begin
                                                          '#f
                                                          (if (null?
                                                                g$xr*$22403$1S&e0X)
                                                            (g$match-empty$22367$1S&e0X
                                                              (g$vector-ref$12678$1S&e0X
                                                                g$p$22387$1S&e0X
                                                                '1)
                                                              g$r$22401$1S&e0X)
                                                            (g$combine$22368$1S&e0X
                                                              g$xr*$22403$1S&e0X
                                                              g$r$22401$1S&e0X)))
                                                        '#f)
                                                      '#f)))
                                                 g$r$22400$1S&e0X
                                                 g$y-pat$22399$1S&e0X
                                                 g$xr*$22398$1S&e0X))))
                                           (if (eqv?
                                                 g$t$22393$1S&e0X
                                                 'atom)
                                             (if (equal?
                                                   (g$vector-ref$12678$1S&e0X
                                                     g$p$22387$1S&e0X
                                                     '1)
                                                   (g$strip$20201$1S&e0X
                                                     g$e$22386$1S&e0X
                                                     g$m*$22388$1S&e0X))
                                               (begin
                                                 '#f
                                                 g$r$22391$1S&e0X)
                                               '#f)
                                             (if (eqv?
                                                   g$t$22393$1S&e0X
                                                   'vector)
                                               (if (g$vector?$12663$1S&e0X
                                                     g$e$22386$1S&e0X)
                                                 (begin
                                                   '#f
                                                   (g$match$22370$1S&e0X
                                                     (vector->list
                                                       g$e$22386$1S&e0X)
                                                     (g$vector-ref$12678$1S&e0X
                                                       g$p$22387$1S&e0X
                                                       '1)
                                                     g$m*$22388$1S&e0X
                                                     g$s*$22389$1S&e0X
                                                     g$ae*$22390$1S&e0X
                                                     g$r$22391$1S&e0X))
                                                 '#f)
                                               (begin
                                                 '#f
                                                 (assertion-violation
                                                   'syntax-dispatch
                                                   '"invalid pattern"
                                                   g$p$22387$1S&e0X))))))))))
                                (g$vector-ref$12678$1S&e0X
                                  g$p$22387$1S&e0X
                                  '0)))))))))
                  (g$match$22370$1S&e0X
                    (case-lambda
                      ((g$e$22371$1S&e0X
                         g$p$22372$1S&e0X
                         g$m*$22373$1S&e0X
                         g$s*$22374$1S&e0X
                         g$ae*$22375$1S&e0X
                         g$r$22376$1S&e0X)
                       (if (not g$r$22376$1S&e0X)
                         '#f
                         (if (eq? g$p$22372$1S&e0X '_)
                           g$r$22376$1S&e0X
                           (if (eq? g$p$22372$1S&e0X 'any)
                             (cons
                               (g$stx^$22363$1S&e0X
                                 g$e$22371$1S&e0X
                                 g$m*$22373$1S&e0X
                                 g$s*$22374$1S&e0X
                                 g$ae*$22375$1S&e0X)
                               g$r$22376$1S&e0X)
                             (if (g$stx?$20163$1S&e0X g$e$22371$1S&e0X)
                               (if (not (g$top-marked?$20125$1S&e0X
                                          g$m*$22373$1S&e0X))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$20178$1S&e0X
                                          g$m*$22373$1S&e0X
                                          g$s*$22374$1S&e0X
                                          g$ae*$22375$1S&e0X
                                          g$e$22371$1S&e0X)))
                                     (case-lambda
                                       ((g$m*$22380$1S&e0X
                                          g$s*$22381$1S&e0X
                                          g$ae*$22382$1S&e0X)
                                        ((case-lambda
                                           ((g$ae*$22383$1S&e0X
                                              g$s*$22384$1S&e0X
                                              g$m*$22385$1S&e0X)
                                            (g$match$22370$1S&e0X
                                              (g$stx-expr$20165$1S&e0X
                                                g$e$22371$1S&e0X)
                                              g$p$22372$1S&e0X
                                              g$m*$22385$1S&e0X
                                              g$s*$22384$1S&e0X
                                              g$ae*$22383$1S&e0X
                                              g$r$22376$1S&e0X)))
                                         g$ae*$22382$1S&e0X
                                         g$s*$22381$1S&e0X
                                         g$m*$22380$1S&e0X)))))
                                 '#f)
                               (if (annotation? g$e$22371$1S&e0X)
                                 (g$match$22370$1S&e0X
                                   (annotation-expression
                                     g$e$22371$1S&e0X)
                                   g$p$22372$1S&e0X
                                   g$m*$22373$1S&e0X
                                   g$s*$22374$1S&e0X
                                   g$ae*$22375$1S&e0X
                                   g$r$22376$1S&e0X)
                                 (begin
                                   '#f
                                   (g$match*$22369$1S&e0X
                                     g$e$22371$1S&e0X
                                     g$p$22372$1S&e0X
                                     g$m*$22373$1S&e0X
                                     g$s*$22374$1S&e0X
                                     g$ae*$22375$1S&e0X
                                     g$r$22376$1S&e0X)))))))))))
          (g$match$22370$1S&e0X
            g$e$22361$1S&e0X
            g$p$22362$1S&e0X
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$20690$1S&e0X
     g$ellipsis?$24285$1S&e0X
     (case-lambda
       ((g$x$22475$1S&e0X)
        (if (g$id?$20191$1S&e0X g$x$22475$1S&e0X)
          (begin
            '#f
            (g$free-id=?$20195$1S&e0X
              g$x$22475$1S&e0X
              (g$scheme-stx$20632$1S&e0X '...)))
          '#f))))
   (g$underscore?$20691$1S&e0X
     g$underscore?$24286$1S&e0X
     (case-lambda
       ((g$x$22476$1S&e0X)
        (if (g$id?$20191$1S&e0X g$x$22476$1S&e0X)
          (begin
            '#f
            (g$free-id=?$20195$1S&e0X
              g$x$22476$1S&e0X
              (g$scheme-stx$20632$1S&e0X '_)))
          '#f))))
   (g$verify-literals$20692$1S&e0X
     g$verify-literals$24287$1S&e0X
     (case-lambda
       ((g$lits$22477$1S&e0X g$expr$22478$1S&e0X)
        (g$for-each$11834$1S&e0X
          (case-lambda
            ((g$x$22479$1S&e0X)
             (if ((case-lambda
                    ((g$t$22480$1S&e0X)
                     (if g$t$22480$1S&e0X
                       g$t$22480$1S&e0X
                       ((case-lambda
                          ((g$t$22481$1S&e0X)
                           (if g$t$22481$1S&e0X
                             g$t$22481$1S&e0X
                             (begin
                               '#f
                               (g$underscore?$20691$1S&e0X
                                 g$x$22479$1S&e0X)))))
                        (g$ellipsis?$20690$1S&e0X g$x$22479$1S&e0X)))))
                  (not (g$id?$20191$1S&e0X g$x$22479$1S&e0X)))
               (g$syntax-violation$20808$1S&e0X
                 '#f
                 '"invalid literal"
                 g$expr$22478$1S&e0X
                 g$x$22479$1S&e0X)
               (void))))
          g$lits$22477$1S&e0X))))
   (g$syntax-case-transformer$20693$1S&e0X
     g$syntax-case-transformer$24288$1S&e0X
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$22482$1S&e0X
                     (case-lambda
                       ((g$pvars$22539$1S&e0X
                          g$expr$22540$1S&e0X
                          g$y$22541$1S&e0X
                          g$r$22542$1S&e0X
                          g$mr$22543$1S&e0X)
                        ((case-lambda
                           ((g$ids$22544$1S&e0X g$levels$22545$1S&e0X)
                            ((case-lambda
                               ((g$labels$22546$1S&e0X
                                  g$new-vars$22547$1S&e0X)
                                ((case-lambda
                                   ((g$body$22548$1S&e0X)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$20113$1S&e0X
                                        '#f
                                        g$new-vars$22547$1S&e0X
                                        g$body$22548$1S&e0X)
                                      g$y$22541$1S&e0X)))
                                 (g$chi-expr$20707$1S&e0X
                                   (g$add-subst$20181$1S&e0X
                                     (g$make-full-rib$20157$1S&e0X
                                       g$ids$22544$1S&e0X
                                       g$labels$22546$1S&e0X)
                                     g$expr$22540$1S&e0X)
                                   (append
                                     (g$map$11833$1S&e0X
                                       (case-lambda
                                         ((g$label$22549$1S&e0X
                                            g$var$22550$1S&e0X
                                            g$level$22551$1S&e0X)
                                          (cons
                                            g$label$22549$1S&e0X
                                            (g$make-binding$20207$1S&e0X
                                              'syntax
                                              (cons
                                                g$var$22550$1S&e0X
                                                g$level$22551$1S&e0X)))))
                                       g$labels$22546$1S&e0X
                                       g$new-vars$22547$1S&e0X
                                       (g$map$11833$1S&e0X
                                         cdr
                                         g$pvars$22539$1S&e0X))
                                     g$r$22542$1S&e0X)
                                   g$mr$22543$1S&e0X))))
                             (g$map$11833$1S&e0X
                               g$gen-label$20128$1S&e0X
                               g$ids$22544$1S&e0X)
                             (g$map$11833$1S&e0X
                               g$gen-lexical$20126$1S&e0X
                               g$ids$22544$1S&e0X))))
                         (g$map$11833$1S&e0X car g$pvars$22539$1S&e0X)
                         (g$map$11833$1S&e0X
                           cdr
                           g$pvars$22539$1S&e0X)))))
                   (g$invalid-ids-error$22483$1S&e0X
                     (case-lambda
                       ((g$id*$22533$1S&e0X
                          g$e$22534$1S&e0X
                          g$class$22535$1S&e0X)
                        ((letrec ((g$find$22536$1S&e0X
                                    (case-lambda
                                      ((g$id*$22537$1S&e0X
                                         g$ok*$22538$1S&e0X)
                                       (if (null? g$id*$22537$1S&e0X)
                                         (g$syntax-violation$20808$1S&e0X
                                           '#f
                                           '"invalid syntax"
                                           g$e$22534$1S&e0X)
                                         (if (g$id?$20191$1S&e0X
                                               (car g$id*$22537$1S&e0X))
                                           (if (g$bound-id-member?$20198$1S&e0X
                                                 (car g$id*$22537$1S&e0X)
                                                 g$ok*$22538$1S&e0X)
                                             (g$syntax-error$20805$1S&e0X
                                               (car g$id*$22537$1S&e0X)
                                               '"duplicate "
                                               g$class$22535$1S&e0X)
                                             (g$find$22536$1S&e0X
                                               (cdr g$id*$22537$1S&e0X)
                                               (cons
                                                 (car g$id*$22537$1S&e0X)
                                                 g$ok*$22538$1S&e0X)))
                                           (g$syntax-error$20805$1S&e0X
                                             (car g$id*$22537$1S&e0X)
                                             '"invalid "
                                             g$class$22535$1S&e0X)))))))
                           g$find$22536$1S&e0X)
                         g$id*$22533$1S&e0X
                         '()))))
                   (g$gen-clause$22484$1S&e0X
                     (case-lambda
                       ((g$x$22513$1S&e0X
                          g$keys$22514$1S&e0X
                          g$clauses$22515$1S&e0X
                          g$r$22516$1S&e0X
                          g$mr$22517$1S&e0X
                          g$pat$22518$1S&e0X
                          g$fender$22519$1S&e0X
                          g$expr$22520$1S&e0X)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$20688$1S&e0X
                               g$pat$22518$1S&e0X
                               g$keys$22514$1S&e0X)))
                          (case-lambda
                            ((g$p$22523$1S&e0X g$pvars$22524$1S&e0X)
                             ((case-lambda
                                ((g$pvars$22525$1S&e0X g$p$22526$1S&e0X)
                                 (if (not (g$distinct-bound-ids?$20197$1S&e0X
                                            (g$map$11833$1S&e0X
                                              car
                                              g$pvars$22525$1S&e0X)))
                                   (g$invalid-ids-error$22483$1S&e0X
                                     (g$map$11833$1S&e0X
                                       car
                                       g$pvars$22525$1S&e0X)
                                     g$pat$22518$1S&e0X
                                     '"pattern variable")
                                   (if (not (g$for-all$11831$1S&e0X
                                              (case-lambda
                                                ((g$x$22527$1S&e0X)
                                                 (not (g$ellipsis?$20690$1S&e0X
                                                        (car g$x$22527$1S&e0X)))))
                                              g$pvars$22525$1S&e0X))
                                     (g$syntax-violation$20808$1S&e0X
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$22518$1S&e0X)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$y$22528$1S&e0X)
                                           ((case-lambda
                                              ((g$test$22529$1S&e0X)
                                               ((case-lambda
                                                  ((g$conseq$22530$1S&e0X)
                                                   ((case-lambda
                                                      ((g$altern$22531$1S&e0X)
                                                       (list
                                                         (g$build-lambda$20113$1S&e0X
                                                           '#f
                                                           (list
                                                             g$y$22528$1S&e0X)
                                                           (list
                                                             'if
                                                             g$test$22529$1S&e0X
                                                             g$conseq$22530$1S&e0X
                                                             g$altern$22531$1S&e0X))
                                                         (list
                                                           '(primitive
                                                              syntax-dispatch)
                                                           g$x$22513$1S&e0X
                                                           (list
                                                             'quote
                                                             g$p$22526$1S&e0X)))))
                                                    (g$gen-syntax-case$22485$1S&e0X
                                                      g$x$22513$1S&e0X
                                                      g$keys$22514$1S&e0X
                                                      g$clauses$22515$1S&e0X
                                                      g$r$22516$1S&e0X
                                                      g$mr$22517$1S&e0X))))
                                                (g$build-dispatch-call$22482$1S&e0X
                                                  g$pvars$22525$1S&e0X
                                                  g$expr$22520$1S&e0X
                                                  g$y$22528$1S&e0X
                                                  g$r$22516$1S&e0X
                                                  g$mr$22517$1S&e0X))))
                                            (if (eq? g$fender$22519$1S&e0X
                                                     '#t)
                                              g$y$22528$1S&e0X
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$call$22532$1S&e0X)
                                                    (list
                                                      'if
                                                      g$y$22528$1S&e0X
                                                      g$call$22532$1S&e0X
                                                      (list
                                                        'quote
                                                        '#f))))
                                                 (g$build-dispatch-call$22482$1S&e0X
                                                   g$pvars$22525$1S&e0X
                                                   g$fender$22519$1S&e0X
                                                   g$y$22528$1S&e0X
                                                   g$r$22516$1S&e0X
                                                   g$mr$22517$1S&e0X)))))))
                                        (g$gen-lexical$20126$1S&e0X
                                          'tmp)))))))
                              g$pvars$22524$1S&e0X
                              g$p$22523$1S&e0X)))))))
                   (g$gen-syntax-case$22485$1S&e0X
                     (case-lambda
                       ((g$x$22496$1S&e0X
                          g$keys$22497$1S&e0X
                          g$clauses$22498$1S&e0X
                          g$r$22499$1S&e0X
                          g$mr$22500$1S&e0X)
                        (if (null? g$clauses$22498$1S&e0X)
                          (list
                            '(primitive syntax-error)
                            g$x$22496$1S&e0X)
                          ((case-lambda
                             ((g$t$22501$1S&e0X)
                              ((case-lambda
                                 ((g$ls/false$22502$1S&e0X)
                                  (if g$ls/false$22502$1S&e0X
                                    (apply
                                      (case-lambda
                                        ((g$pat$22503$1S&e0X
                                           g$expr$22504$1S&e0X)
                                         (if (if (g$id?$20191$1S&e0X
                                                   g$pat$22503$1S&e0X)
                                               (if (not (g$bound-id-member?$20198$1S&e0X
                                                          g$pat$22503$1S&e0X
                                                          g$keys$22497$1S&e0X))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$20690$1S&e0X
                                                          g$pat$22503$1S&e0X)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$20195$1S&e0X
                                                 g$pat$22503$1S&e0X
                                                 (g$scheme-stx$20632$1S&e0X
                                                   '_))
                                             (g$chi-expr$20707$1S&e0X
                                               g$expr$22504$1S&e0X
                                               g$r$22499$1S&e0X
                                               g$mr$22500$1S&e0X)
                                             ((case-lambda
                                                ((g$lab$22505$1S&e0X
                                                   g$lex$22506$1S&e0X)
                                                 ((case-lambda
                                                    ((g$body$22507$1S&e0X)
                                                     (list
                                                       (g$build-lambda$20113$1S&e0X
                                                         '#f
                                                         (list
                                                           g$lex$22506$1S&e0X)
                                                         g$body$22507$1S&e0X)
                                                       g$x$22496$1S&e0X)))
                                                  (g$chi-expr$20707$1S&e0X
                                                    (g$add-subst$20181$1S&e0X
                                                      (g$make-full-rib$20157$1S&e0X
                                                        (list
                                                          g$pat$22503$1S&e0X)
                                                        (list
                                                          g$lab$22505$1S&e0X))
                                                      g$expr$22504$1S&e0X)
                                                    (cons
                                                      (cons
                                                        g$lab$22505$1S&e0X
                                                        (g$make-binding$20207$1S&e0X
                                                          'syntax
                                                          (cons
                                                            g$lex$22506$1S&e0X
                                                            '0)))
                                                      g$r$22499$1S&e0X)
                                                    g$mr$22500$1S&e0X))))
                                              (g$gen-label$20128$1S&e0X
                                                g$pat$22503$1S&e0X)
                                              (g$gen-lexical$20126$1S&e0X
                                                g$pat$22503$1S&e0X)))
                                           (g$gen-clause$22484$1S&e0X
                                             g$x$22496$1S&e0X
                                             g$keys$22497$1S&e0X
                                             (cdr g$clauses$22498$1S&e0X)
                                             g$r$22499$1S&e0X
                                             g$mr$22500$1S&e0X
                                             g$pat$22503$1S&e0X
                                             '#t
                                             g$expr$22504$1S&e0X))))
                                      g$ls/false$22502$1S&e0X)
                                    ((case-lambda
                                       ((g$t$22508$1S&e0X)
                                        ((case-lambda
                                           ((g$ls/false$22509$1S&e0X)
                                            (if g$ls/false$22509$1S&e0X
                                              (apply
                                                (case-lambda
                                                  ((g$pat$22510$1S&e0X
                                                     g$fender$22511$1S&e0X
                                                     g$expr$22512$1S&e0X)
                                                   (g$gen-clause$22484$1S&e0X
                                                     g$x$22496$1S&e0X
                                                     g$keys$22497$1S&e0X
                                                     (cdr g$clauses$22498$1S&e0X)
                                                     g$r$22499$1S&e0X
                                                     g$mr$22500$1S&e0X
                                                     g$pat$22510$1S&e0X
                                                     g$fender$22511$1S&e0X
                                                     g$expr$22512$1S&e0X)))
                                                g$ls/false$22509$1S&e0X)
                                              (g$syntax-violation$20808$1S&e0X
                                                '#f
                                                '"invalid syntax"
                                                g$t$22508$1S&e0X))))
                                         (g$syntax-dispatch$20689$1S&e0X
                                           g$t$22508$1S&e0X
                                           '(any any any)))))
                                     g$t$22501$1S&e0X))))
                               (g$syntax-dispatch$20689$1S&e0X
                                 g$t$22501$1S&e0X
                                 '(any any)))))
                           (car g$clauses$22498$1S&e0X)))))))
           (case-lambda
             ((g$e$22486$1S&e0X g$r$22487$1S&e0X g$mr$22488$1S&e0X)
              ((case-lambda
                 ((g$t$22489$1S&e0X)
                  ((case-lambda
                     ((g$ls/false$22490$1S&e0X)
                      (if g$ls/false$22490$1S&e0X
                        (apply
                          (case-lambda
                            ((g$expr$22491$1S&e0X
                               g$keys$22492$1S&e0X
                               g$clauses$22493$1S&e0X)
                             (begin
                               (g$verify-literals$20692$1S&e0X
                                 g$keys$22492$1S&e0X
                                 g$e$22486$1S&e0X)
                               ((case-lambda
                                  ((g$x$22494$1S&e0X)
                                   ((case-lambda
                                      ((g$body$22495$1S&e0X)
                                       (list
                                         (g$build-lambda$20113$1S&e0X
                                           '#f
                                           (list g$x$22494$1S&e0X)
                                           g$body$22495$1S&e0X)
                                         (g$chi-expr$20707$1S&e0X
                                           g$expr$22491$1S&e0X
                                           g$r$22487$1S&e0X
                                           g$mr$22488$1S&e0X))))
                                    (g$gen-syntax-case$22485$1S&e0X
                                      g$x$22494$1S&e0X
                                      g$keys$22492$1S&e0X
                                      g$clauses$22493$1S&e0X
                                      g$r$22487$1S&e0X
                                      g$mr$22488$1S&e0X))))
                                (g$gen-lexical$20126$1S&e0X 'tmp)))))
                          g$ls/false$22490$1S&e0X)
                        (g$syntax-violation$20808$1S&e0X
                          '#f
                          '"invalid syntax"
                          g$t$22489$1S&e0X))))
                   (g$syntax-dispatch$20689$1S&e0X
                     g$t$22489$1S&e0X
                     '(_ any each-any . each-any)))))
               g$e$22486$1S&e0X))))))))
   (g$ellipsis-map$20694$1S&e0X
     g$ellipsis-map$24289$1S&e0X
     (case-lambda
       ((g$proc$22552$1S&e0X g$ls$22553$1S&e0X . g$ls*$22554$1S&e0X)
        (letrec* ((g$who$22555$1S&e0X '...))
          (begin
            (if (not (list? g$ls$22553$1S&e0X))
              (assertion-violation
                g$who$22555$1S&e0X
                '"not a list"
                g$ls$22553$1S&e0X)
              (void))
            (if (not (null? g$ls*$22554$1S&e0X))
              ((case-lambda
                 ((g$n$22556$1S&e0X)
                  (g$for-each$11834$1S&e0X
                    (case-lambda
                      ((g$x$22557$1S&e0X)
                       (begin
                         (if (not (list? g$x$22557$1S&e0X))
                           (assertion-violation
                             g$who$22555$1S&e0X
                             '"not a list"
                             g$x$22557$1S&e0X)
                           (void))
                         (if (not (g$=$13694$1S&e0X
                                    (length g$x$22557$1S&e0X)
                                    g$n$22556$1S&e0X))
                           (assertion-violation
                             g$who$22555$1S&e0X
                             '"length mismatch"
                             g$ls$22553$1S&e0X
                             g$x$22557$1S&e0X)
                           (void)))))
                    g$ls*$22554$1S&e0X)))
               (length g$ls$22553$1S&e0X))
              (void))
            (apply
              g$map$11833$1S&e0X
              g$proc$22552$1S&e0X
              g$ls$22553$1S&e0X
              g$ls*$22554$1S&e0X))))))
   (g$syntax-transformer$20695$1S&e0X
     g$syntax-transformer$24290$1S&e0X
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$22558$1S&e0X
                     (case-lambda
                       ((g$src$22618$1S&e0X
                          g$e$22619$1S&e0X
                          g$r$22620$1S&e0X
                          g$maps$22621$1S&e0X
                          g$ellipsis?$22622$1S&e0X
                          g$vec?$22623$1S&e0X)
                        ((case-lambda
                           ((g$t$22624$1S&e0X)
                            ((case-lambda
                               ((g$ls/false$22625$1S&e0X)
                                (if (if g$ls/false$22625$1S&e0X
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$22626$1S&e0X)
                                             (g$ellipsis?$22622$1S&e0X
                                               g$dots$22626$1S&e0X)))
                                          g$ls/false$22625$1S&e0X))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$22627$1S&e0X)
                                       (g$syntax-violation$20808$1S&e0X
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$22618$1S&e0X)))
                                    g$ls/false$22625$1S&e0X)
                                  ((case-lambda
                                     ((g$t$22628$1S&e0X)
                                      ((case-lambda
                                         ((g$ls/false$22629$1S&e0X)
                                          (if (if g$ls/false$22629$1S&e0X
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$22630$1S&e0X)
                                                       (g$id?$20191$1S&e0X
                                                         g$id$22630$1S&e0X)))
                                                    g$ls/false$22629$1S&e0X))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$22631$1S&e0X)
                                                 ((case-lambda
                                                    ((g$label$22632$1S&e0X)
                                                     ((case-lambda
                                                        ((g$b$22633$1S&e0X)
                                                         (if (eq? (g$binding-type$20208$1S&e0X
                                                                    g$b$22633$1S&e0X)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$22636$1S&e0X)
                                                                    (g$gen-ref$22559$1S&e0X
                                                                      g$src$22618$1S&e0X
                                                                      (car g$var.lev$22636$1S&e0X)
                                                                      (cdr g$var.lev$22636$1S&e0X)
                                                                      g$maps$22621$1S&e0X)))
                                                                 (g$binding-value$20209$1S&e0X
                                                                   g$b$22633$1S&e0X))))
                                                             (case-lambda
                                                               ((g$var$22637$1S&e0X
                                                                  g$maps$22638$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$maps$22639$1S&e0X
                                                                      g$var$22640$1S&e0X)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$22640$1S&e0X)
                                                                      g$maps$22639$1S&e0X)))
                                                                 g$maps$22638$1S&e0X
                                                                 g$var$22637$1S&e0X))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$22619$1S&e0X)
                                                             g$maps$22621$1S&e0X))))
                                                      (g$label->binding$20206$1S&e0X
                                                        g$label$22632$1S&e0X
                                                        g$r$22620$1S&e0X))))
                                                  (g$id->label$20204$1S&e0X
                                                    g$e$22619$1S&e0X))))
                                              g$ls/false$22629$1S&e0X)
                                            ((case-lambda
                                               ((g$t$22641$1S&e0X)
                                                ((case-lambda
                                                   ((g$ls/false$22642$1S&e0X)
                                                    (if (if g$ls/false$22642$1S&e0X
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$22643$1S&e0X
                                                                   g$e$22644$1S&e0X)
                                                                 (g$ellipsis?$22622$1S&e0X
                                                                   g$dots$22643$1S&e0X)))
                                                              g$ls/false$22642$1S&e0X))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$22645$1S&e0X
                                                             g$e$22646$1S&e0X)
                                                           (if g$vec?$22623$1S&e0X
                                                             (g$syntax-violation$20808$1S&e0X
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$22618$1S&e0X)
                                                             (g$gen-syntax$22558$1S&e0X
                                                               g$src$22618$1S&e0X
                                                               g$e$22646$1S&e0X
                                                               g$r$22620$1S&e0X
                                                               g$maps$22621$1S&e0X
                                                               (case-lambda
                                                                 ((g$x$22647$1S&e0X)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$22642$1S&e0X)
                                                      ((case-lambda
                                                         ((g$t$22648$1S&e0X)
                                                          ((case-lambda
                                                             ((g$ls/false$22649$1S&e0X)
                                                              (if (if g$ls/false$22649$1S&e0X
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$22650$1S&e0X
                                                                             g$dots$22651$1S&e0X
                                                                             g$y$22652$1S&e0X)
                                                                           (g$ellipsis?$22622$1S&e0X
                                                                             g$dots$22651$1S&e0X)))
                                                                        g$ls/false$22649$1S&e0X))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$22653$1S&e0X
                                                                       g$dots$22654$1S&e0X
                                                                       g$y$22655$1S&e0X)
                                                                     ((letrec ((g$f$22656$1S&e0X
                                                                                 (case-lambda
                                                                                   ((g$y$22657$1S&e0X
                                                                                      g$k$22658$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$22659$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22660$1S&e0X)
                                                                                            (if g$ls/false$22660$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$22658$1S&e0X
                                                                                                     g$maps$22621$1S&e0X)))
                                                                                                g$ls/false$22660$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$t$22661$1S&e0X)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$22662$1S&e0X)
                                                                                                      (if (if g$ls/false$22662$1S&e0X
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$22663$1S&e0X
                                                                                                                     g$y$22664$1S&e0X)
                                                                                                                   (g$ellipsis?$22622$1S&e0X
                                                                                                                     g$dots$22663$1S&e0X)))
                                                                                                                g$ls/false$22662$1S&e0X))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$22665$1S&e0X
                                                                                                               g$y$22666$1S&e0X)
                                                                                                             (g$f$22656$1S&e0X
                                                                                                               g$y$22666$1S&e0X
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$22667$1S&e0X)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$22658$1S&e0X
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$22667$1S&e0X))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$22670$1S&e0X
                                                                                                                         g$maps$22671$1S&e0X)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$22672$1S&e0X
                                                                                                                             g$x$22673$1S&e0X)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$22672$1S&e0X))
                                                                                                                             (g$syntax-violation$20808$1S&e0X
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$22618$1S&e0X)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$22561$1S&e0X
                                                                                                                                 g$x$22673$1S&e0X
                                                                                                                                 (car g$maps$22672$1S&e0X))
                                                                                                                               (cdr g$maps$22672$1S&e0X)))))
                                                                                                                        g$maps$22671$1S&e0X
                                                                                                                        g$x$22670$1S&e0X)))))))))
                                                                                                          g$ls/false$22662$1S&e0X)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$22674$1S&e0X)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$22675$1S&e0X)
                                                                                                                (if g$ls/false$22675$1S&e0X
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$22558$1S&e0X
                                                                                                                              g$src$22618$1S&e0X
                                                                                                                              g$y$22657$1S&e0X
                                                                                                                              g$r$22620$1S&e0X
                                                                                                                              g$maps$22621$1S&e0X
                                                                                                                              g$ellipsis?$22622$1S&e0X
                                                                                                                              g$vec?$22623$1S&e0X)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$22678$1S&e0X
                                                                                                                              g$maps$22679$1S&e0X)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$22680$1S&e0X
                                                                                                                                  g$y$22681$1S&e0X)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$22658$1S&e0X
                                                                                                                                       g$maps$22680$1S&e0X)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$22684$1S&e0X
                                                                                                                                       g$maps$22685$1S&e0X)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$22686$1S&e0X
                                                                                                                                           g$x$22687$1S&e0X)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$22560$1S&e0X
                                                                                                                                             g$x$22687$1S&e0X
                                                                                                                                             g$y$22681$1S&e0X)
                                                                                                                                           g$maps$22686$1S&e0X)))
                                                                                                                                      g$maps$22685$1S&e0X
                                                                                                                                      g$x$22684$1S&e0X))))))
                                                                                                                             g$maps$22679$1S&e0X
                                                                                                                             g$y$22678$1S&e0X))))))
                                                                                                                    g$ls/false$22675$1S&e0X)
                                                                                                                  (g$syntax-violation$20808$1S&e0X
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$22674$1S&e0X))))
                                                                                                             (g$syntax-dispatch$20689$1S&e0X
                                                                                                               g$t$22674$1S&e0X
                                                                                                               '_))))
                                                                                                         g$t$22661$1S&e0X))))
                                                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                                                     g$t$22661$1S&e0X
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$22659$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$22659$1S&e0X
                                                                                           '()))))
                                                                                     g$y$22657$1S&e0X)))))
                                                                        g$f$22656$1S&e0X)
                                                                      g$y$22655$1S&e0X
                                                                      (case-lambda
                                                                        ((g$maps$22688$1S&e0X)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$22558$1S&e0X
                                                                                g$src$22618$1S&e0X
                                                                                g$x$22653$1S&e0X
                                                                                g$r$22620$1S&e0X
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$22688$1S&e0X)
                                                                                g$ellipsis?$22622$1S&e0X
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$22691$1S&e0X
                                                                                g$maps$22692$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$maps$22693$1S&e0X
                                                                                    g$x$22694$1S&e0X)
                                                                                  (if (null?
                                                                                        (car g$maps$22693$1S&e0X))
                                                                                    (g$syntax-violation$20808$1S&e0X
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$22618$1S&e0X)
                                                                                    (values
                                                                                      (g$gen-map$22562$1S&e0X
                                                                                        g$x$22694$1S&e0X
                                                                                        (car g$maps$22693$1S&e0X))
                                                                                      (cdr g$maps$22693$1S&e0X)))))
                                                                               g$maps$22692$1S&e0X
                                                                               g$x$22691$1S&e0X)))))))))
                                                                  g$ls/false$22649$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$t$22695$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$ls/false$22696$1S&e0X)
                                                                        (if g$ls/false$22696$1S&e0X
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$22697$1S&e0X
                                                                                 g$y$22698$1S&e0X)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$22558$1S&e0X
                                                                                      g$src$22618$1S&e0X
                                                                                      g$x$22697$1S&e0X
                                                                                      g$r$22620$1S&e0X
                                                                                      g$maps$22621$1S&e0X
                                                                                      g$ellipsis?$22622$1S&e0X
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$22701$1S&e0X
                                                                                      g$maps$22702$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$maps$22703$1S&e0X
                                                                                          g$xnew$22704$1S&e0X)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$22558$1S&e0X
                                                                                               g$src$22618$1S&e0X
                                                                                               g$y$22698$1S&e0X
                                                                                               g$r$22620$1S&e0X
                                                                                               g$maps$22703$1S&e0X
                                                                                               g$ellipsis?$22622$1S&e0X
                                                                                               g$vec?$22623$1S&e0X)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$22707$1S&e0X
                                                                                               g$maps$22708$1S&e0X)
                                                                                             ((case-lambda
                                                                                                ((g$maps$22709$1S&e0X
                                                                                                   g$ynew$22710$1S&e0X)
                                                                                                 (values
                                                                                                   (g$gen-cons$22563$1S&e0X
                                                                                                     g$e$22619$1S&e0X
                                                                                                     g$x$22697$1S&e0X
                                                                                                     g$y$22698$1S&e0X
                                                                                                     g$xnew$22704$1S&e0X
                                                                                                     g$ynew$22710$1S&e0X)
                                                                                                   g$maps$22709$1S&e0X)))
                                                                                              g$maps$22708$1S&e0X
                                                                                              g$ynew$22707$1S&e0X))))))
                                                                                     g$maps$22702$1S&e0X
                                                                                     g$xnew$22701$1S&e0X))))))
                                                                            g$ls/false$22696$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$22711$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22712$1S&e0X)
                                                                                  (if g$ls/false$22712$1S&e0X
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$22713$1S&e0X)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$22558$1S&e0X
                                                                                                g$src$22618$1S&e0X
                                                                                                g$ls$22713$1S&e0X
                                                                                                g$r$22620$1S&e0X
                                                                                                g$maps$22621$1S&e0X
                                                                                                g$ellipsis?$22622$1S&e0X
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$22716$1S&e0X
                                                                                                g$maps$22717$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$22718$1S&e0X
                                                                                                    g$lsnew$22719$1S&e0X)
                                                                                                  (values
                                                                                                    (g$gen-vector$22564$1S&e0X
                                                                                                      g$e$22619$1S&e0X
                                                                                                      g$ls$22713$1S&e0X
                                                                                                      g$lsnew$22719$1S&e0X)
                                                                                                    g$maps$22718$1S&e0X)))
                                                                                               g$maps$22717$1S&e0X
                                                                                               g$lsnew$22716$1S&e0X))))))
                                                                                      g$ls/false$22712$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$22720$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22721$1S&e0X)
                                                                                            (if g$ls/false$22721$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$22619$1S&e0X)
                                                                                                     g$maps$22621$1S&e0X)))
                                                                                                g$ls/false$22721$1S&e0X)
                                                                                              (g$syntax-violation$20808$1S&e0X
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$22720$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$22720$1S&e0X
                                                                                           '_))))
                                                                                     g$t$22711$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$22711$1S&e0X
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$22695$1S&e0X))))
                                                                     (g$syntax-dispatch$20689$1S&e0X
                                                                       g$t$22695$1S&e0X
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$22648$1S&e0X))))
                                                           (g$syntax-dispatch$20689$1S&e0X
                                                             g$t$22648$1S&e0X
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$22641$1S&e0X))))
                                                 (g$syntax-dispatch$20689$1S&e0X
                                                   g$t$22641$1S&e0X
                                                   '(any any)))))
                                             g$t$22628$1S&e0X))))
                                       (g$syntax-dispatch$20689$1S&e0X
                                         g$t$22628$1S&e0X
                                         'any))))
                                   g$t$22624$1S&e0X))))
                             (g$syntax-dispatch$20689$1S&e0X
                               g$t$22624$1S&e0X
                               'any))))
                         g$e$22619$1S&e0X))))
                   (g$gen-ref$22559$1S&e0X
                     (case-lambda
                       ((g$src$22605$1S&e0X
                          g$var$22606$1S&e0X
                          g$level$22607$1S&e0X
                          g$maps$22608$1S&e0X)
                        (if (g$=$13694$1S&e0X g$level$22607$1S&e0X '0)
                          (values
                            g$var$22606$1S&e0X
                            g$maps$22608$1S&e0X)
                          (if (null? g$maps$22608$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$22605$1S&e0X)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$22559$1S&e0X
                                   g$src$22605$1S&e0X
                                   g$var$22606$1S&e0X
                                   (- g$level$22607$1S&e0X '1)
                                   (cdr g$maps$22608$1S&e0X))))
                              (case-lambda
                                ((g$outer-var$22611$1S&e0X
                                   g$outer-maps$22612$1S&e0X)
                                 ((case-lambda
                                    ((g$outer-maps$22613$1S&e0X
                                       g$outer-var$22614$1S&e0X)
                                     ((case-lambda
                                        ((g$t$22615$1S&e0X)
                                         (if g$t$22615$1S&e0X
                                           ((case-lambda
                                              ((g$b$22616$1S&e0X)
                                               (values
                                                 (cdr g$b$22616$1S&e0X)
                                                 g$maps$22608$1S&e0X)))
                                            g$t$22615$1S&e0X)
                                           (begin
                                             '#f
                                             ((case-lambda
                                                ((g$inner-var$22617$1S&e0X)
                                                 (values
                                                   g$inner-var$22617$1S&e0X
                                                   (cons
                                                     (cons
                                                       (cons
                                                         g$outer-var$22614$1S&e0X
                                                         g$inner-var$22617$1S&e0X)
                                                       (car g$maps$22608$1S&e0X))
                                                     g$outer-maps$22613$1S&e0X))))
                                              (g$gen-lexical$20126$1S&e0X
                                                'tmp))))))
                                      (g$assq$11821$1S&e0X
                                        g$outer-var$22614$1S&e0X
                                        (car g$maps$22608$1S&e0X)))))
                                  g$outer-maps$22612$1S&e0X
                                  g$outer-var$22611$1S&e0X)))))))))
                   (g$gen-append$22560$1S&e0X
                     (case-lambda
                       ((g$x$22603$1S&e0X g$y$22604$1S&e0X)
                        (if (equal? g$y$22604$1S&e0X ''())
                          g$x$22603$1S&e0X
                          (list
                            'append
                            g$x$22603$1S&e0X
                            g$y$22604$1S&e0X)))))
                   (g$gen-mappend$22561$1S&e0X
                     (case-lambda
                       ((g$e$22601$1S&e0X g$map-env$22602$1S&e0X)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$22562$1S&e0X
                            g$e$22601$1S&e0X
                            g$map-env$22602$1S&e0X)))))
                   (g$gen-map$22562$1S&e0X
                     (case-lambda
                       ((g$e$22592$1S&e0X g$map-env$22593$1S&e0X)
                        ((case-lambda
                           ((g$formals$22594$1S&e0X
                              g$actuals$22595$1S&e0X)
                            (if (eq? (car g$e$22592$1S&e0X) 'ref)
                              (car g$actuals$22595$1S&e0X)
                              (if (g$for-all$11831$1S&e0X
                                    (case-lambda
                                      ((g$x$22596$1S&e0X)
                                       (if (eq? (car g$x$22596$1S&e0X)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$11825$1S&e0X
                                             (g$cadr$12684$1S&e0X
                                               g$x$22596$1S&e0X)
                                             g$formals$22594$1S&e0X))
                                         '#f)))
                                    (cdr g$e$22592$1S&e0X))
                                ((case-lambda
                                   ((g$args$22597$1S&e0X)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$22592$1S&e0X))
                                        g$args$22597$1S&e0X))))
                                 (g$map$11833$1S&e0X
                                   ((case-lambda
                                      ((g$r$22598$1S&e0X)
                                       (case-lambda
                                         ((g$x$22599$1S&e0X)
                                          (cdr (g$assq$11821$1S&e0X
                                                 (g$cadr$12684$1S&e0X
                                                   g$x$22599$1S&e0X)
                                                 g$r$22598$1S&e0X))))))
                                    (g$map$11833$1S&e0X
                                      cons
                                      g$formals$22594$1S&e0X
                                      g$actuals$22595$1S&e0X))
                                   (cdr g$e$22592$1S&e0X)))
                                (begin
                                  '#f
                                  (g$cons*$11835$1S&e0X
                                    'map
                                    (list
                                      'lambda
                                      g$formals$22594$1S&e0X
                                      g$e$22592$1S&e0X)
                                    g$actuals$22595$1S&e0X))))))
                         (g$map$11833$1S&e0X cdr g$map-env$22593$1S&e0X)
                         (g$map$11833$1S&e0X
                           (case-lambda
                             ((g$x$22600$1S&e0X)
                              (list 'ref (car g$x$22600$1S&e0X))))
                           g$map-env$22593$1S&e0X)))))
                   (g$gen-cons$22563$1S&e0X
                     (case-lambda
                       ((g$e$22584$1S&e0X
                          g$x$22585$1S&e0X
                          g$y$22586$1S&e0X
                          g$xnew$22587$1S&e0X
                          g$ynew$22588$1S&e0X)
                        ((case-lambda
                           ((g$t$22589$1S&e0X)
                            (if (eqv? g$t$22589$1S&e0X 'quote)
                              (if (eq? (car g$xnew$22587$1S&e0X) 'quote)
                                ((case-lambda
                                   ((g$xnew$22590$1S&e0X
                                      g$ynew$22591$1S&e0X)
                                    (if (if (eq? g$xnew$22590$1S&e0X
                                                 g$x$22585$1S&e0X)
                                          (begin
                                            '#f
                                            (eq? g$ynew$22591$1S&e0X
                                                 g$y$22586$1S&e0X))
                                          '#f)
                                      (list 'quote g$e$22584$1S&e0X)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$22590$1S&e0X
                                          g$ynew$22591$1S&e0X)))))
                                 (g$cadr$12684$1S&e0X
                                   g$xnew$22587$1S&e0X)
                                 (g$cadr$12684$1S&e0X
                                   g$ynew$22588$1S&e0X))
                                (if (null?
                                      (g$cadr$12684$1S&e0X
                                        g$ynew$22588$1S&e0X))
                                  (list 'list g$xnew$22587$1S&e0X)
                                  (list
                                    'cons
                                    g$xnew$22587$1S&e0X
                                    g$ynew$22588$1S&e0X)))
                              (if (eqv? g$t$22589$1S&e0X 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$22587$1S&e0X
                                    (cdr g$ynew$22588$1S&e0X)))
                                (begin
                                  '#f
                                  (list
                                    'cons
                                    g$xnew$22587$1S&e0X
                                    g$ynew$22588$1S&e0X))))))
                         (car g$ynew$22588$1S&e0X)))))
                   (g$gen-vector$22564$1S&e0X
                     (case-lambda
                       ((g$e$22581$1S&e0X
                          g$ls$22582$1S&e0X
                          g$lsnew$22583$1S&e0X)
                        (if (eq? (car g$lsnew$22583$1S&e0X) 'quote)
                          (if (eq? (g$cadr$12684$1S&e0X
                                     g$lsnew$22583$1S&e0X)
                                   g$ls$22582$1S&e0X)
                            (list 'quote g$e$22581$1S&e0X)
                            (list
                              'quote
                              (g$list->vector$12676$1S&e0X
                                (g$cadr$12684$1S&e0X
                                  g$lsnew$22583$1S&e0X))))
                          (if (eq? (car g$lsnew$22583$1S&e0X) 'list)
                            (cons 'vector (cdr g$lsnew$22583$1S&e0X))
                            (begin
                              '#f
                              (list
                                'list->vector
                                g$lsnew$22583$1S&e0X)))))))
                   (g$regen$22565$1S&e0X
                     (case-lambda
                       ((g$x$22578$1S&e0X)
                        ((case-lambda
                           ((g$t$22579$1S&e0X)
                            (if (eqv? g$t$22579$1S&e0X 'ref)
                              (g$cadr$12684$1S&e0X g$x$22578$1S&e0X)
                              (if (eqv? g$t$22579$1S&e0X 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$12684$1S&e0X
                                    g$x$22578$1S&e0X))
                                (if (eqv? g$t$22579$1S&e0X 'quote)
                                  (list
                                    'quote
                                    (g$cadr$12684$1S&e0X
                                      g$x$22578$1S&e0X))
                                  (if (eqv? g$t$22579$1S&e0X 'lambda)
                                    (g$build-lambda$20113$1S&e0X
                                      '#f
                                      (g$cadr$12684$1S&e0X
                                        g$x$22578$1S&e0X)
                                      (g$regen$22565$1S&e0X
                                        (g$caddr$12690$1S&e0X
                                          g$x$22578$1S&e0X)))
                                    (if (eqv? g$t$22579$1S&e0X 'map)
                                      ((case-lambda
                                         ((g$ls$22580$1S&e0X)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$22580$1S&e0X)))
                                       (g$map$11833$1S&e0X
                                         g$regen$22565$1S&e0X
                                         (cdr g$x$22578$1S&e0X)))
                                      (begin
                                        '#f
                                        (cons
                                          (list
                                            'primitive
                                            (car g$x$22578$1S&e0X))
                                          (g$map$11833$1S&e0X
                                            g$regen$22565$1S&e0X
                                            (cdr g$x$22578$1S&e0X)))))))))))
                         (car g$x$22578$1S&e0X))))))
           (case-lambda
             ((g$e$22566$1S&e0X g$r$22567$1S&e0X g$mr$22568$1S&e0X)
              ((case-lambda
                 ((g$t$22569$1S&e0X)
                  ((case-lambda
                     ((g$ls/false$22570$1S&e0X)
                      (if g$ls/false$22570$1S&e0X
                        (apply
                          (case-lambda
                            ((g$x$22571$1S&e0X)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$22558$1S&e0X
                                    g$e$22566$1S&e0X
                                    g$x$22571$1S&e0X
                                    g$r$22567$1S&e0X
                                    '()
                                    g$ellipsis?$20690$1S&e0X
                                    '#f)))
                               (case-lambda
                                 ((g$e$22574$1S&e0X g$maps$22575$1S&e0X)
                                  ((case-lambda
                                     ((g$maps$22576$1S&e0X
                                        g$e$22577$1S&e0X)
                                      (g$regen$22565$1S&e0X
                                        g$e$22577$1S&e0X)))
                                   g$maps$22575$1S&e0X
                                   g$e$22574$1S&e0X))))))
                          g$ls/false$22570$1S&e0X)
                        (g$syntax-violation$20808$1S&e0X
                          '#f
                          '"invalid syntax"
                          g$t$22569$1S&e0X))))
                   (g$syntax-dispatch$20689$1S&e0X
                     g$t$22569$1S&e0X
                     '(_ any)))))
               g$e$22566$1S&e0X))))))))
   (g$core-macro-transformer$20696$1S&e0X
     g$core-macro-transformer$24291$1S&e0X
     (case-lambda
       ((g$name$22722$1S&e0X)
        ((case-lambda
           ((g$t$22723$1S&e0X)
            (if (eqv? g$t$22723$1S&e0X 'quote)
              g$quote-transformer$20649$1S&e0X
              (if (eqv? g$t$22723$1S&e0X 'lambda)
                g$lambda-transformer$20651$1S&e0X
                (if (eqv? g$t$22723$1S&e0X 'case-lambda)
                  g$case-lambda-transformer$20650$1S&e0X
                  (if (eqv? g$t$22723$1S&e0X 'letrec)
                    g$letrec-transformer$20639$1S&e0X
                    (if (eqv? g$t$22723$1S&e0X 'letrec*)
                      g$letrec*-transformer$20640$1S&e0X
                      (if (eqv? g$t$22723$1S&e0X 'if)
                        g$if-transformer$20647$1S&e0X
                        (if (eqv? g$t$22723$1S&e0X 'foreign-call)
                          g$foreign-call-transformer$20687$1S&e0X
                          (if (eqv? g$t$22723$1S&e0X 'syntax-case)
                            g$syntax-case-transformer$20693$1S&e0X
                            (if (eqv? g$t$22723$1S&e0X 'syntax)
                              g$syntax-transformer$20695$1S&e0X
                              (if (eqv?
                                    g$t$22723$1S&e0X
                                    'type-descriptor)
                                g$type-descriptor-transformer$20642$1S&e0X
                                (if (eqv?
                                      g$t$22723$1S&e0X
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$20643$1S&e0X
                                  (if (eqv?
                                        g$t$22723$1S&e0X
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$20644$1S&e0X
                                    (if (eqv?
                                          g$t$22723$1S&e0X
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$20641$1S&e0X
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'macro-transformer
                                          '"BUG: cannot find transformer"
                                          g$name$22722$1S&e0X)))))))))))))))))
         g$name$22722$1S&e0X))))
   (g$file-options-macro$20697$1S&e0X
     g$file-options-macro$24292$1S&e0X
     (case-lambda
       ((g$x$22724$1S&e0X)
        (letrec* ((g$valid-option?$22725$1S&e0X
                    (case-lambda
                      ((g$x$22730$1S&e0X)
                       (if (g$id?$20191$1S&e0X g$x$22730$1S&e0X)
                         (begin
                           '#f
                           (g$memq$11825$1S&e0X
                             (g$id->sym$20192$1S&e0X g$x$22730$1S&e0X)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$22726$1S&e0X)
              ((case-lambda
                 ((g$ls/false$22727$1S&e0X)
                  (if (if g$ls/false$22727$1S&e0X
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$22728$1S&e0X)
                               (if (g$for-all$11831$1S&e0X
                                     g$valid-option?$22725$1S&e0X
                                     g$opt*$22728$1S&e0X)
                                 (begin
                                   '#f
                                   (g$file-options-spec$19054$1S&e0X
                                     (g$map$11833$1S&e0X
                                       g$id->sym$20192$1S&e0X
                                       g$opt*$22728$1S&e0X)))
                                 '#f)))
                            g$ls/false$22727$1S&e0X))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$22729$1S&e0X)
                         (g$bless$20652$1S&e0X
                           (list
                             'quote
                             (g$file-options-spec$19054$1S&e0X
                               (g$map$11833$1S&e0X
                                 g$id->sym$20192$1S&e0X
                                 g$opt*$22729$1S&e0X))))))
                      g$ls/false$22727$1S&e0X)
                    (g$syntax-violation$20808$1S&e0X
                      '#f
                      '"invalid syntax"
                      g$t$22726$1S&e0X))))
               (g$syntax-dispatch$20689$1S&e0X
                 g$t$22726$1S&e0X
                 '(_ . each-any)))))
           g$x$22724$1S&e0X)))))
   (g$symbol-macro$20698$1S&e0X
     g$symbol-macro$24293$1S&e0X
     (case-lambda
       ((g$x$22731$1S&e0X g$set$22732$1S&e0X)
        ((case-lambda
           ((g$t$22733$1S&e0X)
            ((case-lambda
               ((g$ls/false$22734$1S&e0X)
                (if (if g$ls/false$22734$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$22735$1S&e0X)
                             (if (g$id?$20191$1S&e0X
                                   g$name$22735$1S&e0X)
                               (begin
                                 '#f
                                 (g$memq$11825$1S&e0X
                                   (g$id->sym$20192$1S&e0X
                                     g$name$22735$1S&e0X)
                                   g$set$22732$1S&e0X))
                               '#f)))
                          g$ls/false$22734$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$22736$1S&e0X)
                       (g$bless$20652$1S&e0X
                         (list 'quote g$name$22736$1S&e0X))))
                    g$ls/false$22734$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$22733$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22733$1S&e0X
               '(_ any)))))
         g$x$22731$1S&e0X))))
   (g$macro-transformer$20699$1S&e0X
     g$macro-transformer$24294$1S&e0X
     (case-lambda
       ((g$x$22737$1S&e0X)
        (if (g$procedure?$12667$1S&e0X g$x$22737$1S&e0X)
          g$x$22737$1S&e0X
          (if (g$symbol?$12665$1S&e0X g$x$22737$1S&e0X)
            ((case-lambda
               ((g$t$22738$1S&e0X)
                (if (eqv? g$t$22738$1S&e0X 'define-record-type)
                  g$define-record-type-macro$20683$1S&e0X
                  (if (eqv? g$t$22738$1S&e0X 'define-struct)
                    g$define-struct-macro$20682$1S&e0X
                    (if (eqv? g$t$22738$1S&e0X 'include)
                      g$include-macro$20677$1S&e0X
                      (if (eqv? g$t$22738$1S&e0X 'cond)
                        g$cond-macro$20675$1S&e0X
                        (if (eqv? g$t$22738$1S&e0X 'let)
                          g$let-macro$20655$1S&e0X
                          (if (eqv? g$t$22738$1S&e0X 'do)
                            g$do-macro$20671$1S&e0X
                            (if (eqv? g$t$22738$1S&e0X 'or)
                              g$or-macro$20673$1S&e0X
                              (if (eqv? g$t$22738$1S&e0X 'and)
                                g$and-macro$20674$1S&e0X
                                (if (eqv? g$t$22738$1S&e0X 'let*)
                                  g$let*-macro$20672$1S&e0X
                                  (if (eqv?
                                        g$t$22738$1S&e0X
                                        'let-values)
                                    g$let-values-macro$20656$1S&e0X
                                    (if (eqv?
                                          g$t$22738$1S&e0X
                                          'let*-values)
                                      g$let*-values-macro$20657$1S&e0X
                                      (if (eqv?
                                            g$t$22738$1S&e0X
                                            'syntax-rules)
                                        g$syntax-rules-macro$20679$1S&e0X
                                        (if (eqv?
                                              g$t$22738$1S&e0X
                                              'quasiquote)
                                          g$quasiquote-macro$20680$1S&e0X
                                          (if (eqv?
                                                g$t$22738$1S&e0X
                                                'quasisyntax)
                                            g$quasisyntax-macro$20681$1S&e0X
                                            (if (eqv?
                                                  g$t$22738$1S&e0X
                                                  'with-syntax)
                                              g$with-syntax-macro$20653$1S&e0X
                                              (if (eqv?
                                                    g$t$22738$1S&e0X
                                                    'when)
                                                g$when-macro$20645$1S&e0X
                                                (if (eqv?
                                                      g$t$22738$1S&e0X
                                                      'unless)
                                                  g$unless-macro$20646$1S&e0X
                                                  (if (eqv?
                                                        g$t$22738$1S&e0X
                                                        'case)
                                                    g$case-macro$20648$1S&e0X
                                                    (if (eqv?
                                                          g$t$22738$1S&e0X
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$20670$1S&e0X
                                                      (if (eqv?
                                                            g$t$22738$1S&e0X
                                                            'time)
                                                        g$time-macro$20666$1S&e0X
                                                        (if (eqv?
                                                              g$t$22738$1S&e0X
                                                              'delay)
                                                          g$delay-macro$20667$1S&e0X
                                                          (if (eqv?
                                                                g$t$22738$1S&e0X
                                                                'assert)
                                                            g$assert-macro$20668$1S&e0X
                                                            (if (eqv?
                                                                  g$t$22738$1S&e0X
                                                                  'endianness)
                                                              g$endianness-macro$20669$1S&e0X
                                                              (if (eqv?
                                                                    g$t$22738$1S&e0X
                                                                    'guard)
                                                                g$guard-macro$20664$1S&e0X
                                                                (if (eqv?
                                                                      g$t$22738$1S&e0X
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$20665$1S&e0X
                                                                  (if (eqv?
                                                                        g$t$22738$1S&e0X
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$20658$1S&e0X
                                                                    (if (eqv?
                                                                          g$t$22738$1S&e0X
                                                                          'trace-define)
                                                                      g$trace-define-macro$20659$1S&e0X
                                                                      (if (eqv?
                                                                            g$t$22738$1S&e0X
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$20660$1S&e0X
                                                                        (if (eqv?
                                                                              g$t$22738$1S&e0X
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$20662$1S&e0X
                                                                          (if (eqv?
                                                                                g$t$22738$1S&e0X
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$20663$1S&e0X
                                                                            (if (eqv?
                                                                                  g$t$22738$1S&e0X
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$20684$1S&e0X
                                                                              (if (eqv?
                                                                                    g$t$22738$1S&e0X
                                                                                    'parameterize)
                                                                                g$parameterize-macro$20686$1S&e0X
                                                                                (if (eqv?
                                                                                      g$t$22738$1S&e0X
                                                                                      'include-into)
                                                                                  g$include-into-macro$20678$1S&e0X
                                                                                  (if (eqv?
                                                                                        g$t$22738$1S&e0X
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$22739$1S&e0X)
                                                                                       (g$symbol-macro$20698$1S&e0X
                                                                                         g$x$22739$1S&e0X
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$22738$1S&e0X
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$22740$1S&e0X)
                                                                                         (g$symbol-macro$20698$1S&e0X
                                                                                           g$x$22740$1S&e0X
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$22738$1S&e0X
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$22741$1S&e0X)
                                                                                           (g$symbol-macro$20698$1S&e0X
                                                                                             g$x$22741$1S&e0X
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$22738$1S&e0X
                                                                                              'file-options)
                                                                                          g$file-options-macro$20697$1S&e0X
                                                                                          (if (g$memv$11826$1S&e0X
                                                                                                g$t$22738$1S&e0X
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$20685$1S&e0X
                                                                                            (begin
                                                                                              '#f
                                                                                              (error
                                                                                                'macro-transformer
                                                                                                '"BUG: invalid macro"
                                                                                                g$x$22737$1S&e0X))))))))))))))))))))))))))))))))))))))))))
             g$x$22737$1S&e0X)
            (begin
              '#f
              (error
                'core-macro-transformer
                '"BUG: invalid macro"
                g$x$22737$1S&e0X)))))))
   (g$local-macro-transformer$20700$1S&e0X
     g$local-macro-transformer$24295$1S&e0X
     (case-lambda ((g$x$22742$1S&e0X) (car g$x$22742$1S&e0X))))
   (g$do-macro-call$20701$1S&e0X
     g$do-macro-call$24296$1S&e0X
     (case-lambda
       ((g$transformer$22743$1S&e0X
          g$expr$22744$1S&e0X
          g$r$22745$1S&e0X)
        (letrec* ((g$return$22746$1S&e0X
                    (case-lambda
                      ((g$x$22754$1S&e0X)
                       (begin
                         ((letrec ((g$f$22755$1S&e0X
                                     (case-lambda
                                       ((g$x$22756$1S&e0X)
                                        (if (not (g$stx?$20163$1S&e0X
                                                   g$x$22756$1S&e0X))
                                          (if (pair? g$x$22756$1S&e0X)
                                            (begin
                                              (g$f$22755$1S&e0X
                                                (car g$x$22756$1S&e0X))
                                              (g$f$22755$1S&e0X
                                                (cdr g$x$22756$1S&e0X)))
                                            (if (g$vector?$12663$1S&e0X
                                                  g$x$22756$1S&e0X)
                                              (g$vector-for-each$12733$1S&e0X
                                                g$f$22755$1S&e0X
                                                g$x$22756$1S&e0X)
                                              (if (g$symbol?$12665$1S&e0X
                                                    g$x$22756$1S&e0X)
                                                (g$syntax-violation$20808$1S&e0X
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$22744$1S&e0X
                                                  g$x$22756$1S&e0X)
                                                (void))))
                                          (void))))))
                            g$f$22755$1S&e0X)
                          g$x$22754$1S&e0X)
                         (g$add-mark$20180$1S&e0X
                           (g$gen-mark$20175$1S&e0X)
                           g$x$22754$1S&e0X
                           g$expr$22744$1S&e0X))))))
          ((case-lambda
             ((g$x$22747$1S&e0X)
              (if (g$procedure?$12667$1S&e0X g$x$22747$1S&e0X)
                (g$return$22746$1S&e0X
                  (g$x$22747$1S&e0X
                    (case-lambda
                      ((g$id$22748$1S&e0X)
                       (begin
                         (if (not (g$id?$20191$1S&e0X
                                    g$id$22748$1S&e0X))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$22748$1S&e0X)
                           (void))
                         ((case-lambda
                            ((g$label$22749$1S&e0X)
                             ((case-lambda
                                ((g$binding$22750$1S&e0X)
                                 ((case-lambda
                                    ((g$t$22751$1S&e0X)
                                     (if (eqv?
                                           g$t$22751$1S&e0X
                                           'local-ctv)
                                       (g$cadr$12684$1S&e0X
                                         g$binding$22750$1S&e0X)
                                       (if (eqv?
                                             g$t$22751$1S&e0X
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$22752$1S&e0X
                                               g$loc$22753$1S&e0X)
                                             (begin
                                               (g$visit-library$19898$1S&e0X
                                                 g$lib$22752$1S&e0X)
                                               (symbol-value
                                                 g$loc$22753$1S&e0X))))
                                          (g$cadr$12684$1S&e0X
                                            g$binding$22750$1S&e0X)
                                          (g$cddr$12686$1S&e0X
                                            g$binding$22750$1S&e0X))
                                         (begin '#f '#f)))))
                                  (car g$binding$22750$1S&e0X))))
                              (g$label->binding$20206$1S&e0X
                                g$label$22749$1S&e0X
                                g$r$22745$1S&e0X))))
                          (g$id->label$20204$1S&e0X
                            g$id$22748$1S&e0X)))))))
                (g$return$22746$1S&e0X g$x$22747$1S&e0X))))
           (g$transformer$22743$1S&e0X
             (g$add-mark$20180$1S&e0X
               g$anti-mark$20176$1S&e0X
               g$expr$22744$1S&e0X
               '#f)))))))
   (g$chi-macro$20702$1S&e0X
     g$chi-macro$24297$1S&e0X
     (case-lambda
       ((g$p$22757$1S&e0X g$e$22758$1S&e0X g$r$22759$1S&e0X)
        (g$do-macro-call$20701$1S&e0X
          (g$macro-transformer$20699$1S&e0X g$p$22757$1S&e0X)
          g$e$22758$1S&e0X
          g$r$22759$1S&e0X))))
   (g$chi-local-macro$20703$1S&e0X
     g$chi-local-macro$24298$1S&e0X
     (case-lambda
       ((g$p$22760$1S&e0X g$e$22761$1S&e0X g$r$22762$1S&e0X)
        (g$do-macro-call$20701$1S&e0X
          (g$local-macro-transformer$20700$1S&e0X g$p$22760$1S&e0X)
          g$e$22761$1S&e0X
          g$r$22762$1S&e0X))))
   (g$chi-global-macro$20704$1S&e0X
     g$chi-global-macro$24299$1S&e0X
     (case-lambda
       ((g$p$22763$1S&e0X g$e$22764$1S&e0X g$r$22765$1S&e0X)
        ((case-lambda
           ((g$lib$22766$1S&e0X g$loc$22767$1S&e0X)
            (begin
              (g$visit-library$19898$1S&e0X g$lib$22766$1S&e0X)
              ((case-lambda
                 ((g$x$22768$1S&e0X)
                  ((case-lambda
                     ((g$transformer$22769$1S&e0X)
                      (g$do-macro-call$20701$1S&e0X
                        g$transformer$22769$1S&e0X
                        g$e$22764$1S&e0X
                        g$r$22765$1S&e0X)))
                   (if (g$procedure?$12667$1S&e0X g$x$22768$1S&e0X)
                     g$x$22768$1S&e0X
                     (begin
                       '#f
                       (assertion-violation
                         'chi-global-macro
                         '"BUG: not a procedure"
                         g$x$22768$1S&e0X))))))
               (symbol-value g$loc$22767$1S&e0X)))))
         (car g$p$22763$1S&e0X)
         (cdr g$p$22763$1S&e0X)))))
   (g$chi-expr*$20705$1S&e0X
     g$chi-expr*$24300$1S&e0X
     (case-lambda
       ((g$e*$22770$1S&e0X g$r$22771$1S&e0X g$mr$22772$1S&e0X)
        (if (null? g$e*$22770$1S&e0X)
          '()
          (begin
            '#f
            ((case-lambda
               ((g$e$22773$1S&e0X)
                (cons
                  g$e$22773$1S&e0X
                  (g$chi-expr*$20705$1S&e0X
                    (cdr g$e*$22770$1S&e0X)
                    g$r$22771$1S&e0X
                    g$mr$22772$1S&e0X))))
             (g$chi-expr$20707$1S&e0X
               (car g$e*$22770$1S&e0X)
               g$r$22771$1S&e0X
               g$mr$22772$1S&e0X)))))))
   (g$chi-application$20706$1S&e0X
     g$chi-application$24301$1S&e0X
     (case-lambda
       ((g$e$22774$1S&e0X g$r$22775$1S&e0X g$mr$22776$1S&e0X)
        ((case-lambda
           ((g$t$22777$1S&e0X)
            ((case-lambda
               ((g$ls/false$22778$1S&e0X)
                (if g$ls/false$22778$1S&e0X
                  (apply
                    (case-lambda
                      ((g$rator$22779$1S&e0X g$rands$22780$1S&e0X)
                       ((case-lambda
                          ((g$rator$22781$1S&e0X)
                           (cons
                             g$rator$22781$1S&e0X
                             (g$chi-expr*$20705$1S&e0X
                               g$rands$22780$1S&e0X
                               g$r$22775$1S&e0X
                               g$mr$22776$1S&e0X))))
                        (g$chi-expr$20707$1S&e0X
                          g$rator$22779$1S&e0X
                          g$r$22775$1S&e0X
                          g$mr$22776$1S&e0X))))
                    g$ls/false$22778$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$22777$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22777$1S&e0X
               '(any . each-any)))))
         g$e$22774$1S&e0X))))
   (g$chi-expr$20707$1S&e0X
     g$chi-expr$24302$1S&e0X
     (case-lambda
       ((g$e$22782$1S&e0X g$r$22783$1S&e0X g$mr$22784$1S&e0X)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$20211$1S&e0X
               g$e$22782$1S&e0X
               g$r$22783$1S&e0X)))
          (case-lambda
            ((g$type$22788$1S&e0X
               g$value$22789$1S&e0X
               g$kwd$22790$1S&e0X)
             ((case-lambda
                ((g$kwd$22791$1S&e0X
                   g$value$22792$1S&e0X
                   g$type$22793$1S&e0X)
                 ((case-lambda
                    ((g$t$22794$1S&e0X)
                     (if (eqv? g$t$22794$1S&e0X 'core-macro)
                       ((case-lambda
                          ((g$transformer$22795$1S&e0X)
                           (g$transformer$22795$1S&e0X
                             g$e$22782$1S&e0X
                             g$r$22783$1S&e0X
                             g$mr$22784$1S&e0X)))
                        (g$core-macro-transformer$20696$1S&e0X
                          g$value$22792$1S&e0X))
                       (if (eqv? g$t$22794$1S&e0X 'global)
                         ((case-lambda
                            ((g$lib$22796$1S&e0X)
                             ((case-lambda
                                ((g$loc$22797$1S&e0X)
                                 (begin
                                   ((g$inv-collector$20744$1S&e0X)
                                    g$lib$22796$1S&e0X)
                                   g$loc$22797$1S&e0X)))
                              (cdr g$value$22792$1S&e0X))))
                          (car g$value$22792$1S&e0X))
                         (if (eqv? g$t$22794$1S&e0X 'core-prim)
                           ((case-lambda
                              ((g$name$22798$1S&e0X)
                               (list 'primitive g$name$22798$1S&e0X)))
                            g$value$22792$1S&e0X)
                           (if (eqv? g$t$22794$1S&e0X 'call)
                             (g$chi-application$20706$1S&e0X
                               g$e$22782$1S&e0X
                               g$r$22783$1S&e0X
                               g$mr$22784$1S&e0X)
                             (if (eqv? g$t$22794$1S&e0X 'lexical)
                               ((case-lambda
                                  ((g$lex$22799$1S&e0X)
                                   g$lex$22799$1S&e0X))
                                (g$lexical-var$20633$1S&e0X
                                  g$value$22792$1S&e0X))
                               (if (g$memv$11826$1S&e0X
                                     g$t$22794$1S&e0X
                                     '(global-macro global-macro!))
                                 (g$chi-expr$20707$1S&e0X
                                   (g$chi-global-macro$20704$1S&e0X
                                     g$value$22792$1S&e0X
                                     g$e$22782$1S&e0X
                                     g$r$22783$1S&e0X)
                                   g$r$22783$1S&e0X
                                   g$mr$22784$1S&e0X)
                                 (if (g$memv$11826$1S&e0X
                                       g$t$22794$1S&e0X
                                       '(local-macro local-macro!))
                                   (g$chi-expr$20707$1S&e0X
                                     (g$chi-local-macro$20703$1S&e0X
                                       g$value$22792$1S&e0X
                                       g$e$22782$1S&e0X
                                       g$r$22783$1S&e0X)
                                     g$r$22783$1S&e0X
                                     g$mr$22784$1S&e0X)
                                   (if (g$memv$11826$1S&e0X
                                         g$t$22794$1S&e0X
                                         '(macro macro!))
                                     (g$chi-expr$20707$1S&e0X
                                       (g$chi-macro$20702$1S&e0X
                                         g$value$22792$1S&e0X
                                         g$e$22782$1S&e0X
                                         g$r$22783$1S&e0X)
                                       g$r$22783$1S&e0X
                                       g$mr$22784$1S&e0X)
                                     (if (eqv?
                                           g$t$22794$1S&e0X
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$22800$1S&e0X)
                                           (list
                                             'quote
                                             g$datum$22800$1S&e0X)))
                                        g$value$22792$1S&e0X)
                                       (if (eqv? g$t$22794$1S&e0X 'set!)
                                         (g$chi-set!$20708$1S&e0X
                                           g$e$22782$1S&e0X
                                           g$r$22783$1S&e0X
                                           g$mr$22784$1S&e0X)
                                         (if (eqv?
                                               g$t$22794$1S&e0X
                                               'begin)
                                           ((case-lambda
                                              ((g$t$22801$1S&e0X)
                                               ((case-lambda
                                                  ((g$ls/false$22802$1S&e0X)
                                                   (if g$ls/false$22802$1S&e0X
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$22803$1S&e0X
                                                            g$x*$22804$1S&e0X)
                                                          (g$build-sequence$20116$1S&e0X
                                                            '#f
                                                            (g$chi-expr*$20705$1S&e0X
                                                              (cons
                                                                g$x$22803$1S&e0X
                                                                g$x*$22804$1S&e0X)
                                                              g$r$22783$1S&e0X
                                                              g$mr$22784$1S&e0X))))
                                                       g$ls/false$22802$1S&e0X)
                                                     (g$syntax-violation$20808$1S&e0X
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22801$1S&e0X))))
                                                (g$syntax-dispatch$20689$1S&e0X
                                                  g$t$22801$1S&e0X
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$22782$1S&e0X)
                                           (if (g$memv$11826$1S&e0X
                                                 g$t$22794$1S&e0X
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$22805$1S&e0X)
                                                 ((case-lambda
                                                    ((g$ls/false$22806$1S&e0X)
                                                     (if (if g$ls/false$22806$1S&e0X
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$22807$1S&e0X
                                                                    g$xrhs*$22808$1S&e0X
                                                                    g$xbody$22809$1S&e0X
                                                                    g$xbody*$22810$1S&e0X)
                                                                  (if (not (g$valid-bound-ids?$20196$1S&e0X
                                                                             g$xlhs*$22807$1S&e0X))
                                                                    (g$syntax-violation$20808$1S&e0X
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$22782$1S&e0X)
                                                                    (void))))
                                                               g$ls/false$22806$1S&e0X))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$22811$1S&e0X
                                                              g$xrhs*$22812$1S&e0X
                                                              g$xbody$22813$1S&e0X
                                                              g$xbody*$22814$1S&e0X)
                                                            ((case-lambda
                                                               ((g$xlab*$22815$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$xrib$22816$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$xb*$22817$1S&e0X)
                                                                        (g$build-sequence$20116$1S&e0X
                                                                          '#f
                                                                          (g$chi-expr*$20705$1S&e0X
                                                                            (g$map$11833$1S&e0X
                                                                              (case-lambda
                                                                                ((g$x$22818$1S&e0X)
                                                                                 (g$add-subst$20181$1S&e0X
                                                                                   g$xrib$22816$1S&e0X
                                                                                   g$x$22818$1S&e0X)))
                                                                              (cons
                                                                                g$xbody$22813$1S&e0X
                                                                                g$xbody*$22814$1S&e0X))
                                                                            (append
                                                                              (g$map$11833$1S&e0X
                                                                                cons
                                                                                g$xlab*$22815$1S&e0X
                                                                                g$xb*$22817$1S&e0X)
                                                                              g$r$22783$1S&e0X)
                                                                            (append
                                                                              (g$map$11833$1S&e0X
                                                                                cons
                                                                                g$xlab*$22815$1S&e0X
                                                                                g$xb*$22817$1S&e0X)
                                                                              g$mr$22784$1S&e0X)))))
                                                                     (g$map$11833$1S&e0X
                                                                       (case-lambda
                                                                         ((g$x$22819$1S&e0X)
                                                                          (g$make-eval-transformer$20239$1S&e0X
                                                                            (g$expand-transformer$20737$1S&e0X
                                                                              (if (eq? g$type$22793$1S&e0X
                                                                                       'let-syntax)
                                                                                g$x$22819$1S&e0X
                                                                                (g$add-subst$20181$1S&e0X
                                                                                  g$xrib$22816$1S&e0X
                                                                                  g$x$22819$1S&e0X))
                                                                              g$mr$22784$1S&e0X))))
                                                                       g$xrhs*$22812$1S&e0X))))
                                                                 (g$make-full-rib$20157$1S&e0X
                                                                   g$xlhs*$22811$1S&e0X
                                                                   g$xlab*$22815$1S&e0X))))
                                                             (g$map$11833$1S&e0X
                                                               g$gen-label$20128$1S&e0X
                                                               g$xlhs*$22811$1S&e0X))))
                                                         g$ls/false$22806$1S&e0X)
                                                       (g$syntax-violation$20808$1S&e0X
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$22805$1S&e0X))))
                                                  (g$syntax-dispatch$20689$1S&e0X
                                                    g$t$22805$1S&e0X
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$22782$1S&e0X)
                                             (if (eqv?
                                                   g$t$22794$1S&e0X
                                                   'displaced-lexical)
                                               (g$syntax-violation$20808$1S&e0X
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$22782$1S&e0X)
                                               (if (eqv?
                                                     g$t$22794$1S&e0X
                                                     'syntax)
                                                 (g$syntax-violation$20808$1S&e0X
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$22782$1S&e0X)
                                                 (if (g$memv$11826$1S&e0X
                                                       g$t$22794$1S&e0X
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$20808$1S&e0X
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$22820$1S&e0X)
                                                           (if (eqv?
                                                                 g$t$22820$1S&e0X
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$22820$1S&e0X
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$22820$1S&e0X
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$22820$1S&e0X
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$22820$1S&e0X
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$22820$1S&e0X
                                                                           'export)
                                                                       '"an export declaration"
                                                                       (begin
                                                                         '#f
                                                                         '"a non-expression")))))))))
                                                        g$type$22793$1S&e0X)
                                                       '" was found where an expression was expected")
                                                     g$e$22782$1S&e0X)
                                                   (if (eqv?
                                                         g$t$22794$1S&e0X
                                                         'mutable)
                                                     (g$syntax-violation$20808$1S&e0X
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$22782$1S&e0X)
                                                     (begin
                                                       '#f
                                                       (g$syntax-violation$20808$1S&e0X
                                                         '#f
                                                         '"invalid expression"
                                                         g$e$22782$1S&e0X))))))))))))))))))))
                  g$type$22793$1S&e0X)))
              g$kwd$22790$1S&e0X
              g$value$22789$1S&e0X
              g$type$22788$1S&e0X)))))))
   (g$chi-set!$20708$1S&e0X
     g$chi-set!$24303$1S&e0X
     (case-lambda
       ((g$e$22821$1S&e0X g$r$22822$1S&e0X g$mr$22823$1S&e0X)
        ((case-lambda
           ((g$t$22824$1S&e0X)
            ((case-lambda
               ((g$ls/false$22825$1S&e0X)
                (if (if g$ls/false$22825$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$22826$1S&e0X g$v$22827$1S&e0X)
                             (g$id?$20191$1S&e0X g$x$22826$1S&e0X)))
                          g$ls/false$22825$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$22828$1S&e0X g$v$22829$1S&e0X)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$20211$1S&e0X
                              g$x$22828$1S&e0X
                              g$r$22822$1S&e0X)))
                         (case-lambda
                           ((g$type$22833$1S&e0X
                              g$value$22834$1S&e0X
                              g$kwd$22835$1S&e0X)
                            ((case-lambda
                               ((g$kwd$22836$1S&e0X
                                  g$value$22837$1S&e0X
                                  g$type$22838$1S&e0X)
                                ((case-lambda
                                   ((g$t$22839$1S&e0X)
                                    (if (eqv? g$t$22839$1S&e0X 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$20635$1S&e0X
                                          g$value$22837$1S&e0X
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$20633$1S&e0X
                                            g$value$22837$1S&e0X)
                                          (g$chi-expr$20707$1S&e0X
                                            g$v$22829$1S&e0X
                                            g$r$22822$1S&e0X
                                            g$mr$22823$1S&e0X)))
                                      (if (eqv?
                                            g$t$22839$1S&e0X
                                            'core-prim)
                                        (g$syntax-violation$20808$1S&e0X
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$22821$1S&e0X)
                                        (if (eqv?
                                              g$t$22839$1S&e0X
                                              'global)
                                          (g$syntax-violation$20808$1S&e0X
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$22821$1S&e0X)
                                          (if (eqv?
                                                g$t$22839$1S&e0X
                                                'global-macro!)
                                            (g$chi-expr$20707$1S&e0X
                                              (g$chi-global-macro$20704$1S&e0X
                                                g$value$22837$1S&e0X
                                                g$e$22821$1S&e0X
                                                g$r$22822$1S&e0X)
                                              g$r$22822$1S&e0X
                                              g$mr$22823$1S&e0X)
                                            (if (eqv?
                                                  g$t$22839$1S&e0X
                                                  'local-macro!)
                                              (g$chi-expr$20707$1S&e0X
                                                (g$chi-local-macro$20703$1S&e0X
                                                  g$value$22837$1S&e0X
                                                  g$e$22821$1S&e0X
                                                  g$r$22822$1S&e0X)
                                                g$r$22822$1S&e0X
                                                g$mr$22823$1S&e0X)
                                              (if (eqv?
                                                    g$t$22839$1S&e0X
                                                    'mutable)
                                                (g$syntax-violation$20808$1S&e0X
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$22821$1S&e0X)
                                                (begin
                                                  '#f
                                                  (g$syntax-violation$20808$1S&e0X
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$22821$1S&e0X))))))))))
                                 g$type$22838$1S&e0X)))
                             g$kwd$22835$1S&e0X
                             g$value$22834$1S&e0X
                             g$type$22833$1S&e0X))))))
                    g$ls/false$22825$1S&e0X)
                  (g$syntax-violation$20808$1S&e0X
                    '#f
                    '"invalid syntax"
                    g$t$22824$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22824$1S&e0X
               '(_ any any)))))
         g$e$22821$1S&e0X))))
   (g$verify-formals$20709$1S&e0X
     g$verify-formals$24304$1S&e0X
     (case-lambda
       ((g$fmls$22840$1S&e0X g$stx$22841$1S&e0X)
        ((case-lambda
           ((g$t$22842$1S&e0X)
            ((case-lambda
               ((g$ls/false$22843$1S&e0X)
                (if g$ls/false$22843$1S&e0X
                  (apply
                    (case-lambda
                      ((g$x*$22844$1S&e0X)
                       (if (not (g$valid-bound-ids?$20196$1S&e0X
                                  g$x*$22844$1S&e0X))
                         (g$invalid-fmls-error$20654$1S&e0X
                           g$stx$22841$1S&e0X
                           g$fmls$22840$1S&e0X)
                         (void))))
                    g$ls/false$22843$1S&e0X)
                  ((case-lambda
                     ((g$t$22845$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$22846$1S&e0X)
                          (if g$ls/false$22846$1S&e0X
                            (apply
                              (case-lambda
                                ((g$x*$22847$1S&e0X g$x$22848$1S&e0X)
                                 (if (not (g$valid-bound-ids?$20196$1S&e0X
                                            (cons
                                              g$x$22848$1S&e0X
                                              g$x*$22847$1S&e0X)))
                                   (g$invalid-fmls-error$20654$1S&e0X
                                     g$stx$22841$1S&e0X
                                     g$fmls$22840$1S&e0X)
                                   (void))))
                              g$ls/false$22846$1S&e0X)
                            ((case-lambda
                               ((g$t$22849$1S&e0X)
                                ((case-lambda
                                   ((g$ls/false$22850$1S&e0X)
                                    (if g$ls/false$22850$1S&e0X
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$stx$22841$1S&e0X)))
                                        g$ls/false$22850$1S&e0X)
                                      (g$syntax-violation$20808$1S&e0X
                                        '#f
                                        '"invalid syntax"
                                        g$t$22849$1S&e0X))))
                                 (g$syntax-dispatch$20689$1S&e0X
                                   g$t$22849$1S&e0X
                                   '_))))
                             g$t$22845$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$22845$1S&e0X
                         '#(each+ any () any)))))
                   g$t$22842$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22842$1S&e0X
               'each-any))))
         g$fmls$22840$1S&e0X))))
   (g$chi-lambda-clause$20710$1S&e0X
     g$chi-lambda-clause$24305$1S&e0X
     (case-lambda
       ((g$stx$22851$1S&e0X
          g$fmls$22852$1S&e0X
          g$body*$22853$1S&e0X
          g$r$22854$1S&e0X
          g$mr$22855$1S&e0X)
        ((case-lambda
           ((g$t$22856$1S&e0X)
            ((case-lambda
               ((g$ls/false$22857$1S&e0X)
                (if g$ls/false$22857$1S&e0X
                  (apply
                    (case-lambda
                      ((g$x*$22858$1S&e0X)
                       (begin
                         (g$verify-formals$20709$1S&e0X
                           g$fmls$22852$1S&e0X
                           g$stx$22851$1S&e0X)
                         ((case-lambda
                            ((g$lex*$22859$1S&e0X g$lab*$22860$1S&e0X)
                             (values
                               g$lex*$22859$1S&e0X
                               (g$chi-internal$20718$1S&e0X
                                 (g$add-subst$20181$1S&e0X
                                   (g$make-full-rib$20157$1S&e0X
                                     g$x*$22858$1S&e0X
                                     g$lab*$22860$1S&e0X)
                                   g$body*$22853$1S&e0X)
                                 (g$add-lexicals$20637$1S&e0X
                                   g$lab*$22860$1S&e0X
                                   g$lex*$22859$1S&e0X
                                   g$r$22854$1S&e0X)
                                 g$mr$22855$1S&e0X))))
                          (g$map$11833$1S&e0X
                            g$gen-lexical$20126$1S&e0X
                            g$x*$22858$1S&e0X)
                          (g$map$11833$1S&e0X
                            g$gen-label$20128$1S&e0X
                            g$x*$22858$1S&e0X)))))
                    g$ls/false$22857$1S&e0X)
                  ((case-lambda
                     ((g$t$22861$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$22862$1S&e0X)
                          (if g$ls/false$22862$1S&e0X
                            (apply
                              (case-lambda
                                ((g$x*$22863$1S&e0X g$x$22864$1S&e0X)
                                 (begin
                                   (g$verify-formals$20709$1S&e0X
                                     g$fmls$22852$1S&e0X
                                     g$stx$22851$1S&e0X)
                                   ((case-lambda
                                      ((g$lex*$22865$1S&e0X
                                         g$lab*$22866$1S&e0X
                                         g$lex$22867$1S&e0X
                                         g$lab$22868$1S&e0X)
                                       (values
                                         (append
                                           g$lex*$22865$1S&e0X
                                           g$lex$22867$1S&e0X)
                                         (g$chi-internal$20718$1S&e0X
                                           (g$add-subst$20181$1S&e0X
                                             (g$make-full-rib$20157$1S&e0X
                                               (cons
                                                 g$x$22864$1S&e0X
                                                 g$x*$22863$1S&e0X)
                                               (cons
                                                 g$lab$22868$1S&e0X
                                                 g$lab*$22866$1S&e0X))
                                             g$body*$22853$1S&e0X)
                                           (g$add-lexicals$20637$1S&e0X
                                             (cons
                                               g$lab$22868$1S&e0X
                                               g$lab*$22866$1S&e0X)
                                             (cons
                                               g$lex$22867$1S&e0X
                                               g$lex*$22865$1S&e0X)
                                             g$r$22854$1S&e0X)
                                           g$mr$22855$1S&e0X))))
                                    (g$map$11833$1S&e0X
                                      g$gen-lexical$20126$1S&e0X
                                      g$x*$22863$1S&e0X)
                                    (g$map$11833$1S&e0X
                                      g$gen-label$20128$1S&e0X
                                      g$x*$22863$1S&e0X)
                                    (g$gen-lexical$20126$1S&e0X
                                      g$x$22864$1S&e0X)
                                    (g$gen-label$20128$1S&e0X
                                      g$x$22864$1S&e0X)))))
                              g$ls/false$22862$1S&e0X)
                            ((case-lambda
                               ((g$t$22869$1S&e0X)
                                ((case-lambda
                                   ((g$ls/false$22870$1S&e0X)
                                    (if g$ls/false$22870$1S&e0X
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$20808$1S&e0X
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$22852$1S&e0X)))
                                        g$ls/false$22870$1S&e0X)
                                      (g$syntax-violation$20808$1S&e0X
                                        '#f
                                        '"invalid syntax"
                                        g$t$22869$1S&e0X))))
                                 (g$syntax-dispatch$20689$1S&e0X
                                   g$t$22869$1S&e0X
                                   '_))))
                             g$t$22861$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$22861$1S&e0X
                         '#(each+ any () any)))))
                   g$t$22856$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22856$1S&e0X
               'each-any))))
         g$fmls$22852$1S&e0X))))
   (g$chi-lambda-clause*$20711$1S&e0X
     g$chi-lambda-clause*$24306$1S&e0X
     (case-lambda
       ((g$stx$22871$1S&e0X
          g$fmls*$22872$1S&e0X
          g$body**$22873$1S&e0X
          g$r$22874$1S&e0X
          g$mr$22875$1S&e0X)
        (if (null? g$fmls*$22872$1S&e0X)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$20710$1S&e0X
                   g$stx$22871$1S&e0X
                   (car g$fmls*$22872$1S&e0X)
                   (car g$body**$22873$1S&e0X)
                   g$r$22874$1S&e0X
                   g$mr$22875$1S&e0X)))
              (case-lambda
                ((g$a$22878$1S&e0X g$b$22879$1S&e0X)
                 ((case-lambda
                    ((g$b$22880$1S&e0X g$a$22881$1S&e0X)
                     (call-with-values
                       (case-lambda
                         (()
                          (g$chi-lambda-clause*$20711$1S&e0X
                            g$stx$22871$1S&e0X
                            (cdr g$fmls*$22872$1S&e0X)
                            (cdr g$body**$22873$1S&e0X)
                            g$r$22874$1S&e0X
                            g$mr$22875$1S&e0X)))
                       (case-lambda
                         ((g$a*$22884$1S&e0X g$b*$22885$1S&e0X)
                          ((case-lambda
                             ((g$b*$22886$1S&e0X g$a*$22887$1S&e0X)
                              (values
                                (cons
                                  g$a$22881$1S&e0X
                                  g$a*$22887$1S&e0X)
                                (cons
                                  g$b$22880$1S&e0X
                                  g$b*$22886$1S&e0X))))
                           g$b*$22885$1S&e0X
                           g$a*$22884$1S&e0X))))))
                  g$b$22879$1S&e0X
                  g$a$22878$1S&e0X)))))))))
   (g$chi-defun$20712$1S&e0X
     g$chi-defun$24307$1S&e0X
     (case-lambda
       ((g$x$22888$1S&e0X g$r$22889$1S&e0X g$mr$22890$1S&e0X)
        ((case-lambda
           ((g$fmls$22891$1S&e0X g$body*$22892$1S&e0X)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$20710$1S&e0X
                   g$fmls$22891$1S&e0X
                   g$fmls$22891$1S&e0X
                   g$body*$22892$1S&e0X
                   g$r$22889$1S&e0X
                   g$mr$22890$1S&e0X)))
              (case-lambda
                ((g$fmls$22895$1S&e0X g$body$22896$1S&e0X)
                 ((case-lambda
                    ((g$body$22897$1S&e0X g$fmls$22898$1S&e0X)
                     (g$build-lambda$20113$1S&e0X
                       '#f
                       g$fmls$22898$1S&e0X
                       g$body$22897$1S&e0X)))
                  g$body$22896$1S&e0X
                  g$fmls$22895$1S&e0X))))))
         (car g$x$22888$1S&e0X)
         (cdr g$x$22888$1S&e0X)))))
   (g$chi-rhs$20713$1S&e0X
     g$chi-rhs$24308$1S&e0X
     (case-lambda
       ((g$rhs$22899$1S&e0X g$r$22900$1S&e0X g$mr$22901$1S&e0X)
        ((case-lambda
           ((g$t$22902$1S&e0X)
            (if (eqv? g$t$22902$1S&e0X 'defun)
              (g$chi-defun$20712$1S&e0X
                (cdr g$rhs$22899$1S&e0X)
                g$r$22900$1S&e0X
                g$mr$22901$1S&e0X)
              (if (eqv? g$t$22902$1S&e0X 'expr)
                ((case-lambda
                   ((g$expr$22903$1S&e0X)
                    (g$chi-expr$20707$1S&e0X
                      g$expr$22903$1S&e0X
                      g$r$22900$1S&e0X
                      g$mr$22901$1S&e0X)))
                 (cdr g$rhs$22899$1S&e0X))
                (if (eqv? g$t$22902$1S&e0X 'top-expr)
                  ((case-lambda
                     ((g$expr$22904$1S&e0X)
                      (g$build-sequence$20116$1S&e0X
                        '#f
                        (list
                          (g$chi-expr$20707$1S&e0X
                            g$expr$22904$1S&e0X
                            g$r$22900$1S&e0X
                            g$mr$22901$1S&e0X)
                          (g$build-void$20117$1S&e0X)))))
                   (cdr g$rhs$22899$1S&e0X))
                  (begin
                    '#f
                    (assertion-violation
                      'chi-rhs
                      '"BUG: invalid rhs"
                      g$rhs$22899$1S&e0X)))))))
         (car g$rhs$22899$1S&e0X)))))
   (g$expand-interaction-rhs*/init*$20714$1S&e0X
     g$expand-interaction-rhs*/init*$24309$1S&e0X
     (case-lambda
       ((g$lhs*$22905$1S&e0X
          g$rhs*$22906$1S&e0X
          g$init*$22907$1S&e0X
          g$r$22908$1S&e0X
          g$mr$22909$1S&e0X)
        ((letrec ((g$f$22910$1S&e0X
                    (case-lambda
                      ((g$lhs*$22911$1S&e0X g$rhs*$22912$1S&e0X)
                       (if (null? g$lhs*$22911$1S&e0X)
                         (g$map$11833$1S&e0X
                           (case-lambda
                             ((g$x$22913$1S&e0X)
                              (g$chi-expr$20707$1S&e0X
                                g$x$22913$1S&e0X
                                g$r$22908$1S&e0X
                                g$mr$22909$1S&e0X)))
                           g$init*$22907$1S&e0X)
                         (begin
                           '#f
                           ((case-lambda
                              ((g$lhs$22914$1S&e0X g$rhs$22915$1S&e0X)
                               ((case-lambda
                                  ((g$t$22916$1S&e0X)
                                   (if (eqv? g$t$22916$1S&e0X 'defun)
                                     ((case-lambda
                                        ((g$rhs$22917$1S&e0X)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$22914$1S&e0X
                                             g$rhs$22917$1S&e0X)
                                           (g$f$22910$1S&e0X
                                             (cdr g$lhs*$22911$1S&e0X)
                                             (cdr g$rhs*$22912$1S&e0X)))))
                                      (g$chi-defun$20712$1S&e0X
                                        (cdr g$rhs$22915$1S&e0X)
                                        g$r$22908$1S&e0X
                                        g$mr$22909$1S&e0X))
                                     (if (eqv? g$t$22916$1S&e0X 'expr)
                                       ((case-lambda
                                          ((g$rhs$22918$1S&e0X)
                                           (cons
                                             (list
                                               'set!
                                               g$lhs$22914$1S&e0X
                                               g$rhs$22918$1S&e0X)
                                             (g$f$22910$1S&e0X
                                               (cdr g$lhs*$22911$1S&e0X)
                                               (cdr g$rhs*$22912$1S&e0X)))))
                                        (g$chi-expr$20707$1S&e0X
                                          (cdr g$rhs$22915$1S&e0X)
                                          g$r$22908$1S&e0X
                                          g$mr$22909$1S&e0X))
                                       (if (eqv?
                                             g$t$22916$1S&e0X
                                             'top-expr)
                                         ((case-lambda
                                            ((g$e$22919$1S&e0X)
                                             (cons
                                               g$e$22919$1S&e0X
                                               (g$f$22910$1S&e0X
                                                 (cdr g$lhs*$22911$1S&e0X)
                                                 (cdr g$rhs*$22912$1S&e0X)))))
                                          (g$chi-expr$20707$1S&e0X
                                            (cdr g$rhs$22915$1S&e0X)
                                            g$r$22908$1S&e0X
                                            g$mr$22909$1S&e0X))
                                         (begin
                                           '#f
                                           (error
                                             'expand-interaction
                                             '"invallid"
                                             g$rhs$22915$1S&e0X)))))))
                                (car g$rhs$22915$1S&e0X))))
                            (car g$lhs*$22911$1S&e0X)
                            (car g$rhs*$22912$1S&e0X))))))))
           g$f$22910$1S&e0X)
         g$lhs*$22905$1S&e0X
         g$rhs*$22906$1S&e0X))))
   (g$chi-rhs*$20715$1S&e0X
     g$chi-rhs*$24310$1S&e0X
     (case-lambda
       ((g$rhs*$22920$1S&e0X g$r$22921$1S&e0X g$mr$22922$1S&e0X)
        ((letrec ((g$f$22923$1S&e0X
                    (case-lambda
                      ((g$ls$22924$1S&e0X)
                       (if (null? g$ls$22924$1S&e0X)
                         '()
                         (begin
                           '#f
                           ((case-lambda
                              ((g$a$22925$1S&e0X)
                               (cons
                                 g$a$22925$1S&e0X
                                 (g$f$22923$1S&e0X
                                   (cdr g$ls$22924$1S&e0X)))))
                            (g$chi-rhs$20713$1S&e0X
                              (car g$ls$22924$1S&e0X)
                              g$r$22921$1S&e0X
                              g$mr$22922$1S&e0X))))))))
           g$f$22923$1S&e0X)
         g$rhs*$22920$1S&e0X))))
   (g$find-bound=?$20716$1S&e0X
     g$find-bound=?$24311$1S&e0X
     (case-lambda
       ((g$x$22926$1S&e0X g$lhs*$22927$1S&e0X g$rhs*$22928$1S&e0X)
        (if (null? g$lhs*$22927$1S&e0X)
          '#f
          (if (g$bound-id=?$20194$1S&e0X
                g$x$22926$1S&e0X
                (car g$lhs*$22927$1S&e0X))
            (car g$rhs*$22928$1S&e0X)
            (begin
              '#f
              (g$find-bound=?$20716$1S&e0X
                g$x$22926$1S&e0X
                (cdr g$lhs*$22927$1S&e0X)
                (cdr g$rhs*$22928$1S&e0X))))))))
   (g$find-dups$20717$1S&e0X
     g$find-dups$24312$1S&e0X
     (case-lambda
       ((g$ls$22929$1S&e0X)
        ((letrec ((g$f$22930$1S&e0X
                    (case-lambda
                      ((g$ls$22931$1S&e0X g$dups$22932$1S&e0X)
                       (if (null? g$ls$22931$1S&e0X)
                         g$dups$22932$1S&e0X
                         ((case-lambda
                            ((g$t$22933$1S&e0X)
                             (if g$t$22933$1S&e0X
                               ((case-lambda
                                  ((g$x$22934$1S&e0X)
                                   (g$f$22930$1S&e0X
                                     (cdr g$ls$22931$1S&e0X)
                                     (cons
                                       (list
                                         (car g$ls$22931$1S&e0X)
                                         g$x$22934$1S&e0X)
                                       g$dups$22932$1S&e0X))))
                                g$t$22933$1S&e0X)
                               (begin
                                 '#f
                                 (g$f$22930$1S&e0X
                                   (cdr g$ls$22931$1S&e0X)
                                   g$dups$22932$1S&e0X)))))
                          (g$find-bound=?$20716$1S&e0X
                            (car g$ls$22931$1S&e0X)
                            (cdr g$ls$22931$1S&e0X)
                            (cdr g$ls$22931$1S&e0X))))))))
           g$f$22930$1S&e0X)
         g$ls$22929$1S&e0X
         '()))))
   (g$chi-internal$20718$1S&e0X
     g$chi-internal$24313$1S&e0X
     (case-lambda
       ((g$e*$22935$1S&e0X g$r$22936$1S&e0X g$mr$22937$1S&e0X)
        ((case-lambda
           ((g$rib$22938$1S&e0X)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$20736$1S&e0X
                   (g$map$11833$1S&e0X
                     (case-lambda
                       ((g$x$22947$1S&e0X)
                        (g$add-subst$20181$1S&e0X
                          g$rib$22938$1S&e0X
                          g$x$22947$1S&e0X)))
                     (g$syntax->list$20190$1S&e0X g$e*$22935$1S&e0X))
                   g$r$22936$1S&e0X
                   g$mr$22937$1S&e0X
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$22938$1S&e0X
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$22948$1S&e0X
                   g$r$22949$1S&e0X
                   g$mr$22950$1S&e0X
                   g$lex*$22951$1S&e0X
                   g$rhs*$22952$1S&e0X
                   g$mod**$22953$1S&e0X
                   g$kwd*$22954$1S&e0X
                   g$_exp*$22955$1S&e0X)
                 ((case-lambda
                    ((g$_exp*$22956$1S&e0X
                       g$kwd*$22957$1S&e0X
                       g$mod**$22958$1S&e0X
                       g$rhs*$22959$1S&e0X
                       g$lex*$22960$1S&e0X
                       g$mr$22961$1S&e0X
                       g$r$22962$1S&e0X
                       g$e*$22963$1S&e0X)
                     (begin
                       (if (null? g$e*$22963$1S&e0X)
                         (g$syntax-violation$20808$1S&e0X
                           '#f
                           '"no expression in body"
                           g$e*$22963$1S&e0X)
                         (void))
                       ((case-lambda
                          ((g$init*$22964$1S&e0X)
                           ((case-lambda
                              ((g$rhs*$22965$1S&e0X)
                               (g$build-letrec*$20119$1S&e0X
                                 '#f
                                 (g$reverse$12682$1S&e0X
                                   g$lex*$22960$1S&e0X)
                                 (g$reverse$12682$1S&e0X
                                   g$rhs*$22965$1S&e0X)
                                 (g$build-sequence$20116$1S&e0X
                                   '#f
                                   g$init*$22964$1S&e0X))))
                            (g$chi-rhs*$20715$1S&e0X
                              g$rhs*$22959$1S&e0X
                              g$r$22962$1S&e0X
                              g$mr$22961$1S&e0X))))
                        (g$chi-expr*$20705$1S&e0X
                          (append
                            (apply
                              append
                              (g$reverse$12682$1S&e0X
                                g$mod**$22958$1S&e0X))
                            g$e*$22963$1S&e0X)
                          g$r$22962$1S&e0X
                          g$mr$22961$1S&e0X)))))
                  g$_exp*$22955$1S&e0X
                  g$kwd*$22954$1S&e0X
                  g$mod**$22953$1S&e0X
                  g$rhs*$22952$1S&e0X
                  g$lex*$22951$1S&e0X
                  g$mr$22950$1S&e0X
                  g$r$22949$1S&e0X
                  g$e*$22948$1S&e0X))))))
         (g$make-empty-rib$20149$1S&e0X)))))
   (g$parse-module$20719$1S&e0X
     g$parse-module$24314$1S&e0X
     (case-lambda
       ((g$e$22966$1S&e0X)
        ((case-lambda
           ((g$t$22967$1S&e0X)
            ((case-lambda
               ((g$ls/false$22968$1S&e0X)
                (if g$ls/false$22968$1S&e0X
                  (apply
                    (case-lambda
                      ((g$export*$22969$1S&e0X g$b*$22970$1S&e0X)
                       (begin
                         (if (not (g$for-all$11831$1S&e0X
                                    g$id?$20191$1S&e0X
                                    g$export*$22969$1S&e0X))
                           (g$syntax-violation$20808$1S&e0X
                             '#f
                             '"module exports must be identifiers"
                             g$e$22966$1S&e0X)
                           (void))
                         (values
                           '#f
                           (g$list->vector$12676$1S&e0X
                             g$export*$22969$1S&e0X)
                           g$b*$22970$1S&e0X))))
                    g$ls/false$22968$1S&e0X)
                  ((case-lambda
                     ((g$t$22971$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$22972$1S&e0X)
                          (if g$ls/false$22972$1S&e0X
                            (apply
                              (case-lambda
                                ((g$name$22973$1S&e0X
                                   g$export*$22974$1S&e0X
                                   g$b*$22975$1S&e0X)
                                 (begin
                                   (if (not (g$id?$20191$1S&e0X
                                              g$name$22973$1S&e0X))
                                     (g$syntax-violation$20808$1S&e0X
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$22966$1S&e0X)
                                     (void))
                                   (if (not (g$for-all$11831$1S&e0X
                                              g$id?$20191$1S&e0X
                                              g$export*$22974$1S&e0X))
                                     (g$syntax-violation$20808$1S&e0X
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$22966$1S&e0X)
                                     (void))
                                   (values
                                     g$name$22973$1S&e0X
                                     (g$list->vector$12676$1S&e0X
                                       g$export*$22974$1S&e0X)
                                     g$b*$22975$1S&e0X))))
                              g$ls/false$22972$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$22971$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$22971$1S&e0X
                         '(_ any each-any . each-any)))))
                   g$t$22967$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$22967$1S&e0X
               '(_ each-any . each-any)))))
         g$e$22966$1S&e0X))))
   (g$10190$20720$1S&e0X
     g$10190$24315$1S&e0X
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$10193$1S&e0X
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$10192$20721$1S&e0X g$10192$24316$1S&e0X '#f)
   (g$10191$20722$1S&e0X
     g$10191$24317$1S&e0X
     (make-record-constructor-descriptor
       g$10190$20720$1S&e0X
       '#f
       g$10192$20721$1S&e0X))
   (g$module-interface?$20725$1S&e0X
     g$module-interface?$24318$1S&e0X
     (record-predicate g$10190$20720$1S&e0X))
   (g$make-module-interface$20726$1S&e0X
     g$make-module-interface$24319$1S&e0X
     (record-constructor g$10191$20722$1S&e0X))
   (g$module-interface-first-mark$20727$1S&e0X
     g$module-interface-first-mark$24320$1S&e0X
     (record-accessor g$10190$20720$1S&e0X '0))
   (g$module-interface-exp-id-vec$20728$1S&e0X
     g$module-interface-exp-id-vec$24321$1S&e0X
     (record-accessor g$10190$20720$1S&e0X '1))
   (g$module-interface-exp-lab-vec$20729$1S&e0X
     g$module-interface-exp-lab-vec$24322$1S&e0X
     (record-accessor g$10190$20720$1S&e0X '2))
   (g$set-module-interface-first-mark!$20730$1S&e0X
     g$set-module-interface-first-mark!$24323$1S&e0X
     (record-mutator g$10190$20720$1S&e0X '0))
   (g$set-module-interface-exp-id-vec!$20731$1S&e0X
     g$set-module-interface-exp-id-vec!$24324$1S&e0X
     (record-mutator g$10190$20720$1S&e0X '1))
   (g$set-module-interface-exp-lab-vec!$20732$1S&e0X
     g$set-module-interface-exp-lab-vec!$24325$1S&e0X
     (record-mutator g$10190$20720$1S&e0X '2))
   (g$module-interface-exp-id*$20733$1S&e0X
     g$module-interface-exp-id*$24326$1S&e0X
     (case-lambda
       ((g$iface$22976$1S&e0X g$id$22977$1S&e0X)
        (letrec* ((g$diff-marks$22978$1S&e0X
                    (case-lambda
                      ((g$ls$22982$1S&e0X g$x$22983$1S&e0X)
                       (begin
                         (if (null? g$ls$22982$1S&e0X)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$22984$1S&e0X)
                             (if (eq? g$a$22984$1S&e0X g$x$22983$1S&e0X)
                               '()
                               (cons
                                 g$a$22984$1S&e0X
                                 (g$diff-marks$22978$1S&e0X
                                   (cdr g$ls$22982$1S&e0X)
                                   g$x$22983$1S&e0X)))))
                          (car g$ls$22982$1S&e0X)))))))
          ((case-lambda
             ((g$diff$22979$1S&e0X g$id-vec$22980$1S&e0X)
              (if (null? g$diff$22979$1S&e0X)
                g$id-vec$22980$1S&e0X
                (g$vector-map$12732$1S&e0X
                  (case-lambda
                    ((g$x$22981$1S&e0X)
                     (g$make-stx$20164$1S&e0X
                       (g$stx-expr$20165$1S&e0X g$x$22981$1S&e0X)
                       (append
                         g$diff$22979$1S&e0X
                         (g$stx-mark*$20166$1S&e0X g$x$22981$1S&e0X))
                       '()
                       '())))
                  g$id-vec$22980$1S&e0X))))
           (g$diff-marks$22978$1S&e0X
             (g$stx-mark*$20166$1S&e0X g$id$22977$1S&e0X)
             (g$module-interface-first-mark$20727$1S&e0X
               g$iface$22976$1S&e0X))
           (g$module-interface-exp-id-vec$20728$1S&e0X
             g$iface$22976$1S&e0X))))))
   (g$syntax-transpose$20734$1S&e0X
     g$syntax-transpose$24327$1S&e0X
     (case-lambda
       ((g$object$22985$1S&e0X
          g$base-id$22986$1S&e0X
          g$new-id$22987$1S&e0X)
        (letrec* ((g$who$22988$1S&e0X 'syntax-transpose)
                  (g$err$22989$1S&e0X
                    (case-lambda
                      ((g$msg$23031$1S&e0X . g$args$23032$1S&e0X)
                       (apply
                         assertion-violation
                         g$who$22988$1S&e0X
                         g$msg$23031$1S&e0X
                         g$args$23032$1S&e0X))))
                  (g$split$22990$1S&e0X
                    (case-lambda
                      ((g$s*$23024$1S&e0X)
                       (if (eq? (car g$s*$23024$1S&e0X) 'shift)
                         (values (list 'shift) (cdr g$s*$23024$1S&e0X))
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$split$22990$1S&e0X
                                  (cdr g$s*$23024$1S&e0X))))
                             (case-lambda
                               ((g$s1*$23027$1S&e0X g$s2*$23028$1S&e0X)
                                ((case-lambda
                                   ((g$s2*$23029$1S&e0X
                                      g$s1*$23030$1S&e0X)
                                    (values
                                      (cons
                                        (car g$s*$23024$1S&e0X)
                                        g$s1*$23030$1S&e0X)
                                      g$s2*$23029$1S&e0X)))
                                 g$s2*$23028$1S&e0X
                                 g$s1*$23027$1S&e0X)))))))))
                  (g$final$22991$1S&e0X
                    (case-lambda
                      ((g$s*$23022$1S&e0X)
                       (if ((case-lambda
                              ((g$t$23023$1S&e0X)
                               (if g$t$23023$1S&e0X
                                 g$t$23023$1S&e0X
                                 (begin
                                   '#f
                                   (eq? (car g$s*$23022$1S&e0X)
                                        'shift)))))
                            (null? g$s*$23022$1S&e0X))
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$s*$23022$1S&e0X)
                             (g$final$22991$1S&e0X
                               (cdr g$s*$23022$1S&e0X))))))))
                  (g$diff$22992$1S&e0X
                    (case-lambda
                      ((g$m$23002$1S&e0X
                         g$m*$23003$1S&e0X
                         g$s*$23004$1S&e0X
                         g$ae*$23005$1S&e0X)
                       (if (null? g$m*$23003$1S&e0X)
                         (g$err$22989$1S&e0X
                           '"unmatched identifiers"
                           g$base-id$22986$1S&e0X
                           g$new-id$22987$1S&e0X)
                         ((case-lambda
                            ((g$m1$23006$1S&e0X)
                             (if (eq? g$m$23002$1S&e0X
                                      g$m1$23006$1S&e0X)
                               (values
                                 '()
                                 (g$final$22991$1S&e0X
                                   g$s*$23004$1S&e0X)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$22990$1S&e0X
                                      g$s*$23004$1S&e0X)))
                                 (case-lambda
                                   ((g$s1*$23009$1S&e0X
                                      g$s2*$23010$1S&e0X)
                                    ((case-lambda
                                       ((g$s2*$23011$1S&e0X
                                          g$s1*$23012$1S&e0X)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$22992$1S&e0X
                                               g$m$23002$1S&e0X
                                               (cdr g$m*$23003$1S&e0X)
                                               g$s2*$23011$1S&e0X
                                               (cdr g$ae*$23005$1S&e0X))))
                                          (case-lambda
                                            ((g$nm*$23016$1S&e0X
                                               g$ns*$23017$1S&e0X
                                               g$nae*$23018$1S&e0X)
                                             ((case-lambda
                                                ((g$nae*$23019$1S&e0X
                                                   g$ns*$23020$1S&e0X
                                                   g$nm*$23021$1S&e0X)
                                                 (values
                                                   (cons
                                                     g$m1$23006$1S&e0X
                                                     g$nm*$23021$1S&e0X)
                                                   (append
                                                     g$s1*$23012$1S&e0X
                                                     g$ns*$23020$1S&e0X)
                                                   (cons
                                                     (car g$ae*$23005$1S&e0X)
                                                     g$nae*$23019$1S&e0X))))
                                              g$nae*$23018$1S&e0X
                                              g$ns*$23017$1S&e0X
                                              g$nm*$23016$1S&e0X))))))
                                     g$s2*$23010$1S&e0X
                                     g$s1*$23009$1S&e0X)))))))
                          (car g$m*$23003$1S&e0X)))))))
          (begin
            (if (not (g$id?$20191$1S&e0X g$base-id$22986$1S&e0X))
              (g$err$22989$1S&e0X
                '"not an identifier"
                g$base-id$22986$1S&e0X)
              (void))
            (if (not (g$id?$20191$1S&e0X g$new-id$22987$1S&e0X))
              (g$err$22989$1S&e0X
                '"not an identifier"
                g$new-id$22987$1S&e0X)
              (void))
            (if (not (g$free-identifier=?$20799$1S&e0X
                       g$base-id$22986$1S&e0X
                       g$new-id$22987$1S&e0X))
              (g$err$22989$1S&e0X
                '"not the same identifier"
                g$base-id$22986$1S&e0X
                g$new-id$22987$1S&e0X)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$22992$1S&e0X
                   (car (g$stx-mark*$20166$1S&e0X
                          g$base-id$22986$1S&e0X))
                   (g$stx-mark*$20166$1S&e0X g$new-id$22987$1S&e0X)
                   (g$stx-subst*$20167$1S&e0X g$new-id$22987$1S&e0X)
                   (g$stx-ae*$20168$1S&e0X g$new-id$22987$1S&e0X))))
              (case-lambda
                ((g$m*$22996$1S&e0X
                   g$s*$22997$1S&e0X
                   g$ae*$22998$1S&e0X)
                 ((case-lambda
                    ((g$ae*$22999$1S&e0X
                       g$s*$23000$1S&e0X
                       g$m*$23001$1S&e0X)
                     (if (if (null? g$m*$23001$1S&e0X)
                           (begin '#f (null? g$s*$23000$1S&e0X))
                           '#f)
                       g$object$22985$1S&e0X
                       (g$mkstx$20179$1S&e0X
                         g$object$22985$1S&e0X
                         g$m*$23001$1S&e0X
                         g$s*$23000$1S&e0X
                         g$ae*$22999$1S&e0X))))
                  g$ae*$22998$1S&e0X
                  g$s*$22997$1S&e0X
                  g$m*$22996$1S&e0X)))))))))
   (g$chi-internal-module$20735$1S&e0X
     g$chi-internal-module$24328$1S&e0X
     (case-lambda
       ((g$e$23033$1S&e0X
          g$r$23034$1S&e0X
          g$mr$23035$1S&e0X
          g$lex*$23036$1S&e0X
          g$rhs*$23037$1S&e0X
          g$mod**$23038$1S&e0X
          g$kwd*$23039$1S&e0X)
        (call-with-values
          (case-lambda
            (() (g$parse-module$20719$1S&e0X g$e$23033$1S&e0X)))
          (case-lambda
            ((g$name$23043$1S&e0X
               g$exp-id*$23044$1S&e0X
               g$e*$23045$1S&e0X)
             ((case-lambda
                ((g$e*$23046$1S&e0X
                   g$exp-id*$23047$1S&e0X
                   g$name$23048$1S&e0X)
                 ((case-lambda
                    ((g$rib$23049$1S&e0X)
                     ((case-lambda
                        ((g$e*$23050$1S&e0X)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$20736$1S&e0X
                                g$e*$23050$1S&e0X
                                g$r$23034$1S&e0X
                                g$mr$23035$1S&e0X
                                g$lex*$23036$1S&e0X
                                g$rhs*$23037$1S&e0X
                                g$mod**$23038$1S&e0X
                                g$kwd*$23039$1S&e0X
                                '()
                                g$rib$23049$1S&e0X
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$23059$1S&e0X
                                g$r$23060$1S&e0X
                                g$mr$23061$1S&e0X
                                g$lex*$23062$1S&e0X
                                g$rhs*$23063$1S&e0X
                                g$mod**$23064$1S&e0X
                                g$kwd*$23065$1S&e0X
                                g$_exp*$23066$1S&e0X)
                              ((case-lambda
                                 ((g$_exp*$23067$1S&e0X
                                    g$kwd*$23068$1S&e0X
                                    g$mod**$23069$1S&e0X
                                    g$rhs*$23070$1S&e0X
                                    g$lex*$23071$1S&e0X
                                    g$mr$23072$1S&e0X
                                    g$r$23073$1S&e0X
                                    g$e*$23074$1S&e0X)
                                  ((case-lambda
                                     ((g$exp-lab*$23075$1S&e0X
                                        g$mod**$23076$1S&e0X)
                                      (if (not g$name$23048$1S&e0X)
                                        (values
                                          g$lex*$23071$1S&e0X
                                          g$rhs*$23070$1S&e0X
                                          g$exp-id*$23047$1S&e0X
                                          g$exp-lab*$23075$1S&e0X
                                          g$r$23073$1S&e0X
                                          g$mr$23072$1S&e0X
                                          g$mod**$23076$1S&e0X
                                          g$kwd*$23068$1S&e0X)
                                        ((case-lambda
                                           ((g$lab$23077$1S&e0X
                                              g$iface$23078$1S&e0X)
                                            (values
                                              g$lex*$23071$1S&e0X
                                              g$rhs*$23070$1S&e0X
                                              (vector
                                                g$name$23048$1S&e0X)
                                              (vector
                                                g$lab$23077$1S&e0X)
                                              (cons
                                                (cons
                                                  g$lab$23077$1S&e0X
                                                  (cons
                                                    '$module
                                                    g$iface$23078$1S&e0X))
                                                g$r$23073$1S&e0X)
                                              (cons
                                                (cons
                                                  g$lab$23077$1S&e0X
                                                  (cons
                                                    '$module
                                                    g$iface$23078$1S&e0X))
                                                g$mr$23072$1S&e0X)
                                              g$mod**$23076$1S&e0X
                                              g$kwd*$23068$1S&e0X)))
                                         (g$gen-label$20128$1S&e0X
                                           'module)
                                         (g$make-module-interface$20726$1S&e0X
                                           (car (g$stx-mark*$20166$1S&e0X
                                                  g$name$23048$1S&e0X))
                                           (g$vector-map$12732$1S&e0X
                                             (case-lambda
                                               ((g$x$23079$1S&e0X)
                                                (g$make-stx$20164$1S&e0X
                                                  (g$stx-expr$20165$1S&e0X
                                                    g$x$23079$1S&e0X)
                                                  (g$stx-mark*$20166$1S&e0X
                                                    g$x$23079$1S&e0X)
                                                  '()
                                                  '())))
                                             g$exp-id*$23047$1S&e0X)
                                           g$exp-lab*$23075$1S&e0X)))))
                                   (g$vector-map$12732$1S&e0X
                                     (case-lambda
                                       ((g$x$23080$1S&e0X)
                                        ((case-lambda
                                           ((g$t$23081$1S&e0X)
                                            (if g$t$23081$1S&e0X
                                              g$t$23081$1S&e0X
                                              (begin
                                                '#f
                                                (g$syntax-violation$20808$1S&e0X
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$23080$1S&e0X)))))
                                         (g$id->label$20204$1S&e0X
                                           (g$make-stx$20164$1S&e0X
                                             (g$id->sym$20192$1S&e0X
                                               g$x$23080$1S&e0X)
                                             (g$stx-mark*$20166$1S&e0X
                                               g$x$23080$1S&e0X)
                                             (list g$rib$23049$1S&e0X)
                                             '())))))
                                     g$exp-id*$23047$1S&e0X)
                                   (cons
                                     g$e*$23074$1S&e0X
                                     g$mod**$23069$1S&e0X))))
                               g$_exp*$23066$1S&e0X
                               g$kwd*$23065$1S&e0X
                               g$mod**$23064$1S&e0X
                               g$rhs*$23063$1S&e0X
                               g$lex*$23062$1S&e0X
                               g$mr$23061$1S&e0X
                               g$r$23060$1S&e0X
                               g$e*$23059$1S&e0X))))))
                      (g$map$11833$1S&e0X
                        (case-lambda
                          ((g$x$23082$1S&e0X)
                           (g$add-subst$20181$1S&e0X
                             g$rib$23049$1S&e0X
                             g$x$23082$1S&e0X)))
                        (g$syntax->list$20190$1S&e0X
                          g$e*$23046$1S&e0X)))))
                  (g$make-empty-rib$20149$1S&e0X))))
              g$e*$23045$1S&e0X
              g$exp-id*$23044$1S&e0X
              g$name$23043$1S&e0X)))))))
   (g$chi-body*$20736$1S&e0X
     g$chi-body*$24329$1S&e0X
     (case-lambda
       ((g$e*$23083$1S&e0X
          g$r$23084$1S&e0X
          g$mr$23085$1S&e0X
          g$lex*$23086$1S&e0X
          g$rhs*$23087$1S&e0X
          g$mod**$23088$1S&e0X
          g$kwd*$23089$1S&e0X
          g$exp*$23090$1S&e0X
          g$rib$23091$1S&e0X
          g$mix?$23092$1S&e0X
          g$sd?$23093$1S&e0X)
        (if (null? g$e*$23083$1S&e0X)
          (values
            g$e*$23083$1S&e0X
            g$r$23084$1S&e0X
            g$mr$23085$1S&e0X
            g$lex*$23086$1S&e0X
            g$rhs*$23087$1S&e0X
            g$mod**$23088$1S&e0X
            g$kwd*$23089$1S&e0X
            g$exp*$23090$1S&e0X)
          (begin
            '#f
            ((case-lambda
               ((g$e$23094$1S&e0X)
                (call-with-values
                  (case-lambda
                    (()
                     (g$syntax-type$20211$1S&e0X
                       g$e$23094$1S&e0X
                       g$r$23084$1S&e0X)))
                  (case-lambda
                    ((g$type$23098$1S&e0X
                       g$value$23099$1S&e0X
                       g$kwd$23100$1S&e0X)
                     ((case-lambda
                        ((g$kwd$23101$1S&e0X
                           g$value$23102$1S&e0X
                           g$type$23103$1S&e0X)
                         ((case-lambda
                            ((g$kwd*$23104$1S&e0X)
                             ((case-lambda
                                ((g$t$23105$1S&e0X)
                                 (if (eqv? g$t$23105$1S&e0X 'define)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define$20629$1S&e0X
                                          g$e$23094$1S&e0X)))
                                     (case-lambda
                                       ((g$id$23108$1S&e0X
                                          g$rhs$23109$1S&e0X)
                                        ((case-lambda
                                           ((g$rhs$23110$1S&e0X
                                              g$id$23111$1S&e0X)
                                            (begin
                                              (if (g$bound-id-member?$20198$1S&e0X
                                                    g$id$23111$1S&e0X
                                                    g$kwd*$23104$1S&e0X)
                                                (g$syntax-violation$20808$1S&e0X
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$23094$1S&e0X)
                                                (void))
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$gen-define-label+loc$20130$1S&e0X
                                                     g$id$23111$1S&e0X
                                                     g$rib$23091$1S&e0X
                                                     g$sd?$23093$1S&e0X)))
                                                (case-lambda
                                                  ((g$lab$23114$1S&e0X
                                                     g$lex$23115$1S&e0X)
                                                   ((case-lambda
                                                      ((g$lex$23116$1S&e0X
                                                         g$lab$23117$1S&e0X)
                                                       (begin
                                                         (g$extend-rib!$20152$1S&e0X
                                                           g$rib$23091$1S&e0X
                                                           g$id$23111$1S&e0X
                                                           g$lab$23117$1S&e0X
                                                           g$sd?$23093$1S&e0X)
                                                         (g$chi-body*$20736$1S&e0X
                                                           (cdr g$e*$23083$1S&e0X)
                                                           (g$add-lexical$20636$1S&e0X
                                                             g$lab$23117$1S&e0X
                                                             g$lex$23116$1S&e0X
                                                             g$r$23084$1S&e0X)
                                                           g$mr$23085$1S&e0X
                                                           (cons
                                                             g$lex$23116$1S&e0X
                                                             g$lex*$23086$1S&e0X)
                                                           (cons
                                                             g$rhs$23110$1S&e0X
                                                             g$rhs*$23087$1S&e0X)
                                                           g$mod**$23088$1S&e0X
                                                           g$kwd*$23104$1S&e0X
                                                           g$exp*$23090$1S&e0X
                                                           g$rib$23091$1S&e0X
                                                           g$mix?$23092$1S&e0X
                                                           g$sd?$23093$1S&e0X))))
                                                    g$lex$23115$1S&e0X
                                                    g$lab$23114$1S&e0X)))))))
                                         g$rhs$23109$1S&e0X
                                         g$id$23108$1S&e0X))))
                                   (if (eqv?
                                         g$t$23105$1S&e0X
                                         'define-syntax)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$parse-define-syntax$20630$1S&e0X
                                            g$e$23094$1S&e0X)))
                                       (case-lambda
                                         ((g$id$23120$1S&e0X
                                            g$rhs$23121$1S&e0X)
                                          ((case-lambda
                                             ((g$rhs$23122$1S&e0X
                                                g$id$23123$1S&e0X)
                                              (begin
                                                (if (g$bound-id-member?$20198$1S&e0X
                                                      g$id$23123$1S&e0X
                                                      g$kwd*$23104$1S&e0X)
                                                  (g$syntax-violation$20808$1S&e0X
                                                    '#f
                                                    '"cannot redefine keyword"
                                                    g$e$23094$1S&e0X)
                                                  (void))
                                                ((case-lambda
                                                   ((g$lab$23124$1S&e0X)
                                                    ((case-lambda
                                                       ((g$expanded-rhs$23125$1S&e0X)
                                                        (begin
                                                          (g$extend-rib!$20152$1S&e0X
                                                            g$rib$23091$1S&e0X
                                                            g$id$23123$1S&e0X
                                                            g$lab$23124$1S&e0X
                                                            g$sd?$23093$1S&e0X)
                                                          ((case-lambda
                                                             ((g$b$23126$1S&e0X)
                                                              (g$chi-body*$20736$1S&e0X
                                                                (cdr g$e*$23083$1S&e0X)
                                                                (cons
                                                                  (cons
                                                                    g$lab$23124$1S&e0X
                                                                    g$b$23126$1S&e0X)
                                                                  g$r$23084$1S&e0X)
                                                                (cons
                                                                  (cons
                                                                    g$lab$23124$1S&e0X
                                                                    g$b$23126$1S&e0X)
                                                                  g$mr$23085$1S&e0X)
                                                                g$lex*$23086$1S&e0X
                                                                g$rhs*$23087$1S&e0X
                                                                g$mod**$23088$1S&e0X
                                                                g$kwd*$23104$1S&e0X
                                                                g$exp*$23090$1S&e0X
                                                                g$rib$23091$1S&e0X
                                                                g$mix?$23092$1S&e0X
                                                                g$sd?$23093$1S&e0X)))
                                                           (g$make-eval-transformer$20239$1S&e0X
                                                             g$expanded-rhs$23125$1S&e0X)))))
                                                     (g$expand-transformer$20737$1S&e0X
                                                       g$rhs$23122$1S&e0X
                                                       g$mr$23085$1S&e0X))))
                                                 (g$gen-define-label$20131$1S&e0X
                                                   g$id$23123$1S&e0X
                                                   g$rib$23091$1S&e0X
                                                   g$sd?$23093$1S&e0X)))))
                                           g$rhs$23121$1S&e0X
                                           g$id$23120$1S&e0X))))
                                     (if (g$memv$11826$1S&e0X
                                           g$t$23105$1S&e0X
                                           '(let-syntax letrec-syntax))
                                       ((case-lambda
                                          ((g$t$23127$1S&e0X)
                                           ((case-lambda
                                              ((g$ls/false$23128$1S&e0X)
                                               (if (if g$ls/false$23128$1S&e0X
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$23129$1S&e0X
                                                              g$xrhs*$23130$1S&e0X
                                                              g$xbody*$23131$1S&e0X)
                                                            (if (not (g$valid-bound-ids?$20196$1S&e0X
                                                                       g$xlhs*$23129$1S&e0X))
                                                              (g$syntax-violation$20808$1S&e0X
                                                                '#f
                                                                '"invalid identifiers"
                                                                g$e$23094$1S&e0X)
                                                              (void))))
                                                         g$ls/false$23128$1S&e0X))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$xlhs*$23132$1S&e0X
                                                        g$xrhs*$23133$1S&e0X
                                                        g$xbody*$23134$1S&e0X)
                                                      ((case-lambda
                                                         ((g$xlab*$23135$1S&e0X)
                                                          ((case-lambda
                                                             ((g$xrib$23136$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$xb*$23137$1S&e0X)
                                                                  (g$chi-body*$20736$1S&e0X
                                                                    (append
                                                                      (g$map$11833$1S&e0X
                                                                        (case-lambda
                                                                          ((g$x$23138$1S&e0X)
                                                                           (g$add-subst$20181$1S&e0X
                                                                             g$xrib$23136$1S&e0X
                                                                             g$x$23138$1S&e0X)))
                                                                        g$xbody*$23134$1S&e0X)
                                                                      (cdr g$e*$23083$1S&e0X))
                                                                    (append
                                                                      (g$map$11833$1S&e0X
                                                                        cons
                                                                        g$xlab*$23135$1S&e0X
                                                                        g$xb*$23137$1S&e0X)
                                                                      g$r$23084$1S&e0X)
                                                                    (append
                                                                      (g$map$11833$1S&e0X
                                                                        cons
                                                                        g$xlab*$23135$1S&e0X
                                                                        g$xb*$23137$1S&e0X)
                                                                      g$mr$23085$1S&e0X)
                                                                    g$lex*$23086$1S&e0X
                                                                    g$rhs*$23087$1S&e0X
                                                                    g$mod**$23088$1S&e0X
                                                                    g$kwd*$23104$1S&e0X
                                                                    g$exp*$23090$1S&e0X
                                                                    g$rib$23091$1S&e0X
                                                                    g$mix?$23092$1S&e0X
                                                                    g$sd?$23093$1S&e0X)))
                                                               (g$map$11833$1S&e0X
                                                                 (case-lambda
                                                                   ((g$x$23139$1S&e0X)
                                                                    (g$make-eval-transformer$20239$1S&e0X
                                                                      (g$expand-transformer$20737$1S&e0X
                                                                        (if (eq? g$type$23103$1S&e0X
                                                                                 'let-syntax)
                                                                          g$x$23139$1S&e0X
                                                                          (g$add-subst$20181$1S&e0X
                                                                            g$xrib$23136$1S&e0X
                                                                            g$x$23139$1S&e0X))
                                                                        g$mr$23085$1S&e0X))))
                                                                 g$xrhs*$23133$1S&e0X))))
                                                           (g$make-full-rib$20157$1S&e0X
                                                             g$xlhs*$23132$1S&e0X
                                                             g$xlab*$23135$1S&e0X))))
                                                       (g$map$11833$1S&e0X
                                                         g$gen-label$20128$1S&e0X
                                                         g$xlhs*$23132$1S&e0X))))
                                                   g$ls/false$23128$1S&e0X)
                                                 (g$syntax-violation$20808$1S&e0X
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$23127$1S&e0X))))
                                            (g$syntax-dispatch$20689$1S&e0X
                                              g$t$23127$1S&e0X
                                              '(_ #(each (any any))
                                                  .
                                                  each-any)))))
                                        g$e$23094$1S&e0X)
                                       (if (eqv?
                                             g$t$23105$1S&e0X
                                             'begin)
                                         ((case-lambda
                                            ((g$t$23140$1S&e0X)
                                             ((case-lambda
                                                ((g$ls/false$23141$1S&e0X)
                                                 (if g$ls/false$23141$1S&e0X
                                                   (apply
                                                     (case-lambda
                                                       ((g$x*$23142$1S&e0X)
                                                        (g$chi-body*$20736$1S&e0X
                                                          (append
                                                            g$x*$23142$1S&e0X
                                                            (cdr g$e*$23083$1S&e0X))
                                                          g$r$23084$1S&e0X
                                                          g$mr$23085$1S&e0X
                                                          g$lex*$23086$1S&e0X
                                                          g$rhs*$23087$1S&e0X
                                                          g$mod**$23088$1S&e0X
                                                          g$kwd*$23104$1S&e0X
                                                          g$exp*$23090$1S&e0X
                                                          g$rib$23091$1S&e0X
                                                          g$mix?$23092$1S&e0X
                                                          g$sd?$23093$1S&e0X)))
                                                     g$ls/false$23141$1S&e0X)
                                                   (g$syntax-violation$20808$1S&e0X
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$23140$1S&e0X))))
                                              (g$syntax-dispatch$20689$1S&e0X
                                                g$t$23140$1S&e0X
                                                '(_ . each-any)))))
                                          g$e$23094$1S&e0X)
                                         (if (g$memv$11826$1S&e0X
                                               g$t$23105$1S&e0X
                                               '(global-macro
                                                  global-macro!))
                                           (g$chi-body*$20736$1S&e0X
                                             (cons
                                               (g$add-subst$20181$1S&e0X
                                                 g$rib$23091$1S&e0X
                                                 (g$chi-global-macro$20704$1S&e0X
                                                   g$value$23102$1S&e0X
                                                   g$e$23094$1S&e0X
                                                   g$r$23084$1S&e0X))
                                               (cdr g$e*$23083$1S&e0X))
                                             g$r$23084$1S&e0X
                                             g$mr$23085$1S&e0X
                                             g$lex*$23086$1S&e0X
                                             g$rhs*$23087$1S&e0X
                                             g$mod**$23088$1S&e0X
                                             g$kwd*$23104$1S&e0X
                                             g$exp*$23090$1S&e0X
                                             g$rib$23091$1S&e0X
                                             g$mix?$23092$1S&e0X
                                             g$sd?$23093$1S&e0X)
                                           (if (g$memv$11826$1S&e0X
                                                 g$t$23105$1S&e0X
                                                 '(local-macro
                                                    local-macro!))
                                             (g$chi-body*$20736$1S&e0X
                                               (cons
                                                 (g$add-subst$20181$1S&e0X
                                                   g$rib$23091$1S&e0X
                                                   (g$chi-local-macro$20703$1S&e0X
                                                     g$value$23102$1S&e0X
                                                     g$e$23094$1S&e0X
                                                     g$r$23084$1S&e0X))
                                                 (cdr g$e*$23083$1S&e0X))
                                               g$r$23084$1S&e0X
                                               g$mr$23085$1S&e0X
                                               g$lex*$23086$1S&e0X
                                               g$rhs*$23087$1S&e0X
                                               g$mod**$23088$1S&e0X
                                               g$kwd*$23104$1S&e0X
                                               g$exp*$23090$1S&e0X
                                               g$rib$23091$1S&e0X
                                               g$mix?$23092$1S&e0X
                                               g$sd?$23093$1S&e0X)
                                             (if (g$memv$11826$1S&e0X
                                                   g$t$23105$1S&e0X
                                                   '(macro macro!))
                                               (g$chi-body*$20736$1S&e0X
                                                 (cons
                                                   (g$add-subst$20181$1S&e0X
                                                     g$rib$23091$1S&e0X
                                                     (g$chi-macro$20702$1S&e0X
                                                       g$value$23102$1S&e0X
                                                       g$e$23094$1S&e0X
                                                       g$r$23084$1S&e0X))
                                                   (cdr g$e*$23083$1S&e0X))
                                                 g$r$23084$1S&e0X
                                                 g$mr$23085$1S&e0X
                                                 g$lex*$23086$1S&e0X
                                                 g$rhs*$23087$1S&e0X
                                                 g$mod**$23088$1S&e0X
                                                 g$kwd*$23104$1S&e0X
                                                 g$exp*$23090$1S&e0X
                                                 g$rib$23091$1S&e0X
                                                 g$mix?$23092$1S&e0X
                                                 g$sd?$23093$1S&e0X)
                                               (if (eqv?
                                                     g$t$23105$1S&e0X
                                                     'module)
                                                 (call-with-values
                                                   (case-lambda
                                                     (()
                                                      (g$chi-internal-module$20735$1S&e0X
                                                        g$e$23094$1S&e0X
                                                        g$r$23084$1S&e0X
                                                        g$mr$23085$1S&e0X
                                                        g$lex*$23086$1S&e0X
                                                        g$rhs*$23087$1S&e0X
                                                        g$mod**$23088$1S&e0X
                                                        g$kwd*$23104$1S&e0X)))
                                                   (case-lambda
                                                     ((g$lex*$23151$1S&e0X
                                                        g$rhs*$23152$1S&e0X
                                                        g$m-exp-id*$23153$1S&e0X
                                                        g$m-exp-lab*$23154$1S&e0X
                                                        g$r$23155$1S&e0X
                                                        g$mr$23156$1S&e0X
                                                        g$mod**$23157$1S&e0X
                                                        g$kwd*$23158$1S&e0X)
                                                      ((case-lambda
                                                         ((g$kwd*$23159$1S&e0X
                                                            g$mod**$23160$1S&e0X
                                                            g$mr$23161$1S&e0X
                                                            g$r$23162$1S&e0X
                                                            g$m-exp-lab*$23163$1S&e0X
                                                            g$m-exp-id*$23164$1S&e0X
                                                            g$rhs*$23165$1S&e0X
                                                            g$lex*$23166$1S&e0X)
                                                          (begin
                                                            (g$vector-for-each$12733$1S&e0X
                                                              (case-lambda
                                                                ((g$id$23167$1S&e0X
                                                                   g$lab$23168$1S&e0X)
                                                                 (g$extend-rib!$20152$1S&e0X
                                                                   g$rib$23091$1S&e0X
                                                                   g$id$23167$1S&e0X
                                                                   g$lab$23168$1S&e0X
                                                                   g$sd?$23093$1S&e0X)))
                                                              g$m-exp-id*$23164$1S&e0X
                                                              g$m-exp-lab*$23163$1S&e0X)
                                                            (g$chi-body*$20736$1S&e0X
                                                              (cdr g$e*$23083$1S&e0X)
                                                              g$r$23162$1S&e0X
                                                              g$mr$23161$1S&e0X
                                                              g$lex*$23166$1S&e0X
                                                              g$rhs*$23165$1S&e0X
                                                              g$mod**$23160$1S&e0X
                                                              g$kwd*$23159$1S&e0X
                                                              g$exp*$23090$1S&e0X
                                                              g$rib$23091$1S&e0X
                                                              g$mix?$23092$1S&e0X
                                                              g$sd?$23093$1S&e0X))))
                                                       g$kwd*$23158$1S&e0X
                                                       g$mod**$23157$1S&e0X
                                                       g$mr$23156$1S&e0X
                                                       g$r$23155$1S&e0X
                                                       g$m-exp-lab*$23154$1S&e0X
                                                       g$m-exp-id*$23153$1S&e0X
                                                       g$rhs*$23152$1S&e0X
                                                       g$lex*$23151$1S&e0X))))
                                                 (if (eqv?
                                                       g$t$23105$1S&e0X
                                                       'library)
                                                   (begin
                                                     (g$library-expander$20792$1S&e0X
                                                       (g$stx->datum$20202$1S&e0X
                                                         g$e$23094$1S&e0X))
                                                     (g$chi-body*$20736$1S&e0X
                                                       (cdr g$e*$23083$1S&e0X)
                                                       g$r$23084$1S&e0X
                                                       g$mr$23085$1S&e0X
                                                       g$lex*$23086$1S&e0X
                                                       g$rhs*$23087$1S&e0X
                                                       g$mod**$23088$1S&e0X
                                                       g$kwd*$23104$1S&e0X
                                                       g$exp*$23090$1S&e0X
                                                       g$rib$23091$1S&e0X
                                                       g$mix?$23092$1S&e0X
                                                       g$sd?$23093$1S&e0X))
                                                   (if (eqv?
                                                         g$t$23105$1S&e0X
                                                         'export)
                                                     ((case-lambda
                                                        ((g$t$23169$1S&e0X)
                                                         ((case-lambda
                                                            ((g$ls/false$23170$1S&e0X)
                                                             (if g$ls/false$23170$1S&e0X
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$exp-decl*$23171$1S&e0X)
                                                                    (g$chi-body*$20736$1S&e0X
                                                                      (cdr g$e*$23083$1S&e0X)
                                                                      g$r$23084$1S&e0X
                                                                      g$mr$23085$1S&e0X
                                                                      g$lex*$23086$1S&e0X
                                                                      g$rhs*$23087$1S&e0X
                                                                      g$mod**$23088$1S&e0X
                                                                      g$kwd*$23104$1S&e0X
                                                                      (append
                                                                        g$exp-decl*$23171$1S&e0X
                                                                        g$exp*$23090$1S&e0X)
                                                                      g$rib$23091$1S&e0X
                                                                      g$mix?$23092$1S&e0X
                                                                      g$sd?$23093$1S&e0X)))
                                                                 g$ls/false$23170$1S&e0X)
                                                               (g$syntax-violation$20808$1S&e0X
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$23169$1S&e0X))))
                                                          (g$syntax-dispatch$20689$1S&e0X
                                                            g$t$23169$1S&e0X
                                                            '(_ .
                                                                each-any)))))
                                                      g$e$23094$1S&e0X)
                                                     (if (eqv?
                                                           g$t$23105$1S&e0X
                                                           'import)
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$23172$1S&e0X
                                                                       (case-lambda
                                                                         ((g$e$23214$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$23215$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23216$1S&e0X)
                                                                                  (if (if g$ls/false$23216$1S&e0X
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$23217$1S&e0X)
                                                                                               (g$id?$20191$1S&e0X
                                                                                                 g$id$23217$1S&e0X)))
                                                                                            g$ls/false$23216$1S&e0X))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$23218$1S&e0X)
                                                                                         '#t))
                                                                                      g$ls/false$23216$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$23219$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$23220$1S&e0X)
                                                                                            (if g$ls/false$23220$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$23221$1S&e0X)
                                                                                                   '#f))
                                                                                                g$ls/false$23220$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$t$23222$1S&e0X)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$23223$1S&e0X)
                                                                                                      (if g$ls/false$23223$1S&e0X
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$20808$1S&e0X
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$23214$1S&e0X)))
                                                                                                          g$ls/false$23223$1S&e0X)
                                                                                                        (g$syntax-violation$20808$1S&e0X
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$23222$1S&e0X))))
                                                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                                                     g$t$23222$1S&e0X
                                                                                                     '_))))
                                                                                               g$t$23219$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$23219$1S&e0X
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$23215$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$23215$1S&e0X
                                                                                 '(_ any)))))
                                                                           g$e$23214$1S&e0X))))
                                                                     (g$module-import$23173$1S&e0X
                                                                       (case-lambda
                                                                         ((g$e$23197$1S&e0X
                                                                            g$r$23198$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$23199$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23200$1S&e0X)
                                                                                  (if (if g$ls/false$23200$1S&e0X
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$23201$1S&e0X)
                                                                                               (g$id?$20191$1S&e0X
                                                                                                 g$id$23201$1S&e0X)))
                                                                                            g$ls/false$23200$1S&e0X))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$23202$1S&e0X)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$20211$1S&e0X
                                                                                                g$id$23202$1S&e0X
                                                                                                g$r$23198$1S&e0X)))
                                                                                           (case-lambda
                                                                                             ((g$type$23206$1S&e0X
                                                                                                g$value$23207$1S&e0X
                                                                                                g$kwd$23208$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$23209$1S&e0X
                                                                                                    g$value$23210$1S&e0X
                                                                                                    g$type$23211$1S&e0X)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$23212$1S&e0X)
                                                                                                      (if (eqv?
                                                                                                            g$t$23212$1S&e0X
                                                                                                            '$module)
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$23213$1S&e0X)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$20733$1S&e0X
                                                                                                                g$iface$23213$1S&e0X
                                                                                                                g$id$23202$1S&e0X)
                                                                                                              (g$module-interface-exp-lab-vec$20729$1S&e0X
                                                                                                                g$iface$23213$1S&e0X))))
                                                                                                         g$value$23210$1S&e0X)
                                                                                                        (begin
                                                                                                          '#f
                                                                                                          (g$syntax-violation$20808$1S&e0X
                                                                                                            '#f
                                                                                                            '"invalid import"
                                                                                                            g$e$23197$1S&e0X)))))
                                                                                                   g$type$23211$1S&e0X)))
                                                                                               g$kwd$23208$1S&e0X
                                                                                               g$value$23207$1S&e0X
                                                                                               g$type$23206$1S&e0X))))))
                                                                                      g$ls/false$23200$1S&e0X)
                                                                                    (g$syntax-violation$20808$1S&e0X
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$23199$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$23199$1S&e0X
                                                                                 '(_ any)))))
                                                                           g$e$23197$1S&e0X))))
                                                                     (g$library-import$23174$1S&e0X
                                                                       (case-lambda
                                                                         ((g$e$23183$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$t$23184$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23185$1S&e0X)
                                                                                  (if g$ls/false$23185$1S&e0X
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$23186$1S&e0X
                                                                                           g$imp*$23187$1S&e0X)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$20741$1S&e0X
                                                                                                (g$syntax->datum$20811$1S&e0X
                                                                                                  g$imp*$23187$1S&e0X))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$23190$1S&e0X
                                                                                                g$subst-labels$23191$1S&e0X)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$23192$1S&e0X
                                                                                                    g$subst-names$23193$1S&e0X)
                                                                                                  (values
                                                                                                    (g$vector-map$12732$1S&e0X
                                                                                                      (case-lambda
                                                                                                        ((g$name$23194$1S&e0X)
                                                                                                         (g$datum->stx$20174$1S&e0X
                                                                                                           g$ctxt$23186$1S&e0X
                                                                                                           g$name$23194$1S&e0X)))
                                                                                                      g$subst-names$23193$1S&e0X)
                                                                                                    g$subst-labels$23192$1S&e0X)))
                                                                                               g$subst-labels$23191$1S&e0X
                                                                                               g$subst-names$23190$1S&e0X))))))
                                                                                      g$ls/false$23185$1S&e0X)
                                                                                    ((case-lambda
                                                                                       ((g$t$23195$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$23196$1S&e0X)
                                                                                            (if g$ls/false$23196$1S&e0X
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$20808$1S&e0X
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$23183$1S&e0X)))
                                                                                                g$ls/false$23196$1S&e0X)
                                                                                              (g$syntax-violation$20808$1S&e0X
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$23195$1S&e0X))))
                                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                                           g$t$23195$1S&e0X
                                                                                           '_))))
                                                                                     g$t$23184$1S&e0X))))
                                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                                 g$t$23184$1S&e0X
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$23183$1S&e0X)))))
                                                             (begin
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    (if (g$module-import?$23172$1S&e0X
                                                                          g$e$23094$1S&e0X)
                                                                      (g$module-import$23173$1S&e0X
                                                                        g$e$23094$1S&e0X
                                                                        g$r$23084$1S&e0X)
                                                                      (g$library-import$23174$1S&e0X
                                                                        g$e$23094$1S&e0X))))
                                                                 (case-lambda
                                                                   ((g$id*$23177$1S&e0X
                                                                      g$lab*$23178$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$lab*$23179$1S&e0X
                                                                          g$id*$23180$1S&e0X)
                                                                        (g$vector-for-each$12733$1S&e0X
                                                                          (case-lambda
                                                                            ((g$id$23181$1S&e0X
                                                                               g$lab$23182$1S&e0X)
                                                                             (g$extend-rib!$20152$1S&e0X
                                                                               g$rib$23091$1S&e0X
                                                                               g$id$23181$1S&e0X
                                                                               g$lab$23182$1S&e0X
                                                                               g$sd?$23093$1S&e0X)))
                                                                          g$id*$23180$1S&e0X
                                                                          g$lab*$23179$1S&e0X)))
                                                                     g$lab*$23178$1S&e0X
                                                                     g$id*$23177$1S&e0X))))
                                                               (g$chi-body*$20736$1S&e0X
                                                                 (cdr g$e*$23083$1S&e0X)
                                                                 g$r$23084$1S&e0X
                                                                 g$mr$23085$1S&e0X
                                                                 g$lex*$23086$1S&e0X
                                                                 g$rhs*$23087$1S&e0X
                                                                 g$mod**$23088$1S&e0X
                                                                 g$kwd*$23104$1S&e0X
                                                                 g$exp*$23090$1S&e0X
                                                                 g$rib$23091$1S&e0X
                                                                 g$mix?$23092$1S&e0X
                                                                 g$sd?$23093$1S&e0X))))))
                                                       (begin
                                                         '#f
                                                         (if g$mix?$23092$1S&e0X
                                                           (g$chi-body*$20736$1S&e0X
                                                             (cdr g$e*$23083$1S&e0X)
                                                             g$r$23084$1S&e0X
                                                             g$mr$23085$1S&e0X
                                                             (cons
                                                               (g$gen-lexical$20126$1S&e0X
                                                                 'dummy)
                                                               g$lex*$23086$1S&e0X)
                                                             (cons
                                                               (cons
                                                                 'top-expr
                                                                 g$e$23094$1S&e0X)
                                                               g$rhs*$23087$1S&e0X)
                                                             g$mod**$23088$1S&e0X
                                                             g$kwd*$23104$1S&e0X
                                                             g$exp*$23090$1S&e0X
                                                             g$rib$23091$1S&e0X
                                                             '#t
                                                             g$sd?$23093$1S&e0X)
                                                           (values
                                                             g$e*$23083$1S&e0X
                                                             g$r$23084$1S&e0X
                                                             g$mr$23085$1S&e0X
                                                             g$lex*$23086$1S&e0X
                                                             g$rhs*$23087$1S&e0X
                                                             g$mod**$23088$1S&e0X
                                                             g$kwd*$23104$1S&e0X
                                                             g$exp*$23090$1S&e0X))))))))))))))))
                              g$type$23103$1S&e0X)))
                          (if (g$id?$20191$1S&e0X g$kwd$23101$1S&e0X)
                            (cons
                              g$kwd$23101$1S&e0X
                              g$kwd*$23089$1S&e0X)
                            g$kwd*$23089$1S&e0X))))
                      g$kwd$23100$1S&e0X
                      g$value$23099$1S&e0X
                      g$type$23098$1S&e0X))))))
             (car g$e*$23083$1S&e0X)))))))
   (g$expand-transformer$20737$1S&e0X
     g$expand-transformer$24330$1S&e0X
     (case-lambda
       ((g$expr$23224$1S&e0X g$r$23225$1S&e0X)
        ((case-lambda
           ((g$rtc$23226$1S&e0X)
            ((case-lambda
               ((g$expanded-rhs$23227$1S&e0X)
                (begin
                  (g$for-each$11834$1S&e0X
                    ((case-lambda
                       ((g$mark-visit$23228$1S&e0X)
                        (case-lambda
                          ((g$x$23229$1S&e0X)
                           (begin
                             (g$invoke-library$19897$1S&e0X
                               g$x$23229$1S&e0X)
                             (g$mark-visit$23228$1S&e0X
                               g$x$23229$1S&e0X))))))
                     (g$vis-collector$20745$1S&e0X))
                    (g$rtc$23226$1S&e0X))
                  g$expanded-rhs$23227$1S&e0X)))
             ((case-lambda
                ((g$inv-collector$23234$1S&e0X
                   g$vis-collector$23235$1S&e0X
                   g$inv-collector$23236$1S&e0X
                   g$vis-collector$23237$1S&e0X)
                 ((case-lambda
                    ((g$swap$23238$1S&e0X)
                     (dynamic-wind
                       g$swap$23238$1S&e0X
                       (case-lambda
                         (()
                          (g$chi-expr$20707$1S&e0X
                            g$expr$23224$1S&e0X
                            g$r$23225$1S&e0X
                            g$r$23225$1S&e0X)))
                       g$swap$23238$1S&e0X)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$23239$1S&e0X)
                           (begin
                             (g$inv-collector$23234$1S&e0X
                               g$inv-collector$23236$1S&e0X)
                             (set! g$inv-collector$23236$1S&e0X
                               g$t$23239$1S&e0X))))
                        (g$inv-collector$23234$1S&e0X))
                       ((case-lambda
                          ((g$t$23240$1S&e0X)
                           (begin
                             (g$vis-collector$23235$1S&e0X
                               g$vis-collector$23237$1S&e0X)
                             (set! g$vis-collector$23237$1S&e0X
                               g$t$23240$1S&e0X))))
                        (g$vis-collector$23235$1S&e0X))))))))
              g$inv-collector$20744$1S&e0X
              g$vis-collector$20745$1S&e0X
              g$rtc$23226$1S&e0X
              (case-lambda ((g$x$23241$1S&e0X) (values)))))))
         (g$make-collector$20743$1S&e0X)))))
   (g$parse-exports$20738$1S&e0X
     g$parse-exports$24331$1S&e0X
     (case-lambda
       ((g$exp*$23242$1S&e0X)
        ((letrec ((g$f$23243$1S&e0X
                    (case-lambda
                      ((g$exp*$23244$1S&e0X
                         g$int*$23245$1S&e0X
                         g$ext*$23246$1S&e0X)
                       (if (null? g$exp*$23244$1S&e0X)
                         (begin
                           (if (not (g$valid-bound-ids?$20196$1S&e0X
                                      g$ext*$23246$1S&e0X))
                             (g$syntax-violation$20808$1S&e0X
                               'export
                               '"invalid exports"
                               (g$find-dups$20717$1S&e0X
                                 g$ext*$23246$1S&e0X))
                             (void))
                           (values
                             (g$map$11833$1S&e0X
                               g$syntax->datum$20811$1S&e0X
                               g$ext*$23246$1S&e0X)
                             g$int*$23245$1S&e0X))
                         (begin
                           '#f
                           ((case-lambda
                              ((g$t$23247$1S&e0X)
                               ((case-lambda
                                  ((g$ls/false$23248$1S&e0X)
                                   (if g$ls/false$23248$1S&e0X
                                     (apply
                                       (case-lambda
                                         ((g$rename$23249$1S&e0X
                                            g$i*$23250$1S&e0X
                                            g$e*$23251$1S&e0X)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                g$rename$23249$1S&e0X)
                                                              'rename)
                                                       (if (g$for-all$11831$1S&e0X
                                                             g$id?$20191$1S&e0X
                                                             g$i*$23250$1S&e0X)
                                                         (begin
                                                           '#f
                                                           (g$for-all$11831$1S&e0X
                                                             g$id?$20191$1S&e0X
                                                             g$e*$23251$1S&e0X))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$20808$1S&e0X
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$23244$1S&e0X))
                                              (void))
                                            (g$f$23243$1S&e0X
                                              (cdr g$exp*$23244$1S&e0X)
                                              (append
                                                g$i*$23250$1S&e0X
                                                g$int*$23245$1S&e0X)
                                              (append
                                                g$e*$23251$1S&e0X
                                                g$ext*$23246$1S&e0X)))))
                                       g$ls/false$23248$1S&e0X)
                                     ((case-lambda
                                        ((g$t$23252$1S&e0X)
                                         ((case-lambda
                                            ((g$ls/false$23253$1S&e0X)
                                             (if g$ls/false$23253$1S&e0X
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$23254$1S&e0X)
                                                    (begin
                                                      (if (not (g$id?$20191$1S&e0X
                                                                 g$ie$23254$1S&e0X))
                                                        (g$syntax-violation$20808$1S&e0X
                                                          'export
                                                          '"invalid export"
                                                          g$ie$23254$1S&e0X)
                                                        (void))
                                                      (g$f$23243$1S&e0X
                                                        (cdr g$exp*$23244$1S&e0X)
                                                        (cons
                                                          g$ie$23254$1S&e0X
                                                          g$int*$23245$1S&e0X)
                                                        (cons
                                                          g$ie$23254$1S&e0X
                                                          g$ext*$23246$1S&e0X)))))
                                                 g$ls/false$23253$1S&e0X)
                                               (g$syntax-violation$20808$1S&e0X
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$23252$1S&e0X))))
                                          (g$syntax-dispatch$20689$1S&e0X
                                            g$t$23252$1S&e0X
                                            'any))))
                                      g$t$23247$1S&e0X))))
                                (g$syntax-dispatch$20689$1S&e0X
                                  g$t$23247$1S&e0X
                                  '(any . #(each (any any)))))))
                            (car g$exp*$23244$1S&e0X))))))))
           g$f$23243$1S&e0X)
         g$exp*$23242$1S&e0X
         '()
         '()))))
   (g$parse-library-name$20739$1S&e0X
     g$parse-library-name$24332$1S&e0X
     (case-lambda
       ((g$spec$23255$1S&e0X)
        (letrec* ((g$parse$23256$1S&e0X
                    (case-lambda
                      ((g$x$23263$1S&e0X)
                       ((case-lambda
                          ((g$t$23264$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$23265$1S&e0X)
                               (if (if g$ls/false$23265$1S&e0X
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$23266$1S&e0X)
                                            (g$for-all$11831$1S&e0X
                                              (case-lambda
                                                ((g$x$23267$1S&e0X)
                                                 ((case-lambda
                                                    ((g$x$23268$1S&e0X)
                                                     (if (g$integer?$13681$1S&e0X
                                                           g$x$23268$1S&e0X)
                                                       (begin
                                                         '#f
                                                         (g$exact?$13676$1S&e0X
                                                           g$x$23268$1S&e0X))
                                                       '#f)))
                                                  (g$syntax->datum$20811$1S&e0X
                                                    g$x$23267$1S&e0X))))
                                              g$v*$23266$1S&e0X)))
                                         g$ls/false$23265$1S&e0X))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$23269$1S&e0X)
                                      (values
                                        '()
                                        (g$map$11833$1S&e0X
                                          g$syntax->datum$20811$1S&e0X
                                          g$v*$23269$1S&e0X))))
                                   g$ls/false$23265$1S&e0X)
                                 ((case-lambda
                                    ((g$t$23270$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$23271$1S&e0X)
                                         (if (if g$ls/false$23271$1S&e0X
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$23272$1S&e0X
                                                        g$rest$23273$1S&e0X)
                                                      (g$symbol?$12665$1S&e0X
                                                        (g$syntax->datum$20811$1S&e0X
                                                          g$x$23272$1S&e0X))))
                                                   g$ls/false$23271$1S&e0X))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$23274$1S&e0X
                                                  g$rest$23275$1S&e0X)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$23256$1S&e0X
                                                       g$rest$23275$1S&e0X)))
                                                  (case-lambda
                                                    ((g$x*$23278$1S&e0X
                                                       g$v*$23279$1S&e0X)
                                                     ((case-lambda
                                                        ((g$v*$23280$1S&e0X
                                                           g$x*$23281$1S&e0X)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$20811$1S&e0X
                                                               g$x$23274$1S&e0X)
                                                             g$x*$23281$1S&e0X)
                                                           g$v*$23280$1S&e0X)))
                                                      g$v*$23279$1S&e0X
                                                      g$x*$23278$1S&e0X))))))
                                             g$ls/false$23271$1S&e0X)
                                           ((case-lambda
                                              ((g$t$23282$1S&e0X)
                                               ((case-lambda
                                                  ((g$ls/false$23283$1S&e0X)
                                                   (if g$ls/false$23283$1S&e0X
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$23283$1S&e0X)
                                                     ((case-lambda
                                                        ((g$t$23284$1S&e0X)
                                                         ((case-lambda
                                                            ((g$ls/false$23285$1S&e0X)
                                                             (if g$ls/false$23285$1S&e0X
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$20808$1S&e0X
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$23255$1S&e0X)))
                                                                 g$ls/false$23285$1S&e0X)
                                                               (g$syntax-violation$20808$1S&e0X
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$23284$1S&e0X))))
                                                          (g$syntax-dispatch$20689$1S&e0X
                                                            g$t$23284$1S&e0X
                                                            '_))))
                                                      g$t$23282$1S&e0X))))
                                                (g$syntax-dispatch$20689$1S&e0X
                                                  g$t$23282$1S&e0X
                                                  '()))))
                                            g$t$23270$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$23270$1S&e0X
                                        '(any . any)))))
                                  g$t$23264$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$23264$1S&e0X
                              '(each-any)))))
                        g$x$23263$1S&e0X)))))
          (call-with-values
            (case-lambda
              (() (g$parse$23256$1S&e0X g$spec$23255$1S&e0X)))
            (case-lambda
              ((g$name*$23259$1S&e0X g$ver*$23260$1S&e0X)
               ((case-lambda
                  ((g$ver*$23261$1S&e0X g$name*$23262$1S&e0X)
                   (begin
                     (if (null? g$name*$23262$1S&e0X)
                       (g$syntax-violation$20808$1S&e0X
                         '#f
                         '"empty library name"
                         g$spec$23255$1S&e0X)
                       (void))
                     (values
                       g$name*$23262$1S&e0X
                       g$ver*$23261$1S&e0X))))
                g$ver*$23260$1S&e0X
                g$name*$23259$1S&e0X))))))))
   (g$parse-library$20740$1S&e0X
     g$parse-library$24333$1S&e0X
     (case-lambda
       ((g$e$23286$1S&e0X)
        ((case-lambda
           ((g$t$23287$1S&e0X)
            ((case-lambda
               ((g$ls/false$23288$1S&e0X)
                (if (if g$ls/false$23288$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$23289$1S&e0X
                               g$name*$23290$1S&e0X
                               g$export$23291$1S&e0X
                               g$exp*$23292$1S&e0X
                               g$import$23293$1S&e0X
                               g$imp*$23294$1S&e0X
                               g$b*$23295$1S&e0X)
                             (if (eq? (g$syntax->datum$20811$1S&e0X
                                        g$export$23291$1S&e0X)
                                      'export)
                               (if (eq? (g$syntax->datum$20811$1S&e0X
                                          g$import$23293$1S&e0X)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$20811$1S&e0X
                                          g$library$23289$1S&e0X)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$23288$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$23296$1S&e0X
                         g$name*$23297$1S&e0X
                         g$export$23298$1S&e0X
                         g$exp*$23299$1S&e0X
                         g$import$23300$1S&e0X
                         g$imp*$23301$1S&e0X
                         g$b*$23302$1S&e0X)
                       (values
                         g$name*$23297$1S&e0X
                         g$exp*$23299$1S&e0X
                         g$imp*$23301$1S&e0X
                         g$b*$23302$1S&e0X)))
                    g$ls/false$23288$1S&e0X)
                  ((case-lambda
                     ((g$t$23303$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$23304$1S&e0X)
                          (if g$ls/false$23304$1S&e0X
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$20808$1S&e0X
                                   '#f
                                   '"malformed library"
                                   g$e$23286$1S&e0X)))
                              g$ls/false$23304$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$23303$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$23303$1S&e0X
                         '_))))
                   g$t$23287$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$23287$1S&e0X
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$23286$1S&e0X))))
   (g$parse-import-spec*$20741$1S&e0X
     g$parse-import-spec*$24334$1S&e0X
     (case-lambda
       ((g$imp*$23305$1S&e0X)
        (letrec* ((g$idsyn?$23306$1S&e0X
                    (case-lambda
                      ((g$x$23566$1S&e0X)
                       (g$symbol?$12665$1S&e0X
                         (g$syntax->datum$20811$1S&e0X
                           g$x$23566$1S&e0X)))))
                  (g$dup-error$23307$1S&e0X
                    (case-lambda
                      ((g$name$23565$1S&e0X)
                       (g$syntax-violation$20808$1S&e0X
                         'import
                         '"two imports with different bindings"
                         g$name$23565$1S&e0X))))
                  (g$merge-substs$23308$1S&e0X
                    (case-lambda
                      ((g$s$23556$1S&e0X g$subst$23557$1S&e0X)
                       (letrec* ((g$insert-to-subst$23558$1S&e0X
                                   (case-lambda
                                     ((g$a$23559$1S&e0X
                                        g$subst$23560$1S&e0X)
                                      ((case-lambda
                                         ((g$name$23561$1S&e0X
                                            g$label$23562$1S&e0X)
                                          ((case-lambda
                                             ((g$t$23563$1S&e0X)
                                              (if g$t$23563$1S&e0X
                                                ((case-lambda
                                                   ((g$x$23564$1S&e0X)
                                                    (if (eq? (cdr g$x$23564$1S&e0X)
                                                             g$label$23562$1S&e0X)
                                                      g$subst$23560$1S&e0X
                                                      (begin
                                                        '#f
                                                        (g$dup-error$23307$1S&e0X
                                                          g$name$23561$1S&e0X)))))
                                                 g$t$23563$1S&e0X)
                                                (begin
                                                  '#f
                                                  (cons
                                                    g$a$23559$1S&e0X
                                                    g$subst$23560$1S&e0X)))))
                                           (g$assq$11821$1S&e0X
                                             g$name$23561$1S&e0X
                                             g$subst$23560$1S&e0X))))
                                       (car g$a$23559$1S&e0X)
                                       (cdr g$a$23559$1S&e0X))))))
                         (if (null? g$s$23556$1S&e0X)
                           g$subst$23557$1S&e0X
                           (begin
                             '#f
                             (g$insert-to-subst$23558$1S&e0X
                               (car g$s$23556$1S&e0X)
                               (g$merge-substs$23308$1S&e0X
                                 (cdr g$s$23556$1S&e0X)
                                 g$subst$23557$1S&e0X))))))))
                  (g$exclude*$23309$1S&e0X
                    (case-lambda
                      ((g$sym*$23532$1S&e0X g$subst$23533$1S&e0X)
                       (letrec* ((g$exclude$23534$1S&e0X
                                   (case-lambda
                                     ((g$sym$23547$1S&e0X
                                        g$subst$23548$1S&e0X)
                                      (if (null? g$subst$23548$1S&e0X)
                                        (g$syntax-violation$20808$1S&e0X
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$23547$1S&e0X)
                                        (if (eq? g$sym$23547$1S&e0X
                                                 (g$caar$12683$1S&e0X
                                                   g$subst$23548$1S&e0X))
                                          (values
                                            (g$cdar$12685$1S&e0X
                                              g$subst$23548$1S&e0X)
                                            (cdr g$subst$23548$1S&e0X))
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$a$23549$1S&e0X)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$exclude$23534$1S&e0X
                                                       g$sym$23547$1S&e0X
                                                       (cdr g$subst$23548$1S&e0X))))
                                                  (case-lambda
                                                    ((g$old$23552$1S&e0X
                                                       g$subst$23553$1S&e0X)
                                                     ((case-lambda
                                                        ((g$subst$23554$1S&e0X
                                                           g$old$23555$1S&e0X)
                                                         (values
                                                           g$old$23555$1S&e0X
                                                           (cons
                                                             g$a$23549$1S&e0X
                                                             g$subst$23554$1S&e0X))))
                                                      g$subst$23553$1S&e0X
                                                      g$old$23552$1S&e0X))))))
                                             (car g$subst$23548$1S&e0X)))))))))
                         (if (null? g$sym*$23532$1S&e0X)
                           (values '() g$subst$23533$1S&e0X)
                           (begin
                             '#f
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$exclude$23534$1S&e0X
                                    (car g$sym*$23532$1S&e0X)
                                    g$subst$23533$1S&e0X)))
                               (case-lambda
                                 ((g$old$23537$1S&e0X
                                    g$subst$23538$1S&e0X)
                                  ((case-lambda
                                     ((g$subst$23539$1S&e0X
                                        g$old$23540$1S&e0X)
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$exclude*$23309$1S&e0X
                                             (cdr g$sym*$23532$1S&e0X)
                                             g$subst$23539$1S&e0X)))
                                        (case-lambda
                                          ((g$old*$23543$1S&e0X
                                             g$subst$23544$1S&e0X)
                                           ((case-lambda
                                              ((g$subst$23545$1S&e0X
                                                 g$old*$23546$1S&e0X)
                                               (values
                                                 (cons
                                                   g$old$23540$1S&e0X
                                                   g$old*$23546$1S&e0X)
                                                 g$subst$23545$1S&e0X)))
                                            g$subst$23544$1S&e0X
                                            g$old*$23543$1S&e0X))))))
                                   g$subst$23538$1S&e0X
                                   g$old$23537$1S&e0X))))))))))
                  (g$find*$23310$1S&e0X
                    (case-lambda
                      ((g$sym*$23528$1S&e0X g$subst$23529$1S&e0X)
                       (g$map$11833$1S&e0X
                         (case-lambda
                           ((g$x$23530$1S&e0X)
                            ((case-lambda
                               ((g$t$23531$1S&e0X)
                                (if g$t$23531$1S&e0X
                                  (cdr g$t$23531$1S&e0X)
                                  (begin
                                    '#f
                                    (g$syntax-violation$20808$1S&e0X
                                      'import
                                      '"cannot find identifier"
                                      g$x$23530$1S&e0X)))))
                             (g$assq$11821$1S&e0X
                               g$x$23530$1S&e0X
                               g$subst$23529$1S&e0X))))
                         g$sym*$23528$1S&e0X))))
                  (g$rem*$23311$1S&e0X
                    (case-lambda
                      ((g$sym*$23524$1S&e0X g$subst$23525$1S&e0X)
                       ((letrec ((g$f$23526$1S&e0X
                                   (case-lambda
                                     ((g$subst$23527$1S&e0X)
                                      (if (null? g$subst$23527$1S&e0X)
                                        '()
                                        (if (g$memq$11825$1S&e0X
                                              (g$caar$12683$1S&e0X
                                                g$subst$23527$1S&e0X)
                                              g$sym*$23524$1S&e0X)
                                          (g$f$23526$1S&e0X
                                            (cdr g$subst$23527$1S&e0X))
                                          (begin
                                            '#f
                                            (cons
                                              (car g$subst$23527$1S&e0X)
                                              (g$f$23526$1S&e0X
                                                (cdr g$subst$23527$1S&e0X))))))))))
                          g$f$23526$1S&e0X)
                        g$subst$23525$1S&e0X))))
                  (g$remove-dups$23312$1S&e0X
                    (case-lambda
                      ((g$ls$23523$1S&e0X)
                       (if (null? g$ls$23523$1S&e0X)
                         '()
                         (if (g$memq$11825$1S&e0X
                               (car g$ls$23523$1S&e0X)
                               (cdr g$ls$23523$1S&e0X))
                           (g$remove-dups$23312$1S&e0X
                             (cdr g$ls$23523$1S&e0X))
                           (begin
                             '#f
                             (cons
                               (car g$ls$23523$1S&e0X)
                               (g$remove-dups$23312$1S&e0X
                                 (cdr g$ls$23523$1S&e0X)))))))))
                  (g$parse-library-name$23313$1S&e0X
                    (case-lambda
                      ((g$spec$23407$1S&e0X)
                       (letrec* ((g$subversion?$23408$1S&e0X
                                   (case-lambda
                                     ((g$x$23521$1S&e0X)
                                      ((case-lambda
                                         ((g$x$23522$1S&e0X)
                                          (if (g$integer?$13681$1S&e0X
                                                g$x$23522$1S&e0X)
                                            (if (g$exact?$13676$1S&e0X
                                                  g$x$23522$1S&e0X)
                                              (begin
                                                '#f
                                                (g$>=$13698$1S&e0X
                                                  g$x$23522$1S&e0X
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$20811$1S&e0X
                                         g$x$23521$1S&e0X)))))
                                 (g$subversion-pred$23409$1S&e0X
                                   (case-lambda
                                     ((g$x*$23473$1S&e0X)
                                      ((case-lambda
                                         ((g$t$23474$1S&e0X)
                                          ((case-lambda
                                             ((g$ls/false$23475$1S&e0X)
                                              (if (if g$ls/false$23475$1S&e0X
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$23476$1S&e0X)
                                                           (g$subversion?$23408$1S&e0X
                                                             g$n$23476$1S&e0X)))
                                                        g$ls/false$23475$1S&e0X))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$23477$1S&e0X)
                                                     (case-lambda
                                                       ((g$x$23478$1S&e0X)
                                                        (g$=$13694$1S&e0X
                                                          g$x$23478$1S&e0X
                                                          (g$syntax->datum$20811$1S&e0X
                                                            g$n$23477$1S&e0X))))))
                                                  g$ls/false$23475$1S&e0X)
                                                ((case-lambda
                                                   ((g$t$23479$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$23480$1S&e0X)
                                                        (if (if g$ls/false$23480$1S&e0X
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$23481$1S&e0X
                                                                       g$sub*$23482$1S&e0X)
                                                                     (eq? (g$syntax->datum$20811$1S&e0X
                                                                            g$p?$23481$1S&e0X)
                                                                          'and)))
                                                                  g$ls/false$23480$1S&e0X))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$23483$1S&e0X
                                                                 g$sub*$23484$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$p*$23485$1S&e0X)
                                                                   (case-lambda
                                                                     ((g$x$23486$1S&e0X)
                                                                      (g$for-all$11831$1S&e0X
                                                                        (case-lambda
                                                                          ((g$p$23487$1S&e0X)
                                                                           (g$p$23487$1S&e0X
                                                                             g$x$23486$1S&e0X)))
                                                                        g$p*$23485$1S&e0X)))))
                                                                (g$map$11833$1S&e0X
                                                                  g$subversion-pred$23409$1S&e0X
                                                                  g$sub*$23484$1S&e0X))))
                                                            g$ls/false$23480$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$23488$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$23489$1S&e0X)
                                                                  (if (if g$ls/false$23489$1S&e0X
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$23490$1S&e0X
                                                                                 g$sub*$23491$1S&e0X)
                                                                               (eq? (g$syntax->datum$20811$1S&e0X
                                                                                      g$p?$23490$1S&e0X)
                                                                                    'or)))
                                                                            g$ls/false$23489$1S&e0X))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$23492$1S&e0X
                                                                           g$sub*$23493$1S&e0X)
                                                                         ((case-lambda
                                                                            ((g$p*$23494$1S&e0X)
                                                                             (case-lambda
                                                                               ((g$x$23495$1S&e0X)
                                                                                (g$exists$11832$1S&e0X
                                                                                  (case-lambda
                                                                                    ((g$p$23496$1S&e0X)
                                                                                     (g$p$23496$1S&e0X
                                                                                       g$x$23495$1S&e0X)))
                                                                                  g$p*$23494$1S&e0X)))))
                                                                          (g$map$11833$1S&e0X
                                                                            g$subversion-pred$23409$1S&e0X
                                                                            g$sub*$23493$1S&e0X))))
                                                                      g$ls/false$23489$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$t$23497$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$ls/false$23498$1S&e0X)
                                                                            (if (if g$ls/false$23498$1S&e0X
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$23499$1S&e0X
                                                                                           g$sub$23500$1S&e0X)
                                                                                         (eq? (g$syntax->datum$20811$1S&e0X
                                                                                                g$p?$23499$1S&e0X)
                                                                                              'not)))
                                                                                      g$ls/false$23498$1S&e0X))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$23501$1S&e0X
                                                                                     g$sub$23502$1S&e0X)
                                                                                   ((case-lambda
                                                                                      ((g$p$23503$1S&e0X)
                                                                                       (case-lambda
                                                                                         ((g$x$23504$1S&e0X)
                                                                                          (not (g$p$23503$1S&e0X
                                                                                                 g$x$23504$1S&e0X))))))
                                                                                    (g$subversion-pred$23409$1S&e0X
                                                                                      g$sub$23502$1S&e0X))))
                                                                                g$ls/false$23498$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$t$23505$1S&e0X)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23506$1S&e0X)
                                                                                      (if (if g$ls/false$23506$1S&e0X
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$23507$1S&e0X
                                                                                                     g$n$23508$1S&e0X)
                                                                                                   (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                                                              g$p?$23507$1S&e0X)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$23408$1S&e0X
                                                                                                         g$n$23508$1S&e0X))
                                                                                                     '#f)))
                                                                                                g$ls/false$23506$1S&e0X))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$23509$1S&e0X
                                                                                               g$n$23510$1S&e0X)
                                                                                             (case-lambda
                                                                                               ((g$x$23511$1S&e0X)
                                                                                                (g$<=$13696$1S&e0X
                                                                                                  g$x$23511$1S&e0X
                                                                                                  (g$syntax->datum$20811$1S&e0X
                                                                                                    g$n$23510$1S&e0X))))))
                                                                                          g$ls/false$23506$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$t$23512$1S&e0X)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23513$1S&e0X)
                                                                                                (if (if g$ls/false$23513$1S&e0X
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$23514$1S&e0X
                                                                                                               g$n$23515$1S&e0X)
                                                                                                             (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                                                                        g$p?$23514$1S&e0X)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$23408$1S&e0X
                                                                                                                   g$n$23515$1S&e0X))
                                                                                                               '#f)))
                                                                                                          g$ls/false$23513$1S&e0X))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$23516$1S&e0X
                                                                                                         g$n$23517$1S&e0X)
                                                                                                       (case-lambda
                                                                                                         ((g$x$23518$1S&e0X)
                                                                                                          (g$>=$13698$1S&e0X
                                                                                                            g$x$23518$1S&e0X
                                                                                                            (g$syntax->datum$20811$1S&e0X
                                                                                                              g$n$23517$1S&e0X))))))
                                                                                                    g$ls/false$23513$1S&e0X)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$23519$1S&e0X)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$23520$1S&e0X)
                                                                                                          (if g$ls/false$23520$1S&e0X
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$20808$1S&e0X
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$23407$1S&e0X
                                                                                                                   g$x*$23473$1S&e0X)))
                                                                                                              g$ls/false$23520$1S&e0X)
                                                                                                            (g$syntax-violation$20808$1S&e0X
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$23519$1S&e0X))))
                                                                                                       (g$syntax-dispatch$20689$1S&e0X
                                                                                                         g$t$23519$1S&e0X
                                                                                                         '_))))
                                                                                                   g$t$23512$1S&e0X))))
                                                                                             (g$syntax-dispatch$20689$1S&e0X
                                                                                               g$t$23512$1S&e0X
                                                                                               '(any any)))))
                                                                                         g$t$23505$1S&e0X))))
                                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                                     g$t$23505$1S&e0X
                                                                                     '(any any)))))
                                                                               g$t$23497$1S&e0X))))
                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                           g$t$23497$1S&e0X
                                                                           '(any any)))))
                                                                     g$t$23488$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$23488$1S&e0X
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$23479$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$23479$1S&e0X
                                                       '(any .
                                                             each-any)))))
                                                 g$t$23474$1S&e0X))))
                                           (g$syntax-dispatch$20689$1S&e0X
                                             g$t$23474$1S&e0X
                                             'any))))
                                       g$x*$23473$1S&e0X))))
                                 (g$version-pred$23410$1S&e0X
                                   (case-lambda
                                     ((g$x*$23433$1S&e0X)
                                      ((case-lambda
                                         ((g$t$23434$1S&e0X)
                                          ((case-lambda
                                             ((g$ls/false$23435$1S&e0X)
                                              (if g$ls/false$23435$1S&e0X
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$23436$1S&e0X)
                                                        '#t))))
                                                  g$ls/false$23435$1S&e0X)
                                                ((case-lambda
                                                   ((g$t$23437$1S&e0X)
                                                    ((case-lambda
                                                       ((g$ls/false$23438$1S&e0X)
                                                        (if (if g$ls/false$23438$1S&e0X
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$23439$1S&e0X
                                                                       g$ver*$23440$1S&e0X)
                                                                     (eq? (g$syntax->datum$20811$1S&e0X
                                                                            g$c$23439$1S&e0X)
                                                                          'and)))
                                                                  g$ls/false$23438$1S&e0X))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$23441$1S&e0X
                                                                 g$ver*$23442$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$p*$23443$1S&e0X)
                                                                   (case-lambda
                                                                     ((g$x$23444$1S&e0X)
                                                                      (g$for-all$11831$1S&e0X
                                                                        (case-lambda
                                                                          ((g$p$23445$1S&e0X)
                                                                           (g$p$23445$1S&e0X
                                                                             g$x$23444$1S&e0X)))
                                                                        g$p*$23443$1S&e0X)))))
                                                                (g$map$11833$1S&e0X
                                                                  g$version-pred$23410$1S&e0X
                                                                  g$ver*$23442$1S&e0X))))
                                                            g$ls/false$23438$1S&e0X)
                                                          ((case-lambda
                                                             ((g$t$23446$1S&e0X)
                                                              ((case-lambda
                                                                 ((g$ls/false$23447$1S&e0X)
                                                                  (if (if g$ls/false$23447$1S&e0X
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$23448$1S&e0X
                                                                                 g$ver*$23449$1S&e0X)
                                                                               (eq? (g$syntax->datum$20811$1S&e0X
                                                                                      g$c$23448$1S&e0X)
                                                                                    'or)))
                                                                            g$ls/false$23447$1S&e0X))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$23450$1S&e0X
                                                                           g$ver*$23451$1S&e0X)
                                                                         ((case-lambda
                                                                            ((g$p*$23452$1S&e0X)
                                                                             (case-lambda
                                                                               ((g$x$23453$1S&e0X)
                                                                                (g$exists$11832$1S&e0X
                                                                                  (case-lambda
                                                                                    ((g$p$23454$1S&e0X)
                                                                                     (g$p$23454$1S&e0X
                                                                                       g$x$23453$1S&e0X)))
                                                                                  g$p*$23452$1S&e0X)))))
                                                                          (g$map$11833$1S&e0X
                                                                            g$version-pred$23410$1S&e0X
                                                                            g$ver*$23451$1S&e0X))))
                                                                      g$ls/false$23447$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$t$23455$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$ls/false$23456$1S&e0X)
                                                                            (if (if g$ls/false$23456$1S&e0X
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$23457$1S&e0X
                                                                                           g$ver$23458$1S&e0X)
                                                                                         (eq? (g$syntax->datum$20811$1S&e0X
                                                                                                g$c$23457$1S&e0X)
                                                                                              'not)))
                                                                                      g$ls/false$23456$1S&e0X))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$23459$1S&e0X
                                                                                     g$ver$23460$1S&e0X)
                                                                                   ((case-lambda
                                                                                      ((g$p$23461$1S&e0X)
                                                                                       (case-lambda
                                                                                         ((g$x$23462$1S&e0X)
                                                                                          (not (g$p$23461$1S&e0X
                                                                                                 g$x$23462$1S&e0X))))))
                                                                                    (g$version-pred$23410$1S&e0X
                                                                                      g$ver$23460$1S&e0X))))
                                                                                g$ls/false$23456$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$t$23463$1S&e0X)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23464$1S&e0X)
                                                                                      (if g$ls/false$23464$1S&e0X
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$23465$1S&e0X)
                                                                                             ((case-lambda
                                                                                                ((g$p*$23466$1S&e0X)
                                                                                                 (case-lambda
                                                                                                   ((g$x$23467$1S&e0X)
                                                                                                    ((letrec ((g$f$23468$1S&e0X
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$23469$1S&e0X
                                                                                                                     g$x$23470$1S&e0X)
                                                                                                                   (if (null?
                                                                                                                         g$p*$23469$1S&e0X)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$23470$1S&e0X)
                                                                                                                       '#f
                                                                                                                       (begin
                                                                                                                         '#f
                                                                                                                         (if ((car g$p*$23469$1S&e0X)
                                                                                                                              (car g$x$23470$1S&e0X))
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (g$f$23468$1S&e0X
                                                                                                                               (cdr g$p*$23469$1S&e0X)
                                                                                                                               (cdr g$x$23470$1S&e0X)))
                                                                                                                           '#f))))))))
                                                                                                       g$f$23468$1S&e0X)
                                                                                                     g$p*$23466$1S&e0X
                                                                                                     g$x$23467$1S&e0X)))))
                                                                                              (g$map$11833$1S&e0X
                                                                                                g$subversion-pred$23409$1S&e0X
                                                                                                g$sub*$23465$1S&e0X))))
                                                                                          g$ls/false$23464$1S&e0X)
                                                                                        ((case-lambda
                                                                                           ((g$t$23471$1S&e0X)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23472$1S&e0X)
                                                                                                (if g$ls/false$23472$1S&e0X
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$20808$1S&e0X
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$23407$1S&e0X
                                                                                                         g$x*$23433$1S&e0X)))
                                                                                                    g$ls/false$23472$1S&e0X)
                                                                                                  (g$syntax-violation$20808$1S&e0X
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$23471$1S&e0X))))
                                                                                             (g$syntax-dispatch$20689$1S&e0X
                                                                                               g$t$23471$1S&e0X
                                                                                               '_))))
                                                                                         g$t$23463$1S&e0X))))
                                                                                   (g$syntax-dispatch$20689$1S&e0X
                                                                                     g$t$23463$1S&e0X
                                                                                     'each-any))))
                                                                               g$t$23455$1S&e0X))))
                                                                         (g$syntax-dispatch$20689$1S&e0X
                                                                           g$t$23455$1S&e0X
                                                                           '(any any)))))
                                                                     g$t$23446$1S&e0X))))
                                                               (g$syntax-dispatch$20689$1S&e0X
                                                                 g$t$23446$1S&e0X
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$23437$1S&e0X))))
                                                     (g$syntax-dispatch$20689$1S&e0X
                                                       g$t$23437$1S&e0X
                                                       '(any .
                                                             each-any)))))
                                                 g$t$23434$1S&e0X))))
                                           (g$syntax-dispatch$20689$1S&e0X
                                             g$t$23434$1S&e0X
                                             '()))))
                                       g$x*$23433$1S&e0X)))))
                         ((letrec ((g$f$23411$1S&e0X
                                     (case-lambda
                                       ((g$x$23412$1S&e0X)
                                        ((case-lambda
                                           ((g$t$23413$1S&e0X)
                                            ((case-lambda
                                               ((g$ls/false$23414$1S&e0X)
                                                (if g$ls/false$23414$1S&e0X
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$23415$1S&e0X)
                                                       (values
                                                         '()
                                                         (g$version-pred$23410$1S&e0X
                                                           g$version-spec*$23415$1S&e0X))))
                                                    g$ls/false$23414$1S&e0X)
                                                  ((case-lambda
                                                     ((g$t$23416$1S&e0X)
                                                      ((case-lambda
                                                         ((g$ls/false$23417$1S&e0X)
                                                          (if (if g$ls/false$23417$1S&e0X
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$23418$1S&e0X
                                                                         g$x*$23419$1S&e0X)
                                                                       (g$idsyn?$23306$1S&e0X
                                                                         g$x$23418$1S&e0X)))
                                                                    g$ls/false$23417$1S&e0X))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$23420$1S&e0X
                                                                   g$x*$23421$1S&e0X)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$23411$1S&e0X
                                                                        g$x*$23421$1S&e0X)))
                                                                   (case-lambda
                                                                     ((g$name$23424$1S&e0X
                                                                        g$pred$23425$1S&e0X)
                                                                      ((case-lambda
                                                                         ((g$pred$23426$1S&e0X
                                                                            g$name$23427$1S&e0X)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$20811$1S&e0X
                                                                                g$x$23420$1S&e0X)
                                                                              g$name$23427$1S&e0X)
                                                                            g$pred$23426$1S&e0X)))
                                                                       g$pred$23425$1S&e0X
                                                                       g$name$23424$1S&e0X))))))
                                                              g$ls/false$23417$1S&e0X)
                                                            ((case-lambda
                                                               ((g$t$23428$1S&e0X)
                                                                ((case-lambda
                                                                   ((g$ls/false$23429$1S&e0X)
                                                                    (if g$ls/false$23429$1S&e0X
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$23430$1S&e0X)
                                                                                '#t)))))
                                                                        g$ls/false$23429$1S&e0X)
                                                                      ((case-lambda
                                                                         ((g$t$23431$1S&e0X)
                                                                          ((case-lambda
                                                                             ((g$ls/false$23432$1S&e0X)
                                                                              (if g$ls/false$23432$1S&e0X
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$20808$1S&e0X
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$23407$1S&e0X)))
                                                                                  g$ls/false$23432$1S&e0X)
                                                                                (g$syntax-violation$20808$1S&e0X
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$23431$1S&e0X))))
                                                                           (g$syntax-dispatch$20689$1S&e0X
                                                                             g$t$23431$1S&e0X
                                                                             '_))))
                                                                       g$t$23428$1S&e0X))))
                                                                 (g$syntax-dispatch$20689$1S&e0X
                                                                   g$t$23428$1S&e0X
                                                                   '()))))
                                                             g$t$23416$1S&e0X))))
                                                       (g$syntax-dispatch$20689$1S&e0X
                                                         g$t$23416$1S&e0X
                                                         '(any .
                                                               any)))))
                                                   g$t$23413$1S&e0X))))
                                             (g$syntax-dispatch$20689$1S&e0X
                                               g$t$23413$1S&e0X
                                               '(each-any)))))
                                         g$x$23412$1S&e0X)))))
                            g$f$23411$1S&e0X)
                          g$spec$23407$1S&e0X)))))
                  (g$import-library$23314$1S&e0X
                    (case-lambda
                      ((g$spec*$23399$1S&e0X)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$23313$1S&e0X
                              g$spec*$23399$1S&e0X)))
                         (case-lambda
                           ((g$name$23402$1S&e0X g$pred$23403$1S&e0X)
                            ((case-lambda
                               ((g$pred$23404$1S&e0X
                                  g$name$23405$1S&e0X)
                                (begin
                                  (if (null? g$name$23405$1S&e0X)
                                    (g$syntax-violation$20808$1S&e0X
                                      'import
                                      '"empty library name"
                                      g$spec*$23399$1S&e0X)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$23406$1S&e0X)
                                      (begin
                                        (if (not g$lib$23406$1S&e0X)
                                          (g$syntax-violation$20808$1S&e0X
                                            'import
                                            '"cannot find library with required name"
                                            g$name$23405$1S&e0X)
                                          (void))
                                        (if (not (g$pred$23404$1S&e0X
                                                   (g$library-version$19850$1S&e0X
                                                     g$lib$23406$1S&e0X)))
                                          (g$syntax-violation$20808$1S&e0X
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$23399$1S&e0X
                                            g$lib$23406$1S&e0X)
                                          (void))
                                        ((g$imp-collector$20746$1S&e0X)
                                         g$lib$23406$1S&e0X)
                                        (g$library-subst$19854$1S&e0X
                                          g$lib$23406$1S&e0X))))
                                   (g$find-library-by-name$19890$1S&e0X
                                     g$name$23405$1S&e0X)))))
                             g$pred$23403$1S&e0X
                             g$name$23402$1S&e0X)))))))
                  (g$get-import$23315$1S&e0X
                    (case-lambda
                      ((g$spec$23328$1S&e0X)
                       ((case-lambda
                          ((g$t$23329$1S&e0X)
                           ((case-lambda
                              ((g$ls/false$23330$1S&e0X)
                               (if (if g$ls/false$23330$1S&e0X
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$23331$1S&e0X
                                              g$x*$23332$1S&e0X)
                                            (not (g$memq$11825$1S&e0X
                                                   (g$syntax->datum$20811$1S&e0X
                                                     g$x$23331$1S&e0X)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$23330$1S&e0X))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$23333$1S&e0X
                                        g$x*$23334$1S&e0X)
                                      (g$import-library$23314$1S&e0X
                                        (cons
                                          g$x$23333$1S&e0X
                                          g$x*$23334$1S&e0X))))
                                   g$ls/false$23330$1S&e0X)
                                 ((case-lambda
                                    ((g$t$23335$1S&e0X)
                                     ((case-lambda
                                        ((g$ls/false$23336$1S&e0X)
                                         (if (if g$ls/false$23336$1S&e0X
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$23337$1S&e0X
                                                        g$isp$23338$1S&e0X
                                                        g$old*$23339$1S&e0X
                                                        g$new*$23340$1S&e0X)
                                                      (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                 g$rename$23337$1S&e0X)
                                                               'rename)
                                                        (if (g$for-all$11831$1S&e0X
                                                              g$idsyn?$23306$1S&e0X
                                                              g$old*$23339$1S&e0X)
                                                          (begin
                                                            '#f
                                                            (g$for-all$11831$1S&e0X
                                                              g$idsyn?$23306$1S&e0X
                                                              g$new*$23340$1S&e0X))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$23336$1S&e0X))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$23341$1S&e0X
                                                  g$isp$23342$1S&e0X
                                                  g$old*$23343$1S&e0X
                                                  g$new*$23344$1S&e0X)
                                                ((case-lambda
                                                   ((g$subst$23345$1S&e0X
                                                      g$old*$23346$1S&e0X
                                                      g$new*$23347$1S&e0X)
                                                    ((case-lambda
                                                       ((g$old-label*$23348$1S&e0X)
                                                        ((case-lambda
                                                           ((g$subst$23349$1S&e0X)
                                                            (g$merge-substs$23308$1S&e0X
                                                              (g$map$11833$1S&e0X
                                                                cons
                                                                g$new*$23347$1S&e0X
                                                                g$old-label*$23348$1S&e0X)
                                                              g$subst$23349$1S&e0X)))
                                                         (g$rem*$23311$1S&e0X
                                                           g$old*$23346$1S&e0X
                                                           g$subst$23345$1S&e0X))))
                                                     (g$find*$23310$1S&e0X
                                                       g$old*$23346$1S&e0X
                                                       g$subst$23345$1S&e0X))))
                                                 (g$get-import$23315$1S&e0X
                                                   g$isp$23342$1S&e0X)
                                                 (g$map$11833$1S&e0X
                                                   g$syntax->datum$20811$1S&e0X
                                                   g$old*$23343$1S&e0X)
                                                 (g$map$11833$1S&e0X
                                                   g$syntax->datum$20811$1S&e0X
                                                   g$new*$23344$1S&e0X))))
                                             g$ls/false$23336$1S&e0X)
                                           ((case-lambda
                                              ((g$t$23350$1S&e0X)
                                               ((case-lambda
                                                  ((g$ls/false$23351$1S&e0X)
                                                   (if (if g$ls/false$23351$1S&e0X
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$23352$1S&e0X
                                                                  g$isp$23353$1S&e0X
                                                                  g$sym*$23354$1S&e0X)
                                                                (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                           g$except$23352$1S&e0X)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$11831$1S&e0X
                                                                      g$idsyn?$23306$1S&e0X
                                                                      g$sym*$23354$1S&e0X))
                                                                  '#f)))
                                                             g$ls/false$23351$1S&e0X))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$23355$1S&e0X
                                                            g$isp$23356$1S&e0X
                                                            g$sym*$23357$1S&e0X)
                                                          ((case-lambda
                                                             ((g$subst$23358$1S&e0X)
                                                              (g$rem*$23311$1S&e0X
                                                                (g$map$11833$1S&e0X
                                                                  g$syntax->datum$20811$1S&e0X
                                                                  g$sym*$23357$1S&e0X)
                                                                g$subst$23358$1S&e0X)))
                                                           (g$get-import$23315$1S&e0X
                                                             g$isp$23356$1S&e0X))))
                                                       g$ls/false$23351$1S&e0X)
                                                     ((case-lambda
                                                        ((g$t$23359$1S&e0X)
                                                         ((case-lambda
                                                            ((g$ls/false$23360$1S&e0X)
                                                             (if (if g$ls/false$23360$1S&e0X
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$23361$1S&e0X
                                                                            g$isp$23362$1S&e0X
                                                                            g$sym*$23363$1S&e0X)
                                                                          (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                                     g$only$23361$1S&e0X)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$11831$1S&e0X
                                                                                g$idsyn?$23306$1S&e0X
                                                                                g$sym*$23363$1S&e0X))
                                                                            '#f)))
                                                                       g$ls/false$23360$1S&e0X))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$23364$1S&e0X
                                                                      g$isp$23365$1S&e0X
                                                                      g$sym*$23366$1S&e0X)
                                                                    ((case-lambda
                                                                       ((g$subst$23367$1S&e0X
                                                                          g$sym*$23368$1S&e0X)
                                                                        ((case-lambda
                                                                           ((g$sym*$23369$1S&e0X)
                                                                            ((case-lambda
                                                                               ((g$lab*$23370$1S&e0X)
                                                                                (g$map$11833$1S&e0X
                                                                                  cons
                                                                                  g$sym*$23369$1S&e0X
                                                                                  g$lab*$23370$1S&e0X)))
                                                                             (g$find*$23310$1S&e0X
                                                                               g$sym*$23369$1S&e0X
                                                                               g$subst$23367$1S&e0X))))
                                                                         (g$remove-dups$23312$1S&e0X
                                                                           g$sym*$23368$1S&e0X))))
                                                                     (g$get-import$23315$1S&e0X
                                                                       g$isp$23365$1S&e0X)
                                                                     (g$map$11833$1S&e0X
                                                                       g$syntax->datum$20811$1S&e0X
                                                                       g$sym*$23366$1S&e0X))))
                                                                 g$ls/false$23360$1S&e0X)
                                                               ((case-lambda
                                                                  ((g$t$23371$1S&e0X)
                                                                   ((case-lambda
                                                                      ((g$ls/false$23372$1S&e0X)
                                                                       (if (if g$ls/false$23372$1S&e0X
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$23373$1S&e0X
                                                                                      g$isp$23374$1S&e0X
                                                                                      g$p$23375$1S&e0X)
                                                                                    (if (eq? (g$syntax->datum$20811$1S&e0X
                                                                                               g$prefix$23373$1S&e0X)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$23306$1S&e0X
                                                                                          g$p$23375$1S&e0X))
                                                                                      '#f)))
                                                                                 g$ls/false$23372$1S&e0X))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$23376$1S&e0X
                                                                                g$isp$23377$1S&e0X
                                                                                g$p$23378$1S&e0X)
                                                                              ((case-lambda
                                                                                 ((g$subst$23379$1S&e0X
                                                                                    g$prefix$23380$1S&e0X)
                                                                                  (g$map$11833$1S&e0X
                                                                                    (case-lambda
                                                                                      ((g$x$23381$1S&e0X)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$23380$1S&e0X
                                                                                             (symbol->string
                                                                                               (car g$x$23381$1S&e0X))))
                                                                                         (cdr g$x$23381$1S&e0X))))
                                                                                    g$subst$23379$1S&e0X)))
                                                                               (g$get-import$23315$1S&e0X
                                                                                 g$isp$23377$1S&e0X)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$20811$1S&e0X
                                                                                   g$p$23378$1S&e0X)))))
                                                                           g$ls/false$23372$1S&e0X)
                                                                         ((case-lambda
                                                                            ((g$t$23382$1S&e0X)
                                                                             ((case-lambda
                                                                                ((g$ls/false$23383$1S&e0X)
                                                                                 (if (if g$ls/false$23383$1S&e0X
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$23384$1S&e0X
                                                                                                g$spec*$23385$1S&e0X)
                                                                                              (eq? (g$syntax->datum$20811$1S&e0X
                                                                                                     g$library$23384$1S&e0X)
                                                                                                   'library)))
                                                                                           g$ls/false$23383$1S&e0X))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$23386$1S&e0X
                                                                                          g$spec*$23387$1S&e0X)
                                                                                        (g$import-library$23314$1S&e0X
                                                                                          g$spec*$23387$1S&e0X)))
                                                                                     g$ls/false$23383$1S&e0X)
                                                                                   ((case-lambda
                                                                                      ((g$t$23388$1S&e0X)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$23389$1S&e0X)
                                                                                           (if (if g$ls/false$23389$1S&e0X
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$23390$1S&e0X
                                                                                                          g$isp$23391$1S&e0X
                                                                                                          g$rest$23392$1S&e0X)
                                                                                                        (eq? (g$syntax->datum$20811$1S&e0X
                                                                                                               g$for$23390$1S&e0X)
                                                                                                             'for)))
                                                                                                     g$ls/false$23389$1S&e0X))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$23393$1S&e0X
                                                                                                    g$isp$23394$1S&e0X
                                                                                                    g$rest$23395$1S&e0X)
                                                                                                  (g$get-import$23315$1S&e0X
                                                                                                    g$isp$23394$1S&e0X)))
                                                                                               g$ls/false$23389$1S&e0X)
                                                                                             ((case-lambda
                                                                                                ((g$t$23396$1S&e0X)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$23397$1S&e0X)
                                                                                                     (if g$ls/false$23397$1S&e0X
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$23398$1S&e0X)
                                                                                                            (g$syntax-violation$20808$1S&e0X
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$23398$1S&e0X)))
                                                                                                         g$ls/false$23397$1S&e0X)
                                                                                                       (g$syntax-violation$20808$1S&e0X
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$23396$1S&e0X))))
                                                                                                  (g$syntax-dispatch$20689$1S&e0X
                                                                                                    g$t$23396$1S&e0X
                                                                                                    'any))))
                                                                                              g$t$23388$1S&e0X))))
                                                                                        (g$syntax-dispatch$20689$1S&e0X
                                                                                          g$t$23388$1S&e0X
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$23382$1S&e0X))))
                                                                              (g$syntax-dispatch$20689$1S&e0X
                                                                                g$t$23382$1S&e0X
                                                                                '(any each-any)))))
                                                                          g$t$23371$1S&e0X))))
                                                                    (g$syntax-dispatch$20689$1S&e0X
                                                                      g$t$23371$1S&e0X
                                                                      '(any any
                                                                            any)))))
                                                                g$t$23359$1S&e0X))))
                                                          (g$syntax-dispatch$20689$1S&e0X
                                                            g$t$23359$1S&e0X
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$23350$1S&e0X))))
                                                (g$syntax-dispatch$20689$1S&e0X
                                                  g$t$23350$1S&e0X
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$23335$1S&e0X))))
                                      (g$syntax-dispatch$20689$1S&e0X
                                        g$t$23335$1S&e0X
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$23329$1S&e0X))))
                            (g$syntax-dispatch$20689$1S&e0X
                              g$t$23329$1S&e0X
                              '(any . each-any)))))
                        g$spec$23328$1S&e0X))))
                  (g$add-imports!$23316$1S&e0X
                    (case-lambda
                      ((g$imp$23320$1S&e0X g$h$23321$1S&e0X)
                       ((case-lambda
                          ((g$subst$23322$1S&e0X)
                           (g$for-each$11834$1S&e0X
                             (case-lambda
                               ((g$x$23323$1S&e0X)
                                ((case-lambda
                                   ((g$name$23324$1S&e0X
                                      g$label$23325$1S&e0X)
                                    ((case-lambda
                                       ((g$t$23326$1S&e0X)
                                        (if g$t$23326$1S&e0X
                                          ((case-lambda
                                             ((g$l$23327$1S&e0X)
                                              (if (not (eq? g$l$23327$1S&e0X
                                                            g$label$23325$1S&e0X))
                                                (g$dup-error$23307$1S&e0X
                                                  g$name$23324$1S&e0X)
                                                (void))))
                                           g$t$23326$1S&e0X)
                                          (begin
                                            '#f
                                            (g$hashtable-set!$12785$1S&e0X
                                              g$h$23321$1S&e0X
                                              g$name$23324$1S&e0X
                                              g$label$23325$1S&e0X)))))
                                     (g$hashtable-ref$12784$1S&e0X
                                       g$h$23321$1S&e0X
                                       g$name$23324$1S&e0X
                                       '#f))))
                                 (car g$x$23323$1S&e0X)
                                 (cdr g$x$23323$1S&e0X))))
                             g$subst$23322$1S&e0X)))
                        (g$get-import$23315$1S&e0X
                          g$imp$23320$1S&e0X))))))
          ((letrec ((g$f$23317$1S&e0X
                      (case-lambda
                        ((g$imp*$23318$1S&e0X g$h$23319$1S&e0X)
                         (if (null? g$imp*$23318$1S&e0X)
                           (hashtable-entries g$h$23319$1S&e0X)
                           (begin
                             '#f
                             (g$add-imports!$23316$1S&e0X
                               (car g$imp*$23318$1S&e0X)
                               g$h$23319$1S&e0X)
                             (g$f$23317$1S&e0X
                               (cdr g$imp*$23318$1S&e0X)
                               g$h$23319$1S&e0X)))))))
             g$f$23317$1S&e0X)
           g$imp*$23305$1S&e0X
           (g$make-eq-hashtable$12781$1S&e0X))))))
   (g$make-top-rib$20742$1S&e0X
     g$make-top-rib$24335$1S&e0X
     (case-lambda
       ((g$names$23567$1S&e0X g$labels$23568$1S&e0X)
        ((case-lambda
           ((g$rib$23569$1S&e0X)
            (begin
              (g$vector-for-each$12733$1S&e0X
                (case-lambda
                  ((g$name$23570$1S&e0X g$label$23571$1S&e0X)
                   (begin
                     (if (not (g$symbol?$12665$1S&e0X
                                g$name$23570$1S&e0X))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$23570$1S&e0X)
                       (void))
                     (g$extend-rib/nc!$20153$1S&e0X
                       g$rib$23569$1S&e0X
                       (g$make-stx$20164$1S&e0X
                         g$name$23570$1S&e0X
                         g$top-mark*$20124$1S&e0X
                         '()
                         '())
                       g$label$23571$1S&e0X))))
                g$names$23567$1S&e0X
                g$labels$23568$1S&e0X)
              g$rib$23569$1S&e0X)))
         (g$make-cache-rib$20150$1S&e0X)))))
   (g$make-collector$20743$1S&e0X
     g$make-collector$24336$1S&e0X
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$23572$1S&e0X)
            (case-lambda
              (() g$ls$23572$1S&e0X)
              ((g$x$23573$1S&e0X)
               (set! g$ls$23572$1S&e0X
                 (g$set-cons$20121$1S&e0X
                   g$x$23573$1S&e0X
                   g$ls$23572$1S&e0X))))))
         '()))))
   (g$inv-collector$20744$1S&e0X
     g$inv-collector$24337$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda
         (g$args$23574$1S&e0X
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23575$1S&e0X)
          (begin
            (if (not (g$procedure?$12667$1S&e0X g$x$23575$1S&e0X))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$23575$1S&e0X)
              (void))
            g$x$23575$1S&e0X)))))
   (g$vis-collector$20745$1S&e0X
     g$vis-collector$24338$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda
         (g$args$23576$1S&e0X
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23577$1S&e0X)
          (begin
            (if (not (g$procedure?$12667$1S&e0X g$x$23577$1S&e0X))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$23577$1S&e0X)
              (void))
            g$x$23577$1S&e0X)))))
   (g$imp-collector$20746$1S&e0X
     g$imp-collector$24339$1S&e0X
     (g$make-parameter$19052$1S&e0X
       (case-lambda
         (g$args$23578$1S&e0X
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23579$1S&e0X)
          (begin
            (if (not (g$procedure?$12667$1S&e0X g$x$23579$1S&e0X))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$23579$1S&e0X)
              (void))
            g$x$23579$1S&e0X)))))
   (g$chi-library-internal$20747$1S&e0X
     g$chi-library-internal$24340$1S&e0X
     (case-lambda
       ((g$e*$23580$1S&e0X g$rib$23581$1S&e0X g$mix?$23582$1S&e0X)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$20736$1S&e0X
               g$e*$23580$1S&e0X
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$23581$1S&e0X
               g$mix?$23582$1S&e0X
               '#t)))
          (case-lambda
            ((g$e*$23591$1S&e0X
               g$r$23592$1S&e0X
               g$mr$23593$1S&e0X
               g$lex*$23594$1S&e0X
               g$rhs*$23595$1S&e0X
               g$mod**$23596$1S&e0X
               g$_kwd*$23597$1S&e0X
               g$exp*$23598$1S&e0X)
             ((case-lambda
                ((g$exp*$23599$1S&e0X
                   g$_kwd*$23600$1S&e0X
                   g$mod**$23601$1S&e0X
                   g$rhs*$23602$1S&e0X
                   g$lex*$23603$1S&e0X
                   g$mr$23604$1S&e0X
                   g$r$23605$1S&e0X
                   g$e*$23606$1S&e0X)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$12682$1S&e0X g$mod**$23601$1S&e0X))
                     g$e*$23606$1S&e0X)
                   g$r$23605$1S&e0X
                   g$mr$23604$1S&e0X
                   (g$reverse$12682$1S&e0X g$lex*$23603$1S&e0X)
                   (g$reverse$12682$1S&e0X g$rhs*$23602$1S&e0X)
                   g$exp*$23599$1S&e0X)))
              g$exp*$23598$1S&e0X
              g$_kwd*$23597$1S&e0X
              g$mod**$23596$1S&e0X
              g$rhs*$23595$1S&e0X
              g$lex*$23594$1S&e0X
              g$mr$23593$1S&e0X
              g$r$23592$1S&e0X
              g$e*$23591$1S&e0X)))))))
   (g$chi-interaction-expr$20748$1S&e0X
     g$chi-interaction-expr$24341$1S&e0X
     (case-lambda
       ((g$e$23607$1S&e0X g$rib$23608$1S&e0X g$r$23609$1S&e0X)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$20736$1S&e0X
               (list g$e$23607$1S&e0X)
               g$r$23609$1S&e0X
               g$r$23609$1S&e0X
               '()
               '()
               '()
               '()
               '()
               g$rib$23608$1S&e0X
               '#t
               '#f)))
          (case-lambda
            ((g$e*$23618$1S&e0X
               g$r$23619$1S&e0X
               g$mr$23620$1S&e0X
               g$lex*$23621$1S&e0X
               g$rhs*$23622$1S&e0X
               g$mod**$23623$1S&e0X
               g$_kwd*$23624$1S&e0X
               g$_exp*$23625$1S&e0X)
             ((case-lambda
                ((g$_exp*$23626$1S&e0X
                   g$_kwd*$23627$1S&e0X
                   g$mod**$23628$1S&e0X
                   g$rhs*$23629$1S&e0X
                   g$lex*$23630$1S&e0X
                   g$mr$23631$1S&e0X
                   g$r$23632$1S&e0X
                   g$e*$23633$1S&e0X)
                 ((case-lambda
                    ((g$e*$23634$1S&e0X)
                     ((case-lambda
                        ((g$e$23635$1S&e0X)
                         (values g$e$23635$1S&e0X g$r$23632$1S&e0X)))
                      (if (null? g$e*$23634$1S&e0X)
                        (g$build-void$20117$1S&e0X)
                        (if (null? (cdr g$e*$23634$1S&e0X))
                          (car g$e*$23634$1S&e0X)
                          (begin
                            '#f
                            (g$build-sequence$20116$1S&e0X
                              '#f
                              g$e*$23634$1S&e0X)))))))
                  (g$expand-interaction-rhs*/init*$20714$1S&e0X
                    (g$reverse$12682$1S&e0X g$lex*$23630$1S&e0X)
                    (g$reverse$12682$1S&e0X g$rhs*$23629$1S&e0X)
                    (append
                      (apply
                        append
                        (g$reverse$12682$1S&e0X g$mod**$23628$1S&e0X))
                      g$e*$23633$1S&e0X)
                    g$r$23632$1S&e0X
                    g$mr$23631$1S&e0X))))
              g$_exp*$23625$1S&e0X
              g$_kwd*$23624$1S&e0X
              g$mod**$23623$1S&e0X
              g$rhs*$23622$1S&e0X
              g$lex*$23621$1S&e0X
              g$mr$23620$1S&e0X
              g$r$23619$1S&e0X
              g$e*$23618$1S&e0X)))))))
   (g$library-body-expander$20749$1S&e0X
     g$library-body-expander$24342$1S&e0X
     (case-lambda
       ((g$name$23636$1S&e0X
          g$main-exp*$23637$1S&e0X
          g$imp*$23638$1S&e0X
          g$b*$23639$1S&e0X
          g$mix?$23640$1S&e0X)
        (letrec* ((g$itc$23641$1S&e0X (g$make-collector$20743$1S&e0X)))
          ((case-lambda
             ((g$imp-collector$23646$1S&e0X
                g$top-level-context$23647$1S&e0X
                g$imp-collector$23648$1S&e0X
                g$top-level-context$23649$1S&e0X)
              ((case-lambda
                 ((g$swap$23650$1S&e0X)
                  (dynamic-wind
                    g$swap$23650$1S&e0X
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$20741$1S&e0X
                              g$imp*$23638$1S&e0X)))
                         (case-lambda
                           ((g$subst-names$23653$1S&e0X
                              g$subst-labels$23654$1S&e0X)
                            ((case-lambda
                               ((g$subst-labels$23655$1S&e0X
                                  g$subst-names$23656$1S&e0X)
                                ((case-lambda
                                   ((g$rib$23657$1S&e0X)
                                    (letrec* ((g$wrap$23658$1S&e0X
                                                (case-lambda
                                                  ((g$x$23720$1S&e0X)
                                                   (g$make-stx$20164$1S&e0X
                                                     g$x$23720$1S&e0X
                                                     g$top-mark*$20124$1S&e0X
                                                     (list
                                                       g$rib$23657$1S&e0X)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$23659$1S&e0X
                                            g$main-exp*$23660$1S&e0X
                                            g$rtc$23661$1S&e0X
                                            g$vtc$23662$1S&e0X)
                                          ((case-lambda
                                             ((g$inv-collector$23667$1S&e0X
                                                g$vis-collector$23668$1S&e0X
                                                g$inv-collector$23669$1S&e0X
                                                g$vis-collector$23670$1S&e0X)
                                              ((case-lambda
                                                 ((g$swap$23671$1S&e0X)
                                                  (dynamic-wind
                                                    g$swap$23671$1S&e0X
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$20747$1S&e0X
                                                              g$b*$23659$1S&e0X
                                                              g$rib$23657$1S&e0X
                                                              g$mix?$23640$1S&e0X)))
                                                         (case-lambda
                                                           ((g$init*$23678$1S&e0X
                                                              g$r$23679$1S&e0X
                                                              g$mr$23680$1S&e0X
                                                              g$lex*$23681$1S&e0X
                                                              g$rhs*$23682$1S&e0X
                                                              g$internal-exp*$23683$1S&e0X)
                                                            ((case-lambda
                                                               ((g$internal-exp*$23684$1S&e0X
                                                                  g$rhs*$23685$1S&e0X
                                                                  g$lex*$23686$1S&e0X
                                                                  g$mr$23687$1S&e0X
                                                                  g$r$23688$1S&e0X
                                                                  g$init*$23689$1S&e0X)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$20738$1S&e0X
                                                                       (append
                                                                         g$main-exp*$23660$1S&e0X
                                                                         g$internal-exp*$23684$1S&e0X))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$23692$1S&e0X
                                                                       g$exp-id*$23693$1S&e0X)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$23694$1S&e0X
                                                                           g$exp-name*$23695$1S&e0X)
                                                                         (begin
                                                                           (g$seal-rib!$20155$1S&e0X
                                                                             g$rib$23657$1S&e0X)
                                                                           ((case-lambda
                                                                              ((g$init*$23696$1S&e0X)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$23697$1S&e0X)
                                                                                   (begin
                                                                                     (g$unseal-rib!$20156$1S&e0X
                                                                                       g$rib$23657$1S&e0X)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$23698$1S&e0X
                                                                                           g$export-subst$23699$1S&e0X)
                                                                                         (letrec* ((g$errstr$23700$1S&e0X
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$20797$1S&e0X
                                                                                                  g$lex*$23686$1S&e0X
                                                                                                  g$loc*$23698$1S&e0X
                                                                                                  g$r$23688$1S&e0X)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$23704$1S&e0X
                                                                                                  g$global*$23705$1S&e0X
                                                                                                  g$macro*$23706$1S&e0X)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$23707$1S&e0X
                                                                                                      g$global*$23708$1S&e0X
                                                                                                      g$export-env$23709$1S&e0X)
                                                                                                    (begin
                                                                                                      (g$for-each$11834$1S&e0X
                                                                                                        (case-lambda
                                                                                                          ((g$s$23710$1S&e0X)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$23711$1S&e0X
                                                                                                                 g$label$23712$1S&e0X)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$23713$1S&e0X)
                                                                                                                   (if g$p$23713$1S&e0X
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$23714$1S&e0X)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$23715$1S&e0X)
                                                                                                                             (if (eq? g$type$23715$1S&e0X
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$20808$1S&e0X
                                                                                                                                 'export
                                                                                                                                 g$errstr$23700$1S&e0X
                                                                                                                                 g$name$23711$1S&e0X)
                                                                                                                               (void))))
                                                                                                                          (car g$b$23714$1S&e0X))))
                                                                                                                      (cdr g$p$23713$1S&e0X))
                                                                                                                     (void))))
                                                                                                                (g$assq$11821$1S&e0X
                                                                                                                  g$label$23712$1S&e0X
                                                                                                                  g$export-env$23709$1S&e0X))))
                                                                                                            (car g$s$23710$1S&e0X)
                                                                                                            (cdr g$s$23710$1S&e0X))))
                                                                                                        g$export-subst$23699$1S&e0X)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$23716$1S&e0X
                                                                                                            g$invoke-definitions$23717$1S&e0X)
                                                                                                          (values
                                                                                                            (g$itc$23641$1S&e0X)
                                                                                                            (g$rtc$23661$1S&e0X)
                                                                                                            (g$vtc$23662$1S&e0X)
                                                                                                            (g$build-sequence$20116$1S&e0X
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$23717$1S&e0X
                                                                                                                (list
                                                                                                                  g$invoke-body$23716$1S&e0X)))
                                                                                                            g$macro*$23707$1S&e0X
                                                                                                            g$export-subst$23699$1S&e0X
                                                                                                            g$export-env$23709$1S&e0X)))
                                                                                                       (g$build-library-letrec*$20120$1S&e0X
                                                                                                         '#f
                                                                                                         g$name$23636$1S&e0X
                                                                                                         g$lex*$23686$1S&e0X
                                                                                                         g$loc*$23698$1S&e0X
                                                                                                         g$rhs*$23697$1S&e0X
                                                                                                         (if (null?
                                                                                                               g$init*$23696$1S&e0X)
                                                                                                           (g$build-void$20117$1S&e0X)
                                                                                                           (g$build-sequence$20116$1S&e0X
                                                                                                             '#f
                                                                                                             g$init*$23696$1S&e0X)))
                                                                                                       (g$map$11833$1S&e0X
                                                                                                         g$build-global-define$20112$1S&e0X
                                                                                                         (g$map$11833$1S&e0X
                                                                                                           cdr
                                                                                                           g$global*$23708$1S&e0X))))))
                                                                                                 g$macro*$23706$1S&e0X
                                                                                                 g$global*$23705$1S&e0X
                                                                                                 g$export-env$23704$1S&e0X)))))))
                                                                                      (g$map$11833$1S&e0X
                                                                                        g$gen-global$20127$1S&e0X
                                                                                        g$lex*$23686$1S&e0X)
                                                                                      (g$make-export-subst$20796$1S&e0X
                                                                                        g$exp-name*$23695$1S&e0X
                                                                                        g$exp-id*$23694$1S&e0X)))))
                                                                                (g$chi-rhs*$20715$1S&e0X
                                                                                  g$rhs*$23685$1S&e0X
                                                                                  g$r$23688$1S&e0X
                                                                                  g$mr$23687$1S&e0X))))
                                                                            (g$chi-expr*$20705$1S&e0X
                                                                              g$init*$23689$1S&e0X
                                                                              g$r$23688$1S&e0X
                                                                              g$mr$23687$1S&e0X)))))
                                                                      g$exp-id*$23693$1S&e0X
                                                                      g$exp-name*$23692$1S&e0X))))))
                                                             g$internal-exp*$23683$1S&e0X
                                                             g$rhs*$23682$1S&e0X
                                                             g$lex*$23681$1S&e0X
                                                             g$mr$23680$1S&e0X
                                                             g$r$23679$1S&e0X
                                                             g$init*$23678$1S&e0X))))))
                                                    g$swap$23671$1S&e0X)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$23718$1S&e0X)
                                                        (begin
                                                          (g$inv-collector$23667$1S&e0X
                                                            g$inv-collector$23669$1S&e0X)
                                                          (set! g$inv-collector$23669$1S&e0X
                                                            g$t$23718$1S&e0X))))
                                                     (g$inv-collector$23667$1S&e0X))
                                                    ((case-lambda
                                                       ((g$t$23719$1S&e0X)
                                                        (begin
                                                          (g$vis-collector$23668$1S&e0X
                                                            g$vis-collector$23670$1S&e0X)
                                                          (set! g$vis-collector$23670$1S&e0X
                                                            g$t$23719$1S&e0X))))
                                                     (g$vis-collector$23668$1S&e0X))))))))
                                           g$inv-collector$20744$1S&e0X
                                           g$vis-collector$20745$1S&e0X
                                           g$rtc$23661$1S&e0X
                                           g$vtc$23662$1S&e0X)))
                                       (g$map$11833$1S&e0X
                                         g$wrap$23658$1S&e0X
                                         g$b*$23639$1S&e0X)
                                       (g$map$11833$1S&e0X
                                         g$wrap$23658$1S&e0X
                                         g$main-exp*$23637$1S&e0X)
                                       (g$make-collector$20743$1S&e0X)
                                       (g$make-collector$20743$1S&e0X)))))
                                 (g$make-top-rib$20742$1S&e0X
                                   g$subst-names$23656$1S&e0X
                                   g$subst-labels$23655$1S&e0X))))
                             g$subst-labels$23654$1S&e0X
                             g$subst-names$23653$1S&e0X))))))
                    g$swap$23650$1S&e0X)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$23721$1S&e0X)
                        (begin
                          (g$imp-collector$23646$1S&e0X
                            g$imp-collector$23648$1S&e0X)
                          (set! g$imp-collector$23648$1S&e0X
                            g$t$23721$1S&e0X))))
                     (g$imp-collector$23646$1S&e0X))
                    ((case-lambda
                       ((g$t$23722$1S&e0X)
                        (begin
                          (g$top-level-context$23647$1S&e0X
                            g$top-level-context$23649$1S&e0X)
                          (set! g$top-level-context$23649$1S&e0X
                            g$t$23722$1S&e0X))))
                     (g$top-level-context$23647$1S&e0X))))))))
           g$imp-collector$20746$1S&e0X
           g$top-level-context$20816$1S&e0X
           g$itc$23641$1S&e0X
           '#f)))))
   (g$core-library-expander$20750$1S&e0X
     g$core-library-expander$24343$1S&e0X
     (case-lambda
       ((g$e$23723$1S&e0X g$verify-name$23724$1S&e0X)
        (call-with-values
          (case-lambda
            (() (g$parse-library$20740$1S&e0X g$e$23723$1S&e0X)))
          (case-lambda
            ((g$name*$23729$1S&e0X
               g$exp*$23730$1S&e0X
               g$imp*$23731$1S&e0X
               g$b*$23732$1S&e0X)
             ((case-lambda
                ((g$b*$23733$1S&e0X
                   g$imp*$23734$1S&e0X
                   g$exp*$23735$1S&e0X
                   g$name*$23736$1S&e0X)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$20739$1S&e0X
                        g$name*$23736$1S&e0X)))
                   (case-lambda
                     ((g$name$23739$1S&e0X g$ver$23740$1S&e0X)
                      ((case-lambda
                         ((g$ver$23741$1S&e0X g$name$23742$1S&e0X)
                          (begin
                            (g$verify-name$23724$1S&e0X
                              g$name$23742$1S&e0X)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$20749$1S&e0X
                                   g$name$23742$1S&e0X
                                   g$exp*$23735$1S&e0X
                                   g$imp*$23734$1S&e0X
                                   g$b*$23733$1S&e0X
                                   '#f)))
                              (case-lambda
                                ((g$imp*$23750$1S&e0X
                                   g$invoke-req*$23751$1S&e0X
                                   g$visit-req*$23752$1S&e0X
                                   g$invoke-code$23753$1S&e0X
                                   g$visit-code$23754$1S&e0X
                                   g$export-subst$23755$1S&e0X
                                   g$export-env$23756$1S&e0X)
                                 ((case-lambda
                                    ((g$export-env$23757$1S&e0X
                                       g$export-subst$23758$1S&e0X
                                       g$visit-code$23759$1S&e0X
                                       g$invoke-code$23760$1S&e0X
                                       g$visit-req*$23761$1S&e0X
                                       g$invoke-req*$23762$1S&e0X
                                       g$imp*$23763$1S&e0X)
                                     (values
                                       g$name$23742$1S&e0X
                                       g$ver$23741$1S&e0X
                                       g$imp*$23763$1S&e0X
                                       g$invoke-req*$23762$1S&e0X
                                       g$visit-req*$23761$1S&e0X
                                       g$invoke-code$23760$1S&e0X
                                       g$visit-code$23759$1S&e0X
                                       g$export-subst$23758$1S&e0X
                                       g$export-env$23757$1S&e0X)))
                                  g$export-env$23756$1S&e0X
                                  g$export-subst$23755$1S&e0X
                                  g$visit-code$23754$1S&e0X
                                  g$invoke-code$23753$1S&e0X
                                  g$visit-req*$23752$1S&e0X
                                  g$invoke-req*$23751$1S&e0X
                                  g$imp*$23750$1S&e0X)))))))
                       g$ver$23740$1S&e0X
                       g$name$23739$1S&e0X))))))
              g$b*$23732$1S&e0X
              g$imp*$23731$1S&e0X
              g$exp*$23730$1S&e0X
              g$name*$23729$1S&e0X)))))))
   (g$parse-top-level-program$20751$1S&e0X
     g$parse-top-level-program$24344$1S&e0X
     (case-lambda
       ((g$e*$23764$1S&e0X)
        ((case-lambda
           ((g$t$23765$1S&e0X)
            ((case-lambda
               ((g$ls/false$23766$1S&e0X)
                (if (if g$ls/false$23766$1S&e0X
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$23767$1S&e0X
                               g$imp*$23768$1S&e0X
                               g$b*$23769$1S&e0X)
                             (eq? (g$syntax->datum$20811$1S&e0X
                                    g$import$23767$1S&e0X)
                                  'import)))
                          g$ls/false$23766$1S&e0X))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$23770$1S&e0X
                         g$imp*$23771$1S&e0X
                         g$b*$23772$1S&e0X)
                       (values g$imp*$23771$1S&e0X g$b*$23772$1S&e0X)))
                    g$ls/false$23766$1S&e0X)
                  ((case-lambda
                     ((g$t$23773$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$23774$1S&e0X)
                          (if (if g$ls/false$23774$1S&e0X
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$23775$1S&e0X
                                         g$x$23776$1S&e0X
                                         g$y$23777$1S&e0X)
                                       (eq? (g$syntax->datum$20811$1S&e0X
                                              g$import$23775$1S&e0X)
                                            'import)))
                                    g$ls/false$23774$1S&e0X))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$23778$1S&e0X
                                   g$x$23779$1S&e0X
                                   g$y$23780$1S&e0X)
                                 (g$syntax-violation$20808$1S&e0X
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$20188$1S&e0X
                                     g$e*$23764$1S&e0X))))
                              g$ls/false$23774$1S&e0X)
                            ((case-lambda
                               ((g$t$23781$1S&e0X)
                                ((case-lambda
                                   ((g$ls/false$23782$1S&e0X)
                                    (if g$ls/false$23782$1S&e0X
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$23782$1S&e0X)
                                      (g$syntax-violation$20808$1S&e0X
                                        '#f
                                        '"invalid syntax"
                                        g$t$23781$1S&e0X))))
                                 (g$syntax-dispatch$20689$1S&e0X
                                   g$t$23781$1S&e0X
                                   '_))))
                             g$t$23773$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$23773$1S&e0X
                         '((any . any) . any)))))
                   g$t$23765$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$23765$1S&e0X
               '((any . each-any) . each-any)))))
         g$e*$23764$1S&e0X))))
   (g$top-level-expander$20752$1S&e0X
     g$top-level-expander$24345$1S&e0X
     (case-lambda
       ((g$e*$23783$1S&e0X)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$20751$1S&e0X
               g$e*$23783$1S&e0X)))
          (case-lambda
            ((g$imp*$23786$1S&e0X g$b*$23787$1S&e0X)
             ((case-lambda
                ((g$b*$23788$1S&e0X g$imp*$23789$1S&e0X)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$20749$1S&e0X
                        '()
                        '()
                        g$imp*$23789$1S&e0X
                        g$b*$23788$1S&e0X
                        '#t)))
                   (case-lambda
                     ((g$imp*$23797$1S&e0X
                        g$invoke-req*$23798$1S&e0X
                        g$visit-req*$23799$1S&e0X
                        g$invoke-code$23800$1S&e0X
                        g$visit-code$23801$1S&e0X
                        g$export-subst$23802$1S&e0X
                        g$export-env$23803$1S&e0X)
                      ((case-lambda
                         ((g$export-env$23804$1S&e0X
                            g$export-subst$23805$1S&e0X
                            g$visit-code$23806$1S&e0X
                            g$invoke-code$23807$1S&e0X
                            g$visit-req*$23808$1S&e0X
                            g$invoke-req*$23809$1S&e0X
                            g$imp*$23810$1S&e0X)
                          (values
                            g$invoke-req*$23809$1S&e0X
                            g$invoke-code$23807$1S&e0X)))
                       g$export-env$23803$1S&e0X
                       g$export-subst$23802$1S&e0X
                       g$visit-code$23801$1S&e0X
                       g$invoke-code$23800$1S&e0X
                       g$visit-req*$23799$1S&e0X
                       g$invoke-req*$23798$1S&e0X
                       g$imp*$23797$1S&e0X))))))
              g$b*$23787$1S&e0X
              g$imp*$23786$1S&e0X)))))))
   (g$10226$20753$1S&e0X
     g$10226$24346$1S&e0X
     (make-record-type-descriptor
       'env
       '#f
       'g$10229$1S&e0X
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$10228$20754$1S&e0X g$10228$24347$1S&e0X '#f)
   (g$10227$20755$1S&e0X
     g$10227$24348$1S&e0X
     (make-record-constructor-descriptor
       g$10226$20753$1S&e0X
       '#f
       g$10228$20754$1S&e0X))
   (g$env?$20758$1S&e0X
     g$env?$24349$1S&e0X
     (record-predicate g$10226$20753$1S&e0X))
   (g$make-env$20759$1S&e0X
     g$make-env$24350$1S&e0X
     (record-constructor g$10227$20755$1S&e0X))
   (g$env-names$20760$1S&e0X
     g$env-names$24351$1S&e0X
     (record-accessor g$10226$20753$1S&e0X '0))
   (g$env-labels$20761$1S&e0X
     g$env-labels$24352$1S&e0X
     (record-accessor g$10226$20753$1S&e0X '1))
   (g$env-itc$20762$1S&e0X
     g$env-itc$24353$1S&e0X
     (record-accessor g$10226$20753$1S&e0X '2))
   (g$set-env-names!$20763$1S&e0X
     g$set-env-names!$24354$1S&e0X
     (record-mutator g$10226$20753$1S&e0X '0))
   (g$set-env-labels!$20764$1S&e0X
     g$set-env-labels!$24355$1S&e0X
     (record-mutator g$10226$20753$1S&e0X '1))
   (g$set-env-itc!$20765$1S&e0X
     g$set-env-itc!$24356$1S&e0X
     (record-mutator g$10226$20753$1S&e0X '2))
   (g$rp$20766$1S&e0X
     g$rp$24357$1S&e0X
     (make-record-printer
       'env
       (case-lambda
         ((g$x$23811$1S&e0X g$p$23812$1S&e0X g$wr$23813$1S&e0X)
          (display '"#<environment>" g$p$23812$1S&e0X)))))
   (g$10243$20767$1S&e0X
     g$10243$24358$1S&e0X
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$10246$1S&e0X
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$10245$20768$1S&e0X g$10245$24359$1S&e0X '#f)
   (g$10244$20769$1S&e0X
     g$10244$24360$1S&e0X
     (make-record-constructor-descriptor
       g$10243$20767$1S&e0X
       '#f
       g$10245$20768$1S&e0X))
   (g$interaction-env?$20772$1S&e0X
     g$interaction-env?$24361$1S&e0X
     (record-predicate g$10243$20767$1S&e0X))
   (g$make-interaction-env$20773$1S&e0X
     g$make-interaction-env$24362$1S&e0X
     (record-constructor g$10244$20769$1S&e0X))
   (g$interaction-env-rib$20774$1S&e0X
     g$interaction-env-rib$24363$1S&e0X
     (record-accessor g$10243$20767$1S&e0X '0))
   (g$interaction-env-r$20775$1S&e0X
     g$interaction-env-r$24364$1S&e0X
     (record-accessor g$10243$20767$1S&e0X '1))
   (g$interaction-env-locs$20776$1S&e0X
     g$interaction-env-locs$24365$1S&e0X
     (record-accessor g$10243$20767$1S&e0X '2))
   (g$set-interaction-env-rib!$20777$1S&e0X
     g$set-interaction-env-rib!$24366$1S&e0X
     (record-mutator g$10243$20767$1S&e0X '0))
   (g$set-interaction-env-r!$20778$1S&e0X
     g$set-interaction-env-r!$24367$1S&e0X
     (record-mutator g$10243$20767$1S&e0X '1))
   (g$set-interaction-env-locs!$20779$1S&e0X
     g$set-interaction-env-locs!$24368$1S&e0X
     (record-mutator g$10243$20767$1S&e0X '2))
   (g$rp$20780$1S&e0X
     g$rp$24369$1S&e0X
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$23814$1S&e0X g$p$23815$1S&e0X g$wr$23816$1S&e0X)
          (display '"#<environment>" g$p$23815$1S&e0X)))))
   (g$interaction-environment-symbols$20781$1S&e0X
     g$interaction-environment-symbols$24370$1S&e0X
     (case-lambda
       (()
        (g$environment-symbols$20785$1S&e0X
          (g$interaction-environment$20815$1S&e0X)))))
   (g$environment-bindings$20782$1S&e0X
     g$environment-bindings$24371$1S&e0X
     (case-lambda
       ((g$e$23817$1S&e0X)
        (vector->list
          (g$vector-map$12732$1S&e0X
            (case-lambda
              ((g$name$23818$1S&e0X g$label$23819$1S&e0X)
               (g$parse-binding$20783$1S&e0X
                 (cons
                   g$name$23818$1S&e0X
                   (g$imported-label->binding$19896$1S&e0X
                     g$label$23819$1S&e0X)))))
            (g$env-names$20760$1S&e0X g$e$23817$1S&e0X)
            (g$env-labels$20761$1S&e0X g$e$23817$1S&e0X))))))
   (g$parse-binding$20783$1S&e0X
     g$parse-binding$24372$1S&e0X
     (case-lambda
       ((g$b$23820$1S&e0X)
        (cons
          (car g$b$23820$1S&e0X)
          ((case-lambda
             ((g$t$23821$1S&e0X)
              (if (g$memv$11826$1S&e0X
                    g$t$23821$1S&e0X
                    '(core-prim global))
                'procedure
                (if (g$memv$11826$1S&e0X
                      g$t$23821$1S&e0X
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$23821$1S&e0X '$core-rtd)
                    'record
                    (begin
                      '#f
                      (if (eq? (car g$b$23820$1S&e0X)
                               (g$cadr$12684$1S&e0X g$b$23820$1S&e0X))
                        'syntax
                        'unknown)))))))
           (g$cadr$12684$1S&e0X g$b$23820$1S&e0X))))))
   (g$environment?$20784$1S&e0X
     g$environment?$24373$1S&e0X
     (case-lambda
       ((g$x$23822$1S&e0X)
        ((case-lambda
           ((g$t$23823$1S&e0X)
            (if g$t$23823$1S&e0X
              g$t$23823$1S&e0X
              (begin
                '#f
                (g$interaction-env?$20772$1S&e0X g$x$23822$1S&e0X)))))
         (g$env?$20758$1S&e0X g$x$23822$1S&e0X)))))
   (g$environment-symbols$20785$1S&e0X
     g$environment-symbols$24374$1S&e0X
     (case-lambda
       ((g$x$23824$1S&e0X)
        (if (g$env?$20758$1S&e0X g$x$23824$1S&e0X)
          (vector->list (g$env-names$20760$1S&e0X g$x$23824$1S&e0X))
          (if (g$interaction-env?$20772$1S&e0X g$x$23824$1S&e0X)
            (g$map$11833$1S&e0X
              values
              (g$rib-sym*$20139$1S&e0X
                (g$interaction-env-rib$20774$1S&e0X g$x$23824$1S&e0X)))
            (begin
              '#f
              (assertion-violation
                'environment-symbols
                '"not an environment"
                g$x$23824$1S&e0X)))))))
   (g$environment$20786$1S&e0X
     g$environment$24375$1S&e0X
     (case-lambda
       (g$imp*$23825$1S&e0X
        ((case-lambda
           ((g$itc$23826$1S&e0X)
            ((case-lambda
               ((g$imp-collector$23829$1S&e0X
                  g$imp-collector$23830$1S&e0X)
                ((case-lambda
                   ((g$swap$23831$1S&e0X)
                    (dynamic-wind
                      g$swap$23831$1S&e0X
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$20741$1S&e0X
                                g$imp*$23825$1S&e0X)))
                           (case-lambda
                             ((g$subst-names$23834$1S&e0X
                                g$subst-labels$23835$1S&e0X)
                              ((case-lambda
                                 ((g$subst-labels$23836$1S&e0X
                                    g$subst-names$23837$1S&e0X)
                                  (g$make-env$20759$1S&e0X
                                    g$subst-names$23837$1S&e0X
                                    g$subst-labels$23836$1S&e0X
                                    g$itc$23826$1S&e0X)))
                               g$subst-labels$23835$1S&e0X
                               g$subst-names$23834$1S&e0X))))))
                      g$swap$23831$1S&e0X)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$23838$1S&e0X)
                        (begin
                          (g$imp-collector$23829$1S&e0X
                            g$imp-collector$23830$1S&e0X)
                          (set! g$imp-collector$23830$1S&e0X
                            g$t$23838$1S&e0X))))
                     (g$imp-collector$23829$1S&e0X)))))))
             g$imp-collector$20746$1S&e0X
             g$itc$23826$1S&e0X)))
         (g$make-collector$20743$1S&e0X)))))
   (g$null-environment$20787$1S&e0X
     g$null-environment$24376$1S&e0X
     (case-lambda
       ((g$n$23839$1S&e0X)
        (begin
          (if (not (eqv? g$n$23839$1S&e0X '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$23839$1S&e0X)
            (void))
          (g$environment$20786$1S&e0X '(psyntax null-environment-5))))))
   (g$scheme-report-environment$20788$1S&e0X
     g$scheme-report-environment$24377$1S&e0X
     (case-lambda
       ((g$n$23840$1S&e0X)
        (begin
          (if (not (eqv? g$n$23840$1S&e0X '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$23840$1S&e0X)
            (void))
          (g$environment$20786$1S&e0X
            '(psyntax scheme-report-environment-5))))))
   (g$expand$20789$1S&e0X
     g$expand$24378$1S&e0X
     (case-lambda
       ((g$x$23841$1S&e0X g$env$23842$1S&e0X)
        (if (g$env?$20758$1S&e0X g$env$23842$1S&e0X)
          ((case-lambda
             ((g$rib$23843$1S&e0X)
              ((case-lambda
                 ((g$x$23844$1S&e0X
                    g$itc$23845$1S&e0X
                    g$rtc$23846$1S&e0X
                    g$vtc$23847$1S&e0X)
                  ((case-lambda
                     ((g$x$23848$1S&e0X)
                      (begin
                        (g$seal-rib!$20155$1S&e0X g$rib$23843$1S&e0X)
                        (values
                          g$x$23848$1S&e0X
                          (g$rtc$23846$1S&e0X)))))
                   ((case-lambda
                      ((g$top-level-context$23857$1S&e0X
                         g$inv-collector$23858$1S&e0X
                         g$vis-collector$23859$1S&e0X
                         g$imp-collector$23860$1S&e0X
                         g$top-level-context$23861$1S&e0X
                         g$inv-collector$23862$1S&e0X
                         g$vis-collector$23863$1S&e0X
                         g$imp-collector$23864$1S&e0X)
                       ((case-lambda
                          ((g$swap$23865$1S&e0X)
                           (dynamic-wind
                             g$swap$23865$1S&e0X
                             (case-lambda
                               (()
                                (g$chi-expr$20707$1S&e0X
                                  g$x$23844$1S&e0X
                                  '()
                                  '())))
                             g$swap$23865$1S&e0X)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$23866$1S&e0X)
                                 (begin
                                   (g$top-level-context$23857$1S&e0X
                                     g$top-level-context$23861$1S&e0X)
                                   (set! g$top-level-context$23861$1S&e0X
                                     g$t$23866$1S&e0X))))
                              (g$top-level-context$23857$1S&e0X))
                             ((case-lambda
                                ((g$t$23867$1S&e0X)
                                 (begin
                                   (g$inv-collector$23858$1S&e0X
                                     g$inv-collector$23862$1S&e0X)
                                   (set! g$inv-collector$23862$1S&e0X
                                     g$t$23867$1S&e0X))))
                              (g$inv-collector$23858$1S&e0X))
                             ((case-lambda
                                ((g$t$23868$1S&e0X)
                                 (begin
                                   (g$vis-collector$23859$1S&e0X
                                     g$vis-collector$23863$1S&e0X)
                                   (set! g$vis-collector$23863$1S&e0X
                                     g$t$23868$1S&e0X))))
                              (g$vis-collector$23859$1S&e0X))
                             ((case-lambda
                                ((g$t$23869$1S&e0X)
                                 (begin
                                   (g$imp-collector$23860$1S&e0X
                                     g$imp-collector$23864$1S&e0X)
                                   (set! g$imp-collector$23864$1S&e0X
                                     g$t$23869$1S&e0X))))
                              (g$imp-collector$23860$1S&e0X))))))))
                    g$top-level-context$20816$1S&e0X
                    g$inv-collector$20744$1S&e0X
                    g$vis-collector$20745$1S&e0X
                    g$imp-collector$20746$1S&e0X
                    '#f
                    g$rtc$23846$1S&e0X
                    g$vtc$23847$1S&e0X
                    g$itc$23845$1S&e0X))))
               (g$make-stx$20164$1S&e0X
                 g$x$23841$1S&e0X
                 g$top-mark*$20124$1S&e0X
                 (list g$rib$23843$1S&e0X)
                 '())
               (g$env-itc$20762$1S&e0X g$env$23842$1S&e0X)
               (g$make-collector$20743$1S&e0X)
               (g$make-collector$20743$1S&e0X))))
           (g$make-top-rib$20742$1S&e0X
             (g$env-names$20760$1S&e0X g$env$23842$1S&e0X)
             (g$env-labels$20761$1S&e0X g$env$23842$1S&e0X)))
          (if (g$interaction-env?$20772$1S&e0X g$env$23842$1S&e0X)
            ((case-lambda
               ((g$rib$23870$1S&e0X g$r$23871$1S&e0X g$rtc$23872$1S&e0X)
                ((case-lambda
                   ((g$x$23873$1S&e0X)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$23884$1S&e0X
                               g$inv-collector$23885$1S&e0X
                               g$vis-collector$23886$1S&e0X
                               g$imp-collector$23887$1S&e0X
                               g$top-level-context$23888$1S&e0X
                               g$inv-collector$23889$1S&e0X
                               g$vis-collector$23890$1S&e0X
                               g$imp-collector$23891$1S&e0X)
                             ((case-lambda
                                ((g$swap$23892$1S&e0X)
                                 (dynamic-wind
                                   g$swap$23892$1S&e0X
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$20748$1S&e0X
                                        g$x$23873$1S&e0X
                                        g$rib$23870$1S&e0X
                                        g$r$23871$1S&e0X)))
                                   g$swap$23892$1S&e0X)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$23893$1S&e0X)
                                       (begin
                                         (g$top-level-context$23884$1S&e0X
                                           g$top-level-context$23888$1S&e0X)
                                         (set! g$top-level-context$23888$1S&e0X
                                           g$t$23893$1S&e0X))))
                                    (g$top-level-context$23884$1S&e0X))
                                   ((case-lambda
                                      ((g$t$23894$1S&e0X)
                                       (begin
                                         (g$inv-collector$23885$1S&e0X
                                           g$inv-collector$23889$1S&e0X)
                                         (set! g$inv-collector$23889$1S&e0X
                                           g$t$23894$1S&e0X))))
                                    (g$inv-collector$23885$1S&e0X))
                                   ((case-lambda
                                      ((g$t$23895$1S&e0X)
                                       (begin
                                         (g$vis-collector$23886$1S&e0X
                                           g$vis-collector$23890$1S&e0X)
                                         (set! g$vis-collector$23890$1S&e0X
                                           g$t$23895$1S&e0X))))
                                    (g$vis-collector$23886$1S&e0X))
                                   ((case-lambda
                                      ((g$t$23896$1S&e0X)
                                       (begin
                                         (g$imp-collector$23887$1S&e0X
                                           g$imp-collector$23891$1S&e0X)
                                         (set! g$imp-collector$23891$1S&e0X
                                           g$t$23896$1S&e0X))))
                                    (g$imp-collector$23887$1S&e0X))))))))
                          g$top-level-context$20816$1S&e0X
                          g$inv-collector$20744$1S&e0X
                          g$vis-collector$20745$1S&e0X
                          g$imp-collector$20746$1S&e0X
                          g$env$23842$1S&e0X
                          g$rtc$23872$1S&e0X
                          (g$make-collector$20743$1S&e0X)
                          (g$make-collector$20743$1S&e0X))))
                      (case-lambda
                        ((g$e$23897$1S&e0X g$r^$23898$1S&e0X)
                         ((case-lambda
                            ((g$r^$23899$1S&e0X g$e$23900$1S&e0X)
                             (begin
                               (g$set-interaction-env-r!$20778$1S&e0X
                                 g$env$23842$1S&e0X
                                 g$r^$23899$1S&e0X)
                               (values
                                 g$e$23900$1S&e0X
                                 (g$rtc$23872$1S&e0X)))))
                          g$r^$23898$1S&e0X
                          g$e$23897$1S&e0X))))))
                 (g$make-stx$20164$1S&e0X
                   g$x$23841$1S&e0X
                   g$top-mark*$20124$1S&e0X
                   (list g$rib$23870$1S&e0X)
                   '()))))
             (g$interaction-env-rib$20774$1S&e0X g$env$23842$1S&e0X)
             (g$interaction-env-r$20775$1S&e0X g$env$23842$1S&e0X)
             (g$make-collector$20743$1S&e0X))
            (begin
              '#f
              (assertion-violation
                'expand
                '"not an environment"
                g$env$23842$1S&e0X)))))))
   (g$eval$20790$1S&e0X
     g$eval$24379$1S&e0X
     (case-lambda
       ((g$x$23901$1S&e0X g$env$23902$1S&e0X)
        (begin
          (if (not (g$environment?$20784$1S&e0X g$env$23902$1S&e0X))
            (error 'eval '"not an environment" g$env$23902$1S&e0X)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$20789$1S&e0X
                 g$x$23901$1S&e0X
                 g$env$23902$1S&e0X)))
            (case-lambda
              ((g$x$23905$1S&e0X g$invoke-req*$23906$1S&e0X)
               ((case-lambda
                  ((g$invoke-req*$23907$1S&e0X g$x$23908$1S&e0X)
                   (begin
                     (g$for-each$11834$1S&e0X
                       g$invoke-library$19897$1S&e0X
                       g$invoke-req*$23907$1S&e0X)
                     (eval-core
                       (g$expanded->core$19629$1S&e0X
                         g$x$23908$1S&e0X)))))
                g$invoke-req*$23906$1S&e0X
                g$x$23905$1S&e0X))))))))
   (g$expand->core$20791$1S&e0X
     g$expand->core$24380$1S&e0X
     (case-lambda
       ((g$x$23909$1S&e0X g$env$23910$1S&e0X)
        (begin
          (if (not (g$environment?$20784$1S&e0X g$env$23910$1S&e0X))
            (error 'eval '"not an environment" g$env$23910$1S&e0X)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$20789$1S&e0X
                 g$x$23909$1S&e0X
                 g$env$23910$1S&e0X)))
            (case-lambda
              ((g$x$23913$1S&e0X g$invoke-req*$23914$1S&e0X)
               ((case-lambda
                  ((g$invoke-req*$23915$1S&e0X g$x$23916$1S&e0X)
                   (begin
                     (g$for-each$11834$1S&e0X
                       g$invoke-library$19897$1S&e0X
                       g$invoke-req*$23915$1S&e0X)
                     (g$expanded->core$19629$1S&e0X g$x$23916$1S&e0X))))
                g$invoke-req*$23914$1S&e0X
                g$x$23913$1S&e0X))))))))
   (g$library-expander$20792$1S&e0X
     g$library-expander$24381$1S&e0X
     (case-lambda
       ((g$x$23917$1S&e0X
          g$filename$23918$1S&e0X
          g$verify-name$23919$1S&e0X)
        (letrec* ((g$build-visit-code$23920$1S&e0X
                    (case-lambda
                      ((g$macro*$23963$1S&e0X)
                       (if (null? g$macro*$23963$1S&e0X)
                         (g$build-void$20117$1S&e0X)
                         (g$build-sequence$20116$1S&e0X
                           '#f
                           (g$map$11833$1S&e0X
                             (case-lambda
                               ((g$x$23964$1S&e0X)
                                ((case-lambda
                                   ((g$loc$23965$1S&e0X
                                      g$src$23966$1S&e0X)
                                    (list
                                      'set!
                                      g$loc$23965$1S&e0X
                                      g$src$23966$1S&e0X)))
                                 (car g$x$23964$1S&e0X)
                                 (g$cddr$12686$1S&e0X
                                   g$x$23964$1S&e0X))))
                             g$macro*$23963$1S&e0X))))))
                  (g$visit!$23921$1S&e0X
                    (case-lambda
                      ((g$macro*$23959$1S&e0X)
                       (g$for-each$11834$1S&e0X
                         (case-lambda
                           ((g$x$23960$1S&e0X)
                            ((case-lambda
                               ((g$loc$23961$1S&e0X g$proc$23962$1S&e0X)
                                (set-symbol-value!
                                  g$loc$23961$1S&e0X
                                  g$proc$23962$1S&e0X)))
                             (car g$x$23960$1S&e0X)
                             (g$cadr$12684$1S&e0X g$x$23960$1S&e0X))))
                         g$macro*$23959$1S&e0X)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$20750$1S&e0X
                 g$x$23917$1S&e0X
                 g$verify-name$23919$1S&e0X)))
            (case-lambda
              ((g$name$23931$1S&e0X
                 g$ver$23932$1S&e0X
                 g$imp*$23933$1S&e0X
                 g$inv*$23934$1S&e0X
                 g$vis*$23935$1S&e0X
                 g$invoke-code$23936$1S&e0X
                 g$macro*$23937$1S&e0X
                 g$export-subst$23938$1S&e0X
                 g$export-env$23939$1S&e0X)
               ((case-lambda
                  ((g$export-env$23940$1S&e0X
                     g$export-subst$23941$1S&e0X
                     g$macro*$23942$1S&e0X
                     g$invoke-code$23943$1S&e0X
                     g$vis*$23944$1S&e0X
                     g$inv*$23945$1S&e0X
                     g$imp*$23946$1S&e0X
                     g$ver$23947$1S&e0X
                     g$name$23948$1S&e0X)
                   ((case-lambda
                      ((g$id$23949$1S&e0X
                         g$name$23950$1S&e0X
                         g$ver$23951$1S&e0X
                         g$imp*$23952$1S&e0X
                         g$vis*$23953$1S&e0X
                         g$inv*$23954$1S&e0X
                         g$visit-proc$23955$1S&e0X
                         g$invoke-proc$23956$1S&e0X
                         g$visit-code$23957$1S&e0X
                         g$invoke-code$23958$1S&e0X)
                       (begin
                         (g$install-library$19895$1S&e0X
                           g$id$23949$1S&e0X
                           g$name$23950$1S&e0X
                           g$ver$23951$1S&e0X
                           g$imp*$23952$1S&e0X
                           g$vis*$23953$1S&e0X
                           g$inv*$23954$1S&e0X
                           g$export-subst$23941$1S&e0X
                           g$export-env$23940$1S&e0X
                           g$visit-proc$23955$1S&e0X
                           g$invoke-proc$23956$1S&e0X
                           g$visit-code$23957$1S&e0X
                           g$invoke-code$23958$1S&e0X
                           '#t
                           g$filename$23918$1S&e0X)
                         (values
                           g$id$23949$1S&e0X
                           g$name$23950$1S&e0X
                           g$ver$23951$1S&e0X
                           g$imp*$23952$1S&e0X
                           g$vis*$23953$1S&e0X
                           g$inv*$23954$1S&e0X
                           g$invoke-code$23958$1S&e0X
                           g$visit-code$23957$1S&e0X
                           g$export-subst$23941$1S&e0X
                           g$export-env$23940$1S&e0X))))
                    (gensym)
                    g$name$23948$1S&e0X
                    g$ver$23947$1S&e0X
                    (g$map$11833$1S&e0X
                      g$library-spec$19901$1S&e0X
                      g$imp*$23946$1S&e0X)
                    (g$map$11833$1S&e0X
                      g$library-spec$19901$1S&e0X
                      g$vis*$23944$1S&e0X)
                    (g$map$11833$1S&e0X
                      g$library-spec$19901$1S&e0X
                      g$inv*$23945$1S&e0X)
                    (case-lambda
                      (()
                       (g$visit!$23921$1S&e0X g$macro*$23942$1S&e0X)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$19629$1S&e0X
                           g$invoke-code$23943$1S&e0X))))
                    (g$build-visit-code$23920$1S&e0X
                      g$macro*$23942$1S&e0X)
                    g$invoke-code$23943$1S&e0X)))
                g$export-env$23939$1S&e0X
                g$export-subst$23938$1S&e0X
                g$macro*$23937$1S&e0X
                g$invoke-code$23936$1S&e0X
                g$vis*$23935$1S&e0X
                g$inv*$23934$1S&e0X
                g$imp*$23933$1S&e0X
                g$ver$23932$1S&e0X
                g$name$23931$1S&e0X))))))
       ((g$x$23967$1S&e0X g$filename$23968$1S&e0X)
        (g$library-expander$20792$1S&e0X
          g$x$23967$1S&e0X
          g$filename$23968$1S&e0X
          (case-lambda ((g$x$23969$1S&e0X) (values)))))
       ((g$x$23970$1S&e0X)
        (g$library-expander$20792$1S&e0X
          g$x$23970$1S&e0X
          '#f
          (case-lambda ((g$x$23971$1S&e0X) (values)))))))
   (g$boot-library-expand$20793$1S&e0X
     g$boot-library-expand$24382$1S&e0X
     (case-lambda
       ((g$x$23972$1S&e0X)
        (call-with-values
          (case-lambda
            (() (g$library-expander$20792$1S&e0X g$x$23972$1S&e0X)))
          (case-lambda
            ((g$id$23983$1S&e0X
               g$name$23984$1S&e0X
               g$ver$23985$1S&e0X
               g$imp*$23986$1S&e0X
               g$vis*$23987$1S&e0X
               g$inv*$23988$1S&e0X
               g$invoke-code$23989$1S&e0X
               g$visit-code$23990$1S&e0X
               g$export-subst$23991$1S&e0X
               g$export-env$23992$1S&e0X)
             ((case-lambda
                ((g$export-env$23993$1S&e0X
                   g$export-subst$23994$1S&e0X
                   g$visit-code$23995$1S&e0X
                   g$invoke-code$23996$1S&e0X
                   g$inv*$23997$1S&e0X
                   g$vis*$23998$1S&e0X
                   g$imp*$23999$1S&e0X
                   g$ver$24000$1S&e0X
                   g$name$24001$1S&e0X
                   g$id$24002$1S&e0X)
                 (values
                   g$name$24001$1S&e0X
                   g$invoke-code$23996$1S&e0X
                   g$export-subst$23994$1S&e0X
                   g$export-env$23993$1S&e0X)))
              g$export-env$23992$1S&e0X
              g$export-subst$23991$1S&e0X
              g$visit-code$23990$1S&e0X
              g$invoke-code$23989$1S&e0X
              g$inv*$23988$1S&e0X
              g$vis*$23987$1S&e0X
              g$imp*$23986$1S&e0X
              g$ver$23985$1S&e0X
              g$name$23984$1S&e0X
              g$id$23983$1S&e0X)))))))
   (g$rev-map-append$20794$1S&e0X
     g$rev-map-append$24383$1S&e0X
     (case-lambda
       ((g$f$24003$1S&e0X g$ls$24004$1S&e0X g$ac$24005$1S&e0X)
        (if (null? g$ls$24004$1S&e0X)
          g$ac$24005$1S&e0X
          (begin
            '#f
            (g$rev-map-append$20794$1S&e0X
              g$f$24003$1S&e0X
              (cdr g$ls$24004$1S&e0X)
              (cons
                (g$f$24003$1S&e0X (car g$ls$24004$1S&e0X))
                g$ac$24005$1S&e0X)))))))
   (g$build-exports$20795$1S&e0X
     g$build-exports$24384$1S&e0X
     (case-lambda
       ((g$lex*+loc*$24006$1S&e0X g$init*$24007$1S&e0X)
        (g$build-sequence$20116$1S&e0X
          '#f
          (cons
            (g$build-void$20117$1S&e0X)
            (g$rev-map-append$20794$1S&e0X
              (case-lambda
                ((g$x$24008$1S&e0X)
                 (list
                   'set!
                   (cdr g$x$24008$1S&e0X)
                   (car g$x$24008$1S&e0X))))
              g$lex*+loc*$24006$1S&e0X
              g$init*$24007$1S&e0X))))))
   (g$make-export-subst$20796$1S&e0X
     g$make-export-subst$24385$1S&e0X
     (case-lambda
       ((g$name*$24009$1S&e0X g$id*$24010$1S&e0X)
        (g$map$11833$1S&e0X
          (case-lambda
            ((g$name$24011$1S&e0X g$id$24012$1S&e0X)
             ((case-lambda
                ((g$label$24013$1S&e0X)
                 (begin
                   (if (not g$label$24013$1S&e0X)
                     (g$syntax-violation$20808$1S&e0X
                       '#f
                       '"cannot export unbound identifier"
                       g$id$24012$1S&e0X)
                     (void))
                   (cons g$name$24011$1S&e0X g$label$24013$1S&e0X))))
              (g$id->label$20204$1S&e0X g$id$24012$1S&e0X))))
          g$name*$24009$1S&e0X
          g$id*$24010$1S&e0X))))
   (g$make-export-env/macros$20797$1S&e0X
     g$make-export-env/macros$24386$1S&e0X
     (case-lambda
       ((g$lex*$24014$1S&e0X g$loc*$24015$1S&e0X g$r$24016$1S&e0X)
        (letrec* ((g$lookup$24017$1S&e0X
                    (case-lambda
                      ((g$x$24033$1S&e0X)
                       ((letrec ((g$f$24034$1S&e0X
                                   (case-lambda
                                     ((g$x$24035$1S&e0X
                                        g$lex*$24036$1S&e0X
                                        g$loc*$24037$1S&e0X)
                                      (if (pair? g$lex*$24036$1S&e0X)
                                        (if (eq? g$x$24035$1S&e0X
                                                 (car g$lex*$24036$1S&e0X))
                                          (car g$loc*$24037$1S&e0X)
                                          (g$f$24034$1S&e0X
                                            g$x$24035$1S&e0X
                                            (cdr g$lex*$24036$1S&e0X)
                                            (cdr g$loc*$24037$1S&e0X)))
                                        (begin
                                          '#f
                                          (assertion-violation
                                            'lookup-make-export
                                            '"BUG")))))))
                          g$f$24034$1S&e0X)
                        g$x$24033$1S&e0X
                        g$lex*$24014$1S&e0X
                        g$loc*$24015$1S&e0X)))))
          ((letrec ((g$f$24018$1S&e0X
                      (case-lambda
                        ((g$r$24019$1S&e0X
                           g$env$24020$1S&e0X
                           g$global*$24021$1S&e0X
                           g$macro*$24022$1S&e0X)
                         (if (null? g$r$24019$1S&e0X)
                           (values
                             g$env$24020$1S&e0X
                             g$global*$24021$1S&e0X
                             g$macro*$24022$1S&e0X)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x$24023$1S&e0X)
                                 ((case-lambda
                                    ((g$label$24024$1S&e0X
                                       g$b$24025$1S&e0X)
                                     ((case-lambda
                                        ((g$t$24026$1S&e0X)
                                         (if (eqv?
                                               g$t$24026$1S&e0X
                                               'lexical)
                                           ((case-lambda
                                              ((g$v$24027$1S&e0X)
                                               ((case-lambda
                                                  ((g$loc$24028$1S&e0X
                                                     g$type$24029$1S&e0X)
                                                   (g$f$24018$1S&e0X
                                                     (cdr g$r$24019$1S&e0X)
                                                     (cons
                                                       (g$cons*$11835$1S&e0X
                                                         g$label$24024$1S&e0X
                                                         g$type$24029$1S&e0X
                                                         g$loc$24028$1S&e0X)
                                                       g$env$24020$1S&e0X)
                                                     (cons
                                                       (cons
                                                         (g$lexical-var$20633$1S&e0X
                                                           g$v$24027$1S&e0X)
                                                         g$loc$24028$1S&e0X)
                                                       g$global*$24021$1S&e0X)
                                                     g$macro*$24022$1S&e0X)))
                                                (g$lookup$24017$1S&e0X
                                                  (g$lexical-var$20633$1S&e0X
                                                    g$v$24027$1S&e0X))
                                                (if (g$lexical-mutable?$20634$1S&e0X
                                                      g$v$24027$1S&e0X)
                                                  'mutable
                                                  'global))))
                                            (g$binding-value$20209$1S&e0X
                                              g$b$24025$1S&e0X))
                                           (if (eqv?
                                                 g$t$24026$1S&e0X
                                                 'local-macro)
                                             ((case-lambda
                                                ((g$loc$24030$1S&e0X)
                                                 (g$f$24018$1S&e0X
                                                   (cdr g$r$24019$1S&e0X)
                                                   (cons
                                                     (g$cons*$11835$1S&e0X
                                                       g$label$24024$1S&e0X
                                                       'global-macro
                                                       g$loc$24030$1S&e0X)
                                                     g$env$24020$1S&e0X)
                                                   g$global*$24021$1S&e0X
                                                   (cons
                                                     (cons
                                                       g$loc$24030$1S&e0X
                                                       (g$binding-value$20209$1S&e0X
                                                         g$b$24025$1S&e0X))
                                                     g$macro*$24022$1S&e0X))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$24026$1S&e0X
                                                   'local-macro!)
                                               ((case-lambda
                                                  ((g$loc$24031$1S&e0X)
                                                   (g$f$24018$1S&e0X
                                                     (cdr g$r$24019$1S&e0X)
                                                     (cons
                                                       (g$cons*$11835$1S&e0X
                                                         g$label$24024$1S&e0X
                                                         'global-macro!
                                                         g$loc$24031$1S&e0X)
                                                       g$env$24020$1S&e0X)
                                                     g$global*$24021$1S&e0X
                                                     (cons
                                                       (cons
                                                         g$loc$24031$1S&e0X
                                                         (g$binding-value$20209$1S&e0X
                                                           g$b$24025$1S&e0X))
                                                       g$macro*$24022$1S&e0X))))
                                                (gensym))
                                               (if (eqv?
                                                     g$t$24026$1S&e0X
                                                     'local-ctv)
                                                 ((case-lambda
                                                    ((g$loc$24032$1S&e0X)
                                                     (g$f$24018$1S&e0X
                                                       (cdr g$r$24019$1S&e0X)
                                                       (cons
                                                         (g$cons*$11835$1S&e0X
                                                           g$label$24024$1S&e0X
                                                           'global-ctv
                                                           g$loc$24032$1S&e0X)
                                                         g$env$24020$1S&e0X)
                                                       g$global*$24021$1S&e0X
                                                       (cons
                                                         (cons
                                                           g$loc$24032$1S&e0X
                                                           (g$binding-value$20209$1S&e0X
                                                             g$b$24025$1S&e0X))
                                                         g$macro*$24022$1S&e0X))))
                                                  (gensym))
                                                 (if (g$memv$11826$1S&e0X
                                                       g$t$24026$1S&e0X
                                                       '($rtd $module))
                                                   (g$f$24018$1S&e0X
                                                     (cdr g$r$24019$1S&e0X)
                                                     (cons
                                                       g$x$24023$1S&e0X
                                                       g$env$24020$1S&e0X)
                                                     g$global*$24021$1S&e0X
                                                     g$macro*$24022$1S&e0X)
                                                   (begin
                                                     '#f
                                                     (assertion-violation
                                                       'expander
                                                       '"BUG: do not know how to export"
                                                       (g$binding-type$20208$1S&e0X
                                                         g$b$24025$1S&e0X)
                                                       (g$binding-value$20209$1S&e0X
                                                         g$b$24025$1S&e0X))))))))))
                                      (g$binding-type$20208$1S&e0X
                                        g$b$24025$1S&e0X))))
                                  (car g$x$24023$1S&e0X)
                                  (cdr g$x$24023$1S&e0X))))
                              (car g$r$24019$1S&e0X))))))))
             g$f$24018$1S&e0X)
           g$r$24016$1S&e0X
           '()
           '()
           '())))))
   (g$generate-temporaries$20798$1S&e0X
     g$generate-temporaries$24387$1S&e0X
     (case-lambda
       ((g$ls$24038$1S&e0X)
        ((case-lambda
           ((g$t$24039$1S&e0X)
            ((case-lambda
               ((g$ls/false$24040$1S&e0X)
                (if g$ls/false$24040$1S&e0X
                  (apply
                    (case-lambda
                      ((g$ls$24041$1S&e0X)
                       (g$map$11833$1S&e0X
                         (case-lambda
                           ((g$x$24042$1S&e0X)
                            (g$make-stx$20164$1S&e0X
                              ((case-lambda
                                 ((g$x$24043$1S&e0X)
                                  (if ((case-lambda
                                         ((g$t$24044$1S&e0X)
                                          (if g$t$24044$1S&e0X
                                            g$t$24044$1S&e0X
                                            (begin
                                              '#f
                                              (string?
                                                g$x$24043$1S&e0X)))))
                                       (g$symbol?$12665$1S&e0X
                                         g$x$24043$1S&e0X))
                                    (gensym g$x$24043$1S&e0X)
                                    (begin '#f (gensym 't)))))
                               (g$syntax->datum$20811$1S&e0X
                                 g$x$24042$1S&e0X))
                              g$top-mark*$20124$1S&e0X
                              '()
                              '())))
                         g$ls$24041$1S&e0X)))
                    g$ls/false$24040$1S&e0X)
                  ((case-lambda
                     ((g$t$24045$1S&e0X)
                      ((case-lambda
                         ((g$ls/false$24046$1S&e0X)
                          (if g$ls/false$24046$1S&e0X
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$24046$1S&e0X)
                            (g$syntax-violation$20808$1S&e0X
                              '#f
                              '"invalid syntax"
                              g$t$24045$1S&e0X))))
                       (g$syntax-dispatch$20689$1S&e0X
                         g$t$24045$1S&e0X
                         '_))))
                   g$t$24039$1S&e0X))))
             (g$syntax-dispatch$20689$1S&e0X
               g$t$24039$1S&e0X
               'each-any))))
         g$ls$24038$1S&e0X))))
   (g$free-identifier=?$20799$1S&e0X
     g$free-identifier=?$24388$1S&e0X
     (case-lambda
       ((g$x$24047$1S&e0X g$y$24048$1S&e0X)
        (if (g$id?$20191$1S&e0X g$x$24047$1S&e0X)
          (if (g$id?$20191$1S&e0X g$y$24048$1S&e0X)
            (g$free-id=?$20195$1S&e0X g$x$24047$1S&e0X g$y$24048$1S&e0X)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$24048$1S&e0X))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$24047$1S&e0X)))))
   (g$bound-identifier=?$20800$1S&e0X
     g$bound-identifier=?$24389$1S&e0X
     (case-lambda
       ((g$x$24049$1S&e0X g$y$24050$1S&e0X)
        (if (g$id?$20191$1S&e0X g$x$24049$1S&e0X)
          (if (g$id?$20191$1S&e0X g$y$24050$1S&e0X)
            (g$bound-id=?$20194$1S&e0X
              g$x$24049$1S&e0X
              g$y$24050$1S&e0X)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$24050$1S&e0X))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$24049$1S&e0X)))))
   (g$make-source-condition$20801$1S&e0X
     g$make-source-condition$24390$1S&e0X
     (case-lambda
       ((g$x$24051$1S&e0X)
        (letrec* ((g$13216$24052$1S&e0X
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$14161$1S&e0X
                      'g$13219$1S&e0X
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$13218$24053$1S&e0X '#f)
                  (g$13217$24054$1S&e0X
                    (make-record-constructor-descriptor
                      g$13216$24052$1S&e0X
                      g$&condition-rcd$14162$1S&e0X
                      g$13218$24053$1S&e0X))
                  (g$13215$24057$1S&e0X
                    (record-predicate g$13216$24052$1S&e0X))
                  (g$make-source-condition$24058$1S&e0X
                    (record-constructor g$13217$24054$1S&e0X))
                  (g$13213$24059$1S&e0X
                    (record-accessor g$13216$24052$1S&e0X '0))
                  (g$13214$24060$1S&e0X
                    (record-accessor g$13216$24052$1S&e0X '1))
                  (g$source-condition?$24061$1S&e0X
                    (condition-predicate g$13216$24052$1S&e0X))
                  (g$source-filename$24062$1S&e0X
                    (condition-accessor
                      g$13216$24052$1S&e0X
                      g$13213$24059$1S&e0X))
                  (g$source-character$24063$1S&e0X
                    (condition-accessor
                      g$13216$24052$1S&e0X
                      g$13214$24060$1S&e0X)))
          (if (pair? g$x$24051$1S&e0X)
            (g$make-source-condition$24058$1S&e0X
              (car g$x$24051$1S&e0X)
              (cdr g$x$24051$1S&e0X))
            (condition))))))
   (g$extract-position-condition$20802$1S&e0X
     g$extract-position-condition$24391$1S&e0X
     (case-lambda
       ((g$x$24064$1S&e0X)
        (g$make-source-condition$20801$1S&e0X
          (g$expression-position$20803$1S&e0X g$x$24064$1S&e0X)))))
   (g$expression-position$20803$1S&e0X
     g$expression-position$24392$1S&e0X
     (case-lambda
       ((g$x$24065$1S&e0X)
        (if (g$stx?$20163$1S&e0X g$x$24065$1S&e0X)
          (begin
            '#f
            ((case-lambda
               ((g$x$24066$1S&e0X)
                (if (annotation? g$x$24066$1S&e0X)
                  (begin '#f (annotation-source g$x$24066$1S&e0X))
                  '#f)))
             (g$stx-expr$20165$1S&e0X g$x$24065$1S&e0X)))
          '#f))))
   (g$assertion-error$20804$1S&e0X
     g$assertion-error$24393$1S&e0X
     (case-lambda
       ((g$expr$24067$1S&e0X g$pos$24068$1S&e0X)
        (raise
          (condition
            (g$make-assertion-violation$14209$1S&e0X)
            (g$make-who-condition$14227$1S&e0X 'assert)
            (g$make-message-condition$14167$1S&e0X '"assertion failed")
            (g$make-irritants-condition$14217$1S&e0X
              (list g$expr$24067$1S&e0X))
            (g$make-source-condition$20801$1S&e0X
              g$pos$24068$1S&e0X))))))
   (g$syntax-error$20805$1S&e0X
     g$syntax-error$24394$1S&e0X
     (case-lambda
       ((g$x$24069$1S&e0X . g$args$24070$1S&e0X)
        (begin
          (if (not (g$for-all$11831$1S&e0X string? g$args$24070$1S&e0X))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$24070$1S&e0X)
            (void))
          (raise
            (condition
              (g$make-message-condition$14167$1S&e0X
                (if (null? g$args$24070$1S&e0X)
                  '"invalid syntax"
                  (apply string-append g$args$24070$1S&e0X)))
              (g$make-syntax-violation$14281$1S&e0X
                (g$syntax->datum$20811$1S&e0X g$x$24069$1S&e0X)
                '#f)
              (g$extract-position-condition$20802$1S&e0X
                g$x$24069$1S&e0X)
              (g$extract-trace$20806$1S&e0X g$x$24069$1S&e0X)))))))
   (g$extract-trace$20806$1S&e0X
     g$extract-trace$24395$1S&e0X
     (case-lambda
       ((g$x$24071$1S&e0X)
        (letrec* ((g$13241$24072$1S&e0X
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$14161$1S&e0X
                      'g$13244$1S&e0X
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$13243$24073$1S&e0X '#f)
                  (g$13242$24074$1S&e0X
                    (make-record-constructor-descriptor
                      g$13241$24072$1S&e0X
                      g$&condition-rcd$14162$1S&e0X
                      g$13243$24073$1S&e0X))
                  (g$13240$24077$1S&e0X
                    (record-predicate g$13241$24072$1S&e0X))
                  (g$make-trace$24078$1S&e0X
                    (record-constructor g$13242$24074$1S&e0X))
                  (g$13239$24079$1S&e0X
                    (record-accessor g$13241$24072$1S&e0X '0))
                  (g$trace?$24080$1S&e0X
                    (condition-predicate g$13241$24072$1S&e0X))
                  (g$trace-form$24081$1S&e0X
                    (condition-accessor
                      g$13241$24072$1S&e0X
                      g$13239$24079$1S&e0X)))
          ((letrec ((g$f$24082$1S&e0X
                      (case-lambda
                        ((g$x$24083$1S&e0X)
                         (if (g$stx?$20163$1S&e0X g$x$24083$1S&e0X)
                           (apply
                             condition
                             (g$make-trace$24078$1S&e0X
                               g$x$24083$1S&e0X)
                             (g$map$11833$1S&e0X
                               g$f$24082$1S&e0X
                               (g$stx-ae*$20168$1S&e0X
                                 g$x$24083$1S&e0X)))
                           (if (annotation? g$x$24083$1S&e0X)
                             (g$make-trace$24078$1S&e0X
                               (g$make-stx$20164$1S&e0X
                                 g$x$24083$1S&e0X
                                 '()
                                 '()
                                 '()))
                             (begin '#f (condition))))))))
             g$f$24082$1S&e0X)
           g$x$24071$1S&e0X)))))
   (g$syntax-violation*$20807$1S&e0X
     g$syntax-violation*$24396$1S&e0X
     (case-lambda
       ((g$who$24084$1S&e0X
          g$msg$24085$1S&e0X
          g$form$24086$1S&e0X
          g$condition-object$24087$1S&e0X)
        (begin
          (if (not (string? g$msg$24085$1S&e0X))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$24085$1S&e0X)
            (void))
          ((case-lambda
             ((g$who$24088$1S&e0X)
              (raise
                (condition
                  (if g$who$24088$1S&e0X
                    (g$make-who-condition$14227$1S&e0X
                      g$who$24088$1S&e0X)
                    (condition))
                  (g$make-message-condition$14167$1S&e0X
                    g$msg$24085$1S&e0X)
                  g$condition-object$24087$1S&e0X
                  (g$extract-position-condition$20802$1S&e0X
                    g$form$24086$1S&e0X)
                  (g$extract-trace$20806$1S&e0X g$form$24086$1S&e0X)))))
           (if ((case-lambda
                  ((g$t$24089$1S&e0X)
                   (if g$t$24089$1S&e0X
                     g$t$24089$1S&e0X
                     (begin
                       '#f
                       (g$symbol?$12665$1S&e0X g$who$24084$1S&e0X)))))
                (string? g$who$24084$1S&e0X))
             g$who$24084$1S&e0X
             (if (not g$who$24084$1S&e0X)
               ((case-lambda
                  ((g$t$24090$1S&e0X)
                   ((case-lambda
                      ((g$ls/false$24091$1S&e0X)
                       (if (if g$ls/false$24091$1S&e0X
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$24092$1S&e0X)
                                    (g$id?$20191$1S&e0X
                                      g$id$24092$1S&e0X)))
                                 g$ls/false$24091$1S&e0X))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$24093$1S&e0X)
                              (g$syntax->datum$20811$1S&e0X
                                g$id$24093$1S&e0X)))
                           g$ls/false$24091$1S&e0X)
                         ((case-lambda
                            ((g$t$24094$1S&e0X)
                             ((case-lambda
                                ((g$ls/false$24095$1S&e0X)
                                 (if (if g$ls/false$24095$1S&e0X
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$24096$1S&e0X
                                                g$rest$24097$1S&e0X)
                                              (g$id?$20191$1S&e0X
                                                g$id$24096$1S&e0X)))
                                           g$ls/false$24095$1S&e0X))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$24098$1S&e0X
                                          g$rest$24099$1S&e0X)
                                        (g$syntax->datum$20811$1S&e0X
                                          g$id$24098$1S&e0X)))
                                     g$ls/false$24095$1S&e0X)
                                   ((case-lambda
                                      ((g$t$24100$1S&e0X)
                                       ((case-lambda
                                          ((g$ls/false$24101$1S&e0X)
                                           (if g$ls/false$24101$1S&e0X
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$24101$1S&e0X)
                                             (g$syntax-violation$20808$1S&e0X
                                               '#f
                                               '"invalid syntax"
                                               g$t$24100$1S&e0X))))
                                        (g$syntax-dispatch$20689$1S&e0X
                                          g$t$24100$1S&e0X
                                          '_))))
                                    g$t$24094$1S&e0X))))
                              (g$syntax-dispatch$20689$1S&e0X
                                g$t$24094$1S&e0X
                                '(any . any)))))
                          g$t$24090$1S&e0X))))
                    (g$syntax-dispatch$20689$1S&e0X
                      g$t$24090$1S&e0X
                      'any))))
                g$form$24086$1S&e0X)
               (begin
                 '#f
                 (assertion-violation
                   'syntax-violation
                   '"invalid who argument"
                   g$who$24084$1S&e0X)))))))))
   (g$syntax-violation$20808$1S&e0X
     g$syntax-violation$24397$1S&e0X
     (case-lambda
       ((g$who$24102$1S&e0X g$msg$24103$1S&e0X g$form$24104$1S&e0X)
        (g$syntax-violation$20808$1S&e0X
          g$who$24102$1S&e0X
          g$msg$24103$1S&e0X
          g$form$24104$1S&e0X
          '#f))
       ((g$who$24105$1S&e0X
          g$msg$24106$1S&e0X
          g$form$24107$1S&e0X
          g$subform$24108$1S&e0X)
        (g$syntax-violation*$20807$1S&e0X
          g$who$24105$1S&e0X
          g$msg$24106$1S&e0X
          g$form$24107$1S&e0X
          (g$make-syntax-violation$14281$1S&e0X
            (g$syntax->datum$20811$1S&e0X g$form$24107$1S&e0X)
            (g$syntax->datum$20811$1S&e0X g$subform$24108$1S&e0X))))))
   (g$identifier?$20809$1S&e0X
     g$identifier?$24398$1S&e0X
     (case-lambda
       ((g$x$24109$1S&e0X) (g$id?$20191$1S&e0X g$x$24109$1S&e0X))))
   (g$datum->syntax$20810$1S&e0X
     g$datum->syntax$24399$1S&e0X
     (case-lambda
       ((g$id$24110$1S&e0X g$datum$24111$1S&e0X)
        (if (g$id?$20191$1S&e0X g$id$24110$1S&e0X)
          (g$datum->stx$20174$1S&e0X
            g$id$24110$1S&e0X
            g$datum$24111$1S&e0X)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$24110$1S&e0X)))))
   (g$syntax->datum$20811$1S&e0X
     g$syntax->datum$24400$1S&e0X
     (case-lambda
       ((g$x$24112$1S&e0X)
        (g$stx->datum$20202$1S&e0X g$x$24112$1S&e0X))))
   (g$compile-r6rs-top-level$20812$1S&e0X
     g$compile-r6rs-top-level$24401$1S&e0X
     (case-lambda
       ((g$x*$24113$1S&e0X)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$20752$1S&e0X g$x*$24113$1S&e0X)))
          (case-lambda
            ((g$lib*$24116$1S&e0X g$invoke-code$24117$1S&e0X)
             ((case-lambda
                ((g$invoke-code$24118$1S&e0X g$lib*$24119$1S&e0X)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$11834$1S&e0X
                        g$invoke-library$19897$1S&e0X
                        g$lib*$24119$1S&e0X)
                      (eval-core
                        (g$expanded->core$19629$1S&e0X
                          g$invoke-code$24118$1S&e0X)))))))
              g$invoke-code$24117$1S&e0X
              g$lib*$24116$1S&e0X)))))))
   (g$pre-compile-r6rs-top-level$20813$1S&e0X
     g$pre-compile-r6rs-top-level$24402$1S&e0X
     (case-lambda
       ((g$x*$24120$1S&e0X)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$20752$1S&e0X g$x*$24120$1S&e0X)))
          (case-lambda
            ((g$lib*$24123$1S&e0X g$invoke-code$24124$1S&e0X)
             ((case-lambda
                ((g$invoke-code$24125$1S&e0X g$lib*$24126$1S&e0X)
                 (begin
                   (g$for-each$11834$1S&e0X
                     g$invoke-library$19897$1S&e0X
                     g$lib*$24126$1S&e0X)
                   (compile-core
                     (g$expanded->core$19629$1S&e0X
                       g$invoke-code$24125$1S&e0X)))))
              g$invoke-code$24124$1S&e0X
              g$lib*$24123$1S&e0X)))))))
   (g$new-interaction-environment$20814$1S&e0X
     g$new-interaction-environment$24403$1S&e0X
     (case-lambda
       (() (g$new-interaction-environment$20814$1S&e0X '(ironscheme)))
       ((g$libname$24127$1S&e0X)
        ((case-lambda
           ((g$lib$24128$1S&e0X g$rib$24129$1S&e0X)
            (begin
              ((case-lambda
                 ((g$subst$24130$1S&e0X)
                  (begin
                    (g$set-rib-sym*!$20144$1S&e0X
                      g$rib$24129$1S&e0X
                      (g$map$11833$1S&e0X car g$subst$24130$1S&e0X))
                    (g$set-rib-mark**!$20145$1S&e0X
                      g$rib$24129$1S&e0X
                      (g$map$11833$1S&e0X
                        (case-lambda
                          ((g$x$24131$1S&e0X) g$top-mark*$20124$1S&e0X))
                        g$subst$24130$1S&e0X))
                    (g$set-rib-label*!$20146$1S&e0X
                      g$rib$24129$1S&e0X
                      (g$map$11833$1S&e0X cdr g$subst$24130$1S&e0X)))))
               (g$library-subst$19854$1S&e0X g$lib$24128$1S&e0X))
              (g$make-interaction-env$20773$1S&e0X
                g$rib$24129$1S&e0X
                '()
                '()))))
         (g$find-library-by-name$19890$1S&e0X g$libname$24127$1S&e0X)
         (g$make-empty-rib$20149$1S&e0X)))))
   (g$interaction-environment$20815$1S&e0X
     g$interaction-environment$24404$1S&e0X
     (g$make-parameter$19052$1S&e0X '#f))
   (g$top-level-context$20816$1S&e0X
     g$top-level-context$24405$1S&e0X
     (g$make-parameter$19052$1S&e0X '#f)))
  (g$current-library-expander$19887$1S&e0X
    g$library-expander$20792$1S&e0X))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$19626$1S&e0X
      (case-lambda
        ((g$x$24490$1S&e0X)
         ((case-lambda
            ((g$t$24491$1S&e0X)
             (if g$t$24491$1S&e0X
               (cdr g$t$24491$1S&e0X)
               (begin '#f '#f))))
          (g$assq$11821$1S&e0X
            g$x$24490$1S&e0X
            '((ellipsis-map . g$ellipsis-map$24289$1S&e0X)
              (&stacktrace-rcd . g$&stacktrace-rcd$14252$1S&e0X)
              (&stacktrace-rtd . g$&stacktrace-rtd$14251$1S&e0X)
              (&where-rcd . g$&where-rcd$14242$1S&e0X)
              (&where-rtd . g$&where-rtd$14241$1S&e0X)
              (&no-nans-rcd . g$&no-nans-rcd$14416$1S&e0X)
              (&no-nans-rtd . g$&no-nans-rtd$14415$1S&e0X)
              (&no-infinities-rcd . g$&no-infinities-rcd$14408$1S&e0X)
              (&no-infinities-rtd . g$&no-infinities-rtd$14407$1S&e0X)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$14400$1S&e0X)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$14399$1S&e0X)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$14390$1S&e0X)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$14389$1S&e0X)
              (&i/o-port-rcd . g$&i/o-port-rcd$14382$1S&e0X)
              (&i/o-port-rtd . g$&i/o-port-rtd$14381$1S&e0X)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$14372$1S&e0X)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$14371$1S&e0X)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$14364$1S&e0X)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$14363$1S&e0X)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$14356$1S&e0X)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$14355$1S&e0X)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$14348$1S&e0X)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$14347$1S&e0X)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$14340$1S&e0X)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$14339$1S&e0X)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$14330$1S&e0X)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$14329$1S&e0X)
              (&i/o-write-rcd . g$&i/o-write-rcd$14320$1S&e0X)
              (&i/o-write-rtd . g$&i/o-write-rtd$14319$1S&e0X)
              (&i/o-read-rcd . g$&i/o-read-rcd$14312$1S&e0X)
              (&i/o-read-rtd . g$&i/o-read-rtd$14311$1S&e0X)
              (&i/o-rcd . g$&i/o-rcd$14304$1S&e0X)
              (&i/o-rtd . g$&i/o-rtd$14303$1S&e0X)
              (&undefined-rcd . g$&undefined-rcd$14296$1S&e0X)
              (&undefined-rtd . g$&undefined-rtd$14295$1S&e0X)
              (&syntax-rcd . g$&syntax-rcd$14288$1S&e0X)
              (&syntax-rtd . g$&syntax-rtd$14287$1S&e0X)
              (&lexical-rcd . g$&lexical-rcd$14276$1S&e0X)
              (&lexical-rtd . g$&lexical-rtd$14275$1S&e0X)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$14268$1S&e0X)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$14267$1S&e0X)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$14260$1S&e0X)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$14259$1S&e0X)
              (&who-rcd . g$&who-rcd$14232$1S&e0X)
              (&who-rtd . g$&who-rtd$14231$1S&e0X)
              (&irritants-rcd . g$&irritants-rcd$14222$1S&e0X)
              (&irritants-rtd . g$&irritants-rtd$14221$1S&e0X)
              (&assertion-rcd . g$&assertion-rcd$14212$1S&e0X)
              (&assertion-rtd . g$&assertion-rtd$14211$1S&e0X)
              (&violation-rcd . g$&violation-rcd$14204$1S&e0X)
              (&violation-rtd . g$&violation-rtd$14203$1S&e0X)
              (&error-rcd . g$&error-rcd$14196$1S&e0X)
              (&error-rtd . g$&error-rtd$14195$1S&e0X)
              (&serious-rcd . g$&serious-rcd$14188$1S&e0X)
              (&serious-rtd . g$&serious-rtd$14187$1S&e0X)
              (&warning-rcd . g$&warning-rcd$14180$1S&e0X)
              (&warning-rtd . g$&warning-rtd$14179$1S&e0X)
              (&message-rcd . g$&message-rcd$14172$1S&e0X)
              (&message-rtd . g$&message-rtd$14171$1S&e0X)
              (&condition-rcd . g$&condition-rcd$14162$1S&e0X)
              (&condition-rtd . g$&condition-rtd$14161$1S&e0X)
              (tanh . g$tanh$13716$1S&e0X)
              (cosh . g$cosh$13714$1S&e0X)
              (sinh . g$sinh$13711$1S&e0X)
              (make-list . g$make-list$11816$1S&e0X)
              (last-pair . g$last-pair$11815$1S&e0X)
              (ironscheme-test . g$ironscheme-test$24480$1S&e0X)
              (ironscheme-build . g$ironscheme-build$24481$1S&e0X)
              (syntax-error . g$syntax-error$24394$1S&e0X)
              (syntax-dispatch . g$syntax-dispatch$24284$1S&e0X)
              (compile-system-libraries
                .
                g$compile-system-libraries$24485$1S&e0X)
              (compile->closure . g$compile->closure$24487$1S&e0X)
              (compile . g$compile$24486$1S&e0X)
              (load . g$load$24479$1S&e0X)
              (new-interaction-environment
                .
                g$new-interaction-environment$24403$1S&e0X)
              (interaction-environment
                .
                g$interaction-environment$24404$1S&e0X)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$14638$1S&e0X)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$14637$1S&e0X)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$14636$1S&e0X)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$14635$1S&e0X)
              (string-ci>? . g$string-ci>?$14627$1S&e0X)
              (string-ci>=? . g$string-ci>=?$14629$1S&e0X)
              (string-ci=? . g$string-ci=?$14625$1S&e0X)
              (string-ci<? . g$string-ci<?$14626$1S&e0X)
              (string-ci<=? . g$string-ci<=?$14628$1S&e0X)
              (char-ci>? . g$char-ci>?$14632$1S&e0X)
              (char-ci>=? . g$char-ci>=?$14634$1S&e0X)
              (char-ci=? . g$char-ci=?$14630$1S&e0X)
              (char-ci<? . g$char-ci<?$14631$1S&e0X)
              (char-ci<=? . g$char-ci<=?$14633$1S&e0X)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$24222$1S&e0X)
              (variable-transformer?
                .
                g$variable-transformer?$24221$1S&e0X)
              (make-variable-transformer
                .
                g$make-variable-transformer$24219$1S&e0X)
              (identifier? . g$identifier?$24398$1S&e0X)
              (generate-temporaries
                .
                g$generate-temporaries$24387$1S&e0X)
              (free-identifier=? . g$free-identifier=?$24388$1S&e0X)
              (syntax->datum . g$syntax->datum$24400$1S&e0X)
              (datum->syntax . g$datum->syntax$24399$1S&e0X)
              (bound-identifier=? . g$bound-identifier=?$24389$1S&e0X)
              (delete-file . g$delete-file$12803$1S&e0X)
              (file-exists? . g$file-exists?$12802$1S&e0X)
              (list-sort . g$list-sort$14480$1S&e0X)
              (symbol-hash . g$symbol-hash$12792$1S&e0X)
              (string-ci-hash . g$string-ci-hash$12791$1S&e0X)
              (string-hash . g$string-hash$12790$1S&e0X)
              (make-eqv-hashtable . g$make-eqv-hashtable$12782$1S&e0X)
              (make-eq-hashtable . g$make-eq-hashtable$12781$1S&e0X)
              (hashtable? . g$hashtable?$12780$1S&e0X)
              (hashtable-update! . g$hashtable-update!$12788$1S&e0X)
              (hashtable-size . g$hashtable-size$12783$1S&e0X)
              (hashtable-set! . g$hashtable-set!$12785$1S&e0X)
              (hashtable-ref . g$hashtable-ref$12784$1S&e0X)
              (hashtable-delete! . g$hashtable-delete!$12786$1S&e0X)
              (hashtable-contains? . g$hashtable-contains?$12787$1S&e0X)
              (hashtable-clear! . g$hashtable-clear!$12789$1S&e0X)
              (call-with-output-file
                .
                g$call-with-output-file$18668$1S&e0X)
              (call-with-input-file
                .
                g$call-with-input-file$18667$1S&e0X)
              (write-char . g$write-char$18664$1S&e0X)
              (with-output-to-file . g$with-output-to-file$18666$1S&e0X)
              (with-input-from-file
                .
                g$with-input-from-file$18665$1S&e0X)
              (read-char . g$read-char$18663$1S&e0X)
              (peek-char . g$peek-char$18662$1S&e0X)
              (newline . g$newline$18669$1S&e0X)
              (standard-output-port
                .
                g$standard-output-port$18596$1S&e0X)
              (standard-input-port . g$standard-input-port$18595$1S&e0X)
              (standard-error-port . g$standard-error-port$18594$1S&e0X)
              (put-datum . g$put-datum$18599$1S&e0X)
              (port? . g$port?$18604$1S&e0X)
              (open-string-output-port
                .
                g$open-string-output-port$18603$1S&e0X)
              (native-eol-style . g$native-eol-style$18597$1S&e0X)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$14317$1S&e0X)
              (make-i/o-read-error . g$make-i/o-read-error$14309$1S&e0X)
              (make-i/o-port-error . g$make-i/o-port-error$14377$1S&e0X)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$14325$1S&e0X)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$14335$1S&e0X)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$14345$1S&e0X)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$14353$1S&e0X)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$14369$1S&e0X)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$14361$1S&e0X)
              (make-i/o-error . g$make-i/o-error$14301$1S&e0X)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$14395$1S&e0X)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$14387$1S&e0X)
              (make-bytevector . g$make-bytevector$13128$1S&e0X)
              (i/o-write-error? . g$i/o-write-error?$14318$1S&e0X)
              (i/o-read-error? . g$i/o-read-error?$14310$1S&e0X)
              (i/o-port-error? . g$i/o-port-error?$14379$1S&e0X)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$14327$1S&e0X)
              (i/o-error-position . g$i/o-error-position$14328$1S&e0X)
              (i/o-filename-error? . g$i/o-filename-error?$14337$1S&e0X)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$14346$1S&e0X)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$14354$1S&e0X)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$14370$1S&e0X)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$14362$1S&e0X)
              (i/o-error? . g$i/o-error?$14302$1S&e0X)
              (i/o-error-port . g$i/o-error-port$14380$1S&e0X)
              (i/o-error-filename . g$i/o-error-filename$14338$1S&e0X)
              (i/o-encoding-error? . g$i/o-encoding-error?$14397$1S&e0X)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$14398$1S&e0X)
              (i/o-decoding-error? . g$i/o-decoding-error?$14388$1S&e0X)
              (get-datum . g$get-datum$18600$1S&e0X)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$18605$1S&e0X)
              (call-with-port . g$call-with-port$18606$1S&e0X)
              (buffer-mode? . g$buffer-mode?$18598$1S&e0X)
              (scheme-report-environment
                .
                g$scheme-report-environment$24377$1S&e0X)
              (quotient . g$quotient$14447$1S&e0X)
              (null-environment . g$null-environment$24376$1S&e0X)
              (remainder . g$remainder$14448$1S&e0X)
              (modulo . g$modulo$14449$1S&e0X)
              (inexact->exact . g$inexact->exact$14444$1S&e0X)
              (force . g$force$14451$1S&e0X)
              (exact->inexact . g$exact->inexact$14445$1S&e0X)
              (command-line . g$command-line$24474$1S&e0X)
              (remove . g$remove$11838$1S&e0X)
              (remv . g$remv$11839$1S&e0X)
              (remp . g$remp$11819$1S&e0X)
              (remq . g$remq$11840$1S&e0X)
              (partition . g$partition$11818$1S&e0X)
              (memv . g$memv$11826$1S&e0X)
              (memq . g$memq$11825$1S&e0X)
              (memp . g$memp$11828$1S&e0X)
              (member . g$member$11827$1S&e0X)
              (exists . g$exists$11832$1S&e0X)
              (for-all . g$for-all$11831$1S&e0X)
              (fold-right . g$fold-right$11837$1S&e0X)
              (fold-left . g$fold-left$11836$1S&e0X)
              (find . g$find$11817$1S&e0X)
              (filter . g$filter$11820$1S&e0X)
              (cons* . g$cons*$11835$1S&e0X)
              (assv . g$assv$11822$1S&e0X)
              (assq . g$assq$11821$1S&e0X)
              (assp . g$assp$11824$1S&e0X)
              (assoc . g$assoc$11823$1S&e0X)
              (eval . g$eval$24379$1S&e0X)
              (environment . g$environment$24375$1S&e0X)
              (make-enumeration . g$make-enumeration$18805$1S&e0X)
              (enum-set=? . g$enum-set=?$18812$1S&e0X)
              (enum-set-universe . g$enum-set-universe$18806$1S&e0X)
              (enum-set-union . g$enum-set-union$18813$1S&e0X)
              (enum-set-subset? . g$enum-set-subset?$18811$1S&e0X)
              (enum-set-projection . g$enum-set-projection$18817$1S&e0X)
              (enum-set-member? . g$enum-set-member?$18810$1S&e0X)
              (enum-set-intersection
                .
                g$enum-set-intersection$18814$1S&e0X)
              (enum-set-indexer . g$enum-set-indexer$18807$1S&e0X)
              (enum-set-difference . g$enum-set-difference$18815$1S&e0X)
              (enum-set-constructor
                .
                g$enum-set-constructor$18808$1S&e0X)
              (enum-set-complement . g$enum-set-complement$18816$1S&e0X)
              (enum-set->list . g$enum-set->list$18809$1S&e0X)
              (who-condition? . g$who-condition?$14229$1S&e0X)
              (warning? . g$warning?$14178$1S&e0X)
              (violation? . g$violation?$14202$1S&e0X)
              (undefined-violation?
                .
                g$undefined-violation?$14294$1S&e0X)
              (syntax-violation? . g$syntax-violation?$14284$1S&e0X)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$14286$1S&e0X)
              (syntax-violation-form
                .
                g$syntax-violation-form$14285$1S&e0X)
              (syntax-violation . g$syntax-violation$24397$1S&e0X)
              (serious-condition? . g$serious-condition?$14186$1S&e0X)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$14258$1S&e0X)
              (message-condition? . g$message-condition?$14169$1S&e0X)
              (make-who-condition . g$make-who-condition$14227$1S&e0X)
              (make-warning . g$make-warning$14177$1S&e0X)
              (make-violation . g$make-violation$14201$1S&e0X)
              (make-undefined-violation
                .
                g$make-undefined-violation$14293$1S&e0X)
              (make-syntax-violation
                .
                g$make-syntax-violation$14281$1S&e0X)
              (make-serious-condition
                .
                g$make-serious-condition$14185$1S&e0X)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$14257$1S&e0X)
              (make-message-condition
                .
                g$make-message-condition$14167$1S&e0X)
              (make-lexical-violation
                .
                g$make-lexical-violation$14273$1S&e0X)
              (make-irritants-condition
                .
                g$make-irritants-condition$14217$1S&e0X)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$14265$1S&e0X)
              (make-error . g$make-error$14193$1S&e0X)
              (make-assertion-violation
                .
                g$make-assertion-violation$14209$1S&e0X)
              (lexical-violation? . g$lexical-violation?$14274$1S&e0X)
              (irritants-condition?
                .
                g$irritants-condition?$14219$1S&e0X)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$14266$1S&e0X)
              (error? . g$error?$14194$1S&e0X)
              (condition-who . g$condition-who$14230$1S&e0X)
              (condition-message . g$condition-message$14170$1S&e0X)
              (condition-irritants . g$condition-irritants$14220$1S&e0X)
              (assertion-violation?
                .
                g$assertion-violation?$14210$1S&e0X)
              (utf32->string . g$utf32->string$13146$1S&e0X)
              (utf16->string . g$utf16->string$13145$1S&e0X)
              (utf8->string . g$utf8->string$13143$1S&e0X)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$13147$1S&e0X)
              (u8-list->bytevector . g$u8-list->bytevector$13139$1S&e0X)
              (string->utf8 . g$string->utf8$13140$1S&e0X)
              (string->utf32 . g$string->utf32$13142$1S&e0X)
              (string->utf16 . g$string->utf16$13141$1S&e0X)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$13148$1S&e0X)
              (native-endianness . g$native-endianness$13117$1S&e0X)
              (bytevector? . g$bytevector?$12664$1S&e0X)
              (bytevector=? . g$bytevector=?$13130$1S&e0X)
              (bytevector-u8-set! . g$bytevector-u8-set!$13135$1S&e0X)
              (bytevector-u8-ref . g$bytevector-u8-ref$13134$1S&e0X)
              (bytevector-u64-set! . g$bytevector-u64-set!$13176$1S&e0X)
              (bytevector-u64-ref . g$bytevector-u64-ref$13172$1S&e0X)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$13178$1S&e0X)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$13174$1S&e0X)
              (bytevector-u32-set! . g$bytevector-u32-set!$13168$1S&e0X)
              (bytevector-u32-ref . g$bytevector-u32-ref$13164$1S&e0X)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$13170$1S&e0X)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$13166$1S&e0X)
              (bytevector-u16-set! . g$bytevector-u16-set!$13160$1S&e0X)
              (bytevector-u16-ref . g$bytevector-u16-ref$13156$1S&e0X)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$13162$1S&e0X)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$13158$1S&e0X)
              (bytevector-s8-set! . g$bytevector-s8-set!$13137$1S&e0X)
              (bytevector-s8-ref . g$bytevector-s8-ref$13136$1S&e0X)
              (bytevector-s64-set! . g$bytevector-s64-set!$13177$1S&e0X)
              (bytevector-s64-ref . g$bytevector-s64-ref$13173$1S&e0X)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$13179$1S&e0X)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$13175$1S&e0X)
              (bytevector-s32-set! . g$bytevector-s32-set!$13169$1S&e0X)
              (bytevector-s32-ref . g$bytevector-s32-ref$13165$1S&e0X)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$13171$1S&e0X)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$13167$1S&e0X)
              (bytevector-s16-set! . g$bytevector-s16-set!$13161$1S&e0X)
              (bytevector-s16-ref . g$bytevector-s16-ref$13157$1S&e0X)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$13163$1S&e0X)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$13159$1S&e0X)
              (bytevector-length . g$bytevector-length$13129$1S&e0X)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$13154$1S&e0X)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$13152$1S&e0X)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$13182$1S&e0X)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$13180$1S&e0X)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$13155$1S&e0X)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$13153$1S&e0X)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$13183$1S&e0X)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$13181$1S&e0X)
              (bytevector-fill! . g$bytevector-fill!$13131$1S&e0X)
              (bytevector-copy! . g$bytevector-copy!$13132$1S&e0X)
              (bytevector-copy . g$bytevector-copy$13133$1S&e0X)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$13149$1S&e0X)
              (bytevector->u8-list . g$bytevector->u8-list$13138$1S&e0X)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$13150$1S&e0X)
              (no-nans-violation? . g$no-nans-violation?$14414$1S&e0X)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$14406$1S&e0X)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$14413$1S&e0X)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$14405$1S&e0X)
              (real->flonum . g$real->flonum$13670$1S&e0X)
              (flzero? . g$flzero?$18561$1S&e0X)
              (fltruncate . g$fltruncate$18556$1S&e0X)
              (fltan . g$fltan$18545$1S&e0X)
              (flsqrt . g$flsqrt$18550$1S&e0X)
              (flsin . g$flsin$18543$1S&e0X)
              (flround . g$flround$18557$1S&e0X)
              (flpositive? . g$flpositive?$18559$1S&e0X)
              (flonum? . g$flonum?$12669$1S&e0X)
              (flodd? . g$flodd?$18563$1S&e0X)
              (flnumerator . g$flnumerator$18521$1S&e0X)
              (flnegative? . g$flnegative?$18560$1S&e0X)
              (flnan? . g$flnan?$18542$1S&e0X)
              (flmod0 . g$flmod0$18533$1S&e0X)
              (flmod . g$flmod$18532$1S&e0X)
              (flmin . g$flmin$18565$1S&e0X)
              (flmax . g$flmax$18564$1S&e0X)
              (fllog . g$fllog$18549$1S&e0X)
              (flinteger? . g$flinteger?$18538$1S&e0X)
              (flinfinite? . g$flinfinite?$18541$1S&e0X)
              (flfloor . g$flfloor$18555$1S&e0X)
              (flfinite? . g$flfinite?$18539$1S&e0X)
              (flexpt . g$flexpt$18552$1S&e0X)
              (flexp . g$flexp$18551$1S&e0X)
              (fleven? . g$fleven?$18562$1S&e0X)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$18537$1S&e0X)
              (fldiv0 . g$fldiv0$18530$1S&e0X)
              (fldiv-and-mod . g$fldiv-and-mod$18534$1S&e0X)
              (fldiv . g$fldiv$18536$1S&e0X)
              (fldenominator . g$fldenominator$18520$1S&e0X)
              (flcos . g$flcos$18544$1S&e0X)
              (flceiling . g$flceiling$18553$1S&e0X)
              (flatan . g$flatan$18548$1S&e0X)
              (flasin . g$flasin$18546$1S&e0X)
              (flacos . g$flacos$18547$1S&e0X)
              (flabs . g$flabs$18558$1S&e0X)
              (fl>? . g$fl>?$18527$1S&e0X)
              (fl>=? . g$fl>=?$18528$1S&e0X)
              (fl=? . g$fl=?$18524$1S&e0X)
              (fl<? . g$fl<?$18525$1S&e0X)
              (fl<=? . g$fl<=?$18526$1S&e0X)
              (fl/ . g$fl/$18523$1S&e0X)
              (fl- . g$fl-$18522$1S&e0X)
              (fl+ . g$fl+$18518$1S&e0X)
              (fl* . g$fl*$18519$1S&e0X)
              (fixnum->flonum . g$fixnum->flonum$13671$1S&e0X)
              (fxzero? . g$fxzero?$17003$1S&e0X)
              (fxxor . g$fxxor$16987$1S&e0X)
              (fxrotate-bit-field . g$fxrotate-bit-field$17023$1S&e0X)
              (fxreverse-bit-field . g$fxreverse-bit-field$17024$1S&e0X)
              (fxpositive? . g$fxpositive?$16999$1S&e0X)
              (fxodd? . g$fxodd?$17007$1S&e0X)
              (fxnot . g$fxnot$16979$1S&e0X)
              (fxnegative? . g$fxnegative?$17001$1S&e0X)
              (fxmod0 . g$fxmod0$16992$1S&e0X)
              (fxmod . g$fxmod$16991$1S&e0X)
              (fxmin . g$fxmin$17009$1S&e0X)
              (fxmax . g$fxmax$17008$1S&e0X)
              (fxlength . g$fxlength$16976$1S&e0X)
              (fxior . g$fxior$16986$1S&e0X)
              (fxif . g$fxif$17014$1S&e0X)
              (fxfirst-bit-set . g$fxfirst-bit-set$16977$1S&e0X)
              (fxeven? . g$fxeven?$17005$1S&e0X)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$16997$1S&e0X)
              (fxdiv0 . g$fxdiv0$16995$1S&e0X)
              (fxdiv-and-mod . g$fxdiv-and-mod$16993$1S&e0X)
              (fxdiv . g$fxdiv$16989$1S&e0X)
              (fxcopy-bit-field . g$fxcopy-bit-field$17020$1S&e0X)
              (fxcopy-bit . g$fxcopy-bit$17016$1S&e0X)
              (fxbit-set? . g$fxbit-set?$16978$1S&e0X)
              (fxbit-field . g$fxbit-field$17018$1S&e0X)
              (fxbit-count . g$fxbit-count$16974$1S&e0X)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$17022$1S&e0X)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$17021$1S&e0X)
              (fxarithmetic-shift . g$fxarithmetic-shift$16972$1S&e0X)
              (fxand . g$fxand$16985$1S&e0X)
              (fx>? . g$fx>?$16983$1S&e0X)
              (fx>=? . g$fx>=?$16984$1S&e0X)
              (fx=? . g$fx=?$16980$1S&e0X)
              (fx<? . g$fx<?$16981$1S&e0X)
              (fx<=? . g$fx<=?$16982$1S&e0X)
              (fx-/carry . g$fx-/carry$17011$1S&e0X)
              (fx- . g$fx-$16969$1S&e0X)
              (fx+/carry . g$fx+/carry$17012$1S&e0X)
              (fx+ . g$fx+$16967$1S&e0X)
              (fx*/carry . g$fx*/carry$17010$1S&e0X)
              (fx* . g$fx*$16968$1S&e0X)
              (greatest-fixnum . g$greatest-fixnum$16965$1S&e0X)
              (least-fixnum . g$least-fixnum$16966$1S&e0X)
              (fixnum-width . g$fixnum-width$12670$1S&e0X)
              (fixnum? . g$fixnum?$12668$1S&e0X)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$14732$1S&e0X)
              (bitwise-length . g$bitwise-length$14723$1S&e0X)
              (bitwise-if . g$bitwise-if$14726$1S&e0X)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$14724$1S&e0X)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$14729$1S&e0X)
              (bitwise-copy-bit . g$bitwise-copy-bit$14727$1S&e0X)
              (bitwise-bit-set? . g$bitwise-bit-set?$14725$1S&e0X)
              (bitwise-bit-field . g$bitwise-bit-field$14728$1S&e0X)
              (bitwise-bit-count . g$bitwise-bit-count$14722$1S&e0X)
              (bitwise-xor . g$bitwise-xor$14721$1S&e0X)
              (bitwise-ior . g$bitwise-ior$14720$1S&e0X)
              (bitwise-and . g$bitwise-and$14719$1S&e0X)
              (bitwise-not . g$bitwise-not$14718$1S&e0X)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$14731$1S&e0X)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$14730$1S&e0X)
              (zero? . g$zero?$13685$1S&e0X)
              (vector? . g$vector?$12663$1S&e0X)
              (vector-set! . g$vector-set!$12679$1S&e0X)
              (vector-ref . g$vector-ref$12678$1S&e0X)
              (vector-map . g$vector-map$12732$1S&e0X)
              (vector-for-each . g$vector-for-each$12733$1S&e0X)
              (vector-fill! . g$vector-fill!$12680$1S&e0X)
              (truncate . g$truncate$13723$1S&e0X)
              (tan . g$tan$13715$1S&e0X)
              (symbol? . g$symbol?$12665$1S&e0X)
              (symbol=? . g$symbol=?$12722$1S&e0X)
              (string>? . g$string>?$12719$1S&e0X)
              (string>=? . g$string>=?$12721$1S&e0X)
              (string=? . g$string=?$12717$1S&e0X)
              (string<? . g$string<?$12718$1S&e0X)
              (string<=? . g$string<=?$12720$1S&e0X)
              (string-for-each . g$string-for-each$12734$1S&e0X)
              (sqrt . g$sqrt$13725$1S&e0X)
              (sin . g$sin$13709$1S&e0X)
              (round . g$round$13724$1S&e0X)
              (reverse . g$reverse$12682$1S&e0X)
              (real? . g$real?$13679$1S&e0X)
              (real-valued? . g$real-valued?$13682$1S&e0X)
              (real-part . g$real-part$13706$1S&e0X)
              (rationalize . g$rationalize$12729$1S&e0X)
              (rational? . g$rational?$13680$1S&e0X)
              (rational-valued? . g$rational-valued?$13683$1S&e0X)
              (procedure? . g$procedure?$12667$1S&e0X)
              (positive? . g$positive?$13686$1S&e0X)
              (odd? . g$odd?$12712$1S&e0X)
              (numerator . g$numerator$13704$1S&e0X)
              (number? . g$number?$13672$1S&e0X)
              (number->string . g$number->string$13693$1S&e0X)
              (negative? . g$negative?$13687$1S&e0X)
              (nan? . g$nan?$13673$1S&e0X)
              (min . g$min$12714$1S&e0X)
              (max . g$max$12713$1S&e0X)
              (map . g$map$11833$1S&e0X)
              (make-rectangular . g$make-rectangular$13699$1S&e0X)
              (make-polar . g$make-polar$13700$1S&e0X)
              (magnitude . g$magnitude$13702$1S&e0X)
              (log . g$log$13718$1S&e0X)
              (list-tail . g$list-tail$11813$1S&e0X)
              (list-ref . g$list-ref$11814$1S&e0X)
              (list->vector . g$list->vector$12676$1S&e0X)
              (list->string . g$list->string$12677$1S&e0X)
              (lcm . g$lcm$12716$1S&e0X)
              (integer? . g$integer?$13681$1S&e0X)
              (integer-valued? . g$integer-valued?$13684$1S&e0X)
              (infinite? . g$infinite?$13675$1S&e0X)
              (inexact? . g$inexact?$13677$1S&e0X)
              (inexact . g$inexact$13688$1S&e0X)
              (imag-part . g$imag-part$13707$1S&e0X)
              (gcd . g$gcd$12715$1S&e0X)
              (for-each . g$for-each$11834$1S&e0X)
              (floor . g$floor$13721$1S&e0X)
              (finite? . g$finite?$13674$1S&e0X)
              (expt . g$expt$13727$1S&e0X)
              (exp . g$exp$13708$1S&e0X)
              (exact? . g$exact?$13676$1S&e0X)
              (exact-integer-sqrt . g$exact-integer-sqrt$13726$1S&e0X)
              (exact . g$exact$13689$1S&e0X)
              (even? . g$even?$12711$1S&e0X)
              (div0-and-mod0 . g$div0-and-mod0$12675$1S&e0X)
              (mod0 . g$mod0$12673$1S&e0X)
              (div0 . g$div0$12671$1S&e0X)
              (div-and-mod . g$div-and-mod$12674$1S&e0X)
              (mod . g$mod$12672$1S&e0X)
              (div . g$div$13719$1S&e0X)
              (denominator . g$denominator$13705$1S&e0X)
              (cos . g$cos$13712$1S&e0X)
              (complex? . g$complex?$13678$1S&e0X)
              (char? . g$char?$12662$1S&e0X)
              (char>? . g$char>?$12726$1S&e0X)
              (char>=? . g$char>=?$12728$1S&e0X)
              (char=? . g$char=?$12724$1S&e0X)
              (char<? . g$char<?$12725$1S&e0X)
              (char<=? . g$char<=?$12727$1S&e0X)
              (ceiling . g$ceiling$13722$1S&e0X)
              (cddddr . g$cddddr$12710$1S&e0X)
              (cdddar . g$cdddar$12709$1S&e0X)
              (cddadr . g$cddadr$12708$1S&e0X)
              (cddaar . g$cddaar$12707$1S&e0X)
              (cdaddr . g$cdaddr$12706$1S&e0X)
              (cdadar . g$cdadar$12705$1S&e0X)
              (cdaadr . g$cdaadr$12704$1S&e0X)
              (cdaaar . g$cdaaar$12703$1S&e0X)
              (cadddr . g$cadddr$12702$1S&e0X)
              (caddar . g$caddar$12701$1S&e0X)
              (cadadr . g$cadadr$12700$1S&e0X)
              (cadaar . g$cadaar$12699$1S&e0X)
              (caaddr . g$caaddr$12698$1S&e0X)
              (caadar . g$caadar$12697$1S&e0X)
              (caaadr . g$caaadr$12696$1S&e0X)
              (caaaar . g$caaaar$12695$1S&e0X)
              (cdddr . g$cdddr$12694$1S&e0X)
              (cddar . g$cddar$12693$1S&e0X)
              (cdadr . g$cdadr$12692$1S&e0X)
              (cdaar . g$cdaar$12691$1S&e0X)
              (caddr . g$caddr$12690$1S&e0X)
              (cadar . g$cadar$12689$1S&e0X)
              (caadr . g$caadr$12688$1S&e0X)
              (caaar . g$caaar$12687$1S&e0X)
              (cddr . g$cddr$12686$1S&e0X)
              (cdar . g$cdar$12685$1S&e0X)
              (cadr . g$cadr$12684$1S&e0X)
              (caar . g$caar$12683$1S&e0X)
              (boolean? . g$boolean?$12666$1S&e0X)
              (boolean=? . g$boolean=?$12723$1S&e0X)
              (atan . g$atan$13717$1S&e0X)
              (asin . g$asin$13710$1S&e0X)
              (angle . g$angle$13701$1S&e0X)
              (acos . g$acos$13713$1S&e0X)
              (abs . g$abs$13720$1S&e0X)
              (>= . g$>=$13698$1S&e0X)
              (> . g$>$13697$1S&e0X)
              (= . g$=$13694$1S&e0X)
              (<= . g$<=$13696$1S&e0X)
              (< . g$<$13695$1S&e0X)
              (enum-set? . g$enum?$18786$1S&e0X)
              (make-promise . g$make-promise$14450$1S&e0X)
              (load/unload . g$load/unload$24478$1S&e0X)
              (load/args . g$load/args$24477$1S&e0X)
              (printf . g$printf$18841$1S&e0X)
              (fprintf . g$fprintf$18842$1S&e0X)
              (format . g$format$18843$1S&e0X)
              (trace-printer . g$trace-printer$24473$1S&e0X)
              (make-traced-macro . g$make-traced-macro$18847$1S&e0X)
              (assertion-error . g$assertion-error$24393$1S&e0X)
              (make-parameter . g$make-parameter$19052$1S&e0X)
              (environment-bindings
                .
                g$environment-bindings$24371$1S&e0X)
              (environment-symbols . g$environment-symbols$24374$1S&e0X)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$24370$1S&e0X)
              (library-path . g$library-path$19879$1S&e0X)
              (make-compile-time-value
                .
                g$make-compile-time-value$24220$1S&e0X)
              (expand->core . g$expand->core$24380$1S&e0X)
              (expand . g$expand$24378$1S&e0X)
              (emacs-mode? . g$emacs-mode?$24475$1S&e0X)
              (syntax-transpose . g$syntax-transpose$24327$1S&e0X)
              (convert->cps . g$convert->cps$19580$1S&e0X)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$14249$1S&e0X)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$14247$1S&e0X)
              (where-condition? . g$where-condition?$14239$1S&e0X)
              (make-where-condition
                .
                g$make-where-condition$14237$1S&e0X)
              (installed-libraries . g$installed-libraries$19900$1S&e0X)
              (uninstall-library . g$uninstall-library$19891$1S&e0X)
              (pretty-gensyms . g$pretty-gensyms$19260$1S&e0X)
              (pretty-width . g$pretty-width$19257$1S&e0X)
              (pretty-print . g$pretty-print$19262$1S&e0X)))))))
    (g$install-library$19895$1S&e0X
      'g$13753$1S&e0X
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$6215$1S&e0X)
        (cosh . g$6213$1S&e0X)
        (sinh . g$6210$1S&e0X)
        (make-guid . g$13746$1S&e0X)
        (unspecified? . g$13745$1S&e0X)
        (make-list . g$5167$1S&e0X)
        (last-pair . g$5166$1S&e0X)
        (load-r5rs . g$13744$1S&e0X)
        (license . g$13743$1S&e0X)
        (stacktrace . g$13742$1S&e0X)
        (ironscheme-test . g$13311$1S&e0X)
        (ironscheme-build . g$13312$1S&e0X)
        (remove-location . g$13726$1S&e0X)
        (set-symbol-value! . g$13725$1S&e0X)
        (symbol-value . g$13724$1S&e0X)
        (symbol-bound? . g$13723$1S&e0X)
        (ungensym . g$13722$1S&e0X)
        (gensym . g$13721$1S&e0X)
        (void . g$13720$1S&e0X)
        (compile-system-libraries . g$13316$1S&e0X)
        (compile->closure . g$13318$1S&e0X)
        (compile . g$13317$1S&e0X)
        (load . g$13310$1S&e0X)
        (new-interaction-environment . g$10293$1S&e0X)
        (interaction-environment . g$10294$1S&e0X)
        (string-upcase . g$13715$1S&e0X)
        (string-titlecase . g$13714$1S&e0X)
        (string-normalize-nfkd . g$6997$1S&e0X)
        (string-normalize-nfkc . g$6996$1S&e0X)
        (string-normalize-nfd . g$6995$1S&e0X)
        (string-normalize-nfc . g$6994$1S&e0X)
        (string-foldcase . g$13713$1S&e0X)
        (string-downcase . g$13712$1S&e0X)
        (string-ci>? . g$6981$1S&e0X)
        (string-ci>=? . g$6983$1S&e0X)
        (string-ci=? . g$6979$1S&e0X)
        (string-ci<? . g$6980$1S&e0X)
        (string-ci<=? . g$6982$1S&e0X)
        (char-whitespace? . g$13711$1S&e0X)
        (char-upper-case? . g$13710$1S&e0X)
        (char-title-case? . g$13709$1S&e0X)
        (char-numeric? . g$13708$1S&e0X)
        (char-lower-case? . g$13707$1S&e0X)
        (char-general-category . g$13706$1S&e0X)
        (char-upcase . g$13705$1S&e0X)
        (char-titlecase . g$13704$1S&e0X)
        (char-foldcase . g$13703$1S&e0X)
        (char-downcase . g$13702$1S&e0X)
        (char-ci>? . g$6991$1S&e0X)
        (char-ci>=? . g$6993$1S&e0X)
        (char-ci=? . g$6989$1S&e0X)
        (char-ci<? . g$6990$1S&e0X)
        (char-ci<=? . g$6992$1S&e0X)
        (char-alphabetic? . g$13701$1S&e0X)
        (make-variable-transformer . g$9968$1S&e0X)
        (identifier? . g$10288$1S&e0X)
        (generate-temporaries . g$10277$1S&e0X)
        (free-identifier=? . g$10278$1S&e0X)
        (syntax->datum . g$10290$1S&e0X)
        (datum->syntax . g$10289$1S&e0X)
        (bound-identifier=? . g$10279$1S&e0X)
        (record-type-descriptor? . g$13700$1S&e0X)
        (record-predicate . g$13699$1S&e0X)
        (record-mutator . g$13698$1S&e0X)
        (record-constructor . g$13697$1S&e0X)
        (record-accessor . g$13696$1S&e0X)
        (make-record-type-descriptor . g$13695$1S&e0X)
        (make-record-constructor-descriptor . g$13694$1S&e0X)
        (record? . g$13693$1S&e0X)
        (record-type-uid . g$13692$1S&e0X)
        (record-type-sealed? . g$13691$1S&e0X)
        (record-type-parent . g$13690$1S&e0X)
        (record-type-opaque? . g$13689$1S&e0X)
        (record-type-name . g$13688$1S&e0X)
        (record-type-generative? . g$13687$1S&e0X)
        (record-type-field-names . g$13686$1S&e0X)
        (record-rtd . g$13685$1S&e0X)
        (record-field-mutable? . g$13684$1S&e0X)
        (delete-file . g$5835$1S&e0X)
        (file-exists? . g$5834$1S&e0X)
        (vector-sort! . g$13683$1S&e0X)
        (vector-sort . g$13682$1S&e0X)
        (list-sort . g$6950$1S&e0X)
        (symbol-hash . g$5805$1S&e0X)
        (string-ci-hash . g$5804$1S&e0X)
        (string-hash . g$5803$1S&e0X)
        (equal-hash . g$13681$1S&e0X)
        (hashtable-equivalence-function . g$13680$1S&e0X)
        (make-hashtable . g$13679$1S&e0X)
        (hashtable-hash-function . g$13678$1S&e0X)
        (make-eqv-hashtable . g$5795$1S&e0X)
        (make-eq-hashtable . g$5794$1S&e0X)
        (hashtable? . g$5793$1S&e0X)
        (hashtable-update! . g$5801$1S&e0X)
        (hashtable-size . g$5796$1S&e0X)
        (hashtable-set! . g$5798$1S&e0X)
        (hashtable-ref . g$5797$1S&e0X)
        (hashtable-mutable? . g$13677$1S&e0X)
        (hashtable-keys . g$13676$1S&e0X)
        (hashtable-entries . g$13675$1S&e0X)
        (hashtable-delete! . g$5799$1S&e0X)
        (hashtable-copy . g$13674$1S&e0X)
        (hashtable-contains? . g$5800$1S&e0X)
        (hashtable-clear! . g$5802$1S&e0X)
        (call-with-output-file . g$8792$1S&e0X)
        (call-with-input-file . g$8791$1S&e0X)
        (write-char . g$8783$1S&e0X)
        (write . g$13673$1S&e0X)
        (with-output-to-file . g$8790$1S&e0X)
        (with-input-from-file . g$8789$1S&e0X)
        (read-char . g$8782$1S&e0X)
        (read . g$13672$1S&e0X)
        (peek-char . g$8781$1S&e0X)
        (open-output-file . g$13671$1S&e0X)
        (open-input-file . g$13670$1S&e0X)
        (newline . g$8793$1S&e0X)
        (display . g$13669$1S&e0X)
        (close-output-port . g$13668$1S&e0X)
        (close-input-port . g$13667$1S&e0X)
        (eof-object? . g$13666$1S&e0X)
        (eof-object . g$13665$1S&e0X)
        (current-error-port . g$13664$1S&e0X)
        (current-output-port . g$13663$1S&e0X)
        (current-input-port . g$13662$1S&e0X)
        (output-port? . g$13661$1S&e0X)
        (input-port? . g$13660$1S&e0X)
        (utf-8-codec . g$13659$1S&e0X)
        (utf-16-codec . g$13658$1S&e0X)
        (transcoder-error-handling-mode . g$13657$1S&e0X)
        (transcoder-eol-style . g$13656$1S&e0X)
        (transcoder-codec . g$13655$1S&e0X)
        (transcoded-port . g$13654$1S&e0X)
        (textual-port? . g$13653$1S&e0X)
        (string->bytevector . g$13652$1S&e0X)
        (standard-output-port . g$8757$1S&e0X)
        (standard-input-port . g$8756$1S&e0X)
        (standard-error-port . g$8755$1S&e0X)
        (set-port-position! . g$13651$1S&e0X)
        (put-u8 . g$13650$1S&e0X)
        (put-string . g$13649$1S&e0X)
        (put-datum . g$8760$1S&e0X)
        (put-char . g$13648$1S&e0X)
        (put-bytevector . g$13647$1S&e0X)
        (port? . g$8765$1S&e0X)
        (port-transcoder . g$13646$1S&e0X)
        (port-position . g$13645$1S&e0X)
        (port-has-set-port-position!? . g$13644$1S&e0X)
        (port-has-port-position? . g$13643$1S&e0X)
        (port-eof? . g$13642$1S&e0X)
        (output-port-buffer-mode . g$13641$1S&e0X)
        (open-string-output-port . g$8764$1S&e0X)
        (open-string-input-port . g$13640$1S&e0X)
        (open-file-output-port . g$13639$1S&e0X)
        (open-file-input/output-port . g$13638$1S&e0X)
        (open-file-input-port . g$13637$1S&e0X)
        (open-bytevector-output-port . g$13636$1S&e0X)
        (open-bytevector-input-port . g$13635$1S&e0X)
        (native-transcoder . g$13634$1S&e0X)
        (native-eol-style . g$8758$1S&e0X)
        (make-transcoder . g$13633$1S&e0X)
        (latin-1-codec . g$13632$1S&e0X)
        (make-i/o-write-error . g$6760$1S&e0X)
        (make-i/o-read-error . g$6747$1S&e0X)
        (make-i/o-port-error . g$6855$1S&e0X)
        (make-i/o-invalid-position-error . g$6773$1S&e0X)
        (make-i/o-filename-error . g$6788$1S&e0X)
        (make-i/o-file-protection-error . g$6803$1S&e0X)
        (make-i/o-file-is-read-only-error . g$6816$1S&e0X)
        (make-i/o-file-does-not-exist-error . g$6842$1S&e0X)
        (make-i/o-file-already-exists-error . g$6829$1S&e0X)
        (make-i/o-error . g$6734$1S&e0X)
        (make-i/o-encoding-error . g$6883$1S&e0X)
        (make-i/o-decoding-error . g$6870$1S&e0X)
        (make-custom-textual-output-port . g$13631$1S&e0X)
        (make-custom-textual-input/output-port . g$13630$1S&e0X)
        (make-custom-textual-input-port . g$13629$1S&e0X)
        (make-custom-binary-output-port . g$13628$1S&e0X)
        (make-custom-binary-input/output-port . g$13627$1S&e0X)
        (make-custom-binary-input-port . g$13626$1S&e0X)
        (make-bytevector . g$5855$1S&e0X)
        (lookahead-u8 . g$13625$1S&e0X)
        (lookahead-char . g$13624$1S&e0X)
        (i/o-write-error? . g$6761$1S&e0X)
        (i/o-read-error? . g$6748$1S&e0X)
        (i/o-port-error? . g$6857$1S&e0X)
        (i/o-invalid-position-error? . g$6775$1S&e0X)
        (i/o-error-position . g$6776$1S&e0X)
        (i/o-filename-error? . g$6790$1S&e0X)
        (i/o-file-protection-error? . g$6804$1S&e0X)
        (i/o-file-is-read-only-error? . g$6817$1S&e0X)
        (i/o-file-does-not-exist-error? . g$6843$1S&e0X)
        (i/o-file-already-exists-error? . g$6830$1S&e0X)
        (i/o-error? . g$6735$1S&e0X)
        (i/o-error-port . g$6858$1S&e0X)
        (i/o-error-filename . g$6791$1S&e0X)
        (i/o-encoding-error? . g$6885$1S&e0X)
        (i/o-encoding-error-char . g$6886$1S&e0X)
        (i/o-decoding-error? . g$6871$1S&e0X)
        (get-u8 . g$13623$1S&e0X)
        (get-string-n! . g$13622$1S&e0X)
        (get-string-n . g$13621$1S&e0X)
        (get-string-all . g$13620$1S&e0X)
        (get-line . g$13619$1S&e0X)
        (get-datum . g$8761$1S&e0X)
        (get-char . g$13618$1S&e0X)
        (get-bytevector-some . g$13617$1S&e0X)
        (get-bytevector-n! . g$13616$1S&e0X)
        (get-bytevector-n . g$13615$1S&e0X)
        (get-bytevector-all . g$13614$1S&e0X)
        (flush-output-port . g$13613$1S&e0X)
        (close-port . g$13612$1S&e0X)
        (call-with-string-output-port . g$8766$1S&e0X)
        (call-with-port . g$8767$1S&e0X)
        (call-with-bytevector-output-port . g$13611$1S&e0X)
        (bytevector->string . g$13610$1S&e0X)
        (buffer-mode? . g$8759$1S&e0X)
        (binary-port? . g$13609$1S&e0X)
        (scheme-report-environment . g$10267$1S&e0X)
        (quotient . g$6929$1S&e0X)
        (null-environment . g$10266$1S&e0X)
        (remainder . g$6930$1S&e0X)
        (modulo . g$6931$1S&e0X)
        (inexact->exact . g$6926$1S&e0X)
        (force . g$6933$1S&e0X)
        (exact->inexact . g$6927$1S&e0X)
        (exit . g$13608$1S&e0X)
        (command-line . g$13305$1S&e0X)
        (string-fill! . g$13607$1S&e0X)
        (string-set! . g$13606$1S&e0X)
        (set-cdr! . g$13605$1S&e0X)
        (set-car! . g$13604$1S&e0X)
        (remove . g$5189$1S&e0X)
        (remv . g$5190$1S&e0X)
        (remp . g$5170$1S&e0X)
        (remq . g$5191$1S&e0X)
        (partition . g$5169$1S&e0X)
        (memv . g$5177$1S&e0X)
        (memq . g$5176$1S&e0X)
        (memp . g$5179$1S&e0X)
        (member . g$5178$1S&e0X)
        (exists . g$5183$1S&e0X)
        (for-all . g$5182$1S&e0X)
        (fold-right . g$5188$1S&e0X)
        (fold-left . g$5187$1S&e0X)
        (find . g$5168$1S&e0X)
        (filter . g$5171$1S&e0X)
        (cons* . g$5186$1S&e0X)
        (assv . g$5173$1S&e0X)
        (assq . g$5172$1S&e0X)
        (assp . g$5175$1S&e0X)
        (assoc . g$5174$1S&e0X)
        (with-exception-handler . g$13603$1S&e0X)
        (raise-continuable . g$13602$1S&e0X)
        (raise . g$13601$1S&e0X)
        (eval . g$10269$1S&e0X)
        (environment . g$10265$1S&e0X)
        (make-enumeration . g$8853$1S&e0X)
        (enum-set=? . g$8860$1S&e0X)
        (enum-set-universe . g$8854$1S&e0X)
        (enum-set-union . g$8861$1S&e0X)
        (enum-set-subset? . g$8859$1S&e0X)
        (enum-set-projection . g$8865$1S&e0X)
        (enum-set-member? . g$8858$1S&e0X)
        (enum-set-intersection . g$8862$1S&e0X)
        (enum-set-indexer . g$8855$1S&e0X)
        (enum-set-difference . g$8863$1S&e0X)
        (enum-set-constructor . g$8856$1S&e0X)
        (enum-set-complement . g$8864$1S&e0X)
        (enum-set->list . g$8857$1S&e0X)
        (who-condition? . g$6622$1S&e0X)
        (warning? . g$6541$1S&e0X)
        (violation? . g$6580$1S&e0X)
        (undefined-violation? . g$6722$1S&e0X)
        (syntax-violation? . g$6707$1S&e0X)
        (syntax-violation-subform . g$6709$1S&e0X)
        (syntax-violation-form . g$6708$1S&e0X)
        (syntax-violation . g$10287$1S&e0X)
        (simple-conditions . g$13600$1S&e0X)
        (serious-condition? . g$6554$1S&e0X)
        (non-continuable-violation? . g$6666$1S&e0X)
        (message-condition? . g$6527$1S&e0X)
        (make-who-condition . g$6620$1S&e0X)
        (make-warning . g$6540$1S&e0X)
        (make-violation . g$6579$1S&e0X)
        (make-undefined-violation . g$6721$1S&e0X)
        (make-syntax-violation . g$6704$1S&e0X)
        (make-serious-condition . g$6553$1S&e0X)
        (make-non-continuable-violation . g$6665$1S&e0X)
        (make-message-condition . g$6525$1S&e0X)
        (make-lexical-violation . g$6691$1S&e0X)
        (make-irritants-condition . g$6605$1S&e0X)
        (make-implementation-restriction-violation . g$6678$1S&e0X)
        (make-error . g$6566$1S&e0X)
        (make-assertion-violation . g$6592$1S&e0X)
        (lexical-violation? . g$6692$1S&e0X)
        (irritants-condition? . g$6607$1S&e0X)
        (implementation-restriction-violation? . g$6679$1S&e0X)
        (error? . g$6567$1S&e0X)
        (condition-who . g$6623$1S&e0X)
        (condition-predicate . g$13599$1S&e0X)
        (condition-message . g$6528$1S&e0X)
        (condition-irritants . g$6608$1S&e0X)
        (condition-accessor . g$13598$1S&e0X)
        (condition . g$13597$1S&e0X)
        (assertion-violation? . g$6593$1S&e0X)
        (condition? . g$13596$1S&e0X)
        (utf32->string . g$5873$1S&e0X)
        (utf16->string . g$5872$1S&e0X)
        (utf8->string . g$5870$1S&e0X)
        (uint-list->bytevector . g$5874$1S&e0X)
        (u8-list->bytevector . g$5866$1S&e0X)
        (string->utf8 . g$5867$1S&e0X)
        (string->utf32 . g$5869$1S&e0X)
        (string->utf16 . g$5868$1S&e0X)
        (sint-list->bytevector . g$5875$1S&e0X)
        (native-endianness . g$5841$1S&e0X)
        (bytevector? . g$5523$1S&e0X)
        (bytevector=? . g$5857$1S&e0X)
        (bytevector-uint-set! . g$13595$1S&e0X)
        (bytevector-uint-ref . g$13594$1S&e0X)
        (bytevector-u8-set! . g$5862$1S&e0X)
        (bytevector-u8-ref . g$5861$1S&e0X)
        (bytevector-u64-set! . g$5903$1S&e0X)
        (bytevector-u64-ref . g$5899$1S&e0X)
        (bytevector-u64-native-set! . g$5905$1S&e0X)
        (bytevector-u64-native-ref . g$5901$1S&e0X)
        (bytevector-u32-set! . g$5895$1S&e0X)
        (bytevector-u32-ref . g$5891$1S&e0X)
        (bytevector-u32-native-set! . g$5897$1S&e0X)
        (bytevector-u32-native-ref . g$5893$1S&e0X)
        (bytevector-u16-set! . g$5887$1S&e0X)
        (bytevector-u16-ref . g$5883$1S&e0X)
        (bytevector-u16-native-set! . g$5889$1S&e0X)
        (bytevector-u16-native-ref . g$5885$1S&e0X)
        (bytevector-sint-set! . g$13593$1S&e0X)
        (bytevector-sint-ref . g$13592$1S&e0X)
        (bytevector-s8-set! . g$5864$1S&e0X)
        (bytevector-s8-ref . g$5863$1S&e0X)
        (bytevector-s64-set! . g$5904$1S&e0X)
        (bytevector-s64-ref . g$5900$1S&e0X)
        (bytevector-s64-native-set! . g$5906$1S&e0X)
        (bytevector-s64-native-ref . g$5902$1S&e0X)
        (bytevector-s32-set! . g$5896$1S&e0X)
        (bytevector-s32-ref . g$5892$1S&e0X)
        (bytevector-s32-native-set! . g$5898$1S&e0X)
        (bytevector-s32-native-ref . g$5894$1S&e0X)
        (bytevector-s16-set! . g$5888$1S&e0X)
        (bytevector-s16-ref . g$5884$1S&e0X)
        (bytevector-s16-native-set! . g$5890$1S&e0X)
        (bytevector-s16-native-ref . g$5886$1S&e0X)
        (bytevector-length . g$5856$1S&e0X)
        (bytevector-ieee-single-set! . g$5881$1S&e0X)
        (bytevector-ieee-single-ref . g$5879$1S&e0X)
        (bytevector-ieee-single-native-set! . g$5909$1S&e0X)
        (bytevector-ieee-single-native-ref . g$5907$1S&e0X)
        (bytevector-ieee-double-set! . g$5882$1S&e0X)
        (bytevector-ieee-double-ref . g$5880$1S&e0X)
        (bytevector-ieee-double-native-set! . g$5910$1S&e0X)
        (bytevector-ieee-double-native-ref . g$5908$1S&e0X)
        (bytevector-fill! . g$5858$1S&e0X)
        (bytevector-copy! . g$5859$1S&e0X)
        (bytevector-copy . g$5860$1S&e0X)
        (bytevector->uint-list . g$5876$1S&e0X)
        (bytevector->u8-list . g$5865$1S&e0X)
        (bytevector->sint-list . g$5877$1S&e0X)
        (no-nans-violation? . g$6912$1S&e0X)
        (no-infinities-violation? . g$6899$1S&e0X)
        (make-no-nans-violation . g$6911$1S&e0X)
        (make-no-infinities-violation . g$6898$1S&e0X)
        (real->flonum . g$6155$1S&e0X)
        (flzero? . g$8197$1S&e0X)
        (fltruncate . g$8192$1S&e0X)
        (fltan . g$8178$1S&e0X)
        (flsqrt . g$8183$1S&e0X)
        (flsin . g$8176$1S&e0X)
        (flround . g$8193$1S&e0X)
        (flpositive? . g$8195$1S&e0X)
        (flonum? . g$5528$1S&e0X)
        (flodd? . g$8199$1S&e0X)
        (flnumerator . g$8142$1S&e0X)
        (flnegative? . g$8196$1S&e0X)
        (flnan? . g$8175$1S&e0X)
        (flmod0 . g$8160$1S&e0X)
        (flmod . g$8159$1S&e0X)
        (flmin . g$8201$1S&e0X)
        (flmax . g$8200$1S&e0X)
        (fllog . g$8182$1S&e0X)
        (flinteger? . g$8168$1S&e0X)
        (flinfinite? . g$8174$1S&e0X)
        (flfloor . g$8191$1S&e0X)
        (flfinite? . g$8169$1S&e0X)
        (flexpt . g$8185$1S&e0X)
        (flexp . g$8184$1S&e0X)
        (fleven? . g$8198$1S&e0X)
        (fldiv0-and-mod0 . g$8167$1S&e0X)
        (fldiv0 . g$8154$1S&e0X)
        (fldiv-and-mod . g$8161$1S&e0X)
        (fldiv . g$8166$1S&e0X)
        (fldenominator . g$8141$1S&e0X)
        (flcos . g$8177$1S&e0X)
        (flceiling . g$8186$1S&e0X)
        (flatan . g$8181$1S&e0X)
        (flasin . g$8179$1S&e0X)
        (flacos . g$8180$1S&e0X)
        (flabs . g$8194$1S&e0X)
        (fl>? . g$8148$1S&e0X)
        (fl>=? . g$8149$1S&e0X)
        (fl=? . g$8145$1S&e0X)
        (fl<? . g$8146$1S&e0X)
        (fl<=? . g$8147$1S&e0X)
        (fl/ . g$8144$1S&e0X)
        (fl- . g$8143$1S&e0X)
        (fl+ . g$8139$1S&e0X)
        (fl* . g$8140$1S&e0X)
        (fixnum->flonum . g$6156$1S&e0X)
        (fxzero? . g$7239$1S&e0X)
        (fxxor . g$7202$1S&e0X)
        (fxrotate-bit-field . g$7277$1S&e0X)
        (fxreverse-bit-field . g$7278$1S&e0X)
        (fxpositive? . g$7229$1S&e0X)
        (fxodd? . g$7249$1S&e0X)
        (fxnot . g$7183$1S&e0X)
        (fxnegative? . g$7234$1S&e0X)
        (fxmod0 . g$7213$1S&e0X)
        (fxmod . g$7212$1S&e0X)
        (fxmin . g$7251$1S&e0X)
        (fxmax . g$7250$1S&e0X)
        (fxlength . g$7180$1S&e0X)
        (fxior . g$7201$1S&e0X)
        (fxif . g$7259$1S&e0X)
        (fxfirst-bit-set . g$7181$1S&e0X)
        (fxeven? . g$7244$1S&e0X)
        (fxdiv0-and-mod0 . g$7224$1S&e0X)
        (fxdiv0 . g$7219$1S&e0X)
        (fxdiv-and-mod . g$7214$1S&e0X)
        (fxdiv . g$7207$1S&e0X)
        (fxcopy-bit-field . g$7274$1S&e0X)
        (fxcopy-bit . g$7264$1S&e0X)
        (fxbit-set? . g$7182$1S&e0X)
        (fxbit-field . g$7269$1S&e0X)
        (fxbit-count . g$7175$1S&e0X)
        (fxarithmetic-shift-right . g$7276$1S&e0X)
        (fxarithmetic-shift-left . g$7275$1S&e0X)
        (fxarithmetic-shift . g$7170$1S&e0X)
        (fxand . g$7200$1S&e0X)
        (fx>? . g$7192$1S&e0X)
        (fx>=? . g$7193$1S&e0X)
        (fx=? . g$7189$1S&e0X)
        (fx<? . g$7190$1S&e0X)
        (fx<=? . g$7191$1S&e0X)
        (fx-/carry . g$7253$1S&e0X)
        (fx- . g$7164$1S&e0X)
        (fx+/carry . g$7254$1S&e0X)
        (fx+ . g$7162$1S&e0X)
        (fx*/carry . g$7252$1S&e0X)
        (fx* . g$7163$1S&e0X)
        (greatest-fixnum . g$7133$1S&e0X)
        (least-fixnum . g$7134$1S&e0X)
        (fixnum-width . g$5529$1S&e0X)
        (fixnum? . g$5527$1S&e0X)
        (bitwise-rotate-bit-field . g$7071$1S&e0X)
        (bitwise-reverse-bit-field . g$13591$1S&e0X)
        (bitwise-length . g$7062$1S&e0X)
        (bitwise-if . g$7065$1S&e0X)
        (bitwise-first-bit-set . g$7063$1S&e0X)
        (bitwise-copy-bit-field . g$7068$1S&e0X)
        (bitwise-copy-bit . g$7066$1S&e0X)
        (bitwise-bit-set? . g$7064$1S&e0X)
        (bitwise-bit-field . g$7067$1S&e0X)
        (bitwise-bit-count . g$7061$1S&e0X)
        (bitwise-xor . g$7060$1S&e0X)
        (bitwise-ior . g$7059$1S&e0X)
        (bitwise-and . g$7058$1S&e0X)
        (bitwise-not . g$7057$1S&e0X)
        (bitwise-arithmetic-shift-right . g$7070$1S&e0X)
        (bitwise-arithmetic-shift-left . g$7069$1S&e0X)
        (bitwise-arithmetic-shift . g$13590$1S&e0X)
        (zero? . g$6170$1S&e0X)
        (vector? . g$5522$1S&e0X)
        (vector-set! . g$5538$1S&e0X)
        (vector-ref . g$5537$1S&e0X)
        (vector-map . g$5601$1S&e0X)
        (vector-length . g$13589$1S&e0X)
        (vector-for-each . g$5602$1S&e0X)
        (vector-fill! . g$5539$1S&e0X)
        (vector->list . g$13588$1S&e0X)
        (vector . g$13587$1S&e0X)
        (values . g$13586$1S&e0X)
        (truncate . g$6222$1S&e0X)
        (tan . g$6214$1S&e0X)
        (symbol? . g$5524$1S&e0X)
        (symbol=? . g$5586$1S&e0X)
        (symbol->string . g$13585$1S&e0X)
        (substring . g$13584$1S&e0X)
        (string? . g$13583$1S&e0X)
        (string>? . g$5583$1S&e0X)
        (string>=? . g$5585$1S&e0X)
        (string=? . g$5581$1S&e0X)
        (string<? . g$5582$1S&e0X)
        (string<=? . g$5584$1S&e0X)
        (string-ref . g$13582$1S&e0X)
        (string-length . g$13581$1S&e0X)
        (string-for-each . g$5603$1S&e0X)
        (string-copy . g$13580$1S&e0X)
        (string-append . g$13579$1S&e0X)
        (string->symbol . g$13578$1S&e0X)
        (string->number . g$13577$1S&e0X)
        (string->list . g$13576$1S&e0X)
        (string . g$13575$1S&e0X)
        (sqrt . g$6224$1S&e0X)
        (sin . g$6208$1S&e0X)
        (round . g$6223$1S&e0X)
        (reverse . g$5541$1S&e0X)
        (real? . g$6164$1S&e0X)
        (real-valued? . g$6167$1S&e0X)
        (real-part . g$6201$1S&e0X)
        (rationalize . g$5598$1S&e0X)
        (rational? . g$6165$1S&e0X)
        (rational-valued? . g$6168$1S&e0X)
        (procedure? . g$5526$1S&e0X)
        (positive? . g$6171$1S&e0X)
        (pair? . g$13574$1S&e0X)
        (odd? . g$5571$1S&e0X)
        (numerator . g$6199$1S&e0X)
        (number? . g$6157$1S&e0X)
        (number->string . g$6178$1S&e0X)
        (null? . g$13573$1S&e0X)
        (not . g$13572$1S&e0X)
        (negative? . g$6172$1S&e0X)
        (nan? . g$6158$1S&e0X)
        (min . g$5573$1S&e0X)
        (max . g$5572$1S&e0X)
        (map . g$5184$1S&e0X)
        (make-vector . g$13571$1S&e0X)
        (make-string . g$13570$1S&e0X)
        (make-rectangular . g$6194$1S&e0X)
        (make-polar . g$6195$1S&e0X)
        (magnitude . g$6197$1S&e0X)
        (log . g$6217$1S&e0X)
        (list? . g$13569$1S&e0X)
        (list-tail . g$5164$1S&e0X)
        (list-ref . g$5165$1S&e0X)
        (list->vector . g$5535$1S&e0X)
        (list->string . g$5536$1S&e0X)
        (list . g$13568$1S&e0X)
        (length . g$13567$1S&e0X)
        (lcm . g$5575$1S&e0X)
        (integer? . g$6166$1S&e0X)
        (integer-valued? . g$6169$1S&e0X)
        (integer->char . g$13566$1S&e0X)
        (infinite? . g$6160$1S&e0X)
        (inexact? . g$6162$1S&e0X)
        (inexact . g$6173$1S&e0X)
        (imag-part . g$6202$1S&e0X)
        (gcd . g$5574$1S&e0X)
        (for-each . g$5185$1S&e0X)
        (floor . g$6220$1S&e0X)
        (finite? . g$6159$1S&e0X)
        (expt . g$6226$1S&e0X)
        (exp . g$6207$1S&e0X)
        (exact? . g$6161$1S&e0X)
        (exact-integer-sqrt . g$6225$1S&e0X)
        (exact . g$6174$1S&e0X)
        (even? . g$5570$1S&e0X)
        (error . g$13565$1S&e0X)
        (eqv? . g$13564$1S&e0X)
        (equal? . g$13563$1S&e0X)
        (eq? . g$13562$1S&e0X)
        (dynamic-wind . g$13561$1S&e0X)
        (div0-and-mod0 . g$5534$1S&e0X)
        (mod0 . g$5532$1S&e0X)
        (div0 . g$5530$1S&e0X)
        (div-and-mod . g$5533$1S&e0X)
        (mod . g$5531$1S&e0X)
        (div . g$6218$1S&e0X)
        (denominator . g$6200$1S&e0X)
        (cos . g$6211$1S&e0X)
        (cons . g$13560$1S&e0X)
        (complex? . g$6163$1S&e0X)
        (char? . g$5521$1S&e0X)
        (char>? . g$5595$1S&e0X)
        (char>=? . g$5597$1S&e0X)
        (char=? . g$5593$1S&e0X)
        (char<? . g$5594$1S&e0X)
        (char<=? . g$5596$1S&e0X)
        (char->integer . g$13559$1S&e0X)
        (ceiling . g$6221$1S&e0X)
        (call-with-values . g$13558$1S&e0X)
        (call/cc . g$13557$1S&e0X)
        (call-with-current-continuation . g$13556$1S&e0X)
        (cddddr . g$5569$1S&e0X)
        (cdddar . g$5568$1S&e0X)
        (cddadr . g$5567$1S&e0X)
        (cddaar . g$5566$1S&e0X)
        (cdaddr . g$5565$1S&e0X)
        (cdadar . g$5564$1S&e0X)
        (cdaadr . g$5563$1S&e0X)
        (cdaaar . g$5562$1S&e0X)
        (cadddr . g$5561$1S&e0X)
        (caddar . g$5560$1S&e0X)
        (cadadr . g$5559$1S&e0X)
        (cadaar . g$5558$1S&e0X)
        (caaddr . g$5557$1S&e0X)
        (caadar . g$5556$1S&e0X)
        (caaadr . g$5555$1S&e0X)
        (caaaar . g$5554$1S&e0X)
        (cdddr . g$5553$1S&e0X)
        (cddar . g$5552$1S&e0X)
        (cdadr . g$5551$1S&e0X)
        (cdaar . g$5550$1S&e0X)
        (caddr . g$5549$1S&e0X)
        (cadar . g$5548$1S&e0X)
        (caadr . g$5547$1S&e0X)
        (caaar . g$5546$1S&e0X)
        (cddr . g$5545$1S&e0X)
        (cdar . g$5544$1S&e0X)
        (cadr . g$5543$1S&e0X)
        (caar . g$5542$1S&e0X)
        (cdr . g$13555$1S&e0X)
        (car . g$13554$1S&e0X)
        (boolean? . g$5525$1S&e0X)
        (boolean=? . g$5587$1S&e0X)
        (atan . g$6216$1S&e0X)
        (assertion-violation . g$13553$1S&e0X)
        (asin . g$6209$1S&e0X)
        (apply . g$13552$1S&e0X)
        (append . g$13551$1S&e0X)
        (angle . g$6196$1S&e0X)
        (acos . g$6212$1S&e0X)
        (abs . g$6219$1S&e0X)
        (/ . g$13550$1S&e0X)
        (* . g$13549$1S&e0X)
        (- . g$13548$1S&e0X)
        (+ . g$13547$1S&e0X)
        (>= . g$6193$1S&e0X)
        (> . g$6192$1S&e0X)
        (= . g$6189$1S&e0X)
        (<= . g$6191$1S&e0X)
        (< . g$6190$1S&e0X)
        (deserialize-port . g$13508$1S&e0X)
        (serialize-port . g$13507$1S&e0X)
        (enum-set? . g$8830$1S&e0X)
        (load/unload . g$13309$1S&e0X)
        (load/args . g$13308$1S&e0X)
        (printf . g$8939$1S&e0X)
        (fprintf . g$8940$1S&e0X)
        (format . g$8941$1S&e0X)
        (procedure-form . g$13506$1S&e0X)
        (procedure-environment . g$13505$1S&e0X)
        (procedure-name . g$13504$1S&e0X)
        (procedure-arity . g$13503$1S&e0X)
        (gc-collect . g$13502$1S&e0X)
        (typeof . g$13501$1S&e0X)
        (clr-type? . g$13500$1S&e0X)
        (get-clr-type . g$13499$1S&e0X)
        (vector-append . g$13497$1S&e0X)
        (vector-filter . g$13496$1S&e0X)
        (vector-reverse! . g$13495$1S&e0X)
        (vector-contains? . g$13494$1S&e0X)
        (vector-index-of . g$13493$1S&e0X)
        (vector-copy . g$13492$1S&e0X)
        (vector-binary-search . g$13491$1S&e0X)
        (string-ci-compare . g$13490$1S&e0X)
        (string-compare . g$13489$1S&e0X)
        (string-format . g$13488$1S&e0X)
        (trace-printer . g$13304$1S&e0X)
        (time-it . g$13486$1S&e0X)
        (make-parameter . g$8968$1S&e0X)
        (open-tcp-input/output-port . g$13483$1S&e0X)
        (hashtable-for-each . g$13482$1S&e0X)
        (hashtable-map . g$13481$1S&e0X)
        (environment-bindings . g$10261$1S&e0X)
        (environment-symbols . g$10264$1S&e0X)
        (interaction-environment-symbols . g$10260$1S&e0X)
        (optimization-level . g$13480$1S&e0X)
        (library-path . g$9590$1S&e0X)
        (make-compile-time-value . g$9969$1S&e0X)
        (expand->core . g$10270$1S&e0X)
        (expand . g$10268$1S&e0X)
        (emacs-mode? . g$13306$1S&e0X)
        (syntax-transpose . g$10207$1S&e0X)
        (convert->cps . g$9287$1S&e0X)
        (condition-stacktrace . g$13473$1S&e0X)
        (stacktrace-condition? . g$6652$1S&e0X)
        (make-stacktrace-condition . g$6650$1S&e0X)
        (condition-where . g$13472$1S&e0X)
        (where-condition? . g$6637$1S&e0X)
        (make-where-condition . g$6635$1S&e0X)
        (installed-libraries . g$9611$1S&e0X)
        (uninstall-library . g$9602$1S&e0X)
        (pretty-gensyms . g$9051$1S&e0X)
        (pretty-width . g$9048$1S&e0X)
        (pretty-print . g$9053$1S&e0X)
        (pointer+ . g$13471$1S&e0X)
        (&no-nans . g$13468$1S&e0X)
        (&no-infinities . g$13467$1S&e0X)
        (&i/o-encoding . g$13466$1S&e0X)
        (&i/o-decoding . g$13465$1S&e0X)
        (&i/o-port . g$13464$1S&e0X)
        (&i/o-file-does-not-exist . g$13463$1S&e0X)
        (&i/o-file-already-exists . g$13462$1S&e0X)
        (&i/o-file-is-read-only . g$13461$1S&e0X)
        (&i/o-file-protection . g$13460$1S&e0X)
        (&i/o-filename . g$13459$1S&e0X)
        (&i/o-invalid-position . g$13458$1S&e0X)
        (&i/o-write . g$13457$1S&e0X)
        (&i/o-read . g$13456$1S&e0X)
        (&i/o . g$13455$1S&e0X)
        (&non-continuable . g$13454$1S&e0X)
        (&undefined . g$13453$1S&e0X)
        (&syntax . g$13452$1S&e0X)
        (&lexical . g$13451$1S&e0X)
        (&implementation-restriction . g$13450$1S&e0X)
        (&who . g$13449$1S&e0X)
        (&irritants . g$13448$1S&e0X)
        (&assertion . g$13447$1S&e0X)
        (&violation . g$13446$1S&e0X)
        (&error . g$13445$1S&e0X)
        (&serious . g$13444$1S&e0X)
        (&warning . g$13443$1S&e0X)
        (&message . g$13442$1S&e0X)
        (&condition . g$13441$1S&e0X)
        (define-condition-type . g$13440$1S&e0X)
        (define-enumeration . g$13439$1S&e0X)
        (define-record-type . g$13438$1S&e0X)
        (parent-rtd . g$13437$1S&e0X)
        (nongenerative . g$13436$1S&e0X)
        (opaque . g$13435$1S&e0X)
        (sealed . g$13434$1S&e0X)
        (protocol . g$13433$1S&e0X)
        (parent . g$13432$1S&e0X)
        (immutable . g$13431$1S&e0X)
        (mutable . g$13430$1S&e0X)
        (fields . g$13429$1S&e0X)
        (error-handling-mode . g$13428$1S&e0X)
        (file-options . g$13427$1S&e0X)
        (buffer-mode . g$13426$1S&e0X)
        (eol-style . g$13425$1S&e0X)
        (guard . g$13424$1S&e0X)
        (trace-letrec-syntax . g$13423$1S&e0X)
        (trace-let-syntax . g$13422$1S&e0X)
        (trace-define-syntax . g$13421$1S&e0X)
        (trace-define . g$13420$1S&e0X)
        (trace-lambda . g$13419$1S&e0X)
        (unsyntax-splicing . g$13418$1S&e0X)
        (unsyntax . g$13417$1S&e0X)
        (unquote-splicing . g$13416$1S&e0X)
        (unquote . g$13415$1S&e0X)
        (_ . g$13414$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X)
        (... . g$13411$1S&e0X)
        (assert . g$13410$1S&e0X)
        (endianness . g$13409$1S&e0X)
        (delay . g$13408$1S&e0X)
        (time . g$13407$1S&e0X)
        (or . g$13406$1S&e0X)
        (and . g$13405$1S&e0X)
        (do . g$13404$1S&e0X)
        (cond . g$13403$1S&e0X)
        (let* . g$13402$1S&e0X)
        (let . g$13401$1S&e0X)
        (identifier-syntax . g$13400$1S&e0X)
        (with-syntax . g$13399$1S&e0X)
        (quasisyntax . g$13398$1S&e0X)
        (quasiquote . g$13397$1S&e0X)
        (syntax-rules . g$13396$1S&e0X)
        (include-into . g$13395$1S&e0X)
        (include . g$13394$1S&e0X)
        (let-values . g$13392$1S&e0X)
        (let*-values . g$13391$1S&e0X)
        (record-constructor-descriptor . g$13390$1S&e0X)
        (record-type-descriptor . g$13389$1S&e0X)
        (fluid-let-syntax . g$13388$1S&e0X)
        (case . g$13387$1S&e0X)
        (parameterize . g$13386$1S&e0X)
        (unless . g$13385$1S&e0X)
        (when . g$13384$1S&e0X)
        (if . g$13383$1S&e0X)
        (letrec* . g$13382$1S&e0X)
        (letrec . g$13381$1S&e0X)
        (case-lambda . g$13379$1S&e0X)
        (lambda . g$13378$1S&e0X)
        (syntax . g$13377$1S&e0X)
        (syntax-case . g$13376$1S&e0X)
        (quote . g$13375$1S&e0X)
        (letrec-syntax . g$13373$1S&e0X)
        (let-syntax . g$13372$1S&e0X)
        (set! . g$13371$1S&e0X)
        (export . g$13370$1S&e0X)
        (import . g$13369$1S&e0X)
        (library . g$13368$1S&e0X)
        (begin . g$13367$1S&e0X)
        (module . g$13366$1S&e0X)
        (define-syntax . g$13365$1S&e0X)
        (define . g$13364$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13754$1S&e0X
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13484$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13755$1S&e0X
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13751$1S&e0X)
        (annotation-source . g$13750$1S&e0X)
        (annotation-expression . g$13749$1S&e0X)
        (annotation? . g$13748$1S&e0X)
        (read-annotated . g$13747$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13756$1S&e0X
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13719$1S&e0X)
        (serialize-library . g$13718$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13757$1S&e0X
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13717$1S&e0X)
        (variable-transformer-procedure . g$9971$1S&e0X)
        (variable-transformer? . g$9970$1S&e0X)
        (eqv-hash . g$13510$1S&e0X)
        (reverse! . g$13509$1S&e0X)
        (make-promise . g$6932$1S&e0X)
        (format . g$8941$1S&e0X)
        (get-command-line . g$13498$1S&e0X)
        (make-traced-procedure . g$13487$1S&e0X)
        (make-traced-macro . g$8961$1S&e0X)
        (assertion-error . g$10283$1S&e0X)
        (library-locator . g$13485$1S&e0X)
        (get-library-paths . g$13484$1S&e0X)
        (library-path . g$9590$1S&e0X)
        (inexact=? . g$13479$1S&e0X)
        (bignum-sqrt-exact . g$13478$1S&e0X)
        (bignum-sqrt . g$13477$1S&e0X)
        (flonum->string . g$13476$1S&e0X)
        (inexact-compare . g$13475$1S&e0X)
        (exact-compare . g$13474$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13758$1S&e0X
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$13546$1S&e0X)
        ($bytevector-ref . g$13545$1S&e0X)
        ($fl>=? . g$13544$1S&e0X)
        ($fl>? . g$13543$1S&e0X)
        ($fl<=? . g$13542$1S&e0X)
        ($fl<? . g$13541$1S&e0X)
        ($fl- . g$13540$1S&e0X)
        ($fl/ . g$13539$1S&e0X)
        ($fl* . g$13538$1S&e0X)
        ($fl+ . g$13537$1S&e0X)
        ($fl=? . g$13536$1S&e0X)
        ($try . g$13535$1S&e0X)
        ($fxarithmetic-shift-right . g$13534$1S&e0X)
        ($fxarithmetic-shift-left . g$13533$1S&e0X)
        ($$fx- . g$13532$1S&e0X)
        ($$fx* . g$13531$1S&e0X)
        ($$fx+ . g$13530$1S&e0X)
        ($fxnot . g$13529$1S&e0X)
        ($fxxor . g$13528$1S&e0X)
        ($fxior . g$13527$1S&e0X)
        ($fxand . g$13526$1S&e0X)
        ($fx>=? . g$13525$1S&e0X)
        ($fx>? . g$13524$1S&e0X)
        ($fx<=? . g$13523$1S&e0X)
        ($fx<? . g$13522$1S&e0X)
        ($fx- . g$13521$1S&e0X)
        ($fxmod0 . g$13520$1S&e0X)
        ($fxdiv0 . g$13519$1S&e0X)
        ($fx* . g$13518$1S&e0X)
        ($fx+ . g$13517$1S&e0X)
        ($fx=? . g$13516$1S&e0X)
        ($vector-set! . g$13515$1S&e0X)
        ($vector-ref . g$13514$1S&e0X)
        ($cdr . g$13513$1S&e0X)
        ($car . g$13512$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13759$1S&e0X
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13511$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13760$1S&e0X
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$13741$1S&e0X)
        (ffi-callback-internal . g$13740$1S&e0X)
        (ffi-callout-internal . g$13739$1S&e0X)
        (define-clr-class-internal . g$13738$1S&e0X)
        (clr-field-set!-internal . g$13737$1S&e0X)
        (clr-field-get-internal . g$13736$1S&e0X)
        (clr-cast-internal . g$13735$1S&e0X)
        (clr-call-internal . g$13734$1S&e0X)
        (clr-new-internal . g$13733$1S&e0X)
        (clr-new-array-internal . g$13732$1S&e0X)
        (clr-is-internal . g$13731$1S&e0X)
        (clr-reference-internal . g$13730$1S&e0X)
        (clr-using-internal . g$13729$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13761$1S&e0X
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13416$1S&e0X)
        (unquote . g$13415$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X)
        (delay . g$13408$1S&e0X)
        (or . g$13406$1S&e0X)
        (and . g$13405$1S&e0X)
        (do . g$13404$1S&e0X)
        (cond . g$13403$1S&e0X)
        (let* . g$13402$1S&e0X)
        (let . g$13401$1S&e0X)
        (quasiquote . g$13397$1S&e0X)
        (syntax-rules . g$13396$1S&e0X)
        (case . g$13387$1S&e0X)
        (if . g$13383$1S&e0X)
        (letrec . g$13381$1S&e0X)
        (lambda . g$13378$1S&e0X)
        (quote . g$13375$1S&e0X)
        (letrec-syntax . g$13373$1S&e0X)
        (let-syntax . g$13372$1S&e0X)
        (set! . g$13371$1S&e0X)
        (begin . g$13367$1S&e0X)
        (define-syntax . g$13365$1S&e0X)
        (define . g$13364$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13762$1S&e0X
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13716$1S&e0X)
        (string-ci>? . g$6981$1S&e0X)
        (string-ci>=? . g$6983$1S&e0X)
        (string-ci=? . g$6979$1S&e0X)
        (string-ci<? . g$6980$1S&e0X)
        (string-ci<=? . g$6982$1S&e0X)
        (char-whitespace? . g$13711$1S&e0X)
        (char-upper-case? . g$13710$1S&e0X)
        (char-numeric? . g$13708$1S&e0X)
        (char-lower-case? . g$13707$1S&e0X)
        (char-upcase . g$13705$1S&e0X)
        (char-downcase . g$13702$1S&e0X)
        (char-ci>? . g$6991$1S&e0X)
        (char-ci>=? . g$6993$1S&e0X)
        (char-ci=? . g$6989$1S&e0X)
        (char-ci<? . g$6990$1S&e0X)
        (char-ci<=? . g$6992$1S&e0X)
        (char-alphabetic? . g$13701$1S&e0X)
        (call-with-output-file . g$8792$1S&e0X)
        (call-with-input-file . g$8791$1S&e0X)
        (write-char . g$8783$1S&e0X)
        (write . g$13673$1S&e0X)
        (with-output-to-file . g$8790$1S&e0X)
        (with-input-from-file . g$8789$1S&e0X)
        (read-char . g$8782$1S&e0X)
        (read . g$13672$1S&e0X)
        (peek-char . g$8781$1S&e0X)
        (open-output-file . g$13671$1S&e0X)
        (open-input-file . g$13670$1S&e0X)
        (newline . g$8793$1S&e0X)
        (display . g$13669$1S&e0X)
        (close-output-port . g$13668$1S&e0X)
        (close-input-port . g$13667$1S&e0X)
        (eof-object? . g$13666$1S&e0X)
        (current-error-port . g$13664$1S&e0X)
        (current-output-port . g$13663$1S&e0X)
        (current-input-port . g$13662$1S&e0X)
        (output-port? . g$13661$1S&e0X)
        (input-port? . g$13660$1S&e0X)
        (scheme-report-environment . g$10267$1S&e0X)
        (quotient . g$6929$1S&e0X)
        (null-environment . g$10266$1S&e0X)
        (remainder . g$6930$1S&e0X)
        (modulo . g$6931$1S&e0X)
        (inexact->exact . g$6926$1S&e0X)
        (force . g$6933$1S&e0X)
        (exact->inexact . g$6927$1S&e0X)
        (string-fill! . g$13607$1S&e0X)
        (string-set! . g$13606$1S&e0X)
        (set-cdr! . g$13605$1S&e0X)
        (set-car! . g$13604$1S&e0X)
        (memv . g$5177$1S&e0X)
        (memq . g$5176$1S&e0X)
        (member . g$5178$1S&e0X)
        (assv . g$5173$1S&e0X)
        (assq . g$5172$1S&e0X)
        (assoc . g$5174$1S&e0X)
        (eval . g$10269$1S&e0X)
        (zero? . g$6170$1S&e0X)
        (vector? . g$5522$1S&e0X)
        (vector-set! . g$5538$1S&e0X)
        (vector-ref . g$5537$1S&e0X)
        (vector-length . g$13589$1S&e0X)
        (vector-fill! . g$5539$1S&e0X)
        (vector->list . g$13588$1S&e0X)
        (vector . g$13587$1S&e0X)
        (values . g$13586$1S&e0X)
        (truncate . g$6222$1S&e0X)
        (tan . g$6214$1S&e0X)
        (symbol? . g$5524$1S&e0X)
        (symbol->string . g$13585$1S&e0X)
        (substring . g$13584$1S&e0X)
        (string? . g$13583$1S&e0X)
        (string>? . g$5583$1S&e0X)
        (string>=? . g$5585$1S&e0X)
        (string=? . g$5581$1S&e0X)
        (string<? . g$5582$1S&e0X)
        (string<=? . g$5584$1S&e0X)
        (string-ref . g$13582$1S&e0X)
        (string-length . g$13581$1S&e0X)
        (string-copy . g$13580$1S&e0X)
        (string-append . g$13579$1S&e0X)
        (string->symbol . g$13578$1S&e0X)
        (string->number . g$13577$1S&e0X)
        (string->list . g$13576$1S&e0X)
        (string . g$13575$1S&e0X)
        (sqrt . g$6224$1S&e0X)
        (sin . g$6208$1S&e0X)
        (round . g$6223$1S&e0X)
        (reverse . g$5541$1S&e0X)
        (real? . g$6164$1S&e0X)
        (real-part . g$6201$1S&e0X)
        (rationalize . g$5598$1S&e0X)
        (rational? . g$6165$1S&e0X)
        (procedure? . g$5526$1S&e0X)
        (positive? . g$6171$1S&e0X)
        (pair? . g$13574$1S&e0X)
        (odd? . g$5571$1S&e0X)
        (numerator . g$6199$1S&e0X)
        (number? . g$6157$1S&e0X)
        (number->string . g$6178$1S&e0X)
        (null? . g$13573$1S&e0X)
        (not . g$13572$1S&e0X)
        (negative? . g$6172$1S&e0X)
        (min . g$5573$1S&e0X)
        (max . g$5572$1S&e0X)
        (map . g$5184$1S&e0X)
        (make-vector . g$13571$1S&e0X)
        (make-string . g$13570$1S&e0X)
        (make-rectangular . g$6194$1S&e0X)
        (make-polar . g$6195$1S&e0X)
        (magnitude . g$6197$1S&e0X)
        (log . g$6217$1S&e0X)
        (list? . g$13569$1S&e0X)
        (list-tail . g$5164$1S&e0X)
        (list-ref . g$5165$1S&e0X)
        (list->vector . g$5535$1S&e0X)
        (list->string . g$5536$1S&e0X)
        (list . g$13568$1S&e0X)
        (length . g$13567$1S&e0X)
        (lcm . g$5575$1S&e0X)
        (integer? . g$6166$1S&e0X)
        (integer->char . g$13566$1S&e0X)
        (inexact? . g$6162$1S&e0X)
        (imag-part . g$6202$1S&e0X)
        (gcd . g$5574$1S&e0X)
        (for-each . g$5185$1S&e0X)
        (floor . g$6220$1S&e0X)
        (expt . g$6226$1S&e0X)
        (exp . g$6207$1S&e0X)
        (exact? . g$6161$1S&e0X)
        (even? . g$5570$1S&e0X)
        (eqv? . g$13564$1S&e0X)
        (equal? . g$13563$1S&e0X)
        (eq? . g$13562$1S&e0X)
        (dynamic-wind . g$13561$1S&e0X)
        (denominator . g$6200$1S&e0X)
        (cos . g$6211$1S&e0X)
        (cons . g$13560$1S&e0X)
        (complex? . g$6163$1S&e0X)
        (char? . g$5521$1S&e0X)
        (char>? . g$5595$1S&e0X)
        (char>=? . g$5597$1S&e0X)
        (char=? . g$5593$1S&e0X)
        (char<? . g$5594$1S&e0X)
        (char<=? . g$5596$1S&e0X)
        (char->integer . g$13559$1S&e0X)
        (ceiling . g$6221$1S&e0X)
        (call-with-values . g$13558$1S&e0X)
        (call-with-current-continuation . g$13556$1S&e0X)
        (cddddr . g$5569$1S&e0X)
        (cdddar . g$5568$1S&e0X)
        (cddadr . g$5567$1S&e0X)
        (cddaar . g$5566$1S&e0X)
        (cdaddr . g$5565$1S&e0X)
        (cdadar . g$5564$1S&e0X)
        (cdaadr . g$5563$1S&e0X)
        (cdaaar . g$5562$1S&e0X)
        (cadddr . g$5561$1S&e0X)
        (caddar . g$5560$1S&e0X)
        (cadadr . g$5559$1S&e0X)
        (cadaar . g$5558$1S&e0X)
        (caaddr . g$5557$1S&e0X)
        (caadar . g$5556$1S&e0X)
        (caaadr . g$5555$1S&e0X)
        (caaaar . g$5554$1S&e0X)
        (cdddr . g$5553$1S&e0X)
        (cddar . g$5552$1S&e0X)
        (cdadr . g$5551$1S&e0X)
        (cdaar . g$5550$1S&e0X)
        (caddr . g$5549$1S&e0X)
        (cadar . g$5548$1S&e0X)
        (caadr . g$5547$1S&e0X)
        (caaar . g$5546$1S&e0X)
        (cddr . g$5545$1S&e0X)
        (cdar . g$5544$1S&e0X)
        (cadr . g$5543$1S&e0X)
        (caar . g$5542$1S&e0X)
        (cdr . g$13555$1S&e0X)
        (car . g$13554$1S&e0X)
        (boolean? . g$5525$1S&e0X)
        (atan . g$6216$1S&e0X)
        (asin . g$6209$1S&e0X)
        (apply . g$13552$1S&e0X)
        (append . g$13551$1S&e0X)
        (angle . g$6196$1S&e0X)
        (acos . g$6212$1S&e0X)
        (abs . g$6219$1S&e0X)
        (/ . g$13550$1S&e0X)
        (* . g$13549$1S&e0X)
        (- . g$13548$1S&e0X)
        (+ . g$13547$1S&e0X)
        (>= . g$6193$1S&e0X)
        (> . g$6192$1S&e0X)
        (= . g$6189$1S&e0X)
        (<= . g$6191$1S&e0X)
        (< . g$6190$1S&e0X)
        (unquote-splicing . g$13416$1S&e0X)
        (unquote . g$13415$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X)
        (... . g$13411$1S&e0X)
        (delay . g$13408$1S&e0X)
        (or . g$13406$1S&e0X)
        (and . g$13405$1S&e0X)
        (do . g$13404$1S&e0X)
        (cond . g$13403$1S&e0X)
        (let* . g$13402$1S&e0X)
        (let . g$13401$1S&e0X)
        (quasiquote . g$13397$1S&e0X)
        (syntax-rules . g$13396$1S&e0X)
        (case . g$13387$1S&e0X)
        (if . g$13383$1S&e0X)
        (letrec . g$13381$1S&e0X)
        (lambda . g$13378$1S&e0X)
        (quote . g$13375$1S&e0X)
        (letrec-syntax . g$13373$1S&e0X)
        (let-syntax . g$13372$1S&e0X)
        (set! . g$13371$1S&e0X)
        (begin . g$13367$1S&e0X)
        (define-syntax . g$13365$1S&e0X)
        (define . g$13364$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13763$1S&e0X
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13715$1S&e0X)
        (string-titlecase . g$13714$1S&e0X)
        (string-normalize-nfkd . g$6997$1S&e0X)
        (string-normalize-nfkc . g$6996$1S&e0X)
        (string-normalize-nfd . g$6995$1S&e0X)
        (string-normalize-nfc . g$6994$1S&e0X)
        (string-foldcase . g$13713$1S&e0X)
        (string-downcase . g$13712$1S&e0X)
        (string-ci>? . g$6981$1S&e0X)
        (string-ci>=? . g$6983$1S&e0X)
        (string-ci=? . g$6979$1S&e0X)
        (string-ci<? . g$6980$1S&e0X)
        (string-ci<=? . g$6982$1S&e0X)
        (char-whitespace? . g$13711$1S&e0X)
        (char-upper-case? . g$13710$1S&e0X)
        (char-title-case? . g$13709$1S&e0X)
        (char-numeric? . g$13708$1S&e0X)
        (char-lower-case? . g$13707$1S&e0X)
        (char-general-category . g$13706$1S&e0X)
        (char-upcase . g$13705$1S&e0X)
        (char-titlecase . g$13704$1S&e0X)
        (char-foldcase . g$13703$1S&e0X)
        (char-downcase . g$13702$1S&e0X)
        (char-ci>? . g$6991$1S&e0X)
        (char-ci>=? . g$6993$1S&e0X)
        (char-ci=? . g$6989$1S&e0X)
        (char-ci<? . g$6990$1S&e0X)
        (char-ci<=? . g$6992$1S&e0X)
        (char-alphabetic? . g$13701$1S&e0X)
        (make-variable-transformer . g$9968$1S&e0X)
        (identifier? . g$10288$1S&e0X)
        (generate-temporaries . g$10277$1S&e0X)
        (free-identifier=? . g$10278$1S&e0X)
        (syntax->datum . g$10290$1S&e0X)
        (datum->syntax . g$10289$1S&e0X)
        (bound-identifier=? . g$10279$1S&e0X)
        (record-type-descriptor? . g$13700$1S&e0X)
        (record-predicate . g$13699$1S&e0X)
        (record-mutator . g$13698$1S&e0X)
        (record-constructor . g$13697$1S&e0X)
        (record-accessor . g$13696$1S&e0X)
        (make-record-type-descriptor . g$13695$1S&e0X)
        (make-record-constructor-descriptor . g$13694$1S&e0X)
        (record? . g$13693$1S&e0X)
        (record-type-uid . g$13692$1S&e0X)
        (record-type-sealed? . g$13691$1S&e0X)
        (record-type-parent . g$13690$1S&e0X)
        (record-type-opaque? . g$13689$1S&e0X)
        (record-type-name . g$13688$1S&e0X)
        (record-type-generative? . g$13687$1S&e0X)
        (record-type-field-names . g$13686$1S&e0X)
        (record-rtd . g$13685$1S&e0X)
        (record-field-mutable? . g$13684$1S&e0X)
        (delete-file . g$5835$1S&e0X)
        (file-exists? . g$5834$1S&e0X)
        (vector-sort! . g$13683$1S&e0X)
        (vector-sort . g$13682$1S&e0X)
        (list-sort . g$6950$1S&e0X)
        (symbol-hash . g$5805$1S&e0X)
        (string-ci-hash . g$5804$1S&e0X)
        (string-hash . g$5803$1S&e0X)
        (equal-hash . g$13681$1S&e0X)
        (hashtable-equivalence-function . g$13680$1S&e0X)
        (make-hashtable . g$13679$1S&e0X)
        (hashtable-hash-function . g$13678$1S&e0X)
        (make-eqv-hashtable . g$5795$1S&e0X)
        (make-eq-hashtable . g$5794$1S&e0X)
        (hashtable? . g$5793$1S&e0X)
        (hashtable-update! . g$5801$1S&e0X)
        (hashtable-size . g$5796$1S&e0X)
        (hashtable-set! . g$5798$1S&e0X)
        (hashtable-ref . g$5797$1S&e0X)
        (hashtable-mutable? . g$13677$1S&e0X)
        (hashtable-keys . g$13676$1S&e0X)
        (hashtable-entries . g$13675$1S&e0X)
        (hashtable-delete! . g$5799$1S&e0X)
        (hashtable-copy . g$13674$1S&e0X)
        (hashtable-contains? . g$5800$1S&e0X)
        (hashtable-clear! . g$5802$1S&e0X)
        (call-with-output-file . g$8792$1S&e0X)
        (call-with-input-file . g$8791$1S&e0X)
        (write-char . g$8783$1S&e0X)
        (write . g$13673$1S&e0X)
        (with-output-to-file . g$8790$1S&e0X)
        (with-input-from-file . g$8789$1S&e0X)
        (read-char . g$8782$1S&e0X)
        (read . g$13672$1S&e0X)
        (peek-char . g$8781$1S&e0X)
        (open-output-file . g$13671$1S&e0X)
        (open-input-file . g$13670$1S&e0X)
        (newline . g$8793$1S&e0X)
        (display . g$13669$1S&e0X)
        (close-output-port . g$13668$1S&e0X)
        (close-input-port . g$13667$1S&e0X)
        (eof-object? . g$13666$1S&e0X)
        (eof-object . g$13665$1S&e0X)
        (current-error-port . g$13664$1S&e0X)
        (current-output-port . g$13663$1S&e0X)
        (current-input-port . g$13662$1S&e0X)
        (output-port? . g$13661$1S&e0X)
        (input-port? . g$13660$1S&e0X)
        (utf-8-codec . g$13659$1S&e0X)
        (utf-16-codec . g$13658$1S&e0X)
        (transcoder-error-handling-mode . g$13657$1S&e0X)
        (transcoder-eol-style . g$13656$1S&e0X)
        (transcoder-codec . g$13655$1S&e0X)
        (transcoded-port . g$13654$1S&e0X)
        (textual-port? . g$13653$1S&e0X)
        (string->bytevector . g$13652$1S&e0X)
        (standard-output-port . g$8757$1S&e0X)
        (standard-input-port . g$8756$1S&e0X)
        (standard-error-port . g$8755$1S&e0X)
        (set-port-position! . g$13651$1S&e0X)
        (put-u8 . g$13650$1S&e0X)
        (put-string . g$13649$1S&e0X)
        (put-datum . g$8760$1S&e0X)
        (put-char . g$13648$1S&e0X)
        (put-bytevector . g$13647$1S&e0X)
        (port? . g$8765$1S&e0X)
        (port-transcoder . g$13646$1S&e0X)
        (port-position . g$13645$1S&e0X)
        (port-has-set-port-position!? . g$13644$1S&e0X)
        (port-has-port-position? . g$13643$1S&e0X)
        (port-eof? . g$13642$1S&e0X)
        (output-port-buffer-mode . g$13641$1S&e0X)
        (open-string-output-port . g$8764$1S&e0X)
        (open-string-input-port . g$13640$1S&e0X)
        (open-file-output-port . g$13639$1S&e0X)
        (open-file-input/output-port . g$13638$1S&e0X)
        (open-file-input-port . g$13637$1S&e0X)
        (open-bytevector-output-port . g$13636$1S&e0X)
        (open-bytevector-input-port . g$13635$1S&e0X)
        (native-transcoder . g$13634$1S&e0X)
        (native-eol-style . g$8758$1S&e0X)
        (make-transcoder . g$13633$1S&e0X)
        (latin-1-codec . g$13632$1S&e0X)
        (make-i/o-write-error . g$6760$1S&e0X)
        (make-i/o-read-error . g$6747$1S&e0X)
        (make-i/o-port-error . g$6855$1S&e0X)
        (make-i/o-invalid-position-error . g$6773$1S&e0X)
        (make-i/o-filename-error . g$6788$1S&e0X)
        (make-i/o-file-protection-error . g$6803$1S&e0X)
        (make-i/o-file-is-read-only-error . g$6816$1S&e0X)
        (make-i/o-file-does-not-exist-error . g$6842$1S&e0X)
        (make-i/o-file-already-exists-error . g$6829$1S&e0X)
        (make-i/o-error . g$6734$1S&e0X)
        (make-i/o-encoding-error . g$6883$1S&e0X)
        (make-i/o-decoding-error . g$6870$1S&e0X)
        (make-custom-textual-output-port . g$13631$1S&e0X)
        (make-custom-textual-input/output-port . g$13630$1S&e0X)
        (make-custom-textual-input-port . g$13629$1S&e0X)
        (make-custom-binary-output-port . g$13628$1S&e0X)
        (make-custom-binary-input/output-port . g$13627$1S&e0X)
        (make-custom-binary-input-port . g$13626$1S&e0X)
        (make-bytevector . g$5855$1S&e0X)
        (lookahead-u8 . g$13625$1S&e0X)
        (lookahead-char . g$13624$1S&e0X)
        (i/o-write-error? . g$6761$1S&e0X)
        (i/o-read-error? . g$6748$1S&e0X)
        (i/o-port-error? . g$6857$1S&e0X)
        (i/o-invalid-position-error? . g$6775$1S&e0X)
        (i/o-error-position . g$6776$1S&e0X)
        (i/o-filename-error? . g$6790$1S&e0X)
        (i/o-file-protection-error? . g$6804$1S&e0X)
        (i/o-file-is-read-only-error? . g$6817$1S&e0X)
        (i/o-file-does-not-exist-error? . g$6843$1S&e0X)
        (i/o-file-already-exists-error? . g$6830$1S&e0X)
        (i/o-error? . g$6735$1S&e0X)
        (i/o-error-port . g$6858$1S&e0X)
        (i/o-error-filename . g$6791$1S&e0X)
        (i/o-encoding-error? . g$6885$1S&e0X)
        (i/o-encoding-error-char . g$6886$1S&e0X)
        (i/o-decoding-error? . g$6871$1S&e0X)
        (get-u8 . g$13623$1S&e0X)
        (get-string-n! . g$13622$1S&e0X)
        (get-string-n . g$13621$1S&e0X)
        (get-string-all . g$13620$1S&e0X)
        (get-line . g$13619$1S&e0X)
        (get-datum . g$8761$1S&e0X)
        (get-char . g$13618$1S&e0X)
        (get-bytevector-some . g$13617$1S&e0X)
        (get-bytevector-n! . g$13616$1S&e0X)
        (get-bytevector-n . g$13615$1S&e0X)
        (get-bytevector-all . g$13614$1S&e0X)
        (flush-output-port . g$13613$1S&e0X)
        (close-port . g$13612$1S&e0X)
        (call-with-string-output-port . g$8766$1S&e0X)
        (call-with-port . g$8767$1S&e0X)
        (call-with-bytevector-output-port . g$13611$1S&e0X)
        (bytevector->string . g$13610$1S&e0X)
        (buffer-mode? . g$8759$1S&e0X)
        (binary-port? . g$13609$1S&e0X)
        (exit . g$13608$1S&e0X)
        (command-line . g$13305$1S&e0X)
        (remove . g$5189$1S&e0X)
        (remv . g$5190$1S&e0X)
        (remp . g$5170$1S&e0X)
        (remq . g$5191$1S&e0X)
        (partition . g$5169$1S&e0X)
        (memv . g$5177$1S&e0X)
        (memq . g$5176$1S&e0X)
        (memp . g$5179$1S&e0X)
        (member . g$5178$1S&e0X)
        (exists . g$5183$1S&e0X)
        (for-all . g$5182$1S&e0X)
        (fold-right . g$5188$1S&e0X)
        (fold-left . g$5187$1S&e0X)
        (find . g$5168$1S&e0X)
        (filter . g$5171$1S&e0X)
        (cons* . g$5186$1S&e0X)
        (assv . g$5173$1S&e0X)
        (assq . g$5172$1S&e0X)
        (assp . g$5175$1S&e0X)
        (assoc . g$5174$1S&e0X)
        (with-exception-handler . g$13603$1S&e0X)
        (raise-continuable . g$13602$1S&e0X)
        (raise . g$13601$1S&e0X)
        (make-enumeration . g$8853$1S&e0X)
        (enum-set=? . g$8860$1S&e0X)
        (enum-set-universe . g$8854$1S&e0X)
        (enum-set-union . g$8861$1S&e0X)
        (enum-set-subset? . g$8859$1S&e0X)
        (enum-set-projection . g$8865$1S&e0X)
        (enum-set-member? . g$8858$1S&e0X)
        (enum-set-intersection . g$8862$1S&e0X)
        (enum-set-indexer . g$8855$1S&e0X)
        (enum-set-difference . g$8863$1S&e0X)
        (enum-set-constructor . g$8856$1S&e0X)
        (enum-set-complement . g$8864$1S&e0X)
        (enum-set->list . g$8857$1S&e0X)
        (who-condition? . g$6622$1S&e0X)
        (warning? . g$6541$1S&e0X)
        (violation? . g$6580$1S&e0X)
        (undefined-violation? . g$6722$1S&e0X)
        (syntax-violation? . g$6707$1S&e0X)
        (syntax-violation-subform . g$6709$1S&e0X)
        (syntax-violation-form . g$6708$1S&e0X)
        (syntax-violation . g$10287$1S&e0X)
        (simple-conditions . g$13600$1S&e0X)
        (serious-condition? . g$6554$1S&e0X)
        (non-continuable-violation? . g$6666$1S&e0X)
        (message-condition? . g$6527$1S&e0X)
        (make-who-condition . g$6620$1S&e0X)
        (make-warning . g$6540$1S&e0X)
        (make-violation . g$6579$1S&e0X)
        (make-undefined-violation . g$6721$1S&e0X)
        (make-syntax-violation . g$6704$1S&e0X)
        (make-serious-condition . g$6553$1S&e0X)
        (make-non-continuable-violation . g$6665$1S&e0X)
        (make-message-condition . g$6525$1S&e0X)
        (make-lexical-violation . g$6691$1S&e0X)
        (make-irritants-condition . g$6605$1S&e0X)
        (make-implementation-restriction-violation . g$6678$1S&e0X)
        (make-error . g$6566$1S&e0X)
        (make-assertion-violation . g$6592$1S&e0X)
        (lexical-violation? . g$6692$1S&e0X)
        (irritants-condition? . g$6607$1S&e0X)
        (implementation-restriction-violation? . g$6679$1S&e0X)
        (error? . g$6567$1S&e0X)
        (condition-who . g$6623$1S&e0X)
        (condition-predicate . g$13599$1S&e0X)
        (condition-message . g$6528$1S&e0X)
        (condition-irritants . g$6608$1S&e0X)
        (condition-accessor . g$13598$1S&e0X)
        (condition . g$13597$1S&e0X)
        (assertion-violation? . g$6593$1S&e0X)
        (condition? . g$13596$1S&e0X)
        (utf32->string . g$5873$1S&e0X)
        (utf16->string . g$5872$1S&e0X)
        (utf8->string . g$5870$1S&e0X)
        (uint-list->bytevector . g$5874$1S&e0X)
        (u8-list->bytevector . g$5866$1S&e0X)
        (string->utf8 . g$5867$1S&e0X)
        (string->utf32 . g$5869$1S&e0X)
        (string->utf16 . g$5868$1S&e0X)
        (sint-list->bytevector . g$5875$1S&e0X)
        (native-endianness . g$5841$1S&e0X)
        (bytevector? . g$5523$1S&e0X)
        (bytevector=? . g$5857$1S&e0X)
        (bytevector-uint-set! . g$13595$1S&e0X)
        (bytevector-uint-ref . g$13594$1S&e0X)
        (bytevector-u8-set! . g$5862$1S&e0X)
        (bytevector-u8-ref . g$5861$1S&e0X)
        (bytevector-u64-set! . g$5903$1S&e0X)
        (bytevector-u64-ref . g$5899$1S&e0X)
        (bytevector-u64-native-set! . g$5905$1S&e0X)
        (bytevector-u64-native-ref . g$5901$1S&e0X)
        (bytevector-u32-set! . g$5895$1S&e0X)
        (bytevector-u32-ref . g$5891$1S&e0X)
        (bytevector-u32-native-set! . g$5897$1S&e0X)
        (bytevector-u32-native-ref . g$5893$1S&e0X)
        (bytevector-u16-set! . g$5887$1S&e0X)
        (bytevector-u16-ref . g$5883$1S&e0X)
        (bytevector-u16-native-set! . g$5889$1S&e0X)
        (bytevector-u16-native-ref . g$5885$1S&e0X)
        (bytevector-sint-set! . g$13593$1S&e0X)
        (bytevector-sint-ref . g$13592$1S&e0X)
        (bytevector-s8-set! . g$5864$1S&e0X)
        (bytevector-s8-ref . g$5863$1S&e0X)
        (bytevector-s64-set! . g$5904$1S&e0X)
        (bytevector-s64-ref . g$5900$1S&e0X)
        (bytevector-s64-native-set! . g$5906$1S&e0X)
        (bytevector-s64-native-ref . g$5902$1S&e0X)
        (bytevector-s32-set! . g$5896$1S&e0X)
        (bytevector-s32-ref . g$5892$1S&e0X)
        (bytevector-s32-native-set! . g$5898$1S&e0X)
        (bytevector-s32-native-ref . g$5894$1S&e0X)
        (bytevector-s16-set! . g$5888$1S&e0X)
        (bytevector-s16-ref . g$5884$1S&e0X)
        (bytevector-s16-native-set! . g$5890$1S&e0X)
        (bytevector-s16-native-ref . g$5886$1S&e0X)
        (bytevector-length . g$5856$1S&e0X)
        (bytevector-ieee-single-set! . g$5881$1S&e0X)
        (bytevector-ieee-single-ref . g$5879$1S&e0X)
        (bytevector-ieee-single-native-set! . g$5909$1S&e0X)
        (bytevector-ieee-single-native-ref . g$5907$1S&e0X)
        (bytevector-ieee-double-set! . g$5882$1S&e0X)
        (bytevector-ieee-double-ref . g$5880$1S&e0X)
        (bytevector-ieee-double-native-set! . g$5910$1S&e0X)
        (bytevector-ieee-double-native-ref . g$5908$1S&e0X)
        (bytevector-fill! . g$5858$1S&e0X)
        (bytevector-copy! . g$5859$1S&e0X)
        (bytevector-copy . g$5860$1S&e0X)
        (bytevector->uint-list . g$5876$1S&e0X)
        (bytevector->u8-list . g$5865$1S&e0X)
        (bytevector->sint-list . g$5877$1S&e0X)
        (no-nans-violation? . g$6912$1S&e0X)
        (no-infinities-violation? . g$6899$1S&e0X)
        (make-no-nans-violation . g$6911$1S&e0X)
        (make-no-infinities-violation . g$6898$1S&e0X)
        (real->flonum . g$6155$1S&e0X)
        (flzero? . g$8197$1S&e0X)
        (fltruncate . g$8192$1S&e0X)
        (fltan . g$8178$1S&e0X)
        (flsqrt . g$8183$1S&e0X)
        (flsin . g$8176$1S&e0X)
        (flround . g$8193$1S&e0X)
        (flpositive? . g$8195$1S&e0X)
        (flonum? . g$5528$1S&e0X)
        (flodd? . g$8199$1S&e0X)
        (flnumerator . g$8142$1S&e0X)
        (flnegative? . g$8196$1S&e0X)
        (flnan? . g$8175$1S&e0X)
        (flmod0 . g$8160$1S&e0X)
        (flmod . g$8159$1S&e0X)
        (flmin . g$8201$1S&e0X)
        (flmax . g$8200$1S&e0X)
        (fllog . g$8182$1S&e0X)
        (flinteger? . g$8168$1S&e0X)
        (flinfinite? . g$8174$1S&e0X)
        (flfloor . g$8191$1S&e0X)
        (flfinite? . g$8169$1S&e0X)
        (flexpt . g$8185$1S&e0X)
        (flexp . g$8184$1S&e0X)
        (fleven? . g$8198$1S&e0X)
        (fldiv0-and-mod0 . g$8167$1S&e0X)
        (fldiv0 . g$8154$1S&e0X)
        (fldiv-and-mod . g$8161$1S&e0X)
        (fldiv . g$8166$1S&e0X)
        (fldenominator . g$8141$1S&e0X)
        (flcos . g$8177$1S&e0X)
        (flceiling . g$8186$1S&e0X)
        (flatan . g$8181$1S&e0X)
        (flasin . g$8179$1S&e0X)
        (flacos . g$8180$1S&e0X)
        (flabs . g$8194$1S&e0X)
        (fl>? . g$8148$1S&e0X)
        (fl>=? . g$8149$1S&e0X)
        (fl=? . g$8145$1S&e0X)
        (fl<? . g$8146$1S&e0X)
        (fl<=? . g$8147$1S&e0X)
        (fl/ . g$8144$1S&e0X)
        (fl- . g$8143$1S&e0X)
        (fl+ . g$8139$1S&e0X)
        (fl* . g$8140$1S&e0X)
        (fixnum->flonum . g$6156$1S&e0X)
        (fxzero? . g$7239$1S&e0X)
        (fxxor . g$7202$1S&e0X)
        (fxrotate-bit-field . g$7277$1S&e0X)
        (fxreverse-bit-field . g$7278$1S&e0X)
        (fxpositive? . g$7229$1S&e0X)
        (fxodd? . g$7249$1S&e0X)
        (fxnot . g$7183$1S&e0X)
        (fxnegative? . g$7234$1S&e0X)
        (fxmod0 . g$7213$1S&e0X)
        (fxmod . g$7212$1S&e0X)
        (fxmin . g$7251$1S&e0X)
        (fxmax . g$7250$1S&e0X)
        (fxlength . g$7180$1S&e0X)
        (fxior . g$7201$1S&e0X)
        (fxif . g$7259$1S&e0X)
        (fxfirst-bit-set . g$7181$1S&e0X)
        (fxeven? . g$7244$1S&e0X)
        (fxdiv0-and-mod0 . g$7224$1S&e0X)
        (fxdiv0 . g$7219$1S&e0X)
        (fxdiv-and-mod . g$7214$1S&e0X)
        (fxdiv . g$7207$1S&e0X)
        (fxcopy-bit-field . g$7274$1S&e0X)
        (fxcopy-bit . g$7264$1S&e0X)
        (fxbit-set? . g$7182$1S&e0X)
        (fxbit-field . g$7269$1S&e0X)
        (fxbit-count . g$7175$1S&e0X)
        (fxarithmetic-shift-right . g$7276$1S&e0X)
        (fxarithmetic-shift-left . g$7275$1S&e0X)
        (fxarithmetic-shift . g$7170$1S&e0X)
        (fxand . g$7200$1S&e0X)
        (fx>? . g$7192$1S&e0X)
        (fx>=? . g$7193$1S&e0X)
        (fx=? . g$7189$1S&e0X)
        (fx<? . g$7190$1S&e0X)
        (fx<=? . g$7191$1S&e0X)
        (fx-/carry . g$7253$1S&e0X)
        (fx- . g$7164$1S&e0X)
        (fx+/carry . g$7254$1S&e0X)
        (fx+ . g$7162$1S&e0X)
        (fx*/carry . g$7252$1S&e0X)
        (fx* . g$7163$1S&e0X)
        (greatest-fixnum . g$7133$1S&e0X)
        (least-fixnum . g$7134$1S&e0X)
        (fixnum-width . g$5529$1S&e0X)
        (fixnum? . g$5527$1S&e0X)
        (bitwise-rotate-bit-field . g$7071$1S&e0X)
        (bitwise-reverse-bit-field . g$13591$1S&e0X)
        (bitwise-length . g$7062$1S&e0X)
        (bitwise-if . g$7065$1S&e0X)
        (bitwise-first-bit-set . g$7063$1S&e0X)
        (bitwise-copy-bit-field . g$7068$1S&e0X)
        (bitwise-copy-bit . g$7066$1S&e0X)
        (bitwise-bit-set? . g$7064$1S&e0X)
        (bitwise-bit-field . g$7067$1S&e0X)
        (bitwise-bit-count . g$7061$1S&e0X)
        (bitwise-xor . g$7060$1S&e0X)
        (bitwise-ior . g$7059$1S&e0X)
        (bitwise-and . g$7058$1S&e0X)
        (bitwise-not . g$7057$1S&e0X)
        (bitwise-arithmetic-shift-right . g$7070$1S&e0X)
        (bitwise-arithmetic-shift-left . g$7069$1S&e0X)
        (bitwise-arithmetic-shift . g$13590$1S&e0X)
        (zero? . g$6170$1S&e0X)
        (vector? . g$5522$1S&e0X)
        (vector-set! . g$5538$1S&e0X)
        (vector-ref . g$5537$1S&e0X)
        (vector-map . g$5601$1S&e0X)
        (vector-length . g$13589$1S&e0X)
        (vector-for-each . g$5602$1S&e0X)
        (vector-fill! . g$5539$1S&e0X)
        (vector->list . g$13588$1S&e0X)
        (vector . g$13587$1S&e0X)
        (values . g$13586$1S&e0X)
        (truncate . g$6222$1S&e0X)
        (tan . g$6214$1S&e0X)
        (symbol? . g$5524$1S&e0X)
        (symbol=? . g$5586$1S&e0X)
        (symbol->string . g$13585$1S&e0X)
        (substring . g$13584$1S&e0X)
        (string? . g$13583$1S&e0X)
        (string>? . g$5583$1S&e0X)
        (string>=? . g$5585$1S&e0X)
        (string=? . g$5581$1S&e0X)
        (string<? . g$5582$1S&e0X)
        (string<=? . g$5584$1S&e0X)
        (string-ref . g$13582$1S&e0X)
        (string-length . g$13581$1S&e0X)
        (string-for-each . g$5603$1S&e0X)
        (string-copy . g$13580$1S&e0X)
        (string-append . g$13579$1S&e0X)
        (string->symbol . g$13578$1S&e0X)
        (string->number . g$13577$1S&e0X)
        (string->list . g$13576$1S&e0X)
        (string . g$13575$1S&e0X)
        (sqrt . g$6224$1S&e0X)
        (sin . g$6208$1S&e0X)
        (round . g$6223$1S&e0X)
        (reverse . g$5541$1S&e0X)
        (real? . g$6164$1S&e0X)
        (real-valued? . g$6167$1S&e0X)
        (real-part . g$6201$1S&e0X)
        (rationalize . g$5598$1S&e0X)
        (rational? . g$6165$1S&e0X)
        (rational-valued? . g$6168$1S&e0X)
        (procedure? . g$5526$1S&e0X)
        (positive? . g$6171$1S&e0X)
        (pair? . g$13574$1S&e0X)
        (odd? . g$5571$1S&e0X)
        (numerator . g$6199$1S&e0X)
        (number? . g$6157$1S&e0X)
        (number->string . g$6178$1S&e0X)
        (null? . g$13573$1S&e0X)
        (not . g$13572$1S&e0X)
        (negative? . g$6172$1S&e0X)
        (nan? . g$6158$1S&e0X)
        (min . g$5573$1S&e0X)
        (max . g$5572$1S&e0X)
        (map . g$5184$1S&e0X)
        (make-vector . g$13571$1S&e0X)
        (make-string . g$13570$1S&e0X)
        (make-rectangular . g$6194$1S&e0X)
        (make-polar . g$6195$1S&e0X)
        (magnitude . g$6197$1S&e0X)
        (log . g$6217$1S&e0X)
        (list? . g$13569$1S&e0X)
        (list-tail . g$5164$1S&e0X)
        (list-ref . g$5165$1S&e0X)
        (list->vector . g$5535$1S&e0X)
        (list->string . g$5536$1S&e0X)
        (list . g$13568$1S&e0X)
        (length . g$13567$1S&e0X)
        (lcm . g$5575$1S&e0X)
        (integer? . g$6166$1S&e0X)
        (integer-valued? . g$6169$1S&e0X)
        (integer->char . g$13566$1S&e0X)
        (infinite? . g$6160$1S&e0X)
        (inexact? . g$6162$1S&e0X)
        (inexact . g$6173$1S&e0X)
        (imag-part . g$6202$1S&e0X)
        (gcd . g$5574$1S&e0X)
        (for-each . g$5185$1S&e0X)
        (floor . g$6220$1S&e0X)
        (finite? . g$6159$1S&e0X)
        (expt . g$6226$1S&e0X)
        (exp . g$6207$1S&e0X)
        (exact? . g$6161$1S&e0X)
        (exact-integer-sqrt . g$6225$1S&e0X)
        (exact . g$6174$1S&e0X)
        (even? . g$5570$1S&e0X)
        (error . g$13565$1S&e0X)
        (eqv? . g$13564$1S&e0X)
        (equal? . g$13563$1S&e0X)
        (eq? . g$13562$1S&e0X)
        (dynamic-wind . g$13561$1S&e0X)
        (div0-and-mod0 . g$5534$1S&e0X)
        (mod0 . g$5532$1S&e0X)
        (div0 . g$5530$1S&e0X)
        (div-and-mod . g$5533$1S&e0X)
        (mod . g$5531$1S&e0X)
        (div . g$6218$1S&e0X)
        (denominator . g$6200$1S&e0X)
        (cos . g$6211$1S&e0X)
        (cons . g$13560$1S&e0X)
        (complex? . g$6163$1S&e0X)
        (char? . g$5521$1S&e0X)
        (char>? . g$5595$1S&e0X)
        (char>=? . g$5597$1S&e0X)
        (char=? . g$5593$1S&e0X)
        (char<? . g$5594$1S&e0X)
        (char<=? . g$5596$1S&e0X)
        (char->integer . g$13559$1S&e0X)
        (ceiling . g$6221$1S&e0X)
        (call-with-values . g$13558$1S&e0X)
        (call/cc . g$13557$1S&e0X)
        (call-with-current-continuation . g$13556$1S&e0X)
        (cddddr . g$5569$1S&e0X)
        (cdddar . g$5568$1S&e0X)
        (cddadr . g$5567$1S&e0X)
        (cddaar . g$5566$1S&e0X)
        (cdaddr . g$5565$1S&e0X)
        (cdadar . g$5564$1S&e0X)
        (cdaadr . g$5563$1S&e0X)
        (cdaaar . g$5562$1S&e0X)
        (cadddr . g$5561$1S&e0X)
        (caddar . g$5560$1S&e0X)
        (cadadr . g$5559$1S&e0X)
        (cadaar . g$5558$1S&e0X)
        (caaddr . g$5557$1S&e0X)
        (caadar . g$5556$1S&e0X)
        (caaadr . g$5555$1S&e0X)
        (caaaar . g$5554$1S&e0X)
        (cdddr . g$5553$1S&e0X)
        (cddar . g$5552$1S&e0X)
        (cdadr . g$5551$1S&e0X)
        (cdaar . g$5550$1S&e0X)
        (caddr . g$5549$1S&e0X)
        (cadar . g$5548$1S&e0X)
        (caadr . g$5547$1S&e0X)
        (caaar . g$5546$1S&e0X)
        (cddr . g$5545$1S&e0X)
        (cdar . g$5544$1S&e0X)
        (cadr . g$5543$1S&e0X)
        (caar . g$5542$1S&e0X)
        (cdr . g$13555$1S&e0X)
        (car . g$13554$1S&e0X)
        (boolean? . g$5525$1S&e0X)
        (boolean=? . g$5587$1S&e0X)
        (atan . g$6216$1S&e0X)
        (assertion-violation . g$13553$1S&e0X)
        (asin . g$6209$1S&e0X)
        (apply . g$13552$1S&e0X)
        (append . g$13551$1S&e0X)
        (angle . g$6196$1S&e0X)
        (acos . g$6212$1S&e0X)
        (abs . g$6219$1S&e0X)
        (/ . g$13550$1S&e0X)
        (* . g$13549$1S&e0X)
        (- . g$13548$1S&e0X)
        (+ . g$13547$1S&e0X)
        (>= . g$6193$1S&e0X)
        (> . g$6192$1S&e0X)
        (= . g$6189$1S&e0X)
        (<= . g$6191$1S&e0X)
        (< . g$6190$1S&e0X)
        (&no-nans . g$13468$1S&e0X)
        (&no-infinities . g$13467$1S&e0X)
        (&i/o-encoding . g$13466$1S&e0X)
        (&i/o-decoding . g$13465$1S&e0X)
        (&i/o-port . g$13464$1S&e0X)
        (&i/o-file-does-not-exist . g$13463$1S&e0X)
        (&i/o-file-already-exists . g$13462$1S&e0X)
        (&i/o-file-is-read-only . g$13461$1S&e0X)
        (&i/o-file-protection . g$13460$1S&e0X)
        (&i/o-filename . g$13459$1S&e0X)
        (&i/o-invalid-position . g$13458$1S&e0X)
        (&i/o-write . g$13457$1S&e0X)
        (&i/o-read . g$13456$1S&e0X)
        (&i/o . g$13455$1S&e0X)
        (&non-continuable . g$13454$1S&e0X)
        (&undefined . g$13453$1S&e0X)
        (&syntax . g$13452$1S&e0X)
        (&lexical . g$13451$1S&e0X)
        (&implementation-restriction . g$13450$1S&e0X)
        (&who . g$13449$1S&e0X)
        (&irritants . g$13448$1S&e0X)
        (&assertion . g$13447$1S&e0X)
        (&violation . g$13446$1S&e0X)
        (&error . g$13445$1S&e0X)
        (&serious . g$13444$1S&e0X)
        (&warning . g$13443$1S&e0X)
        (&message . g$13442$1S&e0X)
        (&condition . g$13441$1S&e0X)
        (define-condition-type . g$13440$1S&e0X)
        (define-enumeration . g$13439$1S&e0X)
        (define-record-type . g$13438$1S&e0X)
        (parent-rtd . g$13437$1S&e0X)
        (nongenerative . g$13436$1S&e0X)
        (opaque . g$13435$1S&e0X)
        (sealed . g$13434$1S&e0X)
        (protocol . g$13433$1S&e0X)
        (parent . g$13432$1S&e0X)
        (immutable . g$13431$1S&e0X)
        (mutable . g$13430$1S&e0X)
        (fields . g$13429$1S&e0X)
        (error-handling-mode . g$13428$1S&e0X)
        (file-options . g$13427$1S&e0X)
        (buffer-mode . g$13426$1S&e0X)
        (eol-style . g$13425$1S&e0X)
        (guard . g$13424$1S&e0X)
        (unsyntax-splicing . g$13418$1S&e0X)
        (unsyntax . g$13417$1S&e0X)
        (unquote-splicing . g$13416$1S&e0X)
        (unquote . g$13415$1S&e0X)
        (_ . g$13414$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X)
        (... . g$13411$1S&e0X)
        (assert . g$13410$1S&e0X)
        (endianness . g$13409$1S&e0X)
        (or . g$13406$1S&e0X)
        (and . g$13405$1S&e0X)
        (do . g$13404$1S&e0X)
        (cond . g$13403$1S&e0X)
        (let* . g$13402$1S&e0X)
        (let . g$13401$1S&e0X)
        (identifier-syntax . g$13400$1S&e0X)
        (with-syntax . g$13399$1S&e0X)
        (quasisyntax . g$13398$1S&e0X)
        (quasiquote . g$13397$1S&e0X)
        (syntax-rules . g$13396$1S&e0X)
        (let-values . g$13392$1S&e0X)
        (let*-values . g$13391$1S&e0X)
        (record-constructor-descriptor . g$13390$1S&e0X)
        (record-type-descriptor . g$13389$1S&e0X)
        (case . g$13387$1S&e0X)
        (unless . g$13385$1S&e0X)
        (when . g$13384$1S&e0X)
        (if . g$13383$1S&e0X)
        (letrec* . g$13382$1S&e0X)
        (letrec . g$13381$1S&e0X)
        (case-lambda . g$13379$1S&e0X)
        (lambda . g$13378$1S&e0X)
        (syntax . g$13377$1S&e0X)
        (syntax-case . g$13376$1S&e0X)
        (quote . g$13375$1S&e0X)
        (letrec-syntax . g$13373$1S&e0X)
        (let-syntax . g$13372$1S&e0X)
        (set! . g$13371$1S&e0X)
        (begin . g$13367$1S&e0X)
        (define-syntax . g$13365$1S&e0X)
        (define . g$13364$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13764$1S&e0X
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$10267$1S&e0X)
        (quotient . g$6929$1S&e0X)
        (null-environment . g$10266$1S&e0X)
        (remainder . g$6930$1S&e0X)
        (modulo . g$6931$1S&e0X)
        (inexact->exact . g$6926$1S&e0X)
        (force . g$6933$1S&e0X)
        (exact->inexact . g$6927$1S&e0X)
        (delay . g$13408$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13765$1S&e0X
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13404$1S&e0X)
        (unless . g$13385$1S&e0X)
        (when . g$13384$1S&e0X)
        (case-lambda . g$13379$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13766$1S&e0X
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$10269$1S&e0X) (environment . g$10265$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13767$1S&e0X
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13605$1S&e0X) (set-car! . g$13604$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13768$1S&e0X
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13607$1S&e0X) (string-set! . g$13606$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13769$1S&e0X
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13608$1S&e0X) (command-line . g$13305$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13770$1S&e0X
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9968$1S&e0X)
        (identifier? . g$10288$1S&e0X)
        (generate-temporaries . g$10277$1S&e0X)
        (free-identifier=? . g$10278$1S&e0X)
        (syntax->datum . g$10290$1S&e0X)
        (datum->syntax . g$10289$1S&e0X)
        (bound-identifier=? . g$10279$1S&e0X)
        (syntax-violation . g$10287$1S&e0X)
        (unsyntax-splicing . g$13418$1S&e0X)
        (unsyntax . g$13417$1S&e0X)
        (_ . g$13414$1S&e0X)
        (... . g$13411$1S&e0X)
        (with-syntax . g$13399$1S&e0X)
        (quasisyntax . g$13398$1S&e0X)
        (syntax . g$13377$1S&e0X)
        (syntax-case . g$13376$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13771$1S&e0X
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5835$1S&e0X)
        (file-exists? . g$5834$1S&e0X)
        (make-i/o-write-error . g$6760$1S&e0X)
        (make-i/o-read-error . g$6747$1S&e0X)
        (make-i/o-port-error . g$6855$1S&e0X)
        (make-i/o-invalid-position-error . g$6773$1S&e0X)
        (make-i/o-filename-error . g$6788$1S&e0X)
        (make-i/o-file-protection-error . g$6803$1S&e0X)
        (make-i/o-file-is-read-only-error . g$6816$1S&e0X)
        (make-i/o-file-does-not-exist-error . g$6842$1S&e0X)
        (make-i/o-file-already-exists-error . g$6829$1S&e0X)
        (make-i/o-error . g$6734$1S&e0X)
        (i/o-write-error? . g$6761$1S&e0X)
        (i/o-read-error? . g$6748$1S&e0X)
        (i/o-port-error? . g$6857$1S&e0X)
        (i/o-invalid-position-error? . g$6775$1S&e0X)
        (i/o-error-position . g$6776$1S&e0X)
        (i/o-filename-error? . g$6790$1S&e0X)
        (i/o-file-protection-error? . g$6804$1S&e0X)
        (i/o-file-is-read-only-error? . g$6817$1S&e0X)
        (i/o-file-does-not-exist-error? . g$6843$1S&e0X)
        (i/o-file-already-exists-error? . g$6830$1S&e0X)
        (i/o-error? . g$6735$1S&e0X)
        (i/o-error-port . g$6858$1S&e0X)
        (i/o-error-filename . g$6791$1S&e0X)
        (&i/o-port . g$13464$1S&e0X)
        (&i/o-file-does-not-exist . g$13463$1S&e0X)
        (&i/o-file-already-exists . g$13462$1S&e0X)
        (&i/o-file-is-read-only . g$13461$1S&e0X)
        (&i/o-file-protection . g$13460$1S&e0X)
        (&i/o-filename . g$13459$1S&e0X)
        (&i/o-invalid-position . g$13458$1S&e0X)
        (&i/o-write . g$13457$1S&e0X)
        (&i/o-read . g$13456$1S&e0X)
        (&i/o . g$13455$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13772$1S&e0X
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13683$1S&e0X)
        (vector-sort . g$13682$1S&e0X)
        (list-sort . g$6950$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13773$1S&e0X
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6170$1S&e0X)
        (vector? . g$5522$1S&e0X)
        (vector-set! . g$5538$1S&e0X)
        (vector-ref . g$5537$1S&e0X)
        (vector-map . g$5601$1S&e0X)
        (vector-length . g$13589$1S&e0X)
        (vector-for-each . g$5602$1S&e0X)
        (vector-fill! . g$5539$1S&e0X)
        (vector->list . g$13588$1S&e0X)
        (vector . g$13587$1S&e0X)
        (values . g$13586$1S&e0X)
        (truncate . g$6222$1S&e0X)
        (tan . g$6214$1S&e0X)
        (symbol? . g$5524$1S&e0X)
        (symbol=? . g$5586$1S&e0X)
        (symbol->string . g$13585$1S&e0X)
        (substring . g$13584$1S&e0X)
        (string? . g$13583$1S&e0X)
        (string>? . g$5583$1S&e0X)
        (string>=? . g$5585$1S&e0X)
        (string=? . g$5581$1S&e0X)
        (string<? . g$5582$1S&e0X)
        (string<=? . g$5584$1S&e0X)
        (string-ref . g$13582$1S&e0X)
        (string-length . g$13581$1S&e0X)
        (string-for-each . g$5603$1S&e0X)
        (string-copy . g$13580$1S&e0X)
        (string-append . g$13579$1S&e0X)
        (string->symbol . g$13578$1S&e0X)
        (string->number . g$13577$1S&e0X)
        (string->list . g$13576$1S&e0X)
        (string . g$13575$1S&e0X)
        (sqrt . g$6224$1S&e0X)
        (sin . g$6208$1S&e0X)
        (round . g$6223$1S&e0X)
        (reverse . g$5541$1S&e0X)
        (real? . g$6164$1S&e0X)
        (real-valued? . g$6167$1S&e0X)
        (real-part . g$6201$1S&e0X)
        (rationalize . g$5598$1S&e0X)
        (rational? . g$6165$1S&e0X)
        (rational-valued? . g$6168$1S&e0X)
        (procedure? . g$5526$1S&e0X)
        (positive? . g$6171$1S&e0X)
        (pair? . g$13574$1S&e0X)
        (odd? . g$5571$1S&e0X)
        (numerator . g$6199$1S&e0X)
        (number? . g$6157$1S&e0X)
        (number->string . g$6178$1S&e0X)
        (null? . g$13573$1S&e0X)
        (not . g$13572$1S&e0X)
        (negative? . g$6172$1S&e0X)
        (nan? . g$6158$1S&e0X)
        (min . g$5573$1S&e0X)
        (max . g$5572$1S&e0X)
        (map . g$5184$1S&e0X)
        (make-vector . g$13571$1S&e0X)
        (make-string . g$13570$1S&e0X)
        (make-rectangular . g$6194$1S&e0X)
        (make-polar . g$6195$1S&e0X)
        (magnitude . g$6197$1S&e0X)
        (log . g$6217$1S&e0X)
        (list? . g$13569$1S&e0X)
        (list-tail . g$5164$1S&e0X)
        (list-ref . g$5165$1S&e0X)
        (list->vector . g$5535$1S&e0X)
        (list->string . g$5536$1S&e0X)
        (list . g$13568$1S&e0X)
        (length . g$13567$1S&e0X)
        (lcm . g$5575$1S&e0X)
        (integer? . g$6166$1S&e0X)
        (integer-valued? . g$6169$1S&e0X)
        (integer->char . g$13566$1S&e0X)
        (infinite? . g$6160$1S&e0X)
        (inexact? . g$6162$1S&e0X)
        (inexact . g$6173$1S&e0X)
        (imag-part . g$6202$1S&e0X)
        (gcd . g$5574$1S&e0X)
        (for-each . g$5185$1S&e0X)
        (floor . g$6220$1S&e0X)
        (finite? . g$6159$1S&e0X)
        (expt . g$6226$1S&e0X)
        (exp . g$6207$1S&e0X)
        (exact? . g$6161$1S&e0X)
        (exact-integer-sqrt . g$6225$1S&e0X)
        (exact . g$6174$1S&e0X)
        (even? . g$5570$1S&e0X)
        (error . g$13565$1S&e0X)
        (eqv? . g$13564$1S&e0X)
        (equal? . g$13563$1S&e0X)
        (eq? . g$13562$1S&e0X)
        (dynamic-wind . g$13561$1S&e0X)
        (div0-and-mod0 . g$5534$1S&e0X)
        (mod0 . g$5532$1S&e0X)
        (div0 . g$5530$1S&e0X)
        (div-and-mod . g$5533$1S&e0X)
        (mod . g$5531$1S&e0X)
        (div . g$6218$1S&e0X)
        (denominator . g$6200$1S&e0X)
        (cos . g$6211$1S&e0X)
        (cons . g$13560$1S&e0X)
        (complex? . g$6163$1S&e0X)
        (char? . g$5521$1S&e0X)
        (char>? . g$5595$1S&e0X)
        (char>=? . g$5597$1S&e0X)
        (char=? . g$5593$1S&e0X)
        (char<? . g$5594$1S&e0X)
        (char<=? . g$5596$1S&e0X)
        (char->integer . g$13559$1S&e0X)
        (ceiling . g$6221$1S&e0X)
        (call-with-values . g$13558$1S&e0X)
        (call/cc . g$13557$1S&e0X)
        (call-with-current-continuation . g$13556$1S&e0X)
        (cddddr . g$5569$1S&e0X)
        (cdddar . g$5568$1S&e0X)
        (cddadr . g$5567$1S&e0X)
        (cddaar . g$5566$1S&e0X)
        (cdaddr . g$5565$1S&e0X)
        (cdadar . g$5564$1S&e0X)
        (cdaadr . g$5563$1S&e0X)
        (cdaaar . g$5562$1S&e0X)
        (cadddr . g$5561$1S&e0X)
        (caddar . g$5560$1S&e0X)
        (cadadr . g$5559$1S&e0X)
        (cadaar . g$5558$1S&e0X)
        (caaddr . g$5557$1S&e0X)
        (caadar . g$5556$1S&e0X)
        (caaadr . g$5555$1S&e0X)
        (caaaar . g$5554$1S&e0X)
        (cdddr . g$5553$1S&e0X)
        (cddar . g$5552$1S&e0X)
        (cdadr . g$5551$1S&e0X)
        (cdaar . g$5550$1S&e0X)
        (caddr . g$5549$1S&e0X)
        (cadar . g$5548$1S&e0X)
        (caadr . g$5547$1S&e0X)
        (caaar . g$5546$1S&e0X)
        (cddr . g$5545$1S&e0X)
        (cdar . g$5544$1S&e0X)
        (cadr . g$5543$1S&e0X)
        (caar . g$5542$1S&e0X)
        (cdr . g$13555$1S&e0X)
        (car . g$13554$1S&e0X)
        (boolean? . g$5525$1S&e0X)
        (boolean=? . g$5587$1S&e0X)
        (atan . g$6216$1S&e0X)
        (assertion-violation . g$13553$1S&e0X)
        (asin . g$6209$1S&e0X)
        (apply . g$13552$1S&e0X)
        (append . g$13551$1S&e0X)
        (angle . g$6196$1S&e0X)
        (acos . g$6212$1S&e0X)
        (abs . g$6219$1S&e0X)
        (/ . g$13550$1S&e0X)
        (* . g$13549$1S&e0X)
        (- . g$13548$1S&e0X)
        (+ . g$13547$1S&e0X)
        (>= . g$6193$1S&e0X)
        (> . g$6192$1S&e0X)
        (= . g$6189$1S&e0X)
        (<= . g$6191$1S&e0X)
        (< . g$6190$1S&e0X)
        (unquote-splicing . g$13416$1S&e0X)
        (unquote . g$13415$1S&e0X)
        (_ . g$13414$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X)
        (... . g$13411$1S&e0X)
        (assert . g$13410$1S&e0X)
        (or . g$13406$1S&e0X)
        (and . g$13405$1S&e0X)
        (cond . g$13403$1S&e0X)
        (let* . g$13402$1S&e0X)
        (let . g$13401$1S&e0X)
        (identifier-syntax . g$13400$1S&e0X)
        (quasiquote . g$13397$1S&e0X)
        (syntax-rules . g$13396$1S&e0X)
        (let-values . g$13392$1S&e0X)
        (let*-values . g$13391$1S&e0X)
        (case . g$13387$1S&e0X)
        (if . g$13383$1S&e0X)
        (letrec* . g$13382$1S&e0X)
        (letrec . g$13381$1S&e0X)
        (lambda . g$13378$1S&e0X)
        (quote . g$13375$1S&e0X)
        (letrec-syntax . g$13373$1S&e0X)
        (let-syntax . g$13372$1S&e0X)
        (set! . g$13371$1S&e0X)
        (begin . g$13367$1S&e0X)
        (define-syntax . g$13365$1S&e0X)
        (define . g$13364$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13774$1S&e0X
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5189$1S&e0X)
        (remv . g$5190$1S&e0X)
        (remp . g$5170$1S&e0X)
        (remq . g$5191$1S&e0X)
        (partition . g$5169$1S&e0X)
        (memv . g$5177$1S&e0X)
        (memq . g$5176$1S&e0X)
        (memp . g$5179$1S&e0X)
        (member . g$5178$1S&e0X)
        (exists . g$5183$1S&e0X)
        (for-all . g$5182$1S&e0X)
        (fold-right . g$5188$1S&e0X)
        (fold-left . g$5187$1S&e0X)
        (find . g$5168$1S&e0X)
        (filter . g$5171$1S&e0X)
        (cons* . g$5186$1S&e0X)
        (assv . g$5173$1S&e0X)
        (assq . g$5172$1S&e0X)
        (assp . g$5175$1S&e0X)
        (assoc . g$5174$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13775$1S&e0X
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8792$1S&e0X)
        (call-with-input-file . g$8791$1S&e0X)
        (write-char . g$8783$1S&e0X)
        (write . g$13673$1S&e0X)
        (with-output-to-file . g$8790$1S&e0X)
        (with-input-from-file . g$8789$1S&e0X)
        (read-char . g$8782$1S&e0X)
        (read . g$13672$1S&e0X)
        (peek-char . g$8781$1S&e0X)
        (open-output-file . g$13671$1S&e0X)
        (open-input-file . g$13670$1S&e0X)
        (newline . g$8793$1S&e0X)
        (display . g$13669$1S&e0X)
        (close-output-port . g$13668$1S&e0X)
        (close-input-port . g$13667$1S&e0X)
        (eof-object? . g$13666$1S&e0X)
        (eof-object . g$13665$1S&e0X)
        (current-error-port . g$13664$1S&e0X)
        (current-output-port . g$13663$1S&e0X)
        (current-input-port . g$13662$1S&e0X)
        (output-port? . g$13661$1S&e0X)
        (input-port? . g$13660$1S&e0X)
        (make-i/o-write-error . g$6760$1S&e0X)
        (make-i/o-read-error . g$6747$1S&e0X)
        (make-i/o-port-error . g$6855$1S&e0X)
        (make-i/o-invalid-position-error . g$6773$1S&e0X)
        (make-i/o-filename-error . g$6788$1S&e0X)
        (make-i/o-file-protection-error . g$6803$1S&e0X)
        (make-i/o-file-is-read-only-error . g$6816$1S&e0X)
        (make-i/o-file-does-not-exist-error . g$6842$1S&e0X)
        (make-i/o-file-already-exists-error . g$6829$1S&e0X)
        (make-i/o-error . g$6734$1S&e0X)
        (i/o-write-error? . g$6761$1S&e0X)
        (i/o-read-error? . g$6748$1S&e0X)
        (i/o-port-error? . g$6857$1S&e0X)
        (i/o-invalid-position-error? . g$6775$1S&e0X)
        (i/o-error-position . g$6776$1S&e0X)
        (i/o-filename-error? . g$6790$1S&e0X)
        (i/o-file-protection-error? . g$6804$1S&e0X)
        (i/o-file-is-read-only-error? . g$6817$1S&e0X)
        (i/o-file-does-not-exist-error? . g$6843$1S&e0X)
        (i/o-file-already-exists-error? . g$6830$1S&e0X)
        (i/o-error? . g$6735$1S&e0X)
        (i/o-error-port . g$6858$1S&e0X)
        (i/o-error-filename . g$6791$1S&e0X)
        (&i/o-port . g$13464$1S&e0X)
        (&i/o-file-does-not-exist . g$13463$1S&e0X)
        (&i/o-file-already-exists . g$13462$1S&e0X)
        (&i/o-file-is-read-only . g$13461$1S&e0X)
        (&i/o-file-protection . g$13460$1S&e0X)
        (&i/o-filename . g$13459$1S&e0X)
        (&i/o-invalid-position . g$13458$1S&e0X)
        (&i/o-write . g$13457$1S&e0X)
        (&i/o-read . g$13456$1S&e0X)
        (&i/o . g$13455$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13776$1S&e0X
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$5855$1S&e0X)
        (utf32->string . g$5873$1S&e0X)
        (utf16->string . g$5872$1S&e0X)
        (utf8->string . g$5870$1S&e0X)
        (uint-list->bytevector . g$5874$1S&e0X)
        (u8-list->bytevector . g$5866$1S&e0X)
        (string->utf8 . g$5867$1S&e0X)
        (string->utf32 . g$5869$1S&e0X)
        (string->utf16 . g$5868$1S&e0X)
        (sint-list->bytevector . g$5875$1S&e0X)
        (native-endianness . g$5841$1S&e0X)
        (bytevector? . g$5523$1S&e0X)
        (bytevector=? . g$5857$1S&e0X)
        (bytevector-uint-set! . g$13595$1S&e0X)
        (bytevector-uint-ref . g$13594$1S&e0X)
        (bytevector-u8-set! . g$5862$1S&e0X)
        (bytevector-u8-ref . g$5861$1S&e0X)
        (bytevector-u64-set! . g$5903$1S&e0X)
        (bytevector-u64-ref . g$5899$1S&e0X)
        (bytevector-u64-native-set! . g$5905$1S&e0X)
        (bytevector-u64-native-ref . g$5901$1S&e0X)
        (bytevector-u32-set! . g$5895$1S&e0X)
        (bytevector-u32-ref . g$5891$1S&e0X)
        (bytevector-u32-native-set! . g$5897$1S&e0X)
        (bytevector-u32-native-ref . g$5893$1S&e0X)
        (bytevector-u16-set! . g$5887$1S&e0X)
        (bytevector-u16-ref . g$5883$1S&e0X)
        (bytevector-u16-native-set! . g$5889$1S&e0X)
        (bytevector-u16-native-ref . g$5885$1S&e0X)
        (bytevector-sint-set! . g$13593$1S&e0X)
        (bytevector-sint-ref . g$13592$1S&e0X)
        (bytevector-s8-set! . g$5864$1S&e0X)
        (bytevector-s8-ref . g$5863$1S&e0X)
        (bytevector-s64-set! . g$5904$1S&e0X)
        (bytevector-s64-ref . g$5900$1S&e0X)
        (bytevector-s64-native-set! . g$5906$1S&e0X)
        (bytevector-s64-native-ref . g$5902$1S&e0X)
        (bytevector-s32-set! . g$5896$1S&e0X)
        (bytevector-s32-ref . g$5892$1S&e0X)
        (bytevector-s32-native-set! . g$5898$1S&e0X)
        (bytevector-s32-native-ref . g$5894$1S&e0X)
        (bytevector-s16-set! . g$5888$1S&e0X)
        (bytevector-s16-ref . g$5884$1S&e0X)
        (bytevector-s16-native-set! . g$5890$1S&e0X)
        (bytevector-s16-native-ref . g$5886$1S&e0X)
        (bytevector-length . g$5856$1S&e0X)
        (bytevector-ieee-single-set! . g$5881$1S&e0X)
        (bytevector-ieee-single-ref . g$5879$1S&e0X)
        (bytevector-ieee-single-native-set! . g$5909$1S&e0X)
        (bytevector-ieee-single-native-ref . g$5907$1S&e0X)
        (bytevector-ieee-double-set! . g$5882$1S&e0X)
        (bytevector-ieee-double-ref . g$5880$1S&e0X)
        (bytevector-ieee-double-native-set! . g$5910$1S&e0X)
        (bytevector-ieee-double-native-ref . g$5908$1S&e0X)
        (bytevector-fill! . g$5858$1S&e0X)
        (bytevector-copy! . g$5859$1S&e0X)
        (bytevector-copy . g$5860$1S&e0X)
        (bytevector->uint-list . g$5876$1S&e0X)
        (bytevector->u8-list . g$5865$1S&e0X)
        (bytevector->sint-list . g$5877$1S&e0X)
        (endianness . g$13409$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13777$1S&e0X
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13715$1S&e0X)
        (string-titlecase . g$13714$1S&e0X)
        (string-normalize-nfkd . g$6997$1S&e0X)
        (string-normalize-nfkc . g$6996$1S&e0X)
        (string-normalize-nfd . g$6995$1S&e0X)
        (string-normalize-nfc . g$6994$1S&e0X)
        (string-foldcase . g$13713$1S&e0X)
        (string-downcase . g$13712$1S&e0X)
        (string-ci>? . g$6981$1S&e0X)
        (string-ci>=? . g$6983$1S&e0X)
        (string-ci=? . g$6979$1S&e0X)
        (string-ci<? . g$6980$1S&e0X)
        (string-ci<=? . g$6982$1S&e0X)
        (char-whitespace? . g$13711$1S&e0X)
        (char-upper-case? . g$13710$1S&e0X)
        (char-title-case? . g$13709$1S&e0X)
        (char-numeric? . g$13708$1S&e0X)
        (char-lower-case? . g$13707$1S&e0X)
        (char-general-category . g$13706$1S&e0X)
        (char-upcase . g$13705$1S&e0X)
        (char-titlecase . g$13704$1S&e0X)
        (char-foldcase . g$13703$1S&e0X)
        (char-downcase . g$13702$1S&e0X)
        (char-ci>? . g$6991$1S&e0X)
        (char-ci>=? . g$6993$1S&e0X)
        (char-ci=? . g$6989$1S&e0X)
        (char-ci<? . g$6990$1S&e0X)
        (char-ci<=? . g$6992$1S&e0X)
        (char-alphabetic? . g$13701$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13778$1S&e0X
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13603$1S&e0X)
        (raise-continuable . g$13602$1S&e0X)
        (raise . g$13601$1S&e0X)
        (guard . g$13424$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13779$1S&e0X
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7071$1S&e0X)
        (bitwise-reverse-bit-field . g$13591$1S&e0X)
        (bitwise-length . g$7062$1S&e0X)
        (bitwise-if . g$7065$1S&e0X)
        (bitwise-first-bit-set . g$7063$1S&e0X)
        (bitwise-copy-bit-field . g$7068$1S&e0X)
        (bitwise-copy-bit . g$7066$1S&e0X)
        (bitwise-bit-set? . g$7064$1S&e0X)
        (bitwise-bit-field . g$7067$1S&e0X)
        (bitwise-bit-count . g$7061$1S&e0X)
        (bitwise-xor . g$7060$1S&e0X)
        (bitwise-ior . g$7059$1S&e0X)
        (bitwise-and . g$7058$1S&e0X)
        (bitwise-not . g$7057$1S&e0X)
        (bitwise-arithmetic-shift-right . g$7070$1S&e0X)
        (bitwise-arithmetic-shift-left . g$7069$1S&e0X)
        (bitwise-arithmetic-shift . g$13590$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13780$1S&e0X
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$7239$1S&e0X)
        (fxxor . g$7202$1S&e0X)
        (fxrotate-bit-field . g$7277$1S&e0X)
        (fxreverse-bit-field . g$7278$1S&e0X)
        (fxpositive? . g$7229$1S&e0X)
        (fxodd? . g$7249$1S&e0X)
        (fxnot . g$7183$1S&e0X)
        (fxnegative? . g$7234$1S&e0X)
        (fxmod0 . g$7213$1S&e0X)
        (fxmod . g$7212$1S&e0X)
        (fxmin . g$7251$1S&e0X)
        (fxmax . g$7250$1S&e0X)
        (fxlength . g$7180$1S&e0X)
        (fxior . g$7201$1S&e0X)
        (fxif . g$7259$1S&e0X)
        (fxfirst-bit-set . g$7181$1S&e0X)
        (fxeven? . g$7244$1S&e0X)
        (fxdiv0-and-mod0 . g$7224$1S&e0X)
        (fxdiv0 . g$7219$1S&e0X)
        (fxdiv-and-mod . g$7214$1S&e0X)
        (fxdiv . g$7207$1S&e0X)
        (fxcopy-bit-field . g$7274$1S&e0X)
        (fxcopy-bit . g$7264$1S&e0X)
        (fxbit-set? . g$7182$1S&e0X)
        (fxbit-field . g$7269$1S&e0X)
        (fxbit-count . g$7175$1S&e0X)
        (fxarithmetic-shift-right . g$7276$1S&e0X)
        (fxarithmetic-shift-left . g$7275$1S&e0X)
        (fxarithmetic-shift . g$7170$1S&e0X)
        (fxand . g$7200$1S&e0X)
        (fx>? . g$7192$1S&e0X)
        (fx>=? . g$7193$1S&e0X)
        (fx=? . g$7189$1S&e0X)
        (fx<? . g$7190$1S&e0X)
        (fx<=? . g$7191$1S&e0X)
        (fx-/carry . g$7253$1S&e0X)
        (fx- . g$7164$1S&e0X)
        (fx+/carry . g$7254$1S&e0X)
        (fx+ . g$7162$1S&e0X)
        (fx*/carry . g$7252$1S&e0X)
        (fx* . g$7163$1S&e0X)
        (greatest-fixnum . g$7133$1S&e0X)
        (least-fixnum . g$7134$1S&e0X)
        (fixnum-width . g$5529$1S&e0X)
        (fixnum? . g$5527$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13781$1S&e0X
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6912$1S&e0X)
        (no-infinities-violation? . g$6899$1S&e0X)
        (make-no-nans-violation . g$6911$1S&e0X)
        (make-no-infinities-violation . g$6898$1S&e0X)
        (real->flonum . g$6155$1S&e0X)
        (flzero? . g$8197$1S&e0X)
        (fltruncate . g$8192$1S&e0X)
        (fltan . g$8178$1S&e0X)
        (flsqrt . g$8183$1S&e0X)
        (flsin . g$8176$1S&e0X)
        (flround . g$8193$1S&e0X)
        (flpositive? . g$8195$1S&e0X)
        (flonum? . g$5528$1S&e0X)
        (flodd? . g$8199$1S&e0X)
        (flnumerator . g$8142$1S&e0X)
        (flnegative? . g$8196$1S&e0X)
        (flnan? . g$8175$1S&e0X)
        (flmod0 . g$8160$1S&e0X)
        (flmod . g$8159$1S&e0X)
        (flmin . g$8201$1S&e0X)
        (flmax . g$8200$1S&e0X)
        (fllog . g$8182$1S&e0X)
        (flinteger? . g$8168$1S&e0X)
        (flinfinite? . g$8174$1S&e0X)
        (flfloor . g$8191$1S&e0X)
        (flfinite? . g$8169$1S&e0X)
        (flexpt . g$8185$1S&e0X)
        (flexp . g$8184$1S&e0X)
        (fleven? . g$8198$1S&e0X)
        (fldiv0-and-mod0 . g$8167$1S&e0X)
        (fldiv0 . g$8154$1S&e0X)
        (fldiv-and-mod . g$8161$1S&e0X)
        (fldiv . g$8166$1S&e0X)
        (fldenominator . g$8141$1S&e0X)
        (flcos . g$8177$1S&e0X)
        (flceiling . g$8186$1S&e0X)
        (flatan . g$8181$1S&e0X)
        (flasin . g$8179$1S&e0X)
        (flacos . g$8180$1S&e0X)
        (flabs . g$8194$1S&e0X)
        (fl>? . g$8148$1S&e0X)
        (fl>=? . g$8149$1S&e0X)
        (fl=? . g$8145$1S&e0X)
        (fl<? . g$8146$1S&e0X)
        (fl<=? . g$8147$1S&e0X)
        (fl/ . g$8144$1S&e0X)
        (fl- . g$8143$1S&e0X)
        (fl+ . g$8139$1S&e0X)
        (fl* . g$8140$1S&e0X)
        (fixnum->flonum . g$6156$1S&e0X)
        (&no-nans . g$13468$1S&e0X)
        (&no-infinities . g$13467$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13782$1S&e0X
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$5805$1S&e0X)
        (string-ci-hash . g$5804$1S&e0X)
        (string-hash . g$5803$1S&e0X)
        (equal-hash . g$13681$1S&e0X)
        (hashtable-equivalence-function . g$13680$1S&e0X)
        (make-hashtable . g$13679$1S&e0X)
        (hashtable-hash-function . g$13678$1S&e0X)
        (make-eqv-hashtable . g$5795$1S&e0X)
        (make-eq-hashtable . g$5794$1S&e0X)
        (hashtable? . g$5793$1S&e0X)
        (hashtable-update! . g$5801$1S&e0X)
        (hashtable-size . g$5796$1S&e0X)
        (hashtable-set! . g$5798$1S&e0X)
        (hashtable-ref . g$5797$1S&e0X)
        (hashtable-mutable? . g$13677$1S&e0X)
        (hashtable-keys . g$13676$1S&e0X)
        (hashtable-entries . g$13675$1S&e0X)
        (hashtable-delete! . g$5799$1S&e0X)
        (hashtable-copy . g$13674$1S&e0X)
        (hashtable-contains? . g$5800$1S&e0X)
        (hashtable-clear! . g$5802$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13783$1S&e0X
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13666$1S&e0X)
        (eof-object . g$13665$1S&e0X)
        (current-error-port . g$13664$1S&e0X)
        (current-output-port . g$13663$1S&e0X)
        (current-input-port . g$13662$1S&e0X)
        (output-port? . g$13661$1S&e0X)
        (input-port? . g$13660$1S&e0X)
        (utf-8-codec . g$13659$1S&e0X)
        (utf-16-codec . g$13658$1S&e0X)
        (transcoder-error-handling-mode . g$13657$1S&e0X)
        (transcoder-eol-style . g$13656$1S&e0X)
        (transcoder-codec . g$13655$1S&e0X)
        (transcoded-port . g$13654$1S&e0X)
        (textual-port? . g$13653$1S&e0X)
        (string->bytevector . g$13652$1S&e0X)
        (standard-output-port . g$8757$1S&e0X)
        (standard-input-port . g$8756$1S&e0X)
        (standard-error-port . g$8755$1S&e0X)
        (set-port-position! . g$13651$1S&e0X)
        (put-u8 . g$13650$1S&e0X)
        (put-string . g$13649$1S&e0X)
        (put-datum . g$8760$1S&e0X)
        (put-char . g$13648$1S&e0X)
        (put-bytevector . g$13647$1S&e0X)
        (port? . g$8765$1S&e0X)
        (port-transcoder . g$13646$1S&e0X)
        (port-position . g$13645$1S&e0X)
        (port-has-set-port-position!? . g$13644$1S&e0X)
        (port-has-port-position? . g$13643$1S&e0X)
        (port-eof? . g$13642$1S&e0X)
        (output-port-buffer-mode . g$13641$1S&e0X)
        (open-string-output-port . g$8764$1S&e0X)
        (open-string-input-port . g$13640$1S&e0X)
        (open-file-output-port . g$13639$1S&e0X)
        (open-file-input/output-port . g$13638$1S&e0X)
        (open-file-input-port . g$13637$1S&e0X)
        (open-bytevector-output-port . g$13636$1S&e0X)
        (open-bytevector-input-port . g$13635$1S&e0X)
        (native-transcoder . g$13634$1S&e0X)
        (native-eol-style . g$8758$1S&e0X)
        (make-transcoder . g$13633$1S&e0X)
        (latin-1-codec . g$13632$1S&e0X)
        (make-i/o-write-error . g$6760$1S&e0X)
        (make-i/o-read-error . g$6747$1S&e0X)
        (make-i/o-port-error . g$6855$1S&e0X)
        (make-i/o-invalid-position-error . g$6773$1S&e0X)
        (make-i/o-filename-error . g$6788$1S&e0X)
        (make-i/o-file-protection-error . g$6803$1S&e0X)
        (make-i/o-file-is-read-only-error . g$6816$1S&e0X)
        (make-i/o-file-does-not-exist-error . g$6842$1S&e0X)
        (make-i/o-file-already-exists-error . g$6829$1S&e0X)
        (make-i/o-error . g$6734$1S&e0X)
        (make-i/o-encoding-error . g$6883$1S&e0X)
        (make-i/o-decoding-error . g$6870$1S&e0X)
        (make-custom-textual-output-port . g$13631$1S&e0X)
        (make-custom-textual-input/output-port . g$13630$1S&e0X)
        (make-custom-textual-input-port . g$13629$1S&e0X)
        (make-custom-binary-output-port . g$13628$1S&e0X)
        (make-custom-binary-input/output-port . g$13627$1S&e0X)
        (make-custom-binary-input-port . g$13626$1S&e0X)
        (lookahead-u8 . g$13625$1S&e0X)
        (lookahead-char . g$13624$1S&e0X)
        (i/o-write-error? . g$6761$1S&e0X)
        (i/o-read-error? . g$6748$1S&e0X)
        (i/o-port-error? . g$6857$1S&e0X)
        (i/o-invalid-position-error? . g$6775$1S&e0X)
        (i/o-error-position . g$6776$1S&e0X)
        (i/o-filename-error? . g$6790$1S&e0X)
        (i/o-file-protection-error? . g$6804$1S&e0X)
        (i/o-file-is-read-only-error? . g$6817$1S&e0X)
        (i/o-file-does-not-exist-error? . g$6843$1S&e0X)
        (i/o-file-already-exists-error? . g$6830$1S&e0X)
        (i/o-error? . g$6735$1S&e0X)
        (i/o-error-port . g$6858$1S&e0X)
        (i/o-error-filename . g$6791$1S&e0X)
        (i/o-encoding-error? . g$6885$1S&e0X)
        (i/o-encoding-error-char . g$6886$1S&e0X)
        (i/o-decoding-error? . g$6871$1S&e0X)
        (get-u8 . g$13623$1S&e0X)
        (get-string-n! . g$13622$1S&e0X)
        (get-string-n . g$13621$1S&e0X)
        (get-string-all . g$13620$1S&e0X)
        (get-line . g$13619$1S&e0X)
        (get-datum . g$8761$1S&e0X)
        (get-char . g$13618$1S&e0X)
        (get-bytevector-some . g$13617$1S&e0X)
        (get-bytevector-n! . g$13616$1S&e0X)
        (get-bytevector-n . g$13615$1S&e0X)
        (get-bytevector-all . g$13614$1S&e0X)
        (flush-output-port . g$13613$1S&e0X)
        (close-port . g$13612$1S&e0X)
        (call-with-string-output-port . g$8766$1S&e0X)
        (call-with-port . g$8767$1S&e0X)
        (call-with-bytevector-output-port . g$13611$1S&e0X)
        (bytevector->string . g$13610$1S&e0X)
        (buffer-mode? . g$8759$1S&e0X)
        (binary-port? . g$13609$1S&e0X)
        (&i/o-encoding . g$13466$1S&e0X)
        (&i/o-decoding . g$13465$1S&e0X)
        (&i/o-port . g$13464$1S&e0X)
        (&i/o-file-does-not-exist . g$13463$1S&e0X)
        (&i/o-file-already-exists . g$13462$1S&e0X)
        (&i/o-file-is-read-only . g$13461$1S&e0X)
        (&i/o-file-protection . g$13460$1S&e0X)
        (&i/o-filename . g$13459$1S&e0X)
        (&i/o-invalid-position . g$13458$1S&e0X)
        (&i/o-write . g$13457$1S&e0X)
        (&i/o-read . g$13456$1S&e0X)
        (&i/o . g$13455$1S&e0X)
        (error-handling-mode . g$13428$1S&e0X)
        (file-options . g$13427$1S&e0X)
        (buffer-mode . g$13426$1S&e0X)
        (eol-style . g$13425$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13784$1S&e0X
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8853$1S&e0X)
        (enum-set=? . g$8860$1S&e0X)
        (enum-set-universe . g$8854$1S&e0X)
        (enum-set-union . g$8861$1S&e0X)
        (enum-set-subset? . g$8859$1S&e0X)
        (enum-set-projection . g$8865$1S&e0X)
        (enum-set-member? . g$8858$1S&e0X)
        (enum-set-intersection . g$8862$1S&e0X)
        (enum-set-indexer . g$8855$1S&e0X)
        (enum-set-difference . g$8863$1S&e0X)
        (enum-set-constructor . g$8856$1S&e0X)
        (enum-set-complement . g$8864$1S&e0X)
        (enum-set->list . g$8857$1S&e0X)
        (define-enumeration . g$13439$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13785$1S&e0X
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6622$1S&e0X)
        (warning? . g$6541$1S&e0X)
        (violation? . g$6580$1S&e0X)
        (undefined-violation? . g$6722$1S&e0X)
        (syntax-violation? . g$6707$1S&e0X)
        (syntax-violation-subform . g$6709$1S&e0X)
        (syntax-violation-form . g$6708$1S&e0X)
        (simple-conditions . g$13600$1S&e0X)
        (serious-condition? . g$6554$1S&e0X)
        (non-continuable-violation? . g$6666$1S&e0X)
        (message-condition? . g$6527$1S&e0X)
        (make-who-condition . g$6620$1S&e0X)
        (make-warning . g$6540$1S&e0X)
        (make-violation . g$6579$1S&e0X)
        (make-undefined-violation . g$6721$1S&e0X)
        (make-syntax-violation . g$6704$1S&e0X)
        (make-serious-condition . g$6553$1S&e0X)
        (make-non-continuable-violation . g$6665$1S&e0X)
        (make-message-condition . g$6525$1S&e0X)
        (make-lexical-violation . g$6691$1S&e0X)
        (make-irritants-condition . g$6605$1S&e0X)
        (make-implementation-restriction-violation . g$6678$1S&e0X)
        (make-error . g$6566$1S&e0X)
        (make-assertion-violation . g$6592$1S&e0X)
        (lexical-violation? . g$6692$1S&e0X)
        (irritants-condition? . g$6607$1S&e0X)
        (implementation-restriction-violation? . g$6679$1S&e0X)
        (error? . g$6567$1S&e0X)
        (condition-who . g$6623$1S&e0X)
        (condition-predicate . g$13599$1S&e0X)
        (condition-message . g$6528$1S&e0X)
        (condition-irritants . g$6608$1S&e0X)
        (condition-accessor . g$13598$1S&e0X)
        (condition . g$13597$1S&e0X)
        (assertion-violation? . g$6593$1S&e0X)
        (condition? . g$13596$1S&e0X)
        (&non-continuable . g$13454$1S&e0X)
        (&undefined . g$13453$1S&e0X)
        (&syntax . g$13452$1S&e0X)
        (&lexical . g$13451$1S&e0X)
        (&implementation-restriction . g$13450$1S&e0X)
        (&who . g$13449$1S&e0X)
        (&irritants . g$13448$1S&e0X)
        (&assertion . g$13447$1S&e0X)
        (&violation . g$13446$1S&e0X)
        (&error . g$13445$1S&e0X)
        (&serious . g$13444$1S&e0X)
        (&warning . g$13443$1S&e0X)
        (&message . g$13442$1S&e0X)
        (&condition . g$13441$1S&e0X)
        (define-condition-type . g$13440$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13786$1S&e0X
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13693$1S&e0X)
        (record-type-uid . g$13692$1S&e0X)
        (record-type-sealed? . g$13691$1S&e0X)
        (record-type-parent . g$13690$1S&e0X)
        (record-type-opaque? . g$13689$1S&e0X)
        (record-type-name . g$13688$1S&e0X)
        (record-type-generative? . g$13687$1S&e0X)
        (record-type-field-names . g$13686$1S&e0X)
        (record-rtd . g$13685$1S&e0X)
        (record-field-mutable? . g$13684$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13787$1S&e0X
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13700$1S&e0X)
        (record-predicate . g$13699$1S&e0X)
        (record-mutator . g$13698$1S&e0X)
        (record-constructor . g$13697$1S&e0X)
        (record-accessor . g$13696$1S&e0X)
        (make-record-type-descriptor . g$13695$1S&e0X)
        (make-record-constructor-descriptor . g$13694$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13788$1S&e0X
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13438$1S&e0X)
        (parent-rtd . g$13437$1S&e0X)
        (nongenerative . g$13436$1S&e0X)
        (opaque . g$13435$1S&e0X)
        (sealed . g$13434$1S&e0X)
        (protocol . g$13433$1S&e0X)
        (parent . g$13432$1S&e0X)
        (immutable . g$13431$1S&e0X)
        (mutable . g$13430$1S&e0X)
        (fields . g$13429$1S&e0X)
        (record-constructor-descriptor . g$13390$1S&e0X)
        (record-type-descriptor . g$13389$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13789$1S&e0X
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$10164$1S&e0X)
        (&stacktrace-rcd . g$6655$1S&e0X)
        (&stacktrace-rtd . g$6654$1S&e0X)
        (&where-rcd . g$6640$1S&e0X)
        (&where-rtd . g$6639$1S&e0X)
        (&no-nans-rcd . g$6914$1S&e0X)
        (&no-nans-rtd . g$6913$1S&e0X)
        (&no-infinities-rcd . g$6901$1S&e0X)
        (&no-infinities-rtd . g$6900$1S&e0X)
        (&i/o-encoding-rcd . g$6888$1S&e0X)
        (&i/o-encoding-rtd . g$6887$1S&e0X)
        (&i/o-decoding-rcd . g$6873$1S&e0X)
        (&i/o-decoding-rtd . g$6872$1S&e0X)
        (&i/o-port-rcd . g$6860$1S&e0X)
        (&i/o-port-rtd . g$6859$1S&e0X)
        (&i/o-file-does-not-exist-rcd . g$6845$1S&e0X)
        (&i/o-file-does-not-exist-rtd . g$6844$1S&e0X)
        (&i/o-file-already-exists-rcd . g$6832$1S&e0X)
        (&i/o-file-already-exists-rtd . g$6831$1S&e0X)
        (&i/o-file-is-read-only-rcd . g$6819$1S&e0X)
        (&i/o-file-is-read-only-rtd . g$6818$1S&e0X)
        (&i/o-file-protection-rcd . g$6806$1S&e0X)
        (&i/o-file-protection-rtd . g$6805$1S&e0X)
        (&i/o-filename-rcd . g$6793$1S&e0X)
        (&i/o-filename-rtd . g$6792$1S&e0X)
        (&i/o-invalid-position-rcd . g$6778$1S&e0X)
        (&i/o-invalid-position-rtd . g$6777$1S&e0X)
        (&i/o-write-rcd . g$6763$1S&e0X)
        (&i/o-write-rtd . g$6762$1S&e0X)
        (&i/o-read-rcd . g$6750$1S&e0X)
        (&i/o-read-rtd . g$6749$1S&e0X)
        (&i/o-rcd . g$6737$1S&e0X)
        (&i/o-rtd . g$6736$1S&e0X)
        (&undefined-rcd . g$6724$1S&e0X)
        (&undefined-rtd . g$6723$1S&e0X)
        (&syntax-rcd . g$6711$1S&e0X)
        (&syntax-rtd . g$6710$1S&e0X)
        (&lexical-rcd . g$6694$1S&e0X)
        (&lexical-rtd . g$6693$1S&e0X)
        (&implementation-restriction-rcd . g$6681$1S&e0X)
        (&implementation-restriction-rtd . g$6680$1S&e0X)
        (&non-continuable-rcd . g$6668$1S&e0X)
        (&non-continuable-rtd . g$6667$1S&e0X)
        (&who-rcd . g$6625$1S&e0X)
        (&who-rtd . g$6624$1S&e0X)
        (&irritants-rcd . g$6610$1S&e0X)
        (&irritants-rtd . g$6609$1S&e0X)
        (&assertion-rcd . g$6595$1S&e0X)
        (&assertion-rtd . g$6594$1S&e0X)
        (&violation-rcd . g$6582$1S&e0X)
        (&violation-rtd . g$6581$1S&e0X)
        (&error-rcd . g$6569$1S&e0X)
        (&error-rtd . g$6568$1S&e0X)
        (&serious-rcd . g$6556$1S&e0X)
        (&serious-rtd . g$6555$1S&e0X)
        (&warning-rcd . g$6543$1S&e0X)
        (&warning-rtd . g$6542$1S&e0X)
        (&message-rcd . g$6530$1S&e0X)
        (&message-rtd . g$6529$1S&e0X)
        (&condition-rcd . g$6490$1S&e0X)
        (&condition-rtd . g$6489$1S&e0X)
        (library-letrec* . g$13752$1S&e0X)
        (annotation-stripped . g$13751$1S&e0X)
        (annotation-source . g$13750$1S&e0X)
        (annotation-expression . g$13749$1S&e0X)
        (annotation? . g$13748$1S&e0X)
        (read-annotated . g$13747$1S&e0X)
        (tanh . g$6215$1S&e0X)
        (cosh . g$6213$1S&e0X)
        (sinh . g$6210$1S&e0X)
        (make-guid . g$13746$1S&e0X)
        (unspecified? . g$13745$1S&e0X)
        (make-list . g$5167$1S&e0X)
        (last-pair . g$5166$1S&e0X)
        (load-r5rs . g$13744$1S&e0X)
        (license . g$13743$1S&e0X)
        (stacktrace . g$13742$1S&e0X)
        (ironscheme-test . g$13311$1S&e0X)
        (ironscheme-build . g$13312$1S&e0X)
        (pinvoke-call-internal . g$13741$1S&e0X)
        (ffi-callback-internal . g$13740$1S&e0X)
        (ffi-callout-internal . g$13739$1S&e0X)
        (define-clr-class-internal . g$13738$1S&e0X)
        (clr-field-set!-internal . g$13737$1S&e0X)
        (clr-field-get-internal . g$13736$1S&e0X)
        (clr-cast-internal . g$13735$1S&e0X)
        (clr-call-internal . g$13734$1S&e0X)
        (clr-new-internal . g$13733$1S&e0X)
        (clr-new-array-internal . g$13732$1S&e0X)
        (clr-is-internal . g$13731$1S&e0X)
        (clr-reference-internal . g$13730$1S&e0X)
        (clr-using-internal . g$13729$1S&e0X)
        (syntax-error . g$10284$1S&e0X)
        (syntax-dispatch . g$10159$1S&e0X)
        (compile-core . g$13728$1S&e0X)
        (eval-core . g$13727$1S&e0X)
        (remove-location . g$13726$1S&e0X)
        (set-symbol-value! . g$13725$1S&e0X)
        (symbol-value . g$13724$1S&e0X)
        (symbol-bound? . g$13723$1S&e0X)
        (ungensym . g$13722$1S&e0X)
        (gensym . g$13721$1S&e0X)
        (void . g$13720$1S&e0X)
        (load-serialized-library . g$13719$1S&e0X)
        (serialize-library . g$13718$1S&e0X)
        (compile-system-libraries . g$13316$1S&e0X)
        (compile->closure . g$13318$1S&e0X)
        (compile . g$13317$1S&e0X)
        (load . g$13310$1S&e0X)
        (string-normalize . g$13717$1S&e0X)
        (new-interaction-environment . g$10293$1S&e0X)
        (interaction-environment . g$10294$1S&e0X)
        (char-ready? . g$13716$1S&e0X)
        (string-upcase . g$13715$1S&e0X)
        (string-titlecase . g$13714$1S&e0X)
        (string-normalize-nfkd . g$6997$1S&e0X)
        (string-normalize-nfkc . g$6996$1S&e0X)
        (string-normalize-nfd . g$6995$1S&e0X)
        (string-normalize-nfc . g$6994$1S&e0X)
        (string-foldcase . g$13713$1S&e0X)
        (string-downcase . g$13712$1S&e0X)
        (string-ci>? . g$6981$1S&e0X)
        (string-ci>=? . g$6983$1S&e0X)
        (string-ci=? . g$6979$1S&e0X)
        (string-ci<? . g$6980$1S&e0X)
        (string-ci<=? . g$6982$1S&e0X)
        (char-whitespace? . g$13711$1S&e0X)
        (char-upper-case? . g$13710$1S&e0X)
        (char-title-case? . g$13709$1S&e0X)
        (char-numeric? . g$13708$1S&e0X)
        (char-lower-case? . g$13707$1S&e0X)
        (char-general-category . g$13706$1S&e0X)
        (char-upcase . g$13705$1S&e0X)
        (char-titlecase . g$13704$1S&e0X)
        (char-foldcase . g$13703$1S&e0X)
        (char-downcase . g$13702$1S&e0X)
        (char-ci>? . g$6991$1S&e0X)
        (char-ci>=? . g$6993$1S&e0X)
        (char-ci=? . g$6989$1S&e0X)
        (char-ci<? . g$6990$1S&e0X)
        (char-ci<=? . g$6992$1S&e0X)
        (char-alphabetic? . g$13701$1S&e0X)
        (variable-transformer-procedure . g$9971$1S&e0X)
        (variable-transformer? . g$9970$1S&e0X)
        (make-variable-transformer . g$9968$1S&e0X)
        (identifier? . g$10288$1S&e0X)
        (generate-temporaries . g$10277$1S&e0X)
        (free-identifier=? . g$10278$1S&e0X)
        (syntax->datum . g$10290$1S&e0X)
        (datum->syntax . g$10289$1S&e0X)
        (bound-identifier=? . g$10279$1S&e0X)
        (record-type-descriptor? . g$13700$1S&e0X)
        (record-predicate . g$13699$1S&e0X)
        (record-mutator . g$13698$1S&e0X)
        (record-constructor . g$13697$1S&e0X)
        (record-accessor . g$13696$1S&e0X)
        (make-record-type-descriptor . g$13695$1S&e0X)
        (make-record-constructor-descriptor . g$13694$1S&e0X)
        (record? . g$13693$1S&e0X)
        (record-type-uid . g$13692$1S&e0X)
        (record-type-sealed? . g$13691$1S&e0X)
        (record-type-parent . g$13690$1S&e0X)
        (record-type-opaque? . g$13689$1S&e0X)
        (record-type-name . g$13688$1S&e0X)
        (record-type-generative? . g$13687$1S&e0X)
        (record-type-field-names . g$13686$1S&e0X)
        (record-rtd . g$13685$1S&e0X)
        (record-field-mutable? . g$13684$1S&e0X)
        (delete-file . g$5835$1S&e0X)
        (file-exists? . g$5834$1S&e0X)
        (vector-sort! . g$13683$1S&e0X)
        (vector-sort . g$13682$1S&e0X)
        (list-sort . g$6950$1S&e0X)
        (symbol-hash . g$5805$1S&e0X)
        (string-ci-hash . g$5804$1S&e0X)
        (string-hash . g$5803$1S&e0X)
        (equal-hash . g$13681$1S&e0X)
        (hashtable-equivalence-function . g$13680$1S&e0X)
        (make-hashtable . g$13679$1S&e0X)
        (hashtable-hash-function . g$13678$1S&e0X)
        (make-eqv-hashtable . g$5795$1S&e0X)
        (make-eq-hashtable . g$5794$1S&e0X)
        (hashtable? . g$5793$1S&e0X)
        (hashtable-update! . g$5801$1S&e0X)
        (hashtable-size . g$5796$1S&e0X)
        (hashtable-set! . g$5798$1S&e0X)
        (hashtable-ref . g$5797$1S&e0X)
        (hashtable-mutable? . g$13677$1S&e0X)
        (hashtable-keys . g$13676$1S&e0X)
        (hashtable-entries . g$13675$1S&e0X)
        (hashtable-delete! . g$5799$1S&e0X)
        (hashtable-copy . g$13674$1S&e0X)
        (hashtable-contains? . g$5800$1S&e0X)
        (hashtable-clear! . g$5802$1S&e0X)
        (call-with-output-file . g$8792$1S&e0X)
        (call-with-input-file . g$8791$1S&e0X)
        (write-char . g$8783$1S&e0X)
        (write . g$13673$1S&e0X)
        (with-output-to-file . g$8790$1S&e0X)
        (with-input-from-file . g$8789$1S&e0X)
        (read-char . g$8782$1S&e0X)
        (read . g$13672$1S&e0X)
        (peek-char . g$8781$1S&e0X)
        (open-output-file . g$13671$1S&e0X)
        (open-input-file . g$13670$1S&e0X)
        (newline . g$8793$1S&e0X)
        (display . g$13669$1S&e0X)
        (close-output-port . g$13668$1S&e0X)
        (close-input-port . g$13667$1S&e0X)
        (eof-object? . g$13666$1S&e0X)
        (eof-object . g$13665$1S&e0X)
        (current-error-port . g$13664$1S&e0X)
        (current-output-port . g$13663$1S&e0X)
        (current-input-port . g$13662$1S&e0X)
        (output-port? . g$13661$1S&e0X)
        (input-port? . g$13660$1S&e0X)
        (utf-8-codec . g$13659$1S&e0X)
        (utf-16-codec . g$13658$1S&e0X)
        (transcoder-error-handling-mode . g$13657$1S&e0X)
        (transcoder-eol-style . g$13656$1S&e0X)
        (transcoder-codec . g$13655$1S&e0X)
        (transcoded-port . g$13654$1S&e0X)
        (textual-port? . g$13653$1S&e0X)
        (string->bytevector . g$13652$1S&e0X)
        (standard-output-port . g$8757$1S&e0X)
        (standard-input-port . g$8756$1S&e0X)
        (standard-error-port . g$8755$1S&e0X)
        (set-port-position! . g$13651$1S&e0X)
        (put-u8 . g$13650$1S&e0X)
        (put-string . g$13649$1S&e0X)
        (put-datum . g$8760$1S&e0X)
        (put-char . g$13648$1S&e0X)
        (put-bytevector . g$13647$1S&e0X)
        (port? . g$8765$1S&e0X)
        (port-transcoder . g$13646$1S&e0X)
        (port-position . g$13645$1S&e0X)
        (port-has-set-port-position!? . g$13644$1S&e0X)
        (port-has-port-position? . g$13643$1S&e0X)
        (port-eof? . g$13642$1S&e0X)
        (output-port-buffer-mode . g$13641$1S&e0X)
        (open-string-output-port . g$8764$1S&e0X)
        (open-string-input-port . g$13640$1S&e0X)
        (open-file-output-port . g$13639$1S&e0X)
        (open-file-input/output-port . g$13638$1S&e0X)
        (open-file-input-port . g$13637$1S&e0X)
        (open-bytevector-output-port . g$13636$1S&e0X)
        (open-bytevector-input-port . g$13635$1S&e0X)
        (native-transcoder . g$13634$1S&e0X)
        (native-eol-style . g$8758$1S&e0X)
        (make-transcoder . g$13633$1S&e0X)
        (latin-1-codec . g$13632$1S&e0X)
        (make-i/o-write-error . g$6760$1S&e0X)
        (make-i/o-read-error . g$6747$1S&e0X)
        (make-i/o-port-error . g$6855$1S&e0X)
        (make-i/o-invalid-position-error . g$6773$1S&e0X)
        (make-i/o-filename-error . g$6788$1S&e0X)
        (make-i/o-file-protection-error . g$6803$1S&e0X)
        (make-i/o-file-is-read-only-error . g$6816$1S&e0X)
        (make-i/o-file-does-not-exist-error . g$6842$1S&e0X)
        (make-i/o-file-already-exists-error . g$6829$1S&e0X)
        (make-i/o-error . g$6734$1S&e0X)
        (make-i/o-encoding-error . g$6883$1S&e0X)
        (make-i/o-decoding-error . g$6870$1S&e0X)
        (make-custom-textual-output-port . g$13631$1S&e0X)
        (make-custom-textual-input/output-port . g$13630$1S&e0X)
        (make-custom-textual-input-port . g$13629$1S&e0X)
        (make-custom-binary-output-port . g$13628$1S&e0X)
        (make-custom-binary-input/output-port . g$13627$1S&e0X)
        (make-custom-binary-input-port . g$13626$1S&e0X)
        (make-bytevector . g$5855$1S&e0X)
        (lookahead-u8 . g$13625$1S&e0X)
        (lookahead-char . g$13624$1S&e0X)
        (i/o-write-error? . g$6761$1S&e0X)
        (i/o-read-error? . g$6748$1S&e0X)
        (i/o-port-error? . g$6857$1S&e0X)
        (i/o-invalid-position-error? . g$6775$1S&e0X)
        (i/o-error-position . g$6776$1S&e0X)
        (i/o-filename-error? . g$6790$1S&e0X)
        (i/o-file-protection-error? . g$6804$1S&e0X)
        (i/o-file-is-read-only-error? . g$6817$1S&e0X)
        (i/o-file-does-not-exist-error? . g$6843$1S&e0X)
        (i/o-file-already-exists-error? . g$6830$1S&e0X)
        (i/o-error? . g$6735$1S&e0X)
        (i/o-error-port . g$6858$1S&e0X)
        (i/o-error-filename . g$6791$1S&e0X)
        (i/o-encoding-error? . g$6885$1S&e0X)
        (i/o-encoding-error-char . g$6886$1S&e0X)
        (i/o-decoding-error? . g$6871$1S&e0X)
        (get-u8 . g$13623$1S&e0X)
        (get-string-n! . g$13622$1S&e0X)
        (get-string-n . g$13621$1S&e0X)
        (get-string-all . g$13620$1S&e0X)
        (get-line . g$13619$1S&e0X)
        (get-datum . g$8761$1S&e0X)
        (get-char . g$13618$1S&e0X)
        (get-bytevector-some . g$13617$1S&e0X)
        (get-bytevector-n! . g$13616$1S&e0X)
        (get-bytevector-n . g$13615$1S&e0X)
        (get-bytevector-all . g$13614$1S&e0X)
        (flush-output-port . g$13613$1S&e0X)
        (close-port . g$13612$1S&e0X)
        (call-with-string-output-port . g$8766$1S&e0X)
        (call-with-port . g$8767$1S&e0X)
        (call-with-bytevector-output-port . g$13611$1S&e0X)
        (bytevector->string . g$13610$1S&e0X)
        (buffer-mode? . g$8759$1S&e0X)
        (binary-port? . g$13609$1S&e0X)
        (scheme-report-environment . g$10267$1S&e0X)
        (quotient . g$6929$1S&e0X)
        (null-environment . g$10266$1S&e0X)
        (remainder . g$6930$1S&e0X)
        (modulo . g$6931$1S&e0X)
        (inexact->exact . g$6926$1S&e0X)
        (force . g$6933$1S&e0X)
        (exact->inexact . g$6927$1S&e0X)
        (exit . g$13608$1S&e0X)
        (command-line . g$13305$1S&e0X)
        (string-fill! . g$13607$1S&e0X)
        (string-set! . g$13606$1S&e0X)
        (set-cdr! . g$13605$1S&e0X)
        (set-car! . g$13604$1S&e0X)
        (remove . g$5189$1S&e0X)
        (remv . g$5190$1S&e0X)
        (remp . g$5170$1S&e0X)
        (remq . g$5191$1S&e0X)
        (partition . g$5169$1S&e0X)
        (memv . g$5177$1S&e0X)
        (memq . g$5176$1S&e0X)
        (memp . g$5179$1S&e0X)
        (member . g$5178$1S&e0X)
        (exists . g$5183$1S&e0X)
        (for-all . g$5182$1S&e0X)
        (fold-right . g$5188$1S&e0X)
        (fold-left . g$5187$1S&e0X)
        (find . g$5168$1S&e0X)
        (filter . g$5171$1S&e0X)
        (cons* . g$5186$1S&e0X)
        (assv . g$5173$1S&e0X)
        (assq . g$5172$1S&e0X)
        (assp . g$5175$1S&e0X)
        (assoc . g$5174$1S&e0X)
        (with-exception-handler . g$13603$1S&e0X)
        (raise-continuable . g$13602$1S&e0X)
        (raise . g$13601$1S&e0X)
        (eval . g$10269$1S&e0X)
        (environment . g$10265$1S&e0X)
        (make-enumeration . g$8853$1S&e0X)
        (enum-set=? . g$8860$1S&e0X)
        (enum-set-universe . g$8854$1S&e0X)
        (enum-set-union . g$8861$1S&e0X)
        (enum-set-subset? . g$8859$1S&e0X)
        (enum-set-projection . g$8865$1S&e0X)
        (enum-set-member? . g$8858$1S&e0X)
        (enum-set-intersection . g$8862$1S&e0X)
        (enum-set-indexer . g$8855$1S&e0X)
        (enum-set-difference . g$8863$1S&e0X)
        (enum-set-constructor . g$8856$1S&e0X)
        (enum-set-complement . g$8864$1S&e0X)
        (enum-set->list . g$8857$1S&e0X)
        (who-condition? . g$6622$1S&e0X)
        (warning? . g$6541$1S&e0X)
        (violation? . g$6580$1S&e0X)
        (undefined-violation? . g$6722$1S&e0X)
        (syntax-violation? . g$6707$1S&e0X)
        (syntax-violation-subform . g$6709$1S&e0X)
        (syntax-violation-form . g$6708$1S&e0X)
        (syntax-violation . g$10287$1S&e0X)
        (simple-conditions . g$13600$1S&e0X)
        (serious-condition? . g$6554$1S&e0X)
        (non-continuable-violation? . g$6666$1S&e0X)
        (message-condition? . g$6527$1S&e0X)
        (make-who-condition . g$6620$1S&e0X)
        (make-warning . g$6540$1S&e0X)
        (make-violation . g$6579$1S&e0X)
        (make-undefined-violation . g$6721$1S&e0X)
        (make-syntax-violation . g$6704$1S&e0X)
        (make-serious-condition . g$6553$1S&e0X)
        (make-non-continuable-violation . g$6665$1S&e0X)
        (make-message-condition . g$6525$1S&e0X)
        (make-lexical-violation . g$6691$1S&e0X)
        (make-irritants-condition . g$6605$1S&e0X)
        (make-implementation-restriction-violation . g$6678$1S&e0X)
        (make-error . g$6566$1S&e0X)
        (make-assertion-violation . g$6592$1S&e0X)
        (lexical-violation? . g$6692$1S&e0X)
        (irritants-condition? . g$6607$1S&e0X)
        (implementation-restriction-violation? . g$6679$1S&e0X)
        (error? . g$6567$1S&e0X)
        (condition-who . g$6623$1S&e0X)
        (condition-predicate . g$13599$1S&e0X)
        (condition-message . g$6528$1S&e0X)
        (condition-irritants . g$6608$1S&e0X)
        (condition-accessor . g$13598$1S&e0X)
        (condition . g$13597$1S&e0X)
        (assertion-violation? . g$6593$1S&e0X)
        (condition? . g$13596$1S&e0X)
        (utf32->string . g$5873$1S&e0X)
        (utf16->string . g$5872$1S&e0X)
        (utf8->string . g$5870$1S&e0X)
        (uint-list->bytevector . g$5874$1S&e0X)
        (u8-list->bytevector . g$5866$1S&e0X)
        (string->utf8 . g$5867$1S&e0X)
        (string->utf32 . g$5869$1S&e0X)
        (string->utf16 . g$5868$1S&e0X)
        (sint-list->bytevector . g$5875$1S&e0X)
        (native-endianness . g$5841$1S&e0X)
        (bytevector? . g$5523$1S&e0X)
        (bytevector=? . g$5857$1S&e0X)
        (bytevector-uint-set! . g$13595$1S&e0X)
        (bytevector-uint-ref . g$13594$1S&e0X)
        (bytevector-u8-set! . g$5862$1S&e0X)
        (bytevector-u8-ref . g$5861$1S&e0X)
        (bytevector-u64-set! . g$5903$1S&e0X)
        (bytevector-u64-ref . g$5899$1S&e0X)
        (bytevector-u64-native-set! . g$5905$1S&e0X)
        (bytevector-u64-native-ref . g$5901$1S&e0X)
        (bytevector-u32-set! . g$5895$1S&e0X)
        (bytevector-u32-ref . g$5891$1S&e0X)
        (bytevector-u32-native-set! . g$5897$1S&e0X)
        (bytevector-u32-native-ref . g$5893$1S&e0X)
        (bytevector-u16-set! . g$5887$1S&e0X)
        (bytevector-u16-ref . g$5883$1S&e0X)
        (bytevector-u16-native-set! . g$5889$1S&e0X)
        (bytevector-u16-native-ref . g$5885$1S&e0X)
        (bytevector-sint-set! . g$13593$1S&e0X)
        (bytevector-sint-ref . g$13592$1S&e0X)
        (bytevector-s8-set! . g$5864$1S&e0X)
        (bytevector-s8-ref . g$5863$1S&e0X)
        (bytevector-s64-set! . g$5904$1S&e0X)
        (bytevector-s64-ref . g$5900$1S&e0X)
        (bytevector-s64-native-set! . g$5906$1S&e0X)
        (bytevector-s64-native-ref . g$5902$1S&e0X)
        (bytevector-s32-set! . g$5896$1S&e0X)
        (bytevector-s32-ref . g$5892$1S&e0X)
        (bytevector-s32-native-set! . g$5898$1S&e0X)
        (bytevector-s32-native-ref . g$5894$1S&e0X)
        (bytevector-s16-set! . g$5888$1S&e0X)
        (bytevector-s16-ref . g$5884$1S&e0X)
        (bytevector-s16-native-set! . g$5890$1S&e0X)
        (bytevector-s16-native-ref . g$5886$1S&e0X)
        (bytevector-length . g$5856$1S&e0X)
        (bytevector-ieee-single-set! . g$5881$1S&e0X)
        (bytevector-ieee-single-ref . g$5879$1S&e0X)
        (bytevector-ieee-single-native-set! . g$5909$1S&e0X)
        (bytevector-ieee-single-native-ref . g$5907$1S&e0X)
        (bytevector-ieee-double-set! . g$5882$1S&e0X)
        (bytevector-ieee-double-ref . g$5880$1S&e0X)
        (bytevector-ieee-double-native-set! . g$5910$1S&e0X)
        (bytevector-ieee-double-native-ref . g$5908$1S&e0X)
        (bytevector-fill! . g$5858$1S&e0X)
        (bytevector-copy! . g$5859$1S&e0X)
        (bytevector-copy . g$5860$1S&e0X)
        (bytevector->uint-list . g$5876$1S&e0X)
        (bytevector->u8-list . g$5865$1S&e0X)
        (bytevector->sint-list . g$5877$1S&e0X)
        (no-nans-violation? . g$6912$1S&e0X)
        (no-infinities-violation? . g$6899$1S&e0X)
        (make-no-nans-violation . g$6911$1S&e0X)
        (make-no-infinities-violation . g$6898$1S&e0X)
        (real->flonum . g$6155$1S&e0X)
        (flzero? . g$8197$1S&e0X)
        (fltruncate . g$8192$1S&e0X)
        (fltan . g$8178$1S&e0X)
        (flsqrt . g$8183$1S&e0X)
        (flsin . g$8176$1S&e0X)
        (flround . g$8193$1S&e0X)
        (flpositive? . g$8195$1S&e0X)
        (flonum? . g$5528$1S&e0X)
        (flodd? . g$8199$1S&e0X)
        (flnumerator . g$8142$1S&e0X)
        (flnegative? . g$8196$1S&e0X)
        (flnan? . g$8175$1S&e0X)
        (flmod0 . g$8160$1S&e0X)
        (flmod . g$8159$1S&e0X)
        (flmin . g$8201$1S&e0X)
        (flmax . g$8200$1S&e0X)
        (fllog . g$8182$1S&e0X)
        (flinteger? . g$8168$1S&e0X)
        (flinfinite? . g$8174$1S&e0X)
        (flfloor . g$8191$1S&e0X)
        (flfinite? . g$8169$1S&e0X)
        (flexpt . g$8185$1S&e0X)
        (flexp . g$8184$1S&e0X)
        (fleven? . g$8198$1S&e0X)
        (fldiv0-and-mod0 . g$8167$1S&e0X)
        (fldiv0 . g$8154$1S&e0X)
        (fldiv-and-mod . g$8161$1S&e0X)
        (fldiv . g$8166$1S&e0X)
        (fldenominator . g$8141$1S&e0X)
        (flcos . g$8177$1S&e0X)
        (flceiling . g$8186$1S&e0X)
        (flatan . g$8181$1S&e0X)
        (flasin . g$8179$1S&e0X)
        (flacos . g$8180$1S&e0X)
        (flabs . g$8194$1S&e0X)
        (fl>? . g$8148$1S&e0X)
        (fl>=? . g$8149$1S&e0X)
        (fl=? . g$8145$1S&e0X)
        (fl<? . g$8146$1S&e0X)
        (fl<=? . g$8147$1S&e0X)
        (fl/ . g$8144$1S&e0X)
        (fl- . g$8143$1S&e0X)
        (fl+ . g$8139$1S&e0X)
        (fl* . g$8140$1S&e0X)
        (fixnum->flonum . g$6156$1S&e0X)
        (fxzero? . g$7239$1S&e0X)
        (fxxor . g$7202$1S&e0X)
        (fxrotate-bit-field . g$7277$1S&e0X)
        (fxreverse-bit-field . g$7278$1S&e0X)
        (fxpositive? . g$7229$1S&e0X)
        (fxodd? . g$7249$1S&e0X)
        (fxnot . g$7183$1S&e0X)
        (fxnegative? . g$7234$1S&e0X)
        (fxmod0 . g$7213$1S&e0X)
        (fxmod . g$7212$1S&e0X)
        (fxmin . g$7251$1S&e0X)
        (fxmax . g$7250$1S&e0X)
        (fxlength . g$7180$1S&e0X)
        (fxior . g$7201$1S&e0X)
        (fxif . g$7259$1S&e0X)
        (fxfirst-bit-set . g$7181$1S&e0X)
        (fxeven? . g$7244$1S&e0X)
        (fxdiv0-and-mod0 . g$7224$1S&e0X)
        (fxdiv0 . g$7219$1S&e0X)
        (fxdiv-and-mod . g$7214$1S&e0X)
        (fxdiv . g$7207$1S&e0X)
        (fxcopy-bit-field . g$7274$1S&e0X)
        (fxcopy-bit . g$7264$1S&e0X)
        (fxbit-set? . g$7182$1S&e0X)
        (fxbit-field . g$7269$1S&e0X)
        (fxbit-count . g$7175$1S&e0X)
        (fxarithmetic-shift-right . g$7276$1S&e0X)
        (fxarithmetic-shift-left . g$7275$1S&e0X)
        (fxarithmetic-shift . g$7170$1S&e0X)
        (fxand . g$7200$1S&e0X)
        (fx>? . g$7192$1S&e0X)
        (fx>=? . g$7193$1S&e0X)
        (fx=? . g$7189$1S&e0X)
        (fx<? . g$7190$1S&e0X)
        (fx<=? . g$7191$1S&e0X)
        (fx-/carry . g$7253$1S&e0X)
        (fx- . g$7164$1S&e0X)
        (fx+/carry . g$7254$1S&e0X)
        (fx+ . g$7162$1S&e0X)
        (fx*/carry . g$7252$1S&e0X)
        (fx* . g$7163$1S&e0X)
        (greatest-fixnum . g$7133$1S&e0X)
        (least-fixnum . g$7134$1S&e0X)
        (fixnum-width . g$5529$1S&e0X)
        (fixnum? . g$5527$1S&e0X)
        (bitwise-rotate-bit-field . g$7071$1S&e0X)
        (bitwise-reverse-bit-field . g$13591$1S&e0X)
        (bitwise-length . g$7062$1S&e0X)
        (bitwise-if . g$7065$1S&e0X)
        (bitwise-first-bit-set . g$7063$1S&e0X)
        (bitwise-copy-bit-field . g$7068$1S&e0X)
        (bitwise-copy-bit . g$7066$1S&e0X)
        (bitwise-bit-set? . g$7064$1S&e0X)
        (bitwise-bit-field . g$7067$1S&e0X)
        (bitwise-bit-count . g$7061$1S&e0X)
        (bitwise-xor . g$7060$1S&e0X)
        (bitwise-ior . g$7059$1S&e0X)
        (bitwise-and . g$7058$1S&e0X)
        (bitwise-not . g$7057$1S&e0X)
        (bitwise-arithmetic-shift-right . g$7070$1S&e0X)
        (bitwise-arithmetic-shift-left . g$7069$1S&e0X)
        (bitwise-arithmetic-shift . g$13590$1S&e0X)
        (zero? . g$6170$1S&e0X)
        (vector? . g$5522$1S&e0X)
        (vector-set! . g$5538$1S&e0X)
        (vector-ref . g$5537$1S&e0X)
        (vector-map . g$5601$1S&e0X)
        (vector-length . g$13589$1S&e0X)
        (vector-for-each . g$5602$1S&e0X)
        (vector-fill! . g$5539$1S&e0X)
        (vector->list . g$13588$1S&e0X)
        (vector . g$13587$1S&e0X)
        (values . g$13586$1S&e0X)
        (truncate . g$6222$1S&e0X)
        (tan . g$6214$1S&e0X)
        (symbol? . g$5524$1S&e0X)
        (symbol=? . g$5586$1S&e0X)
        (symbol->string . g$13585$1S&e0X)
        (substring . g$13584$1S&e0X)
        (string? . g$13583$1S&e0X)
        (string>? . g$5583$1S&e0X)
        (string>=? . g$5585$1S&e0X)
        (string=? . g$5581$1S&e0X)
        (string<? . g$5582$1S&e0X)
        (string<=? . g$5584$1S&e0X)
        (string-ref . g$13582$1S&e0X)
        (string-length . g$13581$1S&e0X)
        (string-for-each . g$5603$1S&e0X)
        (string-copy . g$13580$1S&e0X)
        (string-append . g$13579$1S&e0X)
        (string->symbol . g$13578$1S&e0X)
        (string->number . g$13577$1S&e0X)
        (string->list . g$13576$1S&e0X)
        (string . g$13575$1S&e0X)
        (sqrt . g$6224$1S&e0X)
        (sin . g$6208$1S&e0X)
        (round . g$6223$1S&e0X)
        (reverse . g$5541$1S&e0X)
        (real? . g$6164$1S&e0X)
        (real-valued? . g$6167$1S&e0X)
        (real-part . g$6201$1S&e0X)
        (rationalize . g$5598$1S&e0X)
        (rational? . g$6165$1S&e0X)
        (rational-valued? . g$6168$1S&e0X)
        (procedure? . g$5526$1S&e0X)
        (positive? . g$6171$1S&e0X)
        (pair? . g$13574$1S&e0X)
        (odd? . g$5571$1S&e0X)
        (numerator . g$6199$1S&e0X)
        (number? . g$6157$1S&e0X)
        (number->string . g$6178$1S&e0X)
        (null? . g$13573$1S&e0X)
        (not . g$13572$1S&e0X)
        (negative? . g$6172$1S&e0X)
        (nan? . g$6158$1S&e0X)
        (min . g$5573$1S&e0X)
        (max . g$5572$1S&e0X)
        (map . g$5184$1S&e0X)
        (make-vector . g$13571$1S&e0X)
        (make-string . g$13570$1S&e0X)
        (make-rectangular . g$6194$1S&e0X)
        (make-polar . g$6195$1S&e0X)
        (magnitude . g$6197$1S&e0X)
        (log . g$6217$1S&e0X)
        (list? . g$13569$1S&e0X)
        (list-tail . g$5164$1S&e0X)
        (list-ref . g$5165$1S&e0X)
        (list->vector . g$5535$1S&e0X)
        (list->string . g$5536$1S&e0X)
        (list . g$13568$1S&e0X)
        (length . g$13567$1S&e0X)
        (lcm . g$5575$1S&e0X)
        (integer? . g$6166$1S&e0X)
        (integer-valued? . g$6169$1S&e0X)
        (integer->char . g$13566$1S&e0X)
        (infinite? . g$6160$1S&e0X)
        (inexact? . g$6162$1S&e0X)
        (inexact . g$6173$1S&e0X)
        (imag-part . g$6202$1S&e0X)
        (gcd . g$5574$1S&e0X)
        (for-each . g$5185$1S&e0X)
        (floor . g$6220$1S&e0X)
        (finite? . g$6159$1S&e0X)
        (expt . g$6226$1S&e0X)
        (exp . g$6207$1S&e0X)
        (exact? . g$6161$1S&e0X)
        (exact-integer-sqrt . g$6225$1S&e0X)
        (exact . g$6174$1S&e0X)
        (even? . g$5570$1S&e0X)
        (error . g$13565$1S&e0X)
        (eqv? . g$13564$1S&e0X)
        (equal? . g$13563$1S&e0X)
        (eq? . g$13562$1S&e0X)
        (dynamic-wind . g$13561$1S&e0X)
        (div0-and-mod0 . g$5534$1S&e0X)
        (mod0 . g$5532$1S&e0X)
        (div0 . g$5530$1S&e0X)
        (div-and-mod . g$5533$1S&e0X)
        (mod . g$5531$1S&e0X)
        (div . g$6218$1S&e0X)
        (denominator . g$6200$1S&e0X)
        (cos . g$6211$1S&e0X)
        (cons . g$13560$1S&e0X)
        (complex? . g$6163$1S&e0X)
        (char? . g$5521$1S&e0X)
        (char>? . g$5595$1S&e0X)
        (char>=? . g$5597$1S&e0X)
        (char=? . g$5593$1S&e0X)
        (char<? . g$5594$1S&e0X)
        (char<=? . g$5596$1S&e0X)
        (char->integer . g$13559$1S&e0X)
        (ceiling . g$6221$1S&e0X)
        (call-with-values . g$13558$1S&e0X)
        (call/cc . g$13557$1S&e0X)
        (call-with-current-continuation . g$13556$1S&e0X)
        (cddddr . g$5569$1S&e0X)
        (cdddar . g$5568$1S&e0X)
        (cddadr . g$5567$1S&e0X)
        (cddaar . g$5566$1S&e0X)
        (cdaddr . g$5565$1S&e0X)
        (cdadar . g$5564$1S&e0X)
        (cdaadr . g$5563$1S&e0X)
        (cdaaar . g$5562$1S&e0X)
        (cadddr . g$5561$1S&e0X)
        (caddar . g$5560$1S&e0X)
        (cadadr . g$5559$1S&e0X)
        (cadaar . g$5558$1S&e0X)
        (caaddr . g$5557$1S&e0X)
        (caadar . g$5556$1S&e0X)
        (caaadr . g$5555$1S&e0X)
        (caaaar . g$5554$1S&e0X)
        (cdddr . g$5553$1S&e0X)
        (cddar . g$5552$1S&e0X)
        (cdadr . g$5551$1S&e0X)
        (cdaar . g$5550$1S&e0X)
        (caddr . g$5549$1S&e0X)
        (cadar . g$5548$1S&e0X)
        (caadr . g$5547$1S&e0X)
        (caaar . g$5546$1S&e0X)
        (cddr . g$5545$1S&e0X)
        (cdar . g$5544$1S&e0X)
        (cadr . g$5543$1S&e0X)
        (caar . g$5542$1S&e0X)
        (cdr . g$13555$1S&e0X)
        (car . g$13554$1S&e0X)
        (boolean? . g$5525$1S&e0X)
        (boolean=? . g$5587$1S&e0X)
        (atan . g$6216$1S&e0X)
        (assertion-violation . g$13553$1S&e0X)
        (asin . g$6209$1S&e0X)
        (apply . g$13552$1S&e0X)
        (append . g$13551$1S&e0X)
        (angle . g$6196$1S&e0X)
        (acos . g$6212$1S&e0X)
        (abs . g$6219$1S&e0X)
        (/ . g$13550$1S&e0X)
        (* . g$13549$1S&e0X)
        (- . g$13548$1S&e0X)
        (+ . g$13547$1S&e0X)
        (>= . g$6193$1S&e0X)
        (> . g$6192$1S&e0X)
        (= . g$6189$1S&e0X)
        (<= . g$6191$1S&e0X)
        (< . g$6190$1S&e0X)
        ($bytevector-set! . g$13546$1S&e0X)
        ($bytevector-ref . g$13545$1S&e0X)
        ($fl>=? . g$13544$1S&e0X)
        ($fl>? . g$13543$1S&e0X)
        ($fl<=? . g$13542$1S&e0X)
        ($fl<? . g$13541$1S&e0X)
        ($fl- . g$13540$1S&e0X)
        ($fl/ . g$13539$1S&e0X)
        ($fl* . g$13538$1S&e0X)
        ($fl+ . g$13537$1S&e0X)
        ($fl=? . g$13536$1S&e0X)
        ($try . g$13535$1S&e0X)
        ($fxarithmetic-shift-right . g$13534$1S&e0X)
        ($fxarithmetic-shift-left . g$13533$1S&e0X)
        ($$fx- . g$13532$1S&e0X)
        ($$fx* . g$13531$1S&e0X)
        ($$fx+ . g$13530$1S&e0X)
        ($fxnot . g$13529$1S&e0X)
        ($fxxor . g$13528$1S&e0X)
        ($fxior . g$13527$1S&e0X)
        ($fxand . g$13526$1S&e0X)
        ($fx>=? . g$13525$1S&e0X)
        ($fx>? . g$13524$1S&e0X)
        ($fx<=? . g$13523$1S&e0X)
        ($fx<? . g$13522$1S&e0X)
        ($fx- . g$13521$1S&e0X)
        ($fxmod0 . g$13520$1S&e0X)
        ($fxdiv0 . g$13519$1S&e0X)
        ($fx* . g$13518$1S&e0X)
        ($fx+ . g$13517$1S&e0X)
        ($fx=? . g$13516$1S&e0X)
        ($vector-set! . g$13515$1S&e0X)
        ($vector-ref . g$13514$1S&e0X)
        ($cdr . g$13513$1S&e0X)
        ($car . g$13512$1S&e0X)
        (make-record-printer . g$13511$1S&e0X)
        (eqv-hash . g$13510$1S&e0X)
        (reverse! . g$13509$1S&e0X)
        (deserialize-port . g$13508$1S&e0X)
        (serialize-port . g$13507$1S&e0X)
        (enum-set? . g$8830$1S&e0X)
        (make-promise . g$6932$1S&e0X)
        (load/unload . g$13309$1S&e0X)
        (load/args . g$13308$1S&e0X)
        (printf . g$8939$1S&e0X)
        (fprintf . g$8940$1S&e0X)
        (format . g$8941$1S&e0X)
        (procedure-form . g$13506$1S&e0X)
        (procedure-environment . g$13505$1S&e0X)
        (procedure-name . g$13504$1S&e0X)
        (procedure-arity . g$13503$1S&e0X)
        (gc-collect . g$13502$1S&e0X)
        (typeof . g$13501$1S&e0X)
        (clr-type? . g$13500$1S&e0X)
        (get-clr-type . g$13499$1S&e0X)
        (get-command-line . g$13498$1S&e0X)
        (vector-append . g$13497$1S&e0X)
        (vector-filter . g$13496$1S&e0X)
        (vector-reverse! . g$13495$1S&e0X)
        (vector-contains? . g$13494$1S&e0X)
        (vector-index-of . g$13493$1S&e0X)
        (vector-copy . g$13492$1S&e0X)
        (vector-binary-search . g$13491$1S&e0X)
        (string-ci-compare . g$13490$1S&e0X)
        (string-compare . g$13489$1S&e0X)
        (string-format . g$13488$1S&e0X)
        (trace-printer . g$13304$1S&e0X)
        (make-traced-procedure . g$13487$1S&e0X)
        (make-traced-macro . g$8961$1S&e0X)
        (assertion-error . g$10283$1S&e0X)
        (time-it . g$13486$1S&e0X)
        (make-parameter . g$8968$1S&e0X)
        (library-locator . g$13485$1S&e0X)
        (get-library-paths . g$13484$1S&e0X)
        (open-tcp-input/output-port . g$13483$1S&e0X)
        (hashtable-for-each . g$13482$1S&e0X)
        (hashtable-map . g$13481$1S&e0X)
        (environment-bindings . g$10261$1S&e0X)
        (environment-symbols . g$10264$1S&e0X)
        (interaction-environment-symbols . g$10260$1S&e0X)
        (optimization-level . g$13480$1S&e0X)
        (library-path . g$9590$1S&e0X)
        (make-compile-time-value . g$9969$1S&e0X)
        (expand->core . g$10270$1S&e0X)
        (expand . g$10268$1S&e0X)
        (emacs-mode? . g$13306$1S&e0X)
        (syntax-transpose . g$10207$1S&e0X)
        (convert->cps . g$9287$1S&e0X)
        (inexact=? . g$13479$1S&e0X)
        (bignum-sqrt-exact . g$13478$1S&e0X)
        (bignum-sqrt . g$13477$1S&e0X)
        (flonum->string . g$13476$1S&e0X)
        (inexact-compare . g$13475$1S&e0X)
        (exact-compare . g$13474$1S&e0X)
        (condition-stacktrace . g$13473$1S&e0X)
        (stacktrace-condition? . g$6652$1S&e0X)
        (make-stacktrace-condition . g$6650$1S&e0X)
        (condition-where . g$13472$1S&e0X)
        (where-condition? . g$6637$1S&e0X)
        (make-where-condition . g$6635$1S&e0X)
        (installed-libraries . g$9611$1S&e0X)
        (uninstall-library . g$9602$1S&e0X)
        (pretty-gensyms . g$9051$1S&e0X)
        (pretty-width . g$9048$1S&e0X)
        (pretty-print . g$9053$1S&e0X)
        (pointer+ . g$13471$1S&e0X)
        (&stacktrace . g$13470$1S&e0X)
        (&where . g$13469$1S&e0X)
        (&no-nans . g$13468$1S&e0X)
        (&no-infinities . g$13467$1S&e0X)
        (&i/o-encoding . g$13466$1S&e0X)
        (&i/o-decoding . g$13465$1S&e0X)
        (&i/o-port . g$13464$1S&e0X)
        (&i/o-file-does-not-exist . g$13463$1S&e0X)
        (&i/o-file-already-exists . g$13462$1S&e0X)
        (&i/o-file-is-read-only . g$13461$1S&e0X)
        (&i/o-file-protection . g$13460$1S&e0X)
        (&i/o-filename . g$13459$1S&e0X)
        (&i/o-invalid-position . g$13458$1S&e0X)
        (&i/o-write . g$13457$1S&e0X)
        (&i/o-read . g$13456$1S&e0X)
        (&i/o . g$13455$1S&e0X)
        (&non-continuable . g$13454$1S&e0X)
        (&undefined . g$13453$1S&e0X)
        (&syntax . g$13452$1S&e0X)
        (&lexical . g$13451$1S&e0X)
        (&implementation-restriction . g$13450$1S&e0X)
        (&who . g$13449$1S&e0X)
        (&irritants . g$13448$1S&e0X)
        (&assertion . g$13447$1S&e0X)
        (&violation . g$13446$1S&e0X)
        (&error . g$13445$1S&e0X)
        (&serious . g$13444$1S&e0X)
        (&warning . g$13443$1S&e0X)
        (&message . g$13442$1S&e0X)
        (&condition . g$13441$1S&e0X)
        (define-condition-type . g$13440$1S&e0X)
        (define-enumeration . g$13439$1S&e0X)
        (define-record-type . g$13438$1S&e0X)
        (parent-rtd . g$13437$1S&e0X)
        (nongenerative . g$13436$1S&e0X)
        (opaque . g$13435$1S&e0X)
        (sealed . g$13434$1S&e0X)
        (protocol . g$13433$1S&e0X)
        (parent . g$13432$1S&e0X)
        (immutable . g$13431$1S&e0X)
        (mutable . g$13430$1S&e0X)
        (fields . g$13429$1S&e0X)
        (error-handling-mode . g$13428$1S&e0X)
        (file-options . g$13427$1S&e0X)
        (buffer-mode . g$13426$1S&e0X)
        (eol-style . g$13425$1S&e0X)
        (guard . g$13424$1S&e0X)
        (trace-letrec-syntax . g$13423$1S&e0X)
        (trace-let-syntax . g$13422$1S&e0X)
        (trace-define-syntax . g$13421$1S&e0X)
        (trace-define . g$13420$1S&e0X)
        (trace-lambda . g$13419$1S&e0X)
        (unsyntax-splicing . g$13418$1S&e0X)
        (unsyntax . g$13417$1S&e0X)
        (unquote-splicing . g$13416$1S&e0X)
        (unquote . g$13415$1S&e0X)
        (_ . g$13414$1S&e0X)
        (else . g$13413$1S&e0X)
        (=> . g$13412$1S&e0X)
        (... . g$13411$1S&e0X)
        (assert . g$13410$1S&e0X)
        (endianness . g$13409$1S&e0X)
        (delay . g$13408$1S&e0X)
        (time . g$13407$1S&e0X)
        (or . g$13406$1S&e0X)
        (and . g$13405$1S&e0X)
        (do . g$13404$1S&e0X)
        (cond . g$13403$1S&e0X)
        (let* . g$13402$1S&e0X)
        (let . g$13401$1S&e0X)
        (identifier-syntax . g$13400$1S&e0X)
        (with-syntax . g$13399$1S&e0X)
        (quasisyntax . g$13398$1S&e0X)
        (quasiquote . g$13397$1S&e0X)
        (syntax-rules . g$13396$1S&e0X)
        (include-into . g$13395$1S&e0X)
        (include . g$13394$1S&e0X)
        (define-struct . g$13393$1S&e0X)
        (let-values . g$13392$1S&e0X)
        (let*-values . g$13391$1S&e0X)
        (record-constructor-descriptor . g$13390$1S&e0X)
        (record-type-descriptor . g$13389$1S&e0X)
        (fluid-let-syntax . g$13388$1S&e0X)
        (case . g$13387$1S&e0X)
        (parameterize . g$13386$1S&e0X)
        (unless . g$13385$1S&e0X)
        (when . g$13384$1S&e0X)
        (if . g$13383$1S&e0X)
        (letrec* . g$13382$1S&e0X)
        (letrec . g$13381$1S&e0X)
        (type-descriptor . g$13380$1S&e0X)
        (case-lambda . g$13379$1S&e0X)
        (lambda . g$13378$1S&e0X)
        (syntax . g$13377$1S&e0X)
        (syntax-case . g$13376$1S&e0X)
        (quote . g$13375$1S&e0X)
        (foreign-call . g$13374$1S&e0X)
        (letrec-syntax . g$13373$1S&e0X)
        (let-syntax . g$13372$1S&e0X)
        (set! . g$13371$1S&e0X)
        (export . g$13370$1S&e0X)
        (import . g$13369$1S&e0X)
        (library . g$13368$1S&e0X)
        (begin . g$13367$1S&e0X)
        (module . g$13366$1S&e0X)
        (define-syntax . g$13365$1S&e0X)
        (define . g$13364$1S&e0X))
      '((g$10164$1S&e0X core-prim . ellipsis-map)
        (g$6655$1S&e0X core-prim . &stacktrace-rcd)
        (g$6654$1S&e0X core-prim . &stacktrace-rtd)
        (g$6640$1S&e0X core-prim . &where-rcd)
        (g$6639$1S&e0X core-prim . &where-rtd)
        (g$6914$1S&e0X core-prim . &no-nans-rcd)
        (g$6913$1S&e0X core-prim . &no-nans-rtd)
        (g$6901$1S&e0X core-prim . &no-infinities-rcd)
        (g$6900$1S&e0X core-prim . &no-infinities-rtd)
        (g$6888$1S&e0X core-prim . &i/o-encoding-rcd)
        (g$6887$1S&e0X core-prim . &i/o-encoding-rtd)
        (g$6873$1S&e0X core-prim . &i/o-decoding-rcd)
        (g$6872$1S&e0X core-prim . &i/o-decoding-rtd)
        (g$6860$1S&e0X core-prim . &i/o-port-rcd)
        (g$6859$1S&e0X core-prim . &i/o-port-rtd)
        (g$6845$1S&e0X core-prim . &i/o-file-does-not-exist-rcd)
        (g$6844$1S&e0X core-prim . &i/o-file-does-not-exist-rtd)
        (g$6832$1S&e0X core-prim . &i/o-file-already-exists-rcd)
        (g$6831$1S&e0X core-prim . &i/o-file-already-exists-rtd)
        (g$6819$1S&e0X core-prim . &i/o-file-is-read-only-rcd)
        (g$6818$1S&e0X core-prim . &i/o-file-is-read-only-rtd)
        (g$6806$1S&e0X core-prim . &i/o-file-protection-rcd)
        (g$6805$1S&e0X core-prim . &i/o-file-protection-rtd)
        (g$6793$1S&e0X core-prim . &i/o-filename-rcd)
        (g$6792$1S&e0X core-prim . &i/o-filename-rtd)
        (g$6778$1S&e0X core-prim . &i/o-invalid-position-rcd)
        (g$6777$1S&e0X core-prim . &i/o-invalid-position-rtd)
        (g$6763$1S&e0X core-prim . &i/o-write-rcd)
        (g$6762$1S&e0X core-prim . &i/o-write-rtd)
        (g$6750$1S&e0X core-prim . &i/o-read-rcd)
        (g$6749$1S&e0X core-prim . &i/o-read-rtd)
        (g$6737$1S&e0X core-prim . &i/o-rcd)
        (g$6736$1S&e0X core-prim . &i/o-rtd)
        (g$6724$1S&e0X core-prim . &undefined-rcd)
        (g$6723$1S&e0X core-prim . &undefined-rtd)
        (g$6711$1S&e0X core-prim . &syntax-rcd)
        (g$6710$1S&e0X core-prim . &syntax-rtd)
        (g$6694$1S&e0X core-prim . &lexical-rcd)
        (g$6693$1S&e0X core-prim . &lexical-rtd)
        (g$6681$1S&e0X core-prim . &implementation-restriction-rcd)
        (g$6680$1S&e0X core-prim . &implementation-restriction-rtd)
        (g$6668$1S&e0X core-prim . &non-continuable-rcd)
        (g$6667$1S&e0X core-prim . &non-continuable-rtd)
        (g$6625$1S&e0X core-prim . &who-rcd)
        (g$6624$1S&e0X core-prim . &who-rtd)
        (g$6610$1S&e0X core-prim . &irritants-rcd)
        (g$6609$1S&e0X core-prim . &irritants-rtd)
        (g$6595$1S&e0X core-prim . &assertion-rcd)
        (g$6594$1S&e0X core-prim . &assertion-rtd)
        (g$6582$1S&e0X core-prim . &violation-rcd)
        (g$6581$1S&e0X core-prim . &violation-rtd)
        (g$6569$1S&e0X core-prim . &error-rcd)
        (g$6568$1S&e0X core-prim . &error-rtd)
        (g$6556$1S&e0X core-prim . &serious-rcd)
        (g$6555$1S&e0X core-prim . &serious-rtd)
        (g$6543$1S&e0X core-prim . &warning-rcd)
        (g$6542$1S&e0X core-prim . &warning-rtd)
        (g$6530$1S&e0X core-prim . &message-rcd)
        (g$6529$1S&e0X core-prim . &message-rtd)
        (g$6490$1S&e0X core-prim . &condition-rcd)
        (g$6489$1S&e0X core-prim . &condition-rtd)
        (g$13752$1S&e0X core-prim . library-letrec*)
        (g$13751$1S&e0X core-prim . annotation-stripped)
        (g$13750$1S&e0X core-prim . annotation-source)
        (g$13749$1S&e0X core-prim . annotation-expression)
        (g$13748$1S&e0X core-prim . annotation?)
        (g$13747$1S&e0X core-prim . read-annotated)
        (g$6215$1S&e0X core-prim . tanh)
        (g$6213$1S&e0X core-prim . cosh)
        (g$6210$1S&e0X core-prim . sinh)
        (g$13746$1S&e0X core-prim . make-guid)
        (g$13745$1S&e0X core-prim . unspecified?)
        (g$5167$1S&e0X core-prim . make-list)
        (g$5166$1S&e0X core-prim . last-pair)
        (g$13744$1S&e0X core-prim . load-r5rs)
        (g$13743$1S&e0X core-prim . license)
        (g$13742$1S&e0X core-prim . stacktrace)
        (g$13311$1S&e0X core-prim . ironscheme-test)
        (g$13312$1S&e0X core-prim . ironscheme-build)
        (g$13741$1S&e0X core-prim . pinvoke-call-internal)
        (g$13740$1S&e0X core-prim . ffi-callback-internal)
        (g$13739$1S&e0X core-prim . ffi-callout-internal)
        (g$13738$1S&e0X core-prim . define-clr-class-internal)
        (g$13737$1S&e0X core-prim . clr-field-set!-internal)
        (g$13736$1S&e0X core-prim . clr-field-get-internal)
        (g$13735$1S&e0X core-prim . clr-cast-internal)
        (g$13734$1S&e0X core-prim . clr-call-internal)
        (g$13733$1S&e0X core-prim . clr-new-internal)
        (g$13732$1S&e0X core-prim . clr-new-array-internal)
        (g$13731$1S&e0X core-prim . clr-is-internal)
        (g$13730$1S&e0X core-prim . clr-reference-internal)
        (g$13729$1S&e0X core-prim . clr-using-internal)
        (g$10284$1S&e0X core-prim . syntax-error)
        (g$10159$1S&e0X core-prim . syntax-dispatch)
        (g$13728$1S&e0X core-prim . compile-core)
        (g$13727$1S&e0X core-prim . eval-core)
        (g$13726$1S&e0X core-prim . remove-location)
        (g$13725$1S&e0X core-prim . set-symbol-value!)
        (g$13724$1S&e0X core-prim . symbol-value)
        (g$13723$1S&e0X core-prim . symbol-bound?)
        (g$13722$1S&e0X core-prim . ungensym)
        (g$13721$1S&e0X core-prim . gensym)
        (g$13720$1S&e0X core-prim . void)
        (g$13719$1S&e0X core-prim . load-serialized-library)
        (g$13718$1S&e0X core-prim . serialize-library)
        (g$13316$1S&e0X core-prim . compile-system-libraries)
        (g$13318$1S&e0X core-prim . compile->closure)
        (g$13317$1S&e0X core-prim . compile)
        (g$13310$1S&e0X core-prim . load)
        (g$13717$1S&e0X core-prim . string-normalize)
        (g$10293$1S&e0X core-prim . new-interaction-environment)
        (g$10294$1S&e0X core-prim . interaction-environment)
        (g$13716$1S&e0X core-prim . char-ready?)
        (g$13715$1S&e0X core-prim . string-upcase)
        (g$13714$1S&e0X core-prim . string-titlecase)
        (g$6997$1S&e0X core-prim . string-normalize-nfkd)
        (g$6996$1S&e0X core-prim . string-normalize-nfkc)
        (g$6995$1S&e0X core-prim . string-normalize-nfd)
        (g$6994$1S&e0X core-prim . string-normalize-nfc)
        (g$13713$1S&e0X core-prim . string-foldcase)
        (g$13712$1S&e0X core-prim . string-downcase)
        (g$6981$1S&e0X core-prim . string-ci>?)
        (g$6983$1S&e0X core-prim . string-ci>=?)
        (g$6979$1S&e0X core-prim . string-ci=?)
        (g$6980$1S&e0X core-prim . string-ci<?)
        (g$6982$1S&e0X core-prim . string-ci<=?)
        (g$13711$1S&e0X core-prim . char-whitespace?)
        (g$13710$1S&e0X core-prim . char-upper-case?)
        (g$13709$1S&e0X core-prim . char-title-case?)
        (g$13708$1S&e0X core-prim . char-numeric?)
        (g$13707$1S&e0X core-prim . char-lower-case?)
        (g$13706$1S&e0X core-prim . char-general-category)
        (g$13705$1S&e0X core-prim . char-upcase)
        (g$13704$1S&e0X core-prim . char-titlecase)
        (g$13703$1S&e0X core-prim . char-foldcase)
        (g$13702$1S&e0X core-prim . char-downcase)
        (g$6991$1S&e0X core-prim . char-ci>?)
        (g$6993$1S&e0X core-prim . char-ci>=?)
        (g$6989$1S&e0X core-prim . char-ci=?)
        (g$6990$1S&e0X core-prim . char-ci<?)
        (g$6992$1S&e0X core-prim . char-ci<=?)
        (g$13701$1S&e0X core-prim . char-alphabetic?)
        (g$9971$1S&e0X core-prim . variable-transformer-procedure)
        (g$9970$1S&e0X core-prim . variable-transformer?)
        (g$9968$1S&e0X core-prim . make-variable-transformer)
        (g$10288$1S&e0X core-prim . identifier?)
        (g$10277$1S&e0X core-prim . generate-temporaries)
        (g$10278$1S&e0X core-prim . free-identifier=?)
        (g$10290$1S&e0X core-prim . syntax->datum)
        (g$10289$1S&e0X core-prim . datum->syntax)
        (g$10279$1S&e0X core-prim . bound-identifier=?)
        (g$13700$1S&e0X core-prim . record-type-descriptor?)
        (g$13699$1S&e0X core-prim . record-predicate)
        (g$13698$1S&e0X core-prim . record-mutator)
        (g$13697$1S&e0X core-prim . record-constructor)
        (g$13696$1S&e0X core-prim . record-accessor)
        (g$13695$1S&e0X core-prim . make-record-type-descriptor)
        (g$13694$1S&e0X core-prim . make-record-constructor-descriptor)
        (g$13693$1S&e0X core-prim . record?)
        (g$13692$1S&e0X core-prim . record-type-uid)
        (g$13691$1S&e0X core-prim . record-type-sealed?)
        (g$13690$1S&e0X core-prim . record-type-parent)
        (g$13689$1S&e0X core-prim . record-type-opaque?)
        (g$13688$1S&e0X core-prim . record-type-name)
        (g$13687$1S&e0X core-prim . record-type-generative?)
        (g$13686$1S&e0X core-prim . record-type-field-names)
        (g$13685$1S&e0X core-prim . record-rtd)
        (g$13684$1S&e0X core-prim . record-field-mutable?)
        (g$5835$1S&e0X core-prim . delete-file)
        (g$5834$1S&e0X core-prim . file-exists?)
        (g$13683$1S&e0X core-prim . vector-sort!)
        (g$13682$1S&e0X core-prim . vector-sort)
        (g$6950$1S&e0X core-prim . list-sort)
        (g$5805$1S&e0X core-prim . symbol-hash)
        (g$5804$1S&e0X core-prim . string-ci-hash)
        (g$5803$1S&e0X core-prim . string-hash)
        (g$13681$1S&e0X core-prim . equal-hash)
        (g$13680$1S&e0X core-prim . hashtable-equivalence-function)
        (g$13679$1S&e0X core-prim . make-hashtable)
        (g$13678$1S&e0X core-prim . hashtable-hash-function)
        (g$5795$1S&e0X core-prim . make-eqv-hashtable)
        (g$5794$1S&e0X core-prim . make-eq-hashtable)
        (g$5793$1S&e0X core-prim . hashtable?)
        (g$5801$1S&e0X core-prim . hashtable-update!)
        (g$5796$1S&e0X core-prim . hashtable-size)
        (g$5798$1S&e0X core-prim . hashtable-set!)
        (g$5797$1S&e0X core-prim . hashtable-ref)
        (g$13677$1S&e0X core-prim . hashtable-mutable?)
        (g$13676$1S&e0X core-prim . hashtable-keys)
        (g$13675$1S&e0X core-prim . hashtable-entries)
        (g$5799$1S&e0X core-prim . hashtable-delete!)
        (g$13674$1S&e0X core-prim . hashtable-copy)
        (g$5800$1S&e0X core-prim . hashtable-contains?)
        (g$5802$1S&e0X core-prim . hashtable-clear!)
        (g$8792$1S&e0X core-prim . call-with-output-file)
        (g$8791$1S&e0X core-prim . call-with-input-file)
        (g$8783$1S&e0X core-prim . write-char)
        (g$13673$1S&e0X core-prim . write)
        (g$8790$1S&e0X core-prim . with-output-to-file)
        (g$8789$1S&e0X core-prim . with-input-from-file)
        (g$8782$1S&e0X core-prim . read-char)
        (g$13672$1S&e0X core-prim . read)
        (g$8781$1S&e0X core-prim . peek-char)
        (g$13671$1S&e0X core-prim . open-output-file)
        (g$13670$1S&e0X core-prim . open-input-file)
        (g$8793$1S&e0X core-prim . newline)
        (g$13669$1S&e0X core-prim . display)
        (g$13668$1S&e0X core-prim . close-output-port)
        (g$13667$1S&e0X core-prim . close-input-port)
        (g$13666$1S&e0X core-prim . eof-object?)
        (g$13665$1S&e0X core-prim . eof-object)
        (g$13664$1S&e0X core-prim . current-error-port)
        (g$13663$1S&e0X core-prim . current-output-port)
        (g$13662$1S&e0X core-prim . current-input-port)
        (g$13661$1S&e0X core-prim . output-port?)
        (g$13660$1S&e0X core-prim . input-port?)
        (g$13659$1S&e0X core-prim . utf-8-codec)
        (g$13658$1S&e0X core-prim . utf-16-codec)
        (g$13657$1S&e0X core-prim . transcoder-error-handling-mode)
        (g$13656$1S&e0X core-prim . transcoder-eol-style)
        (g$13655$1S&e0X core-prim . transcoder-codec)
        (g$13654$1S&e0X core-prim . transcoded-port)
        (g$13653$1S&e0X core-prim . textual-port?)
        (g$13652$1S&e0X core-prim . string->bytevector)
        (g$8757$1S&e0X core-prim . standard-output-port)
        (g$8756$1S&e0X core-prim . standard-input-port)
        (g$8755$1S&e0X core-prim . standard-error-port)
        (g$13651$1S&e0X core-prim . set-port-position!)
        (g$13650$1S&e0X core-prim . put-u8)
        (g$13649$1S&e0X core-prim . put-string)
        (g$8760$1S&e0X core-prim . put-datum)
        (g$13648$1S&e0X core-prim . put-char)
        (g$13647$1S&e0X core-prim . put-bytevector)
        (g$8765$1S&e0X core-prim . port?)
        (g$13646$1S&e0X core-prim . port-transcoder)
        (g$13645$1S&e0X core-prim . port-position)
        (g$13644$1S&e0X core-prim . port-has-set-port-position!?)
        (g$13643$1S&e0X core-prim . port-has-port-position?)
        (g$13642$1S&e0X core-prim . port-eof?)
        (g$13641$1S&e0X core-prim . output-port-buffer-mode)
        (g$8764$1S&e0X core-prim . open-string-output-port)
        (g$13640$1S&e0X core-prim . open-string-input-port)
        (g$13639$1S&e0X core-prim . open-file-output-port)
        (g$13638$1S&e0X core-prim . open-file-input/output-port)
        (g$13637$1S&e0X core-prim . open-file-input-port)
        (g$13636$1S&e0X core-prim . open-bytevector-output-port)
        (g$13635$1S&e0X core-prim . open-bytevector-input-port)
        (g$13634$1S&e0X core-prim . native-transcoder)
        (g$8758$1S&e0X core-prim . native-eol-style)
        (g$13633$1S&e0X core-prim . make-transcoder)
        (g$13632$1S&e0X core-prim . latin-1-codec)
        (g$6760$1S&e0X core-prim . make-i/o-write-error)
        (g$6747$1S&e0X core-prim . make-i/o-read-error)
        (g$6855$1S&e0X core-prim . make-i/o-port-error)
        (g$6773$1S&e0X core-prim . make-i/o-invalid-position-error)
        (g$6788$1S&e0X core-prim . make-i/o-filename-error)
        (g$6803$1S&e0X core-prim . make-i/o-file-protection-error)
        (g$6816$1S&e0X core-prim . make-i/o-file-is-read-only-error)
        (g$6842$1S&e0X core-prim . make-i/o-file-does-not-exist-error)
        (g$6829$1S&e0X core-prim . make-i/o-file-already-exists-error)
        (g$6734$1S&e0X core-prim . make-i/o-error)
        (g$6883$1S&e0X core-prim . make-i/o-encoding-error)
        (g$6870$1S&e0X core-prim . make-i/o-decoding-error)
        (g$13631$1S&e0X core-prim . make-custom-textual-output-port)
        (g$13630$1S&e0X
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13629$1S&e0X core-prim . make-custom-textual-input-port)
        (g$13628$1S&e0X core-prim . make-custom-binary-output-port)
        (g$13627$1S&e0X
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$13626$1S&e0X core-prim . make-custom-binary-input-port)
        (g$5855$1S&e0X core-prim . make-bytevector)
        (g$13625$1S&e0X core-prim . lookahead-u8)
        (g$13624$1S&e0X core-prim . lookahead-char)
        (g$6761$1S&e0X core-prim . i/o-write-error?)
        (g$6748$1S&e0X core-prim . i/o-read-error?)
        (g$6857$1S&e0X core-prim . i/o-port-error?)
        (g$6775$1S&e0X core-prim . i/o-invalid-position-error?)
        (g$6776$1S&e0X core-prim . i/o-error-position)
        (g$6790$1S&e0X core-prim . i/o-filename-error?)
        (g$6804$1S&e0X core-prim . i/o-file-protection-error?)
        (g$6817$1S&e0X core-prim . i/o-file-is-read-only-error?)
        (g$6843$1S&e0X core-prim . i/o-file-does-not-exist-error?)
        (g$6830$1S&e0X core-prim . i/o-file-already-exists-error?)
        (g$6735$1S&e0X core-prim . i/o-error?)
        (g$6858$1S&e0X core-prim . i/o-error-port)
        (g$6791$1S&e0X core-prim . i/o-error-filename)
        (g$6885$1S&e0X core-prim . i/o-encoding-error?)
        (g$6886$1S&e0X core-prim . i/o-encoding-error-char)
        (g$6871$1S&e0X core-prim . i/o-decoding-error?)
        (g$13623$1S&e0X core-prim . get-u8)
        (g$13622$1S&e0X core-prim . get-string-n!)
        (g$13621$1S&e0X core-prim . get-string-n)
        (g$13620$1S&e0X core-prim . get-string-all)
        (g$13619$1S&e0X core-prim . get-line)
        (g$8761$1S&e0X core-prim . get-datum)
        (g$13618$1S&e0X core-prim . get-char)
        (g$13617$1S&e0X core-prim . get-bytevector-some)
        (g$13616$1S&e0X core-prim . get-bytevector-n!)
        (g$13615$1S&e0X core-prim . get-bytevector-n)
        (g$13614$1S&e0X core-prim . get-bytevector-all)
        (g$13613$1S&e0X core-prim . flush-output-port)
        (g$13612$1S&e0X core-prim . close-port)
        (g$8766$1S&e0X core-prim . call-with-string-output-port)
        (g$8767$1S&e0X core-prim . call-with-port)
        (g$13611$1S&e0X core-prim . call-with-bytevector-output-port)
        (g$13610$1S&e0X core-prim . bytevector->string)
        (g$8759$1S&e0X core-prim . buffer-mode?)
        (g$13609$1S&e0X core-prim . binary-port?)
        (g$10267$1S&e0X core-prim . scheme-report-environment)
        (g$6929$1S&e0X core-prim . quotient)
        (g$10266$1S&e0X core-prim . null-environment)
        (g$6930$1S&e0X core-prim . remainder)
        (g$6931$1S&e0X core-prim . modulo)
        (g$6926$1S&e0X core-prim . inexact->exact)
        (g$6933$1S&e0X core-prim . force)
        (g$6927$1S&e0X core-prim . exact->inexact)
        (g$13608$1S&e0X core-prim . exit)
        (g$13305$1S&e0X core-prim . command-line)
        (g$13607$1S&e0X core-prim . string-fill!)
        (g$13606$1S&e0X core-prim . string-set!)
        (g$13605$1S&e0X core-prim . set-cdr!)
        (g$13604$1S&e0X core-prim . set-car!)
        (g$5189$1S&e0X core-prim . remove)
        (g$5190$1S&e0X core-prim . remv)
        (g$5170$1S&e0X core-prim . remp)
        (g$5191$1S&e0X core-prim . remq)
        (g$5169$1S&e0X core-prim . partition)
        (g$5177$1S&e0X core-prim . memv)
        (g$5176$1S&e0X core-prim . memq)
        (g$5179$1S&e0X core-prim . memp)
        (g$5178$1S&e0X core-prim . member)
        (g$5183$1S&e0X core-prim . exists)
        (g$5182$1S&e0X core-prim . for-all)
        (g$5188$1S&e0X core-prim . fold-right)
        (g$5187$1S&e0X core-prim . fold-left)
        (g$5168$1S&e0X core-prim . find)
        (g$5171$1S&e0X core-prim . filter)
        (g$5186$1S&e0X core-prim . cons*)
        (g$5173$1S&e0X core-prim . assv)
        (g$5172$1S&e0X core-prim . assq)
        (g$5175$1S&e0X core-prim . assp)
        (g$5174$1S&e0X core-prim . assoc)
        (g$13603$1S&e0X core-prim . with-exception-handler)
        (g$13602$1S&e0X core-prim . raise-continuable)
        (g$13601$1S&e0X core-prim . raise)
        (g$10269$1S&e0X core-prim . eval)
        (g$10265$1S&e0X core-prim . environment)
        (g$8853$1S&e0X core-prim . make-enumeration)
        (g$8860$1S&e0X core-prim . enum-set=?)
        (g$8854$1S&e0X core-prim . enum-set-universe)
        (g$8861$1S&e0X core-prim . enum-set-union)
        (g$8859$1S&e0X core-prim . enum-set-subset?)
        (g$8865$1S&e0X core-prim . enum-set-projection)
        (g$8858$1S&e0X core-prim . enum-set-member?)
        (g$8862$1S&e0X core-prim . enum-set-intersection)
        (g$8855$1S&e0X core-prim . enum-set-indexer)
        (g$8863$1S&e0X core-prim . enum-set-difference)
        (g$8856$1S&e0X core-prim . enum-set-constructor)
        (g$8864$1S&e0X core-prim . enum-set-complement)
        (g$8857$1S&e0X core-prim . enum-set->list)
        (g$6622$1S&e0X core-prim . who-condition?)
        (g$6541$1S&e0X core-prim . warning?)
        (g$6580$1S&e0X core-prim . violation?)
        (g$6722$1S&e0X core-prim . undefined-violation?)
        (g$6707$1S&e0X core-prim . syntax-violation?)
        (g$6709$1S&e0X core-prim . syntax-violation-subform)
        (g$6708$1S&e0X core-prim . syntax-violation-form)
        (g$10287$1S&e0X core-prim . syntax-violation)
        (g$13600$1S&e0X core-prim . simple-conditions)
        (g$6554$1S&e0X core-prim . serious-condition?)
        (g$6666$1S&e0X core-prim . non-continuable-violation?)
        (g$6527$1S&e0X core-prim . message-condition?)
        (g$6620$1S&e0X core-prim . make-who-condition)
        (g$6540$1S&e0X core-prim . make-warning)
        (g$6579$1S&e0X core-prim . make-violation)
        (g$6721$1S&e0X core-prim . make-undefined-violation)
        (g$6704$1S&e0X core-prim . make-syntax-violation)
        (g$6553$1S&e0X core-prim . make-serious-condition)
        (g$6665$1S&e0X core-prim . make-non-continuable-violation)
        (g$6525$1S&e0X core-prim . make-message-condition)
        (g$6691$1S&e0X core-prim . make-lexical-violation)
        (g$6605$1S&e0X core-prim . make-irritants-condition)
        (g$6678$1S&e0X
          core-prim
          .
          make-implementation-restriction-violation)
        (g$6566$1S&e0X core-prim . make-error)
        (g$6592$1S&e0X core-prim . make-assertion-violation)
        (g$6692$1S&e0X core-prim . lexical-violation?)
        (g$6607$1S&e0X core-prim . irritants-condition?)
        (g$6679$1S&e0X
          core-prim
          .
          implementation-restriction-violation?)
        (g$6567$1S&e0X core-prim . error?)
        (g$6623$1S&e0X core-prim . condition-who)
        (g$13599$1S&e0X core-prim . condition-predicate)
        (g$6528$1S&e0X core-prim . condition-message)
        (g$6608$1S&e0X core-prim . condition-irritants)
        (g$13598$1S&e0X core-prim . condition-accessor)
        (g$13597$1S&e0X core-prim . condition)
        (g$6593$1S&e0X core-prim . assertion-violation?)
        (g$13596$1S&e0X core-prim . condition?)
        (g$5873$1S&e0X core-prim . utf32->string)
        (g$5872$1S&e0X core-prim . utf16->string)
        (g$5870$1S&e0X core-prim . utf8->string)
        (g$5874$1S&e0X core-prim . uint-list->bytevector)
        (g$5866$1S&e0X core-prim . u8-list->bytevector)
        (g$5867$1S&e0X core-prim . string->utf8)
        (g$5869$1S&e0X core-prim . string->utf32)
        (g$5868$1S&e0X core-prim . string->utf16)
        (g$5875$1S&e0X core-prim . sint-list->bytevector)
        (g$5841$1S&e0X core-prim . native-endianness)
        (g$5523$1S&e0X core-prim . bytevector?)
        (g$5857$1S&e0X core-prim . bytevector=?)
        (g$13595$1S&e0X core-prim . bytevector-uint-set!)
        (g$13594$1S&e0X core-prim . bytevector-uint-ref)
        (g$5862$1S&e0X core-prim . bytevector-u8-set!)
        (g$5861$1S&e0X core-prim . bytevector-u8-ref)
        (g$5903$1S&e0X core-prim . bytevector-u64-set!)
        (g$5899$1S&e0X core-prim . bytevector-u64-ref)
        (g$5905$1S&e0X core-prim . bytevector-u64-native-set!)
        (g$5901$1S&e0X core-prim . bytevector-u64-native-ref)
        (g$5895$1S&e0X core-prim . bytevector-u32-set!)
        (g$5891$1S&e0X core-prim . bytevector-u32-ref)
        (g$5897$1S&e0X core-prim . bytevector-u32-native-set!)
        (g$5893$1S&e0X core-prim . bytevector-u32-native-ref)
        (g$5887$1S&e0X core-prim . bytevector-u16-set!)
        (g$5883$1S&e0X core-prim . bytevector-u16-ref)
        (g$5889$1S&e0X core-prim . bytevector-u16-native-set!)
        (g$5885$1S&e0X core-prim . bytevector-u16-native-ref)
        (g$13593$1S&e0X core-prim . bytevector-sint-set!)
        (g$13592$1S&e0X core-prim . bytevector-sint-ref)
        (g$5864$1S&e0X core-prim . bytevector-s8-set!)
        (g$5863$1S&e0X core-prim . bytevector-s8-ref)
        (g$5904$1S&e0X core-prim . bytevector-s64-set!)
        (g$5900$1S&e0X core-prim . bytevector-s64-ref)
        (g$5906$1S&e0X core-prim . bytevector-s64-native-set!)
        (g$5902$1S&e0X core-prim . bytevector-s64-native-ref)
        (g$5896$1S&e0X core-prim . bytevector-s32-set!)
        (g$5892$1S&e0X core-prim . bytevector-s32-ref)
        (g$5898$1S&e0X core-prim . bytevector-s32-native-set!)
        (g$5894$1S&e0X core-prim . bytevector-s32-native-ref)
        (g$5888$1S&e0X core-prim . bytevector-s16-set!)
        (g$5884$1S&e0X core-prim . bytevector-s16-ref)
        (g$5890$1S&e0X core-prim . bytevector-s16-native-set!)
        (g$5886$1S&e0X core-prim . bytevector-s16-native-ref)
        (g$5856$1S&e0X core-prim . bytevector-length)
        (g$5881$1S&e0X core-prim . bytevector-ieee-single-set!)
        (g$5879$1S&e0X core-prim . bytevector-ieee-single-ref)
        (g$5909$1S&e0X core-prim . bytevector-ieee-single-native-set!)
        (g$5907$1S&e0X core-prim . bytevector-ieee-single-native-ref)
        (g$5882$1S&e0X core-prim . bytevector-ieee-double-set!)
        (g$5880$1S&e0X core-prim . bytevector-ieee-double-ref)
        (g$5910$1S&e0X core-prim . bytevector-ieee-double-native-set!)
        (g$5908$1S&e0X core-prim . bytevector-ieee-double-native-ref)
        (g$5858$1S&e0X core-prim . bytevector-fill!)
        (g$5859$1S&e0X core-prim . bytevector-copy!)
        (g$5860$1S&e0X core-prim . bytevector-copy)
        (g$5876$1S&e0X core-prim . bytevector->uint-list)
        (g$5865$1S&e0X core-prim . bytevector->u8-list)
        (g$5877$1S&e0X core-prim . bytevector->sint-list)
        (g$6912$1S&e0X core-prim . no-nans-violation?)
        (g$6899$1S&e0X core-prim . no-infinities-violation?)
        (g$6911$1S&e0X core-prim . make-no-nans-violation)
        (g$6898$1S&e0X core-prim . make-no-infinities-violation)
        (g$6155$1S&e0X core-prim . real->flonum)
        (g$8197$1S&e0X core-prim . flzero?)
        (g$8192$1S&e0X core-prim . fltruncate)
        (g$8178$1S&e0X core-prim . fltan)
        (g$8183$1S&e0X core-prim . flsqrt)
        (g$8176$1S&e0X core-prim . flsin)
        (g$8193$1S&e0X core-prim . flround)
        (g$8195$1S&e0X core-prim . flpositive?)
        (g$5528$1S&e0X core-prim . flonum?)
        (g$8199$1S&e0X core-prim . flodd?)
        (g$8142$1S&e0X core-prim . flnumerator)
        (g$8196$1S&e0X core-prim . flnegative?)
        (g$8175$1S&e0X core-prim . flnan?)
        (g$8160$1S&e0X core-prim . flmod0)
        (g$8159$1S&e0X core-prim . flmod)
        (g$8201$1S&e0X core-prim . flmin)
        (g$8200$1S&e0X core-prim . flmax)
        (g$8182$1S&e0X core-prim . fllog)
        (g$8168$1S&e0X core-prim . flinteger?)
        (g$8174$1S&e0X core-prim . flinfinite?)
        (g$8191$1S&e0X core-prim . flfloor)
        (g$8169$1S&e0X core-prim . flfinite?)
        (g$8185$1S&e0X core-prim . flexpt)
        (g$8184$1S&e0X core-prim . flexp)
        (g$8198$1S&e0X core-prim . fleven?)
        (g$8167$1S&e0X core-prim . fldiv0-and-mod0)
        (g$8154$1S&e0X core-prim . fldiv0)
        (g$8161$1S&e0X core-prim . fldiv-and-mod)
        (g$8166$1S&e0X core-prim . fldiv)
        (g$8141$1S&e0X core-prim . fldenominator)
        (g$8177$1S&e0X core-prim . flcos)
        (g$8186$1S&e0X core-prim . flceiling)
        (g$8181$1S&e0X core-prim . flatan)
        (g$8179$1S&e0X core-prim . flasin)
        (g$8180$1S&e0X core-prim . flacos)
        (g$8194$1S&e0X core-prim . flabs)
        (g$8148$1S&e0X core-prim . fl>?)
        (g$8149$1S&e0X core-prim . fl>=?)
        (g$8145$1S&e0X core-prim . fl=?)
        (g$8146$1S&e0X core-prim . fl<?)
        (g$8147$1S&e0X core-prim . fl<=?)
        (g$8144$1S&e0X core-prim . fl/)
        (g$8143$1S&e0X core-prim . fl-)
        (g$8139$1S&e0X core-prim . fl+)
        (g$8140$1S&e0X core-prim . fl*)
        (g$6156$1S&e0X core-prim . fixnum->flonum)
        (g$7239$1S&e0X core-prim . fxzero?)
        (g$7202$1S&e0X core-prim . fxxor)
        (g$7277$1S&e0X core-prim . fxrotate-bit-field)
        (g$7278$1S&e0X core-prim . fxreverse-bit-field)
        (g$7229$1S&e0X core-prim . fxpositive?)
        (g$7249$1S&e0X core-prim . fxodd?)
        (g$7183$1S&e0X core-prim . fxnot)
        (g$7234$1S&e0X core-prim . fxnegative?)
        (g$7213$1S&e0X core-prim . fxmod0)
        (g$7212$1S&e0X core-prim . fxmod)
        (g$7251$1S&e0X core-prim . fxmin)
        (g$7250$1S&e0X core-prim . fxmax)
        (g$7180$1S&e0X core-prim . fxlength)
        (g$7201$1S&e0X core-prim . fxior)
        (g$7259$1S&e0X core-prim . fxif)
        (g$7181$1S&e0X core-prim . fxfirst-bit-set)
        (g$7244$1S&e0X core-prim . fxeven?)
        (g$7224$1S&e0X core-prim . fxdiv0-and-mod0)
        (g$7219$1S&e0X core-prim . fxdiv0)
        (g$7214$1S&e0X core-prim . fxdiv-and-mod)
        (g$7207$1S&e0X core-prim . fxdiv)
        (g$7274$1S&e0X core-prim . fxcopy-bit-field)
        (g$7264$1S&e0X core-prim . fxcopy-bit)
        (g$7182$1S&e0X core-prim . fxbit-set?)
        (g$7269$1S&e0X core-prim . fxbit-field)
        (g$7175$1S&e0X core-prim . fxbit-count)
        (g$7276$1S&e0X core-prim . fxarithmetic-shift-right)
        (g$7275$1S&e0X core-prim . fxarithmetic-shift-left)
        (g$7170$1S&e0X core-prim . fxarithmetic-shift)
        (g$7200$1S&e0X core-prim . fxand)
        (g$7192$1S&e0X core-prim . fx>?)
        (g$7193$1S&e0X core-prim . fx>=?)
        (g$7189$1S&e0X core-prim . fx=?)
        (g$7190$1S&e0X core-prim . fx<?)
        (g$7191$1S&e0X core-prim . fx<=?)
        (g$7253$1S&e0X core-prim . fx-/carry)
        (g$7164$1S&e0X core-prim . fx-)
        (g$7254$1S&e0X core-prim . fx+/carry)
        (g$7162$1S&e0X core-prim . fx+)
        (g$7252$1S&e0X core-prim . fx*/carry)
        (g$7163$1S&e0X core-prim . fx*)
        (g$7133$1S&e0X core-prim . greatest-fixnum)
        (g$7134$1S&e0X core-prim . least-fixnum)
        (g$5529$1S&e0X core-prim . fixnum-width)
        (g$5527$1S&e0X core-prim . fixnum?)
        (g$7071$1S&e0X core-prim . bitwise-rotate-bit-field)
        (g$13591$1S&e0X core-prim . bitwise-reverse-bit-field)
        (g$7062$1S&e0X core-prim . bitwise-length)
        (g$7065$1S&e0X core-prim . bitwise-if)
        (g$7063$1S&e0X core-prim . bitwise-first-bit-set)
        (g$7068$1S&e0X core-prim . bitwise-copy-bit-field)
        (g$7066$1S&e0X core-prim . bitwise-copy-bit)
        (g$7064$1S&e0X core-prim . bitwise-bit-set?)
        (g$7067$1S&e0X core-prim . bitwise-bit-field)
        (g$7061$1S&e0X core-prim . bitwise-bit-count)
        (g$7060$1S&e0X core-prim . bitwise-xor)
        (g$7059$1S&e0X core-prim . bitwise-ior)
        (g$7058$1S&e0X core-prim . bitwise-and)
        (g$7057$1S&e0X core-prim . bitwise-not)
        (g$7070$1S&e0X core-prim . bitwise-arithmetic-shift-right)
        (g$7069$1S&e0X core-prim . bitwise-arithmetic-shift-left)
        (g$13590$1S&e0X core-prim . bitwise-arithmetic-shift)
        (g$6170$1S&e0X core-prim . zero?)
        (g$5522$1S&e0X core-prim . vector?)
        (g$5538$1S&e0X core-prim . vector-set!)
        (g$5537$1S&e0X core-prim . vector-ref)
        (g$5601$1S&e0X core-prim . vector-map)
        (g$13589$1S&e0X core-prim . vector-length)
        (g$5602$1S&e0X core-prim . vector-for-each)
        (g$5539$1S&e0X core-prim . vector-fill!)
        (g$13588$1S&e0X core-prim . vector->list)
        (g$13587$1S&e0X core-prim . vector)
        (g$13586$1S&e0X core-prim . values)
        (g$6222$1S&e0X core-prim . truncate)
        (g$6214$1S&e0X core-prim . tan)
        (g$5524$1S&e0X core-prim . symbol?)
        (g$5586$1S&e0X core-prim . symbol=?)
        (g$13585$1S&e0X core-prim . symbol->string)
        (g$13584$1S&e0X core-prim . substring)
        (g$13583$1S&e0X core-prim . string?)
        (g$5583$1S&e0X core-prim . string>?)
        (g$5585$1S&e0X core-prim . string>=?)
        (g$5581$1S&e0X core-prim . string=?)
        (g$5582$1S&e0X core-prim . string<?)
        (g$5584$1S&e0X core-prim . string<=?)
        (g$13582$1S&e0X core-prim . string-ref)
        (g$13581$1S&e0X core-prim . string-length)
        (g$5603$1S&e0X core-prim . string-for-each)
        (g$13580$1S&e0X core-prim . string-copy)
        (g$13579$1S&e0X core-prim . string-append)
        (g$13578$1S&e0X core-prim . string->symbol)
        (g$13577$1S&e0X core-prim . string->number)
        (g$13576$1S&e0X core-prim . string->list)
        (g$13575$1S&e0X core-prim . string)
        (g$6224$1S&e0X core-prim . sqrt)
        (g$6208$1S&e0X core-prim . sin)
        (g$6223$1S&e0X core-prim . round)
        (g$5541$1S&e0X core-prim . reverse)
        (g$6164$1S&e0X core-prim . real?)
        (g$6167$1S&e0X core-prim . real-valued?)
        (g$6201$1S&e0X core-prim . real-part)
        (g$5598$1S&e0X core-prim . rationalize)
        (g$6165$1S&e0X core-prim . rational?)
        (g$6168$1S&e0X core-prim . rational-valued?)
        (g$5526$1S&e0X core-prim . procedure?)
        (g$6171$1S&e0X core-prim . positive?)
        (g$13574$1S&e0X core-prim . pair?)
        (g$5571$1S&e0X core-prim . odd?)
        (g$6199$1S&e0X core-prim . numerator)
        (g$6157$1S&e0X core-prim . number?)
        (g$6178$1S&e0X core-prim . number->string)
        (g$13573$1S&e0X core-prim . null?)
        (g$13572$1S&e0X core-prim . not)
        (g$6172$1S&e0X core-prim . negative?)
        (g$6158$1S&e0X core-prim . nan?)
        (g$5573$1S&e0X core-prim . min)
        (g$5572$1S&e0X core-prim . max)
        (g$5184$1S&e0X core-prim . map)
        (g$13571$1S&e0X core-prim . make-vector)
        (g$13570$1S&e0X core-prim . make-string)
        (g$6194$1S&e0X core-prim . make-rectangular)
        (g$6195$1S&e0X core-prim . make-polar)
        (g$6197$1S&e0X core-prim . magnitude)
        (g$6217$1S&e0X core-prim . log)
        (g$13569$1S&e0X core-prim . list?)
        (g$5164$1S&e0X core-prim . list-tail)
        (g$5165$1S&e0X core-prim . list-ref)
        (g$5535$1S&e0X core-prim . list->vector)
        (g$5536$1S&e0X core-prim . list->string)
        (g$13568$1S&e0X core-prim . list)
        (g$13567$1S&e0X core-prim . length)
        (g$5575$1S&e0X core-prim . lcm)
        (g$6166$1S&e0X core-prim . integer?)
        (g$6169$1S&e0X core-prim . integer-valued?)
        (g$13566$1S&e0X core-prim . integer->char)
        (g$6160$1S&e0X core-prim . infinite?)
        (g$6162$1S&e0X core-prim . inexact?)
        (g$6173$1S&e0X core-prim . inexact)
        (g$6202$1S&e0X core-prim . imag-part)
        (g$5574$1S&e0X core-prim . gcd)
        (g$5185$1S&e0X core-prim . for-each)
        (g$6220$1S&e0X core-prim . floor)
        (g$6159$1S&e0X core-prim . finite?)
        (g$6226$1S&e0X core-prim . expt)
        (g$6207$1S&e0X core-prim . exp)
        (g$6161$1S&e0X core-prim . exact?)
        (g$6225$1S&e0X core-prim . exact-integer-sqrt)
        (g$6174$1S&e0X core-prim . exact)
        (g$5570$1S&e0X core-prim . even?)
        (g$13565$1S&e0X core-prim . error)
        (g$13564$1S&e0X core-prim . eqv?)
        (g$13563$1S&e0X core-prim . equal?)
        (g$13562$1S&e0X core-prim . eq?)
        (g$13561$1S&e0X core-prim . dynamic-wind)
        (g$5534$1S&e0X core-prim . div0-and-mod0)
        (g$5532$1S&e0X core-prim . mod0)
        (g$5530$1S&e0X core-prim . div0)
        (g$5533$1S&e0X core-prim . div-and-mod)
        (g$5531$1S&e0X core-prim . mod)
        (g$6218$1S&e0X core-prim . div)
        (g$6200$1S&e0X core-prim . denominator)
        (g$6211$1S&e0X core-prim . cos)
        (g$13560$1S&e0X core-prim . cons)
        (g$6163$1S&e0X core-prim . complex?)
        (g$5521$1S&e0X core-prim . char?)
        (g$5595$1S&e0X core-prim . char>?)
        (g$5597$1S&e0X core-prim . char>=?)
        (g$5593$1S&e0X core-prim . char=?)
        (g$5594$1S&e0X core-prim . char<?)
        (g$5596$1S&e0X core-prim . char<=?)
        (g$13559$1S&e0X core-prim . char->integer)
        (g$6221$1S&e0X core-prim . ceiling)
        (g$13558$1S&e0X core-prim . call-with-values)
        (g$13557$1S&e0X core-prim . call/cc)
        (g$13556$1S&e0X core-prim . call-with-current-continuation)
        (g$5569$1S&e0X core-prim . cddddr)
        (g$5568$1S&e0X core-prim . cdddar)
        (g$5567$1S&e0X core-prim . cddadr)
        (g$5566$1S&e0X core-prim . cddaar)
        (g$5565$1S&e0X core-prim . cdaddr)
        (g$5564$1S&e0X core-prim . cdadar)
        (g$5563$1S&e0X core-prim . cdaadr)
        (g$5562$1S&e0X core-prim . cdaaar)
        (g$5561$1S&e0X core-prim . cadddr)
        (g$5560$1S&e0X core-prim . caddar)
        (g$5559$1S&e0X core-prim . cadadr)
        (g$5558$1S&e0X core-prim . cadaar)
        (g$5557$1S&e0X core-prim . caaddr)
        (g$5556$1S&e0X core-prim . caadar)
        (g$5555$1S&e0X core-prim . caaadr)
        (g$5554$1S&e0X core-prim . caaaar)
        (g$5553$1S&e0X core-prim . cdddr)
        (g$5552$1S&e0X core-prim . cddar)
        (g$5551$1S&e0X core-prim . cdadr)
        (g$5550$1S&e0X core-prim . cdaar)
        (g$5549$1S&e0X core-prim . caddr)
        (g$5548$1S&e0X core-prim . cadar)
        (g$5547$1S&e0X core-prim . caadr)
        (g$5546$1S&e0X core-prim . caaar)
        (g$5545$1S&e0X core-prim . cddr)
        (g$5544$1S&e0X core-prim . cdar)
        (g$5543$1S&e0X core-prim . cadr)
        (g$5542$1S&e0X core-prim . caar)
        (g$13555$1S&e0X core-prim . cdr)
        (g$13554$1S&e0X core-prim . car)
        (g$5525$1S&e0X core-prim . boolean?)
        (g$5587$1S&e0X core-prim . boolean=?)
        (g$6216$1S&e0X core-prim . atan)
        (g$13553$1S&e0X core-prim . assertion-violation)
        (g$6209$1S&e0X core-prim . asin)
        (g$13552$1S&e0X core-prim . apply)
        (g$13551$1S&e0X core-prim . append)
        (g$6196$1S&e0X core-prim . angle)
        (g$6212$1S&e0X core-prim . acos)
        (g$6219$1S&e0X core-prim . abs)
        (g$13550$1S&e0X core-prim . /)
        (g$13549$1S&e0X core-prim . *)
        (g$13548$1S&e0X core-prim . -)
        (g$13547$1S&e0X core-prim . +)
        (g$6193$1S&e0X core-prim . >=)
        (g$6192$1S&e0X core-prim . >)
        (g$6189$1S&e0X core-prim . =)
        (g$6191$1S&e0X core-prim . <=)
        (g$6190$1S&e0X core-prim . <)
        (g$13546$1S&e0X core-prim . $bytevector-set!)
        (g$13545$1S&e0X core-prim . $bytevector-ref)
        (g$13544$1S&e0X core-prim . $fl>=?)
        (g$13543$1S&e0X core-prim . $fl>?)
        (g$13542$1S&e0X core-prim . $fl<=?)
        (g$13541$1S&e0X core-prim . $fl<?)
        (g$13540$1S&e0X core-prim . $fl-)
        (g$13539$1S&e0X core-prim . $fl/)
        (g$13538$1S&e0X core-prim . $fl*)
        (g$13537$1S&e0X core-prim . $fl+)
        (g$13536$1S&e0X core-prim . $fl=?)
        (g$13535$1S&e0X core-prim . $try)
        (g$13534$1S&e0X core-prim . $fxarithmetic-shift-right)
        (g$13533$1S&e0X core-prim . $fxarithmetic-shift-left)
        (g$13532$1S&e0X core-prim . $$fx-)
        (g$13531$1S&e0X core-prim . $$fx*)
        (g$13530$1S&e0X core-prim . $$fx+)
        (g$13529$1S&e0X core-prim . $fxnot)
        (g$13528$1S&e0X core-prim . $fxxor)
        (g$13527$1S&e0X core-prim . $fxior)
        (g$13526$1S&e0X core-prim . $fxand)
        (g$13525$1S&e0X core-prim . $fx>=?)
        (g$13524$1S&e0X core-prim . $fx>?)
        (g$13523$1S&e0X core-prim . $fx<=?)
        (g$13522$1S&e0X core-prim . $fx<?)
        (g$13521$1S&e0X core-prim . $fx-)
        (g$13520$1S&e0X core-prim . $fxmod0)
        (g$13519$1S&e0X core-prim . $fxdiv0)
        (g$13518$1S&e0X core-prim . $fx*)
        (g$13517$1S&e0X core-prim . $fx+)
        (g$13516$1S&e0X core-prim . $fx=?)
        (g$13515$1S&e0X core-prim . $vector-set!)
        (g$13514$1S&e0X core-prim . $vector-ref)
        (g$13513$1S&e0X core-prim . $cdr)
        (g$13512$1S&e0X core-prim . $car)
        (g$13511$1S&e0X core-prim . make-record-printer)
        (g$13510$1S&e0X core-prim . eqv-hash)
        (g$13509$1S&e0X core-prim . reverse!)
        (g$13508$1S&e0X core-prim . deserialize-port)
        (g$13507$1S&e0X core-prim . serialize-port)
        (g$8830$1S&e0X core-prim . enum-set?)
        (g$6932$1S&e0X core-prim . make-promise)
        (g$13309$1S&e0X core-prim . load/unload)
        (g$13308$1S&e0X core-prim . load/args)
        (g$8939$1S&e0X core-prim . printf)
        (g$8940$1S&e0X core-prim . fprintf)
        (g$8941$1S&e0X core-prim . format)
        (g$13506$1S&e0X core-prim . procedure-form)
        (g$13505$1S&e0X core-prim . procedure-environment)
        (g$13504$1S&e0X core-prim . procedure-name)
        (g$13503$1S&e0X core-prim . procedure-arity)
        (g$13502$1S&e0X core-prim . gc-collect)
        (g$13501$1S&e0X core-prim . typeof)
        (g$13500$1S&e0X core-prim . clr-type?)
        (g$13499$1S&e0X core-prim . get-clr-type)
        (g$13498$1S&e0X core-prim . get-command-line)
        (g$13497$1S&e0X core-prim . vector-append)
        (g$13496$1S&e0X core-prim . vector-filter)
        (g$13495$1S&e0X core-prim . vector-reverse!)
        (g$13494$1S&e0X core-prim . vector-contains?)
        (g$13493$1S&e0X core-prim . vector-index-of)
        (g$13492$1S&e0X core-prim . vector-copy)
        (g$13491$1S&e0X core-prim . vector-binary-search)
        (g$13490$1S&e0X core-prim . string-ci-compare)
        (g$13489$1S&e0X core-prim . string-compare)
        (g$13488$1S&e0X core-prim . string-format)
        (g$13304$1S&e0X core-prim . trace-printer)
        (g$13487$1S&e0X core-prim . make-traced-procedure)
        (g$8961$1S&e0X core-prim . make-traced-macro)
        (g$10283$1S&e0X core-prim . assertion-error)
        (g$13486$1S&e0X core-prim . time-it)
        (g$8968$1S&e0X core-prim . make-parameter)
        (g$13485$1S&e0X core-prim . library-locator)
        (g$13484$1S&e0X core-prim . get-library-paths)
        (g$13483$1S&e0X core-prim . open-tcp-input/output-port)
        (g$13482$1S&e0X core-prim . hashtable-for-each)
        (g$13481$1S&e0X core-prim . hashtable-map)
        (g$10261$1S&e0X core-prim . environment-bindings)
        (g$10264$1S&e0X core-prim . environment-symbols)
        (g$10260$1S&e0X core-prim . interaction-environment-symbols)
        (g$13480$1S&e0X core-prim . optimization-level)
        (g$9590$1S&e0X core-prim . library-path)
        (g$9969$1S&e0X core-prim . make-compile-time-value)
        (g$10270$1S&e0X core-prim . expand->core)
        (g$10268$1S&e0X core-prim . expand)
        (g$13306$1S&e0X core-prim . emacs-mode?)
        (g$10207$1S&e0X core-prim . syntax-transpose)
        (g$9287$1S&e0X core-prim . convert->cps)
        (g$13479$1S&e0X core-prim . inexact=?)
        (g$13478$1S&e0X core-prim . bignum-sqrt-exact)
        (g$13477$1S&e0X core-prim . bignum-sqrt)
        (g$13476$1S&e0X core-prim . flonum->string)
        (g$13475$1S&e0X core-prim . inexact-compare)
        (g$13474$1S&e0X core-prim . exact-compare)
        (g$13473$1S&e0X core-prim . condition-stacktrace)
        (g$6652$1S&e0X core-prim . stacktrace-condition?)
        (g$6650$1S&e0X core-prim . make-stacktrace-condition)
        (g$13472$1S&e0X core-prim . condition-where)
        (g$6637$1S&e0X core-prim . where-condition?)
        (g$6635$1S&e0X core-prim . make-where-condition)
        (g$9611$1S&e0X core-prim . installed-libraries)
        (g$9602$1S&e0X core-prim . uninstall-library)
        (g$9051$1S&e0X core-prim . pretty-gensyms)
        (g$9048$1S&e0X core-prim . pretty-width)
        (g$9053$1S&e0X core-prim . pretty-print)
        (g$13471$1S&e0X core-prim . pointer+)
        (g$13470$1S&e0X $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$13469$1S&e0X $core-rtd &where-rtd &where-rcd)
        (g$13468$1S&e0X $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13467$1S&e0X $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13466$1S&e0X $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13465$1S&e0X $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13464$1S&e0X $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13463$1S&e0X
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13462$1S&e0X
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13461$1S&e0X
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13460$1S&e0X
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13459$1S&e0X $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13458$1S&e0X
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13457$1S&e0X $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13456$1S&e0X $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13455$1S&e0X $core-rtd &i/o-rtd &i/o-rcd)
        (g$13454$1S&e0X
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13453$1S&e0X $core-rtd &undefined-rtd &undefined-rcd)
        (g$13452$1S&e0X $core-rtd &syntax-rtd &syntax-rcd)
        (g$13451$1S&e0X $core-rtd &lexical-rtd &lexical-rcd)
        (g$13450$1S&e0X
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13449$1S&e0X $core-rtd &who-rtd &who-rcd)
        (g$13448$1S&e0X $core-rtd &irritants-rtd &irritants-rcd)
        (g$13447$1S&e0X $core-rtd &assertion-rtd &assertion-rcd)
        (g$13446$1S&e0X $core-rtd &violation-rtd &violation-rcd)
        (g$13445$1S&e0X $core-rtd &error-rtd &error-rcd)
        (g$13444$1S&e0X $core-rtd &serious-rtd &serious-rcd)
        (g$13443$1S&e0X $core-rtd &warning-rtd &warning-rcd)
        (g$13442$1S&e0X $core-rtd &message-rtd &message-rcd)
        (g$13441$1S&e0X $core-rtd &condition-rtd &condition-rcd)
        (g$13440$1S&e0X macro . define-condition-type)
        (g$13439$1S&e0X macro . define-enumeration)
        (g$13438$1S&e0X macro . define-record-type)
        (g$13437$1S&e0X macro . parent-rtd)
        (g$13436$1S&e0X macro . nongenerative)
        (g$13435$1S&e0X macro . opaque)
        (g$13434$1S&e0X macro . sealed)
        (g$13433$1S&e0X macro . protocol)
        (g$13432$1S&e0X macro . parent)
        (g$13431$1S&e0X macro . immutable)
        (g$13430$1S&e0X macro . mutable)
        (g$13429$1S&e0X macro . fields)
        (g$13428$1S&e0X macro . error-handling-mode)
        (g$13427$1S&e0X macro . file-options)
        (g$13426$1S&e0X macro . buffer-mode)
        (g$13425$1S&e0X macro . eol-style)
        (g$13424$1S&e0X macro . guard)
        (g$13423$1S&e0X macro . trace-letrec-syntax)
        (g$13422$1S&e0X macro . trace-let-syntax)
        (g$13421$1S&e0X macro . trace-define-syntax)
        (g$13420$1S&e0X macro . trace-define)
        (g$13419$1S&e0X macro . trace-lambda)
        (g$13418$1S&e0X macro . unsyntax-splicing)
        (g$13417$1S&e0X macro . unsyntax)
        (g$13416$1S&e0X macro . unquote-splicing)
        (g$13415$1S&e0X macro . unquote)
        (g$13414$1S&e0X macro . _)
        (g$13413$1S&e0X macro . else)
        (g$13412$1S&e0X macro . =>)
        (g$13411$1S&e0X macro . ...)
        (g$13410$1S&e0X macro . assert)
        (g$13409$1S&e0X macro . endianness)
        (g$13408$1S&e0X macro . delay)
        (g$13407$1S&e0X macro . time)
        (g$13406$1S&e0X macro . or)
        (g$13405$1S&e0X macro . and)
        (g$13404$1S&e0X macro . do)
        (g$13403$1S&e0X macro . cond)
        (g$13402$1S&e0X macro . let*)
        (g$13401$1S&e0X macro . let)
        (g$13400$1S&e0X macro . identifier-syntax)
        (g$13399$1S&e0X macro . with-syntax)
        (g$13398$1S&e0X macro . quasisyntax)
        (g$13397$1S&e0X macro . quasiquote)
        (g$13396$1S&e0X macro . syntax-rules)
        (g$13395$1S&e0X macro . include-into)
        (g$13394$1S&e0X macro . include)
        (g$13393$1S&e0X macro . define-struct)
        (g$13392$1S&e0X macro . let-values)
        (g$13391$1S&e0X macro . let*-values)
        (g$13390$1S&e0X core-macro . record-constructor-descriptor)
        (g$13389$1S&e0X core-macro . record-type-descriptor)
        (g$13388$1S&e0X core-macro . fluid-let-syntax)
        (g$13387$1S&e0X macro . case)
        (g$13386$1S&e0X macro . parameterize)
        (g$13385$1S&e0X macro . unless)
        (g$13384$1S&e0X macro . when)
        (g$13383$1S&e0X core-macro . if)
        (g$13382$1S&e0X core-macro . letrec*)
        (g$13381$1S&e0X core-macro . letrec)
        (g$13380$1S&e0X core-macro . type-descriptor)
        (g$13379$1S&e0X core-macro . case-lambda)
        (g$13378$1S&e0X core-macro . lambda)
        (g$13377$1S&e0X core-macro . syntax)
        (g$13376$1S&e0X core-macro . syntax-case)
        (g$13375$1S&e0X core-macro . quote)
        (g$13374$1S&e0X core-macro . foreign-call)
        (g$13373$1S&e0X letrec-syntax)
        (g$13372$1S&e0X let-syntax)
        (g$13371$1S&e0X set!)
        (g$13370$1S&e0X export)
        (g$13369$1S&e0X import)
        (g$13368$1S&e0X library)
        (g$13367$1S&e0X begin)
        (g$13366$1S&e0X module)
        (g$13365$1S&e0X define-syntax)
        (g$13364$1S&e0X define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19895$1S&e0X
      'g$13790$1S&e0X
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13728$1S&e0X)
        (eval-core . g$13727$1S&e0X)
        (set-symbol-value! . g$13725$1S&e0X)
        (symbol-value . g$13724$1S&e0X)
        (gensym . g$13721$1S&e0X)
        (void . g$13720$1S&e0X))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$24406$1S&e0X
     g$trace-printer$24473$1S&e0X
     (g$make-parameter$19052$1S&e0X g$pretty-print$19262$1S&e0X))
   (g$command-line$24407$1S&e0X
     g$command-line$24474$1S&e0X
     (g$make-parameter$19052$1S&e0X (get-command-line)))
   (g$emacs-mode?$24408$1S&e0X
     g$emacs-mode?$24475$1S&e0X
     (g$make-parameter$19052$1S&e0X '#f))
   (g$local-library-path$24409$1S&e0X
     g$local-library-path$24476$1S&e0X
     (case-lambda
       ((g$filename$24424$1S&e0X)
        (cons
          (g$get-directory-name$12804$1S&e0X g$filename$24424$1S&e0X)
          (g$library-path$19879$1S&e0X)))))
   (g$load/args$24410$1S&e0X
     g$load/args$24477$1S&e0X
     (case-lambda
       ((g$filename$24425$1S&e0X . g$args$24426$1S&e0X)
        (begin
          (apply
            g$load-r6rs-top-level$24421$1S&e0X
            g$filename$24425$1S&e0X
            'load
            g$args$24426$1S&e0X)
          (void)))))
   (g$load/unload$24411$1S&e0X
     g$load/unload$24478$1S&e0X
     (case-lambda
       ((g$filename$24427$1S&e0X)
        ((case-lambda
           ((g$libs$24428$1S&e0X)
            (begin
              (g$load$24412$1S&e0X g$filename$24427$1S&e0X)
              (g$for-each$11834$1S&e0X
                (case-lambda
                  ((g$lib$24429$1S&e0X)
                   (if (not (g$memq$11825$1S&e0X
                              g$lib$24429$1S&e0X
                              g$libs$24428$1S&e0X))
                     (g$uninstall-library$19891$1S&e0X
                       g$lib$24429$1S&e0X)
                     (void))))
                (g$installed-libraries$19900$1S&e0X)))))
         (g$installed-libraries$19900$1S&e0X)))))
   (g$load$24412$1S&e0X
     g$load$24479$1S&e0X
     (case-lambda
       ((g$filename$24430$1S&e0X)
        (begin
          (apply
            g$load-r6rs-top-level$24421$1S&e0X
            g$filename$24430$1S&e0X
            'load
            (cdr (g$command-line$24407$1S&e0X)))
          (void)))))
   (g$ironscheme-test$24413$1S&e0X
     g$ironscheme-test$24480$1S&e0X
     (case-lambda (() (g$load$24412$1S&e0X '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$24414$1S&e0X
     g$ironscheme-build$24481$1S&e0X
     (case-lambda
       (() (g$ironscheme-build$24414$1S&e0X '#f))
       ((g$cps?$24431$1S&e0X)
        (begin
          (g$call-with-output-file$18668$1S&e0X
            '"build-options.ss"
            (case-lambda
              ((g$p$24432$1S&e0X)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$24431$1S&e0X)
                   g$p$24432$1S&e0X)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$24431$1S&e0X))
                   g$p$24432$1S&e0X)
                 (g$newline$18669$1S&e0X g$p$24432$1S&e0X)))))
          (g$load$24412$1S&e0X '"ironscheme-buildscript.ss")))))
   (g$foreground-color$24415$1S&e0X
     g$foreground-color$24482$1S&e0X
     (case-lambda
       (()
        (if (not (g$emacs-mode?$24408$1S&e0X))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$24433$1S&e0X)
        (if (not (g$emacs-mode?$24408$1S&e0X))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$24433$1S&e0X))
          '#f))))
   (g$system-exception?$24416$1S&e0X
     g$system-exception?$24483$1S&e0X
     (case-lambda
       ((g$e$24434$1S&e0X)
        (clr-is-internal 'SystemException g$e$24434$1S&e0X))))
   (g$eval-top-level$24417$1S&e0X
     g$eval-top-level$24484$1S&e0X
     (case-lambda
       ((g$x$24435$1S&e0X)
        (call/cc
          (case-lambda
            ((g$k$24436$1S&e0X)
             (with-exception-handler
               (case-lambda
                 ((g$e$24437$1S&e0X)
                  ((case-lambda
                     ((g$serious?$24438$1S&e0X)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$24443$1S&e0X
                              g$current-output-port$24444$1S&e0X
                              g$foreground-color$24445$1S&e0X
                              g$current-output-port$24446$1S&e0X)
                            ((case-lambda
                               ((g$swap$24447$1S&e0X)
                                (dynamic-wind
                                  g$swap$24447$1S&e0X
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$24438$1S&e0X
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$24437$1S&e0X)
                                       (g$newline$18669$1S&e0X))))
                                  g$swap$24447$1S&e0X)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$24448$1S&e0X)
                                      (begin
                                        (g$foreground-color$24443$1S&e0X
                                          g$foreground-color$24445$1S&e0X)
                                        (set! g$foreground-color$24445$1S&e0X
                                          g$t$24448$1S&e0X))))
                                   (g$foreground-color$24443$1S&e0X))
                                  ((case-lambda
                                     ((g$t$24449$1S&e0X)
                                      (begin
                                        (g$current-output-port$24444$1S&e0X
                                          g$current-output-port$24446$1S&e0X)
                                        (set! g$current-output-port$24446$1S&e0X
                                          g$t$24449$1S&e0X))))
                                   (g$current-output-port$24444$1S&e0X))))))))
                         g$foreground-color$24415$1S&e0X
                         current-output-port
                         (if g$serious?$24438$1S&e0X 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$24438$1S&e0X
                          (g$k$24436$1S&e0X)
                          (void)))))
                   ((case-lambda
                      ((g$t$24450$1S&e0X)
                       (if g$t$24450$1S&e0X
                         g$t$24450$1S&e0X
                         (begin
                           '#f
                           (g$system-exception?$24416$1S&e0X
                             g$e$24437$1S&e0X)))))
                    (g$serious-condition?$14186$1S&e0X
                      g$e$24437$1S&e0X)))))
               (case-lambda
                 (()
                  (g$eval$24379$1S&e0X
                    g$x$24435$1S&e0X
                    (g$interaction-environment$24404$1S&e0X)))))))))))
   (g$compile-system-libraries$24418$1S&e0X
     g$compile-system-libraries$24485$1S&e0X
     (case-lambda
       (()
        (g$eval-top-level$24417$1S&e0X
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$24419$1S&e0X
     g$compile$24486$1S&e0X
     (case-lambda
       ((g$filename$24451$1S&e0X)
        (g$load-r6rs-top-level$24421$1S&e0X
          g$filename$24451$1S&e0X
          'compile))))
   (g$compile->closure$24420$1S&e0X
     g$compile->closure$24487$1S&e0X
     (case-lambda
       ((g$filename$24452$1S&e0X)
        (g$load-r6rs-top-level$24421$1S&e0X
          g$filename$24452$1S&e0X
          'closure))))
   (g$load-r6rs-top-level$24421$1S&e0X
     g$load-r6rs-top-level$24488$1S&e0X
     (case-lambda
       ((g$filename$24453$1S&e0X
          g$how$24454$1S&e0X
          .
          g$args$24455$1S&e0X)
        ((case-lambda
           ((g$library-path$24458$1S&e0X g$library-path$24459$1S&e0X)
            ((case-lambda
               ((g$swap$24460$1S&e0X)
                (dynamic-wind
                  g$swap$24460$1S&e0X
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$24461$1S&e0X)
                         ((case-lambda
                            ((g$t$24462$1S&e0X)
                             (if (eqv? g$t$24462$1S&e0X 'closure)
                               (g$pre-compile-r6rs-top-level$24402$1S&e0X
                                 g$x*$24461$1S&e0X)
                               (if (eqv? g$t$24462$1S&e0X 'load)
                                 ((case-lambda
                                    ((g$command-line$24465$1S&e0X
                                       g$command-line$24466$1S&e0X)
                                     ((case-lambda
                                        ((g$swap$24467$1S&e0X)
                                         (dynamic-wind
                                           g$swap$24467$1S&e0X
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$24401$1S&e0X
                                                 g$x*$24461$1S&e0X))))
                                           g$swap$24467$1S&e0X)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$24468$1S&e0X)
                                             (begin
                                               (g$command-line$24465$1S&e0X
                                                 g$command-line$24466$1S&e0X)
                                               (set! g$command-line$24466$1S&e0X
                                                 g$t$24468$1S&e0X))))
                                          (g$command-line$24465$1S&e0X)))))))
                                  g$command-line$24407$1S&e0X
                                  (cons
                                    g$filename$24453$1S&e0X
                                    (g$map$11833$1S&e0X
                                      (case-lambda
                                        ((g$x$24469$1S&e0X)
                                         (g$format$18843$1S&e0X
                                           '"~a"
                                           g$x$24469$1S&e0X)))
                                      g$args$24455$1S&e0X)))
                                 (if (eqv? g$t$24462$1S&e0X 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$24401$1S&e0X
                                       g$x*$24461$1S&e0X)
                                     (g$serialize-all$19883$1S&e0X
                                       serialize-library
                                       g$compile-core-expr$19630$1S&e0X))
                                   (if '#f '#f (void)))))))
                          g$how$24454$1S&e0X)))
                      (g$with-input-from-file$18665$1S&e0X
                        g$filename$24453$1S&e0X
                        (case-lambda
                          (()
                           ((letrec ((g$f$24470$1S&e0X
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$24471$1S&e0X)
                                              (if (eof-object?
                                                    g$x$24471$1S&e0X)
                                                '()
                                                (cons
                                                  g$x$24471$1S&e0X
                                                  (g$f$24470$1S&e0X)))))
                                           (read-annotated))))))
                              g$f$24470$1S&e0X))))))))
                  g$swap$24460$1S&e0X)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$24472$1S&e0X)
                    (begin
                      (g$library-path$24458$1S&e0X
                        g$library-path$24459$1S&e0X)
                      (set! g$library-path$24459$1S&e0X
                        g$t$24472$1S&e0X))))
                 (g$library-path$24458$1S&e0X)))))))
         g$library-path$19879$1S&e0X
         (g$local-library-path$24409$1S&e0X g$filename$24453$1S&e0X)))))
   (g$fo$24422$1S&e0X
     g$fo$24489$1S&e0X
     (g$make-enumeration$18805$1S&e0X
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$19884$1S&e0X
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$24423$1S&e0X)
         (if (g$serious-condition?$14186$1S&e0X g$ex$24423$1S&e0X)
           (raise g$ex$24423$1S&e0X)
           (begin
             '#f
             (display g$ex$24423$1S&e0X)
             (g$newline$18669$1S&e0X))))))
    (set-symbol-value! 'load g$load$24412$1S&e0X)
    (set-symbol-value! 'compile g$compile$24419$1S&e0X)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$24420$1S&e0X)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$24417$1S&e0X)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$24370$1S&e0X)
    (set-symbol-value! 'expanded2core g$expanded->core$19629$1S&e0X)
    (set-symbol-value! 'trace-printer g$trace-printer$24406$1S&e0X)
    (set-symbol-value! 'convert->cps g$convert->cps$19580$1S&e0X)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$24408$1S&e0X)
    (g$file-options-constructor$19053$1S&e0X
      (g$enum-set-constructor$18808$1S&e0X g$fo$24422$1S&e0X))
    (g$library-path$19879$1S&e0X (get-library-paths))
    (g$library-extensions$19880$1S&e0X
      (cons '".ironscheme.sls" (g$library-extensions$19880$1S&e0X)))
    (g$interaction-environment$24404$1S&e0X
      (g$new-interaction-environment$24403$1S&e0X))))

