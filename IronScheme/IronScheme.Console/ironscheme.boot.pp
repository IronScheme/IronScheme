;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$11657$1POZIn
     g$list-tail$11813$1POZIn
     (case-lambda
       ((g$lst$11685$1POZIn g$index$11686$1POZIn)
        (if ((case-lambda
               ((g$t$11687$1POZIn)
                (if g$t$11687$1POZIn
                  g$t$11687$1POZIn
                  (begin
                    '#f
                    (g$negative?$13615$1POZIn g$index$11686$1POZIn)))))
             (null? g$lst$11685$1POZIn))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$11685$1POZIn
            g$index$11686$1POZIn)
          (if (g$zero?$13613$1POZIn g$index$11686$1POZIn)
            g$lst$11685$1POZIn
            (begin
              '#f
              (g$list-tail$11657$1POZIn
                (cdr g$lst$11685$1POZIn)
                (- g$index$11686$1POZIn '1))))))))
   (g$list-ref$11658$1POZIn
     g$list-ref$11814$1POZIn
     (case-lambda
       ((g$lst$11688$1POZIn g$index$11689$1POZIn)
        (car (g$list-tail$11657$1POZIn
               g$lst$11688$1POZIn
               g$index$11689$1POZIn)))))
   (g$last-pair$11659$1POZIn
     g$last-pair$11815$1POZIn
     (case-lambda
       ((g$lst$11690$1POZIn)
        (if (null? g$lst$11690$1POZIn)
          g$lst$11690$1POZIn
          (if (null? (cdr g$lst$11690$1POZIn))
            g$lst$11690$1POZIn
            (begin
              '#f
              (g$last-pair$11659$1POZIn (cdr g$lst$11690$1POZIn))))))))
   (g$make-list$11660$1POZIn
     g$make-list$11816$1POZIn
     (case-lambda
       ((g$n$11691$1POZIn)
        (vector->list (make-vector g$n$11691$1POZIn)))
       ((g$n$11692$1POZIn g$fill$11693$1POZIn)
        (vector->list
          (make-vector g$n$11692$1POZIn g$fill$11693$1POZIn)))))
   (g$find$11661$1POZIn
     g$find$11817$1POZIn
     (case-lambda
       ((g$proc$11694$1POZIn g$l$11695$1POZIn)
        (if (null? g$l$11695$1POZIn)
          '#f
          ((case-lambda
             ((g$e$11696$1POZIn g$r$11697$1POZIn g$proc$11698$1POZIn)
              (if (g$proc$11698$1POZIn g$e$11696$1POZIn)
                g$e$11696$1POZIn
                (g$find$11661$1POZIn
                  g$proc$11698$1POZIn
                  g$r$11697$1POZIn))))
           (car g$l$11695$1POZIn)
           (cdr g$l$11695$1POZIn)
           g$proc$11694$1POZIn)))))
   (g$partition$11662$1POZIn
     g$partition$11818$1POZIn
     (case-lambda
       ((g$proc$11699$1POZIn g$l$11700$1POZIn)
        ((letrec ((g$f$11701$1POZIn
                    (case-lambda
                      ((g$l$11702$1POZIn
                         g$a$11703$1POZIn
                         g$b$11704$1POZIn)
                       (if (null? g$l$11702$1POZIn)
                         (values
                           (reverse! g$a$11703$1POZIn)
                           (reverse! g$b$11704$1POZIn))
                         ((case-lambda
                            ((g$e$11705$1POZIn)
                             (if (g$proc$11699$1POZIn g$e$11705$1POZIn)
                               (g$f$11701$1POZIn
                                 (cdr g$l$11702$1POZIn)
                                 (cons
                                   g$e$11705$1POZIn
                                   g$a$11703$1POZIn)
                                 g$b$11704$1POZIn)
                               (g$f$11701$1POZIn
                                 (cdr g$l$11702$1POZIn)
                                 g$a$11703$1POZIn
                                 (cons
                                   g$e$11705$1POZIn
                                   g$b$11704$1POZIn)))))
                          (car g$l$11702$1POZIn)))))))
           g$f$11701$1POZIn)
         g$l$11700$1POZIn
         '()
         '()))))
   (g$remp$11663$1POZIn
     g$remp$11819$1POZIn
     (case-lambda
       ((g$proc$11706$1POZIn g$l$11707$1POZIn)
        ((letrec ((g$f$11708$1POZIn
                    (case-lambda
                      ((g$l$11709$1POZIn g$a$11710$1POZIn)
                       (if (null? g$l$11709$1POZIn)
                         (reverse! g$a$11710$1POZIn)
                         ((case-lambda
                            ((g$e$11711$1POZIn)
                             (if (g$proc$11706$1POZIn g$e$11711$1POZIn)
                               (g$f$11708$1POZIn
                                 (cdr g$l$11709$1POZIn)
                                 g$a$11710$1POZIn)
                               (g$f$11708$1POZIn
                                 (cdr g$l$11709$1POZIn)
                                 (cons
                                   g$e$11711$1POZIn
                                   g$a$11710$1POZIn)))))
                          (car g$l$11709$1POZIn)))))))
           g$f$11708$1POZIn)
         g$l$11707$1POZIn
         '()))))
   (g$filter$11664$1POZIn
     g$filter$11820$1POZIn
     (case-lambda
       ((g$proc$11712$1POZIn g$l$11713$1POZIn)
        ((letrec ((g$f$11714$1POZIn
                    (case-lambda
                      ((g$l$11715$1POZIn g$a$11716$1POZIn)
                       (if (null? g$l$11715$1POZIn)
                         (reverse! g$a$11716$1POZIn)
                         ((case-lambda
                            ((g$e$11717$1POZIn)
                             (if (g$proc$11712$1POZIn g$e$11717$1POZIn)
                               (g$f$11714$1POZIn
                                 (cdr g$l$11715$1POZIn)
                                 (cons
                                   g$e$11717$1POZIn
                                   g$a$11716$1POZIn))
                               (g$f$11714$1POZIn
                                 (cdr g$l$11715$1POZIn)
                                 g$a$11716$1POZIn))))
                          (car g$l$11715$1POZIn)))))))
           g$f$11714$1POZIn)
         g$l$11713$1POZIn
         '()))))
   (g$assq$11665$1POZIn
     g$assq$11821$1POZIn
     (case-lambda
       ((g$obj$11718$1POZIn g$lst$11719$1POZIn)
        (if (null? g$lst$11719$1POZIn)
          '#f
          ((case-lambda
             ((g$obj$11720$1POZIn g$t$11721$1POZIn g$r$11722$1POZIn)
              (if (eq? g$obj$11720$1POZIn (car g$t$11721$1POZIn))
                g$t$11721$1POZIn
                (g$assq$11665$1POZIn
                  g$obj$11720$1POZIn
                  g$r$11722$1POZIn))))
           g$obj$11718$1POZIn
           (car g$lst$11719$1POZIn)
           (cdr g$lst$11719$1POZIn))))))
   (g$assv$11666$1POZIn
     g$assv$11822$1POZIn
     (case-lambda
       ((g$obj$11723$1POZIn g$lst$11724$1POZIn)
        (if (null? g$lst$11724$1POZIn)
          '#f
          ((case-lambda
             ((g$obj$11725$1POZIn g$t$11726$1POZIn g$r$11727$1POZIn)
              (if (eqv? g$obj$11725$1POZIn (car g$t$11726$1POZIn))
                g$t$11726$1POZIn
                (g$assv$11666$1POZIn
                  g$obj$11725$1POZIn
                  g$r$11727$1POZIn))))
           g$obj$11723$1POZIn
           (car g$lst$11724$1POZIn)
           (cdr g$lst$11724$1POZIn))))))
   (g$assoc$11667$1POZIn
     g$assoc$11823$1POZIn
     (case-lambda
       ((g$obj$11728$1POZIn g$lst$11729$1POZIn)
        (if (null? g$lst$11729$1POZIn)
          '#f
          ((case-lambda
             ((g$obj$11730$1POZIn g$t$11731$1POZIn g$r$11732$1POZIn)
              (if (equal? g$obj$11730$1POZIn (car g$t$11731$1POZIn))
                g$t$11731$1POZIn
                (g$assoc$11667$1POZIn
                  g$obj$11730$1POZIn
                  g$r$11732$1POZIn))))
           g$obj$11728$1POZIn
           (car g$lst$11729$1POZIn)
           (cdr g$lst$11729$1POZIn))))))
   (g$assp$11668$1POZIn
     g$assp$11824$1POZIn
     (case-lambda
       ((g$p?$11733$1POZIn g$lst$11734$1POZIn)
        (if (null? g$lst$11734$1POZIn)
          '#f
          ((case-lambda
             ((g$p?$11735$1POZIn g$t$11736$1POZIn g$r$11737$1POZIn)
              (if (g$p?$11735$1POZIn (car g$t$11736$1POZIn))
                g$t$11736$1POZIn
                (g$assp$11668$1POZIn
                  g$p?$11735$1POZIn
                  g$r$11737$1POZIn))))
           g$p?$11733$1POZIn
           (car g$lst$11734$1POZIn)
           (cdr g$lst$11734$1POZIn))))))
   (g$memq$11669$1POZIn
     g$memq$11825$1POZIn
     (case-lambda
       ((g$obj$11738$1POZIn g$lst$11739$1POZIn)
        (if (null? g$lst$11739$1POZIn)
          '#f
          (if (eq? g$obj$11738$1POZIn (car g$lst$11739$1POZIn))
            g$lst$11739$1POZIn
            (g$memq$11669$1POZIn
              g$obj$11738$1POZIn
              (cdr g$lst$11739$1POZIn)))))))
   (g$memv$11670$1POZIn
     g$memv$11826$1POZIn
     (case-lambda
       ((g$obj$11740$1POZIn g$lst$11741$1POZIn)
        (if (null? g$lst$11741$1POZIn)
          '#f
          (if (eqv? g$obj$11740$1POZIn (car g$lst$11741$1POZIn))
            g$lst$11741$1POZIn
            (g$memv$11670$1POZIn
              g$obj$11740$1POZIn
              (cdr g$lst$11741$1POZIn)))))))
   (g$member$11671$1POZIn
     g$member$11827$1POZIn
     (case-lambda
       ((g$obj$11742$1POZIn g$lst$11743$1POZIn)
        (if (null? g$lst$11743$1POZIn)
          '#f
          (if (equal? g$obj$11742$1POZIn (car g$lst$11743$1POZIn))
            g$lst$11743$1POZIn
            (g$member$11671$1POZIn
              g$obj$11742$1POZIn
              (cdr g$lst$11743$1POZIn)))))))
   (g$memp$11672$1POZIn
     g$memp$11828$1POZIn
     (case-lambda
       ((g$p?$11744$1POZIn g$lst$11745$1POZIn)
        (if (null? g$lst$11745$1POZIn)
          '#f
          (if (g$p?$11744$1POZIn (car g$lst$11745$1POZIn))
            g$lst$11745$1POZIn
            (g$memp$11672$1POZIn
              g$p?$11744$1POZIn
              (cdr g$lst$11745$1POZIn)))))))
   (g$all-empty?$11673$1POZIn
     g$all-empty?$11829$1POZIn
     (case-lambda
       ((g$ls$11746$1POZIn)
        ((case-lambda
           ((g$t$11747$1POZIn)
            (if g$t$11747$1POZIn
              g$t$11747$1POZIn
              (begin
                '#f
                (if (null? (car g$ls$11746$1POZIn))
                  (begin
                    '#f
                    (g$all-empty?$11673$1POZIn (cdr g$ls$11746$1POZIn)))
                  '#f)))))
         (null? g$ls$11746$1POZIn)))))
   (g$split$11674$1POZIn
     g$split$11830$1POZIn
     (case-lambda
       ((g$ls$11748$1POZIn)
        (if (null? g$ls$11748$1POZIn)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (() (g$split$11674$1POZIn (cdr g$ls$11748$1POZIn))))
              (case-lambda
                ((g$cars$11749$1POZIn g$cdrs$11750$1POZIn)
                 ((case-lambda
                    ((g$a$11751$1POZIn)
                     (values
                       (cons (car g$a$11751$1POZIn) g$cars$11749$1POZIn)
                       (cons
                         (cdr g$a$11751$1POZIn)
                         g$cdrs$11750$1POZIn))))
                  (car g$ls$11748$1POZIn))))))))))
   (g$for-all$11675$1POZIn
     g$for-all$11831$1POZIn
     (case-lambda
       ((g$f$11752$1POZIn g$arg1$11753$1POZIn)
        (if (null? g$arg1$11753$1POZIn)
          '#t
          (if (null? (cdr g$arg1$11753$1POZIn))
            (g$f$11752$1POZIn (car g$arg1$11753$1POZIn))
            (if (g$f$11752$1POZIn (car g$arg1$11753$1POZIn))
              (begin
                '#f
                (g$for-all$11675$1POZIn
                  g$f$11752$1POZIn
                  (cdr g$arg1$11753$1POZIn)))
              '#f))))
       ((g$f$11754$1POZIn g$arg1$11755$1POZIn . g$args$11756$1POZIn)
        ((case-lambda
           ((g$args$11757$1POZIn)
            (if (g$all-empty?$11673$1POZIn g$args$11757$1POZIn)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$11674$1POZIn g$args$11757$1POZIn)))
                (case-lambda
                  ((g$cars$11758$1POZIn g$cdrs$11759$1POZIn)
                   (if (g$all-empty?$11673$1POZIn g$cdrs$11759$1POZIn)
                     (apply g$f$11754$1POZIn g$cars$11758$1POZIn)
                     (if (apply g$f$11754$1POZIn g$cars$11758$1POZIn)
                       (begin
                         '#f
                         (apply
                           g$for-all$11675$1POZIn
                           g$f$11754$1POZIn
                           g$cdrs$11759$1POZIn))
                       '#f))))))))
         (cons g$arg1$11755$1POZIn g$args$11756$1POZIn)))))
   (g$exists$11676$1POZIn
     g$exists$11832$1POZIn
     (case-lambda
       ((g$f$11760$1POZIn g$arg1$11761$1POZIn)
        (if (null? g$arg1$11761$1POZIn)
          '#f
          ((case-lambda
             ((g$t$11762$1POZIn)
              (if g$t$11762$1POZIn
                g$t$11762$1POZIn
                (begin
                  '#f
                  (g$exists$11676$1POZIn
                    g$f$11760$1POZIn
                    (cdr g$arg1$11761$1POZIn))))))
           (g$f$11760$1POZIn (car g$arg1$11761$1POZIn)))))
       ((g$f$11763$1POZIn g$arg1$11764$1POZIn . g$args$11765$1POZIn)
        ((case-lambda
           ((g$args$11766$1POZIn)
            (if (g$all-empty?$11673$1POZIn g$args$11766$1POZIn)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$11674$1POZIn g$args$11766$1POZIn)))
                (case-lambda
                  ((g$cars$11767$1POZIn g$cdrs$11768$1POZIn)
                   ((case-lambda
                      ((g$t$11769$1POZIn)
                       (if g$t$11769$1POZIn
                         g$t$11769$1POZIn
                         (begin
                           '#f
                           (apply
                             g$exists$11676$1POZIn
                             g$f$11763$1POZIn
                             g$cdrs$11768$1POZIn)))))
                    (apply g$f$11763$1POZIn g$cars$11767$1POZIn))))))))
         (cons g$arg1$11764$1POZIn g$args$11765$1POZIn)))))
   (g$map$11677$1POZIn
     g$map$11833$1POZIn
     (case-lambda
       ((g$proc$11770$1POZIn g$list1$11771$1POZIn)
        ((letrec ((g$f$11772$1POZIn
                    (case-lambda
                      ((g$lst$11773$1POZIn g$a$11774$1POZIn)
                       (if (null? g$lst$11773$1POZIn)
                         (reverse! g$a$11774$1POZIn)
                         (g$f$11772$1POZIn
                           (cdr g$lst$11773$1POZIn)
                           (cons
                             (g$proc$11770$1POZIn
                               (car g$lst$11773$1POZIn))
                             g$a$11774$1POZIn)))))))
           g$f$11772$1POZIn)
         g$list1$11771$1POZIn
         '()))
       ((g$proc$11775$1POZIn
          g$list1$11776$1POZIn
          .
          g$lists$11777$1POZIn)
        ((letrec ((g$f$11778$1POZIn
                    (case-lambda
                      ((g$lists$11779$1POZIn g$a$11780$1POZIn)
                       (if (g$all-empty?$11673$1POZIn
                             g$lists$11779$1POZIn)
                         (reverse! g$a$11780$1POZIn)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$11674$1POZIn
                                g$lists$11779$1POZIn)))
                           (case-lambda
                             ((g$cars$11781$1POZIn g$cdrs$11782$1POZIn)
                              (g$f$11778$1POZIn
                                g$cdrs$11782$1POZIn
                                (cons
                                  (apply
                                    g$proc$11775$1POZIn
                                    g$cars$11781$1POZIn)
                                  g$a$11780$1POZIn))))))))))
           g$f$11778$1POZIn)
         (cons g$list1$11776$1POZIn g$lists$11777$1POZIn)
         '()))))
   (g$for-each$11678$1POZIn
     g$for-each$11834$1POZIn
     (case-lambda
       ((g$f$11783$1POZIn g$arg1$11784$1POZIn)
        (if (not (null? g$arg1$11784$1POZIn))
          (begin
            (g$f$11783$1POZIn (car g$arg1$11784$1POZIn))
            (g$for-each$11678$1POZIn
              g$f$11783$1POZIn
              (cdr g$arg1$11784$1POZIn)))
          (void)))
       ((g$f$11785$1POZIn g$arg1$11786$1POZIn . g$args$11787$1POZIn)
        ((case-lambda
           ((g$args$11788$1POZIn)
            (if (not (g$all-empty?$11673$1POZIn g$args$11788$1POZIn))
              (call-with-values
                (case-lambda
                  (() (g$split$11674$1POZIn g$args$11788$1POZIn)))
                (case-lambda
                  ((g$cars$11789$1POZIn g$cdrs$11790$1POZIn)
                   (begin
                     (apply g$f$11785$1POZIn g$cars$11789$1POZIn)
                     (apply
                       g$for-each$11678$1POZIn
                       g$f$11785$1POZIn
                       g$cdrs$11790$1POZIn)))))
              (void))))
         (cons g$arg1$11786$1POZIn g$args$11787$1POZIn)))))
   (g$cons*$11679$1POZIn
     g$cons*$11835$1POZIn
     (case-lambda
       ((g$a$11791$1POZIn . g$rest$11792$1POZIn)
        ((letrec ((g$f$11793$1POZIn
                    (case-lambda
                      ((g$a$11794$1POZIn g$rest$11795$1POZIn)
                       (if (null? g$rest$11795$1POZIn)
                         g$a$11794$1POZIn
                         (cons
                           g$a$11794$1POZIn
                           (g$f$11793$1POZIn
                             (car g$rest$11795$1POZIn)
                             (cdr g$rest$11795$1POZIn))))))))
           g$f$11793$1POZIn)
         g$a$11791$1POZIn
         g$rest$11792$1POZIn))))
   (g$fold-left$11680$1POZIn
     g$fold-left$11836$1POZIn
     (case-lambda
       ((g$combine$11796$1POZIn
          g$nil$11797$1POZIn
          g$list1$11798$1POZIn
          .
          g$lists$11799$1POZIn)
        (if (null? g$list1$11798$1POZIn)
          g$nil$11797$1POZIn
          (if (null? g$lists$11799$1POZIn)
            (g$fold-left$11680$1POZIn
              g$combine$11796$1POZIn
              (g$combine$11796$1POZIn
                g$nil$11797$1POZIn
                (car g$list1$11798$1POZIn))
              (cdr g$list1$11798$1POZIn))
            (begin
              '#f
              (apply
                g$fold-left$11680$1POZIn
                (g$cons*$11679$1POZIn
                  g$combine$11796$1POZIn
                  (apply
                    g$combine$11796$1POZIn
                    (g$cons*$11679$1POZIn
                      g$nil$11797$1POZIn
                      (car g$list1$11798$1POZIn)
                      (g$map$11677$1POZIn car g$lists$11799$1POZIn)))
                  (cdr g$list1$11798$1POZIn)
                  (g$map$11677$1POZIn cdr g$lists$11799$1POZIn)))))))))
   (g$fold-right$11681$1POZIn
     g$fold-right$11837$1POZIn
     (case-lambda
       ((g$combine$11800$1POZIn
          g$nil$11801$1POZIn
          g$list1$11802$1POZIn
          .
          g$lists$11803$1POZIn)
        (if (null? g$list1$11802$1POZIn)
          g$nil$11801$1POZIn
          (if (null? g$lists$11803$1POZIn)
            (g$combine$11800$1POZIn
              (car g$list1$11802$1POZIn)
              (g$fold-right$11681$1POZIn
                g$combine$11800$1POZIn
                g$nil$11801$1POZIn
                (cdr g$list1$11802$1POZIn)))
            (begin
              '#f
              (apply
                g$combine$11800$1POZIn
                (append
                  (list (car g$list1$11802$1POZIn))
                  (g$map$11677$1POZIn car g$lists$11803$1POZIn)
                  (list
                    (apply
                      g$fold-right$11681$1POZIn
                      (g$cons*$11679$1POZIn
                        g$combine$11800$1POZIn
                        g$nil$11801$1POZIn
                        (cdr g$list1$11802$1POZIn)
                        (g$map$11677$1POZIn
                          cdr
                          g$lists$11803$1POZIn))))))))))))
   (g$remove$11682$1POZIn
     g$remove$11838$1POZIn
     (case-lambda
       ((g$obj$11804$1POZIn g$list$11805$1POZIn)
        (g$remp$11663$1POZIn
          (case-lambda
            ((g$x$11806$1POZIn)
             (equal? g$obj$11804$1POZIn g$x$11806$1POZIn)))
          g$list$11805$1POZIn))))
   (g$remv$11683$1POZIn
     g$remv$11839$1POZIn
     (case-lambda
       ((g$obj$11807$1POZIn g$list$11808$1POZIn)
        (g$remp$11663$1POZIn
          (case-lambda
            ((g$x$11809$1POZIn)
             (eqv? g$obj$11807$1POZIn g$x$11809$1POZIn)))
          g$list$11808$1POZIn))))
   (g$remq$11684$1POZIn
     g$remq$11840$1POZIn
     (case-lambda
       ((g$obj$11810$1POZIn g$list$11811$1POZIn)
        (g$remp$11663$1POZIn
          (case-lambda
            ((g$x$11812$1POZIn)
             (eq? g$obj$11810$1POZIn g$x$11812$1POZIn)))
          g$list$11811$1POZIn)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$char?$12325$1POZIn
     g$char?$12662$1POZIn
     (case-lambda
       ((g$obj$12478$1POZIn)
        (clr-is-internal 'system.char g$obj$12478$1POZIn))))
   (g$vector?$12326$1POZIn
     g$vector?$12663$1POZIn
     (case-lambda
       ((g$obj$12479$1POZIn)
        (clr-is-internal 'system.object[] g$obj$12479$1POZIn))))
   (g$bytevector?$12327$1POZIn
     g$bytevector?$12664$1POZIn
     (case-lambda
       ((g$obj$12480$1POZIn)
        (clr-is-internal 'system.byte[] g$obj$12480$1POZIn))))
   (g$symbol?$12328$1POZIn
     g$symbol?$12665$1POZIn
     (case-lambda
       ((g$obj$12481$1POZIn)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$12481$1POZIn))))
   (g$boolean?$12329$1POZIn
     g$boolean?$12666$1POZIn
     (case-lambda
       ((g$obj$12482$1POZIn)
        (clr-is-internal 'system.boolean g$obj$12482$1POZIn))))
   (g$procedure?$12330$1POZIn
     g$procedure?$12667$1POZIn
     (case-lambda
       ((g$obj$12483$1POZIn)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$12483$1POZIn))))
   (g$fixnum?$12331$1POZIn
     g$fixnum?$12668$1POZIn
     (case-lambda
       ((g$obj$12484$1POZIn)
        (clr-is-internal 'system.int32 g$obj$12484$1POZIn))))
   (g$flonum?$12332$1POZIn
     g$flonum?$12669$1POZIn
     (case-lambda
       ((g$obj$12485$1POZIn)
        (clr-is-internal 'system.double g$obj$12485$1POZIn))))
   (g$fixnum-width$12333$1POZIn
     g$fixnum-width$12670$1POZIn
     (case-lambda (() '32)))
   (g$div0$12334$1POZIn
     g$div0$12671$1POZIn
     (case-lambda
       ((g$x1$12486$1POZIn g$x2$12487$1POZIn)
        ((case-lambda
           ((g$d$12488$1POZIn)
            ((case-lambda
               ((g$m$12489$1POZIn)
                (if (g$<$13619$1POZIn
                      g$m$12489$1POZIn
                      (g$magnitude$13626$1POZIn
                        (/ g$x2$12487$1POZIn '2)))
                  g$d$12488$1POZIn
                  (if (g$positive?$13614$1POZIn g$x2$12487$1POZIn)
                    (+ g$d$12488$1POZIn '1)
                    (begin '#f (- g$d$12488$1POZIn '1))))))
             (- g$x1$12486$1POZIn
                (* g$d$12488$1POZIn g$x2$12487$1POZIn)))))
         (g$div$13643$1POZIn g$x1$12486$1POZIn g$x2$12487$1POZIn)))))
   (g$mod$12335$1POZIn
     g$mod$12672$1POZIn
     (case-lambda
       ((g$x1$12490$1POZIn g$x2$12491$1POZIn)
        (- g$x1$12490$1POZIn
           (* (g$div$13643$1POZIn g$x1$12490$1POZIn g$x2$12491$1POZIn)
              g$x2$12491$1POZIn)))))
   (g$mod0$12336$1POZIn
     g$mod0$12673$1POZIn
     (case-lambda
       ((g$x1$12492$1POZIn g$x2$12493$1POZIn)
        (- g$x1$12492$1POZIn
           (* (g$div0$12334$1POZIn g$x1$12492$1POZIn g$x2$12493$1POZIn)
              g$x2$12493$1POZIn)))))
   (g$div-and-mod$12337$1POZIn
     g$div-and-mod$12674$1POZIn
     (case-lambda
       ((g$x1$12494$1POZIn g$x2$12495$1POZIn)
        ((case-lambda
           ((g$d$12496$1POZIn)
            (values
              g$d$12496$1POZIn
              (- g$x1$12494$1POZIn
                 (* g$d$12496$1POZIn g$x2$12495$1POZIn)))))
         (g$div$13643$1POZIn g$x1$12494$1POZIn g$x2$12495$1POZIn)))))
   (g$div0-and-mod0$12338$1POZIn
     g$div0-and-mod0$12675$1POZIn
     (case-lambda
       ((g$x1$12497$1POZIn g$x2$12498$1POZIn)
        ((case-lambda
           ((g$d$12499$1POZIn)
            (values
              g$d$12499$1POZIn
              (- g$x1$12497$1POZIn
                 (* g$d$12499$1POZIn g$x2$12498$1POZIn)))))
         (g$div0$12334$1POZIn g$x1$12497$1POZIn g$x2$12498$1POZIn)))))
   (g$list->vector$12339$1POZIn
     g$list->vector$12676$1POZIn
     (case-lambda
       ((g$lst$12500$1POZIn) (apply vector g$lst$12500$1POZIn))))
   (g$list->string$12340$1POZIn
     g$list->string$12677$1POZIn
     (case-lambda
       ((g$lst$12501$1POZIn) (apply string g$lst$12501$1POZIn))))
   (g$vector-ref$12341$1POZIn
     g$vector-ref$12678$1POZIn
     (case-lambda
       ((g$x$12502$1POZIn g$n$12503$1POZIn)
        (begin
          (if (not (g$vector?$12326$1POZIn g$x$12502$1POZIn))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$12502$1POZIn)
            (void))
          (if (not (g$integer?$13609$1POZIn g$n$12503$1POZIn))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$12503$1POZIn)
            (void))
          (if (g$negative?$13615$1POZIn g$n$12503$1POZIn)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$12503$1POZIn)
            (void))
          ($vector-ref g$x$12502$1POZIn g$n$12503$1POZIn)))))
   (g$vector-set!$12342$1POZIn
     g$vector-set!$12679$1POZIn
     (case-lambda
       ((g$x$12504$1POZIn g$n$12505$1POZIn g$value$12506$1POZIn)
        (begin
          (if (not (g$vector?$12326$1POZIn g$x$12504$1POZIn))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$12504$1POZIn)
            (void))
          (if (not (g$integer?$13609$1POZIn g$n$12505$1POZIn))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$12505$1POZIn)
            (void))
          (if (g$negative?$13615$1POZIn g$n$12505$1POZIn)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$12505$1POZIn)
            (void))
          ($vector-set!
            g$x$12504$1POZIn
            g$n$12505$1POZIn
            g$value$12506$1POZIn)
          (void)))))
   (g$vector-fill!$12343$1POZIn
     g$vector-fill!$12680$1POZIn
     (case-lambda
       ((g$vec$12507$1POZIn g$val$12508$1POZIn)
        ((case-lambda
           ((g$len$12509$1POZIn)
            (letrec ((g$loop$12510$1POZIn
                       (case-lambda
                         ((g$i$12511$1POZIn)
                          (if (g$fx=?$16904$1POZIn
                                g$i$12511$1POZIn
                                g$len$12509$1POZIn)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$12342$1POZIn
                                g$vec$12507$1POZIn
                                g$i$12511$1POZIn
                                g$val$12508$1POZIn)
                              (g$loop$12510$1POZIn
                                (g$fx+$16891$1POZIn
                                  g$i$12511$1POZIn
                                  '1))))))))
              (g$loop$12510$1POZIn '0))))
         (vector-length g$vec$12507$1POZIn)))))
   (g$xcons$12344$1POZIn
     g$xcons$12681$1POZIn
     (case-lambda
       ((g$x$12512$1POZIn g$y$12513$1POZIn)
        (cons g$y$12513$1POZIn g$x$12512$1POZIn))))
   (g$reverse$12345$1POZIn
     g$reverse$12682$1POZIn
     (case-lambda
       ((g$lst$12514$1POZIn)
        (g$fold-left$11836$1POZIn
          g$xcons$12344$1POZIn
          '()
          g$lst$12514$1POZIn))))
   (g$caar$12346$1POZIn
     g$caar$12683$1POZIn
     (case-lambda ((g$x$12515$1POZIn) (car (car g$x$12515$1POZIn)))))
   (g$cadr$12347$1POZIn
     g$cadr$12684$1POZIn
     (case-lambda ((g$x$12516$1POZIn) (car (cdr g$x$12516$1POZIn)))))
   (g$cdar$12348$1POZIn
     g$cdar$12685$1POZIn
     (case-lambda ((g$x$12517$1POZIn) (cdr (car g$x$12517$1POZIn)))))
   (g$cddr$12349$1POZIn
     g$cddr$12686$1POZIn
     (case-lambda ((g$x$12518$1POZIn) (cdr (cdr g$x$12518$1POZIn)))))
   (g$caaar$12350$1POZIn
     g$caaar$12687$1POZIn
     (case-lambda
       ((g$x$12519$1POZIn)
        (g$caar$12346$1POZIn (car g$x$12519$1POZIn)))))
   (g$caadr$12351$1POZIn
     g$caadr$12688$1POZIn
     (case-lambda
       ((g$x$12520$1POZIn)
        (g$caar$12346$1POZIn (cdr g$x$12520$1POZIn)))))
   (g$cadar$12352$1POZIn
     g$cadar$12689$1POZIn
     (case-lambda
       ((g$x$12521$1POZIn)
        (g$cadr$12347$1POZIn (car g$x$12521$1POZIn)))))
   (g$caddr$12353$1POZIn
     g$caddr$12690$1POZIn
     (case-lambda
       ((g$x$12522$1POZIn)
        (g$cadr$12347$1POZIn (cdr g$x$12522$1POZIn)))))
   (g$cdaar$12354$1POZIn
     g$cdaar$12691$1POZIn
     (case-lambda
       ((g$x$12523$1POZIn)
        (g$cdar$12348$1POZIn (car g$x$12523$1POZIn)))))
   (g$cdadr$12355$1POZIn
     g$cdadr$12692$1POZIn
     (case-lambda
       ((g$x$12524$1POZIn)
        (g$cdar$12348$1POZIn (cdr g$x$12524$1POZIn)))))
   (g$cddar$12356$1POZIn
     g$cddar$12693$1POZIn
     (case-lambda
       ((g$x$12525$1POZIn)
        (g$cddr$12349$1POZIn (car g$x$12525$1POZIn)))))
   (g$cdddr$12357$1POZIn
     g$cdddr$12694$1POZIn
     (case-lambda
       ((g$x$12526$1POZIn)
        (g$cddr$12349$1POZIn (cdr g$x$12526$1POZIn)))))
   (g$caaaar$12358$1POZIn
     g$caaaar$12695$1POZIn
     (case-lambda
       ((g$x$12527$1POZIn)
        (g$caaar$12350$1POZIn (car g$x$12527$1POZIn)))))
   (g$caaadr$12359$1POZIn
     g$caaadr$12696$1POZIn
     (case-lambda
       ((g$x$12528$1POZIn)
        (g$caaar$12350$1POZIn (cdr g$x$12528$1POZIn)))))
   (g$caadar$12360$1POZIn
     g$caadar$12697$1POZIn
     (case-lambda
       ((g$x$12529$1POZIn)
        (g$caadr$12351$1POZIn (car g$x$12529$1POZIn)))))
   (g$caaddr$12361$1POZIn
     g$caaddr$12698$1POZIn
     (case-lambda
       ((g$x$12530$1POZIn)
        (g$caadr$12351$1POZIn (cdr g$x$12530$1POZIn)))))
   (g$cadaar$12362$1POZIn
     g$cadaar$12699$1POZIn
     (case-lambda
       ((g$x$12531$1POZIn)
        (g$cadar$12352$1POZIn (car g$x$12531$1POZIn)))))
   (g$cadadr$12363$1POZIn
     g$cadadr$12700$1POZIn
     (case-lambda
       ((g$x$12532$1POZIn)
        (g$cadar$12352$1POZIn (cdr g$x$12532$1POZIn)))))
   (g$caddar$12364$1POZIn
     g$caddar$12701$1POZIn
     (case-lambda
       ((g$x$12533$1POZIn)
        (g$caddr$12353$1POZIn (car g$x$12533$1POZIn)))))
   (g$cadddr$12365$1POZIn
     g$cadddr$12702$1POZIn
     (case-lambda
       ((g$x$12534$1POZIn)
        (g$caddr$12353$1POZIn (cdr g$x$12534$1POZIn)))))
   (g$cdaaar$12366$1POZIn
     g$cdaaar$12703$1POZIn
     (case-lambda
       ((g$x$12535$1POZIn)
        (g$cdaar$12354$1POZIn (car g$x$12535$1POZIn)))))
   (g$cdaadr$12367$1POZIn
     g$cdaadr$12704$1POZIn
     (case-lambda
       ((g$x$12536$1POZIn)
        (g$cdaar$12354$1POZIn (cdr g$x$12536$1POZIn)))))
   (g$cdadar$12368$1POZIn
     g$cdadar$12705$1POZIn
     (case-lambda
       ((g$x$12537$1POZIn)
        (g$cdadr$12355$1POZIn (car g$x$12537$1POZIn)))))
   (g$cdaddr$12369$1POZIn
     g$cdaddr$12706$1POZIn
     (case-lambda
       ((g$x$12538$1POZIn)
        (g$cdadr$12355$1POZIn (cdr g$x$12538$1POZIn)))))
   (g$cddaar$12370$1POZIn
     g$cddaar$12707$1POZIn
     (case-lambda
       ((g$x$12539$1POZIn)
        (g$cddar$12356$1POZIn (car g$x$12539$1POZIn)))))
   (g$cddadr$12371$1POZIn
     g$cddadr$12708$1POZIn
     (case-lambda
       ((g$x$12540$1POZIn)
        (g$cddar$12356$1POZIn (cdr g$x$12540$1POZIn)))))
   (g$cdddar$12372$1POZIn
     g$cdddar$12709$1POZIn
     (case-lambda
       ((g$x$12541$1POZIn)
        (g$cdddr$12357$1POZIn (car g$x$12541$1POZIn)))))
   (g$cddddr$12373$1POZIn
     g$cddddr$12710$1POZIn
     (case-lambda
       ((g$x$12542$1POZIn)
        (g$cdddr$12357$1POZIn (cdr g$x$12542$1POZIn)))))
   (g$even?$12374$1POZIn
     g$even?$12711$1POZIn
     (case-lambda
       ((g$n$12543$1POZIn)
        (begin
          (if (not (g$integer-valued?$13612$1POZIn g$n$12543$1POZIn))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$12543$1POZIn)
            (void))
          (g$=$13618$1POZIn
            '0
            (g$mod$12335$1POZIn g$n$12543$1POZIn '2))))))
   (g$odd?$12375$1POZIn
     g$odd?$12712$1POZIn
     (case-lambda
       ((g$n$12544$1POZIn)
        (begin
          (if (not (g$integer-valued?$13612$1POZIn g$n$12544$1POZIn))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$12544$1POZIn)
            (void))
          (g$=$13618$1POZIn
            '1
            (g$mod$12335$1POZIn g$n$12544$1POZIn '2))))))
   (g$max$12376$1POZIn
     g$max$12713$1POZIn
     (case-lambda
       ((g$a$12545$1POZIn . g$rest$12546$1POZIn)
        (begin
          (if (not (g$real-valued?$13610$1POZIn g$a$12545$1POZIn))
            (assertion-violation 'max '"not a real" g$a$12545$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            (case-lambda
              ((g$a$12547$1POZIn g$b$12548$1POZIn)
               ((case-lambda
                  ((g$r$12549$1POZIn)
                   (if ((case-lambda
                          ((g$t$12550$1POZIn)
                           (if g$t$12550$1POZIn
                             g$t$12550$1POZIn
                             (begin
                               '#f
                               (g$inexact?$13605$1POZIn
                                 g$b$12548$1POZIn)))))
                        (g$inexact?$13605$1POZIn g$a$12547$1POZIn))
                     (g$inexact$13616$1POZIn g$r$12549$1POZIn)
                     g$r$12549$1POZIn)))
                (if (g$<$13619$1POZIn g$a$12547$1POZIn g$b$12548$1POZIn)
                  g$b$12548$1POZIn
                  g$a$12547$1POZIn))))
            g$a$12545$1POZIn
            g$rest$12546$1POZIn)))))
   (g$min$12377$1POZIn
     g$min$12714$1POZIn
     (case-lambda
       ((g$a$12551$1POZIn . g$rest$12552$1POZIn)
        (begin
          (if (not (g$real-valued?$13610$1POZIn g$a$12551$1POZIn))
            (assertion-violation 'min '"not a real" g$a$12551$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            (case-lambda
              ((g$a$12553$1POZIn g$b$12554$1POZIn)
               ((case-lambda
                  ((g$r$12555$1POZIn)
                   (if ((case-lambda
                          ((g$t$12556$1POZIn)
                           (if g$t$12556$1POZIn
                             g$t$12556$1POZIn
                             (begin
                               '#f
                               (g$inexact?$13605$1POZIn
                                 g$b$12554$1POZIn)))))
                        (g$inexact?$13605$1POZIn g$a$12553$1POZIn))
                     (g$inexact$13616$1POZIn g$r$12555$1POZIn)
                     g$r$12555$1POZIn)))
                (if (g$>$13621$1POZIn g$a$12553$1POZIn g$b$12554$1POZIn)
                  g$b$12554$1POZIn
                  g$a$12553$1POZIn))))
            g$a$12551$1POZIn
            g$rest$12552$1POZIn)))))
   (g$gcd$12378$1POZIn
     g$gcd$12715$1POZIn
     (case-lambda
       (g$nums$12557$1POZIn
        ((case-lambda
           ((g$t$12558$1POZIn)
            (if (eqv? g$t$12558$1POZIn '0)
              '0
              (if (eqv? g$t$12558$1POZIn '1)
                ((case-lambda
                   ((g$n$12559$1POZIn)
                    (begin
                      (if (not (g$integer-valued?$13612$1POZIn
                                 g$n$12559$1POZIn))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$12559$1POZIn)
                        (void))
                      (g$abs$13644$1POZIn g$n$12559$1POZIn))))
                 (car g$nums$12557$1POZIn))
                (if (eqv? g$t$12558$1POZIn '2)
                  ((case-lambda
                     ((g$a$12560$1POZIn g$b$12561$1POZIn)
                      (begin
                        (if (not (g$integer-valued?$13612$1POZIn
                                   g$a$12560$1POZIn))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$12560$1POZIn)
                          (void))
                        (if (not (g$integer-valued?$13612$1POZIn
                                   g$b$12561$1POZIn))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$12561$1POZIn)
                          (void))
                        (if (g$zero?$13613$1POZIn g$b$12561$1POZIn)
                          (g$abs$13644$1POZIn g$a$12560$1POZIn)
                          (g$abs$13644$1POZIn
                            (g$gcd$12378$1POZIn
                              g$b$12561$1POZIn
                              (g$mod$12335$1POZIn
                                g$a$12560$1POZIn
                                g$b$12561$1POZIn)))))))
                   (car g$nums$12557$1POZIn)
                   (g$cadr$12347$1POZIn g$nums$12557$1POZIn))
                  (begin
                    '#f
                    (g$fold-left$11836$1POZIn
                      g$gcd$12378$1POZIn
                      (g$abs$13644$1POZIn (car g$nums$12557$1POZIn))
                      (cdr g$nums$12557$1POZIn))))))))
         (length g$nums$12557$1POZIn)))))
   (g$lcm$12379$1POZIn
     g$lcm$12716$1POZIn
     (case-lambda
       (g$nums$12562$1POZIn
        ((case-lambda
           ((g$t$12563$1POZIn)
            (if (eqv? g$t$12563$1POZIn '0)
              '1
              (if (eqv? g$t$12563$1POZIn '1)
                ((case-lambda
                   ((g$n$12564$1POZIn)
                    (begin
                      (if (not (g$integer-valued?$13612$1POZIn
                                 g$n$12564$1POZIn))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$12564$1POZIn)
                        (void))
                      (g$abs$13644$1POZIn g$n$12564$1POZIn))))
                 (car g$nums$12562$1POZIn))
                (if (eqv? g$t$12563$1POZIn '2)
                  ((case-lambda
                     ((g$a$12565$1POZIn g$b$12566$1POZIn)
                      (begin
                        (if (not (g$integer-valued?$13612$1POZIn
                                   g$a$12565$1POZIn))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$12565$1POZIn)
                          (void))
                        (if (not (g$integer-valued?$13612$1POZIn
                                   g$b$12566$1POZIn))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$12566$1POZIn)
                          (void))
                        (if ((case-lambda
                               ((g$t$12567$1POZIn)
                                (if g$t$12567$1POZIn
                                  g$t$12567$1POZIn
                                  (begin
                                    '#f
                                    (g$zero?$13613$1POZIn
                                      g$b$12566$1POZIn)))))
                             (g$zero?$13613$1POZIn g$a$12565$1POZIn))
                          '0
                          (g$abs$13644$1POZIn
                            (* (/ g$a$12565$1POZIn
                                  (g$gcd$12378$1POZIn
                                    g$a$12565$1POZIn
                                    g$b$12566$1POZIn))
                               g$b$12566$1POZIn))))))
                   (car g$nums$12562$1POZIn)
                   (g$cadr$12347$1POZIn g$nums$12562$1POZIn))
                  (begin
                    '#f
                    (g$fold-left$11836$1POZIn
                      g$lcm$12379$1POZIn
                      (g$abs$13644$1POZIn (car g$nums$12562$1POZIn))
                      (cdr g$nums$12562$1POZIn))))))))
         (length g$nums$12562$1POZIn)))))
   (g$string=?$12420$1POZIn
     g$string=?$12717$1POZIn
     (case-lambda
       ((g$a$12568$1POZIn g$b$12569$1POZIn . g$rest$12570$1POZIn)
        (begin
          (if (not (string? g$a$12568$1POZIn))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$12568$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12571$1POZIn)
               (begin
                 (if (not (string? g$x$12571$1POZIn))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$12571$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12572$1POZIn)
                     (begin
                       (set! g$a$12568$1POZIn g$x$12571$1POZIn)
                       g$r$12572$1POZIn)))
                  (g$fx=?$16904$1POZIn
                    (string-compare g$a$12568$1POZIn g$x$12571$1POZIn)
                    '0)))))
            (cons g$b$12569$1POZIn g$rest$12570$1POZIn))))))
   (g$string<?$12421$1POZIn
     g$string<?$12718$1POZIn
     (case-lambda
       ((g$a$12573$1POZIn g$b$12574$1POZIn . g$rest$12575$1POZIn)
        (begin
          (if (not (string? g$a$12573$1POZIn))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$12573$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12576$1POZIn)
               (begin
                 (if (not (string? g$x$12576$1POZIn))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$12576$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12577$1POZIn)
                     (begin
                       (set! g$a$12573$1POZIn g$x$12576$1POZIn)
                       g$r$12577$1POZIn)))
                  (g$fx<?$16905$1POZIn
                    (string-compare g$a$12573$1POZIn g$x$12576$1POZIn)
                    '0)))))
            (cons g$b$12574$1POZIn g$rest$12575$1POZIn))))))
   (g$string>?$12422$1POZIn
     g$string>?$12719$1POZIn
     (case-lambda
       ((g$a$12578$1POZIn g$b$12579$1POZIn . g$rest$12580$1POZIn)
        (begin
          (if (not (string? g$a$12578$1POZIn))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$12578$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12581$1POZIn)
               (begin
                 (if (not (string? g$x$12581$1POZIn))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$12581$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12582$1POZIn)
                     (begin
                       (set! g$a$12578$1POZIn g$x$12581$1POZIn)
                       g$r$12582$1POZIn)))
                  (g$fx>?$16907$1POZIn
                    (string-compare g$a$12578$1POZIn g$x$12581$1POZIn)
                    '0)))))
            (cons g$b$12579$1POZIn g$rest$12580$1POZIn))))))
   (g$string<=?$12423$1POZIn
     g$string<=?$12720$1POZIn
     (case-lambda
       ((g$a$12583$1POZIn g$b$12584$1POZIn . g$rest$12585$1POZIn)
        (begin
          (if (not (string? g$a$12583$1POZIn))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$12583$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12586$1POZIn)
               (begin
                 (if (not (string? g$x$12586$1POZIn))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$12586$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12587$1POZIn)
                     (begin
                       (set! g$a$12583$1POZIn g$x$12586$1POZIn)
                       g$r$12587$1POZIn)))
                  (g$fx<=?$16906$1POZIn
                    (string-compare g$a$12583$1POZIn g$x$12586$1POZIn)
                    '0)))))
            (cons g$b$12584$1POZIn g$rest$12585$1POZIn))))))
   (g$string>=?$12424$1POZIn
     g$string>=?$12721$1POZIn
     (case-lambda
       ((g$a$12588$1POZIn g$b$12589$1POZIn . g$rest$12590$1POZIn)
        (begin
          (if (not (string? g$a$12588$1POZIn))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$12588$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12591$1POZIn)
               (begin
                 (if (not (string? g$x$12591$1POZIn))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$12591$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12592$1POZIn)
                     (begin
                       (set! g$a$12588$1POZIn g$x$12591$1POZIn)
                       g$r$12592$1POZIn)))
                  (g$fx>=?$16908$1POZIn
                    (string-compare g$a$12588$1POZIn g$x$12591$1POZIn)
                    '0)))))
            (cons g$b$12589$1POZIn g$rest$12590$1POZIn))))))
   (g$symbol=?$12425$1POZIn
     g$symbol=?$12722$1POZIn
     (case-lambda
       ((g$a$12593$1POZIn g$b$12594$1POZIn . g$rest$12595$1POZIn)
        (begin
          (if (not (g$symbol?$12328$1POZIn g$a$12593$1POZIn))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$12593$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12596$1POZIn)
               (begin
                 (if (not (g$symbol?$12328$1POZIn g$x$12596$1POZIn))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$12596$1POZIn)
                   (void))
                 (eq? g$a$12593$1POZIn g$x$12596$1POZIn))))
            (cons g$b$12594$1POZIn g$rest$12595$1POZIn))))))
   (g$boolean=?$12426$1POZIn
     g$boolean=?$12723$1POZIn
     (case-lambda
       ((g$a$12597$1POZIn g$b$12598$1POZIn . g$rest$12599$1POZIn)
        (begin
          (if (not (g$boolean?$12329$1POZIn g$a$12597$1POZIn))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$12597$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12600$1POZIn)
               (begin
                 (if (not (g$boolean?$12329$1POZIn g$x$12600$1POZIn))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$12600$1POZIn)
                   (void))
                 (eq? g$a$12597$1POZIn g$x$12600$1POZIn))))
            (cons g$b$12598$1POZIn g$rest$12599$1POZIn))))))
   (g$char=?$12467$1POZIn
     g$char=?$12724$1POZIn
     (case-lambda
       ((g$a$12601$1POZIn g$b$12602$1POZIn . g$rest$12603$1POZIn)
        (begin
          (if (not (g$char?$12325$1POZIn g$a$12601$1POZIn))
            (assertion-violation 'char=? '"not a char" g$a$12601$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12604$1POZIn)
               (begin
                 (if (not (g$char?$12325$1POZIn g$x$12604$1POZIn))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$12604$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12605$1POZIn)
                     (begin
                       (set! g$a$12601$1POZIn g$x$12604$1POZIn)
                       g$r$12605$1POZIn)))
                  (g$fx=?$16904$1POZIn
                    (char->integer g$a$12601$1POZIn)
                    (char->integer g$x$12604$1POZIn))))))
            (cons g$b$12602$1POZIn g$rest$12603$1POZIn))))))
   (g$char<?$12468$1POZIn
     g$char<?$12725$1POZIn
     (case-lambda
       ((g$a$12606$1POZIn g$b$12607$1POZIn . g$rest$12608$1POZIn)
        (begin
          (if (not (g$char?$12325$1POZIn g$a$12606$1POZIn))
            (assertion-violation 'char<? '"not a char" g$a$12606$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12609$1POZIn)
               (begin
                 (if (not (g$char?$12325$1POZIn g$x$12609$1POZIn))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$12609$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12610$1POZIn)
                     (begin
                       (set! g$a$12606$1POZIn g$x$12609$1POZIn)
                       g$r$12610$1POZIn)))
                  (g$fx<?$16905$1POZIn
                    (char->integer g$a$12606$1POZIn)
                    (char->integer g$x$12609$1POZIn))))))
            (cons g$b$12607$1POZIn g$rest$12608$1POZIn))))))
   (g$char>?$12469$1POZIn
     g$char>?$12726$1POZIn
     (case-lambda
       ((g$a$12611$1POZIn g$b$12612$1POZIn . g$rest$12613$1POZIn)
        (begin
          (if (not (g$char?$12325$1POZIn g$a$12611$1POZIn))
            (assertion-violation 'char>? '"not a char" g$a$12611$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12614$1POZIn)
               (begin
                 (if (not (g$char?$12325$1POZIn g$x$12614$1POZIn))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$12614$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12615$1POZIn)
                     (begin
                       (set! g$a$12611$1POZIn g$x$12614$1POZIn)
                       g$r$12615$1POZIn)))
                  (g$fx>?$16907$1POZIn
                    (char->integer g$a$12611$1POZIn)
                    (char->integer g$x$12614$1POZIn))))))
            (cons g$b$12612$1POZIn g$rest$12613$1POZIn))))))
   (g$char<=?$12470$1POZIn
     g$char<=?$12727$1POZIn
     (case-lambda
       ((g$a$12616$1POZIn g$b$12617$1POZIn . g$rest$12618$1POZIn)
        (begin
          (if (not (g$char?$12325$1POZIn g$a$12616$1POZIn))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$12616$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12619$1POZIn)
               (begin
                 (if (not (g$char?$12325$1POZIn g$x$12619$1POZIn))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$12619$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12620$1POZIn)
                     (begin
                       (set! g$a$12616$1POZIn g$x$12619$1POZIn)
                       g$r$12620$1POZIn)))
                  (g$fx<=?$16906$1POZIn
                    (char->integer g$a$12616$1POZIn)
                    (char->integer g$x$12619$1POZIn))))))
            (cons g$b$12617$1POZIn g$rest$12618$1POZIn))))))
   (g$char>=?$12471$1POZIn
     g$char>=?$12728$1POZIn
     (case-lambda
       ((g$a$12621$1POZIn g$b$12622$1POZIn . g$rest$12623$1POZIn)
        (begin
          (if (not (g$char?$12325$1POZIn g$a$12621$1POZIn))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$12621$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$12624$1POZIn)
               (begin
                 (if (not (g$char?$12325$1POZIn g$x$12624$1POZIn))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$12624$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$12625$1POZIn)
                     (begin
                       (set! g$a$12621$1POZIn g$x$12624$1POZIn)
                       g$r$12625$1POZIn)))
                  (g$fx>=?$16908$1POZIn
                    (char->integer g$a$12621$1POZIn)
                    (char->integer g$x$12624$1POZIn))))))
            (cons g$b$12622$1POZIn g$rest$12623$1POZIn))))))
   (g$rationalize$12472$1POZIn
     g$rationalize$12729$1POZIn
     (case-lambda
       ((g$x$12626$1POZIn g$e$12627$1POZIn)
        (if (if (g$infinite?$13603$1POZIn g$x$12626$1POZIn)
              (begin '#f (g$infinite?$13603$1POZIn g$e$12627$1POZIn))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$12628$1POZIn)
              (if (if (g$exact?$13604$1POZIn g$x$12626$1POZIn)
                    (begin '#f (g$exact?$13604$1POZIn g$e$12627$1POZIn))
                    '#f)
                g$r$12628$1POZIn
                (g$inexact$13616$1POZIn g$r$12628$1POZIn))))
           (apply
             /
             (g$find-ratio$12473$1POZIn
               g$x$12626$1POZIn
               g$e$12627$1POZIn)))))))
   (g$find-ratio$12473$1POZIn
     g$find-ratio$12730$1POZIn
     (case-lambda
       ((g$x$12629$1POZIn g$e$12630$1POZIn)
        (g$find-ratio-between$12474$1POZIn
          (- g$x$12629$1POZIn g$e$12630$1POZIn)
          (+ g$x$12629$1POZIn g$e$12630$1POZIn)))))
   (g$find-ratio-between$12474$1POZIn
     g$find-ratio-between$12731$1POZIn
     (case-lambda
       ((g$x$12631$1POZIn g$y$12632$1POZIn)
        (letrec* ((g$sr$12633$1POZIn
                    (case-lambda
                      ((g$x$12635$1POZIn g$y$12636$1POZIn)
                       ((case-lambda
                          ((g$fx$12637$1POZIn g$fy$12638$1POZIn)
                           (if (g$>=$13622$1POZIn
                                 g$fx$12637$1POZIn
                                 g$x$12635$1POZIn)
                             (list g$fx$12637$1POZIn '1)
                             (if (g$=$13618$1POZIn
                                   g$fx$12637$1POZIn
                                   g$fy$12638$1POZIn)
                               ((case-lambda
                                  ((g$rat$12639$1POZIn)
                                   (list
                                     (+ (g$cadr$12347$1POZIn
                                          g$rat$12639$1POZIn)
                                        (* g$fx$12637$1POZIn
                                           (car g$rat$12639$1POZIn)))
                                     (car g$rat$12639$1POZIn))))
                                (g$sr$12633$1POZIn
                                  (/ (- g$y$12636$1POZIn
                                        g$fy$12638$1POZIn))
                                  (/ (- g$x$12635$1POZIn
                                        g$fx$12637$1POZIn))))
                               (begin
                                 '#f
                                 (list (+ '1 g$fx$12637$1POZIn) '1))))))
                        (g$exact$13617$1POZIn
                          (g$floor$13645$1POZIn g$x$12635$1POZIn))
                        (g$exact$13617$1POZIn
                          (g$floor$13645$1POZIn g$y$12636$1POZIn)))))))
          (if (g$<$13619$1POZIn g$y$12632$1POZIn g$x$12631$1POZIn)
            (g$find-ratio-between$12474$1POZIn
              g$y$12632$1POZIn
              g$x$12631$1POZIn)
            (if (g$>=$13622$1POZIn g$x$12631$1POZIn g$y$12632$1POZIn)
              (list g$x$12631$1POZIn '1)
              (if (g$positive?$13614$1POZIn g$x$12631$1POZIn)
                (g$sr$12633$1POZIn g$x$12631$1POZIn g$y$12632$1POZIn)
                (if (g$negative?$13615$1POZIn g$y$12632$1POZIn)
                  ((case-lambda
                     ((g$rat$12634$1POZIn)
                      (list
                        (- (car g$rat$12634$1POZIn))
                        (g$cadr$12347$1POZIn g$rat$12634$1POZIn))))
                   (g$sr$12633$1POZIn
                     (- g$y$12632$1POZIn)
                     (- g$x$12631$1POZIn)))
                  (begin '#f '(0 1))))))))))
   (g$vector-map$12475$1POZIn
     g$vector-map$12732$1POZIn
     (case-lambda
       ((g$p$12640$1POZIn g$vec1$12641$1POZIn . g$vecs$12642$1POZIn)
        ((case-lambda
           ((g$len$12643$1POZIn)
            ((case-lambda
               ((g$res$12644$1POZIn)
                (letrec ((g$loop$12645$1POZIn
                           (case-lambda
                             ((g$i$12646$1POZIn)
                              (if (g$fx=?$16904$1POZIn
                                    g$i$12646$1POZIn
                                    g$len$12643$1POZIn)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$12644$1POZIn)
                                (begin
                                  (g$vector-set!$12342$1POZIn
                                    g$res$12644$1POZIn
                                    g$i$12646$1POZIn
                                    (if (null? g$vecs$12642$1POZIn)
                                      (g$p$12640$1POZIn
                                        (g$vector-ref$12341$1POZIn
                                          g$vec1$12641$1POZIn
                                          g$i$12646$1POZIn))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$11833$1POZIn
                                               (case-lambda
                                                 ((g$x$12647$1POZIn)
                                                  (g$vector-ref$12341$1POZIn
                                                    g$x$12647$1POZIn
                                                    g$i$12646$1POZIn)))
                                               (cons
                                                 g$vec1$12641$1POZIn
                                                 g$vecs$12642$1POZIn)))))
                                        g$p$12640$1POZIn)))
                                  (g$loop$12645$1POZIn
                                    (g$fx+$16891$1POZIn
                                      g$i$12646$1POZIn
                                      '1))))))))
                  (g$loop$12645$1POZIn '0))))
             (make-vector g$len$12643$1POZIn '()))))
         (vector-length g$vec1$12641$1POZIn)))))
   (g$vector-for-each$12476$1POZIn
     g$vector-for-each$12733$1POZIn
     (case-lambda
       ((g$p$12648$1POZIn g$vec1$12649$1POZIn . g$vecs$12650$1POZIn)
        ((case-lambda
           ((g$len$12651$1POZIn)
            (letrec ((g$loop$12652$1POZIn
                       (case-lambda
                         ((g$i$12653$1POZIn)
                          (if (g$fx=?$16904$1POZIn
                                g$i$12653$1POZIn
                                g$len$12651$1POZIn)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$12650$1POZIn)
                                (g$p$12648$1POZIn
                                  (g$vector-ref$12341$1POZIn
                                    g$vec1$12649$1POZIn
                                    g$i$12653$1POZIn))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11833$1POZIn
                                         (case-lambda
                                           ((g$x$12654$1POZIn)
                                            (g$vector-ref$12341$1POZIn
                                              g$x$12654$1POZIn
                                              g$i$12653$1POZIn)))
                                         (cons
                                           g$vec1$12649$1POZIn
                                           g$vecs$12650$1POZIn)))))
                                  g$p$12648$1POZIn))
                              (g$loop$12652$1POZIn
                                (g$fx+$16891$1POZIn
                                  g$i$12653$1POZIn
                                  '1))))))))
              (g$loop$12652$1POZIn '0))))
         (vector-length g$vec1$12649$1POZIn)))))
   (g$string-for-each$12477$1POZIn
     g$string-for-each$12734$1POZIn
     (case-lambda
       ((g$p$12655$1POZIn g$str1$12656$1POZIn . g$strs$12657$1POZIn)
        ((case-lambda
           ((g$len$12658$1POZIn)
            (letrec ((g$loop$12659$1POZIn
                       (case-lambda
                         ((g$i$12660$1POZIn)
                          (if (g$fx=?$16904$1POZIn
                                g$i$12660$1POZIn
                                g$len$12658$1POZIn)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$12657$1POZIn)
                                (g$p$12655$1POZIn
                                  (string-ref
                                    g$str1$12656$1POZIn
                                    g$i$12660$1POZIn))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$11833$1POZIn
                                         (case-lambda
                                           ((g$x$12661$1POZIn)
                                            (string-ref
                                              g$x$12661$1POZIn
                                              g$i$12660$1POZIn)))
                                         (cons
                                           g$str1$12656$1POZIn
                                           g$strs$12657$1POZIn)))))
                                  g$p$12655$1POZIn))
                              (g$loop$12659$1POZIn
                                (g$fx+$16891$1POZIn
                                  g$i$12660$1POZIn
                                  '1))))))))
              (g$loop$12659$1POZIn '0))))
         (string-length g$str1$12656$1POZIn))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$12736$1POZIn
     g$using$12770$1POZIn
     (clr-using-internal 'system))
   (g$using$12738$1POZIn
     g$using$12771$1POZIn
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$12739$1POZIn
     g$make-eq-hashtable$12772$1POZIn
     (case-lambda
       (() (g$make-eq-hashtable$12739$1POZIn '32))
       ((g$k$12748$1POZIn)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$12748$1POZIn)))))
   (g$make-eqv-hashtable$12740$1POZIn
     g$make-eqv-hashtable$12773$1POZIn
     (case-lambda
       (() (g$make-eqv-hashtable$12740$1POZIn '32))
       ((g$k$12749$1POZIn)
        (make-hashtable eqv-hash eqv? g$k$12749$1POZIn))))
   (g$hashtable-size$12741$1POZIn
     g$hashtable-size$12774$1POZIn
     (case-lambda
       ((g$ht$12750$1POZIn)
        (clr-call-internal 'hashtable 'get_count g$ht$12750$1POZIn))))
   (g$hashtable-ref$12742$1POZIn
     g$hashtable-ref$12775$1POZIn
     (case-lambda
       ((g$ht$12751$1POZIn g$key$12752$1POZIn g$default$12753$1POZIn)
        (letrec* ((g$r$12754$1POZIn
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$12751$1POZIn
                      g$key$12752$1POZIn)))
          (if ((case-lambda
                 ((g$t$12755$1POZIn)
                  (if g$t$12755$1POZIn
                    g$t$12755$1POZIn
                    (begin
                      '#f
                      (g$hashtable-contains?$12745$1POZIn
                        g$ht$12751$1POZIn
                        g$key$12752$1POZIn)))))
               (not (null? g$r$12754$1POZIn)))
            g$r$12754$1POZIn
            g$default$12753$1POZIn)))))
   (g$hashtable-set!$12743$1POZIn
     g$hashtable-set!$12776$1POZIn
     (case-lambda
       ((g$ht$12756$1POZIn g$key$12757$1POZIn g$obj$12758$1POZIn)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$12756$1POZIn
          g$key$12757$1POZIn
          g$obj$12758$1POZIn))))
   (g$hashtable-delete!$12744$1POZIn
     g$hashtable-delete!$12777$1POZIn
     (case-lambda
       ((g$ht$12759$1POZIn g$key$12760$1POZIn)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$12759$1POZIn
          g$key$12760$1POZIn))))
   (g$hashtable-contains?$12745$1POZIn
     g$hashtable-contains?$12778$1POZIn
     (case-lambda
       ((g$ht$12761$1POZIn g$key$12762$1POZIn)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$12761$1POZIn
          g$key$12762$1POZIn))))
   (g$hashtable-update!$12746$1POZIn
     g$hashtable-update!$12779$1POZIn
     (case-lambda
       ((g$ht$12763$1POZIn
          g$key$12764$1POZIn
          g$proc$12765$1POZIn
          g$default$12766$1POZIn)
        (g$hashtable-set!$12743$1POZIn
          g$ht$12763$1POZIn
          g$key$12764$1POZIn
          (g$proc$12765$1POZIn
            (g$hashtable-ref$12742$1POZIn
              g$ht$12763$1POZIn
              g$key$12764$1POZIn
              g$default$12766$1POZIn))))))
   (g$hashtable-clear!$12747$1POZIn
     g$hashtable-clear!$12780$1POZIn
     (case-lambda
       ((g$ht$12767$1POZIn)
        (g$hashtable-clear!$12747$1POZIn g$ht$12767$1POZIn '32))
       ((g$ht$12768$1POZIn g$k$12769$1POZIn)
        (clr-call-internal 'hashtable 'clear g$ht$12768$1POZIn)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$12782$1POZIn
     g$using$12789$1POZIn
     (clr-using-internal 'system.io))
   (g$file-exists?$12783$1POZIn
     g$file-exists?$12790$1POZIn
     (case-lambda
       ((g$fn$12786$1POZIn)
        (clr-call-internal 'file 'exists '() g$fn$12786$1POZIn))))
   (g$delete-file$12784$1POZIn
     g$delete-file$12791$1POZIn
     (case-lambda
       ((g$fn$12787$1POZIn)
        (clr-call-internal 'file 'delete '() g$fn$12787$1POZIn))))
   (g$get-directory-name$12785$1POZIn
     g$get-directory-name$12792$1POZIn
     (case-lambda
       ((g$path$12788$1POZIn)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$12788$1POZIn)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$12793$1POZIn
     g$native-endianness$13105$1POZIn
     (case-lambda (() 'little)))
   (g$utf8$12794$1POZIn
     g$utf8$13106$1POZIn
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$12795$1POZIn
     g$utf16le$13107$1POZIn
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$12796$1POZIn
     g$utf16be$13108$1POZIn
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$12797$1POZIn
     g$utf32le$13109$1POZIn
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$12798$1POZIn
     g$utf32be$13110$1POZIn
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$get-bytes$12799$1POZIn
     g$get-bytes$13111$1POZIn
     (case-lambda
       ((g$enc$12875$1POZIn g$str$12876$1POZIn)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$12875$1POZIn
          g$str$12876$1POZIn))))
   (g$get-string$12800$1POZIn
     g$get-string$13112$1POZIn
     (case-lambda
       ((g$enc$12877$1POZIn g$bv$12878$1POZIn)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$12877$1POZIn
          g$bv$12878$1POZIn))))
   (g$byte->sbyte$12801$1POZIn
     g$byte->sbyte$13113$1POZIn
     (case-lambda
       ((g$b$12879$1POZIn)
        (clr-cast-internal
          'System.SByte
          (clr-cast-internal 'System.Byte g$b$12879$1POZIn)))))
   (g$->byte$12802$1POZIn
     g$->byte$13114$1POZIn
     (case-lambda
       ((g$k$12880$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$k$12880$1POZIn))
            (assertion-violation '#f '"not a fixnum" g$k$12880$1POZIn)
            (void))
          (if ((case-lambda
                 ((g$t$12881$1POZIn)
                  (if g$t$12881$1POZIn
                    g$t$12881$1POZIn
                    (begin
                      '#f
                      (g$fx>?$16907$1POZIn g$k$12880$1POZIn '255)))))
               (g$fx<?$16905$1POZIn g$k$12880$1POZIn '-128))
            (assertion-violation
              '#f
              '"too big or small for octect or byte"
              g$k$12880$1POZIn)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$12880$1POZIn))))))
   (g$residual-->fixnum$12818$1POZIn
     g$residual-->fixnum$13115$1POZIn
     (case-lambda
       ((g$b$12902$1POZIn)
        (clr-cast-internal
          'System.Int32
          (clr-cast-internal 'System.Byte g$b$12902$1POZIn)))))
   (g$make-bytevector$12819$1POZIn
     g$make-bytevector$13116$1POZIn
     (case-lambda
       ((g$k$12903$1POZIn)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$12903$1POZIn)))
       ((g$k$12904$1POZIn g$fill$12905$1POZIn)
        ((case-lambda
           ((g$bv$12906$1POZIn)
            (begin
              (g$bytevector-fill!$12822$1POZIn
                g$bv$12906$1POZIn
                g$fill$12905$1POZIn)
              g$bv$12906$1POZIn)))
         (g$make-bytevector$12819$1POZIn g$k$12904$1POZIn)))))
   (g$bytevector-length$12820$1POZIn
     g$bytevector-length$13117$1POZIn
     (case-lambda
       ((g$bv$12907$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12907$1POZIn))
            (assertion-violation
              'bytevector-length
              '"not a bytevector"
              g$bv$12907$1POZIn)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$12907$1POZIn)))))
   (g$bytevector=?$12821$1POZIn
     g$bytevector=?$13118$1POZIn
     (case-lambda
       ((g$bv1$12908$1POZIn g$bv2$12909$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv1$12908$1POZIn))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv1$12908$1POZIn)
            (void))
          (if (not (g$bytevector?$12664$1POZIn g$bv2$12909$1POZIn))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv2$12909$1POZIn)
            (void))
          (if (eq? g$bv1$12908$1POZIn g$bv2$12909$1POZIn)
            '#t
            ((case-lambda
               ((g$t$12910$1POZIn)
                (if g$t$12910$1POZIn
                  g$t$12910$1POZIn
                  (begin '#f (begin '#f '#f)))))
             ((case-lambda
                ((g$bl$12911$1POZIn)
                 (if (g$=$13618$1POZIn
                       g$bl$12911$1POZIn
                       (g$bytevector-length$12820$1POZIn
                         g$bv2$12909$1POZIn))
                   ((letrec ((g$f$12912$1POZIn
                               (case-lambda
                                 ((g$i$12913$1POZIn)
                                  (if (g$=$13618$1POZIn
                                        g$i$12913$1POZIn
                                        g$bl$12911$1POZIn)
                                    '#t
                                    (if (g$=$13618$1POZIn
                                          (g$bytevector-u8-ref$12825$1POZIn
                                            g$bv1$12908$1POZIn
                                            g$i$12913$1POZIn)
                                          (g$bytevector-u8-ref$12825$1POZIn
                                            g$bv2$12909$1POZIn
                                            g$i$12913$1POZIn))
                                      (g$f$12912$1POZIn
                                        (+ g$i$12913$1POZIn '1))
                                      (begin '#f '#f)))))))
                      g$f$12912$1POZIn)
                    '0)
                   '#f)))
              (g$bytevector-length$12820$1POZIn
                g$bv1$12908$1POZIn))))))))
   (g$bytevector-fill!$12822$1POZIn
     g$bytevector-fill!$13119$1POZIn
     (case-lambda
       ((g$bv$12914$1POZIn g$fill$12915$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12914$1POZIn))
            (assertion-violation
              'bytevector-fill!
              '"not a bytevector"
              g$bv$12914$1POZIn)
            (void))
          ((case-lambda
             ((g$fill$12916$1POZIn g$k$12917$1POZIn)
              ((letrec ((g$f$12918$1POZIn
                          (case-lambda
                            ((g$i$12919$1POZIn)
                             (if (not (g$=$13618$1POZIn
                                        g$i$12919$1POZIn
                                        g$k$12917$1POZIn))
                               (begin
                                 (g$bytevector-u8-set!$12826$1POZIn
                                   g$bv$12914$1POZIn
                                   g$i$12919$1POZIn
                                   g$fill$12916$1POZIn)
                                 (g$f$12918$1POZIn
                                   (+ g$i$12919$1POZIn '1)))
                               (void))))))
                 g$f$12918$1POZIn)
               '0)))
           (g$->byte$12802$1POZIn g$fill$12915$1POZIn)
           (g$bytevector-length$12820$1POZIn g$bv$12914$1POZIn))))))
   (g$bytevector-copy!$12823$1POZIn
     g$bytevector-copy!$13120$1POZIn
     (case-lambda
       ((g$bv1$12920$1POZIn
          g$s1$12921$1POZIn
          g$bv2$12922$1POZIn
          g$s2$12923$1POZIn
          g$len$12924$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv1$12920$1POZIn))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$12920$1POZIn)
            (void))
          (if (not (g$bytevector?$12664$1POZIn g$bv2$12922$1POZIn))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$12922$1POZIn)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$12920$1POZIn
            g$s1$12921$1POZIn
            g$bv2$12922$1POZIn
            g$s2$12923$1POZIn
            g$len$12924$1POZIn)))))
   (g$bytevector-copy$12824$1POZIn
     g$bytevector-copy$13121$1POZIn
     (case-lambda
       ((g$bv$12925$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12925$1POZIn))
            (assertion-violation
              'bytevector-copy
              '"not a bytevector"
              g$bv$12925$1POZIn)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$12925$1POZIn)))))
   (g$bytevector-u8-ref$12825$1POZIn
     g$bytevector-u8-ref$13122$1POZIn
     (case-lambda
       ((g$bv$12926$1POZIn g$k$12927$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12926$1POZIn))
            (assertion-violation
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$12926$1POZIn)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$12926$1POZIn g$k$12927$1POZIn))))))
   (g$bytevector-u8-set!$12826$1POZIn
     g$bytevector-u8-set!$13123$1POZIn
     (case-lambda
       ((g$bv$12928$1POZIn g$k$12929$1POZIn g$value$12930$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12928$1POZIn))
            (assertion-violation
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$12928$1POZIn)
            (void))
          ($bytevector-set!
            g$bv$12928$1POZIn
            g$k$12929$1POZIn
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$12930$1POZIn))))))
   (g$bytevector-s8-ref$12827$1POZIn
     g$bytevector-s8-ref$13124$1POZIn
     (case-lambda
       ((g$bv$12931$1POZIn g$k$12932$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12931$1POZIn))
            (assertion-violation
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$12931$1POZIn)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(SByte)"
            '()
            (g$byte->sbyte$12801$1POZIn
              ($bytevector-ref g$bv$12931$1POZIn g$k$12932$1POZIn)))))))
   (g$bytevector-s8-set!$12828$1POZIn
     g$bytevector-s8-set!$13125$1POZIn
     (case-lambda
       ((g$bv$12933$1POZIn g$k$12934$1POZIn g$value$12935$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12933$1POZIn))
            (assertion-violation
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$12933$1POZIn)
            (void))
          ($bytevector-set!
            g$bv$12933$1POZIn
            g$k$12934$1POZIn
            (g$->byte$12802$1POZIn g$value$12935$1POZIn))))))
   (g$bytevector->u8-list$12829$1POZIn
     g$bytevector->u8-list$13126$1POZIn
     (case-lambda
       ((g$bv$12936$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12936$1POZIn))
            (assertion-violation
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$12936$1POZIn)
            (void))
          ((case-lambda
             ((g$l$12937$1POZIn)
              ((letrec ((g$f$12938$1POZIn
                          (case-lambda
                            ((g$i$12939$1POZIn g$a$12940$1POZIn)
                             (if (g$negative?$13615$1POZIn
                                   g$i$12939$1POZIn)
                               g$a$12940$1POZIn
                               (g$f$12938$1POZIn
                                 (- g$i$12939$1POZIn '1)
                                 (cons
                                   (g$bytevector-u8-ref$12825$1POZIn
                                     g$bv$12936$1POZIn
                                     g$i$12939$1POZIn)
                                   g$a$12940$1POZIn)))))))
                 g$f$12938$1POZIn)
               (- g$l$12937$1POZIn '1)
               '())))
           (g$bytevector-length$12820$1POZIn g$bv$12936$1POZIn))))))
   (g$u8-list->bytevector$12830$1POZIn
     g$u8-list->bytevector$13127$1POZIn
     (case-lambda
       ((g$lst$12941$1POZIn)
        (begin
          (if (not (list? g$lst$12941$1POZIn))
            (assertion-violation
              'u8-list->bytevector
              '"not a list"
              g$lst$12941$1POZIn)
            (void))
          ((case-lambda
             ((g$l$12942$1POZIn)
              ((case-lambda
                 ((g$bv$12943$1POZIn)
                  ((letrec ((g$f$12944$1POZIn
                              (case-lambda
                                ((g$i$12945$1POZIn g$lst$12946$1POZIn)
                                 (if (g$=$13618$1POZIn
                                       g$i$12945$1POZIn
                                       g$l$12942$1POZIn)
                                   g$bv$12943$1POZIn
                                   (begin
                                     (g$bytevector-u8-set!$12826$1POZIn
                                       g$bv$12943$1POZIn
                                       g$i$12945$1POZIn
                                       (car g$lst$12946$1POZIn))
                                     (g$f$12944$1POZIn
                                       (+ g$i$12945$1POZIn '1)
                                       (cdr g$lst$12946$1POZIn))))))))
                     g$f$12944$1POZIn)
                   '0
                   g$lst$12941$1POZIn)))
               (g$make-bytevector$12819$1POZIn g$l$12942$1POZIn))))
           (length g$lst$12941$1POZIn))))))
   (g$string->utf8$12831$1POZIn
     g$string->utf8$13128$1POZIn
     (case-lambda
       ((g$s$12947$1POZIn)
        (begin
          (if (not (string? g$s$12947$1POZIn))
            (assertion-violation
              'string->utf8
              '"not a string"
              g$s$12947$1POZIn)
            (void))
          (g$get-bytes$12799$1POZIn
            g$utf8$12794$1POZIn
            g$s$12947$1POZIn)))))
   (g$string->utf16$12832$1POZIn
     g$string->utf16$13129$1POZIn
     (case-lambda
       ((g$s$12948$1POZIn)
        (g$string->utf16$12832$1POZIn g$s$12948$1POZIn 'big))
       ((g$s$12949$1POZIn g$end$12950$1POZIn)
        (begin
          (if (not (string? g$s$12949$1POZIn))
            (assertion-violation
              'string->utf16
              '"not a string"
              g$s$12949$1POZIn)
            (void))
          ((case-lambda
             ((g$t$12951$1POZIn)
              (if (eqv? g$t$12951$1POZIn 'big)
                (g$get-bytes$12799$1POZIn
                  g$utf16be$12796$1POZIn
                  g$s$12949$1POZIn)
                (if (eqv? g$t$12951$1POZIn 'little)
                  (g$get-bytes$12799$1POZIn
                    g$utf16le$12795$1POZIn
                    g$s$12949$1POZIn)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf16
                      '"unknown endianness"
                      g$end$12950$1POZIn))))))
           g$end$12950$1POZIn)))))
   (g$string->utf32$12833$1POZIn
     g$string->utf32$13130$1POZIn
     (case-lambda
       ((g$s$12952$1POZIn)
        (g$string->utf32$12833$1POZIn g$s$12952$1POZIn 'big))
       ((g$s$12953$1POZIn g$end$12954$1POZIn)
        (begin
          (if (not (string? g$s$12953$1POZIn))
            (assertion-violation
              'string->utf32
              '"not a string"
              g$s$12953$1POZIn)
            (void))
          ((case-lambda
             ((g$t$12955$1POZIn)
              (if (eqv? g$t$12955$1POZIn 'big)
                (g$get-bytes$12799$1POZIn
                  g$utf32be$12798$1POZIn
                  g$s$12953$1POZIn)
                (if (eqv? g$t$12955$1POZIn 'little)
                  (g$get-bytes$12799$1POZIn
                    g$utf32le$12797$1POZIn
                    g$s$12953$1POZIn)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf32
                      '"unknown endianness"
                      g$end$12954$1POZIn))))))
           g$end$12954$1POZIn)))))
   (g$utf8->string$12834$1POZIn
     g$utf8->string$13131$1POZIn
     (case-lambda
       ((g$bv$12956$1POZIn)
        (begin
          (if (not (g$bytevector?$12664$1POZIn g$bv$12956$1POZIn))
            (assertion-violation
              'utf8->string
              '"not a bytevector"
              g$bv$12956$1POZIn)
            (void))
          (g$get-string$12800$1POZIn
            g$utf8$12794$1POZIn
            g$bv$12956$1POZIn)))))
   (g$trim-front$12835$1POZIn
     g$trim-front$13132$1POZIn
     (case-lambda
       ((g$bv$12957$1POZIn g$k$12958$1POZIn)
        ((case-lambda
           ((g$d$12959$1POZIn)
            (begin
              (g$bytevector-copy!$12823$1POZIn
                g$bv$12957$1POZIn
                g$k$12958$1POZIn
                g$d$12959$1POZIn
                '0
                (g$bytevector-length$12820$1POZIn g$d$12959$1POZIn))
              g$d$12959$1POZIn)))
         (g$make-bytevector$12819$1POZIn
           (- (g$bytevector-length$12820$1POZIn g$bv$12957$1POZIn)
              g$k$12958$1POZIn))))))
   (g$utf16->string$12836$1POZIn
     g$utf16->string$13133$1POZIn
     (case-lambda
       ((g$bv$12960$1POZIn g$end$12961$1POZIn)
        (g$utf16->string$12836$1POZIn
          g$bv$12960$1POZIn
          g$end$12961$1POZIn
          '#f))
       ((g$bv$12962$1POZIn g$end$12963$1POZIn g$endman?$12964$1POZIn)
        (if g$endman?$12964$1POZIn
          (if (eq? g$end$12963$1POZIn 'big)
            (g$get-string$12800$1POZIn
              g$utf16be$12796$1POZIn
              g$bv$12962$1POZIn)
            (g$get-string$12800$1POZIn
              g$utf16le$12795$1POZIn
              g$bv$12962$1POZIn))
          ((case-lambda
             ((g$b0$12965$1POZIn g$b1$12966$1POZIn)
              (if (if (g$=$13618$1POZIn '255 g$b0$12965$1POZIn)
                    (begin
                      '#f
                      (g$=$13618$1POZIn g$b1$12966$1POZIn '254))
                    '#f)
                (g$utf16->string$12836$1POZIn
                  (g$trim-front$12835$1POZIn g$bv$12962$1POZIn '2)
                  'little
                  '#t)
                (if (if (g$=$13618$1POZIn '254 g$b0$12965$1POZIn)
                      (begin
                        '#f
                        (g$=$13618$1POZIn g$b1$12966$1POZIn '255))
                      '#f)
                  (g$utf16->string$12836$1POZIn
                    (g$trim-front$12835$1POZIn g$bv$12962$1POZIn '2)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf16->string$12836$1POZIn
                      g$bv$12962$1POZIn
                      g$end$12963$1POZIn
                      '#t))))))
           (g$bytevector-u8-ref$12825$1POZIn g$bv$12962$1POZIn '0)
           (g$bytevector-u8-ref$12825$1POZIn g$bv$12962$1POZIn '1))))))
   (g$utf32->string$12837$1POZIn
     g$utf32->string$13134$1POZIn
     (case-lambda
       ((g$bv$12967$1POZIn g$end$12968$1POZIn)
        (g$utf32->string$12837$1POZIn
          g$bv$12967$1POZIn
          g$end$12968$1POZIn
          '#f))
       ((g$bv$12969$1POZIn g$end$12970$1POZIn g$endman?$12971$1POZIn)
        (if g$endman?$12971$1POZIn
          (if (eq? g$end$12970$1POZIn 'big)
            (g$get-string$12800$1POZIn
              g$utf32be$12798$1POZIn
              g$bv$12969$1POZIn)
            (g$get-string$12800$1POZIn
              g$utf32le$12797$1POZIn
              g$bv$12969$1POZIn))
          ((case-lambda
             ((g$b0$12972$1POZIn
                g$b1$12973$1POZIn
                g$b2$12974$1POZIn
                g$b3$12975$1POZIn)
              (if (if (g$=$13618$1POZIn '255 g$b0$12972$1POZIn)
                    (if (g$=$13618$1POZIn g$b1$12973$1POZIn '254)
                      (if (g$zero?$13613$1POZIn g$b2$12974$1POZIn)
                        (begin
                          '#f
                          (g$zero?$13613$1POZIn g$b3$12975$1POZIn))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$12837$1POZIn
                  (g$trim-front$12835$1POZIn g$bv$12969$1POZIn '4)
                  'little
                  '#t)
                (if (if (g$zero?$13613$1POZIn g$b0$12972$1POZIn)
                      (if (g$zero?$13613$1POZIn g$b1$12973$1POZIn)
                        (if (g$=$13618$1POZIn '254 g$b2$12974$1POZIn)
                          (begin
                            '#f
                            (g$=$13618$1POZIn g$b3$12975$1POZIn '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$12837$1POZIn
                    (g$trim-front$12835$1POZIn g$bv$12969$1POZIn '4)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf32->string$12837$1POZIn
                      g$bv$12969$1POZIn
                      g$end$12970$1POZIn
                      '#t))))))
           (g$bytevector-u8-ref$12825$1POZIn g$bv$12969$1POZIn '0)
           (g$bytevector-u8-ref$12825$1POZIn g$bv$12969$1POZIn '1)
           (g$bytevector-u8-ref$12825$1POZIn g$bv$12969$1POZIn '2)
           (g$bytevector-u8-ref$12825$1POZIn g$bv$12969$1POZIn '3))))))
   (g$uint-list->bytevector$12838$1POZIn
     g$uint-list->bytevector$13135$1POZIn
     (case-lambda
       ((g$lst$12976$1POZIn g$end$12977$1POZIn g$size$12978$1POZIn)
        (begin
          (if (g$negative?$13615$1POZIn g$size$12978$1POZIn)
            (assertion-violation
              'uint-list->bytevector
              '"invalid size"
              g$size$12978$1POZIn)
            (void))
          ((case-lambda
             ((g$bv$12979$1POZIn)
              ((letrec ((g$f$12980$1POZIn
                          (case-lambda
                            ((g$i$12981$1POZIn g$lst$12982$1POZIn)
                             (if (null? g$lst$12982$1POZIn)
                               g$bv$12979$1POZIn
                               (begin
                                 (bytevector-uint-set!
                                   g$bv$12979$1POZIn
                                   g$i$12981$1POZIn
                                   (car g$lst$12982$1POZIn)
                                   g$end$12977$1POZIn
                                   g$size$12978$1POZIn)
                                 (g$f$12980$1POZIn
                                   (+ g$i$12981$1POZIn
                                      g$size$12978$1POZIn)
                                   (cdr g$lst$12982$1POZIn))))))))
                 g$f$12980$1POZIn)
               '0
               g$lst$12976$1POZIn)))
           (g$make-bytevector$12819$1POZIn
             (* (length g$lst$12976$1POZIn) g$size$12978$1POZIn)))))))
   (g$sint-list->bytevector$12839$1POZIn
     g$sint-list->bytevector$13136$1POZIn
     (case-lambda
       ((g$lst$12983$1POZIn g$end$12984$1POZIn g$size$12985$1POZIn)
        (begin
          (if (g$negative?$13615$1POZIn g$size$12985$1POZIn)
            (assertion-violation
              'sint-list->bytevector
              '"invalid size"
              g$size$12985$1POZIn)
            (void))
          ((case-lambda
             ((g$bv$12986$1POZIn)
              ((letrec ((g$f$12987$1POZIn
                          (case-lambda
                            ((g$i$12988$1POZIn g$lst$12989$1POZIn)
                             (if (null? g$lst$12989$1POZIn)
                               g$bv$12986$1POZIn
                               (begin
                                 (bytevector-sint-set!
                                   g$bv$12986$1POZIn
                                   g$i$12988$1POZIn
                                   (car g$lst$12989$1POZIn)
                                   g$end$12984$1POZIn
                                   g$size$12985$1POZIn)
                                 (g$f$12987$1POZIn
                                   (+ g$i$12988$1POZIn
                                      g$size$12985$1POZIn)
                                   (cdr g$lst$12989$1POZIn))))))))
                 g$f$12987$1POZIn)
               '0
               g$lst$12983$1POZIn)))
           (g$make-bytevector$12819$1POZIn
             (* (length g$lst$12983$1POZIn) g$size$12985$1POZIn)))))))
   (g$bytevector->uint-list$12840$1POZIn
     g$bytevector->uint-list$13137$1POZIn
     (case-lambda
       ((g$bv$12990$1POZIn g$end$12991$1POZIn g$size$12992$1POZIn)
        (begin
          (if (g$negative?$13615$1POZIn g$size$12992$1POZIn)
            (assertion-violation
              'bytevector->uint-list
              '"invalid size"
              g$size$12992$1POZIn)
            (void))
          ((letrec ((g$f$12993$1POZIn
                      (case-lambda
                        ((g$l$12994$1POZIn g$a$12995$1POZIn)
                         (if (g$zero?$13613$1POZIn g$l$12994$1POZIn)
                           g$a$12995$1POZIn
                           (g$f$12993$1POZIn
                             (- g$l$12994$1POZIn g$size$12992$1POZIn)
                             (cons
                               (bytevector-uint-ref
                                 g$bv$12990$1POZIn
                                 (- g$l$12994$1POZIn
                                    g$size$12992$1POZIn)
                                 g$end$12991$1POZIn
                                 g$size$12992$1POZIn)
                               g$a$12995$1POZIn)))))))
             g$f$12993$1POZIn)
           (g$bytevector-length$12820$1POZIn g$bv$12990$1POZIn)
           '())))))
   (g$bytevector->sint-list$12841$1POZIn
     g$bytevector->sint-list$13138$1POZIn
     (case-lambda
       ((g$bv$12996$1POZIn g$end$12997$1POZIn g$size$12998$1POZIn)
        (begin
          (if (g$negative?$13615$1POZIn g$size$12998$1POZIn)
            (assertion-violation
              'bytevector->sint-list
              '"invalid size"
              g$size$12998$1POZIn)
            (void))
          ((letrec ((g$f$12999$1POZIn
                      (case-lambda
                        ((g$l$13000$1POZIn g$a$13001$1POZIn)
                         (if (g$zero?$13613$1POZIn g$l$13000$1POZIn)
                           g$a$13001$1POZIn
                           (g$f$12999$1POZIn
                             (- g$l$13000$1POZIn g$size$12998$1POZIn)
                             (cons
                               (bytevector-sint-ref
                                 g$bv$12996$1POZIn
                                 (- g$l$13000$1POZIn
                                    g$size$12998$1POZIn)
                                 g$end$12997$1POZIn
                                 g$size$12998$1POZIn)
                               g$a$13001$1POZIn)))))))
             g$f$12999$1POZIn)
           (g$bytevector-length$12820$1POZIn g$bv$12996$1POZIn)
           '())))))
   (g$single->double$12842$1POZIn
     g$single->double$13139$1POZIn
     (case-lambda
       ((g$s$13002$1POZIn)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$13002$1POZIn))))
   (g$bytevector-ieee-single-ref$12843$1POZIn
     g$bytevector-ieee-single-ref$13140$1POZIn
     (case-lambda
       ((g$bv$13003$1POZIn g$k$13004$1POZIn g$end$13005$1POZIn)
        ((case-lambda
           ((g$d$13006$1POZIn)
            (begin
              (g$bytevector-copy!$12823$1POZIn
                g$bv$13003$1POZIn
                g$k$13004$1POZIn
                g$d$13006$1POZIn
                '0
                '4)
              (if (eq? g$end$13005$1POZIn 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$13006$1POZIn)
                (void))
              (g$single->double$12842$1POZIn
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$13006$1POZIn
                  '0)))))
         (g$make-bytevector$12819$1POZIn '4)))))
   (g$bytevector-ieee-double-ref$12844$1POZIn
     g$bytevector-ieee-double-ref$13141$1POZIn
     (case-lambda
       ((g$bv$13007$1POZIn g$k$13008$1POZIn g$end$13009$1POZIn)
        ((case-lambda
           ((g$d$13010$1POZIn)
            (begin
              (g$bytevector-copy!$12823$1POZIn
                g$bv$13007$1POZIn
                g$k$13008$1POZIn
                g$d$13010$1POZIn
                '0
                '8)
              (if (eq? g$end$13009$1POZIn 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$13010$1POZIn)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$13010$1POZIn
                '0))))
         (g$make-bytevector$12819$1POZIn '8)))))
   (g$bytevector-ieee-single-set!$12845$1POZIn
     g$bytevector-ieee-single-set!$13142$1POZIn
     (case-lambda
       ((g$bv$13011$1POZIn
          g$k$13012$1POZIn
          g$value$13013$1POZIn
          g$end$13014$1POZIn)
        ((case-lambda
           ((g$value$13015$1POZIn)
            ((case-lambda
               ((g$data$13016$1POZIn)
                (begin
                  (if (eq? g$end$13014$1POZIn 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$13016$1POZIn)
                    (void))
                  (g$bytevector-copy!$12823$1POZIn
                    g$data$13016$1POZIn
                    '0
                    g$bv$13011$1POZIn
                    g$k$13012$1POZIn
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$13015$1POZIn))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$13013$1POZIn)))))
   (g$bytevector-ieee-double-set!$12846$1POZIn
     g$bytevector-ieee-double-set!$13143$1POZIn
     (case-lambda
       ((g$bv$13017$1POZIn
          g$k$13018$1POZIn
          g$value$13019$1POZIn
          g$end$13020$1POZIn)
        ((case-lambda
           ((g$value$13021$1POZIn)
            ((case-lambda
               ((g$data$13022$1POZIn)
                (begin
                  (if (eq? g$end$13020$1POZIn 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$13022$1POZIn)
                    (void))
                  (g$bytevector-copy!$12823$1POZIn
                    g$data$13022$1POZIn
                    '0
                    g$bv$13017$1POZIn
                    g$k$13018$1POZIn
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$13021$1POZIn))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$13019$1POZIn)))))
   (g$bytevector-u16-ref$12847$1POZIn
     g$bytevector-u16-ref$13144$1POZIn
     (case-lambda
       ((g$bytevector$13023$1POZIn
          g$k$13024$1POZIn
          g$endianness$13025$1POZIn)
        (bytevector-uint-ref
          g$bytevector$13023$1POZIn
          g$k$13024$1POZIn
          g$endianness$13025$1POZIn
          '2))))
   (g$bytevector-s16-ref$12848$1POZIn
     g$bytevector-s16-ref$13145$1POZIn
     (case-lambda
       ((g$bytevector$13026$1POZIn
          g$k$13027$1POZIn
          g$endianness$13028$1POZIn)
        (bytevector-sint-ref
          g$bytevector$13026$1POZIn
          g$k$13027$1POZIn
          g$endianness$13028$1POZIn
          '2))))
   (g$bytevector-u16-native-ref$12849$1POZIn
     g$bytevector-u16-native-ref$13146$1POZIn
     (case-lambda
       ((g$bytevector$13029$1POZIn g$k$13030$1POZIn)
        (bytevector-uint-ref
          g$bytevector$13029$1POZIn
          g$k$13030$1POZIn
          (g$native-endianness$12793$1POZIn)
          '2))))
   (g$bytevector-s16-native-ref$12850$1POZIn
     g$bytevector-s16-native-ref$13147$1POZIn
     (case-lambda
       ((g$bytevector$13031$1POZIn g$k$13032$1POZIn)
        (bytevector-sint-ref
          g$bytevector$13031$1POZIn
          g$k$13032$1POZIn
          (g$native-endianness$12793$1POZIn)
          '2))))
   (g$bytevector-u16-set!$12851$1POZIn
     g$bytevector-u16-set!$13148$1POZIn
     (case-lambda
       ((g$bytevector$13033$1POZIn
          g$k$13034$1POZIn
          g$n$13035$1POZIn
          g$endianness$13036$1POZIn)
        (bytevector-uint-set!
          g$bytevector$13033$1POZIn
          g$k$13034$1POZIn
          g$n$13035$1POZIn
          g$endianness$13036$1POZIn
          '2))))
   (g$bytevector-s16-set!$12852$1POZIn
     g$bytevector-s16-set!$13149$1POZIn
     (case-lambda
       ((g$bytevector$13037$1POZIn
          g$k$13038$1POZIn
          g$n$13039$1POZIn
          g$endianness$13040$1POZIn)
        (bytevector-sint-set!
          g$bytevector$13037$1POZIn
          g$k$13038$1POZIn
          g$n$13039$1POZIn
          g$endianness$13040$1POZIn
          '2))))
   (g$bytevector-u16-native-set!$12853$1POZIn
     g$bytevector-u16-native-set!$13150$1POZIn
     (case-lambda
       ((g$bytevector$13041$1POZIn g$k$13042$1POZIn g$n$13043$1POZIn)
        (bytevector-uint-set!
          g$bytevector$13041$1POZIn
          g$k$13042$1POZIn
          g$n$13043$1POZIn
          (g$native-endianness$12793$1POZIn)
          '2))))
   (g$bytevector-s16-native-set!$12854$1POZIn
     g$bytevector-s16-native-set!$13151$1POZIn
     (case-lambda
       ((g$bytevector$13044$1POZIn g$k$13045$1POZIn g$n$13046$1POZIn)
        (bytevector-sint-set!
          g$bytevector$13044$1POZIn
          g$k$13045$1POZIn
          g$n$13046$1POZIn
          (g$native-endianness$12793$1POZIn)
          '2))))
   (g$bytevector-u32-ref$12855$1POZIn
     g$bytevector-u32-ref$13152$1POZIn
     (case-lambda
       ((g$bytevector$13047$1POZIn
          g$k$13048$1POZIn
          g$endianness$13049$1POZIn)
        (bytevector-uint-ref
          g$bytevector$13047$1POZIn
          g$k$13048$1POZIn
          g$endianness$13049$1POZIn
          '4))))
   (g$bytevector-s32-ref$12856$1POZIn
     g$bytevector-s32-ref$13153$1POZIn
     (case-lambda
       ((g$bytevector$13050$1POZIn
          g$k$13051$1POZIn
          g$endianness$13052$1POZIn)
        (bytevector-sint-ref
          g$bytevector$13050$1POZIn
          g$k$13051$1POZIn
          g$endianness$13052$1POZIn
          '4))))
   (g$bytevector-u32-native-ref$12857$1POZIn
     g$bytevector-u32-native-ref$13154$1POZIn
     (case-lambda
       ((g$bytevector$13053$1POZIn g$k$13054$1POZIn)
        (bytevector-uint-ref
          g$bytevector$13053$1POZIn
          g$k$13054$1POZIn
          (g$native-endianness$12793$1POZIn)
          '4))))
   (g$bytevector-s32-native-ref$12858$1POZIn
     g$bytevector-s32-native-ref$13155$1POZIn
     (case-lambda
       ((g$bytevector$13055$1POZIn g$k$13056$1POZIn)
        (bytevector-sint-ref
          g$bytevector$13055$1POZIn
          g$k$13056$1POZIn
          (g$native-endianness$12793$1POZIn)
          '4))))
   (g$bytevector-u32-set!$12859$1POZIn
     g$bytevector-u32-set!$13156$1POZIn
     (case-lambda
       ((g$bytevector$13057$1POZIn
          g$k$13058$1POZIn
          g$n$13059$1POZIn
          g$endianness$13060$1POZIn)
        (bytevector-uint-set!
          g$bytevector$13057$1POZIn
          g$k$13058$1POZIn
          g$n$13059$1POZIn
          g$endianness$13060$1POZIn
          '4))))
   (g$bytevector-s32-set!$12860$1POZIn
     g$bytevector-s32-set!$13157$1POZIn
     (case-lambda
       ((g$bytevector$13061$1POZIn
          g$k$13062$1POZIn
          g$n$13063$1POZIn
          g$endianness$13064$1POZIn)
        (bytevector-sint-set!
          g$bytevector$13061$1POZIn
          g$k$13062$1POZIn
          g$n$13063$1POZIn
          g$endianness$13064$1POZIn
          '4))))
   (g$bytevector-u32-native-set!$12861$1POZIn
     g$bytevector-u32-native-set!$13158$1POZIn
     (case-lambda
       ((g$bytevector$13065$1POZIn g$k$13066$1POZIn g$n$13067$1POZIn)
        (bytevector-uint-set!
          g$bytevector$13065$1POZIn
          g$k$13066$1POZIn
          g$n$13067$1POZIn
          (g$native-endianness$12793$1POZIn)
          '4))))
   (g$bytevector-s32-native-set!$12862$1POZIn
     g$bytevector-s32-native-set!$13159$1POZIn
     (case-lambda
       ((g$bytevector$13068$1POZIn g$k$13069$1POZIn g$n$13070$1POZIn)
        (bytevector-sint-set!
          g$bytevector$13068$1POZIn
          g$k$13069$1POZIn
          g$n$13070$1POZIn
          (g$native-endianness$12793$1POZIn)
          '4))))
   (g$bytevector-u64-ref$12863$1POZIn
     g$bytevector-u64-ref$13160$1POZIn
     (case-lambda
       ((g$bytevector$13071$1POZIn
          g$k$13072$1POZIn
          g$endianness$13073$1POZIn)
        (bytevector-uint-ref
          g$bytevector$13071$1POZIn
          g$k$13072$1POZIn
          g$endianness$13073$1POZIn
          '8))))
   (g$bytevector-s64-ref$12864$1POZIn
     g$bytevector-s64-ref$13161$1POZIn
     (case-lambda
       ((g$bytevector$13074$1POZIn
          g$k$13075$1POZIn
          g$endianness$13076$1POZIn)
        (bytevector-sint-ref
          g$bytevector$13074$1POZIn
          g$k$13075$1POZIn
          g$endianness$13076$1POZIn
          '8))))
   (g$bytevector-u64-native-ref$12865$1POZIn
     g$bytevector-u64-native-ref$13162$1POZIn
     (case-lambda
       ((g$bytevector$13077$1POZIn g$k$13078$1POZIn)
        (bytevector-uint-ref
          g$bytevector$13077$1POZIn
          g$k$13078$1POZIn
          (g$native-endianness$12793$1POZIn)
          '8))))
   (g$bytevector-s64-native-ref$12866$1POZIn
     g$bytevector-s64-native-ref$13163$1POZIn
     (case-lambda
       ((g$bytevector$13079$1POZIn g$k$13080$1POZIn)
        (bytevector-sint-ref
          g$bytevector$13079$1POZIn
          g$k$13080$1POZIn
          (g$native-endianness$12793$1POZIn)
          '8))))
   (g$bytevector-u64-set!$12867$1POZIn
     g$bytevector-u64-set!$13164$1POZIn
     (case-lambda
       ((g$bytevector$13081$1POZIn
          g$k$13082$1POZIn
          g$n$13083$1POZIn
          g$endianness$13084$1POZIn)
        (bytevector-uint-set!
          g$bytevector$13081$1POZIn
          g$k$13082$1POZIn
          g$n$13083$1POZIn
          g$endianness$13084$1POZIn
          '8))))
   (g$bytevector-s64-set!$12868$1POZIn
     g$bytevector-s64-set!$13165$1POZIn
     (case-lambda
       ((g$bytevector$13085$1POZIn
          g$k$13086$1POZIn
          g$n$13087$1POZIn
          g$endianness$13088$1POZIn)
        (bytevector-sint-set!
          g$bytevector$13085$1POZIn
          g$k$13086$1POZIn
          g$n$13087$1POZIn
          g$endianness$13088$1POZIn
          '8))))
   (g$bytevector-u64-native-set!$12869$1POZIn
     g$bytevector-u64-native-set!$13166$1POZIn
     (case-lambda
       ((g$bytevector$13089$1POZIn g$k$13090$1POZIn g$n$13091$1POZIn)
        (bytevector-uint-set!
          g$bytevector$13089$1POZIn
          g$k$13090$1POZIn
          g$n$13091$1POZIn
          (g$native-endianness$12793$1POZIn)
          '8))))
   (g$bytevector-s64-native-set!$12870$1POZIn
     g$bytevector-s64-native-set!$13167$1POZIn
     (case-lambda
       ((g$bytevector$13092$1POZIn g$k$13093$1POZIn g$n$13094$1POZIn)
        (bytevector-sint-set!
          g$bytevector$13092$1POZIn
          g$k$13093$1POZIn
          g$n$13094$1POZIn
          (g$native-endianness$12793$1POZIn)
          '8))))
   (g$bytevector-ieee-single-native-ref$12871$1POZIn
     g$bytevector-ieee-single-native-ref$13168$1POZIn
     (case-lambda
       ((g$bytevector$13095$1POZIn g$k$13096$1POZIn)
        (if (not (g$zero?$13613$1POZIn
                   (g$mod$12672$1POZIn g$k$13096$1POZIn '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$13096$1POZIn)
          (g$bytevector-ieee-single-ref$12843$1POZIn
            g$bytevector$13095$1POZIn
            g$k$13096$1POZIn
            (g$native-endianness$12793$1POZIn))))))
   (g$bytevector-ieee-double-native-ref$12872$1POZIn
     g$bytevector-ieee-double-native-ref$13169$1POZIn
     (case-lambda
       ((g$bytevector$13097$1POZIn g$k$13098$1POZIn)
        (if (not (g$zero?$13613$1POZIn
                   (g$mod$12672$1POZIn g$k$13098$1POZIn '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$13098$1POZIn)
          (g$bytevector-ieee-double-ref$12844$1POZIn
            g$bytevector$13097$1POZIn
            g$k$13098$1POZIn
            (g$native-endianness$12793$1POZIn))))))
   (g$bytevector-ieee-single-native-set!$12873$1POZIn
     g$bytevector-ieee-single-native-set!$13170$1POZIn
     (case-lambda
       ((g$bytevector$13099$1POZIn g$k$13100$1POZIn g$x$13101$1POZIn)
        (if (not (g$zero?$13613$1POZIn
                   (g$mod$12672$1POZIn g$k$13100$1POZIn '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$13100$1POZIn)
          (g$bytevector-ieee-single-set!$12845$1POZIn
            g$bytevector$13099$1POZIn
            g$k$13100$1POZIn
            g$x$13101$1POZIn
            (g$native-endianness$12793$1POZIn))))))
   (g$bytevector-ieee-double-native-set!$12874$1POZIn
     g$bytevector-ieee-double-native-set!$13171$1POZIn
     (case-lambda
       ((g$bytevector$13102$1POZIn g$k$13103$1POZIn g$x$13104$1POZIn)
        (if (not (g$zero?$13613$1POZIn
                   (g$mod$12672$1POZIn g$k$13103$1POZIn '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$13103$1POZIn)
          (g$bytevector-ieee-double-set!$12846$1POZIn
            g$bytevector$13102$1POZIn
            g$k$13103$1POZIn
            g$x$13104$1POZIn
            (g$native-endianness$12793$1POZIn)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$13172$1POZIn
     g$bignum?$13580$1POZIn
     (case-lambda
       ((g$obj$13372$1POZIn)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$13372$1POZIn))))
   (g$ratnum?$13173$1POZIn
     g$ratnum?$13581$1POZIn
     (case-lambda
       ((g$obj$13373$1POZIn)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$13373$1POZIn))))
   (g$ratnum-denominator$13174$1POZIn
     g$ratnum-denominator$13582$1POZIn
     (case-lambda
       ((g$rat$13374$1POZIn)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$13374$1POZIn))))
   (g$ratnum-numerator$13175$1POZIn
     g$ratnum-numerator$13583$1POZIn
     (case-lambda
       ((g$rat$13375$1POZIn)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$13375$1POZIn))))
   (g$complexnum?$13176$1POZIn
     g$complexnum?$13584$1POZIn
     (case-lambda
       ((g$obj$13376$1POZIn)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$13376$1POZIn))))
   (g$make-complexnum$13177$1POZIn
     g$make-complexnum$13585$1POZIn
     (case-lambda
       ((g$r1$13377$1POZIn g$r2$13378$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$13377$1POZIn
          g$r2$13378$1POZIn))))
   (g$complexnum-imag-part$13178$1POZIn
     g$complexnum-imag-part$13586$1POZIn
     (case-lambda
       ((g$c$13379$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$13379$1POZIn))))
   (g$complexnum-real-part$13179$1POZIn
     g$complexnum-real-part$13587$1POZIn
     (case-lambda
       ((g$c$13380$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$13380$1POZIn))))
   (g$bignum/$13180$1POZIn
     g$bignum/$13588$1POZIn
     (case-lambda
       ((g$a$13381$1POZIn g$b$13382$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$13381$1POZIn
          g$b$13382$1POZIn))))
   (g$bignum%$13181$1POZIn
     g$bignum%$13589$1POZIn
     (case-lambda
       ((g$a$13383$1POZIn g$b$13384$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$13383$1POZIn
          g$b$13384$1POZIn))))
   (g$bignum->fixnum$13182$1POZIn
     g$bignum->fixnum$13590$1POZIn
     (case-lambda
       ((g$b$13385$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$13385$1POZIn))))
   (g$flonum->ratnum$13183$1POZIn
     g$flonum->ratnum$13591$1POZIn
     (case-lambda
       ((g$f$13386$1POZIn)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$13386$1POZIn))))
   (g$ratnum->flonum$13184$1POZIn
     g$ratnum->flonum$13592$1POZIn
     (case-lambda
       ((g$r$13387$1POZIn)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$13387$1POZIn
          '()))))
   (g$fixnum->bignum$13185$1POZIn
     g$fixnum->bignum$13593$1POZIn
     (case-lambda
       ((g$f$13388$1POZIn)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$13388$1POZIn))))
   (g$real->complexnum$13186$1POZIn
     g$real->complexnum$13594$1POZIn
     (case-lambda
       ((g$num$13389$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13389$1POZIn)
          g$num$13389$1POZIn
          (g$make-complexnum$13177$1POZIn
            (g$inexact$13208$1POZIn g$num$13389$1POZIn)
            '0.0)))))
   (g$->fixnum$13187$1POZIn
     g$->fixnum$13595$1POZIn
     (case-lambda
       ((g$num$13390$1POZIn)
        (if (g$fixnum?$12668$1POZIn g$num$13390$1POZIn)
          g$num$13390$1POZIn
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$13390$1POZIn)))))
   (g$->ratnum$13188$1POZIn
     g$->ratnum$13596$1POZIn
     (case-lambda
       ((g$num$13391$1POZIn)
        (if (g$ratnum?$13173$1POZIn g$num$13391$1POZIn)
          g$num$13391$1POZIn
          (if (g$real?$13199$1POZIn g$num$13391$1POZIn)
            (g$flonum->ratnum$13183$1POZIn
              (g$real->flonum$13190$1POZIn g$num$13391$1POZIn))
            (begin
              '#f
              (assertion-violation
                '->ratnum
                '"not a real"
                g$num$13391$1POZIn)))))))
   (g$->bignum$13189$1POZIn
     g$->bignum$13597$1POZIn
     (case-lambda
       ((g$num$13392$1POZIn)
        (if (g$bignum?$13172$1POZIn g$num$13392$1POZIn)
          g$num$13392$1POZIn
          (if (g$fixnum?$12668$1POZIn g$num$13392$1POZIn)
            (g$fixnum->bignum$13185$1POZIn g$num$13392$1POZIn)
            (begin
              '#f
              (assertion-violation
                '->bignum
                '"not an integer"
                g$num$13392$1POZIn)))))))
   (g$real->flonum$13190$1POZIn
     g$real->flonum$13598$1POZIn
     (case-lambda
       ((g$x$13393$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x$13393$1POZIn))
            (assertion-violation
              'real->flonum
              '"not a real"
              g$x$13393$1POZIn)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$13393$1POZIn)))))
   (g$fixnum->flonum$13191$1POZIn
     g$fixnum->flonum$13599$1POZIn
     (case-lambda
       ((g$x$13394$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x$13394$1POZIn))
            (assertion-violation
              'fixnum->flonum
              '"not a fixnum"
              g$x$13394$1POZIn)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$13394$1POZIn))))))
   (g$number?$13192$1POZIn
     g$number?$13600$1POZIn
     (case-lambda
       ((g$obj$13395$1POZIn)
        ((case-lambda
           ((g$t$13396$1POZIn)
            (if g$t$13396$1POZIn
              g$t$13396$1POZIn
              ((case-lambda
                 ((g$t$13397$1POZIn)
                  (if g$t$13397$1POZIn
                    g$t$13397$1POZIn
                    ((case-lambda
                       ((g$t$13398$1POZIn)
                        (if g$t$13398$1POZIn
                          g$t$13398$1POZIn
                          ((case-lambda
                             ((g$t$13399$1POZIn)
                              (if g$t$13399$1POZIn
                                g$t$13399$1POZIn
                                (begin
                                  '#f
                                  (g$complexnum?$13176$1POZIn
                                    g$obj$13395$1POZIn)))))
                           (g$ratnum?$13173$1POZIn
                             g$obj$13395$1POZIn)))))
                     (g$bignum?$13172$1POZIn g$obj$13395$1POZIn)))))
               (g$flonum?$12669$1POZIn g$obj$13395$1POZIn)))))
         (g$fixnum?$12668$1POZIn g$obj$13395$1POZIn)))))
   (g$nan?$13193$1POZIn
     g$nan?$13601$1POZIn
     (case-lambda
       ((g$num$13400$1POZIn)
        (if ((case-lambda
               ((g$t$13401$1POZIn)
                (if g$t$13401$1POZIn
                  g$t$13401$1POZIn
                  ((case-lambda
                     ((g$t$13402$1POZIn)
                      (if g$t$13402$1POZIn
                        g$t$13402$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$num$13400$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$num$13400$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$num$13400$1POZIn))
          '#f
          (if (g$flonum?$12669$1POZIn g$num$13400$1POZIn)
            (g$flnan?$18466$1POZIn g$num$13400$1POZIn)
            (if (g$complexnum?$13176$1POZIn g$num$13400$1POZIn)
              ((case-lambda
                 ((g$t$13403$1POZIn)
                  (if g$t$13403$1POZIn
                    g$t$13403$1POZIn
                    (begin
                      '#f
                      (g$flnan?$18466$1POZIn
                        (g$complexnum-imag-part$13178$1POZIn
                          g$num$13400$1POZIn))))))
               (g$flnan?$18466$1POZIn
                 (g$complexnum-real-part$13179$1POZIn
                   g$num$13400$1POZIn)))
              (begin
                '#f
                (assertion-violation
                  'nan?
                  '"not a number"
                  g$num$13400$1POZIn))))))))
   (g$finite?$13194$1POZIn
     g$finite?$13602$1POZIn
     (case-lambda
       ((g$num$13404$1POZIn)
        (if ((case-lambda
               ((g$t$13405$1POZIn)
                (if g$t$13405$1POZIn
                  g$t$13405$1POZIn
                  ((case-lambda
                     ((g$t$13406$1POZIn)
                      (if g$t$13406$1POZIn
                        g$t$13406$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$num$13404$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$num$13404$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$num$13404$1POZIn))
          '#t
          (if (g$flonum?$12669$1POZIn g$num$13404$1POZIn)
            (g$flfinite?$18463$1POZIn g$num$13404$1POZIn)
            (if (g$complexnum?$13176$1POZIn g$num$13404$1POZIn)
              (if (g$flfinite?$18463$1POZIn
                    (g$complexnum-real-part$13179$1POZIn
                      g$num$13404$1POZIn))
                (begin
                  '#f
                  (g$flfinite?$18463$1POZIn
                    (g$complexnum-imag-part$13178$1POZIn
                      g$num$13404$1POZIn)))
                '#f)
              (begin
                '#f
                (assertion-violation
                  'finite?
                  '"not a number"
                  g$num$13404$1POZIn))))))))
   (g$infinite?$13195$1POZIn
     g$infinite?$13603$1POZIn
     (case-lambda
       ((g$num$13407$1POZIn)
        (if ((case-lambda
               ((g$t$13408$1POZIn)
                (if g$t$13408$1POZIn
                  g$t$13408$1POZIn
                  ((case-lambda
                     ((g$t$13409$1POZIn)
                      (if g$t$13409$1POZIn
                        g$t$13409$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$num$13407$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$num$13407$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$num$13407$1POZIn))
          '#f
          (if (g$flonum?$12669$1POZIn g$num$13407$1POZIn)
            (g$flinfinite?$18465$1POZIn g$num$13407$1POZIn)
            (if (g$complexnum?$13176$1POZIn g$num$13407$1POZIn)
              ((case-lambda
                 ((g$t$13410$1POZIn)
                  (if g$t$13410$1POZIn
                    g$t$13410$1POZIn
                    (begin
                      '#f
                      (g$flinfinite?$18465$1POZIn
                        (g$complexnum-imag-part$13178$1POZIn
                          g$num$13407$1POZIn))))))
               (g$flinfinite?$18465$1POZIn
                 (g$complexnum-real-part$13179$1POZIn
                   g$num$13407$1POZIn)))
              (begin
                '#f
                (assertion-violation
                  'infinite?
                  '"not a number"
                  g$num$13407$1POZIn))))))))
   (g$exact?$13196$1POZIn
     g$exact?$13604$1POZIn
     (case-lambda
       ((g$obj$13411$1POZIn)
        (if ((case-lambda
               ((g$t$13412$1POZIn)
                (if g$t$13412$1POZIn
                  g$t$13412$1POZIn
                  ((case-lambda
                     ((g$t$13413$1POZIn)
                      (if g$t$13413$1POZIn
                        g$t$13413$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$obj$13411$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$obj$13411$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13411$1POZIn))
          '#t
          (if ((case-lambda
                 ((g$t$13414$1POZIn)
                  (if g$t$13414$1POZIn
                    g$t$13414$1POZIn
                    (begin
                      '#f
                      (g$complexnum?$13176$1POZIn
                        g$obj$13411$1POZIn)))))
               (g$flonum?$12669$1POZIn g$obj$13411$1POZIn))
            '#f
            (begin
              '#f
              (assertion-violation
                'exact
                '"not a number"
                g$obj$13411$1POZIn)))))))
   (g$inexact?$13197$1POZIn
     g$inexact?$13605$1POZIn
     (case-lambda
       ((g$obj$13415$1POZIn)
        (if ((case-lambda
               ((g$t$13416$1POZIn)
                (if g$t$13416$1POZIn
                  g$t$13416$1POZIn
                  ((case-lambda
                     ((g$t$13417$1POZIn)
                      (if g$t$13417$1POZIn
                        g$t$13417$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$obj$13415$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$obj$13415$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13415$1POZIn))
          '#f
          (if ((case-lambda
                 ((g$t$13418$1POZIn)
                  (if g$t$13418$1POZIn
                    g$t$13418$1POZIn
                    (begin
                      '#f
                      (g$complexnum?$13176$1POZIn
                        g$obj$13415$1POZIn)))))
               (g$flonum?$12669$1POZIn g$obj$13415$1POZIn))
            '#t
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$obj$13415$1POZIn)))))))
   (g$complex?$13198$1POZIn
     g$complex?$13606$1POZIn
     (case-lambda
       ((g$obj$13419$1POZIn)
        (g$number?$13192$1POZIn g$obj$13419$1POZIn))))
   (g$real?$13199$1POZIn
     g$real?$13607$1POZIn
     (case-lambda
       ((g$obj$13420$1POZIn)
        (if ((case-lambda
               ((g$t$13421$1POZIn)
                (if g$t$13421$1POZIn
                  g$t$13421$1POZIn
                  ((case-lambda
                     ((g$t$13422$1POZIn)
                      (if g$t$13422$1POZIn
                        g$t$13422$1POZIn
                        ((case-lambda
                           ((g$t$13423$1POZIn)
                            (if g$t$13423$1POZIn
                              g$t$13423$1POZIn
                              (begin
                                '#f
                                (g$flonum?$12669$1POZIn
                                  g$obj$13420$1POZIn)))))
                         (g$ratnum?$13173$1POZIn g$obj$13420$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$obj$13420$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13420$1POZIn))
          '#t
          (if (g$complexnum?$13176$1POZIn g$obj$13420$1POZIn)
            ((case-lambda
               ((g$i$13424$1POZIn)
                (if (g$zero?$13205$1POZIn g$i$13424$1POZIn)
                  (begin '#f (g$exact?$13196$1POZIn g$i$13424$1POZIn))
                  '#f)))
             (g$imag-part$13321$1POZIn g$obj$13420$1POZIn))
            (begin '#f '#f))))))
   (g$rational?$13200$1POZIn
     g$rational?$13608$1POZIn
     (case-lambda
       ((g$obj$13425$1POZIn)
        (if ((case-lambda
               ((g$t$13426$1POZIn)
                (if g$t$13426$1POZIn
                  g$t$13426$1POZIn
                  ((case-lambda
                     ((g$t$13427$1POZIn)
                      (if g$t$13427$1POZIn
                        g$t$13427$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$obj$13425$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$obj$13425$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13425$1POZIn))
          '#t
          (if (if ((case-lambda
                     ((g$t$13428$1POZIn)
                      (if g$t$13428$1POZIn
                        g$t$13428$1POZIn
                        (begin
                          '#f
                          (g$flonum?$12669$1POZIn
                            g$obj$13425$1POZIn)))))
                   (g$complexnum?$13176$1POZIn g$obj$13425$1POZIn))
                (if (g$finite?$13194$1POZIn g$obj$13425$1POZIn)
                  (begin
                    '#f
                    (not (g$nan?$13193$1POZIn g$obj$13425$1POZIn)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13429$1POZIn)
                (if (g$exact?$13196$1POZIn g$i$13429$1POZIn)
                  (begin '#f (g$zero?$13205$1POZIn g$i$13429$1POZIn))
                  '#f)))
             (g$imag-part$13321$1POZIn g$obj$13425$1POZIn))
            (begin '#f '#f))))))
   (g$integer?$13201$1POZIn
     g$integer?$13609$1POZIn
     (case-lambda
       ((g$obj$13430$1POZIn)
        (if ((case-lambda
               ((g$t$13431$1POZIn)
                (if g$t$13431$1POZIn
                  g$t$13431$1POZIn
                  (begin
                    '#f
                    (g$bignum?$13172$1POZIn g$obj$13430$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13430$1POZIn))
          '#t
          (if (if ((case-lambda
                     ((g$t$13432$1POZIn)
                      (if g$t$13432$1POZIn
                        g$t$13432$1POZIn
                        ((case-lambda
                           ((g$t$13433$1POZIn)
                            (if g$t$13433$1POZIn
                              g$t$13433$1POZIn
                              (begin
                                '#f
                                (g$flonum?$12669$1POZIn
                                  g$obj$13430$1POZIn)))))
                         (g$complexnum?$13176$1POZIn
                           g$obj$13430$1POZIn)))))
                   (g$ratnum?$13173$1POZIn g$obj$13430$1POZIn))
                (if (g$finite?$13194$1POZIn g$obj$13430$1POZIn)
                  (begin
                    '#f
                    (not (g$nan?$13193$1POZIn g$obj$13430$1POZIn)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13434$1POZIn)
                (if (g$exact?$13196$1POZIn g$i$13434$1POZIn)
                  (if (g$zero?$13205$1POZIn g$i$13434$1POZIn)
                    (begin
                      '#f
                      (g$=$13308$1POZIn
                        (g$denominator$13319$1POZIn
                          (g$real-part$13320$1POZIn g$obj$13430$1POZIn))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$13321$1POZIn g$obj$13430$1POZIn))
            (begin '#f '#f))))))
   (g$real-valued?$13202$1POZIn
     g$real-valued?$13610$1POZIn
     (case-lambda
       ((g$obj$13435$1POZIn)
        (if ((case-lambda
               ((g$t$13436$1POZIn)
                (if g$t$13436$1POZIn
                  g$t$13436$1POZIn
                  ((case-lambda
                     ((g$t$13437$1POZIn)
                      (if g$t$13437$1POZIn
                        g$t$13437$1POZIn
                        ((case-lambda
                           ((g$t$13438$1POZIn)
                            (if g$t$13438$1POZIn
                              g$t$13438$1POZIn
                              (begin
                                '#f
                                (g$flonum?$12669$1POZIn
                                  g$obj$13435$1POZIn)))))
                         (g$ratnum?$13173$1POZIn g$obj$13435$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$obj$13435$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13435$1POZIn))
          '#t
          (if (g$complexnum?$13176$1POZIn g$obj$13435$1POZIn)
            ((case-lambda
               ((g$i$13439$1POZIn)
                (g$zero?$13205$1POZIn g$i$13439$1POZIn)))
             (g$imag-part$13321$1POZIn g$obj$13435$1POZIn))
            (begin '#f '#f))))))
   (g$rational-valued?$13203$1POZIn
     g$rational-valued?$13611$1POZIn
     (case-lambda
       ((g$obj$13440$1POZIn)
        (if ((case-lambda
               ((g$t$13441$1POZIn)
                (if g$t$13441$1POZIn
                  g$t$13441$1POZIn
                  ((case-lambda
                     ((g$t$13442$1POZIn)
                      (if g$t$13442$1POZIn
                        g$t$13442$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$obj$13440$1POZIn)))))
                   (g$bignum?$13172$1POZIn g$obj$13440$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13440$1POZIn))
          '#t
          (if (if ((case-lambda
                     ((g$t$13443$1POZIn)
                      (if g$t$13443$1POZIn
                        g$t$13443$1POZIn
                        (begin
                          '#f
                          (g$flonum?$12669$1POZIn
                            g$obj$13440$1POZIn)))))
                   (g$complexnum?$13176$1POZIn g$obj$13440$1POZIn))
                (if (g$finite?$13194$1POZIn g$obj$13440$1POZIn)
                  (begin
                    '#f
                    (not (g$nan?$13193$1POZIn g$obj$13440$1POZIn)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13444$1POZIn)
                (g$zero?$13205$1POZIn g$i$13444$1POZIn)))
             (g$imag-part$13321$1POZIn g$obj$13440$1POZIn))
            (begin '#f '#f))))))
   (g$integer-valued?$13204$1POZIn
     g$integer-valued?$13612$1POZIn
     (case-lambda
       ((g$obj$13445$1POZIn)
        (if ((case-lambda
               ((g$t$13446$1POZIn)
                (if g$t$13446$1POZIn
                  g$t$13446$1POZIn
                  (begin
                    '#f
                    (g$bignum?$13172$1POZIn g$obj$13445$1POZIn)))))
             (g$fixnum?$12668$1POZIn g$obj$13445$1POZIn))
          '#t
          (if (if ((case-lambda
                     ((g$t$13447$1POZIn)
                      (if g$t$13447$1POZIn
                        g$t$13447$1POZIn
                        ((case-lambda
                           ((g$t$13448$1POZIn)
                            (if g$t$13448$1POZIn
                              g$t$13448$1POZIn
                              (begin
                                '#f
                                (g$flonum?$12669$1POZIn
                                  g$obj$13445$1POZIn)))))
                         (g$complexnum?$13176$1POZIn
                           g$obj$13445$1POZIn)))))
                   (g$ratnum?$13173$1POZIn g$obj$13445$1POZIn))
                (if (g$finite?$13194$1POZIn g$obj$13445$1POZIn)
                  (begin
                    '#f
                    (not (g$nan?$13193$1POZIn g$obj$13445$1POZIn)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$13449$1POZIn)
                (if (g$zero?$13205$1POZIn g$i$13449$1POZIn)
                  (begin
                    '#f
                    (g$=$13308$1POZIn
                      (g$denominator$13319$1POZIn
                        (g$real-part$13320$1POZIn g$obj$13445$1POZIn))
                      '1))
                  '#f)))
             (g$imag-part$13321$1POZIn g$obj$13445$1POZIn))
            (begin '#f '#f))))))
   (g$zero?$13205$1POZIn
     g$zero?$13613$1POZIn
     (case-lambda
       ((g$num$13450$1POZIn)
        (begin
          (if (not (g$number?$13192$1POZIn g$num$13450$1POZIn))
            (assertion-violation
              'zero?
              '"not a number"
              g$num$13450$1POZIn)
            (void))
          (g$=$13308$1POZIn g$num$13450$1POZIn '0)))))
   (g$positive?$13206$1POZIn
     g$positive?$13614$1POZIn
     (case-lambda
       ((g$num$13451$1POZIn)
        (begin
          (if (not (g$number?$13192$1POZIn g$num$13451$1POZIn))
            (assertion-violation
              'positive?
              '"not a number"
              g$num$13451$1POZIn)
            (void))
          (g$>$13311$1POZIn g$num$13451$1POZIn '0)))))
   (g$negative?$13207$1POZIn
     g$negative?$13615$1POZIn
     (case-lambda
       ((g$num$13452$1POZIn)
        (begin
          (if (not (g$number?$13192$1POZIn g$num$13452$1POZIn))
            (assertion-violation
              'negative?
              '"not a number"
              g$num$13452$1POZIn)
            (void))
          (g$<$13309$1POZIn g$num$13452$1POZIn '0)))))
   (g$inexact$13208$1POZIn
     g$inexact$13616$1POZIn
     (case-lambda
       ((g$num$13453$1POZIn)
        (if ((case-lambda
               ((g$t$13454$1POZIn)
                (if g$t$13454$1POZIn
                  g$t$13454$1POZIn
                  (begin
                    '#f
                    (g$flonum?$12669$1POZIn g$num$13453$1POZIn)))))
             (g$complexnum?$13176$1POZIn g$num$13453$1POZIn))
          g$num$13453$1POZIn
          (if ((case-lambda
                 ((g$t$13455$1POZIn)
                  (if g$t$13455$1POZIn
                    g$t$13455$1POZIn
                    (begin
                      '#f
                      (g$ratnum?$13173$1POZIn g$num$13453$1POZIn)))))
               (g$exact-integer?$13317$1POZIn g$num$13453$1POZIn))
            (g$real->flonum$13190$1POZIn g$num$13453$1POZIn)
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$num$13453$1POZIn)))))))
   (g$exact$13209$1POZIn
     g$exact$13617$1POZIn
     (case-lambda
       ((g$num$13456$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13456$1POZIn)
          (if (g$zero?$13205$1POZIn
                (g$complexnum-imag-part$13178$1POZIn
                  g$num$13456$1POZIn))
            (g$exact$13209$1POZIn
              (g$complexnum-real-part$13179$1POZIn g$num$13456$1POZIn))
            (assertion-violation
              'exact
              '"no exact equivalent"
              g$num$13456$1POZIn))
          (if (g$flonum?$12669$1POZIn g$num$13456$1POZIn)
            (if ((case-lambda
                   ((g$t$13457$1POZIn)
                    (if g$t$13457$1POZIn
                      g$t$13457$1POZIn
                      (begin
                        '#f
                        (g$flinfinite?$18465$1POZIn
                          g$num$13456$1POZIn)))))
                 (g$flnan?$18466$1POZIn g$num$13456$1POZIn))
              (assertion-violation
                'exact
                '"no exact equivalent"
                g$num$13456$1POZIn)
              (g$flonum->ratnum$13183$1POZIn g$num$13456$1POZIn))
            (if (g$bignum?$13172$1POZIn g$num$13456$1POZIn)
              (if (g$fx<=?$16906$1POZIn
                    (g$fixnum-width$12670$1POZIn)
                    (g$bitwise-length$14647$1POZIn g$num$13456$1POZIn))
                g$num$13456$1POZIn
                (g$bignum->fixnum$13182$1POZIn g$num$13456$1POZIn))
              (if ((case-lambda
                     ((g$t$13458$1POZIn)
                      (if g$t$13458$1POZIn
                        g$t$13458$1POZIn
                        (begin
                          '#f
                          (g$ratnum?$13173$1POZIn
                            g$num$13456$1POZIn)))))
                   (g$fixnum?$12668$1POZIn g$num$13456$1POZIn))
                g$num$13456$1POZIn
                (begin
                  '#f
                  (assertion-violation
                    'exact
                    '"not a number"
                    g$num$13456$1POZIn)))))))))
   (g$=$13308$1POZIn
     g$=$13618$1POZIn
     (case-lambda
       ((g$a$13459$1POZIn g$b$13460$1POZIn)
        (if (if (g$real?$13199$1POZIn g$a$13459$1POZIn)
              (if (g$real?$13199$1POZIn g$b$13460$1POZIn)
                (if (g$finite?$13194$1POZIn g$a$13459$1POZIn)
                  (if (g$finite?$13194$1POZIn g$b$13460$1POZIn)
                    (if (not (g$nan?$13193$1POZIn g$a$13459$1POZIn))
                      (begin
                        '#f
                        (not (g$nan?$13193$1POZIn g$b$13460$1POZIn)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$13209$1POZIn g$a$13459$1POZIn)
              (g$exact$13209$1POZIn g$b$13460$1POZIn))
            '0)
          (if ((case-lambda
                 ((g$t$13461$1POZIn)
                  (if g$t$13461$1POZIn
                    g$t$13461$1POZIn
                    (begin
                      '#f
                      (g$nan?$13193$1POZIn g$b$13460$1POZIn)))))
               (g$nan?$13193$1POZIn g$a$13459$1POZIn))
            '#f
            (if (if (g$number?$13192$1POZIn g$a$13459$1POZIn)
                  (begin '#f (g$number?$13192$1POZIn g$b$13460$1POZIn))
                  '#f)
              (inexact=?
                (g$inexact$13208$1POZIn g$a$13459$1POZIn)
                (g$inexact$13208$1POZIn g$b$13460$1POZIn))
              (begin
                '#f
                (assertion-violation
                  '=
                  '"not number arguments"
                  g$a$13459$1POZIn
                  g$b$13460$1POZIn))))))
       ((g$x1$13462$1POZIn g$x2$13463$1POZIn . g$rest$13464$1POZIn)
        ((letrec ((g$f$13465$1POZIn
                    (case-lambda
                      ((g$a$13466$1POZIn g$b$13467$1POZIn)
                       (if (null? g$b$13467$1POZIn)
                         '#t
                         (if (g$=$13308$1POZIn
                               g$a$13466$1POZIn
                               ($car g$b$13467$1POZIn))
                           (g$f$13465$1POZIn
                             ($car g$b$13467$1POZIn)
                             ($cdr g$b$13467$1POZIn))
                           (begin '#f '#f)))))))
           g$f$13465$1POZIn)
         g$x1$13462$1POZIn
         (cons g$x2$13463$1POZIn g$rest$13464$1POZIn)))))
   (g$<$13309$1POZIn
     g$<$13619$1POZIn
     (case-lambda
       ((g$a$13468$1POZIn g$b$13469$1POZIn)
        (if (if (g$real?$13199$1POZIn g$a$13468$1POZIn)
              (if (g$real?$13199$1POZIn g$b$13469$1POZIn)
                (if (g$finite?$13194$1POZIn g$a$13468$1POZIn)
                  (if (g$finite?$13194$1POZIn g$b$13469$1POZIn)
                    (if (not (g$nan?$13193$1POZIn g$a$13468$1POZIn))
                      (begin
                        '#f
                        (not (g$nan?$13193$1POZIn g$b$13469$1POZIn)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$13209$1POZIn g$a$13468$1POZIn)
              (g$exact$13209$1POZIn g$b$13469$1POZIn))
            '0)
          (if ((case-lambda
                 ((g$t$13470$1POZIn)
                  (if g$t$13470$1POZIn
                    g$t$13470$1POZIn
                    (begin
                      '#f
                      (g$nan?$13193$1POZIn g$b$13469$1POZIn)))))
               (g$nan?$13193$1POZIn g$a$13468$1POZIn))
            '#f
            (if (if (g$real?$13199$1POZIn g$a$13468$1POZIn)
                  (begin '#f (g$real?$13199$1POZIn g$b$13469$1POZIn))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$13208$1POZIn g$a$13468$1POZIn)
                  (g$inexact$13208$1POZIn g$b$13469$1POZIn))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<
                  '"not real arguments"
                  g$a$13468$1POZIn
                  g$b$13469$1POZIn))))))
       ((g$x1$13471$1POZIn g$x2$13472$1POZIn . g$rest$13473$1POZIn)
        ((letrec ((g$f$13474$1POZIn
                    (case-lambda
                      ((g$a$13475$1POZIn g$b$13476$1POZIn)
                       (if (null? g$b$13476$1POZIn)
                         '#t
                         (if (g$<$13309$1POZIn
                               g$a$13475$1POZIn
                               ($car g$b$13476$1POZIn))
                           (g$f$13474$1POZIn
                             ($car g$b$13476$1POZIn)
                             ($cdr g$b$13476$1POZIn))
                           (begin '#f '#f)))))))
           g$f$13474$1POZIn)
         g$x1$13471$1POZIn
         (cons g$x2$13472$1POZIn g$rest$13473$1POZIn)))))
   (g$<=$13310$1POZIn
     g$<=$13620$1POZIn
     (case-lambda
       ((g$a$13477$1POZIn g$b$13478$1POZIn)
        (if (if (g$real?$13199$1POZIn g$a$13477$1POZIn)
              (if (g$real?$13199$1POZIn g$b$13478$1POZIn)
                (if (g$finite?$13194$1POZIn g$a$13477$1POZIn)
                  (if (g$finite?$13194$1POZIn g$b$13478$1POZIn)
                    (if (not (g$nan?$13193$1POZIn g$a$13477$1POZIn))
                      (begin
                        '#f
                        (not (g$nan?$13193$1POZIn g$b$13478$1POZIn)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$13209$1POZIn g$a$13477$1POZIn)
              (g$exact$13209$1POZIn g$b$13478$1POZIn))
            '0)
          (if ((case-lambda
                 ((g$t$13479$1POZIn)
                  (if g$t$13479$1POZIn
                    g$t$13479$1POZIn
                    (begin
                      '#f
                      (g$nan?$13193$1POZIn g$b$13478$1POZIn)))))
               (g$nan?$13193$1POZIn g$a$13477$1POZIn))
            '#f
            (if (if (g$real?$13199$1POZIn g$a$13477$1POZIn)
                  (begin '#f (g$real?$13199$1POZIn g$b$13478$1POZIn))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$13208$1POZIn g$a$13477$1POZIn)
                  (g$inexact$13208$1POZIn g$b$13478$1POZIn))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<=
                  '"not real arguments"
                  g$a$13477$1POZIn
                  g$b$13478$1POZIn))))))
       ((g$x1$13480$1POZIn g$x2$13481$1POZIn . g$rest$13482$1POZIn)
        ((letrec ((g$f$13483$1POZIn
                    (case-lambda
                      ((g$a$13484$1POZIn g$b$13485$1POZIn)
                       (if (null? g$b$13485$1POZIn)
                         '#t
                         (if (g$<=$13310$1POZIn
                               g$a$13484$1POZIn
                               ($car g$b$13485$1POZIn))
                           (g$f$13483$1POZIn
                             ($car g$b$13485$1POZIn)
                             ($cdr g$b$13485$1POZIn))
                           (begin '#f '#f)))))))
           g$f$13483$1POZIn)
         g$x1$13480$1POZIn
         (cons g$x2$13481$1POZIn g$rest$13482$1POZIn)))))
   (g$>$13311$1POZIn
     g$>$13621$1POZIn
     (case-lambda
       ((g$a$13486$1POZIn g$b$13487$1POZIn)
        (if (if (g$real?$13199$1POZIn g$a$13486$1POZIn)
              (if (g$real?$13199$1POZIn g$b$13487$1POZIn)
                (if (g$finite?$13194$1POZIn g$a$13486$1POZIn)
                  (if (g$finite?$13194$1POZIn g$b$13487$1POZIn)
                    (if (not (g$nan?$13193$1POZIn g$a$13486$1POZIn))
                      (begin
                        '#f
                        (not (g$nan?$13193$1POZIn g$b$13487$1POZIn)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$13209$1POZIn g$a$13486$1POZIn)
              (g$exact$13209$1POZIn g$b$13487$1POZIn))
            '0)
          (if ((case-lambda
                 ((g$t$13488$1POZIn)
                  (if g$t$13488$1POZIn
                    g$t$13488$1POZIn
                    (begin
                      '#f
                      (g$nan?$13193$1POZIn g$b$13487$1POZIn)))))
               (g$nan?$13193$1POZIn g$a$13486$1POZIn))
            '#f
            (if (if (g$real?$13199$1POZIn g$a$13486$1POZIn)
                  (begin '#f (g$real?$13199$1POZIn g$b$13487$1POZIn))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$13208$1POZIn g$a$13486$1POZIn)
                  (g$inexact$13208$1POZIn g$b$13487$1POZIn))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>
                  '"not real arguments"
                  g$a$13486$1POZIn
                  g$b$13487$1POZIn))))))
       ((g$x1$13489$1POZIn g$x2$13490$1POZIn . g$rest$13491$1POZIn)
        ((letrec ((g$f$13492$1POZIn
                    (case-lambda
                      ((g$a$13493$1POZIn g$b$13494$1POZIn)
                       (if (null? g$b$13494$1POZIn)
                         '#t
                         (if (g$>$13311$1POZIn
                               g$a$13493$1POZIn
                               ($car g$b$13494$1POZIn))
                           (g$f$13492$1POZIn
                             ($car g$b$13494$1POZIn)
                             ($cdr g$b$13494$1POZIn))
                           (begin '#f '#f)))))))
           g$f$13492$1POZIn)
         g$x1$13489$1POZIn
         (cons g$x2$13490$1POZIn g$rest$13491$1POZIn)))))
   (g$>=$13312$1POZIn
     g$>=$13622$1POZIn
     (case-lambda
       ((g$a$13495$1POZIn g$b$13496$1POZIn)
        (if (if (g$real?$13199$1POZIn g$a$13495$1POZIn)
              (if (g$real?$13199$1POZIn g$b$13496$1POZIn)
                (if (g$finite?$13194$1POZIn g$a$13495$1POZIn)
                  (if (g$finite?$13194$1POZIn g$b$13496$1POZIn)
                    (if (not (g$nan?$13193$1POZIn g$a$13495$1POZIn))
                      (begin
                        '#f
                        (not (g$nan?$13193$1POZIn g$b$13496$1POZIn)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$13209$1POZIn g$a$13495$1POZIn)
              (g$exact$13209$1POZIn g$b$13496$1POZIn))
            '0)
          (if ((case-lambda
                 ((g$t$13497$1POZIn)
                  (if g$t$13497$1POZIn
                    g$t$13497$1POZIn
                    (begin
                      '#f
                      (g$nan?$13193$1POZIn g$b$13496$1POZIn)))))
               (g$nan?$13193$1POZIn g$a$13495$1POZIn))
            '#f
            (if (if (g$real?$13199$1POZIn g$a$13495$1POZIn)
                  (begin '#f (g$real?$13199$1POZIn g$b$13496$1POZIn))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$13208$1POZIn g$a$13495$1POZIn)
                  (g$inexact$13208$1POZIn g$b$13496$1POZIn))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>=
                  '"not real arguments"
                  g$a$13495$1POZIn
                  g$b$13496$1POZIn))))))
       ((g$x1$13498$1POZIn g$x2$13499$1POZIn . g$rest$13500$1POZIn)
        ((letrec ((g$f$13501$1POZIn
                    (case-lambda
                      ((g$a$13502$1POZIn g$b$13503$1POZIn)
                       (if (null? g$b$13503$1POZIn)
                         '#t
                         (if (g$>=$13312$1POZIn
                               g$a$13502$1POZIn
                               ($car g$b$13503$1POZIn))
                           (g$f$13501$1POZIn
                             ($car g$b$13503$1POZIn)
                             ($cdr g$b$13503$1POZIn))
                           (begin '#f '#f)))))))
           g$f$13501$1POZIn)
         g$x1$13498$1POZIn
         (cons g$x2$13499$1POZIn g$rest$13500$1POZIn)))))
   (g$make-rectangular$13313$1POZIn
     g$make-rectangular$13623$1POZIn
     (case-lambda
       ((g$r1$13504$1POZIn g$r2$13505$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$r1$13504$1POZIn))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r1$13504$1POZIn)
            (void))
          (if (not (g$real?$13199$1POZIn g$r2$13505$1POZIn))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r2$13505$1POZIn)
            (void))
          (if (if (g$exact?$13196$1POZIn g$r2$13505$1POZIn)
                (begin '#f (g$zero?$13205$1POZIn g$r2$13505$1POZIn))
                '#f)
            g$r1$13504$1POZIn
            (g$make-complexnum$13177$1POZIn
              (g$inexact$13208$1POZIn g$r1$13504$1POZIn)
              (g$inexact$13208$1POZIn g$r2$13505$1POZIn)))))))
   (g$make-polar$13314$1POZIn
     g$make-polar$13624$1POZIn
     (case-lambda
       ((g$r1$13506$1POZIn g$r2$13507$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$r1$13506$1POZIn))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r1$13506$1POZIn)
            (void))
          (if (not (g$real?$13199$1POZIn g$r2$13507$1POZIn))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r2$13507$1POZIn)
            (void))
          (if (if (g$exact?$13196$1POZIn g$r2$13507$1POZIn)
                (begin '#f (g$zero?$13205$1POZIn g$r2$13507$1POZIn))
                '#f)
            g$r1$13506$1POZIn
            (* g$r1$13506$1POZIn
               (g$make-rectangular$13313$1POZIn
                 (g$cos$13356$1POZIn g$r2$13507$1POZIn)
                 (g$sin$13353$1POZIn g$r2$13507$1POZIn))))))))
   (g$angle$13315$1POZIn
     g$angle$13625$1POZIn
     (case-lambda
       ((g$num$13508$1POZIn)
        (begin
          (if (not (g$number?$13192$1POZIn g$num$13508$1POZIn))
            (assertion-violation
              'angle
              '"not a number"
              g$num$13508$1POZIn)
            (void))
          (g$atan$13361$1POZIn
            (g$imag-part$13321$1POZIn g$num$13508$1POZIn)
            (g$real-part$13320$1POZIn g$num$13508$1POZIn))))))
   (g$magnitude$13316$1POZIn
     g$magnitude$13626$1POZIn
     (case-lambda
       ((g$num$13509$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13509$1POZIn)
          ((case-lambda
             ((g$i$13510$1POZIn g$r$13511$1POZIn)
              (g$sqrt$13369$1POZIn
                (+ (* g$i$13510$1POZIn g$i$13510$1POZIn)
                   (* g$r$13511$1POZIn g$r$13511$1POZIn)))))
           (g$imag-part$13321$1POZIn g$num$13509$1POZIn)
           (g$real-part$13320$1POZIn g$num$13509$1POZIn))
          (if (g$real?$13199$1POZIn g$num$13509$1POZIn)
            (g$abs$13364$1POZIn g$num$13509$1POZIn)
            (begin
              '#f
              (assertion-violation
                'magnitude
                '"not a number"
                g$num$13509$1POZIn)))))))
   (g$exact-integer?$13317$1POZIn
     g$exact-integer?$13627$1POZIn
     (case-lambda
       ((g$obj$13512$1POZIn)
        ((case-lambda
           ((g$t$13513$1POZIn)
            (if g$t$13513$1POZIn
              g$t$13513$1POZIn
              (begin '#f (g$bignum?$13172$1POZIn g$obj$13512$1POZIn)))))
         (g$fixnum?$12668$1POZIn g$obj$13512$1POZIn)))))
   (g$numerator$13318$1POZIn
     g$numerator$13628$1POZIn
     (case-lambda
       ((g$num$13514$1POZIn)
        (if (g$exact-integer?$13317$1POZIn g$num$13514$1POZIn)
          g$num$13514$1POZIn
          (if (g$ratnum?$13173$1POZIn g$num$13514$1POZIn)
            (g$exact$13209$1POZIn
              (g$ratnum-numerator$13175$1POZIn g$num$13514$1POZIn))
            (if (if (g$real?$13199$1POZIn g$num$13514$1POZIn)
                  (if (g$finite?$13194$1POZIn g$num$13514$1POZIn)
                    (begin
                      '#f
                      (not (g$nan?$13193$1POZIn g$num$13514$1POZIn)))
                    '#f)
                  '#f)
              (g$inexact$13208$1POZIn
                (g$numerator$13318$1POZIn
                  (g$exact$13209$1POZIn g$num$13514$1POZIn)))
              (begin
                '#f
                (assertion-violation
                  'numerator
                  '"not a real"
                  g$num$13514$1POZIn))))))))
   (g$denominator$13319$1POZIn
     g$denominator$13629$1POZIn
     (case-lambda
       ((g$num$13515$1POZIn)
        (if (g$exact-integer?$13317$1POZIn g$num$13515$1POZIn)
          '1
          (if (g$ratnum?$13173$1POZIn g$num$13515$1POZIn)
            (g$exact$13209$1POZIn
              (g$ratnum-denominator$13174$1POZIn g$num$13515$1POZIn))
            (if (if (g$real?$13199$1POZIn g$num$13515$1POZIn)
                  (if (g$finite?$13194$1POZIn g$num$13515$1POZIn)
                    (begin
                      '#f
                      (not (g$nan?$13193$1POZIn g$num$13515$1POZIn)))
                    '#f)
                  '#f)
              (g$inexact$13208$1POZIn
                (g$denominator$13319$1POZIn
                  (g$exact$13209$1POZIn g$num$13515$1POZIn)))
              (begin
                '#f
                (assertion-violation
                  'denominator
                  '"not a real"
                  g$num$13515$1POZIn))))))))
   (g$real-part$13320$1POZIn
     g$real-part$13630$1POZIn
     (case-lambda
       ((g$num$13516$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13516$1POZIn)
          (g$complexnum-real-part$13179$1POZIn g$num$13516$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13516$1POZIn)
            g$num$13516$1POZIn
            (begin
              '#f
              (assertion-violation
                'real-part
                '"not a number"
                g$num$13516$1POZIn)))))))
   (g$imag-part$13321$1POZIn
     g$imag-part$13631$1POZIn
     (case-lambda
       ((g$num$13517$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13517$1POZIn)
          (g$complexnum-imag-part$13178$1POZIn g$num$13517$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13517$1POZIn)
            '0
            (begin
              '#f
              (assertion-violation
                'imag-part
                '"not a number"
                g$num$13517$1POZIn)))))))
   (g$exp$13352$1POZIn
     g$exp$13632$1POZIn
     (case-lambda
       ((g$num$13518$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13518$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'exp
            '()
            g$num$13518$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13518$1POZIn)
            (clr-call-internal
              'System.Math
              'exp
              '()
              (g$inexact$13208$1POZIn g$num$13518$1POZIn))
            (begin
              '#f
              (assertion-violation
                'exp
                '"not a number"
                g$num$13518$1POZIn)))))))
   (g$sin$13353$1POZIn
     g$sin$13633$1POZIn
     (case-lambda
       ((g$num$13519$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13519$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'sin
            '()
            g$num$13519$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13519$1POZIn)
            (clr-call-internal
              'System.Math
              'sin
              '()
              (g$inexact$13208$1POZIn g$num$13519$1POZIn))
            (begin
              '#f
              (assertion-violation
                'sin
                '"not a number"
                g$num$13519$1POZIn)))))))
   (g$asin$13354$1POZIn
     g$asin$13634$1POZIn
     (case-lambda
       ((g$num$13520$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13520$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'asin
            '()
            g$num$13520$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13520$1POZIn)
            (clr-call-internal
              'System.Math
              'asin
              '()
              (g$inexact$13208$1POZIn g$num$13520$1POZIn))
            (begin
              '#f
              (assertion-violation
                'asin
                '"not a number"
                g$num$13520$1POZIn)))))))
   (g$sinh$13355$1POZIn
     g$sinh$13635$1POZIn
     (case-lambda
       ((g$num$13521$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13521$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'sinh
            '()
            g$num$13521$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13521$1POZIn)
            (clr-call-internal
              'System.Math
              'sinh
              '()
              (g$inexact$13208$1POZIn g$num$13521$1POZIn))
            (begin
              '#f
              (assertion-violation
                'sinh
                '"not a number"
                g$num$13521$1POZIn)))))))
   (g$cos$13356$1POZIn
     g$cos$13636$1POZIn
     (case-lambda
       ((g$num$13522$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13522$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'cos
            '()
            g$num$13522$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13522$1POZIn)
            (clr-call-internal
              'System.Math
              'cos
              '()
              (g$inexact$13208$1POZIn g$num$13522$1POZIn))
            (begin
              '#f
              (assertion-violation
                'cos
                '"not a number"
                g$num$13522$1POZIn)))))))
   (g$acos$13357$1POZIn
     g$acos$13637$1POZIn
     (case-lambda
       ((g$num$13523$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13523$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'acos
            '()
            g$num$13523$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13523$1POZIn)
            (clr-call-internal
              'System.Math
              'acos
              '()
              (g$inexact$13208$1POZIn g$num$13523$1POZIn))
            (begin
              '#f
              (assertion-violation
                'acos
                '"not a number"
                g$num$13523$1POZIn)))))))
   (g$cosh$13358$1POZIn
     g$cosh$13638$1POZIn
     (case-lambda
       ((g$num$13524$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13524$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'cosh
            '()
            g$num$13524$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13524$1POZIn)
            (clr-call-internal
              'System.Math
              'cosh
              '()
              (g$inexact$13208$1POZIn g$num$13524$1POZIn))
            (begin
              '#f
              (assertion-violation
                'cosh
                '"not a number"
                g$num$13524$1POZIn)))))))
   (g$tan$13359$1POZIn
     g$tan$13639$1POZIn
     (case-lambda
       ((g$num$13525$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13525$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'tan
            '()
            g$num$13525$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13525$1POZIn)
            (clr-call-internal
              'System.Math
              'tan
              '()
              (g$inexact$13208$1POZIn g$num$13525$1POZIn))
            (begin
              '#f
              (assertion-violation
                'tan
                '"not a number"
                g$num$13525$1POZIn)))))))
   (g$tanh$13360$1POZIn
     g$tanh$13640$1POZIn
     (case-lambda
       ((g$num$13526$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13526$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'tanh
            '()
            g$num$13526$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13526$1POZIn)
            (clr-call-internal
              'System.Math
              'tanh
              '()
              (g$inexact$13208$1POZIn g$num$13526$1POZIn))
            (begin
              '#f
              (assertion-violation
                'tanh
                '"not a number"
                g$num$13526$1POZIn)))))))
   (g$atan$13361$1POZIn
     g$atan$13641$1POZIn
     (case-lambda
       ((g$num$13527$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13527$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'Atan
            '()
            g$num$13527$1POZIn)
          (if (g$real?$13199$1POZIn g$num$13527$1POZIn)
            (clr-call-internal
              'System.Math
              'Atan
              '()
              (g$inexact$13208$1POZIn g$num$13527$1POZIn))
            (begin
              '#f
              (assertion-violation
                'atan
                '"not a number"
                g$num$13527$1POZIn)))))
       ((g$num1$13528$1POZIn g$num2$13529$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$num1$13528$1POZIn))
            (assertion-violation
              'atan
              '"not a real"
              g$num1$13528$1POZIn)
            (void))
          (if (not (g$real?$13199$1POZIn g$num2$13529$1POZIn))
            (assertion-violation
              'atan
              '"not a real"
              g$num2$13529$1POZIn)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$13208$1POZIn g$num1$13528$1POZIn)
            (g$inexact$13208$1POZIn g$num2$13529$1POZIn))))))
   (g$log$13362$1POZIn
     g$log$13642$1POZIn
     (case-lambda
       ((g$num$13530$1POZIn)
        (begin
          (if (not (g$number?$13192$1POZIn g$num$13530$1POZIn))
            (assertion-violation
              'atan
              '"not a number"
              g$num$13530$1POZIn)
            (void))
          (if (g$complexnum?$13176$1POZIn g$num$13530$1POZIn)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Log
              '()
              g$num$13530$1POZIn)
            (if (g$negative?$13207$1POZIn g$num$13530$1POZIn)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                (g$make-complexnum$13177$1POZIn
                  (g$inexact$13208$1POZIn g$num$13530$1POZIn)
                  '0.0))
              (if (g$zero?$13205$1POZIn g$num$13530$1POZIn)
                (if (g$exact?$13196$1POZIn g$num$13530$1POZIn)
                  (assertion-violation
                    'log
                    '"not possible"
                    g$num$13530$1POZIn)
                  '-inf.0)
                (if (g$infinite?$13195$1POZIn g$num$13530$1POZIn)
                  (if (g$negative?$13207$1POZIn g$num$13530$1POZIn)
                    (g$make-complexnum$13177$1POZIn
                      (g$inexact$13208$1POZIn
                        (g$abs$13364$1POZIn g$num$13530$1POZIn))
                      '0)
                    g$num$13530$1POZIn)
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      'Log
                      '()
                      (g$inexact$13208$1POZIn
                        g$num$13530$1POZIn)))))))))
       ((g$num1$13531$1POZIn g$num2$13532$1POZIn)
        (/ (g$log$13362$1POZIn g$num1$13531$1POZIn)
           (g$log$13362$1POZIn g$num2$13532$1POZIn)))))
   (g$div$13363$1POZIn
     g$div$13643$1POZIn
     (case-lambda
       ((g$x1$13533$1POZIn g$x2$13534$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x1$13533$1POZIn))
            (assertion-violation 'div '"not a real" g$x1$13533$1POZIn)
            (void))
          (if (not (g$real?$13199$1POZIn g$x2$13534$1POZIn))
            (assertion-violation 'div '"not a real" g$x2$13534$1POZIn)
            (void))
          (if (g$zero?$13205$1POZIn g$x2$13534$1POZIn)
            (assertion-violation
              'div
              '"divide by zero"
              g$x1$13533$1POZIn
              g$x2$13534$1POZIn)
            (void))
          (if ((case-lambda
                 ((g$t$13535$1POZIn)
                  (if g$t$13535$1POZIn
                    g$t$13535$1POZIn
                    (begin
                      '#f
                      (g$infinite?$13195$1POZIn g$x1$13533$1POZIn)))))
               (g$nan?$13193$1POZIn g$x1$13533$1POZIn))
            (assertion-violation
              'div
              '"cannot be nan or infinite"
              g$x1$13533$1POZIn
              g$x2$13534$1POZIn)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$13196$1POZIn g$x1$13533$1POZIn)
                     (begin
                       '#f
                       (g$exact?$13196$1POZIn g$x2$13534$1POZIn))
                     '#f)
                 ((case-lambda
                    ((g$scale$13539$1POZIn)
                     (values
                       (* g$x1$13533$1POZIn g$scale$13539$1POZIn)
                       (* g$x2$13534$1POZIn g$scale$13539$1POZIn)
                       '#t)))
                  (* (g$denominator$13319$1POZIn g$x1$13533$1POZIn)
                     (g$denominator$13319$1POZIn g$x2$13534$1POZIn)))
                 (values g$x1$13533$1POZIn g$x2$13534$1POZIn '#f))))
            (case-lambda
              ((g$x1$13540$1POZIn
                 g$x2$13541$1POZIn
                 g$exact-args?$13542$1POZIn)
               ((case-lambda
                  ((g$exact-args?$13543$1POZIn
                     g$x2$13544$1POZIn
                     g$x1$13545$1POZIn)
                   ((case-lambda
                      ((g$d$13546$1POZIn)
                       (if (if g$exact-args?$13543$1POZIn
                             (begin
                               '#f
                               (g$rational-valued?$13203$1POZIn
                                 g$d$13546$1POZIn))
                             '#f)
                         (g$exact$13209$1POZIn g$d$13546$1POZIn)
                         g$d$13546$1POZIn)))
                    (if (g$positive?$13206$1POZIn g$x2$13544$1POZIn)
                      (g$floor$13365$1POZIn
                        (/ g$x1$13545$1POZIn g$x2$13544$1POZIn))
                      (- (g$floor$13365$1POZIn
                           (/ g$x1$13545$1POZIn
                              (- g$x2$13544$1POZIn))))))))
                g$exact-args?$13542$1POZIn
                g$x2$13541$1POZIn
                g$x1$13540$1POZIn))))))))
   (g$abs$13364$1POZIn
     g$abs$13644$1POZIn
     (case-lambda
       ((g$x1$13547$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x1$13547$1POZIn))
            (assertion-violation 'abs '"not a real" g$x1$13547$1POZIn)
            (void))
          (if (g$negative?$13207$1POZIn g$x1$13547$1POZIn)
            (- g$x1$13547$1POZIn)
            g$x1$13547$1POZIn)))))
   (g$floor$13365$1POZIn
     g$floor$13645$1POZIn
     (case-lambda
       ((g$x$13548$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x$13548$1POZIn))
            (assertion-violation 'floor '"not a real" g$x$13548$1POZIn)
            (void))
          (if (g$exact-integer?$13317$1POZIn g$x$13548$1POZIn)
            g$x$13548$1POZIn
            (if (g$ratnum?$13173$1POZIn g$x$13548$1POZIn)
              ((case-lambda
                 ((g$r$13549$1POZIn)
                  (g$exact$13209$1POZIn
                    (if (g$negative?$13207$1POZIn g$x$13548$1POZIn)
                      (- g$r$13549$1POZIn '1)
                      g$r$13549$1POZIn))))
               (g$bignum/$13180$1POZIn
                 (g$ratnum-numerator$13175$1POZIn g$x$13548$1POZIn)
                 (g$ratnum-denominator$13174$1POZIn g$x$13548$1POZIn)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Floor(System.Double)"
                  '()
                  (g$inexact$13208$1POZIn g$x$13548$1POZIn)))))))))
   (g$ceiling$13366$1POZIn
     g$ceiling$13646$1POZIn
     (case-lambda
       ((g$x$13550$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x$13550$1POZIn))
            (assertion-violation
              'ceiling
              '"not a real"
              g$x$13550$1POZIn)
            (void))
          (if (g$exact-integer?$13317$1POZIn g$x$13550$1POZIn)
            g$x$13550$1POZIn
            (if (g$ratnum?$13173$1POZIn g$x$13550$1POZIn)
              ((case-lambda
                 ((g$r$13551$1POZIn)
                  (g$exact$13209$1POZIn
                    (if (g$positive?$13206$1POZIn g$r$13551$1POZIn)
                      (+ g$r$13551$1POZIn '1)
                      g$r$13551$1POZIn))))
               (g$bignum/$13180$1POZIn
                 (g$ratnum-numerator$13175$1POZIn g$x$13550$1POZIn)
                 (g$ratnum-denominator$13174$1POZIn g$x$13550$1POZIn)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Ceiling(System.Double)"
                  '()
                  (g$inexact$13208$1POZIn g$x$13550$1POZIn)))))))))
   (g$truncate$13367$1POZIn
     g$truncate$13647$1POZIn
     (case-lambda
       ((g$x$13552$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x$13552$1POZIn))
            (assertion-violation
              'truncate
              '"not a real"
              g$x$13552$1POZIn)
            (void))
          (if (g$exact-integer?$13317$1POZIn g$x$13552$1POZIn)
            g$x$13552$1POZIn
            (begin
              '#f
              ((case-lambda
                 ((g$r$13553$1POZIn)
                  (if (g$exact?$13196$1POZIn g$x$13552$1POZIn)
                    (g$exact$13209$1POZIn g$r$13553$1POZIn)
                    g$r$13553$1POZIn)))
               (clr-call-internal
                 'System.Math
                 '"Truncate(System.Double)"
                 '()
                 (g$inexact$13208$1POZIn g$x$13552$1POZIn)))))))))
   (g$round$13368$1POZIn
     g$round$13648$1POZIn
     (case-lambda
       ((g$x$13554$1POZIn)
        (begin
          (if (not (g$real?$13199$1POZIn g$x$13554$1POZIn))
            (assertion-violation 'round '"not a real" g$x$13554$1POZIn)
            (void))
          (if (g$exact-integer?$13317$1POZIn g$x$13554$1POZIn)
            g$x$13554$1POZIn
            (if (g$ratnum?$13173$1POZIn g$x$13554$1POZIn)
              ((case-lambda
                 ((g$num$13555$1POZIn)
                  ((case-lambda
                     ((g$den$13556$1POZIn)
                      ((case-lambda
                         ((g$d$13557$1POZIn)
                          ((case-lambda
                             ((g$r$13558$1POZIn)
                              ((case-lambda
                                 ((g$hd$13559$1POZIn)
                                  (if (g$negative?$13207$1POZIn
                                        g$r$13558$1POZIn)
                                    (g$exact$13209$1POZIn
                                      (if (g$>$13311$1POZIn
                                            (- g$r$13558$1POZIn)
                                            g$hd$13559$1POZIn)
                                        (- g$d$13557$1POZIn '1)
                                        (if (g$<$13309$1POZIn
                                              (- g$r$13558$1POZIn)
                                              g$hd$13559$1POZIn)
                                          g$d$13557$1POZIn
                                          (if (g$even?$12711$1POZIn
                                                g$d$13557$1POZIn)
                                            g$d$13557$1POZIn
                                            (begin
                                              '#f
                                              (+ g$d$13557$1POZIn
                                                 '1))))))
                                    (if (g$positive?$13206$1POZIn
                                          g$r$13558$1POZIn)
                                      (g$exact$13209$1POZIn
                                        (if (g$>$13311$1POZIn
                                              g$r$13558$1POZIn
                                              g$hd$13559$1POZIn)
                                          (+ g$d$13557$1POZIn '1)
                                          (if (g$<$13309$1POZIn
                                                g$r$13558$1POZIn
                                                g$hd$13559$1POZIn)
                                            g$d$13557$1POZIn
                                            (if (g$even?$12711$1POZIn
                                                  g$d$13557$1POZIn)
                                              g$d$13557$1POZIn
                                              (begin
                                                '#f
                                                (+ g$d$13557$1POZIn
                                                   '1))))))
                                      (begin '#f g$d$13557$1POZIn)))))
                               (g$div$13363$1POZIn
                                 g$d$13557$1POZIn
                                 '2))))
                           (g$bignum%$13181$1POZIn
                             g$num$13555$1POZIn
                             g$den$13556$1POZIn))))
                       (g$bignum/$13180$1POZIn
                         g$num$13555$1POZIn
                         g$den$13556$1POZIn))))
                   (g$ratnum-denominator$13174$1POZIn
                     g$x$13554$1POZIn))))
               (g$ratnum-numerator$13175$1POZIn g$x$13554$1POZIn))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Round(System.Double)"
                  '()
                  (g$inexact$13208$1POZIn g$x$13554$1POZIn)))))))))
   (g$sqrt$13369$1POZIn
     g$sqrt$13649$1POZIn
     (case-lambda
       ((g$num$13560$1POZIn)
        (if (g$complexnum?$13176$1POZIn g$num$13560$1POZIn)
          (clr-call-internal
            'Microsoft.Scripting.Math.Complex64
            'Sqrt
            '()
            g$num$13560$1POZIn)
          (if (g$negative?$13207$1POZIn g$num$13560$1POZIn)
            (g$make-rectangular$13313$1POZIn
              '0
              (g$sqrt$13369$1POZIn (- g$num$13560$1POZIn)))
            (if (g$bignum?$13172$1POZIn g$num$13560$1POZIn)
              (bignum-sqrt g$num$13560$1POZIn)
              (if (g$infinite?$13195$1POZIn g$num$13560$1POZIn)
                g$num$13560$1POZIn
                (begin
                  '#f
                  ((case-lambda
                     ((g$r$13561$1POZIn)
                      (if (g$exact?$13196$1POZIn g$num$13560$1POZIn)
                        (g$exact$13209$1POZIn g$r$13561$1POZIn)
                        g$r$13561$1POZIn)))
                   (clr-call-internal
                     'System.Math
                     'Sqrt
                     '()
                     (g$inexact$13208$1POZIn
                       g$num$13560$1POZIn)))))))))))
   (g$exact-integer-sqrt$13370$1POZIn
     g$exact-integer-sqrt$13650$1POZIn
     (case-lambda
       ((g$num$13562$1POZIn)
        (if (g$bignum?$13172$1POZIn g$num$13562$1POZIn)
          (bignum-sqrt-exact g$num$13562$1POZIn)
          ((case-lambda
             ((g$r$13563$1POZIn)
              ((case-lambda
                 ((g$rf$13564$1POZIn)
                  ((case-lambda
                     ((g$rest$13565$1POZIn)
                      (values g$rf$13564$1POZIn g$rest$13565$1POZIn)))
                   (- g$num$13562$1POZIn
                      (* g$rf$13564$1POZIn g$rf$13564$1POZIn)))))
               (g$exact$13209$1POZIn
                 (g$floor$13365$1POZIn g$r$13563$1POZIn)))))
           (g$sqrt$13369$1POZIn g$num$13562$1POZIn))))))
   (g$expt$13371$1POZIn
     g$expt$13651$1POZIn
     (case-lambda
       ((g$obj1$13566$1POZIn g$obj2$13567$1POZIn)
        (letrec* ((g$make-restriction-violation$13568$1POZIn
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$14189$1POZIn)
                         (g$make-who-condition$14151$1POZIn 'expt)
                         (g$make-message-condition$14091$1POZIn
                           '"not supported")
                         (g$make-irritants-condition$14141$1POZIn
                           g$obj1$13566$1POZIn
                           g$obj2$13567$1POZIn))))))
          (if ((case-lambda
                 ((g$t$13569$1POZIn)
                  (if g$t$13569$1POZIn
                    g$t$13569$1POZIn
                    (begin
                      '#f
                      (g$negative?$13207$1POZIn g$obj1$13566$1POZIn)))))
               (g$complexnum?$13176$1POZIn g$obj1$13566$1POZIn))
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Pow
              '()
              (g$real->complexnum$13186$1POZIn g$obj1$13566$1POZIn)
              (g$real->complexnum$13186$1POZIn g$obj2$13567$1POZIn))
            (begin
              '#f
              ((case-lambda
                 ((g$e$13570$1POZIn g$z1$13571$1POZIn g$z2$13572$1POZIn)
                  (if (if g$z1$13571$1POZIn
                        (begin '#f (not g$z2$13572$1POZIn))
                        '#f)
                    (if g$e$13570$1POZIn '0 '0.0)
                    (if ((case-lambda
                           ((g$t$13573$1POZIn)
                            (if g$t$13573$1POZIn
                              g$t$13573$1POZIn
                              (begin
                                '#f
                                (g$=$13308$1POZIn
                                  g$obj1$13566$1POZIn
                                  '1)))))
                         g$z2$13572$1POZIn)
                      (if g$e$13570$1POZIn '1 '1.0)
                      (if (g$=$13308$1POZIn g$obj2$13567$1POZIn '1)
                        (if g$e$13570$1POZIn
                          g$obj1$13566$1POZIn
                          (g$inexact$13208$1POZIn g$obj1$13566$1POZIn))
                        (begin
                          '#f
                          ((case-lambda
                             ((g$neg?$13574$1POZIn)
                              ((case-lambda
                                 ((g$obj2$13575$1POZIn)
                                  (if (if (g$integer?$13201$1POZIn
                                            g$obj1$13566$1POZIn)
                                        (begin
                                          '#f
                                          (g$integer?$13201$1POZIn
                                            g$obj2$13575$1POZIn))
                                        '#f)
                                    ((case-lambda
                                       ((g$a$13576$1POZIn)
                                        ((case-lambda
                                           ((g$r$13577$1POZIn)
                                            (if g$neg?$13574$1POZIn
                                              (if (g$zero?$13205$1POZIn
                                                    g$r$13577$1POZIn)
                                                (raise
                                                  (g$make-restriction-violation$13568$1POZIn))
                                                (/ '1 g$r$13577$1POZIn))
                                              (g$exact$13209$1POZIn
                                                g$r$13577$1POZIn))))
                                         (clr-call-internal
                                           'Microsoft.Scripting.Math.BigInteger
                                           'Power
                                           g$a$13576$1POZIn
                                           (g$->fixnum$13187$1POZIn
                                             g$obj2$13575$1POZIn)))))
                                     (g$->bignum$13189$1POZIn
                                       g$obj1$13566$1POZIn))
                                    (if (if (g$rational?$13200$1POZIn
                                              g$obj1$13566$1POZIn)
                                          (begin
                                            '#f
                                            (g$integer?$13201$1POZIn
                                              g$obj2$13575$1POZIn))
                                          '#f)
                                      ((case-lambda
                                         ((g$f$13578$1POZIn)
                                          (if g$neg?$13574$1POZIn
                                            (/ (g$expt$13371$1POZIn
                                                 (g$denominator$13319$1POZIn
                                                   g$f$13578$1POZIn)
                                                 g$obj2$13575$1POZIn)
                                               (g$expt$13371$1POZIn
                                                 (g$numerator$13318$1POZIn
                                                   g$f$13578$1POZIn)
                                                 g$obj2$13575$1POZIn))
                                            (/ (g$expt$13371$1POZIn
                                                 (g$numerator$13318$1POZIn
                                                   g$f$13578$1POZIn)
                                                 g$obj2$13575$1POZIn)
                                               (g$expt$13371$1POZIn
                                                 (g$denominator$13319$1POZIn
                                                   g$f$13578$1POZIn)
                                                 g$obj2$13575$1POZIn)))))
                                       (g$->ratnum$13188$1POZIn
                                         g$obj1$13566$1POZIn))
                                      (if (if (g$real?$13199$1POZIn
                                                g$obj1$13566$1POZIn)
                                            (begin
                                              '#f
                                              (g$real?$13199$1POZIn
                                                g$obj2$13575$1POZIn))
                                            '#f)
                                        ((case-lambda
                                           ((g$r$13579$1POZIn)
                                            (if g$neg?$13574$1POZIn
                                              (/ '1 g$r$13579$1POZIn)
                                              g$r$13579$1POZIn)))
                                         (clr-call-internal
                                           'System.Math
                                           'Pow
                                           '()
                                           (g$inexact$13208$1POZIn
                                             g$obj1$13566$1POZIn)
                                           (g$inexact$13208$1POZIn
                                             g$obj2$13575$1POZIn)))
                                        (begin
                                          '#f
                                          (raise
                                            (g$make-restriction-violation$13568$1POZIn))))))))
                               (if g$neg?$13574$1POZIn
                                 (g$abs$13364$1POZIn
                                   g$obj2$13567$1POZIn)
                                 g$obj2$13567$1POZIn))))
                           (g$negative?$13207$1POZIn
                             g$obj2$13567$1POZIn))))))))
               (if (g$exact?$13196$1POZIn g$obj1$13566$1POZIn)
                 (begin '#f (g$exact?$13196$1POZIn g$obj2$13567$1POZIn))
                 '#f)
               (g$zero?$13205$1POZIn g$obj1$13566$1POZIn)
               (g$zero?$13205$1POZIn g$obj2$13567$1POZIn)))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6419$13652$1POZIn
     g$6419$14080$1POZIn
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6422$1POZIn
       '#f
       '#f
       '#()))
   (g$6421$13653$1POZIn g$6421$14081$1POZIn '#f)
   (g$6420$13654$1POZIn
     g$6420$14082$1POZIn
     (make-record-constructor-descriptor
       g$6419$13652$1POZIn
       '#f
       g$6421$13653$1POZIn))
   (g$&condition?$13657$1POZIn
     g$&condition?$14083$1POZIn
     (record-predicate g$6419$13652$1POZIn))
   (g$make-&condition$13658$1POZIn
     g$make-&condition$14084$1POZIn
     (record-constructor g$6420$13654$1POZIn))
   (g$&condition-rtd$13659$1POZIn
     g$&condition-rtd$14085$1POZIn
     g$6419$13652$1POZIn)
   (g$&condition-rcd$13660$1POZIn
     g$&condition-rcd$14086$1POZIn
     g$6420$13654$1POZIn)
   (g$6456$13758$1POZIn
     g$6456$14087$1POZIn
     (make-record-type-descriptor
       '&message
       g$6419$13652$1POZIn
       'g$6459$1POZIn
       '#f
       '#f
       '#((immutable message))))
   (g$6458$13759$1POZIn g$6458$14088$1POZIn '#f)
   (g$6457$13760$1POZIn
     g$6457$14089$1POZIn
     (make-record-constructor-descriptor
       g$6456$13758$1POZIn
       g$6420$13654$1POZIn
       g$6458$13759$1POZIn))
   (g$p?$13763$1POZIn
     g$p?$14090$1POZIn
     (record-predicate g$6456$13758$1POZIn))
   (g$make-message-condition$13764$1POZIn
     g$make-message-condition$14091$1POZIn
     (record-constructor g$6457$13760$1POZIn))
   (g$condition-message$13765$1POZIn
     g$condition-message$14092$1POZIn
     (record-accessor g$6456$13758$1POZIn '0))
   (g$message-condition?$13766$1POZIn
     g$message-condition?$14093$1POZIn
     (condition-predicate g$6456$13758$1POZIn))
   (g$condition-message$13767$1POZIn
     g$condition-message$14094$1POZIn
     (condition-accessor
       g$6456$13758$1POZIn
       g$condition-message$13765$1POZIn))
   (g$&message-rtd$13768$1POZIn
     g$&message-rtd$14095$1POZIn
     g$6456$13758$1POZIn)
   (g$&message-rcd$13769$1POZIn
     g$&message-rcd$14096$1POZIn
     g$6457$13760$1POZIn)
   (g$6471$13770$1POZIn
     g$6471$14097$1POZIn
     (make-record-type-descriptor
       '&warning
       g$6419$13652$1POZIn
       'g$6474$1POZIn
       '#f
       '#f
       '#()))
   (g$6473$13771$1POZIn g$6473$14098$1POZIn '#f)
   (g$6472$13772$1POZIn
     g$6472$14099$1POZIn
     (make-record-constructor-descriptor
       g$6471$13770$1POZIn
       g$6420$13654$1POZIn
       g$6473$13771$1POZIn))
   (g$p?$13775$1POZIn
     g$p?$14100$1POZIn
     (record-predicate g$6471$13770$1POZIn))
   (g$make-warning$13776$1POZIn
     g$make-warning$14101$1POZIn
     (record-constructor g$6472$13772$1POZIn))
   (g$warning?$13777$1POZIn
     g$warning?$14102$1POZIn
     (condition-predicate g$6471$13770$1POZIn))
   (g$&warning-rtd$13778$1POZIn
     g$&warning-rtd$14103$1POZIn
     g$6471$13770$1POZIn)
   (g$&warning-rcd$13779$1POZIn
     g$&warning-rcd$14104$1POZIn
     g$6472$13772$1POZIn)
   (g$6484$13780$1POZIn
     g$6484$14105$1POZIn
     (make-record-type-descriptor
       '&serious
       g$6419$13652$1POZIn
       'g$6487$1POZIn
       '#f
       '#f
       '#()))
   (g$6486$13781$1POZIn g$6486$14106$1POZIn '#f)
   (g$6485$13782$1POZIn
     g$6485$14107$1POZIn
     (make-record-constructor-descriptor
       g$6484$13780$1POZIn
       g$6420$13654$1POZIn
       g$6486$13781$1POZIn))
   (g$p?$13785$1POZIn
     g$p?$14108$1POZIn
     (record-predicate g$6484$13780$1POZIn))
   (g$make-serious-condition$13786$1POZIn
     g$make-serious-condition$14109$1POZIn
     (record-constructor g$6485$13782$1POZIn))
   (g$serious-condition?$13787$1POZIn
     g$serious-condition?$14110$1POZIn
     (condition-predicate g$6484$13780$1POZIn))
   (g$&serious-rtd$13788$1POZIn
     g$&serious-rtd$14111$1POZIn
     g$6484$13780$1POZIn)
   (g$&serious-rcd$13789$1POZIn
     g$&serious-rcd$14112$1POZIn
     g$6485$13782$1POZIn)
   (g$6497$13790$1POZIn
     g$6497$14113$1POZIn
     (make-record-type-descriptor
       '&error
       g$6484$13780$1POZIn
       'g$6500$1POZIn
       '#f
       '#f
       '#()))
   (g$6499$13791$1POZIn g$6499$14114$1POZIn '#f)
   (g$6498$13792$1POZIn
     g$6498$14115$1POZIn
     (make-record-constructor-descriptor
       g$6497$13790$1POZIn
       g$6485$13782$1POZIn
       g$6499$13791$1POZIn))
   (g$p?$13795$1POZIn
     g$p?$14116$1POZIn
     (record-predicate g$6497$13790$1POZIn))
   (g$make-error$13796$1POZIn
     g$make-error$14117$1POZIn
     (record-constructor g$6498$13792$1POZIn))
   (g$error?$13797$1POZIn
     g$error?$14118$1POZIn
     (condition-predicate g$6497$13790$1POZIn))
   (g$&error-rtd$13798$1POZIn
     g$&error-rtd$14119$1POZIn
     g$6497$13790$1POZIn)
   (g$&error-rcd$13799$1POZIn
     g$&error-rcd$14120$1POZIn
     g$6498$13792$1POZIn)
   (g$6510$13800$1POZIn
     g$6510$14121$1POZIn
     (make-record-type-descriptor
       '&violation
       g$6484$13780$1POZIn
       'g$6513$1POZIn
       '#f
       '#f
       '#()))
   (g$6512$13801$1POZIn g$6512$14122$1POZIn '#f)
   (g$6511$13802$1POZIn
     g$6511$14123$1POZIn
     (make-record-constructor-descriptor
       g$6510$13800$1POZIn
       g$6485$13782$1POZIn
       g$6512$13801$1POZIn))
   (g$p?$13805$1POZIn
     g$p?$14124$1POZIn
     (record-predicate g$6510$13800$1POZIn))
   (g$make-violation$13806$1POZIn
     g$make-violation$14125$1POZIn
     (record-constructor g$6511$13802$1POZIn))
   (g$violation?$13807$1POZIn
     g$violation?$14126$1POZIn
     (condition-predicate g$6510$13800$1POZIn))
   (g$&violation-rtd$13808$1POZIn
     g$&violation-rtd$14127$1POZIn
     g$6510$13800$1POZIn)
   (g$&violation-rcd$13809$1POZIn
     g$&violation-rcd$14128$1POZIn
     g$6511$13802$1POZIn)
   (g$6523$13810$1POZIn
     g$6523$14129$1POZIn
     (make-record-type-descriptor
       '&assertion
       g$6510$13800$1POZIn
       'g$6526$1POZIn
       '#f
       '#f
       '#()))
   (g$6525$13811$1POZIn g$6525$14130$1POZIn '#f)
   (g$6524$13812$1POZIn
     g$6524$14131$1POZIn
     (make-record-constructor-descriptor
       g$6523$13810$1POZIn
       g$6511$13802$1POZIn
       g$6525$13811$1POZIn))
   (g$p?$13815$1POZIn
     g$p?$14132$1POZIn
     (record-predicate g$6523$13810$1POZIn))
   (g$make-assertion-violation$13816$1POZIn
     g$make-assertion-violation$14133$1POZIn
     (record-constructor g$6524$13812$1POZIn))
   (g$assertion-violation?$13817$1POZIn
     g$assertion-violation?$14134$1POZIn
     (condition-predicate g$6523$13810$1POZIn))
   (g$&assertion-rtd$13818$1POZIn
     g$&assertion-rtd$14135$1POZIn
     g$6523$13810$1POZIn)
   (g$&assertion-rcd$13819$1POZIn
     g$&assertion-rcd$14136$1POZIn
     g$6524$13812$1POZIn)
   (g$6536$13821$1POZIn
     g$6536$14137$1POZIn
     (make-record-type-descriptor
       '&irritants
       g$6419$13652$1POZIn
       'g$6539$1POZIn
       '#f
       '#f
       '#((immutable irritants))))
   (g$6538$13822$1POZIn g$6538$14138$1POZIn '#f)
   (g$6537$13823$1POZIn
     g$6537$14139$1POZIn
     (make-record-constructor-descriptor
       g$6536$13821$1POZIn
       g$6420$13654$1POZIn
       g$6538$13822$1POZIn))
   (g$p?$13826$1POZIn
     g$p?$14140$1POZIn
     (record-predicate g$6536$13821$1POZIn))
   (g$make-irritants-condition$13827$1POZIn
     g$make-irritants-condition$14141$1POZIn
     (record-constructor g$6537$13823$1POZIn))
   (g$condition-irritants$13828$1POZIn
     g$condition-irritants$14142$1POZIn
     (record-accessor g$6536$13821$1POZIn '0))
   (g$irritants-condition?$13829$1POZIn
     g$irritants-condition?$14143$1POZIn
     (condition-predicate g$6536$13821$1POZIn))
   (g$condition-irritants$13830$1POZIn
     g$condition-irritants$14144$1POZIn
     (condition-accessor
       g$6536$13821$1POZIn
       g$condition-irritants$13828$1POZIn))
   (g$&irritants-rtd$13831$1POZIn
     g$&irritants-rtd$14145$1POZIn
     g$6536$13821$1POZIn)
   (g$&irritants-rcd$13832$1POZIn
     g$&irritants-rcd$14146$1POZIn
     g$6537$13823$1POZIn)
   (g$6551$13834$1POZIn
     g$6551$14147$1POZIn
     (make-record-type-descriptor
       '&who
       g$6419$13652$1POZIn
       'g$6554$1POZIn
       '#f
       '#f
       '#((immutable who))))
   (g$6553$13835$1POZIn g$6553$14148$1POZIn '#f)
   (g$6552$13836$1POZIn
     g$6552$14149$1POZIn
     (make-record-constructor-descriptor
       g$6551$13834$1POZIn
       g$6420$13654$1POZIn
       g$6553$13835$1POZIn))
   (g$p?$13839$1POZIn
     g$p?$14150$1POZIn
     (record-predicate g$6551$13834$1POZIn))
   (g$make-who-condition$13840$1POZIn
     g$make-who-condition$14151$1POZIn
     (record-constructor g$6552$13836$1POZIn))
   (g$condition-who$13841$1POZIn
     g$condition-who$14152$1POZIn
     (record-accessor g$6551$13834$1POZIn '0))
   (g$who-condition?$13842$1POZIn
     g$who-condition?$14153$1POZIn
     (condition-predicate g$6551$13834$1POZIn))
   (g$condition-who$13843$1POZIn
     g$condition-who$14154$1POZIn
     (condition-accessor
       g$6551$13834$1POZIn
       g$condition-who$13841$1POZIn))
   (g$&who-rtd$13844$1POZIn g$&who-rtd$14155$1POZIn g$6551$13834$1POZIn)
   (g$&who-rcd$13845$1POZIn g$&who-rcd$14156$1POZIn g$6552$13836$1POZIn)
   (g$6566$13847$1POZIn
     g$6566$14157$1POZIn
     (make-record-type-descriptor
       '&where
       g$6419$13652$1POZIn
       'g$6569$1POZIn
       '#f
       '#f
       '#((immutable where))))
   (g$6568$13848$1POZIn g$6568$14158$1POZIn '#f)
   (g$6567$13849$1POZIn
     g$6567$14159$1POZIn
     (make-record-constructor-descriptor
       g$6566$13847$1POZIn
       g$6420$13654$1POZIn
       g$6568$13848$1POZIn))
   (g$p?$13852$1POZIn
     g$p?$14160$1POZIn
     (record-predicate g$6566$13847$1POZIn))
   (g$make-where-condition$13853$1POZIn
     g$make-where-condition$14161$1POZIn
     (record-constructor g$6567$13849$1POZIn))
   (g$condition-where$13854$1POZIn
     g$condition-where$14162$1POZIn
     (record-accessor g$6566$13847$1POZIn '0))
   (g$where-condition?$13855$1POZIn
     g$where-condition?$14163$1POZIn
     (condition-predicate g$6566$13847$1POZIn))
   (g$condition-where$13856$1POZIn
     g$condition-where$14164$1POZIn
     (condition-accessor
       g$6566$13847$1POZIn
       g$condition-where$13854$1POZIn))
   (g$&where-rtd$13857$1POZIn
     g$&where-rtd$14165$1POZIn
     g$6566$13847$1POZIn)
   (g$&where-rcd$13858$1POZIn
     g$&where-rcd$14166$1POZIn
     g$6567$13849$1POZIn)
   (g$6581$13860$1POZIn
     g$6581$14167$1POZIn
     (make-record-type-descriptor
       '&stacktrace
       g$6419$13652$1POZIn
       'g$6584$1POZIn
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$6583$13861$1POZIn g$6583$14168$1POZIn '#f)
   (g$6582$13862$1POZIn
     g$6582$14169$1POZIn
     (make-record-constructor-descriptor
       g$6581$13860$1POZIn
       g$6420$13654$1POZIn
       g$6583$13861$1POZIn))
   (g$p?$13865$1POZIn
     g$p?$14170$1POZIn
     (record-predicate g$6581$13860$1POZIn))
   (g$make-stacktrace-condition$13866$1POZIn
     g$make-stacktrace-condition$14171$1POZIn
     (record-constructor g$6582$13862$1POZIn))
   (g$condition-stacktrace$13867$1POZIn
     g$condition-stacktrace$14172$1POZIn
     (record-accessor g$6581$13860$1POZIn '0))
   (g$stacktrace-condition?$13868$1POZIn
     g$stacktrace-condition?$14173$1POZIn
     (condition-predicate g$6581$13860$1POZIn))
   (g$condition-stacktrace$13869$1POZIn
     g$condition-stacktrace$14174$1POZIn
     (condition-accessor
       g$6581$13860$1POZIn
       g$condition-stacktrace$13867$1POZIn))
   (g$&stacktrace-rtd$13870$1POZIn
     g$&stacktrace-rtd$14175$1POZIn
     g$6581$13860$1POZIn)
   (g$&stacktrace-rcd$13871$1POZIn
     g$&stacktrace-rcd$14176$1POZIn
     g$6582$13862$1POZIn)
   (g$6596$13872$1POZIn
     g$6596$14177$1POZIn
     (make-record-type-descriptor
       '&non-continuable
       g$6510$13800$1POZIn
       'g$6599$1POZIn
       '#f
       '#f
       '#()))
   (g$6598$13873$1POZIn g$6598$14178$1POZIn '#f)
   (g$6597$13874$1POZIn
     g$6597$14179$1POZIn
     (make-record-constructor-descriptor
       g$6596$13872$1POZIn
       g$6511$13802$1POZIn
       g$6598$13873$1POZIn))
   (g$p?$13877$1POZIn
     g$p?$14180$1POZIn
     (record-predicate g$6596$13872$1POZIn))
   (g$make-non-continuable-violation$13878$1POZIn
     g$make-non-continuable-violation$14181$1POZIn
     (record-constructor g$6597$13874$1POZIn))
   (g$non-continuable-violation?$13879$1POZIn
     g$non-continuable-violation?$14182$1POZIn
     (condition-predicate g$6596$13872$1POZIn))
   (g$&non-continuable-rtd$13880$1POZIn
     g$&non-continuable-rtd$14183$1POZIn
     g$6596$13872$1POZIn)
   (g$&non-continuable-rcd$13881$1POZIn
     g$&non-continuable-rcd$14184$1POZIn
     g$6597$13874$1POZIn)
   (g$6609$13882$1POZIn
     g$6609$14185$1POZIn
     (make-record-type-descriptor
       '&implementation-restriction
       g$6510$13800$1POZIn
       'g$6612$1POZIn
       '#f
       '#f
       '#()))
   (g$6611$13883$1POZIn g$6611$14186$1POZIn '#f)
   (g$6610$13884$1POZIn
     g$6610$14187$1POZIn
     (make-record-constructor-descriptor
       g$6609$13882$1POZIn
       g$6511$13802$1POZIn
       g$6611$13883$1POZIn))
   (g$p?$13887$1POZIn
     g$p?$14188$1POZIn
     (record-predicate g$6609$13882$1POZIn))
   (g$make-implementation-restriction-violation$13888$1POZIn
     g$make-implementation-restriction-violation$14189$1POZIn
     (record-constructor g$6610$13884$1POZIn))
   (g$implementation-restriction-violation?$13889$1POZIn
     g$implementation-restriction-violation?$14190$1POZIn
     (condition-predicate g$6609$13882$1POZIn))
   (g$&implementation-restriction-rtd$13890$1POZIn
     g$&implementation-restriction-rtd$14191$1POZIn
     g$6609$13882$1POZIn)
   (g$&implementation-restriction-rcd$13891$1POZIn
     g$&implementation-restriction-rcd$14192$1POZIn
     g$6610$13884$1POZIn)
   (g$6622$13892$1POZIn
     g$6622$14193$1POZIn
     (make-record-type-descriptor
       '&lexical
       g$6510$13800$1POZIn
       'g$6625$1POZIn
       '#f
       '#f
       '#()))
   (g$6624$13893$1POZIn g$6624$14194$1POZIn '#f)
   (g$6623$13894$1POZIn
     g$6623$14195$1POZIn
     (make-record-constructor-descriptor
       g$6622$13892$1POZIn
       g$6511$13802$1POZIn
       g$6624$13893$1POZIn))
   (g$p?$13897$1POZIn
     g$p?$14196$1POZIn
     (record-predicate g$6622$13892$1POZIn))
   (g$make-lexical-violation$13898$1POZIn
     g$make-lexical-violation$14197$1POZIn
     (record-constructor g$6623$13894$1POZIn))
   (g$lexical-violation?$13899$1POZIn
     g$lexical-violation?$14198$1POZIn
     (condition-predicate g$6622$13892$1POZIn))
   (g$&lexical-rtd$13900$1POZIn
     g$&lexical-rtd$14199$1POZIn
     g$6622$13892$1POZIn)
   (g$&lexical-rcd$13901$1POZIn
     g$&lexical-rcd$14200$1POZIn
     g$6623$13894$1POZIn)
   (g$6635$13904$1POZIn
     g$6635$14201$1POZIn
     (make-record-type-descriptor
       '&syntax
       g$6510$13800$1POZIn
       'g$6638$1POZIn
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6637$13905$1POZIn g$6637$14202$1POZIn '#f)
   (g$6636$13906$1POZIn
     g$6636$14203$1POZIn
     (make-record-constructor-descriptor
       g$6635$13904$1POZIn
       g$6511$13802$1POZIn
       g$6637$13905$1POZIn))
   (g$p?$13909$1POZIn
     g$p?$14204$1POZIn
     (record-predicate g$6635$13904$1POZIn))
   (g$make-syntax-violation$13910$1POZIn
     g$make-syntax-violation$14205$1POZIn
     (record-constructor g$6636$13906$1POZIn))
   (g$syntax-violation-form$13911$1POZIn
     g$syntax-violation-form$14206$1POZIn
     (record-accessor g$6635$13904$1POZIn '0))
   (g$syntax-violation-subform$13912$1POZIn
     g$syntax-violation-subform$14207$1POZIn
     (record-accessor g$6635$13904$1POZIn '1))
   (g$syntax-violation?$13913$1POZIn
     g$syntax-violation?$14208$1POZIn
     (condition-predicate g$6635$13904$1POZIn))
   (g$syntax-violation-form$13914$1POZIn
     g$syntax-violation-form$14209$1POZIn
     (condition-accessor
       g$6635$13904$1POZIn
       g$syntax-violation-form$13911$1POZIn))
   (g$syntax-violation-subform$13915$1POZIn
     g$syntax-violation-subform$14210$1POZIn
     (condition-accessor
       g$6635$13904$1POZIn
       g$syntax-violation-subform$13912$1POZIn))
   (g$&syntax-rtd$13916$1POZIn
     g$&syntax-rtd$14211$1POZIn
     g$6635$13904$1POZIn)
   (g$&syntax-rcd$13917$1POZIn
     g$&syntax-rcd$14212$1POZIn
     g$6636$13906$1POZIn)
   (g$6652$13918$1POZIn
     g$6652$14213$1POZIn
     (make-record-type-descriptor
       '&undefined
       g$6510$13800$1POZIn
       'g$6655$1POZIn
       '#f
       '#f
       '#()))
   (g$6654$13919$1POZIn g$6654$14214$1POZIn '#f)
   (g$6653$13920$1POZIn
     g$6653$14215$1POZIn
     (make-record-constructor-descriptor
       g$6652$13918$1POZIn
       g$6511$13802$1POZIn
       g$6654$13919$1POZIn))
   (g$p?$13923$1POZIn
     g$p?$14216$1POZIn
     (record-predicate g$6652$13918$1POZIn))
   (g$make-undefined-violation$13924$1POZIn
     g$make-undefined-violation$14217$1POZIn
     (record-constructor g$6653$13920$1POZIn))
   (g$undefined-violation?$13925$1POZIn
     g$undefined-violation?$14218$1POZIn
     (condition-predicate g$6652$13918$1POZIn))
   (g$&undefined-rtd$13926$1POZIn
     g$&undefined-rtd$14219$1POZIn
     g$6652$13918$1POZIn)
   (g$&undefined-rcd$13927$1POZIn
     g$&undefined-rcd$14220$1POZIn
     g$6653$13920$1POZIn)
   (g$6665$13928$1POZIn
     g$6665$14221$1POZIn
     (make-record-type-descriptor
       '&i/o
       g$6497$13790$1POZIn
       'g$6668$1POZIn
       '#f
       '#f
       '#()))
   (g$6667$13929$1POZIn g$6667$14222$1POZIn '#f)
   (g$6666$13930$1POZIn
     g$6666$14223$1POZIn
     (make-record-constructor-descriptor
       g$6665$13928$1POZIn
       g$6498$13792$1POZIn
       g$6667$13929$1POZIn))
   (g$p?$13933$1POZIn
     g$p?$14224$1POZIn
     (record-predicate g$6665$13928$1POZIn))
   (g$make-i/o-error$13934$1POZIn
     g$make-i/o-error$14225$1POZIn
     (record-constructor g$6666$13930$1POZIn))
   (g$i/o-error?$13935$1POZIn
     g$i/o-error?$14226$1POZIn
     (condition-predicate g$6665$13928$1POZIn))
   (g$&i/o-rtd$13936$1POZIn g$&i/o-rtd$14227$1POZIn g$6665$13928$1POZIn)
   (g$&i/o-rcd$13937$1POZIn g$&i/o-rcd$14228$1POZIn g$6666$13930$1POZIn)
   (g$6678$13938$1POZIn
     g$6678$14229$1POZIn
     (make-record-type-descriptor
       '&i/o-read
       g$6665$13928$1POZIn
       'g$6681$1POZIn
       '#f
       '#f
       '#()))
   (g$6680$13939$1POZIn g$6680$14230$1POZIn '#f)
   (g$6679$13940$1POZIn
     g$6679$14231$1POZIn
     (make-record-constructor-descriptor
       g$6678$13938$1POZIn
       g$6666$13930$1POZIn
       g$6680$13939$1POZIn))
   (g$p?$13943$1POZIn
     g$p?$14232$1POZIn
     (record-predicate g$6678$13938$1POZIn))
   (g$make-i/o-read-error$13944$1POZIn
     g$make-i/o-read-error$14233$1POZIn
     (record-constructor g$6679$13940$1POZIn))
   (g$i/o-read-error?$13945$1POZIn
     g$i/o-read-error?$14234$1POZIn
     (condition-predicate g$6678$13938$1POZIn))
   (g$&i/o-read-rtd$13946$1POZIn
     g$&i/o-read-rtd$14235$1POZIn
     g$6678$13938$1POZIn)
   (g$&i/o-read-rcd$13947$1POZIn
     g$&i/o-read-rcd$14236$1POZIn
     g$6679$13940$1POZIn)
   (g$6691$13948$1POZIn
     g$6691$14237$1POZIn
     (make-record-type-descriptor
       '&i/o-write
       g$6665$13928$1POZIn
       'g$6694$1POZIn
       '#f
       '#f
       '#()))
   (g$6693$13949$1POZIn g$6693$14238$1POZIn '#f)
   (g$6692$13950$1POZIn
     g$6692$14239$1POZIn
     (make-record-constructor-descriptor
       g$6691$13948$1POZIn
       g$6666$13930$1POZIn
       g$6693$13949$1POZIn))
   (g$p?$13953$1POZIn
     g$p?$14240$1POZIn
     (record-predicate g$6691$13948$1POZIn))
   (g$make-i/o-write-error$13954$1POZIn
     g$make-i/o-write-error$14241$1POZIn
     (record-constructor g$6692$13950$1POZIn))
   (g$i/o-write-error?$13955$1POZIn
     g$i/o-write-error?$14242$1POZIn
     (condition-predicate g$6691$13948$1POZIn))
   (g$&i/o-write-rtd$13956$1POZIn
     g$&i/o-write-rtd$14243$1POZIn
     g$6691$13948$1POZIn)
   (g$&i/o-write-rcd$13957$1POZIn
     g$&i/o-write-rcd$14244$1POZIn
     g$6692$13950$1POZIn)
   (g$6704$13959$1POZIn
     g$6704$14245$1POZIn
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6665$13928$1POZIn
       'g$6707$1POZIn
       '#f
       '#f
       '#((immutable position))))
   (g$6706$13960$1POZIn g$6706$14246$1POZIn '#f)
   (g$6705$13961$1POZIn
     g$6705$14247$1POZIn
     (make-record-constructor-descriptor
       g$6704$13959$1POZIn
       g$6666$13930$1POZIn
       g$6706$13960$1POZIn))
   (g$p?$13964$1POZIn
     g$p?$14248$1POZIn
     (record-predicate g$6704$13959$1POZIn))
   (g$make-i/o-invalid-position-error$13965$1POZIn
     g$make-i/o-invalid-position-error$14249$1POZIn
     (record-constructor g$6705$13961$1POZIn))
   (g$i/o-error-position$13966$1POZIn
     g$i/o-error-position$14250$1POZIn
     (record-accessor g$6704$13959$1POZIn '0))
   (g$i/o-invalid-position-error?$13967$1POZIn
     g$i/o-invalid-position-error?$14251$1POZIn
     (condition-predicate g$6704$13959$1POZIn))
   (g$i/o-error-position$13968$1POZIn
     g$i/o-error-position$14252$1POZIn
     (condition-accessor
       g$6704$13959$1POZIn
       g$i/o-error-position$13966$1POZIn))
   (g$&i/o-invalid-position-rtd$13969$1POZIn
     g$&i/o-invalid-position-rtd$14253$1POZIn
     g$6704$13959$1POZIn)
   (g$&i/o-invalid-position-rcd$13970$1POZIn
     g$&i/o-invalid-position-rcd$14254$1POZIn
     g$6705$13961$1POZIn)
   (g$6719$13972$1POZIn
     g$6719$14255$1POZIn
     (make-record-type-descriptor
       '&i/o-filename
       g$6665$13928$1POZIn
       'g$6722$1POZIn
       '#f
       '#f
       '#((immutable filename))))
   (g$6721$13973$1POZIn g$6721$14256$1POZIn '#f)
   (g$6720$13974$1POZIn
     g$6720$14257$1POZIn
     (make-record-constructor-descriptor
       g$6719$13972$1POZIn
       g$6666$13930$1POZIn
       g$6721$13973$1POZIn))
   (g$p?$13977$1POZIn
     g$p?$14258$1POZIn
     (record-predicate g$6719$13972$1POZIn))
   (g$make-i/o-filename-error$13978$1POZIn
     g$make-i/o-filename-error$14259$1POZIn
     (record-constructor g$6720$13974$1POZIn))
   (g$i/o-error-filename$13979$1POZIn
     g$i/o-error-filename$14260$1POZIn
     (record-accessor g$6719$13972$1POZIn '0))
   (g$i/o-filename-error?$13980$1POZIn
     g$i/o-filename-error?$14261$1POZIn
     (condition-predicate g$6719$13972$1POZIn))
   (g$i/o-error-filename$13981$1POZIn
     g$i/o-error-filename$14262$1POZIn
     (condition-accessor
       g$6719$13972$1POZIn
       g$i/o-error-filename$13979$1POZIn))
   (g$&i/o-filename-rtd$13982$1POZIn
     g$&i/o-filename-rtd$14263$1POZIn
     g$6719$13972$1POZIn)
   (g$&i/o-filename-rcd$13983$1POZIn
     g$&i/o-filename-rcd$14264$1POZIn
     g$6720$13974$1POZIn)
   (g$6734$13984$1POZIn
     g$6734$14265$1POZIn
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6719$13972$1POZIn
       'g$6737$1POZIn
       '#f
       '#f
       '#()))
   (g$6736$13985$1POZIn g$6736$14266$1POZIn '#f)
   (g$6735$13986$1POZIn
     g$6735$14267$1POZIn
     (make-record-constructor-descriptor
       g$6734$13984$1POZIn
       g$6720$13974$1POZIn
       g$6736$13985$1POZIn))
   (g$p?$13989$1POZIn
     g$p?$14268$1POZIn
     (record-predicate g$6734$13984$1POZIn))
   (g$make-i/o-file-protection-error$13990$1POZIn
     g$make-i/o-file-protection-error$14269$1POZIn
     (record-constructor g$6735$13986$1POZIn))
   (g$i/o-file-protection-error?$13991$1POZIn
     g$i/o-file-protection-error?$14270$1POZIn
     (condition-predicate g$6734$13984$1POZIn))
   (g$&i/o-file-protection-rtd$13992$1POZIn
     g$&i/o-file-protection-rtd$14271$1POZIn
     g$6734$13984$1POZIn)
   (g$&i/o-file-protection-rcd$13993$1POZIn
     g$&i/o-file-protection-rcd$14272$1POZIn
     g$6735$13986$1POZIn)
   (g$6747$13994$1POZIn
     g$6747$14273$1POZIn
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6734$13984$1POZIn
       'g$6750$1POZIn
       '#f
       '#f
       '#()))
   (g$6749$13995$1POZIn g$6749$14274$1POZIn '#f)
   (g$6748$13996$1POZIn
     g$6748$14275$1POZIn
     (make-record-constructor-descriptor
       g$6747$13994$1POZIn
       g$6735$13986$1POZIn
       g$6749$13995$1POZIn))
   (g$p?$13999$1POZIn
     g$p?$14276$1POZIn
     (record-predicate g$6747$13994$1POZIn))
   (g$make-i/o-file-is-read-only-error$14000$1POZIn
     g$make-i/o-file-is-read-only-error$14277$1POZIn
     (record-constructor g$6748$13996$1POZIn))
   (g$i/o-file-is-read-only-error?$14001$1POZIn
     g$i/o-file-is-read-only-error?$14278$1POZIn
     (condition-predicate g$6747$13994$1POZIn))
   (g$&i/o-file-is-read-only-rtd$14002$1POZIn
     g$&i/o-file-is-read-only-rtd$14279$1POZIn
     g$6747$13994$1POZIn)
   (g$&i/o-file-is-read-only-rcd$14003$1POZIn
     g$&i/o-file-is-read-only-rcd$14280$1POZIn
     g$6748$13996$1POZIn)
   (g$6760$14004$1POZIn
     g$6760$14281$1POZIn
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6719$13972$1POZIn
       'g$6763$1POZIn
       '#f
       '#f
       '#()))
   (g$6762$14005$1POZIn g$6762$14282$1POZIn '#f)
   (g$6761$14006$1POZIn
     g$6761$14283$1POZIn
     (make-record-constructor-descriptor
       g$6760$14004$1POZIn
       g$6720$13974$1POZIn
       g$6762$14005$1POZIn))
   (g$p?$14009$1POZIn
     g$p?$14284$1POZIn
     (record-predicate g$6760$14004$1POZIn))
   (g$make-i/o-file-already-exists-error$14010$1POZIn
     g$make-i/o-file-already-exists-error$14285$1POZIn
     (record-constructor g$6761$14006$1POZIn))
   (g$i/o-file-already-exists-error?$14011$1POZIn
     g$i/o-file-already-exists-error?$14286$1POZIn
     (condition-predicate g$6760$14004$1POZIn))
   (g$&i/o-file-already-exists-rtd$14012$1POZIn
     g$&i/o-file-already-exists-rtd$14287$1POZIn
     g$6760$14004$1POZIn)
   (g$&i/o-file-already-exists-rcd$14013$1POZIn
     g$&i/o-file-already-exists-rcd$14288$1POZIn
     g$6761$14006$1POZIn)
   (g$6773$14014$1POZIn
     g$6773$14289$1POZIn
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6719$13972$1POZIn
       'g$6776$1POZIn
       '#f
       '#f
       '#()))
   (g$6775$14015$1POZIn g$6775$14290$1POZIn '#f)
   (g$6774$14016$1POZIn
     g$6774$14291$1POZIn
     (make-record-constructor-descriptor
       g$6773$14014$1POZIn
       g$6720$13974$1POZIn
       g$6775$14015$1POZIn))
   (g$p?$14019$1POZIn
     g$p?$14292$1POZIn
     (record-predicate g$6773$14014$1POZIn))
   (g$make-i/o-file-does-not-exist-error$14020$1POZIn
     g$make-i/o-file-does-not-exist-error$14293$1POZIn
     (record-constructor g$6774$14016$1POZIn))
   (g$i/o-file-does-not-exist-error?$14021$1POZIn
     g$i/o-file-does-not-exist-error?$14294$1POZIn
     (condition-predicate g$6773$14014$1POZIn))
   (g$&i/o-file-does-not-exist-rtd$14022$1POZIn
     g$&i/o-file-does-not-exist-rtd$14295$1POZIn
     g$6773$14014$1POZIn)
   (g$&i/o-file-does-not-exist-rcd$14023$1POZIn
     g$&i/o-file-does-not-exist-rcd$14296$1POZIn
     g$6774$14016$1POZIn)
   (g$6786$14025$1POZIn
     g$6786$14297$1POZIn
     (make-record-type-descriptor
       '&i/o-port
       g$6665$13928$1POZIn
       'g$6789$1POZIn
       '#f
       '#f
       '#((immutable port))))
   (g$6788$14026$1POZIn g$6788$14298$1POZIn '#f)
   (g$6787$14027$1POZIn
     g$6787$14299$1POZIn
     (make-record-constructor-descriptor
       g$6786$14025$1POZIn
       g$6666$13930$1POZIn
       g$6788$14026$1POZIn))
   (g$p?$14030$1POZIn
     g$p?$14300$1POZIn
     (record-predicate g$6786$14025$1POZIn))
   (g$make-i/o-port-error$14031$1POZIn
     g$make-i/o-port-error$14301$1POZIn
     (record-constructor g$6787$14027$1POZIn))
   (g$i/o-error-port$14032$1POZIn
     g$i/o-error-port$14302$1POZIn
     (record-accessor g$6786$14025$1POZIn '0))
   (g$i/o-port-error?$14033$1POZIn
     g$i/o-port-error?$14303$1POZIn
     (condition-predicate g$6786$14025$1POZIn))
   (g$i/o-error-port$14034$1POZIn
     g$i/o-error-port$14304$1POZIn
     (condition-accessor
       g$6786$14025$1POZIn
       g$i/o-error-port$14032$1POZIn))
   (g$&i/o-port-rtd$14035$1POZIn
     g$&i/o-port-rtd$14305$1POZIn
     g$6786$14025$1POZIn)
   (g$&i/o-port-rcd$14036$1POZIn
     g$&i/o-port-rcd$14306$1POZIn
     g$6787$14027$1POZIn)
   (g$6801$14037$1POZIn
     g$6801$14307$1POZIn
     (make-record-type-descriptor
       '&i/o-decoding
       g$6786$14025$1POZIn
       'g$6804$1POZIn
       '#f
       '#f
       '#()))
   (g$6803$14038$1POZIn g$6803$14308$1POZIn '#f)
   (g$6802$14039$1POZIn
     g$6802$14309$1POZIn
     (make-record-constructor-descriptor
       g$6801$14037$1POZIn
       g$6787$14027$1POZIn
       g$6803$14038$1POZIn))
   (g$p?$14042$1POZIn
     g$p?$14310$1POZIn
     (record-predicate g$6801$14037$1POZIn))
   (g$make-i/o-decoding-error$14043$1POZIn
     g$make-i/o-decoding-error$14311$1POZIn
     (record-constructor g$6802$14039$1POZIn))
   (g$i/o-decoding-error?$14044$1POZIn
     g$i/o-decoding-error?$14312$1POZIn
     (condition-predicate g$6801$14037$1POZIn))
   (g$&i/o-decoding-rtd$14045$1POZIn
     g$&i/o-decoding-rtd$14313$1POZIn
     g$6801$14037$1POZIn)
   (g$&i/o-decoding-rcd$14046$1POZIn
     g$&i/o-decoding-rcd$14314$1POZIn
     g$6802$14039$1POZIn)
   (g$6814$14048$1POZIn
     g$6814$14315$1POZIn
     (make-record-type-descriptor
       '&i/o-encoding
       g$6786$14025$1POZIn
       'g$6817$1POZIn
       '#f
       '#f
       '#((immutable char))))
   (g$6816$14049$1POZIn g$6816$14316$1POZIn '#f)
   (g$6815$14050$1POZIn
     g$6815$14317$1POZIn
     (make-record-constructor-descriptor
       g$6814$14048$1POZIn
       g$6787$14027$1POZIn
       g$6816$14049$1POZIn))
   (g$p?$14053$1POZIn
     g$p?$14318$1POZIn
     (record-predicate g$6814$14048$1POZIn))
   (g$make-i/o-encoding-error$14054$1POZIn
     g$make-i/o-encoding-error$14319$1POZIn
     (record-constructor g$6815$14050$1POZIn))
   (g$i/o-encoding-error-char$14055$1POZIn
     g$i/o-encoding-error-char$14320$1POZIn
     (record-accessor g$6814$14048$1POZIn '0))
   (g$i/o-encoding-error?$14056$1POZIn
     g$i/o-encoding-error?$14321$1POZIn
     (condition-predicate g$6814$14048$1POZIn))
   (g$i/o-encoding-error-char$14057$1POZIn
     g$i/o-encoding-error-char$14322$1POZIn
     (condition-accessor
       g$6814$14048$1POZIn
       g$i/o-encoding-error-char$14055$1POZIn))
   (g$&i/o-encoding-rtd$14058$1POZIn
     g$&i/o-encoding-rtd$14323$1POZIn
     g$6814$14048$1POZIn)
   (g$&i/o-encoding-rcd$14059$1POZIn
     g$&i/o-encoding-rcd$14324$1POZIn
     g$6815$14050$1POZIn)
   (g$6829$14060$1POZIn
     g$6829$14325$1POZIn
     (make-record-type-descriptor
       '&no-infinities
       g$6609$13882$1POZIn
       'g$6832$1POZIn
       '#f
       '#f
       '#()))
   (g$6831$14061$1POZIn g$6831$14326$1POZIn '#f)
   (g$6830$14062$1POZIn
     g$6830$14327$1POZIn
     (make-record-constructor-descriptor
       g$6829$14060$1POZIn
       g$6610$13884$1POZIn
       g$6831$14061$1POZIn))
   (g$p?$14065$1POZIn
     g$p?$14328$1POZIn
     (record-predicate g$6829$14060$1POZIn))
   (g$make-no-infinities-violation$14066$1POZIn
     g$make-no-infinities-violation$14329$1POZIn
     (record-constructor g$6830$14062$1POZIn))
   (g$no-infinities-violation?$14067$1POZIn
     g$no-infinities-violation?$14330$1POZIn
     (condition-predicate g$6829$14060$1POZIn))
   (g$&no-infinities-rtd$14068$1POZIn
     g$&no-infinities-rtd$14331$1POZIn
     g$6829$14060$1POZIn)
   (g$&no-infinities-rcd$14069$1POZIn
     g$&no-infinities-rcd$14332$1POZIn
     g$6830$14062$1POZIn)
   (g$6842$14070$1POZIn
     g$6842$14333$1POZIn
     (make-record-type-descriptor
       '&no-nans
       g$6609$13882$1POZIn
       'g$6845$1POZIn
       '#f
       '#f
       '#()))
   (g$6844$14071$1POZIn g$6844$14334$1POZIn '#f)
   (g$6843$14072$1POZIn
     g$6843$14335$1POZIn
     (make-record-constructor-descriptor
       g$6842$14070$1POZIn
       g$6610$13884$1POZIn
       g$6844$14071$1POZIn))
   (g$p?$14075$1POZIn
     g$p?$14336$1POZIn
     (record-predicate g$6842$14070$1POZIn))
   (g$make-no-nans-violation$14076$1POZIn
     g$make-no-nans-violation$14337$1POZIn
     (record-constructor g$6843$14072$1POZIn))
   (g$no-nans-violation?$14077$1POZIn
     g$no-nans-violation?$14338$1POZIn
     (condition-predicate g$6842$14070$1POZIn))
   (g$&no-nans-rtd$14078$1POZIn
     g$&no-nans-rtd$14339$1POZIn
     g$6842$14070$1POZIn)
   (g$&no-nans-rcd$14079$1POZIn
     g$&no-nans-rcd$14340$1POZIn
     g$6843$14072$1POZIn))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$14341$1POZIn
     g$append!$14347$1POZIn
     (case-lambda
       ((g$a$14342$1POZIn . g$b$14343$1POZIn)
        (if (null? g$a$14342$1POZIn)
          g$b$14343$1POZIn
          (if (null? g$b$14343$1POZIn)
            g$a$14342$1POZIn
            (begin
              '#f
              ((letrec ((g$f$14344$1POZIn
                          (case-lambda
                            ((g$a$14345$1POZIn)
                             ((case-lambda
                                ((g$n$14346$1POZIn)
                                 (if (null? g$n$14346$1POZIn)
                                   (set-cdr!
                                     g$a$14345$1POZIn
                                     g$b$14343$1POZIn)
                                   (g$f$14344$1POZIn
                                     g$n$14346$1POZIn))))
                              (cdr g$a$14345$1POZIn))))))
                 g$f$14344$1POZIn)
               g$a$14342$1POZIn)
              g$a$14342$1POZIn)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$14348$1POZIn
     g$inexact->exact$14368$1POZIn
     g$exact$13617$1POZIn)
   (g$exact->inexact$14349$1POZIn
     g$exact->inexact$14369$1POZIn
     g$inexact$13616$1POZIn)
   (g$sign$14350$1POZIn
     g$sign$14370$1POZIn
     (case-lambda
       ((g$n$14356$1POZIn)
        (if (g$>$13621$1POZIn g$n$14356$1POZIn '0)
          '1
          (if (g$<$13619$1POZIn g$n$14356$1POZIn '0)
            '-1
            (begin '#f '0))))))
   (g$quotient$14351$1POZIn
     g$quotient$14371$1POZIn
     (case-lambda
       ((g$n1$14357$1POZIn g$n2$14358$1POZIn)
        (begin
          (if (not (g$integer-valued?$13612$1POZIn g$n1$14357$1POZIn))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$14357$1POZIn)
            (void))
          (if (not (g$integer-valued?$13612$1POZIn g$n2$14358$1POZIn))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$14358$1POZIn)
            (void))
          (* (g$sign$14350$1POZIn g$n1$14357$1POZIn)
             (g$sign$14350$1POZIn g$n2$14358$1POZIn)
             (g$div$13643$1POZIn
               (g$abs$13644$1POZIn g$n1$14357$1POZIn)
               (g$abs$13644$1POZIn g$n2$14358$1POZIn)))))))
   (g$remainder$14352$1POZIn
     g$remainder$14372$1POZIn
     (case-lambda
       ((g$n1$14359$1POZIn g$n2$14360$1POZIn)
        (begin
          (if (not (g$integer-valued?$13612$1POZIn g$n1$14359$1POZIn))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$14359$1POZIn)
            (void))
          (if (not (g$integer-valued?$13612$1POZIn g$n2$14360$1POZIn))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$14360$1POZIn)
            (void))
          (* (g$sign$14350$1POZIn g$n1$14359$1POZIn)
             (g$mod$12672$1POZIn
               (g$abs$13644$1POZIn g$n1$14359$1POZIn)
               (g$abs$13644$1POZIn g$n2$14360$1POZIn)))))))
   (g$modulo$14353$1POZIn
     g$modulo$14373$1POZIn
     (case-lambda
       ((g$n1$14361$1POZIn g$n2$14362$1POZIn)
        (begin
          (if (not (g$integer-valued?$13612$1POZIn g$n1$14361$1POZIn))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$14361$1POZIn)
            (void))
          (if (not (g$integer-valued?$13612$1POZIn g$n2$14362$1POZIn))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$14362$1POZIn)
            (void))
          (* (g$sign$14350$1POZIn g$n2$14362$1POZIn)
             (g$mod$12672$1POZIn
               (* (g$sign$14350$1POZIn g$n2$14362$1POZIn)
                  g$n1$14361$1POZIn)
               (g$abs$13644$1POZIn g$n2$14362$1POZIn)))))))
   (g$make-promise$14354$1POZIn
     g$make-promise$14374$1POZIn
     (case-lambda
       ((g$proc$14363$1POZIn)
        ((case-lambda
           ((g$result-ready?$14364$1POZIn g$result$14365$1POZIn)
            (case-lambda
              (()
               (if g$result-ready?$14364$1POZIn
                 g$result$14365$1POZIn
                 ((case-lambda
                    ((g$x$14366$1POZIn)
                     (if g$result-ready?$14364$1POZIn
                       g$result$14365$1POZIn
                       (begin
                         (set! g$result-ready?$14364$1POZIn '#t)
                         (set! g$result$14365$1POZIn g$x$14366$1POZIn)
                         g$result$14365$1POZIn))))
                  (g$proc$14363$1POZIn)))))))
         '#f
         '#f))))
   (g$force$14355$1POZIn
     g$force$14375$1POZIn
     (case-lambda ((g$object$14367$1POZIn) (g$object$14367$1POZIn)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$14376$1POZIn
     g$split$14401$1POZIn
     (case-lambda
       ((g$ls$14380$1POZIn)
        ((letrec ((g$loop$14381$1POZIn
                    (case-lambda
                      ((g$rest$14382$1POZIn
                         g$left$14383$1POZIn
                         g$right$14384$1POZIn)
                       (if (null? g$rest$14382$1POZIn)
                         (cons g$left$14383$1POZIn g$right$14384$1POZIn)
                         (if (null? (cdr g$rest$14382$1POZIn))
                           (cons
                             (cons
                               (car g$rest$14382$1POZIn)
                               g$left$14383$1POZIn)
                             g$right$14384$1POZIn)
                           (begin
                             '#f
                             (g$loop$14381$1POZIn
                               (g$cddr$12686$1POZIn g$rest$14382$1POZIn)
                               (cons
                                 (car g$rest$14382$1POZIn)
                                 g$left$14383$1POZIn)
                               (cons
                                 (g$cadr$12684$1POZIn
                                   g$rest$14382$1POZIn)
                                 g$right$14384$1POZIn)))))))))
           g$loop$14381$1POZIn)
         g$ls$14380$1POZIn
         '()
         '()))))
   (g$reverse-it$14377$1POZIn
     g$reverse-it$14402$1POZIn
     (case-lambda
       ((g$head$14385$1POZIn g$tail$14386$1POZIn)
        (if (null? g$head$14385$1POZIn)
          g$tail$14386$1POZIn
          (g$reverse-it$14377$1POZIn
            (cdr g$head$14385$1POZIn)
            (cons (car g$head$14385$1POZIn) g$tail$14386$1POZIn))))))
   (g$merge$14378$1POZIn
     g$merge$14403$1POZIn
     (case-lambda
       ((g$list-1$14387$1POZIn
          g$list-2$14388$1POZIn
          g$precedes?$14389$1POZIn)
        ((letrec ((g$loop$14390$1POZIn
                    (case-lambda
                      ((g$source-1$14391$1POZIn
                         g$source-2$14392$1POZIn
                         g$so-far$14393$1POZIn)
                       (if (null? g$source-1$14391$1POZIn)
                         (g$reverse-it$14377$1POZIn
                           g$so-far$14393$1POZIn
                           g$source-2$14392$1POZIn)
                         (if (null? g$source-2$14392$1POZIn)
                           (g$reverse-it$14377$1POZIn
                             g$so-far$14393$1POZIn
                             g$source-1$14391$1POZIn)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$car-1$14394$1POZIn
                                   g$car-2$14395$1POZIn)
                                 (if (g$precedes?$14389$1POZIn
                                       g$car-2$14395$1POZIn
                                       g$car-1$14394$1POZIn)
                                   (g$loop$14390$1POZIn
                                     g$source-1$14391$1POZIn
                                     (cdr g$source-2$14392$1POZIn)
                                     (cons
                                       g$car-2$14395$1POZIn
                                       g$so-far$14393$1POZIn))
                                   (g$loop$14390$1POZIn
                                     g$source-2$14392$1POZIn
                                     (cdr g$source-1$14391$1POZIn)
                                     (cons
                                       g$car-1$14394$1POZIn
                                       g$so-far$14393$1POZIn)))))
                              (car g$source-1$14391$1POZIn)
                              (car g$source-2$14392$1POZIn)))))))))
           g$loop$14390$1POZIn)
         g$list-1$14387$1POZIn
         g$list-2$14388$1POZIn
         '()))))
   (g$list-sort$14379$1POZIn
     g$list-sort$14404$1POZIn
     (case-lambda
       ((g$precedes?$14396$1POZIn g$ls$14397$1POZIn)
        (if (null? g$ls$14397$1POZIn)
          '()
          ((letrec ((g$helper$14398$1POZIn
                      (case-lambda
                        ((g$piece$14399$1POZIn)
                         (if (null? (cdr g$piece$14399$1POZIn))
                           g$piece$14399$1POZIn
                           ((case-lambda
                              ((g$parts$14400$1POZIn)
                               (g$merge$14378$1POZIn
                                 (g$helper$14398$1POZIn
                                   (car g$parts$14400$1POZIn))
                                 (g$helper$14398$1POZIn
                                   (cdr g$parts$14400$1POZIn))
                                 g$precedes?$14396$1POZIn)))
                            (g$split$14376$1POZIn
                              g$piece$14399$1POZIn)))))))
             g$helper$14398$1POZIn)
           g$ls$14397$1POZIn))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$14443$1POZIn
     g$string-ci=?$14549$1POZIn
     (case-lambda
       ((g$a$14495$1POZIn g$b$14496$1POZIn . g$rest$14497$1POZIn)
        (begin
          (if (not (string? g$a$14495$1POZIn))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$14495$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14498$1POZIn)
               (begin
                 (if (not (string? g$x$14498$1POZIn))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$14498$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14499$1POZIn)
                     (begin
                       (set! g$a$14495$1POZIn g$x$14498$1POZIn)
                       g$r$14499$1POZIn)))
                  (g$=$13618$1POZIn
                    (string-ci-compare
                      g$a$14495$1POZIn
                      g$x$14498$1POZIn)
                    '0)))))
            (cons g$b$14496$1POZIn g$rest$14497$1POZIn))))))
   (g$string-ci<?$14444$1POZIn
     g$string-ci<?$14550$1POZIn
     (case-lambda
       ((g$a$14500$1POZIn g$b$14501$1POZIn . g$rest$14502$1POZIn)
        (begin
          (if (not (string? g$a$14500$1POZIn))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$14500$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14503$1POZIn)
               (begin
                 (if (not (string? g$x$14503$1POZIn))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$14503$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14504$1POZIn)
                     (begin
                       (set! g$a$14500$1POZIn g$x$14503$1POZIn)
                       g$r$14504$1POZIn)))
                  (g$<$13619$1POZIn
                    (string-ci-compare
                      g$a$14500$1POZIn
                      g$x$14503$1POZIn)
                    '0)))))
            (cons g$b$14501$1POZIn g$rest$14502$1POZIn))))))
   (g$string-ci>?$14445$1POZIn
     g$string-ci>?$14551$1POZIn
     (case-lambda
       ((g$a$14505$1POZIn g$b$14506$1POZIn . g$rest$14507$1POZIn)
        (begin
          (if (not (string? g$a$14505$1POZIn))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$14505$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14508$1POZIn)
               (begin
                 (if (not (string? g$x$14508$1POZIn))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$14508$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14509$1POZIn)
                     (begin
                       (set! g$a$14505$1POZIn g$x$14508$1POZIn)
                       g$r$14509$1POZIn)))
                  (g$>$13621$1POZIn
                    (string-ci-compare
                      g$a$14505$1POZIn
                      g$x$14508$1POZIn)
                    '0)))))
            (cons g$b$14506$1POZIn g$rest$14507$1POZIn))))))
   (g$string-ci<=?$14446$1POZIn
     g$string-ci<=?$14552$1POZIn
     (case-lambda
       ((g$a$14510$1POZIn g$b$14511$1POZIn . g$rest$14512$1POZIn)
        (begin
          (if (not (string? g$a$14510$1POZIn))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$14510$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14513$1POZIn)
               (begin
                 (if (not (string? g$x$14513$1POZIn))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$14513$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14514$1POZIn)
                     (begin
                       (set! g$a$14510$1POZIn g$x$14513$1POZIn)
                       g$r$14514$1POZIn)))
                  (g$<=$13620$1POZIn
                    (string-ci-compare
                      g$a$14510$1POZIn
                      g$x$14513$1POZIn)
                    '0)))))
            (cons g$b$14511$1POZIn g$rest$14512$1POZIn))))))
   (g$string-ci>=?$14447$1POZIn
     g$string-ci>=?$14553$1POZIn
     (case-lambda
       ((g$a$14515$1POZIn g$b$14516$1POZIn . g$rest$14517$1POZIn)
        (begin
          (if (not (string? g$a$14515$1POZIn))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$14515$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14518$1POZIn)
               (begin
                 (if (not (string? g$x$14518$1POZIn))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$14518$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14519$1POZIn)
                     (begin
                       (set! g$a$14515$1POZIn g$x$14518$1POZIn)
                       g$r$14519$1POZIn)))
                  (g$>=$13622$1POZIn
                    (string-ci-compare
                      g$a$14515$1POZIn
                      g$x$14518$1POZIn)
                    '0)))))
            (cons g$b$14516$1POZIn g$rest$14517$1POZIn))))))
   (g$char-ci=?$14486$1POZIn
     g$char-ci=?$14554$1POZIn
     (case-lambda
       ((g$a$14520$1POZIn g$b$14521$1POZIn . g$rest$14522$1POZIn)
        (begin
          (if (not (g$char?$12662$1POZIn g$a$14520$1POZIn))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$14520$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14523$1POZIn)
               (begin
                 (if (not (g$char?$12662$1POZIn g$x$14523$1POZIn))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$14523$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14524$1POZIn)
                     (begin
                       (set! g$a$14520$1POZIn g$x$14523$1POZIn)
                       g$r$14524$1POZIn)))
                  (g$=$13618$1POZIn
                    (char->integer (char-upcase g$a$14520$1POZIn))
                    (char->integer (char-upcase g$x$14523$1POZIn)))))))
            (cons g$b$14521$1POZIn g$rest$14522$1POZIn))))))
   (g$char-ci<?$14487$1POZIn
     g$char-ci<?$14555$1POZIn
     (case-lambda
       ((g$a$14525$1POZIn g$b$14526$1POZIn . g$rest$14527$1POZIn)
        (begin
          (if (not (g$char?$12662$1POZIn g$a$14525$1POZIn))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$14525$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14528$1POZIn)
               (begin
                 (if (not (g$char?$12662$1POZIn g$x$14528$1POZIn))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$14528$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14529$1POZIn)
                     (begin
                       (set! g$a$14525$1POZIn g$x$14528$1POZIn)
                       g$r$14529$1POZIn)))
                  (g$<$13619$1POZIn
                    (char->integer (char-upcase g$a$14525$1POZIn))
                    (char->integer (char-upcase g$x$14528$1POZIn)))))))
            (cons g$b$14526$1POZIn g$rest$14527$1POZIn))))))
   (g$char-ci>?$14488$1POZIn
     g$char-ci>?$14556$1POZIn
     (case-lambda
       ((g$a$14530$1POZIn g$b$14531$1POZIn . g$rest$14532$1POZIn)
        (begin
          (if (not (g$char?$12662$1POZIn g$a$14530$1POZIn))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$14530$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14533$1POZIn)
               (begin
                 (if (not (g$char?$12662$1POZIn g$x$14533$1POZIn))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$14533$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14534$1POZIn)
                     (begin
                       (set! g$a$14530$1POZIn g$x$14533$1POZIn)
                       g$r$14534$1POZIn)))
                  (g$>$13621$1POZIn
                    (char->integer (char-upcase g$a$14530$1POZIn))
                    (char->integer (char-upcase g$x$14533$1POZIn)))))))
            (cons g$b$14531$1POZIn g$rest$14532$1POZIn))))))
   (g$char-ci<=?$14489$1POZIn
     g$char-ci<=?$14557$1POZIn
     (case-lambda
       ((g$a$14535$1POZIn g$b$14536$1POZIn . g$rest$14537$1POZIn)
        (begin
          (if (not (g$char?$12662$1POZIn g$a$14535$1POZIn))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$14535$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14538$1POZIn)
               (begin
                 (if (not (g$char?$12662$1POZIn g$x$14538$1POZIn))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$14538$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14539$1POZIn)
                     (begin
                       (set! g$a$14535$1POZIn g$x$14538$1POZIn)
                       g$r$14539$1POZIn)))
                  (g$<=$13620$1POZIn
                    (char->integer (char-upcase g$a$14535$1POZIn))
                    (char->integer (char-upcase g$x$14538$1POZIn)))))))
            (cons g$b$14536$1POZIn g$rest$14537$1POZIn))))))
   (g$char-ci>=?$14490$1POZIn
     g$char-ci>=?$14558$1POZIn
     (case-lambda
       ((g$a$14540$1POZIn g$b$14541$1POZIn . g$rest$14542$1POZIn)
        (begin
          (if (not (g$char?$12662$1POZIn g$a$14540$1POZIn))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$14540$1POZIn)
            (void))
          (g$for-all$11831$1POZIn
            (case-lambda
              ((g$x$14543$1POZIn)
               (begin
                 (if (not (g$char?$12662$1POZIn g$x$14543$1POZIn))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$14543$1POZIn)
                   (void))
                 ((case-lambda
                    ((g$r$14544$1POZIn)
                     (begin
                       (set! g$a$14540$1POZIn g$x$14543$1POZIn)
                       g$r$14544$1POZIn)))
                  (g$>=$13622$1POZIn
                    (char->integer (char-upcase g$a$14540$1POZIn))
                    (char->integer (char-upcase g$x$14543$1POZIn)))))))
            (cons g$b$14541$1POZIn g$rest$14542$1POZIn))))))
   (g$string-normalize-nfc$14491$1POZIn
     g$string-normalize-nfc$14559$1POZIn
     (case-lambda
       ((g$s$14545$1POZIn) (string-normalize g$s$14545$1POZIn 'formc))))
   (g$string-normalize-nfd$14492$1POZIn
     g$string-normalize-nfd$14560$1POZIn
     (case-lambda
       ((g$s$14546$1POZIn) (string-normalize g$s$14546$1POZIn 'formd))))
   (g$string-normalize-nfkc$14493$1POZIn
     g$string-normalize-nfkc$14561$1POZIn
     (case-lambda
       ((g$s$14547$1POZIn)
        (string-normalize g$s$14547$1POZIn 'formkc))))
   (g$string-normalize-nfkd$14494$1POZIn
     g$string-normalize-nfkd$14562$1POZIn
     (case-lambda
       ((g$s$14548$1POZIn)
        (string-normalize g$s$14548$1POZIn 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$14563$1POZIn
     g$bignum?$14640$1POZIn
     (case-lambda
       ((g$obj$14580$1POZIn)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$14580$1POZIn))))
   (g$->bignum$14564$1POZIn
     g$->bignum$14641$1POZIn
     (case-lambda
       ((g$ei$14581$1POZIn)
        (if (g$bignum?$14563$1POZIn g$ei$14581$1POZIn)
          g$ei$14581$1POZIn
          (if (g$fixnum?$12668$1POZIn g$ei$14581$1POZIn)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$14581$1POZIn)
            (begin
              '#f
              (assertion-violation
                '#f
                '"not a exact integer"
                g$ei$14581$1POZIn)))))))
   (g$bitwise-not$14565$1POZIn
     g$bitwise-not$14642$1POZIn
     (case-lambda
       ((g$ei$14582$1POZIn)
        (g$exact$13617$1POZIn
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$14564$1POZIn g$ei$14582$1POZIn))))))
   (g$bitwise-and$14566$1POZIn
     g$bitwise-and$14643$1POZIn
     (case-lambda
       (() '-1)
       ((g$ei$14583$1POZIn) (g$->bignum$14564$1POZIn g$ei$14583$1POZIn))
       ((g$ei1$14584$1POZIn g$ei2$14585$1POZIn)
        (g$exact$13617$1POZIn
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$14564$1POZIn g$ei1$14584$1POZIn)
            (g$->bignum$14564$1POZIn g$ei2$14585$1POZIn))))
       ((g$ei1$14586$1POZIn g$ei2$14587$1POZIn . g$rest$14588$1POZIn)
        (g$fold-left$11836$1POZIn
          g$bitwise-and$14566$1POZIn
          (g$->bignum$14564$1POZIn g$ei1$14586$1POZIn)
          (cons g$ei2$14587$1POZIn g$rest$14588$1POZIn)))))
   (g$bitwise-ior$14567$1POZIn
     g$bitwise-ior$14644$1POZIn
     (case-lambda
       (() '0)
       ((g$ei$14589$1POZIn) (g$->bignum$14564$1POZIn g$ei$14589$1POZIn))
       ((g$ei1$14590$1POZIn g$ei2$14591$1POZIn)
        (g$exact$13617$1POZIn
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$14564$1POZIn g$ei1$14590$1POZIn)
            (g$->bignum$14564$1POZIn g$ei2$14591$1POZIn))))
       ((g$ei1$14592$1POZIn g$ei2$14593$1POZIn . g$rest$14594$1POZIn)
        (g$fold-left$11836$1POZIn
          g$bitwise-ior$14567$1POZIn
          (g$->bignum$14564$1POZIn g$ei1$14592$1POZIn)
          (cons g$ei2$14593$1POZIn g$rest$14594$1POZIn)))))
   (g$bitwise-xor$14568$1POZIn
     g$bitwise-xor$14645$1POZIn
     (case-lambda
       (() '0)
       ((g$ei$14595$1POZIn) (g$->bignum$14564$1POZIn g$ei$14595$1POZIn))
       ((g$ei1$14596$1POZIn g$ei2$14597$1POZIn)
        (g$exact$13617$1POZIn
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$14564$1POZIn g$ei1$14596$1POZIn)
            (g$->bignum$14564$1POZIn g$ei2$14597$1POZIn))))
       ((g$ei1$14598$1POZIn g$ei2$14599$1POZIn . g$rest$14600$1POZIn)
        (g$fold-left$11836$1POZIn
          g$bitwise-xor$14568$1POZIn
          (g$->bignum$14564$1POZIn g$ei1$14598$1POZIn)
          (cons g$ei2$14599$1POZIn g$rest$14600$1POZIn)))))
   (g$bitwise-bit-count$14569$1POZIn
     g$bitwise-bit-count$14646$1POZIn
     (case-lambda
       ((g$ei$14601$1POZIn)
        (if (g$positive?$13614$1POZIn g$ei$14601$1POZIn)
          ((letrec ((g$f$14602$1POZIn
                      (case-lambda
                        ((g$c$14603$1POZIn g$ei$14604$1POZIn)
                         (if (g$positive?$13614$1POZIn
                               g$ei$14604$1POZIn)
                           (g$f$14602$1POZIn
                             (+ g$c$14603$1POZIn
                                (g$bitwise-and$14566$1POZIn
                                  g$ei$14604$1POZIn
                                  '1))
                             (g$bitwise-arithmetic-shift-right$14578$1POZIn
                               g$ei$14604$1POZIn
                               '1))
                           g$c$14603$1POZIn)))))
             g$f$14602$1POZIn)
           '0
           (g$->bignum$14564$1POZIn g$ei$14601$1POZIn))
          (g$bitwise-not$14565$1POZIn
            (g$bitwise-bit-count$14569$1POZIn
              (g$bitwise-not$14565$1POZIn g$ei$14601$1POZIn)))))))
   (g$bitwise-length$14570$1POZIn
     g$bitwise-length$14647$1POZIn
     (case-lambda
       ((g$ei$14605$1POZIn)
        ((case-lambda
           ((g$ei$14606$1POZIn)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$14606$1POZIn
                  (g$->bignum$14564$1POZIn '0))
              (g$bitwise-length$14570$1POZIn
                (g$bitwise-not$14565$1POZIn g$ei$14606$1POZIn))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$14606$1POZIn))))
         (g$->bignum$14564$1POZIn g$ei$14605$1POZIn)))))
   (g$bitwise-first-bit-set$14571$1POZIn
     g$bitwise-first-bit-set$14648$1POZIn
     (case-lambda
       ((g$ei$14607$1POZIn)
        ((case-lambda
           ((g$ei$14608$1POZIn)
            (if (g$zero?$13613$1POZIn g$ei$14608$1POZIn)
              '-1
              ((letrec ((g$f$14609$1POZIn
                          (case-lambda
                            ((g$c$14610$1POZIn g$ei$14611$1POZIn)
                             (if (g$=$13618$1POZIn
                                   '1
                                   (g$bitwise-and$14566$1POZIn
                                     g$ei$14611$1POZIn
                                     '1))
                               g$c$14610$1POZIn
                               (g$f$14609$1POZIn
                                 (+ g$c$14610$1POZIn '1)
                                 (g$bitwise-arithmetic-shift-right$14578$1POZIn
                                   g$ei$14611$1POZIn
                                   '1)))))))
                 g$f$14609$1POZIn)
               '0
               g$ei$14608$1POZIn))))
         (g$->bignum$14564$1POZIn g$ei$14607$1POZIn)))))
   (g$bitwise-bit-set?$14572$1POZIn
     g$bitwise-bit-set?$14649$1POZIn
     (case-lambda
       ((g$ei$14612$1POZIn g$k$14613$1POZIn)
        ((case-lambda
           ((g$ei$14614$1POZIn g$k$14615$1POZIn)
            (begin
              (if (g$negative?$13615$1POZIn g$k$14615$1POZIn)
                (assertion-violation
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$14615$1POZIn)
                (void))
              (if (g$=$13618$1POZIn '-1 g$ei$14614$1POZIn)
                '#t
                (begin
                  '#f
                  (g$=$13618$1POZIn
                    '1
                    (g$bitwise-and$14566$1POZIn
                      '1
                      (g$bitwise-arithmetic-shift-right$14578$1POZIn
                        g$ei$14614$1POZIn
                        g$k$14615$1POZIn))))))))
         (g$->bignum$14564$1POZIn g$ei$14612$1POZIn)
         (g$->bignum$14564$1POZIn g$k$14613$1POZIn)))))
   (g$bitwise-if$14573$1POZIn
     g$bitwise-if$14650$1POZIn
     (case-lambda
       ((g$ei1$14616$1POZIn g$ei2$14617$1POZIn g$ei3$14618$1POZIn)
        (g$bitwise-ior$14567$1POZIn
          (g$bitwise-and$14566$1POZIn
            g$ei1$14616$1POZIn
            g$ei2$14617$1POZIn)
          (g$bitwise-and$14566$1POZIn
            (g$bitwise-not$14565$1POZIn g$ei1$14616$1POZIn)
            g$ei3$14618$1POZIn)))))
   (g$bitwise-copy-bit$14574$1POZIn
     g$bitwise-copy-bit$14651$1POZIn
     (case-lambda
       ((g$ei1$14619$1POZIn g$ei2$14620$1POZIn g$ei3$14621$1POZIn)
        (g$bitwise-if$14573$1POZIn
          (g$bitwise-arithmetic-shift-left$14577$1POZIn
            '1
            g$ei2$14620$1POZIn)
          (g$bitwise-arithmetic-shift-left$14577$1POZIn
            g$ei3$14621$1POZIn
            g$ei2$14620$1POZIn)
          g$ei1$14619$1POZIn))))
   (g$bitwise-bit-field$14575$1POZIn
     g$bitwise-bit-field$14652$1POZIn
     (case-lambda
       ((g$ei1$14622$1POZIn g$ei2$14623$1POZIn g$ei3$14624$1POZIn)
        (g$bitwise-arithmetic-shift-right$14578$1POZIn
          (g$bitwise-and$14566$1POZIn
            g$ei1$14622$1POZIn
            (g$bitwise-not$14565$1POZIn
              (g$bitwise-arithmetic-shift-left$14577$1POZIn
                '-1
                g$ei3$14624$1POZIn)))
          g$ei2$14623$1POZIn))))
   (g$bitwise-copy-bit-field$14576$1POZIn
     g$bitwise-copy-bit-field$14653$1POZIn
     (case-lambda
       ((g$to$14625$1POZIn
          g$start$14626$1POZIn
          g$end$14627$1POZIn
          g$from$14628$1POZIn)
        (g$bitwise-if$14573$1POZIn
          (g$bitwise-and$14566$1POZIn
            (g$bitwise-arithmetic-shift-left$14577$1POZIn
              '-1
              g$start$14626$1POZIn)
            (g$bitwise-not$14565$1POZIn
              (g$bitwise-arithmetic-shift-left$14577$1POZIn
                '-1
                g$end$14627$1POZIn)))
          (g$bitwise-arithmetic-shift-left$14577$1POZIn
            g$from$14628$1POZIn
            g$start$14626$1POZIn)
          g$to$14625$1POZIn))))
   (g$bitwise-arithmetic-shift-left$14577$1POZIn
     g$bitwise-arithmetic-shift-left$14654$1POZIn
     (case-lambda
       ((g$ei1$14629$1POZIn g$ei2$14630$1POZIn)
        (bitwise-arithmetic-shift
          g$ei1$14629$1POZIn
          g$ei2$14630$1POZIn))))
   (g$bitwise-arithmetic-shift-right$14578$1POZIn
     g$bitwise-arithmetic-shift-right$14655$1POZIn
     (case-lambda
       ((g$ei1$14631$1POZIn g$ei2$14632$1POZIn)
        (bitwise-arithmetic-shift
          g$ei1$14631$1POZIn
          (- g$ei2$14632$1POZIn)))))
   (g$bitwise-rotate-bit-field$14579$1POZIn
     g$bitwise-rotate-bit-field$14656$1POZIn
     (case-lambda
       ((g$n$14633$1POZIn
          g$start$14634$1POZIn
          g$end$14635$1POZIn
          g$count$14636$1POZIn)
        ((case-lambda
           ((g$width$14637$1POZIn)
            (if (g$positive?$13614$1POZIn g$width$14637$1POZIn)
              ((case-lambda
                 ((g$count$14638$1POZIn g$field$14639$1POZIn)
                  (g$bitwise-copy-bit-field$14576$1POZIn
                    g$n$14633$1POZIn
                    g$start$14634$1POZIn
                    g$end$14635$1POZIn
                    (g$bitwise-ior$14567$1POZIn
                      (g$bitwise-arithmetic-shift-left$14577$1POZIn
                        g$field$14639$1POZIn
                        g$count$14638$1POZIn)
                      (g$bitwise-arithmetic-shift-right$14578$1POZIn
                        g$field$14639$1POZIn
                        (- g$width$14637$1POZIn
                           g$count$14638$1POZIn))))))
               (g$mod$12672$1POZIn
                 g$count$14636$1POZIn
                 g$width$14637$1POZIn)
               (g$bitwise-bit-field$14575$1POZIn
                 g$n$14633$1POZIn
                 g$start$14634$1POZIn
                 g$end$14635$1POZIn))
              g$n$14633$1POZIn)))
         (- g$end$14635$1POZIn g$start$14634$1POZIn))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$14657$1POZIn
     g$greatest-fixnum$16889$1POZIn
     (case-lambda (() '2147483647)))
   (g$least-fixnum$14658$1POZIn
     g$least-fixnum$16890$1POZIn
     (case-lambda (() '-2147483648)))
   (g$fx+$14764$1POZIn
     g$fx+$16891$1POZIn
     (case-lambda
       ((g$x1$15159$1POZIn g$x2$15160$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15159$1POZIn))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$15159$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15160$1POZIn))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$15160$1POZIn)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$15159$1POZIn g$x2$15160$1POZIn)
                (g$overflow-error$14767$1POZIn '#f)))))))))
   (g$fx*$14765$1POZIn
     g$fx*$16892$1POZIn
     (case-lambda
       ((g$x1$15161$1POZIn g$x2$15162$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15161$1POZIn))
            (assertion-violation 'fx* '"not a fixnum" g$x1$15161$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15162$1POZIn))
            (assertion-violation 'fx* '"not a fixnum" g$x2$15162$1POZIn)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$15161$1POZIn g$x2$15162$1POZIn)
                (g$overflow-error$14767$1POZIn '#f)))))))))
   (g$fx-$14766$1POZIn
     g$fx-$16893$1POZIn
     (case-lambda
       ((g$x1$15163$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15163$1POZIn))
            (assertion-violation 'fx- '"not a fixnum" g$x1$15163$1POZIn)
            (void))
          (if ($fx=? (g$least-fixnum$14658$1POZIn) g$x1$15163$1POZIn)
            (g$overflow-error$14767$1POZIn 'fx- g$x1$15163$1POZIn)
            (void))
          ($$fx- g$x1$15163$1POZIn)))
       ((g$x1$15164$1POZIn g$x2$15165$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15164$1POZIn))
            (assertion-violation 'fx- '"not a fixnum" g$x1$15164$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15165$1POZIn))
            (assertion-violation 'fx- '"not a fixnum" g$x2$15165$1POZIn)
            (void))
          ($try
            ($fx- g$x1$15164$1POZIn g$x2$15165$1POZIn)
            (g$overflow-error$14767$1POZIn '#f))))))
   (g$overflow-error$14767$1POZIn
     g$overflow-error$16894$1POZIn
     (case-lambda
       ((g$name$15166$1POZIn . g$irritants$15167$1POZIn)
        (raise
          (condition
            (g$make-implementation-restriction-violation$14189$1POZIn)
            (g$make-who-condition$14151$1POZIn g$name$15166$1POZIn)
            (g$make-message-condition$14091$1POZIn
              '"arithmetic overflow")
            (g$make-irritants-condition$14141$1POZIn
              g$irritants$15167$1POZIn))))))
   (g$residual-fxarithmetic-shift*$14783$1POZIn
     g$residual-fxarithmetic-shift*$16895$1POZIn
     (case-lambda
       ((g$x$15188$1POZIn g$k$15189$1POZIn)
        (if ($fx=? g$k$15189$1POZIn '0)
          g$x$15188$1POZIn
          (if ($fx<? g$k$15189$1POZIn '0)
            ($fxarithmetic-shift-right
              g$x$15188$1POZIn
              ($$fx- g$k$15189$1POZIn))
            (begin
              '#f
              ((case-lambda
                 ((g$i$15190$1POZIn)
                  (begin
                    (if ($fx>?
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$x$15188$1POZIn)
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$i$15190$1POZIn))
                      (g$overflow-error$14767$1POZIn
                        'fxarithmetic-shift
                        g$x$15188$1POZIn
                        g$k$15189$1POZIn)
                      (void))
                    g$i$15190$1POZIn)))
               ($fxarithmetic-shift-left
                 g$x$15188$1POZIn
                 g$k$15189$1POZIn))))))))
   (g$fxarithmetic-shift$14784$1POZIn
     g$fxarithmetic-shift$16896$1POZIn
     (case-lambda
       ((g$x$15191$1POZIn g$k$15192$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x$15191$1POZIn))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$15191$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$k$15192$1POZIn))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$15192$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15213$1POZIn g$k$15214$1POZIn)
                  (if ($fx=? g$k$15214$1POZIn '0)
                    g$x$15213$1POZIn
                    (if ($fx<? g$k$15214$1POZIn '0)
                      ($fxarithmetic-shift-right
                        g$x$15213$1POZIn
                        ($$fx- g$k$15214$1POZIn))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$15215$1POZIn)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$15213$1POZIn)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$15215$1POZIn))
                                (g$overflow-error$14767$1POZIn
                                  'fxarithmetic-shift
                                  g$x$15213$1POZIn
                                  g$k$15214$1POZIn)
                                (void))
                              g$i$15215$1POZIn)))
                         ($fxarithmetic-shift-left
                           g$x$15213$1POZIn
                           g$k$15214$1POZIn)))))))
               g$x$15191$1POZIn
               g$k$15192$1POZIn))))))))
   (g$residual-fxbit-count*$14800$1POZIn
     g$residual-fxbit-count*$16897$1POZIn
     (case-lambda
       ((g$x$15236$1POZIn)
        (if ($fx<=? g$x$15236$1POZIn '0)
          ($fxnot
            (g$residual-fxbit-count*$14800$1POZIn
              ($fxnot g$x$15236$1POZIn)))
          ((letrec ((g$f$15237$1POZIn
                      (case-lambda
                        ((g$count$15238$1POZIn g$x$15239$1POZIn)
                         (if ($fx<? '0 g$x$15239$1POZIn)
                           (g$f$15237$1POZIn
                             ($$fx+
                               g$count$15238$1POZIn
                               ($fxand g$x$15239$1POZIn '1))
                             ($fxarithmetic-shift-right
                               g$x$15239$1POZIn
                               '1))
                           g$count$15238$1POZIn)))))
             g$f$15237$1POZIn)
           '0
           g$x$15236$1POZIn)))))
   (g$fxbit-count$14801$1POZIn
     g$fxbit-count$16898$1POZIn
     (case-lambda
       ((g$x$15240$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x$15240$1POZIn))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$15240$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15261$1POZIn)
                  (if ($fx<=? g$x$15261$1POZIn '0)
                    ($fxnot
                      (g$residual-fxbit-count*$14800$1POZIn
                        ($fxnot g$x$15261$1POZIn)))
                    ((letrec ((g$f$15262$1POZIn
                                (case-lambda
                                  ((g$count$15263$1POZIn
                                     g$x$15264$1POZIn)
                                   (if ($fx<? '0 g$x$15264$1POZIn)
                                     (g$f$15262$1POZIn
                                       ($$fx+
                                         g$count$15263$1POZIn
                                         ($fxand g$x$15264$1POZIn '1))
                                       ($fxarithmetic-shift-right
                                         g$x$15264$1POZIn
                                         '1))
                                     g$count$15263$1POZIn)))))
                       g$f$15262$1POZIn)
                     '0
                     g$x$15261$1POZIn))))
               g$x$15240$1POZIn))))))))
   (g$residual-fxlength*$14817$1POZIn
     g$residual-fxlength*$16899$1POZIn
     (case-lambda
       ((g$x$15285$1POZIn)
        (if ($fx<? g$x$15285$1POZIn '0)
          (g$residual-fxlength*$14817$1POZIn ($fxnot g$x$15285$1POZIn))
          ((letrec ((g$f$15286$1POZIn
                      (case-lambda
                        ((g$count$15287$1POZIn g$x$15288$1POZIn)
                         (if ($fx<? '0 g$x$15288$1POZIn)
                           (g$f$15286$1POZIn
                             ($$fx+ g$count$15287$1POZIn '1)
                             ($fxarithmetic-shift-right
                               g$x$15288$1POZIn
                               '1))
                           g$count$15287$1POZIn)))))
             g$f$15286$1POZIn)
           '0
           g$x$15285$1POZIn)))))
   (g$fxlength$14818$1POZIn
     g$fxlength$16900$1POZIn
     (case-lambda
       ((g$x$15289$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x$15289$1POZIn))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$15289$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$15310$1POZIn)
                  (if ($fx<? g$x$15310$1POZIn '0)
                    (g$residual-fxlength*$14817$1POZIn
                      ($fxnot g$x$15310$1POZIn))
                    ((letrec ((g$f$15311$1POZIn
                                (case-lambda
                                  ((g$count$15312$1POZIn
                                     g$x$15313$1POZIn)
                                   (if ($fx<? '0 g$x$15313$1POZIn)
                                     (g$f$15311$1POZIn
                                       ($$fx+ g$count$15312$1POZIn '1)
                                       ($fxarithmetic-shift-right
                                         g$x$15313$1POZIn
                                         '1))
                                     g$count$15312$1POZIn)))))
                       g$f$15311$1POZIn)
                     '0
                     g$x$15310$1POZIn))))
               g$x$15289$1POZIn))))))))
   (g$fxfirst-bit-set$14819$1POZIn
     g$fxfirst-bit-set$16901$1POZIn
     (case-lambda
       ((g$x$15314$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x$15314$1POZIn))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$15314$1POZIn)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$15314$1POZIn '0)
                '-1
                ((letrec ((g$f$15315$1POZIn
                            (case-lambda
                              ((g$count$15316$1POZIn g$x$15317$1POZIn)
                               (if (not ($fx=? '0 g$x$15317$1POZIn))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$15317$1POZIn))
                                   g$count$15316$1POZIn
                                   (g$f$15315$1POZIn
                                     ($$fx+ g$count$15316$1POZIn '1)
                                     ($fxarithmetic-shift-right
                                       g$x$15317$1POZIn
                                       '1)))
                                 g$count$15316$1POZIn)))))
                   g$f$15315$1POZIn)
                 '0
                 g$x$15314$1POZIn)))))))))
   (g$fxbit-set?$14820$1POZIn
     g$fxbit-set?$16902$1POZIn
     (case-lambda
       ((g$x$15318$1POZIn g$k$15319$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x$15318$1POZIn))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$15318$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$k$15319$1POZIn))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$15319$1POZIn)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$15319$1POZIn '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$15319$1POZIn)
                  (void))
                (if ($fx>=? g$k$15319$1POZIn '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$15319$1POZIn)
                  (void))
                (if ($fx=? '0 g$x$15318$1POZIn)
                  '#f
                  ((letrec ((g$f$15320$1POZIn
                              (case-lambda
                                ((g$count$15321$1POZIn g$x$15322$1POZIn)
                                 (if (not ($fx=? '0 g$x$15322$1POZIn))
                                   (if (if ($fx=?
                                             g$count$15321$1POZIn
                                             g$k$15319$1POZIn)
                                         (begin
                                           '#f
                                           ($fx=?
                                             '1
                                             ($fxand
                                               '1
                                               g$x$15322$1POZIn)))
                                         '#f)
                                     '#t
                                     (g$f$15320$1POZIn
                                       ($$fx+ g$count$15321$1POZIn '1)
                                       ($fxarithmetic-shift-right
                                         g$x$15322$1POZIn
                                         '1)))
                                   '#f)))))
                     g$f$15320$1POZIn)
                   '0
                   g$x$15318$1POZIn))))))))))
   (g$fxnot$14821$1POZIn
     g$fxnot$16903$1POZIn
     (case-lambda
       ((g$x1$15323$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15323$1POZIn))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$15323$1POZIn)
            (void))
          ((case-lambda (() ($fxnot g$x1$15323$1POZIn))))))))
   (g$fx=?$14872$1POZIn
     g$fx=?$16904$1POZIn
     (case-lambda
       ((g$x1$15324$1POZIn g$x2$15325$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15324$1POZIn))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$15324$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15325$1POZIn))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$15325$1POZIn)
            (void))
          ($fx=? g$x1$15324$1POZIn g$x2$15325$1POZIn)))
       ((g$x1$15326$1POZIn g$x2$15327$1POZIn . g$rest$15328$1POZIn)
        ((letrec ((g$f$15329$1POZIn
                    (case-lambda
                      ((g$a$15330$1POZIn g$b$15331$1POZIn)
                       (if (null? g$b$15331$1POZIn)
                         '#t
                         (if (g$fx=?$14872$1POZIn
                               g$a$15330$1POZIn
                               ($car g$b$15331$1POZIn))
                           (g$f$15329$1POZIn
                             ($car g$b$15331$1POZIn)
                             ($cdr g$b$15331$1POZIn))
                           (begin '#f '#f)))))))
           g$f$15329$1POZIn)
         g$x1$15326$1POZIn
         (cons g$x2$15327$1POZIn g$rest$15328$1POZIn)))))
   (g$fx<?$14873$1POZIn
     g$fx<?$16905$1POZIn
     (case-lambda
       ((g$x1$15332$1POZIn g$x2$15333$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15332$1POZIn))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$15332$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15333$1POZIn))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$15333$1POZIn)
            (void))
          ($fx<? g$x1$15332$1POZIn g$x2$15333$1POZIn)))
       ((g$x1$15334$1POZIn g$x2$15335$1POZIn . g$rest$15336$1POZIn)
        ((letrec ((g$f$15337$1POZIn
                    (case-lambda
                      ((g$a$15338$1POZIn g$b$15339$1POZIn)
                       (if (null? g$b$15339$1POZIn)
                         '#t
                         (if (g$fx<?$14873$1POZIn
                               g$a$15338$1POZIn
                               ($car g$b$15339$1POZIn))
                           (g$f$15337$1POZIn
                             ($car g$b$15339$1POZIn)
                             ($cdr g$b$15339$1POZIn))
                           (begin '#f '#f)))))))
           g$f$15337$1POZIn)
         g$x1$15334$1POZIn
         (cons g$x2$15335$1POZIn g$rest$15336$1POZIn)))))
   (g$fx<=?$14874$1POZIn
     g$fx<=?$16906$1POZIn
     (case-lambda
       ((g$x1$15340$1POZIn g$x2$15341$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15340$1POZIn))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$15340$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15341$1POZIn))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$15341$1POZIn)
            (void))
          ($fx<=? g$x1$15340$1POZIn g$x2$15341$1POZIn)))
       ((g$x1$15342$1POZIn g$x2$15343$1POZIn . g$rest$15344$1POZIn)
        ((letrec ((g$f$15345$1POZIn
                    (case-lambda
                      ((g$a$15346$1POZIn g$b$15347$1POZIn)
                       (if (null? g$b$15347$1POZIn)
                         '#t
                         (if (g$fx<=?$14874$1POZIn
                               g$a$15346$1POZIn
                               ($car g$b$15347$1POZIn))
                           (g$f$15345$1POZIn
                             ($car g$b$15347$1POZIn)
                             ($cdr g$b$15347$1POZIn))
                           (begin '#f '#f)))))))
           g$f$15345$1POZIn)
         g$x1$15342$1POZIn
         (cons g$x2$15343$1POZIn g$rest$15344$1POZIn)))))
   (g$fx>?$14875$1POZIn
     g$fx>?$16907$1POZIn
     (case-lambda
       ((g$x1$15348$1POZIn g$x2$15349$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15348$1POZIn))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$15348$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15349$1POZIn))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$15349$1POZIn)
            (void))
          ($fx>? g$x1$15348$1POZIn g$x2$15349$1POZIn)))
       ((g$x1$15350$1POZIn g$x2$15351$1POZIn . g$rest$15352$1POZIn)
        ((letrec ((g$f$15353$1POZIn
                    (case-lambda
                      ((g$a$15354$1POZIn g$b$15355$1POZIn)
                       (if (null? g$b$15355$1POZIn)
                         '#t
                         (if (g$fx>?$14875$1POZIn
                               g$a$15354$1POZIn
                               ($car g$b$15355$1POZIn))
                           (g$f$15353$1POZIn
                             ($car g$b$15355$1POZIn)
                             ($cdr g$b$15355$1POZIn))
                           (begin '#f '#f)))))))
           g$f$15353$1POZIn)
         g$x1$15350$1POZIn
         (cons g$x2$15351$1POZIn g$rest$15352$1POZIn)))))
   (g$fx>=?$14876$1POZIn
     g$fx>=?$16908$1POZIn
     (case-lambda
       ((g$x1$15356$1POZIn g$x2$15357$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15356$1POZIn))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$15356$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15357$1POZIn))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$15357$1POZIn)
            (void))
          ($fx>=? g$x1$15356$1POZIn g$x2$15357$1POZIn)))
       ((g$x1$15358$1POZIn g$x2$15359$1POZIn . g$rest$15360$1POZIn)
        ((letrec ((g$f$15361$1POZIn
                    (case-lambda
                      ((g$a$15362$1POZIn g$b$15363$1POZIn)
                       (if (null? g$b$15363$1POZIn)
                         '#t
                         (if (g$fx>=?$14876$1POZIn
                               g$a$15362$1POZIn
                               ($car g$b$15363$1POZIn))
                           (g$f$15361$1POZIn
                             ($car g$b$15363$1POZIn)
                             ($cdr g$b$15363$1POZIn))
                           (begin '#f '#f)))))))
           g$f$15361$1POZIn)
         g$x1$15358$1POZIn
         (cons g$x2$15359$1POZIn g$rest$15360$1POZIn)))))
   (g$fxand$14924$1POZIn
     g$fxand$16909$1POZIn
     (case-lambda
       (() '-1)
       ((g$x1$15364$1POZIn g$x2$15365$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15364$1POZIn))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$15364$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15365$1POZIn))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$15365$1POZIn)
            (void))
          ($fxand g$x1$15364$1POZIn g$x2$15365$1POZIn)))
       (g$args$15366$1POZIn
        (g$fold-left$11836$1POZIn
          g$fxand$14924$1POZIn
          (g$fxand$14924$1POZIn)
          g$args$15366$1POZIn))))
   (g$fxior$14925$1POZIn
     g$fxior$16910$1POZIn
     (case-lambda
       (() '0)
       ((g$x1$15367$1POZIn g$x2$15368$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15367$1POZIn))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$15367$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15368$1POZIn))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$15368$1POZIn)
            (void))
          ($fxior g$x1$15367$1POZIn g$x2$15368$1POZIn)))
       (g$args$15369$1POZIn
        (g$fold-left$11836$1POZIn
          g$fxior$14925$1POZIn
          (g$fxior$14925$1POZIn)
          g$args$15369$1POZIn))))
   (g$fxxor$14926$1POZIn
     g$fxxor$16911$1POZIn
     (case-lambda
       (() '0)
       ((g$x1$15370$1POZIn g$x2$15371$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15370$1POZIn))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$15370$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15371$1POZIn))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$15371$1POZIn)
            (void))
          ($fxxor g$x1$15370$1POZIn g$x2$15371$1POZIn)))
       (g$args$15372$1POZIn
        (g$fold-left$11836$1POZIn
          g$fxxor$14926$1POZIn
          (g$fxxor$14926$1POZIn)
          g$args$15372$1POZIn))))
   (g$residual-fxdiv*$14942$1POZIn
     g$residual-fxdiv*$16912$1POZIn
     (case-lambda
       ((g$x1$15393$1POZIn g$x2$15394$1POZIn)
        (begin
          (if ($fx=? '0 g$x2$15394$1POZIn)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$15393$1POZIn
              g$x2$15394$1POZIn)
            (void))
          (if (if ($fx=? '-1 g$x2$15394$1POZIn)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$14658$1POZIn)
                    g$x1$15393$1POZIn))
                '#f)
            (g$overflow-error$14767$1POZIn
              'fxdiv
              g$x1$15393$1POZIn
              g$x2$15394$1POZIn)
            (void))
          (if ($fx=? '0 g$x1$15393$1POZIn)
            '0
            (if ($fx<? '0 g$x1$15393$1POZIn)
              ((case-lambda
                 ((g$x1$15415$1POZIn g$x2$15416$1POZIn)
                  ($fxdiv0 g$x1$15415$1POZIn g$x2$15416$1POZIn)))
               g$x1$15393$1POZIn
               g$x2$15394$1POZIn)
              (if ($fx<? '0 g$x2$15394$1POZIn)
                ((case-lambda
                   ((g$x1$15437$1POZIn g$x2$15438$1POZIn)
                    ($fxdiv0 g$x1$15437$1POZIn g$x2$15438$1POZIn)))
                 ($$fx- g$x1$15393$1POZIn ($$fx- g$x2$15394$1POZIn '1))
                 g$x2$15394$1POZIn)
                (begin
                  '#f
                  ((case-lambda
                     ((g$x1$15459$1POZIn g$x2$15460$1POZIn)
                      ($fxdiv0 g$x1$15459$1POZIn g$x2$15460$1POZIn)))
                   ($$fx+
                     g$x1$15393$1POZIn
                     ($$fx+ g$x2$15394$1POZIn '1))
                   g$x2$15394$1POZIn)))))))))
   (g$fxdiv$14943$1POZIn
     g$fxdiv$16913$1POZIn
     (case-lambda
       ((g$x1$15461$1POZIn g$x2$15462$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15461$1POZIn))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$15461$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15462$1POZIn))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$15462$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15483$1POZIn g$x2$15484$1POZIn)
                  (begin
                    (if ($fx=? '0 g$x2$15484$1POZIn)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$15483$1POZIn
                        g$x2$15484$1POZIn)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15484$1POZIn)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$14658$1POZIn)
                              g$x1$15483$1POZIn))
                          '#f)
                      (g$overflow-error$14767$1POZIn
                        'fxdiv
                        g$x1$15483$1POZIn
                        g$x2$15484$1POZIn)
                      (void))
                    (if ($fx=? '0 g$x1$15483$1POZIn)
                      '0
                      (if ($fx<? '0 g$x1$15483$1POZIn)
                        ((case-lambda
                           ((g$x1$15505$1POZIn g$x2$15506$1POZIn)
                            ($fxdiv0
                              g$x1$15505$1POZIn
                              g$x2$15506$1POZIn)))
                         g$x1$15483$1POZIn
                         g$x2$15484$1POZIn)
                        (if ($fx<? '0 g$x2$15484$1POZIn)
                          ((case-lambda
                             ((g$x1$15527$1POZIn g$x2$15528$1POZIn)
                              ($fxdiv0
                                g$x1$15527$1POZIn
                                g$x2$15528$1POZIn)))
                           ($$fx-
                             g$x1$15483$1POZIn
                             ($$fx- g$x2$15484$1POZIn '1))
                           g$x2$15484$1POZIn)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$x1$15549$1POZIn g$x2$15550$1POZIn)
                                ($fxdiv0
                                  g$x1$15549$1POZIn
                                  g$x2$15550$1POZIn)))
                             ($$fx+
                               g$x1$15483$1POZIn
                               ($$fx+ g$x2$15484$1POZIn '1))
                             g$x2$15484$1POZIn))))))))
               g$x1$15461$1POZIn
               g$x2$15462$1POZIn))))))))
   (g$residual-fxmod*$14959$1POZIn
     g$residual-fxmod*$16914$1POZIn
     (case-lambda
       ((g$x1$15571$1POZIn g$x2$15572$1POZIn)
        ($$fx-
          g$x1$15571$1POZIn
          ($$fx*
            ((case-lambda
               ((g$x1$15593$1POZIn g$x2$15594$1POZIn)
                (begin
                  (if ($fx=? '0 g$x2$15594$1POZIn)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$15593$1POZIn
                      g$x2$15594$1POZIn)
                    (void))
                  (if (if ($fx=? '-1 g$x2$15594$1POZIn)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$14658$1POZIn)
                            g$x1$15593$1POZIn))
                        '#f)
                    (g$overflow-error$14767$1POZIn
                      'fxdiv
                      g$x1$15593$1POZIn
                      g$x2$15594$1POZIn)
                    (void))
                  (if ($fx=? '0 g$x1$15593$1POZIn)
                    '0
                    (if ($fx<? '0 g$x1$15593$1POZIn)
                      ((case-lambda
                         ((g$x1$15615$1POZIn g$x2$15616$1POZIn)
                          ($fxdiv0
                            g$x1$15615$1POZIn
                            g$x2$15616$1POZIn)))
                       g$x1$15593$1POZIn
                       g$x2$15594$1POZIn)
                      (if ($fx<? '0 g$x2$15594$1POZIn)
                        ((case-lambda
                           ((g$x1$15637$1POZIn g$x2$15638$1POZIn)
                            ($fxdiv0
                              g$x1$15637$1POZIn
                              g$x2$15638$1POZIn)))
                         ($$fx-
                           g$x1$15593$1POZIn
                           ($$fx- g$x2$15594$1POZIn '1))
                         g$x2$15594$1POZIn)
                        (begin
                          '#f
                          ((case-lambda
                             ((g$x1$15659$1POZIn g$x2$15660$1POZIn)
                              ($fxdiv0
                                g$x1$15659$1POZIn
                                g$x2$15660$1POZIn)))
                           ($$fx+
                             g$x1$15593$1POZIn
                             ($$fx+ g$x2$15594$1POZIn '1))
                           g$x2$15594$1POZIn))))))))
             g$x1$15571$1POZIn
             g$x2$15572$1POZIn)
            g$x2$15572$1POZIn)))))
   (g$fxmod$14960$1POZIn
     g$fxmod$16915$1POZIn
     (case-lambda
       ((g$x1$15661$1POZIn g$x2$15662$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15661$1POZIn))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$15661$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15662$1POZIn))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$15662$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15683$1POZIn g$x2$15684$1POZIn)
                  ($$fx-
                    g$x1$15683$1POZIn
                    ($$fx*
                      ((case-lambda
                         ((g$x1$15705$1POZIn g$x2$15706$1POZIn)
                          (begin
                            (if ($fx=? '0 g$x2$15706$1POZIn)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$15705$1POZIn
                                g$x2$15706$1POZIn)
                              (void))
                            (if (if ($fx=? '-1 g$x2$15706$1POZIn)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$14658$1POZIn)
                                      g$x1$15705$1POZIn))
                                  '#f)
                              (g$overflow-error$14767$1POZIn
                                'fxdiv
                                g$x1$15705$1POZIn
                                g$x2$15706$1POZIn)
                              (void))
                            (if ($fx=? '0 g$x1$15705$1POZIn)
                              '0
                              (if ($fx<? '0 g$x1$15705$1POZIn)
                                ((case-lambda
                                   ((g$x1$15727$1POZIn
                                      g$x2$15728$1POZIn)
                                    ($fxdiv0
                                      g$x1$15727$1POZIn
                                      g$x2$15728$1POZIn)))
                                 g$x1$15705$1POZIn
                                 g$x2$15706$1POZIn)
                                (if ($fx<? '0 g$x2$15706$1POZIn)
                                  ((case-lambda
                                     ((g$x1$15749$1POZIn
                                        g$x2$15750$1POZIn)
                                      ($fxdiv0
                                        g$x1$15749$1POZIn
                                        g$x2$15750$1POZIn)))
                                   ($$fx-
                                     g$x1$15705$1POZIn
                                     ($$fx- g$x2$15706$1POZIn '1))
                                   g$x2$15706$1POZIn)
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$x1$15771$1POZIn
                                          g$x2$15772$1POZIn)
                                        ($fxdiv0
                                          g$x1$15771$1POZIn
                                          g$x2$15772$1POZIn)))
                                     ($$fx+
                                       g$x1$15705$1POZIn
                                       ($$fx+ g$x2$15706$1POZIn '1))
                                     g$x2$15706$1POZIn))))))))
                       g$x1$15683$1POZIn
                       g$x2$15684$1POZIn)
                      g$x2$15684$1POZIn))))
               g$x1$15661$1POZIn
               g$x2$15662$1POZIn))))))))
   (g$fxmod0$14961$1POZIn
     g$fxmod0$16916$1POZIn
     (case-lambda
       ((g$x1$15773$1POZIn g$x2$15774$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15773$1POZIn))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$15773$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15774$1POZIn))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$15774$1POZIn)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$15774$1POZIn)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$15773$1POZIn
                    g$x2$15774$1POZIn)
                  (void))
                (if (if ($fx=? '-1 g$x2$15774$1POZIn)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$14658$1POZIn)
                          g$x1$15773$1POZIn))
                      '#f)
                  (g$overflow-error$14767$1POZIn
                    'fxmod0
                    g$x1$15773$1POZIn
                    g$x2$15774$1POZIn)
                  (void))
                ($fxmod0 g$x1$15773$1POZIn g$x2$15774$1POZIn)))))))))
   (g$fxdiv-and-mod$14962$1POZIn
     g$fxdiv-and-mod$16917$1POZIn
     (case-lambda
       ((g$x1$15775$1POZIn g$x2$15776$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15775$1POZIn))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$15775$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15776$1POZIn))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$15776$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15777$1POZIn)
                  (values
                    g$d$15777$1POZIn
                    ($$fx-
                      g$x1$15775$1POZIn
                      ($$fx* g$d$15777$1POZIn g$x2$15776$1POZIn)))))
               ((case-lambda
                  ((g$x1$15798$1POZIn g$x2$15799$1POZIn)
                   (begin
                     (if ($fx=? '0 g$x2$15799$1POZIn)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$15798$1POZIn
                         g$x2$15799$1POZIn)
                       (void))
                     (if (if ($fx=? '-1 g$x2$15799$1POZIn)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$14658$1POZIn)
                               g$x1$15798$1POZIn))
                           '#f)
                       (g$overflow-error$14767$1POZIn
                         'fxdiv
                         g$x1$15798$1POZIn
                         g$x2$15799$1POZIn)
                       (void))
                     (if ($fx=? '0 g$x1$15798$1POZIn)
                       '0
                       (if ($fx<? '0 g$x1$15798$1POZIn)
                         ((case-lambda
                            ((g$x1$15820$1POZIn g$x2$15821$1POZIn)
                             ($fxdiv0
                               g$x1$15820$1POZIn
                               g$x2$15821$1POZIn)))
                          g$x1$15798$1POZIn
                          g$x2$15799$1POZIn)
                         (if ($fx<? '0 g$x2$15799$1POZIn)
                           ((case-lambda
                              ((g$x1$15842$1POZIn g$x2$15843$1POZIn)
                               ($fxdiv0
                                 g$x1$15842$1POZIn
                                 g$x2$15843$1POZIn)))
                            ($$fx-
                              g$x1$15798$1POZIn
                              ($$fx- g$x2$15799$1POZIn '1))
                            g$x2$15799$1POZIn)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x1$15864$1POZIn g$x2$15865$1POZIn)
                                 ($fxdiv0
                                   g$x1$15864$1POZIn
                                   g$x2$15865$1POZIn)))
                              ($$fx+
                                g$x1$15798$1POZIn
                                ($$fx+ g$x2$15799$1POZIn '1))
                              g$x2$15799$1POZIn))))))))
                g$x1$15775$1POZIn
                g$x2$15776$1POZIn)))))))))
   (g$residual-fxdiv0*$14978$1POZIn
     g$residual-fxdiv0*$16918$1POZIn
     (case-lambda
       ((g$x1$15886$1POZIn g$x2$15887$1POZIn)
        (begin
          (if ($fx=? '0 g$x2$15887$1POZIn)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$15886$1POZIn
              g$x2$15887$1POZIn)
            (void))
          (if (if ($fx=? '-1 g$x2$15887$1POZIn)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$14658$1POZIn)
                    g$x1$15886$1POZIn))
                '#f)
            (g$overflow-error$14767$1POZIn
              'fxdiv0
              g$x1$15886$1POZIn
              g$x2$15887$1POZIn)
            (void))
          ((case-lambda
             ((g$x1$15908$1POZIn g$x2$15909$1POZIn)
              ($fxdiv0 g$x1$15908$1POZIn g$x2$15909$1POZIn)))
           g$x1$15886$1POZIn
           g$x2$15887$1POZIn)))))
   (g$fxdiv0$14979$1POZIn
     g$fxdiv0$16919$1POZIn
     (case-lambda
       ((g$x1$15910$1POZIn g$x2$15911$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15910$1POZIn))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$15910$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15911$1POZIn))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$15911$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$15932$1POZIn g$x2$15933$1POZIn)
                  (begin
                    (if ($fx=? '0 g$x2$15933$1POZIn)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$15932$1POZIn
                        g$x2$15933$1POZIn)
                      (void))
                    (if (if ($fx=? '-1 g$x2$15933$1POZIn)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$14658$1POZIn)
                              g$x1$15932$1POZIn))
                          '#f)
                      (g$overflow-error$14767$1POZIn
                        'fxdiv0
                        g$x1$15932$1POZIn
                        g$x2$15933$1POZIn)
                      (void))
                    ((case-lambda
                       ((g$x1$15954$1POZIn g$x2$15955$1POZIn)
                        ($fxdiv0 g$x1$15954$1POZIn g$x2$15955$1POZIn)))
                     g$x1$15932$1POZIn
                     g$x2$15933$1POZIn))))
               g$x1$15910$1POZIn
               g$x2$15911$1POZIn))))))))
   (g$residual-%%fxdiv0$14995$1POZIn
     g$residual-%%fxdiv0$16920$1POZIn
     (case-lambda
       ((g$x1$15976$1POZIn g$x2$15977$1POZIn)
        ($fxdiv0 g$x1$15976$1POZIn g$x2$15977$1POZIn))))
   (g$fxdiv0-and-mod0$14996$1POZIn
     g$fxdiv0-and-mod0$16921$1POZIn
     (case-lambda
       ((g$x1$15978$1POZIn g$x2$15979$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$15978$1POZIn))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$15978$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$x2$15979$1POZIn))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$15979$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$15980$1POZIn)
                  (values
                    g$d$15980$1POZIn
                    ($$fx-
                      g$x1$15978$1POZIn
                      ($$fx* g$d$15980$1POZIn g$x2$15979$1POZIn)))))
               ((case-lambda
                  ((g$x1$16001$1POZIn g$x2$16002$1POZIn)
                   (begin
                     (if ($fx=? '0 g$x2$16002$1POZIn)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$16001$1POZIn
                         g$x2$16002$1POZIn)
                       (void))
                     (if (if ($fx=? '-1 g$x2$16002$1POZIn)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$14658$1POZIn)
                               g$x1$16001$1POZIn))
                           '#f)
                       (g$overflow-error$14767$1POZIn
                         'fxdiv0
                         g$x1$16001$1POZIn
                         g$x2$16002$1POZIn)
                       (void))
                     ((case-lambda
                        ((g$x1$16023$1POZIn g$x2$16024$1POZIn)
                         ($fxdiv0 g$x1$16023$1POZIn g$x2$16024$1POZIn)))
                      g$x1$16001$1POZIn
                      g$x2$16002$1POZIn))))
                g$x1$15978$1POZIn
                g$x2$15979$1POZIn)))))))))
   (g$residual-fxpositive?*$15012$1POZIn
     g$residual-fxpositive?*$16922$1POZIn
     (case-lambda ((g$r$16045$1POZIn) ($fx<? '0 g$r$16045$1POZIn))))
   (g$fxpositive?$15013$1POZIn
     g$fxpositive?$16923$1POZIn
     (case-lambda
       ((g$r$16046$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$r$16046$1POZIn))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$16046$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$16067$1POZIn) ($fx<? '0 g$r$16067$1POZIn)))
               g$r$16046$1POZIn))))))))
   (g$residual-fxnegative?*$15029$1POZIn
     g$residual-fxnegative?*$16924$1POZIn
     (case-lambda ((g$r$16088$1POZIn) ($fx>? '0 g$r$16088$1POZIn))))
   (g$fxnegative?$15030$1POZIn
     g$fxnegative?$16925$1POZIn
     (case-lambda
       ((g$r$16089$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$r$16089$1POZIn))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$16089$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$16110$1POZIn) ($fx>? '0 g$r$16110$1POZIn)))
               g$r$16089$1POZIn))))))))
   (g$residual-fxzero?*$15046$1POZIn
     g$residual-fxzero?*$16926$1POZIn
     (case-lambda ((g$r$16131$1POZIn) ($fx=? '0 g$r$16131$1POZIn))))
   (g$fxzero?$15047$1POZIn
     g$fxzero?$16927$1POZIn
     (case-lambda
       ((g$r$16132$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$r$16132$1POZIn))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$16132$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$16153$1POZIn) ($fx=? '0 g$r$16153$1POZIn)))
               g$r$16132$1POZIn))))))))
   (g$residual-fxeven?*$15063$1POZIn
     g$residual-fxeven?*$16928$1POZIn
     (case-lambda
       ((g$n$16174$1POZIn) ($fx=? '0 ($fxand g$n$16174$1POZIn '1)))))
   (g$fxeven?$15064$1POZIn
     g$fxeven?$16929$1POZIn
     (case-lambda
       ((g$n$16175$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$n$16175$1POZIn))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$16175$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$16196$1POZIn)
                  ($fx=? '0 ($fxand g$n$16196$1POZIn '1))))
               g$n$16175$1POZIn))))))))
   (g$residual-fxodd?*$15080$1POZIn
     g$residual-fxodd?*$16930$1POZIn
     (case-lambda
       ((g$n$16217$1POZIn) ($fx=? '1 ($fxand g$n$16217$1POZIn '1)))))
   (g$fxodd?$15081$1POZIn
     g$fxodd?$16931$1POZIn
     (case-lambda
       ((g$n$16218$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$n$16218$1POZIn))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$16218$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$16239$1POZIn)
                  ($fx=? '1 ($fxand g$n$16239$1POZIn '1))))
               g$n$16218$1POZIn))))))))
   (g$fxmax$15082$1POZIn
     g$fxmax$16932$1POZIn
     (case-lambda
       ((g$a$16240$1POZIn . g$rest$16241$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$a$16240$1POZIn))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$16240$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            (case-lambda
              ((g$a$16242$1POZIn g$b$16243$1POZIn)
               (if (g$fx<?$14873$1POZIn
                     g$a$16242$1POZIn
                     g$b$16243$1POZIn)
                 g$b$16243$1POZIn
                 g$a$16242$1POZIn)))
            g$a$16240$1POZIn
            g$rest$16241$1POZIn)))))
   (g$fxmin$15083$1POZIn
     g$fxmin$16933$1POZIn
     (case-lambda
       ((g$a$16244$1POZIn . g$rest$16245$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$a$16244$1POZIn))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$16244$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            (case-lambda
              ((g$a$16246$1POZIn g$b$16247$1POZIn)
               (if (g$fx>?$14875$1POZIn
                     g$a$16246$1POZIn
                     g$b$16247$1POZIn)
                 g$b$16247$1POZIn
                 g$a$16246$1POZIn)))
            g$a$16244$1POZIn
            g$rest$16245$1POZIn)))))
   (g$fx*/carry$15084$1POZIn
     g$fx*/carry$16934$1POZIn
     (case-lambda
       ((g$fx1$16248$1POZIn g$fx2$16249$1POZIn g$fx3$16250$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16248$1POZIn))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$16248$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16249$1POZIn))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$16249$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx3$16250$1POZIn))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$16250$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$16251$1POZIn g$e$16252$1POZIn)
                  (values
                    (g$mod0$12673$1POZIn
                      g$s$16251$1POZIn
                      g$e$16252$1POZIn)
                    (g$div0$12671$1POZIn
                      g$s$16251$1POZIn
                      g$e$16252$1POZIn))))
               (+ (* g$fx1$16248$1POZIn g$fx2$16249$1POZIn)
                  g$fx3$16250$1POZIn)
               (g$expt$13651$1POZIn
                 '2
                 (g$fixnum-width$12670$1POZIn))))))))))
   (g$fx-/carry$15085$1POZIn
     g$fx-/carry$16935$1POZIn
     (case-lambda
       ((g$fx1$16253$1POZIn g$fx2$16254$1POZIn g$fx3$16255$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16253$1POZIn))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$16253$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16254$1POZIn))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$16254$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx3$16255$1POZIn))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$16255$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$16256$1POZIn g$e$16257$1POZIn)
                  (values
                    (g$mod0$12673$1POZIn
                      g$s$16256$1POZIn
                      g$e$16257$1POZIn)
                    (g$div0$12671$1POZIn
                      g$s$16256$1POZIn
                      g$e$16257$1POZIn))))
               (- g$fx1$16253$1POZIn
                  g$fx2$16254$1POZIn
                  g$fx3$16255$1POZIn)
               (g$expt$13651$1POZIn
                 '2
                 (g$fixnum-width$12670$1POZIn))))))))))
   (g$fx+/carry$15086$1POZIn
     g$fx+/carry$16936$1POZIn
     (case-lambda
       ((g$fx1$16258$1POZIn g$fx2$16259$1POZIn g$fx3$16260$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16258$1POZIn))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$16258$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16259$1POZIn))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$16259$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx3$16260$1POZIn))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$16260$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$16261$1POZIn g$e$16262$1POZIn)
                  (values
                    (g$mod0$12673$1POZIn
                      g$s$16261$1POZIn
                      g$e$16262$1POZIn)
                    (g$div0$12671$1POZIn
                      g$s$16261$1POZIn
                      g$e$16262$1POZIn))))
               (+ g$fx1$16258$1POZIn
                  g$fx2$16259$1POZIn
                  g$fx3$16260$1POZIn)
               (g$expt$13651$1POZIn
                 '2
                 (g$fixnum-width$12670$1POZIn))))))))))
   (g$residual-fxif*$15102$1POZIn
     g$residual-fxif*$16937$1POZIn
     (case-lambda
       ((g$fx1$16283$1POZIn g$fx2$16284$1POZIn g$fx3$16285$1POZIn)
        ($fxior
          ($fxand g$fx1$16283$1POZIn g$fx2$16284$1POZIn)
          ($fxand ($fxnot g$fx1$16283$1POZIn) g$fx3$16285$1POZIn)))))
   (g$fxif$15103$1POZIn
     g$fxif$16938$1POZIn
     (case-lambda
       ((g$fx1$16286$1POZIn g$fx2$16287$1POZIn g$fx3$16288$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16286$1POZIn))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$16286$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16287$1POZIn))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$16287$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx3$16288$1POZIn))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$16288$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16309$1POZIn
                    g$fx2$16310$1POZIn
                    g$fx3$16311$1POZIn)
                  ($fxior
                    ($fxand g$fx1$16309$1POZIn g$fx2$16310$1POZIn)
                    ($fxand
                      ($fxnot g$fx1$16309$1POZIn)
                      g$fx3$16311$1POZIn))))
               g$fx1$16286$1POZIn
               g$fx2$16287$1POZIn
               g$fx3$16288$1POZIn))))))))
   (g$residual-fxcopy-bit*$15119$1POZIn
     g$residual-fxcopy-bit*$16939$1POZIn
     (case-lambda
       ((g$fx1$16332$1POZIn g$fx2$16333$1POZIn g$fx3$16334$1POZIn)
        ((case-lambda
           ((g$fx1$16355$1POZIn g$fx2$16356$1POZIn g$fx3$16357$1POZIn)
            ($fxior
              ($fxand g$fx1$16355$1POZIn g$fx2$16356$1POZIn)
              ($fxand ($fxnot g$fx1$16355$1POZIn) g$fx3$16357$1POZIn))))
         ($fxarithmetic-shift-left '1 g$fx2$16333$1POZIn)
         ($fxarithmetic-shift-left
           g$fx3$16334$1POZIn
           g$fx2$16333$1POZIn)
         g$fx1$16332$1POZIn))))
   (g$fxcopy-bit$15120$1POZIn
     g$fxcopy-bit$16940$1POZIn
     (case-lambda
       ((g$fx1$16358$1POZIn g$fx2$16359$1POZIn g$fx3$16360$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16358$1POZIn))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$16358$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16359$1POZIn))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$16359$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx3$16360$1POZIn))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$16360$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16381$1POZIn
                    g$fx2$16382$1POZIn
                    g$fx3$16383$1POZIn)
                  ((case-lambda
                     ((g$fx1$16404$1POZIn
                        g$fx2$16405$1POZIn
                        g$fx3$16406$1POZIn)
                      ($fxior
                        ($fxand g$fx1$16404$1POZIn g$fx2$16405$1POZIn)
                        ($fxand
                          ($fxnot g$fx1$16404$1POZIn)
                          g$fx3$16406$1POZIn))))
                   ($fxarithmetic-shift-left '1 g$fx2$16382$1POZIn)
                   ($fxarithmetic-shift-left
                     g$fx3$16383$1POZIn
                     g$fx2$16382$1POZIn)
                   g$fx1$16381$1POZIn)))
               g$fx1$16358$1POZIn
               g$fx2$16359$1POZIn
               g$fx3$16360$1POZIn))))))))
   (g$residual-fxbit-field*$15136$1POZIn
     g$residual-fxbit-field*$16941$1POZIn
     (case-lambda
       ((g$fx1$16427$1POZIn g$fx2$16428$1POZIn g$fx3$16429$1POZIn)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$16427$1POZIn
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$16429$1POZIn)))
          g$fx2$16428$1POZIn))))
   (g$fxbit-field$15137$1POZIn
     g$fxbit-field$16942$1POZIn
     (case-lambda
       ((g$fx1$16430$1POZIn g$fx2$16431$1POZIn g$fx3$16432$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16430$1POZIn))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$16430$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16431$1POZIn))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$16431$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx3$16432$1POZIn))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$16432$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$16453$1POZIn
                    g$fx2$16454$1POZIn
                    g$fx3$16455$1POZIn)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$16453$1POZIn
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$16455$1POZIn)))
                    g$fx2$16454$1POZIn)))
               g$fx1$16430$1POZIn
               g$fx2$16431$1POZIn
               g$fx3$16432$1POZIn))))))))
   (g$residual-fxcopy-bit-field*$15153$1POZIn
     g$residual-fxcopy-bit-field*$16943$1POZIn
     (case-lambda
       ((g$to$16476$1POZIn
          g$start$16477$1POZIn
          g$end$16478$1POZIn
          g$from$16479$1POZIn)
        ((case-lambda
           ((g$fx1$16500$1POZIn g$fx2$16501$1POZIn g$fx3$16502$1POZIn)
            ($fxior
              ($fxand g$fx1$16500$1POZIn g$fx2$16501$1POZIn)
              ($fxand ($fxnot g$fx1$16500$1POZIn) g$fx3$16502$1POZIn))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$16477$1POZIn)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$16478$1POZIn)))
         ($fxarithmetic-shift-left
           g$from$16479$1POZIn
           g$start$16477$1POZIn)
         g$to$16476$1POZIn))))
   (g$fxcopy-bit-field$15154$1POZIn
     g$fxcopy-bit-field$16944$1POZIn
     (case-lambda
       ((g$to$16503$1POZIn
          g$start$16504$1POZIn
          g$end$16505$1POZIn
          g$from$16506$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$to$16503$1POZIn))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$16503$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$start$16504$1POZIn))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$16504$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$end$16505$1POZIn))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$16505$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$from$16506$1POZIn))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$16506$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$16527$1POZIn
                    g$start$16528$1POZIn
                    g$end$16529$1POZIn
                    g$from$16530$1POZIn)
                  ((case-lambda
                     ((g$fx1$16551$1POZIn
                        g$fx2$16552$1POZIn
                        g$fx3$16553$1POZIn)
                      ($fxior
                        ($fxand g$fx1$16551$1POZIn g$fx2$16552$1POZIn)
                        ($fxand
                          ($fxnot g$fx1$16551$1POZIn)
                          g$fx3$16553$1POZIn))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$16528$1POZIn)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$16529$1POZIn)))
                   ($fxarithmetic-shift-left
                     g$from$16530$1POZIn
                     g$start$16528$1POZIn)
                   g$to$16527$1POZIn)))
               g$to$16503$1POZIn
               g$start$16504$1POZIn
               g$end$16505$1POZIn
               g$from$16506$1POZIn))))))))
   (g$fxarithmetic-shift-left$15155$1POZIn
     g$fxarithmetic-shift-left$16945$1POZIn
     (case-lambda
       ((g$fx1$16554$1POZIn g$fx2$16555$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16554$1POZIn))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$16554$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16555$1POZIn))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$16555$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$16576$1POZIn g$k$16577$1POZIn)
                  (if ($fx=? g$k$16577$1POZIn '0)
                    g$x$16576$1POZIn
                    (if ($fx<? g$k$16577$1POZIn '0)
                      ($fxarithmetic-shift-right
                        g$x$16576$1POZIn
                        ($$fx- g$k$16577$1POZIn))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$16578$1POZIn)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$16576$1POZIn)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$16578$1POZIn))
                                (g$overflow-error$14767$1POZIn
                                  'fxarithmetic-shift
                                  g$x$16576$1POZIn
                                  g$k$16577$1POZIn)
                                (void))
                              g$i$16578$1POZIn)))
                         ($fxarithmetic-shift-left
                           g$x$16576$1POZIn
                           g$k$16577$1POZIn)))))))
               g$fx1$16554$1POZIn
               g$fx2$16555$1POZIn))))))))
   (g$fxarithmetic-shift-right$15156$1POZIn
     g$fxarithmetic-shift-right$16946$1POZIn
     (case-lambda
       ((g$fx1$16579$1POZIn g$fx2$16580$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$fx1$16579$1POZIn))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$16579$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$fx2$16580$1POZIn))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$16580$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$16601$1POZIn g$k$16602$1POZIn)
                  (if ($fx=? g$k$16602$1POZIn '0)
                    g$x$16601$1POZIn
                    (if ($fx<? g$k$16602$1POZIn '0)
                      ($fxarithmetic-shift-right
                        g$x$16601$1POZIn
                        ($$fx- g$k$16602$1POZIn))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$16603$1POZIn)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$16601$1POZIn)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$16603$1POZIn))
                                (g$overflow-error$14767$1POZIn
                                  'fxarithmetic-shift
                                  g$x$16601$1POZIn
                                  g$k$16602$1POZIn)
                                (void))
                              g$i$16603$1POZIn)))
                         ($fxarithmetic-shift-left
                           g$x$16601$1POZIn
                           g$k$16602$1POZIn)))))))
               g$fx1$16579$1POZIn
               ($$fx- g$fx2$16580$1POZIn)))))))))
   (g$fxrotate-bit-field$15157$1POZIn
     g$fxrotate-bit-field$16947$1POZIn
     (case-lambda
       ((g$n$16604$1POZIn
          g$start$16605$1POZIn
          g$end$16606$1POZIn
          g$count$16607$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$n$16604$1POZIn))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$16604$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$start$16605$1POZIn))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$16605$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$end$16606$1POZIn))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$16606$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$count$16607$1POZIn))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$16607$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$16608$1POZIn)
                  (if ((case-lambda
                         ((g$r$16629$1POZIn)
                          ($fx<? '0 g$r$16629$1POZIn)))
                       g$width$16608$1POZIn)
                    ((case-lambda
                       ((g$count$16630$1POZIn g$field$16631$1POZIn)
                        ((case-lambda
                           ((g$to$16652$1POZIn
                              g$start$16653$1POZIn
                              g$end$16654$1POZIn
                              g$from$16655$1POZIn)
                            ((case-lambda
                               ((g$fx1$16676$1POZIn
                                  g$fx2$16677$1POZIn
                                  g$fx3$16678$1POZIn)
                                ($fxior
                                  ($fxand
                                    g$fx1$16676$1POZIn
                                    g$fx2$16677$1POZIn)
                                  ($fxand
                                    ($fxnot g$fx1$16676$1POZIn)
                                    g$fx3$16678$1POZIn))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$16653$1POZIn)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$16654$1POZIn)))
                             ($fxarithmetic-shift-left
                               g$from$16655$1POZIn
                               g$start$16653$1POZIn)
                             g$to$16652$1POZIn)))
                         g$n$16604$1POZIn
                         g$start$16605$1POZIn
                         g$end$16606$1POZIn
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$16631$1POZIn
                             g$count$16630$1POZIn)
                           ($fxarithmetic-shift-right
                             g$field$16631$1POZIn
                             ($$fx-
                               g$width$16608$1POZIn
                               g$count$16630$1POZIn))))))
                     ((case-lambda
                        ((g$x1$16699$1POZIn g$x2$16700$1POZIn)
                         ($$fx-
                           g$x1$16699$1POZIn
                           ($$fx*
                             ((case-lambda
                                ((g$x1$16721$1POZIn g$x2$16722$1POZIn)
                                 (begin
                                   (if ($fx=? '0 g$x2$16722$1POZIn)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$16721$1POZIn
                                       g$x2$16722$1POZIn)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$16722$1POZIn)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$14658$1POZIn)
                                             g$x1$16721$1POZIn))
                                         '#f)
                                     (g$overflow-error$14767$1POZIn
                                       'fxdiv
                                       g$x1$16721$1POZIn
                                       g$x2$16722$1POZIn)
                                     (void))
                                   (if ($fx=? '0 g$x1$16721$1POZIn)
                                     '0
                                     (if ($fx<? '0 g$x1$16721$1POZIn)
                                       ((case-lambda
                                          ((g$x1$16743$1POZIn
                                             g$x2$16744$1POZIn)
                                           ($fxdiv0
                                             g$x1$16743$1POZIn
                                             g$x2$16744$1POZIn)))
                                        g$x1$16721$1POZIn
                                        g$x2$16722$1POZIn)
                                       (if ($fx<? '0 g$x2$16722$1POZIn)
                                         ((case-lambda
                                            ((g$x1$16765$1POZIn
                                               g$x2$16766$1POZIn)
                                             ($fxdiv0
                                               g$x1$16765$1POZIn
                                               g$x2$16766$1POZIn)))
                                          ($$fx-
                                            g$x1$16721$1POZIn
                                            ($$fx-
                                              g$x2$16722$1POZIn
                                              '1))
                                          g$x2$16722$1POZIn)
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$x1$16787$1POZIn
                                                 g$x2$16788$1POZIn)
                                               ($fxdiv0
                                                 g$x1$16787$1POZIn
                                                 g$x2$16788$1POZIn)))
                                            ($$fx+
                                              g$x1$16721$1POZIn
                                              ($$fx+
                                                g$x2$16722$1POZIn
                                                '1))
                                            g$x2$16722$1POZIn))))))))
                              g$x1$16699$1POZIn
                              g$x2$16700$1POZIn)
                             g$x2$16700$1POZIn))))
                      g$count$16607$1POZIn
                      g$width$16608$1POZIn)
                     ((case-lambda
                        ((g$fx1$16809$1POZIn
                           g$fx2$16810$1POZIn
                           g$fx3$16811$1POZIn)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$16809$1POZIn
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$16811$1POZIn)))
                           g$fx2$16810$1POZIn)))
                      g$n$16604$1POZIn
                      g$start$16605$1POZIn
                      g$end$16606$1POZIn))
                    g$n$16604$1POZIn)))
               ($$fx- g$end$16606$1POZIn g$start$16605$1POZIn)))))))))
   (g$fxreverse-bit-field$15158$1POZIn
     g$fxreverse-bit-field$16948$1POZIn
     (case-lambda
       ((g$x1$16812$1POZIn g$start$16813$1POZIn g$end$16814$1POZIn)
        (begin
          (if (not (g$fixnum?$12668$1POZIn g$x1$16812$1POZIn))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$16812$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$start$16813$1POZIn))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$16813$1POZIn)
            (void))
          (if (not (g$fixnum?$12668$1POZIn g$end$16814$1POZIn))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$16814$1POZIn)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$16813$1POZIn
                           g$end$16814$1POZIn))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$16813$1POZIn
                    g$end$16814$1POZIn)
                  (void))
                (letrec ((g$loop$16815$1POZIn
                           (case-lambda
                             ((g$width$16839$1POZIn
                                g$bits$16840$1POZIn
                                g$rbits$16841$1POZIn)
                              (if ($fx=? g$width$16839$1POZIn '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$16862$1POZIn
                                        g$start$16863$1POZIn
                                        g$end$16864$1POZIn
                                        g$from$16865$1POZIn)
                                      ((case-lambda
                                         ((g$fx1$16886$1POZIn
                                            g$fx2$16887$1POZIn
                                            g$fx3$16888$1POZIn)
                                          ($fxior
                                            ($fxand
                                              g$fx1$16886$1POZIn
                                              g$fx2$16887$1POZIn)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$16886$1POZIn)
                                              g$fx3$16888$1POZIn))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$16863$1POZIn)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$16864$1POZIn)))
                                       ($fxarithmetic-shift-left
                                         g$from$16865$1POZIn
                                         g$start$16863$1POZIn)
                                       g$to$16862$1POZIn)))
                                   g$x1$16812$1POZIn
                                   g$start$16813$1POZIn
                                   g$end$16814$1POZIn
                                   g$rbits$16841$1POZIn))
                                (g$loop$16815$1POZIn
                                  ($$fx- g$width$16839$1POZIn '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$16840$1POZIn
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$16841$1POZIn
                                      '1)
                                    ($fxand
                                      g$bits$16840$1POZIn
                                      '1))))))))
                  (g$loop$16815$1POZIn
                    ($$fx- g$end$16814$1POZIn g$start$16813$1POZIn)
                    ((case-lambda
                       ((g$fx1$16836$1POZIn
                          g$fx2$16837$1POZIn
                          g$fx3$16838$1POZIn)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$16836$1POZIn
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$16838$1POZIn)))
                          g$fx2$16837$1POZIn)))
                     g$x1$16812$1POZIn
                     g$start$16813$1POZIn
                     g$end$16814$1POZIn)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$17127$1POZIn
     g$fl+$18442$1POZIn
     (case-lambda
       (() '0.0)
       ((g$x1$17250$1POZIn g$x2$17251$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17250$1POZIn))
            (assertion-violation 'fl+ '"not a flonum" g$x1$17250$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17251$1POZIn))
            (assertion-violation 'fl+ '"not a flonum" g$x2$17251$1POZIn)
            (void))
          ($fl+ g$x1$17250$1POZIn g$x2$17251$1POZIn)))
       (g$args$17252$1POZIn
        (g$fold-left$11836$1POZIn
          g$fl+$17127$1POZIn
          (g$fl+$17127$1POZIn)
          g$args$17252$1POZIn))))
   (g$fl*$17128$1POZIn
     g$fl*$18443$1POZIn
     (case-lambda
       (() '1.0)
       ((g$x1$17253$1POZIn g$x2$17254$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17253$1POZIn))
            (assertion-violation 'fl* '"not a flonum" g$x1$17253$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17254$1POZIn))
            (assertion-violation 'fl* '"not a flonum" g$x2$17254$1POZIn)
            (void))
          ($fl* g$x1$17253$1POZIn g$x2$17254$1POZIn)))
       (g$args$17255$1POZIn
        (g$fold-left$11836$1POZIn
          g$fl*$17128$1POZIn
          (g$fl*$17128$1POZIn)
          g$args$17255$1POZIn))))
   (g$fldenominator$17129$1POZIn
     g$fldenominator$18444$1POZIn
     (case-lambda
       ((g$fl$17256$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$17256$1POZIn))
            (assertion-violation
              'fldenominator
              '"not a flonum"
              g$fl$17256$1POZIn)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$17257$1POZIn)
                      (if g$t$17257$1POZIn
                        g$t$17257$1POZIn
                        (begin
                          '#f
                          (g$flinfinite?$17210$1POZIn
                            g$fl$17256$1POZIn)))))
                   (g$flnan?$17211$1POZIn g$fl$17256$1POZIn))
                '1.0
                (g$real->flonum$13598$1POZIn
                  (g$denominator$13629$1POZIn
                    g$fl$17256$1POZIn))))))))))
   (g$flnumerator$17130$1POZIn
     g$flnumerator$18445$1POZIn
     (case-lambda
       ((g$fl$17258$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$17258$1POZIn))
            (assertion-violation
              'flnumerator
              '"not a flonum"
              g$fl$17258$1POZIn)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$17259$1POZIn)
                      (if g$t$17259$1POZIn
                        g$t$17259$1POZIn
                        (begin
                          '#f
                          (g$flinfinite?$17210$1POZIn
                            g$fl$17258$1POZIn)))))
                   (g$flnan?$17211$1POZIn g$fl$17258$1POZIn))
                g$fl$17258$1POZIn
                (g$real->flonum$13598$1POZIn
                  (g$numerator$13628$1POZIn g$fl$17258$1POZIn))))))))))
   (g$fl-$17131$1POZIn
     g$fl-$18446$1POZIn
     (case-lambda
       ((g$x1$17260$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17260$1POZIn))
            (assertion-violation 'fl- '"not a flonum" g$x1$17260$1POZIn)
            (void))
          ($fl- g$x1$17260$1POZIn)))
       ((g$x1$17261$1POZIn g$x2$17262$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17261$1POZIn))
            (assertion-violation 'fl- '"not a flonum" g$x1$17261$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17262$1POZIn))
            (assertion-violation 'fl- '"not a flonum" g$x2$17262$1POZIn)
            (void))
          ($fl- g$x1$17261$1POZIn g$x2$17262$1POZIn)))
       ((g$x1$17263$1POZIn g$x2$17264$1POZIn . g$rest$17265$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17263$1POZIn))
            (assertion-violation 'fl- '"not a flonum" g$x1$17263$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            g$fl-$17131$1POZIn
            g$x1$17263$1POZIn
            (cons g$x2$17264$1POZIn g$rest$17265$1POZIn))))))
   (g$fl/$17132$1POZIn
     g$fl/$18447$1POZIn
     (case-lambda
       ((g$x1$17266$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17266$1POZIn))
            (assertion-violation 'fl/ '"not a flonum" g$x1$17266$1POZIn)
            (void))
          ($fl/ '1.0 g$x1$17266$1POZIn)))
       ((g$x1$17267$1POZIn g$x2$17268$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17267$1POZIn))
            (assertion-violation 'fl/ '"not a flonum" g$x1$17267$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17268$1POZIn))
            (assertion-violation 'fl/ '"not a flonum" g$x2$17268$1POZIn)
            (void))
          ($fl/ g$x1$17267$1POZIn g$x2$17268$1POZIn)))
       ((g$x1$17269$1POZIn g$x2$17270$1POZIn . g$rest$17271$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17269$1POZIn))
            (assertion-violation 'fl/ '"not a flonum" g$x1$17269$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            g$fl/$17132$1POZIn
            g$x1$17269$1POZIn
            (cons g$x2$17270$1POZIn g$rest$17271$1POZIn))))))
   (g$fl=?$17133$1POZIn
     g$fl=?$18448$1POZIn
     (case-lambda
       ((g$x1$17272$1POZIn g$x2$17273$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17272$1POZIn))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$17272$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17273$1POZIn))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$17273$1POZIn)
            (void))
          ($fl=? g$x1$17272$1POZIn g$x2$17273$1POZIn)))
       ((g$x1$17274$1POZIn g$x2$17275$1POZIn . g$rest$17276$1POZIn)
        ((letrec ((g$f$17277$1POZIn
                    (case-lambda
                      ((g$a$17278$1POZIn g$b$17279$1POZIn)
                       (if (null? g$b$17279$1POZIn)
                         '#t
                         (if (g$fl=?$17133$1POZIn
                               g$a$17278$1POZIn
                               ($car g$b$17279$1POZIn))
                           (g$f$17277$1POZIn
                             ($car g$b$17279$1POZIn)
                             ($cdr g$b$17279$1POZIn))
                           (begin '#f '#f)))))))
           g$f$17277$1POZIn)
         g$x1$17274$1POZIn
         (cons g$x2$17275$1POZIn g$rest$17276$1POZIn)))))
   (g$fl<?$17134$1POZIn
     g$fl<?$18449$1POZIn
     (case-lambda
       ((g$x1$17280$1POZIn g$x2$17281$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17280$1POZIn))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$17280$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17281$1POZIn))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$17281$1POZIn)
            (void))
          ($fl<? g$x1$17280$1POZIn g$x2$17281$1POZIn)))
       ((g$x1$17282$1POZIn g$x2$17283$1POZIn . g$rest$17284$1POZIn)
        ((letrec ((g$f$17285$1POZIn
                    (case-lambda
                      ((g$a$17286$1POZIn g$b$17287$1POZIn)
                       (if (null? g$b$17287$1POZIn)
                         '#t
                         (if (g$fl<?$17134$1POZIn
                               g$a$17286$1POZIn
                               ($car g$b$17287$1POZIn))
                           (g$f$17285$1POZIn
                             ($car g$b$17287$1POZIn)
                             ($cdr g$b$17287$1POZIn))
                           (begin '#f '#f)))))))
           g$f$17285$1POZIn)
         g$x1$17282$1POZIn
         (cons g$x2$17283$1POZIn g$rest$17284$1POZIn)))))
   (g$fl<=?$17135$1POZIn
     g$fl<=?$18450$1POZIn
     (case-lambda
       ((g$x1$17288$1POZIn g$x2$17289$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17288$1POZIn))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$17288$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17289$1POZIn))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$17289$1POZIn)
            (void))
          ($fl<=? g$x1$17288$1POZIn g$x2$17289$1POZIn)))
       ((g$x1$17290$1POZIn g$x2$17291$1POZIn . g$rest$17292$1POZIn)
        ((letrec ((g$f$17293$1POZIn
                    (case-lambda
                      ((g$a$17294$1POZIn g$b$17295$1POZIn)
                       (if (null? g$b$17295$1POZIn)
                         '#t
                         (if (g$fl<=?$17135$1POZIn
                               g$a$17294$1POZIn
                               ($car g$b$17295$1POZIn))
                           (g$f$17293$1POZIn
                             ($car g$b$17295$1POZIn)
                             ($cdr g$b$17295$1POZIn))
                           (begin '#f '#f)))))))
           g$f$17293$1POZIn)
         g$x1$17290$1POZIn
         (cons g$x2$17291$1POZIn g$rest$17292$1POZIn)))))
   (g$fl>?$17136$1POZIn
     g$fl>?$18451$1POZIn
     (case-lambda
       ((g$x1$17296$1POZIn g$x2$17297$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17296$1POZIn))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$17296$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17297$1POZIn))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$17297$1POZIn)
            (void))
          ($fl>? g$x1$17296$1POZIn g$x2$17297$1POZIn)))
       ((g$x1$17298$1POZIn g$x2$17299$1POZIn . g$rest$17300$1POZIn)
        ((letrec ((g$f$17301$1POZIn
                    (case-lambda
                      ((g$a$17302$1POZIn g$b$17303$1POZIn)
                       (if (null? g$b$17303$1POZIn)
                         '#t
                         (if (g$fl>?$17136$1POZIn
                               g$a$17302$1POZIn
                               ($car g$b$17303$1POZIn))
                           (g$f$17301$1POZIn
                             ($car g$b$17303$1POZIn)
                             ($cdr g$b$17303$1POZIn))
                           (begin '#f '#f)))))))
           g$f$17301$1POZIn)
         g$x1$17298$1POZIn
         (cons g$x2$17299$1POZIn g$rest$17300$1POZIn)))))
   (g$fl>=?$17137$1POZIn
     g$fl>=?$18452$1POZIn
     (case-lambda
       ((g$x1$17304$1POZIn g$x2$17305$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17304$1POZIn))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$17304$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17305$1POZIn))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$17305$1POZIn)
            (void))
          ($fl>=? g$x1$17304$1POZIn g$x2$17305$1POZIn)))
       ((g$x1$17306$1POZIn g$x2$17307$1POZIn . g$rest$17308$1POZIn)
        ((letrec ((g$f$17309$1POZIn
                    (case-lambda
                      ((g$a$17310$1POZIn g$b$17311$1POZIn)
                       (if (null? g$b$17311$1POZIn)
                         '#t
                         (if (g$fl>=?$17137$1POZIn
                               g$a$17310$1POZIn
                               ($car g$b$17311$1POZIn))
                           (g$f$17309$1POZIn
                             ($car g$b$17311$1POZIn)
                             ($cdr g$b$17311$1POZIn))
                           (begin '#f '#f)))))))
           g$f$17309$1POZIn)
         g$x1$17306$1POZIn
         (cons g$x2$17307$1POZIn g$rest$17308$1POZIn)))))
   (g$residual-fldiv0*$17153$1POZIn
     g$residual-fldiv0*$18453$1POZIn
     (case-lambda
       ((g$x1$17332$1POZIn g$x2$17333$1POZIn)
        ((case-lambda
           ((g$d$17334$1POZIn)
            ((case-lambda
               ((g$m$17335$1POZIn)
                (if ($fl<?
                      g$m$17335$1POZIn
                      (g$magnitude$13626$1POZIn
                        ($fl/ g$x2$17333$1POZIn '2.0)))
                  g$d$17334$1POZIn
                  (if ($fl<? '0.0 g$x2$17333$1POZIn)
                    ($fl+ g$d$17334$1POZIn '1.0)
                    (begin '#f ($fl- g$d$17334$1POZIn '1.0))))))
             ($fl-
               g$x1$17332$1POZIn
               ($fl* g$d$17334$1POZIn g$x2$17333$1POZIn)))))
         ((case-lambda
            ((g$x1$17356$1POZIn g$x2$17357$1POZIn)
             (if ($fl<? '0.0 g$x2$17357$1POZIn)
               ((case-lambda
                  ((g$fl$17378$1POZIn)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$17378$1POZIn)))
                ($fl/ g$x1$17356$1POZIn g$x2$17357$1POZIn))
               ($fl-
                 ((case-lambda
                    ((g$fl$17399$1POZIn)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$17399$1POZIn)))
                  ($fl/ g$x1$17356$1POZIn ($fl- g$x2$17357$1POZIn)))))))
          g$x1$17332$1POZIn
          g$x2$17333$1POZIn)))))
   (g$fldiv0$17154$1POZIn
     g$fldiv0$18454$1POZIn
     (case-lambda
       ((g$x1$17400$1POZIn g$x2$17401$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17400$1POZIn))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$17400$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17401$1POZIn))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$17401$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17422$1POZIn g$x2$17423$1POZIn)
                  ((case-lambda
                     ((g$d$17424$1POZIn)
                      ((case-lambda
                         ((g$m$17425$1POZIn)
                          (if ($fl<?
                                g$m$17425$1POZIn
                                (g$magnitude$13626$1POZIn
                                  ($fl/ g$x2$17423$1POZIn '2.0)))
                            g$d$17424$1POZIn
                            (if ($fl<? '0.0 g$x2$17423$1POZIn)
                              ($fl+ g$d$17424$1POZIn '1.0)
                              (begin
                                '#f
                                ($fl- g$d$17424$1POZIn '1.0))))))
                       ($fl-
                         g$x1$17422$1POZIn
                         ($fl* g$d$17424$1POZIn g$x2$17423$1POZIn)))))
                   ((case-lambda
                      ((g$x1$17446$1POZIn g$x2$17447$1POZIn)
                       (if ($fl<? '0.0 g$x2$17447$1POZIn)
                         ((case-lambda
                            ((g$fl$17468$1POZIn)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$17468$1POZIn)))
                          ($fl/ g$x1$17446$1POZIn g$x2$17447$1POZIn))
                         ($fl-
                           ((case-lambda
                              ((g$fl$17489$1POZIn)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$17489$1POZIn)))
                            ($fl/
                              g$x1$17446$1POZIn
                              ($fl- g$x2$17447$1POZIn)))))))
                    g$x1$17422$1POZIn
                    g$x2$17423$1POZIn))))
               g$x1$17400$1POZIn
               g$x2$17401$1POZIn))))))))
   (g$residual-flmod*$17170$1POZIn
     g$residual-flmod*$18455$1POZIn
     (case-lambda
       ((g$x1$17510$1POZIn g$x2$17511$1POZIn)
        ($fl-
          g$x1$17510$1POZIn
          ($fl*
            ((case-lambda
               ((g$x1$17532$1POZIn g$x2$17533$1POZIn)
                (if ($fl<? '0.0 g$x2$17533$1POZIn)
                  ((case-lambda
                     ((g$fl$17554$1POZIn)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$17554$1POZIn)))
                   ($fl/ g$x1$17532$1POZIn g$x2$17533$1POZIn))
                  ($fl-
                    ((case-lambda
                       ((g$fl$17575$1POZIn)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17575$1POZIn)))
                     ($fl/
                       g$x1$17532$1POZIn
                       ($fl- g$x2$17533$1POZIn)))))))
             g$x1$17510$1POZIn
             g$x2$17511$1POZIn)
            g$x2$17511$1POZIn)))))
   (g$flmod$17171$1POZIn
     g$flmod$18456$1POZIn
     (case-lambda
       ((g$x1$17576$1POZIn g$x2$17577$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17576$1POZIn))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$17576$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17577$1POZIn))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$17577$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17598$1POZIn g$x2$17599$1POZIn)
                  ($fl-
                    g$x1$17598$1POZIn
                    ($fl*
                      ((case-lambda
                         ((g$x1$17620$1POZIn g$x2$17621$1POZIn)
                          (if ($fl<? '0.0 g$x2$17621$1POZIn)
                            ((case-lambda
                               ((g$fl$17642$1POZIn)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$17642$1POZIn)))
                             ($fl/ g$x1$17620$1POZIn g$x2$17621$1POZIn))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$17663$1POZIn)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$17663$1POZIn)))
                               ($fl/
                                 g$x1$17620$1POZIn
                                 ($fl- g$x2$17621$1POZIn)))))))
                       g$x1$17598$1POZIn
                       g$x2$17599$1POZIn)
                      g$x2$17599$1POZIn))))
               g$x1$17576$1POZIn
               g$x2$17577$1POZIn))))))))
   (g$flmod0$17172$1POZIn
     g$flmod0$18457$1POZIn
     (case-lambda
       ((g$x1$17664$1POZIn g$x2$17665$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17664$1POZIn))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$17664$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17665$1POZIn))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$17665$1POZIn)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$17664$1POZIn
                ($fl*
                  ((case-lambda
                     ((g$x1$17686$1POZIn g$x2$17687$1POZIn)
                      ((case-lambda
                         ((g$d$17688$1POZIn)
                          ((case-lambda
                             ((g$m$17689$1POZIn)
                              (if ($fl<?
                                    g$m$17689$1POZIn
                                    (g$magnitude$13626$1POZIn
                                      ($fl/ g$x2$17687$1POZIn '2.0)))
                                g$d$17688$1POZIn
                                (if ($fl<? '0.0 g$x2$17687$1POZIn)
                                  ($fl+ g$d$17688$1POZIn '1.0)
                                  (begin
                                    '#f
                                    ($fl- g$d$17688$1POZIn '1.0))))))
                           ($fl-
                             g$x1$17686$1POZIn
                             ($fl*
                               g$d$17688$1POZIn
                               g$x2$17687$1POZIn)))))
                       ((case-lambda
                          ((g$x1$17710$1POZIn g$x2$17711$1POZIn)
                           (if ($fl<? '0.0 g$x2$17711$1POZIn)
                             ((case-lambda
                                ((g$fl$17732$1POZIn)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$17732$1POZIn)))
                              ($fl/
                                g$x1$17710$1POZIn
                                g$x2$17711$1POZIn))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$17753$1POZIn)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$17753$1POZIn)))
                                ($fl/
                                  g$x1$17710$1POZIn
                                  ($fl- g$x2$17711$1POZIn)))))))
                        g$x1$17686$1POZIn
                        g$x2$17687$1POZIn))))
                   g$x1$17664$1POZIn
                   g$x2$17665$1POZIn)
                  g$x2$17665$1POZIn)))))))))
   (g$fldiv-and-mod$17173$1POZIn
     g$fldiv-and-mod$18458$1POZIn
     (case-lambda
       ((g$x1$17754$1POZIn g$x2$17755$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17754$1POZIn))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$17754$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17755$1POZIn))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$17755$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17756$1POZIn)
                  (values
                    g$d$17756$1POZIn
                    ($fl-
                      g$x1$17754$1POZIn
                      ($fl* g$d$17756$1POZIn g$x2$17755$1POZIn)))))
               ((case-lambda
                  ((g$x1$17777$1POZIn g$x2$17778$1POZIn)
                   (if ($fl<? '0.0 g$x2$17778$1POZIn)
                     ((case-lambda
                        ((g$fl$17799$1POZIn)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$17799$1POZIn)))
                      ($fl/ g$x1$17777$1POZIn g$x2$17778$1POZIn))
                     ($fl-
                       ((case-lambda
                          ((g$fl$17820$1POZIn)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$17820$1POZIn)))
                        ($fl/
                          g$x1$17777$1POZIn
                          ($fl- g$x2$17778$1POZIn)))))))
                g$x1$17754$1POZIn
                g$x2$17755$1POZIn)))))))))
   (g$residual-fldiv*$17189$1POZIn
     g$residual-fldiv*$18459$1POZIn
     (case-lambda
       ((g$x1$17841$1POZIn g$x2$17842$1POZIn)
        (if ($fl<? '0.0 g$x2$17842$1POZIn)
          ((case-lambda
             ((g$fl$17863$1POZIn)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$17863$1POZIn)))
           ($fl/ g$x1$17841$1POZIn g$x2$17842$1POZIn))
          ($fl-
            ((case-lambda
               ((g$fl$17884$1POZIn)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$17884$1POZIn)))
             ($fl/ g$x1$17841$1POZIn ($fl- g$x2$17842$1POZIn))))))))
   (g$fldiv$17190$1POZIn
     g$fldiv$18460$1POZIn
     (case-lambda
       ((g$x1$17885$1POZIn g$x2$17886$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17885$1POZIn))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$17885$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17886$1POZIn))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$17886$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$17907$1POZIn g$x2$17908$1POZIn)
                  (if ($fl<? '0.0 g$x2$17908$1POZIn)
                    ((case-lambda
                       ((g$fl$17929$1POZIn)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$17929$1POZIn)))
                     ($fl/ g$x1$17907$1POZIn g$x2$17908$1POZIn))
                    ($fl-
                      ((case-lambda
                         ((g$fl$17950$1POZIn)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$17950$1POZIn)))
                       ($fl/
                         g$x1$17907$1POZIn
                         ($fl- g$x2$17908$1POZIn)))))))
               g$x1$17885$1POZIn
               g$x2$17886$1POZIn))))))))
   (g$fldiv0-and-mod0$17191$1POZIn
     g$fldiv0-and-mod0$18461$1POZIn
     (case-lambda
       ((g$x1$17951$1POZIn g$x2$17952$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$x1$17951$1POZIn))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$17951$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$x2$17952$1POZIn))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$17952$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$17953$1POZIn)
                  (values
                    g$d$17953$1POZIn
                    ($fl-
                      g$x1$17951$1POZIn
                      ($fl* g$d$17953$1POZIn g$x2$17952$1POZIn)))))
               ((case-lambda
                  ((g$x1$17974$1POZIn g$x2$17975$1POZIn)
                   ((case-lambda
                      ((g$d$17976$1POZIn)
                       ((case-lambda
                          ((g$m$17977$1POZIn)
                           (if ($fl<?
                                 g$m$17977$1POZIn
                                 (g$magnitude$13626$1POZIn
                                   ($fl/ g$x2$17975$1POZIn '2.0)))
                             g$d$17976$1POZIn
                             (if ($fl<? '0.0 g$x2$17975$1POZIn)
                               ($fl+ g$d$17976$1POZIn '1.0)
                               (begin
                                 '#f
                                 ($fl- g$d$17976$1POZIn '1.0))))))
                        ($fl-
                          g$x1$17974$1POZIn
                          ($fl* g$d$17976$1POZIn g$x2$17975$1POZIn)))))
                    ((case-lambda
                       ((g$x1$17998$1POZIn g$x2$17999$1POZIn)
                        (if ($fl<? '0.0 g$x2$17999$1POZIn)
                          ((case-lambda
                             ((g$fl$18020$1POZIn)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$18020$1POZIn)))
                           ($fl/ g$x1$17998$1POZIn g$x2$17999$1POZIn))
                          ($fl-
                            ((case-lambda
                               ((g$fl$18041$1POZIn)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$18041$1POZIn)))
                             ($fl/
                               g$x1$17998$1POZIn
                               ($fl- g$x2$17999$1POZIn)))))))
                     g$x1$17974$1POZIn
                     g$x2$17975$1POZIn))))
                g$x1$17951$1POZIn
                g$x2$17952$1POZIn)))))))))
   (g$flinteger?$17192$1POZIn
     g$flinteger?$18462$1POZIn
     (case-lambda
       ((g$fl$18042$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18042$1POZIn))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$18042$1POZIn)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$18063$1POZIn g$x2$18064$1POZIn)
                    ($fl-
                      g$x1$18063$1POZIn
                      ($fl*
                        ((case-lambda
                           ((g$x1$18085$1POZIn g$x2$18086$1POZIn)
                            (if ($fl<? '0.0 g$x2$18086$1POZIn)
                              ((case-lambda
                                 ((g$fl$18107$1POZIn)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$18107$1POZIn)))
                               ($fl/
                                 g$x1$18085$1POZIn
                                 g$x2$18086$1POZIn))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$18128$1POZIn)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18128$1POZIn)))
                                 ($fl/
                                   g$x1$18085$1POZIn
                                   ($fl- g$x2$18086$1POZIn)))))))
                         g$x1$18063$1POZIn
                         g$x2$18064$1POZIn)
                        g$x2$18064$1POZIn))))
                 g$fl$18042$1POZIn
                 '1.0)))))))))
   (g$flfinite?$17193$1POZIn
     g$flfinite?$18463$1POZIn
     (case-lambda
       ((g$fl$18129$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18129$1POZIn))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$18129$1POZIn)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$18150$1POZIn)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$18150$1POZIn)))
                    g$fl$18129$1POZIn)))))))))
   (g$residual-flinfinite?*$17209$1POZIn
     g$residual-flinfinite?*$18464$1POZIn
     (case-lambda
       ((g$fl$18171$1POZIn)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$18171$1POZIn))))
   (g$flinfinite?$17210$1POZIn
     g$flinfinite?$18465$1POZIn
     (case-lambda
       ((g$fl$18172$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18172$1POZIn))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$18172$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$18193$1POZIn)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$18193$1POZIn)))
               g$fl$18172$1POZIn))))))))
   (g$flnan?$17211$1POZIn
     g$flnan?$18466$1POZIn
     (case-lambda
       ((g$fl$18194$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18194$1POZIn))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$18194$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$18194$1POZIn))))))))
   (g$flsin$17212$1POZIn
     g$flsin$18467$1POZIn
     (case-lambda
       ((g$fl$18195$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18195$1POZIn))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$18195$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$18195$1POZIn))))))))
   (g$flcos$17213$1POZIn
     g$flcos$18468$1POZIn
     (case-lambda
       ((g$fl$18196$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18196$1POZIn))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$18196$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$18196$1POZIn))))))))
   (g$fltan$17214$1POZIn
     g$fltan$18469$1POZIn
     (case-lambda
       ((g$fl$18197$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18197$1POZIn))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$18197$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$18197$1POZIn))))))))
   (g$flasin$17215$1POZIn
     g$flasin$18470$1POZIn
     (case-lambda
       ((g$fl$18198$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18198$1POZIn))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$18198$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$18198$1POZIn))))))))
   (g$flacos$17216$1POZIn
     g$flacos$18471$1POZIn
     (case-lambda
       ((g$fl$18199$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18199$1POZIn))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$18199$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$18199$1POZIn))))))))
   (g$flatan$17217$1POZIn
     g$flatan$18472$1POZIn
     (case-lambda
       ((g$fl$18200$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18200$1POZIn))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$18200$1POZIn)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$18200$1POZIn)))
       ((g$fl1$18201$1POZIn g$fl2$18202$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl1$18201$1POZIn))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$18201$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$fl2$18202$1POZIn))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$18202$1POZIn)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$18201$1POZIn
            g$fl2$18202$1POZIn)))))
   (g$fllog$17218$1POZIn
     g$fllog$18473$1POZIn
     (case-lambda
       ((g$fl$18203$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18203$1POZIn))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$18203$1POZIn)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$18203$1POZIn)))
       ((g$fl1$18204$1POZIn g$fl2$18205$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl1$18204$1POZIn))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$18204$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$fl2$18205$1POZIn))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$18205$1POZIn)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$18204$1POZIn
            g$fl2$18205$1POZIn)))))
   (g$flsqrt$17219$1POZIn
     g$flsqrt$18474$1POZIn
     (case-lambda
       ((g$fl$18206$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18206$1POZIn))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$18206$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$18206$1POZIn))))))))
   (g$flexp$17220$1POZIn
     g$flexp$18475$1POZIn
     (case-lambda
       ((g$fl$18207$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18207$1POZIn))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$18207$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$18207$1POZIn))))))))
   (g$flexpt$17221$1POZIn
     g$flexpt$18476$1POZIn
     (case-lambda
       ((g$fl$18208$1POZIn g$n$18209$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18208$1POZIn))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$18208$1POZIn)
            (void))
          (if (not (g$flonum?$12669$1POZIn g$n$18209$1POZIn))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$18209$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$18208$1POZIn
                g$n$18209$1POZIn))))))))
   (g$flceiling$17222$1POZIn
     g$flceiling$18477$1POZIn
     (case-lambda
       ((g$fl$18210$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18210$1POZIn))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$18210$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$18210$1POZIn))))))))
   (g$residual-flfloor*$17238$1POZIn
     g$residual-flfloor*$18478$1POZIn
     (case-lambda
       ((g$fl$18231$1POZIn)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$18231$1POZIn))))
   (g$flfloor$17239$1POZIn
     g$flfloor$18479$1POZIn
     (case-lambda
       ((g$fl$18232$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18232$1POZIn))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$18232$1POZIn)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$18253$1POZIn)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$18253$1POZIn)))
               g$fl$18232$1POZIn))))))))
   (g$fltruncate$17240$1POZIn
     g$fltruncate$18480$1POZIn
     (case-lambda
       ((g$fl$18254$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18254$1POZIn))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$18254$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$18254$1POZIn))))))))
   (g$flround$17241$1POZIn
     g$flround$18481$1POZIn
     (case-lambda
       ((g$fl$18255$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18255$1POZIn))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$18255$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$18255$1POZIn))))))))
   (g$flabs$17242$1POZIn
     g$flabs$18482$1POZIn
     (case-lambda
       ((g$fl$18256$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$fl$18256$1POZIn))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$18256$1POZIn)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$18256$1POZIn))))))))
   (g$flpositive?$17243$1POZIn
     g$flpositive?$18483$1POZIn
     (case-lambda
       ((g$r$18257$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$r$18257$1POZIn))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$18257$1POZIn)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$18257$1POZIn))))))))
   (g$flnegative?$17244$1POZIn
     g$flnegative?$18484$1POZIn
     (case-lambda
       ((g$r$18258$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$r$18258$1POZIn))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$18258$1POZIn)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$18258$1POZIn))))))))
   (g$flzero?$17245$1POZIn
     g$flzero?$18485$1POZIn
     (case-lambda
       ((g$r$18259$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$r$18259$1POZIn))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$18259$1POZIn)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$18259$1POZIn))))))))
   (g$fleven?$17246$1POZIn
     g$fleven?$18486$1POZIn
     (case-lambda
       ((g$n$18260$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$n$18260$1POZIn))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$18260$1POZIn)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$13612$1POZIn
                           g$n$18260$1POZIn))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$18260$1POZIn)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$18281$1POZIn g$x2$18282$1POZIn)
                      ($fl-
                        g$x1$18281$1POZIn
                        ($fl*
                          ((case-lambda
                             ((g$x1$18303$1POZIn g$x2$18304$1POZIn)
                              (if ($fl<? '0.0 g$x2$18304$1POZIn)
                                ((case-lambda
                                   ((g$fl$18325$1POZIn)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18325$1POZIn)))
                                 ($fl/
                                   g$x1$18303$1POZIn
                                   g$x2$18304$1POZIn))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18346$1POZIn)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18346$1POZIn)))
                                   ($fl/
                                     g$x1$18303$1POZIn
                                     ($fl- g$x2$18304$1POZIn)))))))
                           g$x1$18281$1POZIn
                           g$x2$18282$1POZIn)
                          g$x2$18282$1POZIn))))
                   g$n$18260$1POZIn
                   '2.0))))))))))
   (g$flodd?$17247$1POZIn
     g$flodd?$18487$1POZIn
     (case-lambda
       ((g$n$18347$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$n$18347$1POZIn))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$18347$1POZIn)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$13612$1POZIn
                           g$n$18347$1POZIn))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$18347$1POZIn)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$18368$1POZIn g$x2$18369$1POZIn)
                      ($fl-
                        g$x1$18368$1POZIn
                        ($fl*
                          ((case-lambda
                             ((g$x1$18390$1POZIn g$x2$18391$1POZIn)
                              (if ($fl<? '0.0 g$x2$18391$1POZIn)
                                ((case-lambda
                                   ((g$fl$18412$1POZIn)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$18412$1POZIn)))
                                 ($fl/
                                   g$x1$18390$1POZIn
                                   g$x2$18391$1POZIn))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$18433$1POZIn)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$18433$1POZIn)))
                                   ($fl/
                                     g$x1$18390$1POZIn
                                     ($fl- g$x2$18391$1POZIn)))))))
                           g$x1$18368$1POZIn
                           g$x2$18369$1POZIn)
                          g$x2$18369$1POZIn))))
                   g$n$18347$1POZIn
                   '2.0))))))))))
   (g$flmax$17248$1POZIn
     g$flmax$18488$1POZIn
     (case-lambda
       ((g$a$18434$1POZIn . g$rest$18435$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$a$18434$1POZIn))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$18434$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            (case-lambda
              ((g$a$18436$1POZIn g$b$18437$1POZIn)
               (if (g$fl<?$17134$1POZIn
                     g$a$18436$1POZIn
                     g$b$18437$1POZIn)
                 g$b$18437$1POZIn
                 g$a$18436$1POZIn)))
            g$a$18434$1POZIn
            g$rest$18435$1POZIn)))))
   (g$flmin$17249$1POZIn
     g$flmin$18489$1POZIn
     (case-lambda
       ((g$a$18438$1POZIn . g$rest$18439$1POZIn)
        (begin
          (if (not (g$flonum?$12669$1POZIn g$a$18438$1POZIn))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$18438$1POZIn)
            (void))
          (g$fold-left$11836$1POZIn
            (case-lambda
              ((g$a$18440$1POZIn g$b$18441$1POZIn)
               (if (g$fl>?$17136$1POZIn
                     g$a$18440$1POZIn
                     g$b$18441$1POZIn)
                 g$b$18441$1POZIn
                 g$a$18440$1POZIn)))
            g$a$18438$1POZIn
            g$rest$18439$1POZIn))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$18491$1POZIn
     g$using$18517$1POZIn
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$18492$1POZIn
     g$standard-error-port$18518$1POZIn
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$18493$1POZIn
     g$standard-input-port$18519$1POZIn
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$18494$1POZIn
     g$standard-output-port$18520$1POZIn
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$18495$1POZIn
     g$native-eol-style$18521$1POZIn
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$18496$1POZIn
     g$buffer-mode?$18522$1POZIn
     (case-lambda
       ((g$obj$18505$1POZIn)
        (if (g$symbol?$12665$1POZIn g$obj$18505$1POZIn)
          (if (g$memq$11825$1POZIn
                g$obj$18505$1POZIn
                '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$18497$1POZIn
     g$put-datum$18523$1POZIn
     (case-lambda
       ((g$p$18506$1POZIn g$datum$18507$1POZIn)
        (write g$datum$18507$1POZIn g$p$18506$1POZIn))))
   (g$get-datum$18498$1POZIn g$get-datum$18524$1POZIn read)
   (g$get-output-string$18499$1POZIn
     g$get-output-string$18525$1POZIn
     (case-lambda
       ((g$port$18508$1POZIn)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$18508$1POZIn))))
   (g$open-output-string$18500$1POZIn
     g$open-output-string$18526$1POZIn
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$18501$1POZIn
     g$open-string-output-port$18527$1POZIn
     (case-lambda
       (()
        ((case-lambda
           ((g$p$18509$1POZIn)
            (values
              g$p$18509$1POZIn
              (case-lambda
                (()
                 (g$get-output-string$18499$1POZIn
                   g$p$18509$1POZIn))))))
         (g$open-output-string$18500$1POZIn)))))
   (g$port?$18502$1POZIn
     g$port?$18528$1POZIn
     (case-lambda
       ((g$obj$18510$1POZIn)
        ((case-lambda
           ((g$t$18511$1POZIn)
            (if g$t$18511$1POZIn
              g$t$18511$1POZIn
              (begin '#f (binary-port? g$obj$18510$1POZIn)))))
         (textual-port? g$obj$18510$1POZIn)))))
   (g$call-with-string-output-port$18503$1POZIn
     g$call-with-string-output-port$18529$1POZIn
     (case-lambda
       ((g$proc$18512$1POZIn)
        ((case-lambda
           ((g$p$18513$1POZIn)
            (begin
              (g$call-with-port$18504$1POZIn
                g$p$18513$1POZIn
                g$proc$18512$1POZIn)
              (g$get-output-string$18499$1POZIn g$p$18513$1POZIn))))
         (g$open-output-string$18500$1POZIn)))))
   (g$call-with-port$18504$1POZIn
     g$call-with-port$18530$1POZIn
     (case-lambda
       ((g$port$18514$1POZIn g$proc$18515$1POZIn)
        ((case-lambda
           ((g$r$18516$1POZIn)
            (begin (close-port g$port$18514$1POZIn) g$r$18516$1POZIn)))
         (g$proc$18515$1POZIn g$port$18514$1POZIn))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$18531$1POZIn
     g$peek-char$18586$1POZIn
     (case-lambda
       (() (g$peek-char$18531$1POZIn (current-input-port)))
       ((g$port$18558$1POZIn) (lookahead-char g$port$18558$1POZIn))))
   (g$read-char$18532$1POZIn
     g$read-char$18587$1POZIn
     (case-lambda
       (() (g$read-char$18532$1POZIn (current-input-port)))
       ((g$port$18559$1POZIn) (get-char g$port$18559$1POZIn))))
   (g$write-char$18533$1POZIn
     g$write-char$18588$1POZIn
     (case-lambda
       ((g$chr$18560$1POZIn)
        (g$write-char$18533$1POZIn
          g$chr$18560$1POZIn
          (current-output-port)))
       ((g$chr$18561$1POZIn g$port$18562$1POZIn)
        (put-char g$port$18562$1POZIn g$chr$18561$1POZIn))))
   (g$with-input-from-file$18553$1POZIn
     g$with-input-from-file$18589$1POZIn
     (case-lambda
       ((g$filename$18563$1POZIn g$thunk$18564$1POZIn)
        ((case-lambda
           ((g$current-input-port$18567$1POZIn g$t$18568$1POZIn)
            ((case-lambda
               ((g$swap$18569$1POZIn)
                (dynamic-wind
                  g$swap$18569$1POZIn
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$18564$1POZIn)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$18569$1POZIn)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$18570$1POZIn)
                    (begin
                      (g$current-input-port$18567$1POZIn
                        g$t$18568$1POZIn)
                      (set! g$t$18568$1POZIn g$t$18570$1POZIn))))
                 (g$current-input-port$18567$1POZIn)))))))
         current-input-port
         (open-input-file g$filename$18563$1POZIn)))))
   (g$with-output-to-file$18554$1POZIn
     g$with-output-to-file$18590$1POZIn
     (case-lambda
       ((g$filename$18571$1POZIn g$thunk$18572$1POZIn)
        ((case-lambda
           ((g$current-output-port$18575$1POZIn g$t$18576$1POZIn)
            ((case-lambda
               ((g$swap$18577$1POZIn)
                (dynamic-wind
                  g$swap$18577$1POZIn
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$18572$1POZIn)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$18577$1POZIn)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$18578$1POZIn)
                    (begin
                      (g$current-output-port$18575$1POZIn
                        g$t$18576$1POZIn)
                      (set! g$t$18576$1POZIn g$t$18578$1POZIn))))
                 (g$current-output-port$18575$1POZIn)))))))
         current-output-port
         (open-output-file g$filename$18571$1POZIn)))))
   (g$call-with-input-file$18555$1POZIn
     g$call-with-input-file$18591$1POZIn
     (case-lambda
       ((g$filename$18579$1POZIn g$proc$18580$1POZIn)
        ((case-lambda
           ((g$p$18581$1POZIn)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$18580$1POZIn g$p$18581$1POZIn)))
              (case-lambda (() (close-input-port g$p$18581$1POZIn))))))
         (open-input-file g$filename$18579$1POZIn)))))
   (g$call-with-output-file$18556$1POZIn
     g$call-with-output-file$18592$1POZIn
     (case-lambda
       ((g$filename$18582$1POZIn g$proc$18583$1POZIn)
        ((case-lambda
           ((g$p$18584$1POZIn)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$18583$1POZIn g$p$18584$1POZIn)))
              (case-lambda (() (close-output-port g$p$18584$1POZIn))))))
         (open-output-file g$filename$18582$1POZIn)))))
   (g$newline$18557$1POZIn
     g$newline$18593$1POZIn
     (case-lambda
       (() (g$newline$18557$1POZIn (current-output-port)))
       ((g$port$18585$1POZIn) (display '"
" g$port$18585$1POZIn)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8763$18594$1POZIn
     g$8763$18707$1POZIn
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8765$18595$1POZIn g$8765$18708$1POZIn '#f)
   (g$8764$18596$1POZIn
     g$8764$18709$1POZIn
     (make-record-constructor-descriptor
       g$8763$18594$1POZIn
       '#f
       g$8765$18595$1POZIn))
   (g$enum?$18599$1POZIn
     g$enum?$18710$1POZIn
     (record-predicate g$8763$18594$1POZIn))
   (g$make-enum$18600$1POZIn
     g$make-enum$18711$1POZIn
     (record-constructor g$8764$18596$1POZIn))
   (g$enum-value$18601$1POZIn
     g$enum-value$18712$1POZIn
     (record-accessor g$8763$18594$1POZIn '0))
   (g$enum-info$18602$1POZIn
     g$enum-info$18713$1POZIn
     (record-accessor g$8763$18594$1POZIn '1))
   (g$8774$18603$1POZIn
     g$8774$18714$1POZIn
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8776$18604$1POZIn g$8776$18715$1POZIn '#f)
   (g$8775$18605$1POZIn
     g$8775$18716$1POZIn
     (make-record-constructor-descriptor
       g$8774$18603$1POZIn
       '#f
       g$8776$18604$1POZIn))
   (g$enum-universe?$18608$1POZIn
     g$enum-universe?$18717$1POZIn
     (record-predicate g$8774$18603$1POZIn))
   (g$make-enum-universe$18609$1POZIn
     g$make-enum-universe$18718$1POZIn
     (record-constructor g$8775$18605$1POZIn))
   (g$enum-universe-id$18610$1POZIn
     g$enum-universe-id$18719$1POZIn
     (record-accessor g$8774$18603$1POZIn '0))
   (g$enum-universe-symbols$18611$1POZIn
     g$enum-universe-symbols$18720$1POZIn
     (record-accessor g$8774$18603$1POZIn '1))
   (g$enum-universe-mapping$18612$1POZIn
     g$enum-universe-mapping$18721$1POZIn
     (record-accessor g$8774$18603$1POZIn '2))
   (g$enum-universe-value$18613$1POZIn
     g$enum-universe-value$18722$1POZIn
     (record-accessor g$8774$18603$1POZIn '3))
   (g$enum-type=?$18614$1POZIn
     g$enum-type=?$18723$1POZIn
     (case-lambda
       ((g$enumset1$18636$1POZIn g$enumset2$18637$1POZIn)
        (eq? (g$enum-universe-id$18610$1POZIn
               (g$enum-info$18602$1POZIn g$enumset1$18636$1POZIn))
             (g$enum-universe-id$18610$1POZIn
               (g$enum-info$18602$1POZIn g$enumset2$18637$1POZIn))))))
   (g$get-symbols$18615$1POZIn
     g$get-symbols$18724$1POZIn
     (case-lambda
       ((g$enumset$18638$1POZIn)
        (g$enum-universe-symbols$18611$1POZIn
          (g$enum-info$18602$1POZIn g$enumset$18638$1POZIn)))))
   (g$get-value$18616$1POZIn
     g$get-value$18725$1POZIn
     (case-lambda
       ((g$enumset$18639$1POZIn g$s$18640$1POZIn)
        (g$hashtable-ref$12775$1POZIn
          (g$enum-universe-mapping$18612$1POZIn
            (g$enum-info$18602$1POZIn g$enumset$18639$1POZIn))
          g$s$18640$1POZIn
          '#f))))
   (g$assert-enum$18617$1POZIn
     g$assert-enum$18726$1POZIn
     (case-lambda
       ((g$who$18641$1POZIn g$enumset$18642$1POZIn)
        (if (not (g$enum?$18599$1POZIn g$enumset$18642$1POZIn))
          (assertion-violation
            g$who$18641$1POZIn
            '"not an enumeration"
            g$enumset$18642$1POZIn)
          (void)))))
   (g$make-info$18618$1POZIn
     g$make-info$18727$1POZIn
     (case-lambda
       ((g$symbols$18643$1POZIn)
        ((case-lambda
           ((g$ht$18644$1POZIn)
            ((letrec ((g$f$18645$1POZIn
                        (case-lambda
                          ((g$s$18646$1POZIn
                             g$a$18647$1POZIn
                             g$mask$18648$1POZIn)
                           (if (null? g$s$18646$1POZIn)
                             (values
                               (reverse! g$a$18647$1POZIn)
                               g$ht$18644$1POZIn
                               (- g$mask$18648$1POZIn '1))
                             ((case-lambda
                                ((g$n$18649$1POZIn)
                                 (if (g$symbol?$12665$1POZIn
                                       g$n$18649$1POZIn)
                                   (if (g$hashtable-contains?$12778$1POZIn
                                         g$ht$18644$1POZIn
                                         g$n$18649$1POZIn)
                                     (g$f$18645$1POZIn
                                       (cdr g$s$18646$1POZIn)
                                       g$a$18647$1POZIn
                                       g$mask$18648$1POZIn)
                                     (begin
                                       (g$hashtable-set!$12776$1POZIn
                                         g$ht$18644$1POZIn
                                         g$n$18649$1POZIn
                                         g$mask$18648$1POZIn)
                                       (g$f$18645$1POZIn
                                         (cdr g$s$18646$1POZIn)
                                         (cons
                                           g$n$18649$1POZIn
                                           g$a$18647$1POZIn)
                                         (g$bitwise-arithmetic-shift-left$14654$1POZIn
                                           g$mask$18648$1POZIn
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$18649$1POZIn))))
                              (car g$s$18646$1POZIn)))))))
               g$f$18645$1POZIn)
             g$symbols$18643$1POZIn
             '()
             '1)))
         (g$make-eq-hashtable$12772$1POZIn)))))
   (g$make-name$18619$1POZIn
     g$make-name$18728$1POZIn
     (case-lambda
       ((g$symbols$18650$1POZIn)
        (string->symbol
          (g$format$18767$1POZIn '"~a" g$symbols$18650$1POZIn)))))
   (g$make-enumeration$18620$1POZIn
     g$make-enumeration$18729$1POZIn
     (case-lambda
       ((g$symbols$18651$1POZIn)
        (call-with-values
          (case-lambda
            (() (g$make-info$18618$1POZIn g$symbols$18651$1POZIn)))
          (case-lambda
            ((g$s$18655$1POZIn
               g$mapping$18656$1POZIn
               g$mask$18657$1POZIn)
             ((case-lambda
                ((g$mask$18658$1POZIn
                   g$mapping$18659$1POZIn
                   g$s$18660$1POZIn)
                 (g$make-enum$18600$1POZIn
                   g$mask$18658$1POZIn
                   (g$make-enum-universe$18609$1POZIn
                     (g$make-name$18619$1POZIn g$s$18660$1POZIn)
                     g$s$18660$1POZIn
                     g$mapping$18659$1POZIn
                     g$mask$18658$1POZIn))))
              g$mask$18657$1POZIn
              g$mapping$18656$1POZIn
              g$s$18655$1POZIn)))))))
   (g$enum-set-universe$18621$1POZIn
     g$enum-set-universe$18730$1POZIn
     (case-lambda
       ((g$enumset$18661$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-universe
            g$enumset$18661$1POZIn)
          ((case-lambda
             ((g$ei$18662$1POZIn)
              (g$make-enum$18600$1POZIn
                (g$enum-universe-value$18613$1POZIn g$ei$18662$1POZIn)
                g$ei$18662$1POZIn)))
           (g$enum-info$18602$1POZIn g$enumset$18661$1POZIn))))))
   (g$enum-set-indexer$18622$1POZIn
     g$enum-set-indexer$18731$1POZIn
     (case-lambda
       ((g$enumset$18663$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-indexer
            g$enumset$18663$1POZIn)
          (case-lambda
            ((g$symbol$18664$1POZIn)
             (begin
               (if (not (g$symbol?$12665$1POZIn g$symbol$18664$1POZIn))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$18664$1POZIn)
                 (void))
               ((case-lambda
                  ((g$v$18665$1POZIn)
                   (if g$v$18665$1POZIn
                     (- (g$bitwise-length$14647$1POZIn g$v$18665$1POZIn)
                        '1)
                     '#f)))
                (g$get-value$18616$1POZIn
                  g$enumset$18663$1POZIn
                  g$symbol$18664$1POZIn)))))))))
   (g$enum-set-constructor$18623$1POZIn
     g$enum-set-constructor$18732$1POZIn
     (case-lambda
       ((g$enumset$18666$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-constructor
            g$enumset$18666$1POZIn)
          (case-lambda
            ((g$symbols$18667$1POZIn)
             ((letrec ((g$f$18668$1POZIn
                         (case-lambda
                           ((g$v$18669$1POZIn g$s$18670$1POZIn)
                            (if (null? g$s$18670$1POZIn)
                              (g$make-enum$18600$1POZIn
                                g$v$18669$1POZIn
                                (g$enum-info$18602$1POZIn
                                  g$enumset$18666$1POZIn))
                              ((case-lambda
                                 ((g$n$18671$1POZIn)
                                  (if (g$symbol?$12665$1POZIn
                                        g$n$18671$1POZIn)
                                    ((case-lambda
                                       ((g$v*$18672$1POZIn)
                                        (if g$v*$18672$1POZIn
                                          (g$f$18668$1POZIn
                                            (g$bitwise-ior$14644$1POZIn
                                              g$v$18669$1POZIn
                                              g$v*$18672$1POZIn)
                                            (cdr g$s$18670$1POZIn))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$18671$1POZIn))))
                                     (g$get-value$18616$1POZIn
                                       g$enumset$18666$1POZIn
                                       g$n$18671$1POZIn))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$18671$1POZIn))))
                               (car g$s$18670$1POZIn)))))))
                g$f$18668$1POZIn)
              '0
              g$symbols$18667$1POZIn)))))))
   (g$enum-set->list$18624$1POZIn
     g$enum-set->list$18733$1POZIn
     (case-lambda
       ((g$enumset$18673$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set->list
            g$enumset$18673$1POZIn)
          ((case-lambda
             ((g$value$18674$1POZIn)
              ((letrec ((g$f$18675$1POZIn
                          (case-lambda
                            ((g$s$18676$1POZIn g$l$18677$1POZIn)
                             (if (null? g$s$18676$1POZIn)
                               (reverse! g$l$18677$1POZIn)
                               (if (g$zero?$13613$1POZIn
                                     (g$bitwise-and$14643$1POZIn
                                       (g$get-value$18616$1POZIn
                                         g$enumset$18673$1POZIn
                                         (car g$s$18676$1POZIn))
                                       g$value$18674$1POZIn))
                                 (g$f$18675$1POZIn
                                   (cdr g$s$18676$1POZIn)
                                   g$l$18677$1POZIn)
                                 (g$f$18675$1POZIn
                                   (cdr g$s$18676$1POZIn)
                                   (cons
                                     (car g$s$18676$1POZIn)
                                     g$l$18677$1POZIn))))))))
                 g$f$18675$1POZIn)
               (g$get-symbols$18615$1POZIn g$enumset$18673$1POZIn)
               '())))
           (g$enum-value$18601$1POZIn g$enumset$18673$1POZIn))))))
   (g$enum-set-member?$18625$1POZIn
     g$enum-set-member?$18734$1POZIn
     (case-lambda
       ((g$symbol$18678$1POZIn g$enumset$18679$1POZIn)
        (begin
          (if (not (g$symbol?$12665$1POZIn g$symbol$18678$1POZIn))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$18678$1POZIn)
            (void))
          (g$assert-enum$18617$1POZIn
            'enum-set-member?
            g$enumset$18679$1POZIn)
          ((case-lambda
             ((g$v$18680$1POZIn)
              (if g$v$18680$1POZIn
                (not (g$zero?$13613$1POZIn
                       (g$bitwise-and$14643$1POZIn
                         g$v$18680$1POZIn
                         (g$enum-value$18601$1POZIn
                           g$enumset$18679$1POZIn))))
                '#f)))
           (g$get-value$18616$1POZIn
             g$enumset$18679$1POZIn
             g$symbol$18678$1POZIn))))))
   (g$enum-set-subset?$18626$1POZIn
     g$enum-set-subset?$18735$1POZIn
     (case-lambda
       ((g$enumset1$18681$1POZIn g$enumset2$18682$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-subset?
            g$enumset1$18681$1POZIn)
          (g$assert-enum$18617$1POZIn
            'enum-set-subset?
            g$enumset2$18682$1POZIn)
          ((case-lambda
             ((g$v1$18683$1POZIn g$v2$18684$1POZIn)
              (if (g$enum-type=?$18614$1POZIn
                    g$enumset1$18681$1POZIn
                    g$enumset2$18682$1POZIn)
                (g$=$13618$1POZIn
                  (g$bitwise-and$14643$1POZIn
                    g$v1$18683$1POZIn
                    g$v2$18684$1POZIn)
                  g$v1$18683$1POZIn)
                ((letrec ((g$f$18685$1POZIn
                            (case-lambda
                              ((g$s$18686$1POZIn)
                               (if (null? g$s$18686$1POZIn)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$18687$1POZIn
                                       g$v2*$18688$1POZIn)
                                     (if g$v2*$18688$1POZIn
                                       ((case-lambda
                                          ((g$has1$18689$1POZIn
                                             g$has2$18690$1POZIn)
                                           (if (if g$has1$18689$1POZIn
                                                 (begin
                                                   '#f
                                                   (not g$has2$18690$1POZIn))
                                                 '#f)
                                             '#f
                                             (g$f$18685$1POZIn
                                               (cdr g$s$18686$1POZIn)))))
                                        (not (g$zero?$13613$1POZIn
                                               (g$bitwise-and$14643$1POZIn
                                                 g$v1$18683$1POZIn
                                                 g$v1*$18687$1POZIn)))
                                        (not (g$zero?$13613$1POZIn
                                               (g$bitwise-and$14643$1POZIn
                                                 g$v2$18684$1POZIn
                                                 g$v2*$18688$1POZIn))))
                                       '#f)))
                                  (g$get-value$18616$1POZIn
                                    g$enumset1$18681$1POZIn
                                    (car g$s$18686$1POZIn))
                                  (g$get-value$18616$1POZIn
                                    g$enumset2$18682$1POZIn
                                    (car g$s$18686$1POZIn))))))))
                   g$f$18685$1POZIn)
                 (g$get-symbols$18615$1POZIn
                   g$enumset1$18681$1POZIn)))))
           (g$enum-value$18601$1POZIn g$enumset1$18681$1POZIn)
           (g$enum-value$18601$1POZIn g$enumset2$18682$1POZIn))))))
   (g$enum-set=?$18627$1POZIn
     g$enum-set=?$18736$1POZIn
     (case-lambda
       ((g$enumset1$18691$1POZIn g$enumset2$18692$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set=?
            g$enumset1$18691$1POZIn)
          (g$assert-enum$18617$1POZIn
            'enum-set=?
            g$enumset2$18692$1POZIn)
          (if (g$enum-set-subset?$18626$1POZIn
                g$enumset1$18691$1POZIn
                g$enumset2$18692$1POZIn)
            (begin
              '#f
              (g$enum-set-subset?$18626$1POZIn
                g$enumset2$18692$1POZIn
                g$enumset1$18691$1POZIn))
            '#f)))))
   (g$enum-set-union$18628$1POZIn
     g$enum-set-union$18737$1POZIn
     (case-lambda
       ((g$enumset1$18693$1POZIn g$enumset2$18694$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-union
            g$enumset1$18693$1POZIn)
          (g$assert-enum$18617$1POZIn
            'enum-set-union
            g$enumset2$18694$1POZIn)
          (if (g$enum-type=?$18614$1POZIn
                g$enumset1$18693$1POZIn
                g$enumset2$18694$1POZIn)
            (g$make-enum$18600$1POZIn
              (g$bitwise-ior$14644$1POZIn
                (g$enum-value$18601$1POZIn g$enumset1$18693$1POZIn)
                (g$enum-value$18601$1POZIn g$enumset2$18694$1POZIn))
              (g$enum-info$18602$1POZIn g$enumset1$18693$1POZIn))
            '#f)))))
   (g$enum-set-intersection$18629$1POZIn
     g$enum-set-intersection$18738$1POZIn
     (case-lambda
       ((g$enumset1$18695$1POZIn g$enumset2$18696$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-intersection
            g$enumset1$18695$1POZIn)
          (g$assert-enum$18617$1POZIn
            'enum-set-intersection
            g$enumset2$18696$1POZIn)
          (if (g$enum-type=?$18614$1POZIn
                g$enumset1$18695$1POZIn
                g$enumset2$18696$1POZIn)
            (g$make-enum$18600$1POZIn
              (g$bitwise-and$14643$1POZIn
                (g$enum-value$18601$1POZIn g$enumset1$18695$1POZIn)
                (g$enum-value$18601$1POZIn g$enumset2$18696$1POZIn))
              (g$enum-info$18602$1POZIn g$enumset1$18695$1POZIn))
            '#f)))))
   (g$enum-set-difference$18630$1POZIn
     g$enum-set-difference$18739$1POZIn
     (case-lambda
       ((g$enumset1$18697$1POZIn g$enumset2$18698$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-difference
            g$enumset1$18697$1POZIn)
          (g$assert-enum$18617$1POZIn
            'enum-set-difference
            g$enumset2$18698$1POZIn)
          (if (g$enum-type=?$18614$1POZIn
                g$enumset1$18697$1POZIn
                g$enumset2$18698$1POZIn)
            (g$make-enum$18600$1POZIn
              (g$bitwise-and$14643$1POZIn
                (g$enum-value$18601$1POZIn g$enumset1$18697$1POZIn)
                (g$bitwise-not$14642$1POZIn
                  (g$enum-value$18601$1POZIn g$enumset2$18698$1POZIn)))
              (g$enum-info$18602$1POZIn g$enumset1$18697$1POZIn))
            '#f)))))
   (g$enum-set-complement$18631$1POZIn
     g$enum-set-complement$18740$1POZIn
     (case-lambda
       ((g$enumset$18699$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-complement
            g$enumset$18699$1POZIn)
          (g$make-enum$18600$1POZIn
            (g$bitwise-not$14642$1POZIn
              (g$enum-value$18601$1POZIn g$enumset$18699$1POZIn))
            (g$enum-info$18602$1POZIn g$enumset$18699$1POZIn))))))
   (g$enum-set-projection$18632$1POZIn
     g$enum-set-projection$18741$1POZIn
     (case-lambda
       ((g$enumset1$18700$1POZIn g$enumset2$18701$1POZIn)
        (begin
          (g$assert-enum$18617$1POZIn
            'enum-set-projection
            g$enumset1$18700$1POZIn)
          (g$assert-enum$18617$1POZIn
            'enum-set-projection
            g$enumset2$18701$1POZIn)
          ((case-lambda
             ((g$v1$18702$1POZIn)
              ((letrec ((g$f$18703$1POZIn
                          (case-lambda
                            ((g$s$18704$1POZIn g$v$18705$1POZIn)
                             (if (null? g$s$18704$1POZIn)
                               (g$make-enum$18600$1POZIn
                                 g$v$18705$1POZIn
                                 (g$enum-info$18602$1POZIn
                                   g$enumset2$18701$1POZIn))
                               (if (g$zero?$13613$1POZIn
                                     (g$bitwise-and$14643$1POZIn
                                       g$v1$18702$1POZIn
                                       (g$get-value$18616$1POZIn
                                         g$enumset1$18700$1POZIn
                                         (car g$s$18704$1POZIn))))
                                 (g$f$18703$1POZIn
                                   (cdr g$s$18704$1POZIn)
                                   g$v$18705$1POZIn)
                                 ((case-lambda
                                    ((g$v2$18706$1POZIn)
                                     (if g$v2$18706$1POZIn
                                       (g$f$18703$1POZIn
                                         (cdr g$s$18704$1POZIn)
                                         (g$bitwise-ior$14644$1POZIn
                                           g$v$18705$1POZIn
                                           g$v2$18706$1POZIn))
                                       (g$f$18703$1POZIn
                                         (cdr g$s$18704$1POZIn)
                                         g$v$18705$1POZIn))))
                                  (g$get-value$18616$1POZIn
                                    g$enumset2$18701$1POZIn
                                    (car g$s$18704$1POZIn)))))))))
                 g$f$18703$1POZIn)
               (g$get-symbols$18615$1POZIn g$enumset1$18700$1POZIn)
               '0)))
           (g$enum-value$18601$1POZIn g$enumset1$18700$1POZIn)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$18633$1POZIn g$p$18634$1POZIn g$wr$18635$1POZIn)
       (g$fprintf$18766$1POZIn
         g$p$18634$1POZIn
         '"#[enum-set ~a]"
         (g$enum-set->list$18624$1POZIn g$x$18633$1POZIn))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$18742$1POZIn
     g$dofmt$18764$1POZIn
     (case-lambda
       ((g$p$18746$1POZIn g$cntl$18747$1POZIn g$args$18748$1POZIn)
        ((case-lambda
           ((g$nmax$18749$1POZIn)
            ((letrec ((g$loop$18750$1POZIn
                        (case-lambda
                          ((g$n$18751$1POZIn g$a$18752$1POZIn)
                           (if (g$fx<=?$16906$1POZIn
                                 g$n$18751$1POZIn
                                 g$nmax$18749$1POZIn)
                             ((case-lambda
                                ((g$c$18753$1POZIn)
                                 (if (if (g$char=?$12724$1POZIn
                                           g$c$18753$1POZIn
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$16905$1POZIn
                                           g$n$18751$1POZIn
                                           g$nmax$18749$1POZIn))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$18754$1POZIn)
                                       (if (eqv? g$t$18754$1POZIn '#\a)
                                         (begin
                                           (display
                                             (car g$a$18752$1POZIn)
                                             g$p$18746$1POZIn)
                                           (g$loop$18750$1POZIn
                                             (g$fx+$16891$1POZIn
                                               g$n$18751$1POZIn
                                               '2)
                                             (cdr g$a$18752$1POZIn)))
                                         (if (eqv?
                                               g$t$18754$1POZIn
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$18752$1POZIn)
                                               g$p$18746$1POZIn)
                                             (g$loop$18750$1POZIn
                                               (g$fx+$16891$1POZIn
                                                 g$n$18751$1POZIn
                                                 '2)
                                               (cdr g$a$18752$1POZIn)))
                                           (if (eqv?
                                                 g$t$18754$1POZIn
                                                 '#\b)
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$18752$1POZIn)
                                                   '2)
                                                 g$p$18746$1POZIn)
                                               (g$loop$18750$1POZIn
                                                 (g$fx+$16891$1POZIn
                                                   g$n$18751$1POZIn
                                                   '2)
                                                 (cdr g$a$18752$1POZIn)))
                                             (if (eqv?
                                                   g$t$18754$1POZIn
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$18752$1POZIn)
                                                     '8)
                                                   g$p$18746$1POZIn)
                                                 (g$loop$18750$1POZIn
                                                   (g$fx+$16891$1POZIn
                                                     g$n$18751$1POZIn
                                                     '2)
                                                   (cdr g$a$18752$1POZIn)))
                                               (if (eqv?
                                                     g$t$18754$1POZIn
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$18752$1POZIn)
                                                       '16)
                                                     g$p$18746$1POZIn)
                                                   (g$loop$18750$1POZIn
                                                     (g$fx+$16891$1POZIn
                                                       g$n$18751$1POZIn
                                                       '2)
                                                     (cdr g$a$18752$1POZIn)))
                                                 (if (eqv?
                                                       g$t$18754$1POZIn
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$18752$1POZIn)
                                                         '10)
                                                       g$p$18746$1POZIn)
                                                     (g$loop$18750$1POZIn
                                                       (g$fx+$16891$1POZIn
                                                         g$n$18751$1POZIn
                                                         '2)
                                                       (cdr g$a$18752$1POZIn)))
                                                   (if (eqv?
                                                         g$t$18754$1POZIn
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$18588$1POZIn
                                                         '#\~
                                                         g$p$18746$1POZIn)
                                                       (g$loop$18750$1POZIn
                                                         (g$fx+$16891$1POZIn
                                                           g$n$18751$1POZIn
                                                           '2)
                                                         g$a$18752$1POZIn))
                                                     (begin
                                                       '#f
                                                       (g$write-char$18588$1POZIn
                                                         g$c$18753$1POZIn
                                                         g$p$18746$1POZIn)
                                                       (g$loop$18750$1POZIn
                                                         (g$fx+$16891$1POZIn
                                                           g$n$18751$1POZIn
                                                           '1)
                                                         g$a$18752$1POZIn)))))))))))
                                    (string-ref
                                      g$cntl$18747$1POZIn
                                      (g$fx+$16891$1POZIn
                                        g$n$18751$1POZIn
                                        '1)))
                                   (begin
                                     (g$write-char$18588$1POZIn
                                       g$c$18753$1POZIn
                                       g$p$18746$1POZIn)
                                     (g$loop$18750$1POZIn
                                       (g$fx+$16891$1POZIn
                                         g$n$18751$1POZIn
                                         '1)
                                       g$a$18752$1POZIn)))))
                              (string-ref
                                g$cntl$18747$1POZIn
                                g$n$18751$1POZIn))
                             (void))))))
               g$loop$18750$1POZIn)
             '0
             g$args$18748$1POZIn)))
         (g$fx-$16893$1POZIn (string-length g$cntl$18747$1POZIn) '1)))))
   (g$printf$18743$1POZIn
     g$printf$18765$1POZIn
     (case-lambda
       ((g$control$18755$1POZIn . g$args$18756$1POZIn)
        (g$dofmt$18742$1POZIn
          (current-output-port)
          g$control$18755$1POZIn
          g$args$18756$1POZIn))))
   (g$fprintf$18744$1POZIn
     g$fprintf$18766$1POZIn
     (case-lambda
       ((g$p$18757$1POZIn g$control$18758$1POZIn . g$args$18759$1POZIn)
        (g$dofmt$18742$1POZIn
          g$p$18757$1POZIn
          g$control$18758$1POZIn
          g$args$18759$1POZIn))))
   (g$format$18745$1POZIn
     g$format$18767$1POZIn
     (case-lambda
       ((g$control$18760$1POZIn . g$args$18761$1POZIn)
        (call-with-values
          g$open-string-output-port$18527$1POZIn
          (case-lambda
            ((g$p$18762$1POZIn g$c$18763$1POZIn)
             (begin
               (g$dofmt$18742$1POZIn
                 g$p$18762$1POZIn
                 g$control$18760$1POZIn
                 g$args$18761$1POZIn)
               (g$c$18763$1POZIn)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$18768$1POZIn
     g$make-traced-macro$18771$1POZIn
     (case-lambda
       ((g$name$18769$1POZIn g$x$18770$1POZIn)
        (if (g$procedure?$12667$1POZIn g$x$18770$1POZIn)
          (make-traced-procedure
            g$name$18769$1POZIn
            g$x$18770$1POZIn
            g$syntax->datum$24324$1POZIn)
          (if (g$variable-transformer?$24145$1POZIn g$x$18770$1POZIn)
            (g$make-variable-transformer$24143$1POZIn
              (make-traced-procedure
                g$name$18769$1POZIn
                (g$variable-transformer-procedure$24146$1POZIn
                  g$x$18770$1POZIn)
                g$syntax->datum$24324$1POZIn))
            (begin '#f g$x$18770$1POZIn)))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$18772$1POZIn
     g$library-version-mismatch-warning$18973$1POZIn
     (case-lambda
       ((g$name$18945$1POZIn
          g$depname$18946$1POZIn
          g$filename$18947$1POZIn)
        (g$fprintf$18766$1POZIn
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$18945$1POZIn
          g$depname$18946$1POZIn
          g$filename$18947$1POZIn))))
   (g$file-locator-resolution-error$18773$1POZIn
     g$file-locator-resolution-error$18974$1POZIn
     (case-lambda
       ((g$libname$18948$1POZIn g$failed-list$18949$1POZIn)
        (letrec* ((g$8952$18950$1POZIn
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$14085$1POZIn
                      'g$8955$1POZIn
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8954$18951$1POZIn '#f)
                  (g$8953$18952$1POZIn
                    (make-record-constructor-descriptor
                      g$8952$18950$1POZIn
                      g$&condition-rcd$14086$1POZIn
                      g$8954$18951$1POZIn))
                  (g$8951$18955$1POZIn
                    (record-predicate g$8952$18950$1POZIn))
                  (g$make-library-resolution-condition$18956$1POZIn
                    (record-constructor g$8953$18952$1POZIn))
                  (g$8949$18957$1POZIn
                    (record-accessor g$8952$18950$1POZIn '0))
                  (g$8950$18958$1POZIn
                    (record-accessor g$8952$18950$1POZIn '1))
                  (g$library-resolution-condition?$18959$1POZIn
                    (condition-predicate g$8952$18950$1POZIn))
                  (g$condition-library$18960$1POZIn
                    (condition-accessor
                      g$8952$18950$1POZIn
                      g$8949$18957$1POZIn))
                  (g$condition-files$18961$1POZIn
                    (condition-accessor
                      g$8952$18950$1POZIn
                      g$8950$18958$1POZIn)))
          (raise
            (condition
              (g$make-error$14117$1POZIn)
              (g$make-who-condition$14151$1POZIn 'expander)
              (g$make-message-condition$14091$1POZIn
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$18956$1POZIn
                g$libname$18948$1POZIn
                g$failed-list$18949$1POZIn)))))))
   (g$read-library-source-file$18774$1POZIn
     g$read-library-source-file$18975$1POZIn
     (case-lambda
       ((g$file-name$18962$1POZIn)
        (g$with-input-from-file$18589$1POZIn
          g$file-name$18962$1POZIn
          read-annotated))))
   (g$make-parameter$18775$1POZIn
     g$make-parameter$18976$1POZIn
     (case-lambda
       ((g$x$18963$1POZIn)
        (g$make-parameter$18775$1POZIn
          g$x$18963$1POZIn
          (case-lambda ((g$x$18964$1POZIn) g$x$18964$1POZIn))))
       ((g$x$18965$1POZIn g$fender$18966$1POZIn)
        (begin
          (if (not (g$procedure?$12667$1POZIn g$fender$18966$1POZIn))
            (g$assertion-error$24317$1POZIn
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$18967$1POZIn)
              (case-lambda
                (() g$x$18967$1POZIn)
                ((g$v$18968$1POZIn)
                 (set! g$x$18967$1POZIn
                   (g$fender$18966$1POZIn g$v$18968$1POZIn))))))
           (g$fender$18966$1POZIn g$x$18965$1POZIn))))))
   (g$file-options-constructor$18941$1POZIn
     g$file-options-constructor$18977$1POZIn
     (g$make-parameter$18775$1POZIn '#f))
   (g$file-options-spec$18942$1POZIn
     g$file-options-spec$18978$1POZIn
     (case-lambda
       ((g$x$18969$1POZIn)
        ((g$file-options-constructor$18941$1POZIn) g$x$18969$1POZIn))))
   (g$set-label-binding!$18943$1POZIn
     g$set-label-binding!$18979$1POZIn
     (case-lambda
       ((g$label$18970$1POZIn g$binding$18971$1POZIn)
        (set-symbol-value!
          g$label$18970$1POZIn
          g$binding$18971$1POZIn))))
   (g$label-binding$18944$1POZIn
     g$label-binding$18980$1POZIn
     (case-lambda
       ((g$label$18972$1POZIn)
        (if (symbol-bound? g$label$18972$1POZIn)
          (begin '#f (symbol-value g$label$18972$1POZIn))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$18981$1POZIn
     g$genwrite:newline-str$19174$1POZIn
     (make-string '1 '#\newline))
   (g$symbol->string$18982$1POZIn
     g$symbol->string$19175$1POZIn
     (case-lambda
       ((g$s$18994$1POZIn)
        (symbol->string
          (if (g$pretty-gensyms$18991$1POZIn)
            (ungensym g$s$18994$1POZIn)
            g$s$18994$1POZIn)))))
   (g$read-macro-body$18983$1POZIn
     g$read-macro-body$19176$1POZIn
     (case-lambda
       ((g$l$18995$1POZIn) (g$cadr$12684$1POZIn g$l$18995$1POZIn))))
   (g$read-macro-prefix$18984$1POZIn
     g$read-macro-prefix$19177$1POZIn
     (case-lambda
       ((g$l$18996$1POZIn)
        ((case-lambda
           ((g$head$18997$1POZIn g$tail$18998$1POZIn)
            ((case-lambda
               ((g$t$18999$1POZIn)
                (if (eqv? g$t$18999$1POZIn 'syntax)
                  '"#'"
                  (if (eqv? g$t$18999$1POZIn 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$18999$1POZIn 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$18999$1POZIn 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$18999$1POZIn 'quote)
                          '"'"
                          (if (eqv? g$t$18999$1POZIn 'quasiquote)
                            '"`"
                            (if (eqv? g$t$18999$1POZIn 'unquote)
                              '","
                              (if (eqv?
                                    g$t$18999$1POZIn
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$18997$1POZIn)))
         (car g$l$18996$1POZIn)
         (cdr g$l$18996$1POZIn)))))
   (g$length1?$18985$1POZIn
     g$length1?$19178$1POZIn
     (case-lambda
       ((g$l$19000$1POZIn)
        (if (pair? g$l$19000$1POZIn)
          (begin '#f (null? (cdr g$l$19000$1POZIn)))
          '#f))))
   (g$read-macro?$18986$1POZIn
     g$read-macro?$19179$1POZIn
     (case-lambda
       ((g$l$19001$1POZIn)
        ((case-lambda
           ((g$head$19002$1POZIn g$tail$19003$1POZIn)
            ((case-lambda
               ((g$t$19004$1POZIn)
                (if (g$memv$11826$1POZIn
                      g$t$19004$1POZIn
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$18985$1POZIn g$tail$19003$1POZIn)
                  (begin '#f '#f))))
             g$head$19002$1POZIn)))
         (car g$l$19001$1POZIn)
         (cdr g$l$19001$1POZIn)))))
   (g$generic-write$18987$1POZIn
     g$generic-write$19180$1POZIn
     (case-lambda
       ((g$obj$19005$1POZIn
          g$display?$19006$1POZIn
          g$width$19007$1POZIn
          g$output$19008$1POZIn)
        (letrec* ((g$out$19009$1POZIn
                    (case-lambda
                      ((g$str$19158$1POZIn g$col$19159$1POZIn)
                       (if g$col$19159$1POZIn
                         (if (g$output$19008$1POZIn g$str$19158$1POZIn)
                           (begin
                             '#f
                             (g$fx+$16891$1POZIn
                               g$col$19159$1POZIn
                               (string-length g$str$19158$1POZIn)))
                           '#f)
                         '#f))))
                  (g$wr$19010$1POZIn
                    (case-lambda
                      ((g$obj$19141$1POZIn g$col$19142$1POZIn)
                       (letrec* ((g$wr-expr$19143$1POZIn
                                   (case-lambda
                                     ((g$expr$19156$1POZIn
                                        g$col$19157$1POZIn)
                                      (if (g$read-macro?$18986$1POZIn
                                            g$expr$19156$1POZIn)
                                        (g$wr$19010$1POZIn
                                          (g$read-macro-body$18983$1POZIn
                                            g$expr$19156$1POZIn)
                                          (g$out$19009$1POZIn
                                            (g$read-macro-prefix$18984$1POZIn
                                              g$expr$19156$1POZIn)
                                            g$col$19157$1POZIn))
                                        (g$wr-lst$19144$1POZIn
                                          g$expr$19156$1POZIn
                                          g$col$19157$1POZIn)))))
                                 (g$wr-lst$19144$1POZIn
                                   (case-lambda
                                     ((g$l$19151$1POZIn
                                        g$col$19152$1POZIn)
                                      (if (pair? g$l$19151$1POZIn)
                                        ((letrec ((g$loop$19153$1POZIn
                                                    (case-lambda
                                                      ((g$l$19154$1POZIn
                                                         g$col$19155$1POZIn)
                                                       (if (not g$col$19155$1POZIn)
                                                         g$col$19155$1POZIn
                                                         (if (pair?
                                                               g$l$19154$1POZIn)
                                                           (g$loop$19153$1POZIn
                                                             (cdr g$l$19154$1POZIn)
                                                             (g$wr$19010$1POZIn
                                                               (car g$l$19154$1POZIn)
                                                               (g$out$19009$1POZIn
                                                                 '" "
                                                                 g$col$19155$1POZIn)))
                                                           (if (null?
                                                                 g$l$19154$1POZIn)
                                                             (g$out$19009$1POZIn
                                                               '")"
                                                               g$col$19155$1POZIn)
                                                             (begin
                                                               '#f
                                                               (g$out$19009$1POZIn
                                                                 '")"
                                                                 (g$wr$19010$1POZIn
                                                                   g$l$19154$1POZIn
                                                                   (g$out$19009$1POZIn
                                                                     '" . "
                                                                     g$col$19155$1POZIn)))))))))))
                                           g$loop$19153$1POZIn)
                                         (cdr g$l$19151$1POZIn)
                                         (if g$col$19152$1POZIn
                                           (begin
                                             '#f
                                             (g$wr$19010$1POZIn
                                               (car g$l$19151$1POZIn)
                                               (g$out$19009$1POZIn
                                                 '"("
                                                 g$col$19152$1POZIn)))
                                           '#f))
                                        (g$out$19009$1POZIn
                                          '"()"
                                          g$col$19152$1POZIn))))))
                         (if (pair? g$obj$19141$1POZIn)
                           (g$wr-expr$19143$1POZIn
                             g$obj$19141$1POZIn
                             g$col$19142$1POZIn)
                           (if (null? g$obj$19141$1POZIn)
                             (g$wr-lst$19144$1POZIn
                               g$obj$19141$1POZIn
                               g$col$19142$1POZIn)
                             (if (g$vector?$12663$1POZIn
                                   g$obj$19141$1POZIn)
                               (g$wr-lst$19144$1POZIn
                                 (vector->list g$obj$19141$1POZIn)
                                 (g$out$19009$1POZIn
                                   '"#"
                                   g$col$19142$1POZIn))
                               (if (g$boolean?$12666$1POZIn
                                     g$obj$19141$1POZIn)
                                 (g$out$19009$1POZIn
                                   (if g$obj$19141$1POZIn '"#t" '"#f")
                                   g$col$19142$1POZIn)
                                 (if (g$number?$13600$1POZIn
                                       g$obj$19141$1POZIn)
                                   (g$out$19009$1POZIn
                                     (number->string g$obj$19141$1POZIn)
                                     g$col$19142$1POZIn)
                                   (if (g$symbol?$12665$1POZIn
                                         g$obj$19141$1POZIn)
                                     (g$out$19009$1POZIn
                                       (g$symbol->string$18982$1POZIn
                                         g$obj$19141$1POZIn)
                                       g$col$19142$1POZIn)
                                     (if (string? g$obj$19141$1POZIn)
                                       (if g$display?$19006$1POZIn
                                         (g$out$19009$1POZIn
                                           g$obj$19141$1POZIn
                                           g$col$19142$1POZIn)
                                         ((letrec ((g$loop$19145$1POZIn
                                                     (case-lambda
                                                       ((g$i$19146$1POZIn
                                                          g$j$19147$1POZIn
                                                          g$col$19148$1POZIn)
                                                        (if (if g$col$19148$1POZIn
                                                              (begin
                                                                '#f
                                                                (g$fx<?$16905$1POZIn
                                                                  g$j$19147$1POZIn
                                                                  (string-length
                                                                    g$obj$19141$1POZIn)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$19149$1POZIn)
                                                              (if ((case-lambda
                                                                     ((g$t$19150$1POZIn)
                                                                      (if g$t$19150$1POZIn
                                                                        g$t$19150$1POZIn
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$12724$1POZIn
                                                                            g$c$19149$1POZIn
                                                                            '#\")))))
                                                                   (g$char=?$12724$1POZIn
                                                                     g$c$19149$1POZIn
                                                                     '#\\))
                                                                (g$loop$19145$1POZIn
                                                                  g$j$19147$1POZIn
                                                                  (g$fx+$16891$1POZIn
                                                                    g$j$19147$1POZIn
                                                                    '1)
                                                                  (g$out$19009$1POZIn
                                                                    '"\\"
                                                                    (g$out$19009$1POZIn
                                                                      (substring
                                                                        g$obj$19141$1POZIn
                                                                        g$i$19146$1POZIn
                                                                        g$j$19147$1POZIn)
                                                                      g$col$19148$1POZIn)))
                                                                (g$loop$19145$1POZIn
                                                                  g$i$19146$1POZIn
                                                                  (g$fx+$16891$1POZIn
                                                                    g$j$19147$1POZIn
                                                                    '1)
                                                                  g$col$19148$1POZIn))))
                                                           (string-ref
                                                             g$obj$19141$1POZIn
                                                             g$j$19147$1POZIn))
                                                          (g$out$19009$1POZIn
                                                            '"\""
                                                            (g$out$19009$1POZIn
                                                              (substring
                                                                g$obj$19141$1POZIn
                                                                g$i$19146$1POZIn
                                                                g$j$19147$1POZIn)
                                                              g$col$19148$1POZIn)))))))
                                            g$loop$19145$1POZIn)
                                          '0
                                          '0
                                          (g$out$19009$1POZIn
                                            '"\""
                                            g$col$19142$1POZIn)))
                                       (begin
                                         '#f
                                         (g$out$19009$1POZIn
                                           (g$format$18767$1POZIn
                                             (if g$display?$19006$1POZIn
                                               '"~a"
                                               '"~s")
                                             g$obj$19141$1POZIn)
                                           g$col$19142$1POZIn)))))))))))))
                  (g$pp$19011$1POZIn
                    (case-lambda
                      ((g$obj$19012$1POZIn g$col$19013$1POZIn)
                       (letrec* ((g$spaces$19014$1POZIn
                                   (case-lambda
                                     ((g$n$19139$1POZIn
                                        g$col$19140$1POZIn)
                                      (if (g$fx>?$16907$1POZIn
                                            g$n$19139$1POZIn
                                            '0)
                                        (if (g$fx>?$16907$1POZIn
                                              g$n$19139$1POZIn
                                              '7)
                                          (g$spaces$19014$1POZIn
                                            (g$fx-$16893$1POZIn
                                              g$n$19139$1POZIn
                                              '8)
                                            (g$out$19009$1POZIn
                                              '"        "
                                              g$col$19140$1POZIn))
                                          (g$out$19009$1POZIn
                                            (substring
                                              '"        "
                                              '0
                                              g$n$19139$1POZIn)
                                            g$col$19140$1POZIn))
                                        g$col$19140$1POZIn))))
                                 (g$indent$19015$1POZIn
                                   (case-lambda
                                     ((g$to$19137$1POZIn
                                        g$col$19138$1POZIn)
                                      (if g$col$19138$1POZIn
                                        (begin
                                          '#f
                                          (if (g$fx<?$16905$1POZIn
                                                g$to$19137$1POZIn
                                                g$col$19138$1POZIn)
                                            (if (g$out$19009$1POZIn
                                                  g$genwrite:newline-str$18981$1POZIn
                                                  g$col$19138$1POZIn)
                                              (begin
                                                '#f
                                                (g$spaces$19014$1POZIn
                                                  g$to$19137$1POZIn
                                                  '0))
                                              '#f)
                                            (g$spaces$19014$1POZIn
                                              (g$fx-$16893$1POZIn
                                                g$to$19137$1POZIn
                                                g$col$19138$1POZIn)
                                              g$col$19138$1POZIn)))
                                        '#f))))
                                 (g$pr$19016$1POZIn
                                   (case-lambda
                                     ((g$obj$19129$1POZIn
                                        g$col$19130$1POZIn
                                        g$extra$19131$1POZIn
                                        g$pp-pair$19132$1POZIn)
                                      (if ((case-lambda
                                             ((g$t$19133$1POZIn)
                                              (if g$t$19133$1POZIn
                                                g$t$19133$1POZIn
                                                (begin
                                                  '#f
                                                  (g$vector?$12663$1POZIn
                                                    g$obj$19129$1POZIn)))))
                                           (pair? g$obj$19129$1POZIn))
                                        ((case-lambda
                                           ((g$result$19134$1POZIn
                                              g$left$19135$1POZIn)
                                            (begin
                                              (g$generic-write$18987$1POZIn
                                                g$obj$19129$1POZIn
                                                g$display?$19006$1POZIn
                                                '#f
                                                (case-lambda
                                                  ((g$str$19136$1POZIn)
                                                   (begin
                                                     (set! g$result$19134$1POZIn
                                                       (cons
                                                         g$str$19136$1POZIn
                                                         g$result$19134$1POZIn))
                                                     (set! g$left$19135$1POZIn
                                                       (g$fx-$16893$1POZIn
                                                         g$left$19135$1POZIn
                                                         (string-length
                                                           g$str$19136$1POZIn)))
                                                     (g$fx>?$16907$1POZIn
                                                       g$left$19135$1POZIn
                                                       '0)))))
                                              (if (g$fx>?$16907$1POZIn
                                                    g$left$19135$1POZIn
                                                    '0)
                                                (g$out$19009$1POZIn
                                                  (g$reverse-string-append$18992$1POZIn
                                                    g$result$19134$1POZIn)
                                                  g$col$19130$1POZIn)
                                                (if (pair?
                                                      g$obj$19129$1POZIn)
                                                  (g$pp-pair$19132$1POZIn
                                                    g$obj$19129$1POZIn
                                                    g$col$19130$1POZIn
                                                    g$extra$19131$1POZIn)
                                                  (g$pp-list$19019$1POZIn
                                                    (vector->list
                                                      g$obj$19129$1POZIn)
                                                    (g$out$19009$1POZIn
                                                      '"#"
                                                      g$col$19130$1POZIn)
                                                    g$extra$19131$1POZIn
                                                    g$pp-expr$19017$1POZIn))))))
                                         '()
                                         (g$min$12714$1POZIn
                                           (g$fx+$16891$1POZIn
                                             (g$fx-$16893$1POZIn
                                               (g$fx-$16893$1POZIn
                                                 g$width$19007$1POZIn
                                                 g$col$19130$1POZIn)
                                               g$extra$19131$1POZIn)
                                             '1)
                                           (g$pretty-width$18988$1POZIn)))
                                        (g$wr$19010$1POZIn
                                          g$obj$19129$1POZIn
                                          g$col$19130$1POZIn)))))
                                 (g$pp-expr$19017$1POZIn
                                   (case-lambda
                                     ((g$expr$19124$1POZIn
                                        g$col$19125$1POZIn
                                        g$extra$19126$1POZIn)
                                      (if (g$read-macro?$18986$1POZIn
                                            g$expr$19124$1POZIn)
                                        (g$pr$19016$1POZIn
                                          (g$read-macro-body$18983$1POZIn
                                            g$expr$19124$1POZIn)
                                          (g$out$19009$1POZIn
                                            (g$read-macro-prefix$18984$1POZIn
                                              g$expr$19124$1POZIn)
                                            g$col$19125$1POZIn)
                                          g$extra$19126$1POZIn
                                          g$pp-expr$19017$1POZIn)
                                        ((case-lambda
                                           ((g$head$19127$1POZIn)
                                            (if (g$symbol?$12665$1POZIn
                                                  g$head$19127$1POZIn)
                                              ((case-lambda
                                                 ((g$proc$19128$1POZIn)
                                                  (if g$proc$19128$1POZIn
                                                    (g$proc$19128$1POZIn
                                                      g$expr$19124$1POZIn
                                                      g$col$19125$1POZIn
                                                      g$extra$19126$1POZIn)
                                                    (if (g$fx>?$16907$1POZIn
                                                          (string-length
                                                            (g$symbol->string$18982$1POZIn
                                                              g$head$19127$1POZIn))
                                                          (g$max-call-head-width$18990$1POZIn))
                                                      (g$pp-general$19021$1POZIn
                                                        g$expr$19124$1POZIn
                                                        g$col$19125$1POZIn
                                                        g$extra$19126$1POZIn
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$19017$1POZIn)
                                                      (g$pp-call$19018$1POZIn
                                                        g$expr$19124$1POZIn
                                                        g$col$19125$1POZIn
                                                        g$extra$19126$1POZIn
                                                        g$pp-expr$19017$1POZIn)))))
                                               (g$style$19033$1POZIn
                                                 g$head$19127$1POZIn))
                                              (g$pp-list$19019$1POZIn
                                                g$expr$19124$1POZIn
                                                g$col$19125$1POZIn
                                                g$extra$19126$1POZIn
                                                g$pp-expr$19017$1POZIn))))
                                         (car g$expr$19124$1POZIn))))))
                                 (g$pp-call$19018$1POZIn
                                   (case-lambda
                                     ((g$expr$19119$1POZIn
                                        g$col$19120$1POZIn
                                        g$extra$19121$1POZIn
                                        g$pp-item$19122$1POZIn)
                                      ((case-lambda
                                         ((g$col*$19123$1POZIn)
                                          (if g$col$19120$1POZIn
                                            (begin
                                              '#f
                                              (g$pp-down$19020$1POZIn
                                                (cdr g$expr$19119$1POZIn)
                                                g$col*$19123$1POZIn
                                                (g$fx+$16891$1POZIn
                                                  g$col*$19123$1POZIn
                                                  '1)
                                                g$extra$19121$1POZIn
                                                g$pp-item$19122$1POZIn))
                                            '#f)))
                                       (g$wr$19010$1POZIn
                                         (car g$expr$19119$1POZIn)
                                         (g$out$19009$1POZIn
                                           '"("
                                           g$col$19120$1POZIn))))))
                                 (g$pp-list$19019$1POZIn
                                   (case-lambda
                                     ((g$l$19114$1POZIn
                                        g$col$19115$1POZIn
                                        g$extra$19116$1POZIn
                                        g$pp-item$19117$1POZIn)
                                      ((case-lambda
                                         ((g$col$19118$1POZIn)
                                          (g$pp-down$19020$1POZIn
                                            g$l$19114$1POZIn
                                            g$col$19118$1POZIn
                                            g$col$19118$1POZIn
                                            g$extra$19116$1POZIn
                                            g$pp-item$19117$1POZIn)))
                                       (g$out$19009$1POZIn
                                         '"("
                                         g$col$19115$1POZIn)))))
                                 (g$pp-down$19020$1POZIn
                                   (case-lambda
                                     ((g$l$19104$1POZIn
                                        g$col1$19105$1POZIn
                                        g$col2$19106$1POZIn
                                        g$extra$19107$1POZIn
                                        g$pp-item$19108$1POZIn)
                                      ((letrec ((g$loop$19109$1POZIn
                                                  (case-lambda
                                                    ((g$l$19110$1POZIn
                                                       g$col$19111$1POZIn)
                                                     (if g$col$19111$1POZIn
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$19110$1POZIn)
                                                           ((case-lambda
                                                              ((g$rest$19112$1POZIn)
                                                               ((case-lambda
                                                                  ((g$extra$19113$1POZIn)
                                                                   (g$loop$19109$1POZIn
                                                                     g$rest$19112$1POZIn
                                                                     (g$pr$19016$1POZIn
                                                                       (car g$l$19110$1POZIn)
                                                                       (g$indent$19015$1POZIn
                                                                         g$col2$19106$1POZIn
                                                                         g$col$19111$1POZIn)
                                                                       g$extra$19113$1POZIn
                                                                       g$pp-item$19108$1POZIn))))
                                                                (if (null?
                                                                      g$rest$19112$1POZIn)
                                                                  (g$fx+$16891$1POZIn
                                                                    g$extra$19107$1POZIn
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$19110$1POZIn))
                                                           (if (null?
                                                                 g$l$19110$1POZIn)
                                                             (g$out$19009$1POZIn
                                                               '")"
                                                               g$col$19111$1POZIn)
                                                             (begin
                                                               '#f
                                                               (g$out$19009$1POZIn
                                                                 '")"
                                                                 (g$pr$19016$1POZIn
                                                                   g$l$19110$1POZIn
                                                                   (g$indent$19015$1POZIn
                                                                     g$col2$19106$1POZIn
                                                                     (g$out$19009$1POZIn
                                                                       '"."
                                                                       (g$indent$19015$1POZIn
                                                                         g$col2$19106$1POZIn
                                                                         g$col$19111$1POZIn)))
                                                                   (g$fx+$16891$1POZIn
                                                                     g$extra$19107$1POZIn
                                                                     '1)
                                                                   g$pp-item$19108$1POZIn))))))
                                                       '#f)))))
                                         g$loop$19109$1POZIn)
                                       g$l$19104$1POZIn
                                       g$col1$19105$1POZIn))))
                                 (g$pp-general$19021$1POZIn
                                   (case-lambda
                                     ((g$expr$19071$1POZIn
                                        g$col$19072$1POZIn
                                        g$extra$19073$1POZIn
                                        g$named?$19074$1POZIn
                                        g$pp-1$19075$1POZIn
                                        g$pp-2$19076$1POZIn
                                        g$pp-3$19077$1POZIn)
                                      (letrec* ((g$tail1$19078$1POZIn
                                                  (case-lambda
                                                    ((g$rest$19097$1POZIn
                                                       g$col1$19098$1POZIn
                                                       g$col2$19099$1POZIn
                                                       g$col3$19100$1POZIn)
                                                     (if (if g$pp-1$19075$1POZIn
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$19097$1POZIn))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$19101$1POZIn)
                                                           ((case-lambda
                                                              ((g$rest$19102$1POZIn)
                                                               ((case-lambda
                                                                  ((g$extra$19103$1POZIn)
                                                                   (g$tail2$19079$1POZIn
                                                                     g$rest$19102$1POZIn
                                                                     g$col1$19098$1POZIn
                                                                     (g$pr$19016$1POZIn
                                                                       g$val1$19101$1POZIn
                                                                       (g$indent$19015$1POZIn
                                                                         g$col3$19100$1POZIn
                                                                         g$col2$19099$1POZIn)
                                                                       g$extra$19103$1POZIn
                                                                       g$pp-1$19075$1POZIn)
                                                                     g$col3$19100$1POZIn)))
                                                                (if (null?
                                                                      g$rest$19102$1POZIn)
                                                                  (g$fx+$16891$1POZIn
                                                                    g$extra$19073$1POZIn
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$19097$1POZIn))))
                                                        (car g$rest$19097$1POZIn))
                                                       (g$tail2$19079$1POZIn
                                                         g$rest$19097$1POZIn
                                                         g$col1$19098$1POZIn
                                                         g$col2$19099$1POZIn
                                                         g$col3$19100$1POZIn)))))
                                                (g$tail2$19079$1POZIn
                                                  (case-lambda
                                                    ((g$rest$19090$1POZIn
                                                       g$col1$19091$1POZIn
                                                       g$col2$19092$1POZIn
                                                       g$col3$19093$1POZIn)
                                                     (if (if g$pp-2$19076$1POZIn
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$19090$1POZIn))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$19094$1POZIn)
                                                           ((case-lambda
                                                              ((g$rest$19095$1POZIn)
                                                               ((case-lambda
                                                                  ((g$extra$19096$1POZIn)
                                                                   (g$tail3$19080$1POZIn
                                                                     g$rest$19095$1POZIn
                                                                     g$col1$19091$1POZIn
                                                                     (g$pr$19016$1POZIn
                                                                       g$val1$19094$1POZIn
                                                                       (g$indent$19015$1POZIn
                                                                         g$col3$19093$1POZIn
                                                                         g$col2$19092$1POZIn)
                                                                       g$extra$19096$1POZIn
                                                                       g$pp-2$19076$1POZIn))))
                                                                (if (null?
                                                                      g$rest$19095$1POZIn)
                                                                  (g$fx+$16891$1POZIn
                                                                    g$extra$19073$1POZIn
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$19090$1POZIn))))
                                                        (car g$rest$19090$1POZIn))
                                                       (g$tail3$19080$1POZIn
                                                         g$rest$19090$1POZIn
                                                         g$col1$19091$1POZIn
                                                         g$col2$19092$1POZIn)))))
                                                (g$tail3$19080$1POZIn
                                                  (case-lambda
                                                    ((g$rest$19087$1POZIn
                                                       g$col1$19088$1POZIn
                                                       g$col2$19089$1POZIn)
                                                     (g$pp-down$19020$1POZIn
                                                       g$rest$19087$1POZIn
                                                       g$col2$19089$1POZIn
                                                       g$col1$19088$1POZIn
                                                       g$extra$19073$1POZIn
                                                       g$pp-3$19077$1POZIn)))))
                                        ((case-lambda
                                           ((g$head$19081$1POZIn)
                                            ((case-lambda
                                               ((g$rest$19082$1POZIn)
                                                ((case-lambda
                                                   ((g$col*$19083$1POZIn)
                                                    (if (if g$named?$19074$1POZIn
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$19082$1POZIn))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$19084$1POZIn)
                                                          ((case-lambda
                                                             ((g$rest$19085$1POZIn)
                                                              ((case-lambda
                                                                 ((g$col**$19086$1POZIn)
                                                                  (g$tail1$19078$1POZIn
                                                                    g$rest$19085$1POZIn
                                                                    (g$fx+$16891$1POZIn
                                                                      g$col$19072$1POZIn
                                                                      (g$indent-general$18989$1POZIn))
                                                                    g$col**$19086$1POZIn
                                                                    (g$fx+$16891$1POZIn
                                                                      g$col**$19086$1POZIn
                                                                      '1))))
                                                               (g$wr$19010$1POZIn
                                                                 g$name$19084$1POZIn
                                                                 (g$out$19009$1POZIn
                                                                   '" "
                                                                   g$col*$19083$1POZIn)))))
                                                           (cdr g$rest$19082$1POZIn))))
                                                       (car g$rest$19082$1POZIn))
                                                      (g$tail1$19078$1POZIn
                                                        g$rest$19082$1POZIn
                                                        (g$fx+$16891$1POZIn
                                                          g$col$19072$1POZIn
                                                          (g$indent-general$18989$1POZIn))
                                                        g$col*$19083$1POZIn
                                                        (g$fx+$16891$1POZIn
                                                          g$col*$19083$1POZIn
                                                          '1)))))
                                                 (g$wr$19010$1POZIn
                                                   g$head$19081$1POZIn
                                                   (g$out$19009$1POZIn
                                                     '"("
                                                     g$col$19072$1POZIn)))))
                                             (cdr g$expr$19071$1POZIn))))
                                         (car g$expr$19071$1POZIn))))))
                                 (g$pp-expr-list$19022$1POZIn
                                   (case-lambda
                                     ((g$l$19068$1POZIn
                                        g$col$19069$1POZIn
                                        g$extra$19070$1POZIn)
                                      (g$pp-list$19019$1POZIn
                                        g$l$19068$1POZIn
                                        g$col$19069$1POZIn
                                        g$extra$19070$1POZIn
                                        g$pp-expr$19017$1POZIn))))
                                 (g$pp-SYNTAX-CASE$19023$1POZIn
                                   (case-lambda
                                     ((g$expr$19065$1POZIn
                                        g$col$19066$1POZIn
                                        g$extra$19067$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19065$1POZIn
                                        g$col$19066$1POZIn
                                        g$extra$19067$1POZIn
                                        '#t
                                        g$pp-expr-list$19022$1POZIn
                                        '#f
                                        g$pp-expr$19017$1POZIn))))
                                 (g$pp-LAMBDA$19024$1POZIn
                                   (case-lambda
                                     ((g$expr$19062$1POZIn
                                        g$col$19063$1POZIn
                                        g$extra$19064$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19062$1POZIn
                                        g$col$19063$1POZIn
                                        g$extra$19064$1POZIn
                                        '#f
                                        g$pp-expr-list$19022$1POZIn
                                        '#f
                                        g$pp-expr$19017$1POZIn))))
                                 (g$pp-IF$19025$1POZIn
                                   (case-lambda
                                     ((g$expr$19059$1POZIn
                                        g$col$19060$1POZIn
                                        g$extra$19061$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19059$1POZIn
                                        g$col$19060$1POZIn
                                        g$extra$19061$1POZIn
                                        '#f
                                        g$pp-expr$19017$1POZIn
                                        '#f
                                        g$pp-expr$19017$1POZIn))))
                                 (g$pp-COND$19026$1POZIn
                                   (case-lambda
                                     ((g$expr$19056$1POZIn
                                        g$col$19057$1POZIn
                                        g$extra$19058$1POZIn)
                                      (g$pp-call$19018$1POZIn
                                        g$expr$19056$1POZIn
                                        g$col$19057$1POZIn
                                        g$extra$19058$1POZIn
                                        g$pp-expr-list$19022$1POZIn))))
                                 (g$pp-CASE$19027$1POZIn
                                   (case-lambda
                                     ((g$expr$19053$1POZIn
                                        g$col$19054$1POZIn
                                        g$extra$19055$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19053$1POZIn
                                        g$col$19054$1POZIn
                                        g$extra$19055$1POZIn
                                        '#f
                                        g$pp-expr$19017$1POZIn
                                        '#f
                                        g$pp-expr-list$19022$1POZIn))))
                                 (g$pp-CASE-LAMBDA$19028$1POZIn
                                   (case-lambda
                                     ((g$expr$19050$1POZIn
                                        g$col$19051$1POZIn
                                        g$extra$19052$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19050$1POZIn
                                        g$col$19051$1POZIn
                                        g$extra$19052$1POZIn
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$19022$1POZIn))))
                                 (g$pp-AND$19029$1POZIn
                                   (case-lambda
                                     ((g$expr$19047$1POZIn
                                        g$col$19048$1POZIn
                                        g$extra$19049$1POZIn)
                                      (g$pp-call$19018$1POZIn
                                        g$expr$19047$1POZIn
                                        g$col$19048$1POZIn
                                        g$extra$19049$1POZIn
                                        g$pp-expr$19017$1POZIn))))
                                 (g$pp-LET$19030$1POZIn
                                   (case-lambda
                                     ((g$expr$19042$1POZIn
                                        g$col$19043$1POZIn
                                        g$extra$19044$1POZIn)
                                      ((case-lambda
                                         ((g$rest$19045$1POZIn)
                                          ((case-lambda
                                             ((g$named?$19046$1POZIn)
                                              (g$pp-general$19021$1POZIn
                                                g$expr$19042$1POZIn
                                                g$col$19043$1POZIn
                                                g$extra$19044$1POZIn
                                                g$named?$19046$1POZIn
                                                g$pp-expr-list$19022$1POZIn
                                                '#f
                                                g$pp-expr$19017$1POZIn)))
                                           (if (pair?
                                                 g$rest$19045$1POZIn)
                                             (begin
                                               '#f
                                               (g$symbol?$12665$1POZIn
                                                 (car g$rest$19045$1POZIn)))
                                             '#f))))
                                       (cdr g$expr$19042$1POZIn)))))
                                 (g$pp-BEGIN$19031$1POZIn
                                   (case-lambda
                                     ((g$expr$19039$1POZIn
                                        g$col$19040$1POZIn
                                        g$extra$19041$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19039$1POZIn
                                        g$col$19040$1POZIn
                                        g$extra$19041$1POZIn
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$19017$1POZIn))))
                                 (g$pp-DO$19032$1POZIn
                                   (case-lambda
                                     ((g$expr$19036$1POZIn
                                        g$col$19037$1POZIn
                                        g$extra$19038$1POZIn)
                                      (g$pp-general$19021$1POZIn
                                        g$expr$19036$1POZIn
                                        g$col$19037$1POZIn
                                        g$extra$19038$1POZIn
                                        '#f
                                        g$pp-expr-list$19022$1POZIn
                                        g$pp-expr-list$19022$1POZIn
                                        g$pp-expr$19017$1POZIn))))
                                 (g$style$19033$1POZIn
                                   (case-lambda
                                     ((g$head$19034$1POZIn)
                                      ((case-lambda
                                         ((g$t$19035$1POZIn)
                                          (if (g$memv$11826$1POZIn
                                                g$t$19035$1POZIn
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$19024$1POZIn
                                            (if (eqv?
                                                  g$t$19035$1POZIn
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$19023$1POZIn
                                              (if (g$memv$11826$1POZIn
                                                    g$t$19035$1POZIn
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$19025$1POZIn
                                                (if (eqv?
                                                      g$t$19035$1POZIn
                                                      'cond)
                                                  g$pp-COND$19026$1POZIn
                                                  (if (eqv?
                                                        g$t$19035$1POZIn
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$19028$1POZIn
                                                    (if (eqv?
                                                          g$t$19035$1POZIn
                                                          'case)
                                                      g$pp-CASE$19027$1POZIn
                                                      (if (g$memv$11826$1POZIn
                                                            g$t$19035$1POZIn
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$19029$1POZIn
                                                        (if (eqv?
                                                              g$t$19035$1POZIn
                                                              'let)
                                                          g$pp-LET$19030$1POZIn
                                                          (if (eqv?
                                                                g$t$19035$1POZIn
                                                                'begin)
                                                            g$pp-BEGIN$19031$1POZIn
                                                            (if (eqv?
                                                                  g$t$19035$1POZIn
                                                                  'do)
                                                              g$pp-DO$19032$1POZIn
                                                              (begin
                                                                '#f
                                                                '#f)))))))))))))
                                       g$head$19034$1POZIn)))))
                         (g$pr$19016$1POZIn
                           g$obj$19012$1POZIn
                           g$col$19013$1POZIn
                           '0
                           g$pp-expr$19017$1POZIn))))))
          (if g$width$19007$1POZIn
            (g$out$19009$1POZIn
              g$genwrite:newline-str$18981$1POZIn
              (g$pp$19011$1POZIn g$obj$19005$1POZIn '0))
            (g$wr$19010$1POZIn g$obj$19005$1POZIn '0))))))
   (g$pretty-width$18988$1POZIn
     g$pretty-width$19181$1POZIn
     (g$make-parameter$18976$1POZIn '72))
   (g$indent-general$18989$1POZIn
     g$indent-general$19182$1POZIn
     (g$make-parameter$18976$1POZIn '2))
   (g$max-call-head-width$18990$1POZIn
     g$max-call-head-width$19183$1POZIn
     (g$make-parameter$18976$1POZIn '3))
   (g$pretty-gensyms$18991$1POZIn
     g$pretty-gensyms$19184$1POZIn
     (g$make-parameter$18976$1POZIn '#f))
   (g$reverse-string-append$18992$1POZIn
     g$reverse-string-append$19185$1POZIn
     (case-lambda
       ((g$l$19160$1POZIn)
        (letrec* ((g$rev-string-append$19161$1POZIn
                    (case-lambda
                      ((g$l$19162$1POZIn g$i$19163$1POZIn)
                       (if (pair? g$l$19162$1POZIn)
                         ((case-lambda
                            ((g$str$19164$1POZIn)
                             ((case-lambda
                                ((g$len$19165$1POZIn)
                                 ((case-lambda
                                    ((g$result$19166$1POZIn)
                                     ((letrec ((g$loop$19167$1POZIn
                                                 (case-lambda
                                                   ((g$j$19168$1POZIn
                                                      g$k$19169$1POZIn)
                                                    (if (g$fx<?$16905$1POZIn
                                                          g$j$19168$1POZIn
                                                          g$len$19165$1POZIn)
                                                      (begin
                                                        (string-set!
                                                          g$result$19166$1POZIn
                                                          g$k$19169$1POZIn
                                                          (string-ref
                                                            g$str$19164$1POZIn
                                                            g$j$19168$1POZIn))
                                                        (g$loop$19167$1POZIn
                                                          (g$fx+$16891$1POZIn
                                                            g$j$19168$1POZIn
                                                            '1)
                                                          (g$fx+$16891$1POZIn
                                                            g$k$19169$1POZIn
                                                            '1)))
                                                      g$result$19166$1POZIn)))))
                                        g$loop$19167$1POZIn)
                                      '0
                                      (g$fx-$16893$1POZIn
                                        (g$fx-$16893$1POZIn
                                          (string-length
                                            g$result$19166$1POZIn)
                                          g$i$19163$1POZIn)
                                        g$len$19165$1POZIn))))
                                  (g$rev-string-append$19161$1POZIn
                                    (cdr g$l$19162$1POZIn)
                                    (g$fx+$16891$1POZIn
                                      g$i$19163$1POZIn
                                      g$len$19165$1POZIn)))))
                              (string-length g$str$19164$1POZIn))))
                          (car g$l$19162$1POZIn))
                         (make-string g$i$19163$1POZIn))))))
          (g$rev-string-append$19161$1POZIn g$l$19160$1POZIn '0)))))
   (g$pretty-print$18993$1POZIn
     g$pretty-print$19186$1POZIn
     (case-lambda
       ((g$obj$19170$1POZIn . g$opt$19171$1POZIn)
        ((case-lambda
           ((g$port$19172$1POZIn)
            (g$generic-write$18987$1POZIn
              g$obj$19170$1POZIn
              '#f
              (g$pretty-width$18988$1POZIn)
              (case-lambda
                ((g$s$19173$1POZIn)
                 (begin
                   (display g$s$19173$1POZIn g$port$19172$1POZIn)
                   '#t))))))
         (if (pair? g$opt$19171$1POZIn)
           (car g$opt$19171$1POZIn)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$19187$1POZIn
     g$cps/generate-reference$19452$1POZIn
     (case-lambda
       ((g$variable$19240$1POZIn)
        (g$cps/generate-operand$19191$1POZIn
          (g$make-reference$19217$1POZIn g$variable$19240$1POZIn)))))
   (g$cps/generate-literal$19188$1POZIn
     g$cps/generate-literal$19453$1POZIn
     (case-lambda
       ((g$datum$19241$1POZIn)
        (g$cps/generate-operand$19191$1POZIn
          (g$make-literal$19216$1POZIn g$datum$19241$1POZIn)))))
   (g$cps/generate-abstraction$19189$1POZIn
     g$cps/generate-abstraction$19454$1POZIn
     (case-lambda
       ((g$bvl$19242$1POZIn g$body-generator$19243$1POZIn)
        (g$cps/generate-operand$19191$1POZIn
          (g$make-user-abstraction$19218$1POZIn
            g$bvl$19242$1POZIn
            (case-lambda
              ((g$continuation-variable$19244$1POZIn)
               (g$body-generator$19243$1POZIn
                 (g$variable-continuator$19204$1POZIn
                   g$continuation-variable$19244$1POZIn)))))))))
   (g$cps/generate-abstractions$19190$1POZIn
     g$cps/generate-abstractions$19455$1POZIn
     (case-lambda
       ((g$bvls$19245$1POZIn g$body-generators$19246$1POZIn)
        (g$cps/generate-operand$19191$1POZIn
          (g$make-user-abstractions$19219$1POZIn
            g$bvls$19245$1POZIn
            (g$map$11833$1POZIn
              (case-lambda
                ((g$body-generator$19247$1POZIn)
                 (case-lambda
                   ((g$continuation-variable$19248$1POZIn)
                    (g$body-generator$19247$1POZIn
                      (g$variable-continuator$19204$1POZIn
                        g$continuation-variable$19248$1POZIn))))))
              g$body-generators$19246$1POZIn))))))
   (g$cps/generate-operand$19191$1POZIn
     g$cps/generate-operand$19456$1POZIn
     (case-lambda
       ((g$operand$19249$1POZIn)
        (case-lambda
          ((g$continuator$19250$1POZIn)
           (g$continue-with-operand$19207$1POZIn
             g$continuator$19250$1POZIn
             g$operand$19249$1POZIn))))))
   (g$cps/generate-conditional$19192$1POZIn
     g$cps/generate-conditional$19457$1POZIn
     (case-lambda
       ((g$condition-generator$19251$1POZIn
          g$consequent-generator$19252$1POZIn
          g$alternative-generator$19253$1POZIn)
        (case-lambda
          ((g$continuator$19254$1POZIn)
           (letrec* ((g$if-variable$19255$1POZIn
                       (case-lambda
                         ((g$continuation-variable$19257$1POZIn)
                          ((case-lambda
                             ((g$continuator*$19258$1POZIn)
                              (g$condition-generator$19251$1POZIn
                                (g$conditional-continuator$19203$1POZIn
                                  (case-lambda
                                    ((g$condition$19259$1POZIn)
                                     (g$make-conditional$19226$1POZIn
                                       g$condition$19259$1POZIn
                                       (g$consequent-generator$19252$1POZIn
                                         g$continuator*$19258$1POZIn)
                                       (g$alternative-generator$19253$1POZIn
                                         g$continuator*$19258$1POZIn))))))))
                           (g$variable-continuator$19204$1POZIn
                             g$continuation-variable$19257$1POZIn))))))
             (g$reify-continuation*$19209$1POZIn
               g$continuator$19254$1POZIn
               g$if-variable$19255$1POZIn
               (case-lambda
                 ((g$continuation-abstraction$19256$1POZIn)
                  (g$make-conditional-join$19227$1POZIn
                    g$continuation-abstraction$19256$1POZIn
                    g$if-variable$19255$1POZIn))))))))))
   (g$cps/generate-recursive-bind$19193$1POZIn
     g$cps/generate-recursive-bind$19458$1POZIn
     (case-lambda
       ((g$variables$19260$1POZIn
          g$generators$19261$1POZIn
          g$body-generator$19262$1POZIn)
        (case-lambda
          ((g$continuator$19263$1POZIn)
           (g$make-recursive-bind$19221$1POZIn
             g$variables$19260$1POZIn
             (g$map$11833$1POZIn
               (case-lambda
                 ((g$generator$19264$1POZIn)
                  (case-lambda
                    ((g$continuation-variable$19265$1POZIn)
                     (g$generator$19264$1POZIn
                       (g$variable-continuator$19204$1POZIn
                         g$continuation-variable$19265$1POZIn))))))
               g$generators$19261$1POZIn)
             (g$body-generator$19262$1POZIn
               (g$reified-continuator$19206$1POZIn
                 g$continuator$19263$1POZIn))))))))
   (g$cps/generate-recursive*-bind$19194$1POZIn
     g$cps/generate-recursive*-bind$19459$1POZIn
     (case-lambda
       ((g$variables$19266$1POZIn
          g$generators$19267$1POZIn
          g$body-generator$19268$1POZIn)
        (case-lambda
          ((g$continuator$19269$1POZIn)
           (g$make-recursive*-bind$19222$1POZIn
             g$variables$19266$1POZIn
             (g$map$11833$1POZIn
               (case-lambda
                 ((g$generator$19270$1POZIn)
                  (case-lambda
                    ((g$continuation-variable$19271$1POZIn)
                     (g$generator$19270$1POZIn
                       (g$variable-continuator$19204$1POZIn
                         g$continuation-variable$19271$1POZIn))))))
               g$generators$19267$1POZIn)
             (g$body-generator$19268$1POZIn
               (g$reified-continuator$19206$1POZIn
                 g$continuator$19269$1POZIn))))))))
   (g$cps/generate-recursive*-library-bind$19195$1POZIn
     g$cps/generate-recursive*-library-bind$19460$1POZIn
     (case-lambda
       ((g$name$19272$1POZIn
          g$variables$19273$1POZIn
          g$variables*$19274$1POZIn
          g$generators$19275$1POZIn
          g$body-generator$19276$1POZIn)
        (case-lambda
          ((g$continuator$19277$1POZIn)
           (g$make-recursive*-library-bind$19223$1POZIn
             g$name$19272$1POZIn
             g$variables$19273$1POZIn
             g$variables*$19274$1POZIn
             (g$map$11833$1POZIn
               (case-lambda
                 ((g$generator$19278$1POZIn)
                  (case-lambda
                    ((g$continuation-variable$19279$1POZIn)
                     (g$generator$19278$1POZIn
                       (g$variable-continuator$19204$1POZIn
                         g$continuation-variable$19279$1POZIn))))))
               g$generators$19275$1POZIn)
             (g$body-generator$19276$1POZIn
               (g$reified-continuator$19206$1POZIn
                 g$continuator$19277$1POZIn))))))))
   (g$cps/generate-sequence$19196$1POZIn
     g$cps/generate-sequence$19461$1POZIn
     (case-lambda
       ((g$generators$19280$1POZIn)
        (case-lambda
          ((g$continuator$19281$1POZIn)
           ((letrec ((g$recur$19282$1POZIn
                       (case-lambda
                         ((g$generators$19283$1POZIn)
                          ((car g$generators$19283$1POZIn)
                           ((case-lambda
                              ((g$generators$19284$1POZIn)
                               (if (pair? g$generators$19284$1POZIn)
                                 (g$effect-continuator$19202$1POZIn
                                   (case-lambda
                                     (()
                                      (g$recur$19282$1POZIn
                                        g$generators$19284$1POZIn))))
                                 g$continuator$19281$1POZIn)))
                            (cdr g$generators$19283$1POZIn)))))))
              g$recur$19282$1POZIn)
            g$generators$19280$1POZIn))))))
   (g$cps/generate-assignment$19197$1POZIn
     g$cps/generate-assignment$19462$1POZIn
     (case-lambda
       ((g$location$19285$1POZIn g$expression-generator$19286$1POZIn)
        (case-lambda
          ((g$continuator$19287$1POZIn)
           (g$expression-generator$19286$1POZIn
             (g$operand-continuator$19201$1POZIn
               (case-lambda
                 ((g$operand$19288$1POZIn)
                  (g$make-assignment$19229$1POZIn
                    g$location$19285$1POZIn
                    g$operand$19288$1POZIn
                    (g$continue-with-operand$19207$1POZIn
                      g$continuator$19287$1POZIn
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$19198$1POZIn
     g$cps/generate-declaration$19463$1POZIn
     (case-lambda
       ((g$location$19289$1POZIn g$expression-generator$19290$1POZIn)
        (case-lambda
          ((g$continuator$19291$1POZIn)
           (g$expression-generator$19290$1POZIn
             (g$operand-continuator$19201$1POZIn
               (case-lambda
                 ((g$operand$19292$1POZIn)
                  (g$make-declaration$19230$1POZIn
                    g$location$19289$1POZIn
                    g$operand$19292$1POZIn
                    (g$continue-with-operand$19207$1POZIn
                      g$continuator$19291$1POZIn
                      '(cps-void))))))))))))
   (g$cps/generate-combination$19199$1POZIn
     g$cps/generate-combination$19464$1POZIn
     (case-lambda
       ((g$operator-generator$19293$1POZIn
          g$operand-generators$19294$1POZIn)
        (g$cps/generate-subproblems$19200$1POZIn
          (g$reverse$12682$1POZIn
            (cons
              g$operator-generator$19293$1POZIn
              g$operand-generators$19294$1POZIn))
          (case-lambda
            ((g$operands$19295$1POZIn g$continuator$19296$1POZIn)
             (g$make-combination$19224$1POZIn
               (car g$operands$19295$1POZIn)
               (g$reify-continuation$19208$1POZIn
                 g$continuator$19296$1POZIn)
               (cdr g$operands$19295$1POZIn))))))))
   (g$cps/generate-subproblems$19200$1POZIn
     g$cps/generate-subproblems$19465$1POZIn
     (case-lambda
       ((g$generators$19297$1POZIn g$combiner$19298$1POZIn)
        (case-lambda
          ((g$continuator$19299$1POZIn)
           ((letrec ((g$recur$19300$1POZIn
                       (case-lambda
                         ((g$generators$19301$1POZIn
                            g$operands$19302$1POZIn)
                          (if (pair? g$generators$19301$1POZIn)
                            ((car g$generators$19301$1POZIn)
                             ((case-lambda
                                ((g$generators$19303$1POZIn)
                                 (g$operand-continuator$19201$1POZIn
                                   (case-lambda
                                     ((g$operand$19304$1POZIn)
                                      (g$recur$19300$1POZIn
                                        g$generators$19303$1POZIn
                                        (cons
                                          g$operand$19304$1POZIn
                                          g$operands$19302$1POZIn)))))))
                              (cdr g$generators$19301$1POZIn)))
                            (g$combiner$19298$1POZIn
                              g$operands$19302$1POZIn
                              g$continuator$19299$1POZIn))))))
              g$recur$19300$1POZIn)
            g$generators$19297$1POZIn
            '()))))))
   (g$operand-continuator$19201$1POZIn
     g$operand-continuator$19466$1POZIn
     (case-lambda
       ((g$generator$19305$1POZIn)
        (case-lambda
          ((g$if-operand$19306$1POZIn
             g$if-effect$19307$1POZIn
             g$if-conditional$19308$1POZIn
             g$if-variable$19309$1POZIn
             g$if-inline$19310$1POZIn)
           (begin
             g$if-effect$19307$1POZIn
             g$if-conditional$19308$1POZIn
             g$if-variable$19309$1POZIn
             g$if-inline$19310$1POZIn
             (g$if-operand$19306$1POZIn g$generator$19305$1POZIn)))))))
   (g$effect-continuator$19202$1POZIn
     g$effect-continuator$19467$1POZIn
     (case-lambda
       ((g$generator$19311$1POZIn)
        (case-lambda
          ((g$if-operand$19312$1POZIn
             g$if-effect$19313$1POZIn
             g$if-conditional$19314$1POZIn
             g$if-variable$19315$1POZIn
             g$if-inline$19316$1POZIn)
           (begin
             g$if-operand$19312$1POZIn
             g$if-conditional$19314$1POZIn
             g$if-variable$19315$1POZIn
             g$if-inline$19316$1POZIn
             (g$if-effect$19313$1POZIn g$generator$19311$1POZIn)))))))
   (g$conditional-continuator$19203$1POZIn
     g$conditional-continuator$19468$1POZIn
     (case-lambda
       ((g$generator$19317$1POZIn)
        (case-lambda
          ((g$if-operand$19318$1POZIn
             g$if-effect$19319$1POZIn
             g$if-conditional$19320$1POZIn
             g$if-variable$19321$1POZIn
             g$if-inline$19322$1POZIn)
           (begin
             g$if-operand$19318$1POZIn
             g$if-effect$19319$1POZIn
             g$if-variable$19321$1POZIn
             g$if-inline$19322$1POZIn
             (g$if-conditional$19320$1POZIn
               g$generator$19317$1POZIn)))))))
   (g$variable-continuator$19204$1POZIn
     g$variable-continuator$19469$1POZIn
     (case-lambda
       ((g$variable$19323$1POZIn)
        (case-lambda
          ((g$if-operand$19324$1POZIn
             g$if-effect$19325$1POZIn
             g$if-conditional$19326$1POZIn
             g$if-variable$19327$1POZIn
             g$if-inline$19328$1POZIn)
           (begin
             g$if-operand$19324$1POZIn
             g$if-effect$19325$1POZIn
             g$if-variable$19327$1POZIn
             g$if-inline$19328$1POZIn
             (g$if-variable$19327$1POZIn g$variable$19323$1POZIn)))))))
   (g$inline-continuator$19205$1POZIn
     g$inline-continuator$19470$1POZIn
     (case-lambda
       ((g$continuation$19329$1POZIn)
        (case-lambda
          ((g$if-operand$19330$1POZIn
             g$if-effect$19331$1POZIn
             g$if-conditional$19332$1POZIn
             g$if-variable$19333$1POZIn
             g$if-inline$19334$1POZIn)
           (begin
             g$if-operand$19330$1POZIn
             g$if-effect$19331$1POZIn
             g$if-conditional$19332$1POZIn
             g$if-variable$19333$1POZIn
             (g$if-inline$19334$1POZIn
               g$continuation$19329$1POZIn)))))))
   (g$reified-continuator$19206$1POZIn
     g$reified-continuator$19471$1POZIn
     (case-lambda
       ((g$continuator$19335$1POZIn)
        (case-lambda
          ((g$if-operand$19336$1POZIn
             g$if-effect$19337$1POZIn
             g$if-conditional$19338$1POZIn
             g$if-variable$19339$1POZIn
             g$if-inline$19340$1POZIn)
           (begin
             g$if-operand$19336$1POZIn
             g$if-effect$19337$1POZIn
             g$if-conditional$19338$1POZIn
             (g$reify-continuation*$19209$1POZIn
               g$continuator$19335$1POZIn
               g$if-variable$19339$1POZIn
               g$if-inline$19340$1POZIn)))))))
   (g$continue-with-operand$19207$1POZIn
     g$continue-with-operand$19472$1POZIn
     (case-lambda
       ((g$continuator$19341$1POZIn g$operand$19342$1POZIn)
        (g$continuator$19341$1POZIn
          (case-lambda
            ((g$generator$19343$1POZIn)
             (g$generator$19343$1POZIn g$operand$19342$1POZIn)))
          (case-lambda
            ((g$generator$19344$1POZIn) (g$generator$19344$1POZIn)))
          (case-lambda
            ((g$generator$19345$1POZIn)
             (g$generator$19345$1POZIn
               (g$make-truth-test$19231$1POZIn
                 g$operand$19342$1POZIn))))
          (case-lambda
            ((g$continuation-variable$19346$1POZIn)
             (g$make-return$19225$1POZIn
               (g$make-reference$19217$1POZIn
                 g$continuation-variable$19346$1POZIn)
               (list g$operand$19342$1POZIn))))
          (case-lambda
            ((g$continuation-abstraction$19347$1POZIn)
             (g$make-return$19225$1POZIn
               g$continuation-abstraction$19347$1POZIn
               (list g$operand$19342$1POZIn))))))))
   (g$reify-continuation$19208$1POZIn
     g$reify-continuation$19473$1POZIn
     (case-lambda
       ((g$continuator$19348$1POZIn)
        (g$continuator$19348$1POZIn
          g$operand-continuation-reifier$19211$1POZIn
          g$effect-continuation-reifier$19213$1POZIn
          g$conditional-continuation-reifier$19215$1POZIn
          (case-lambda
            ((g$variable$19349$1POZIn)
             (g$make-reference$19217$1POZIn g$variable$19349$1POZIn)))
          (case-lambda
            ((g$continuation$19350$1POZIn)
             g$continuation$19350$1POZIn))))))
   (g$reify-continuation*$19209$1POZIn
     g$reify-continuation*$19474$1POZIn
     (case-lambda
       ((g$continuator$19351$1POZIn
          g$if-variable$19352$1POZIn
          g$if-inline$19353$1POZIn)
        (g$continuator$19351$1POZIn
          (g$operand-continuation-reifier*$19210$1POZIn
            g$if-inline$19353$1POZIn)
          (g$effect-continuation-reifier*$19212$1POZIn
            g$if-inline$19353$1POZIn)
          (g$conditional-continuation-reifier*$19214$1POZIn
            g$if-inline$19353$1POZIn)
          g$if-variable$19352$1POZIn
          g$if-inline$19353$1POZIn))))
   (g$operand-continuation-reifier*$19210$1POZIn
     g$operand-continuation-reifier*$19475$1POZIn
     (case-lambda
       ((g$receiver$19354$1POZIn)
        (case-lambda
          ((g$generator$19355$1POZIn)
           (g$receiver$19354$1POZIn
             ((case-lambda
                ((g$variable$19356$1POZIn)
                 (g$make-continuation-abstraction$19220$1POZIn
                   (list g$variable$19356$1POZIn)
                   (g$generator$19355$1POZIn
                     (g$make-reference$19217$1POZIn
                       g$variable$19356$1POZIn)))))
              (g$generate-variable$19232$1POZIn 'V))))))))
   (g$operand-continuation-reifier$19211$1POZIn
     g$operand-continuation-reifier$19476$1POZIn
     (g$operand-continuation-reifier*$19210$1POZIn values))
   (g$effect-continuation-reifier*$19212$1POZIn
     g$effect-continuation-reifier*$19477$1POZIn
     (case-lambda
       ((g$receiver$19357$1POZIn)
        (case-lambda
          ((g$generator$19358$1POZIn)
           (g$receiver$19357$1POZIn
             ((case-lambda
                ((g$variable$19359$1POZIn)
                 (g$make-continuation-abstraction$19220$1POZIn
                   g$variable$19359$1POZIn
                   (g$generator$19358$1POZIn))))
              (g$generate-variable$19232$1POZIn 'IGNORE))))))))
   (g$effect-continuation-reifier$19213$1POZIn
     g$effect-continuation-reifier$19478$1POZIn
     (g$effect-continuation-reifier*$19212$1POZIn values))
   (g$conditional-continuation-reifier*$19214$1POZIn
     g$conditional-continuation-reifier*$19479$1POZIn
     (case-lambda
       ((g$receiver$19360$1POZIn)
        (case-lambda
          ((g$generator$19361$1POZIn)
           (g$receiver$19360$1POZIn
             ((case-lambda
                ((g$variable$19362$1POZIn)
                 (g$make-continuation-abstraction$19220$1POZIn
                   (list g$variable$19362$1POZIn)
                   (g$generator$19361$1POZIn
                     (g$make-truth-test$19231$1POZIn
                       (g$make-reference$19217$1POZIn
                         g$variable$19362$1POZIn))))))
              (g$generate-variable$19232$1POZIn 'T))))))))
   (g$conditional-continuation-reifier$19215$1POZIn
     g$conditional-continuation-reifier$19480$1POZIn
     (g$conditional-continuation-reifier*$19214$1POZIn values))
   (g$make-literal$19216$1POZIn
     g$make-literal$19481$1POZIn
     (case-lambda
       ((g$datum$19363$1POZIn) (list 'quote g$datum$19363$1POZIn))))
   (g$make-reference$19217$1POZIn
     g$make-reference$19482$1POZIn
     (case-lambda ((g$variable$19364$1POZIn) g$variable$19364$1POZIn)))
   (g$make-user-abstraction$19218$1POZIn
     g$make-user-abstraction$19483$1POZIn
     (case-lambda
       ((g$bvl$19365$1POZIn g$body-constructor$19366$1POZIn)
        ((case-lambda
           ((g$continuation$19367$1POZIn)
            (list
              'case-lambda
              (list
                (cons g$continuation$19367$1POZIn g$bvl$19365$1POZIn)
                (g$body-constructor$19366$1POZIn
                  g$continuation$19367$1POZIn)))))
         (g$generate-variable$19232$1POZIn 'C)))))
   (g$make-user-abstractions$19219$1POZIn
     g$make-user-abstractions$19484$1POZIn
     (case-lambda
       ((g$bvls$19368$1POZIn g$body-constructors$19369$1POZIn)
        ((case-lambda
           ((g$continuation$19370$1POZIn)
            (cons
              'case-lambda
              (g$map$11833$1POZIn
                (case-lambda
                  ((g$bvl$19371$1POZIn g$body-constructor$19372$1POZIn)
                   (list
                     (cons
                       g$continuation$19370$1POZIn
                       g$bvl$19371$1POZIn)
                     (g$body-constructor$19372$1POZIn
                       g$continuation$19370$1POZIn))))
                g$bvls$19368$1POZIn
                g$body-constructors$19369$1POZIn))))
         (g$generate-variable$19232$1POZIn 'C)))))
   (g$make-continuation-abstraction$19220$1POZIn
     g$make-continuation-abstraction$19485$1POZIn
     (case-lambda
       ((g$bvl$19373$1POZIn g$body$19374$1POZIn)
        (list
          'case-lambda
          (list g$bvl$19373$1POZIn g$body$19374$1POZIn)))))
   (g$make-recursive-bind$19221$1POZIn
     g$make-recursive-bind$19486$1POZIn
     (case-lambda
       ((g$variables$19375$1POZIn
          g$constructors$19376$1POZIn
          g$body$19377$1POZIn)
        (list
          'letrec
          (g$map$11833$1POZIn
            (case-lambda
              ((g$variable$19378$1POZIn g$constructor$19379$1POZIn)
               (list
                 g$variable$19378$1POZIn
                 (list
                   (g$make-user-abstraction$19218$1POZIn
                     '()
                     g$constructor$19379$1POZIn)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$19378$1POZIn))))))
            g$variables$19375$1POZIn
            g$constructors$19376$1POZIn)
          g$body$19377$1POZIn))))
   (g$make-recursive*-bind$19222$1POZIn
     g$make-recursive*-bind$19487$1POZIn
     (case-lambda
       ((g$variables$19380$1POZIn
          g$constructors$19381$1POZIn
          g$body$19382$1POZIn)
        (list
          'letrec*
          (g$map$11833$1POZIn
            (case-lambda
              ((g$variable$19383$1POZIn g$constructor$19384$1POZIn)
               (list
                 g$variable$19383$1POZIn
                 (list
                   (g$make-user-abstraction$19218$1POZIn
                     '()
                     g$constructor$19384$1POZIn)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$19383$1POZIn))))))
            g$variables$19380$1POZIn
            g$constructors$19381$1POZIn)
          g$body$19382$1POZIn))))
   (g$make-recursive*-library-bind$19223$1POZIn
     g$make-recursive*-library-bind$19488$1POZIn
     (case-lambda
       ((g$name$19385$1POZIn
          g$variables$19386$1POZIn
          g$variables*$19387$1POZIn
          g$constructors$19388$1POZIn
          g$body$19389$1POZIn)
        (list
          'library-letrec*
          g$name$19385$1POZIn
          (g$map$11833$1POZIn
            (case-lambda
              ((g$variable$19390$1POZIn
                 g$variable*$19391$1POZIn
                 g$constructor$19392$1POZIn)
               (list
                 g$variable$19390$1POZIn
                 g$variable*$19391$1POZIn
                 (list
                   (g$make-user-abstraction$19218$1POZIn
                     '()
                     g$constructor$19392$1POZIn)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$19390$1POZIn))))))
            g$variables$19386$1POZIn
            g$variables*$19387$1POZIn
            g$constructors$19388$1POZIn)
          g$body$19389$1POZIn))))
   (g$make-combination$19224$1POZIn
     g$make-combination$19489$1POZIn
     (case-lambda
       ((g$operator$19393$1POZIn
          g$continuation$19394$1POZIn
          g$operands$19395$1POZIn)
        (cons
          g$operator$19393$1POZIn
          (cons g$continuation$19394$1POZIn g$operands$19395$1POZIn)))))
   (g$make-return$19225$1POZIn
     g$make-return$19490$1POZIn
     (case-lambda
       ((g$continuation$19396$1POZIn g$operands$19397$1POZIn)
        (cons g$continuation$19396$1POZIn g$operands$19397$1POZIn))))
   (g$make-conditional$19226$1POZIn
     g$make-conditional$19491$1POZIn
     (case-lambda
       ((g$condition$19398$1POZIn
          g$consequent$19399$1POZIn
          g$alternative$19400$1POZIn)
        (list
          'if
          g$condition$19398$1POZIn
          g$consequent$19399$1POZIn
          g$alternative$19400$1POZIn))))
   (g$make-conditional-join$19227$1POZIn
     g$make-conditional-join$19492$1POZIn
     (case-lambda
       ((g$continuation$19401$1POZIn g$constructor$19402$1POZIn)
        ((case-lambda
           ((g$variable$19403$1POZIn)
            (g$make-let$19228$1POZIn
              (list g$variable$19403$1POZIn)
              (list g$continuation$19401$1POZIn)
              (g$constructor$19402$1POZIn g$variable$19403$1POZIn))))
         (g$generate-variable$19232$1POZIn 'J)))))
   (g$make-let$19228$1POZIn
     g$make-let$19493$1POZIn
     (case-lambda
       ((g$variables$19404$1POZIn
          g$expressions$19405$1POZIn
          g$body$19406$1POZIn)
        (cons
          (list
            'case-lambda
            (list g$variables$19404$1POZIn g$body$19406$1POZIn))
          g$expressions$19405$1POZIn))))
   (g$make-assignment$19229$1POZIn
     g$make-assignment$19494$1POZIn
     (case-lambda
       ((g$location$19407$1POZIn
          g$operand$19408$1POZIn
          g$expression$19409$1POZIn)
        (list
          'begin
          (list 'set! g$location$19407$1POZIn g$operand$19408$1POZIn)
          g$expression$19409$1POZIn))))
   (g$make-declaration$19230$1POZIn
     g$make-declaration$19495$1POZIn
     (case-lambda
       ((g$location$19410$1POZIn
          g$operand$19411$1POZIn
          g$expression$19412$1POZIn)
        (list
          'begin
          (list 'define g$location$19410$1POZIn g$operand$19411$1POZIn)
          g$expression$19412$1POZIn))))
   (g$make-truth-test$19231$1POZIn
     g$make-truth-test$19496$1POZIn
     (case-lambda ((g$operand$19413$1POZIn) g$operand$19413$1POZIn)))
   (g$generate-variable$19232$1POZIn
     g$generate-variable$19497$1POZIn
     (case-lambda ((g$name$19414$1POZIn) (gensym g$name$19414$1POZIn))))
   (g$parse$19233$1POZIn
     g$parse$19498$1POZIn
     (case-lambda
       ((g$x$19415$1POZIn)
        (if (pair? g$x$19415$1POZIn)
          ((case-lambda
             ((g$t$19416$1POZIn)
              (if (eqv? g$t$19416$1POZIn 'quote)
                (g$cps/generate-literal$19188$1POZIn
                  (g$cadr$12684$1POZIn g$x$19415$1POZIn))
                (if (eqv? g$t$19416$1POZIn 'if)
                  (g$cps/generate-conditional$19192$1POZIn
                    (g$parse$19233$1POZIn
                      (g$cadr$12684$1POZIn g$x$19415$1POZIn))
                    (g$parse$19233$1POZIn
                      (g$caddr$12690$1POZIn g$x$19415$1POZIn))
                    (g$parse$19233$1POZIn
                      (g$cadddr$12702$1POZIn g$x$19415$1POZIn)))
                  (if (eqv? g$t$19416$1POZIn 'case-lambda)
                    ((case-lambda
                       ((g$d$19417$1POZIn)
                        (g$cps/generate-abstractions$19190$1POZIn
                          (g$map$11833$1POZIn car g$d$19417$1POZIn)
                          (g$map$11833$1POZIn
                            (case-lambda
                              ((g$e$19418$1POZIn)
                               (g$cps/generate-sequence$19196$1POZIn
                                 (g$map$11833$1POZIn
                                   g$parse$19233$1POZIn
                                   (cdr g$e$19418$1POZIn)))))
                            g$d$19417$1POZIn))))
                     (cdr g$x$19415$1POZIn))
                    (if (eqv? g$t$19416$1POZIn 'letrec)
                      ((case-lambda
                         ((g$bindings$19419$1POZIn g$body*$19420$1POZIn)
                          ((case-lambda
                             ((g$lhs*$19421$1POZIn g$rhs*$19422$1POZIn)
                              ((case-lambda
                                 ((g$t*$19423$1POZIn
                                    g$tmps$19424$1POZIn)
                                  ((case-lambda
                                     ((g$s*$19425$1POZIn)
                                      (g$parse$19233$1POZIn
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$19421$1POZIn
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$19423$1POZIn
                                                    (append
                                                      g$s*$19425$1POZIn
                                                      g$body*$19420$1POZIn)))
                                                g$rhs*$19422$1POZIn)))
                                          g$tmps$19424$1POZIn))))
                                   (g$map$11833$1POZIn
                                     (case-lambda
                                       ((g$i$19426$1POZIn
                                          g$t$19427$1POZIn)
                                        (list
                                          'set!
                                          g$i$19426$1POZIn
                                          g$t$19427$1POZIn)))
                                     g$lhs*$19421$1POZIn
                                     g$t*$19423$1POZIn))))
                               (g$map$11833$1POZIn
                                 gensym
                                 g$lhs*$19421$1POZIn)
                               (g$map$11833$1POZIn
                                 (case-lambda
                                   ((g$x$19428$1POZIn) 'uninitialized))
                                 g$lhs*$19421$1POZIn))))
                           (g$map$11833$1POZIn
                             car
                             g$bindings$19419$1POZIn)
                           (g$map$11833$1POZIn
                             g$cadr$12684$1POZIn
                             g$bindings$19419$1POZIn))))
                       (g$cadr$12684$1POZIn g$x$19415$1POZIn)
                       (g$cddr$12686$1POZIn g$x$19415$1POZIn))
                      (if (eqv? g$t$19416$1POZIn 'letrec*)
                        ((case-lambda
                           ((g$bindings$19429$1POZIn
                              g$body*$19430$1POZIn)
                            ((case-lambda
                               ((g$lhs*$19431$1POZIn
                                  g$rhs*$19432$1POZIn)
                                (g$cps/generate-recursive*-bind$19194$1POZIn
                                  g$lhs*$19431$1POZIn
                                  (g$map$11833$1POZIn
                                    g$parse$19233$1POZIn
                                    g$rhs*$19432$1POZIn)
                                  (g$parse$19233$1POZIn
                                    (cons
                                      'begin
                                      g$body*$19430$1POZIn)))))
                             (g$map$11833$1POZIn
                               car
                               g$bindings$19429$1POZIn)
                             (g$map$11833$1POZIn
                               g$cadr$12684$1POZIn
                               g$bindings$19429$1POZIn))))
                         (g$cadr$12684$1POZIn g$x$19415$1POZIn)
                         (g$cddr$12686$1POZIn g$x$19415$1POZIn))
                        (if (eqv? g$t$19416$1POZIn 'library-letrec*)
                          ((case-lambda
                             ((g$name$19433$1POZIn g$x$19434$1POZIn)
                              ((case-lambda
                                 ((g$bindings$19435$1POZIn
                                    g$body*$19436$1POZIn)
                                  ((case-lambda
                                     ((g$lhs*$19437$1POZIn
                                        g$lhs**$19438$1POZIn
                                        g$rhs*$19439$1POZIn)
                                      (g$cps/generate-recursive*-library-bind$19195$1POZIn
                                        g$name$19433$1POZIn
                                        g$lhs*$19437$1POZIn
                                        g$lhs**$19438$1POZIn
                                        (g$map$11833$1POZIn
                                          g$parse$19233$1POZIn
                                          g$rhs*$19439$1POZIn)
                                        (g$parse$19233$1POZIn
                                          (cons
                                            'begin
                                            g$body*$19436$1POZIn)))))
                                   (g$map$11833$1POZIn
                                     car
                                     g$bindings$19435$1POZIn)
                                   (g$map$11833$1POZIn
                                     g$cadr$12684$1POZIn
                                     g$bindings$19435$1POZIn)
                                   (g$map$11833$1POZIn
                                     g$caddr$12690$1POZIn
                                     g$bindings$19435$1POZIn))))
                               (g$cadr$12684$1POZIn g$x$19434$1POZIn)
                               (g$cddr$12686$1POZIn g$x$19434$1POZIn))))
                           (g$cadr$12684$1POZIn g$x$19415$1POZIn)
                           (cdr g$x$19415$1POZIn))
                          (if (eqv? g$t$19416$1POZIn 'begin)
                            (g$cps/generate-sequence$19196$1POZIn
                              (g$map$11833$1POZIn
                                g$parse$19233$1POZIn
                                (cdr g$x$19415$1POZIn)))
                            (if (eqv? g$t$19416$1POZIn 'set!)
                              (g$cps/generate-assignment$19197$1POZIn
                                (g$cadr$12684$1POZIn g$x$19415$1POZIn)
                                (g$parse$19233$1POZIn
                                  (g$caddr$12690$1POZIn
                                    g$x$19415$1POZIn)))
                              (if (eqv? g$t$19416$1POZIn 'define)
                                (g$cps/generate-declaration$19198$1POZIn
                                  (g$cadr$12684$1POZIn g$x$19415$1POZIn)
                                  (g$parse$19233$1POZIn
                                    (g$caddr$12690$1POZIn
                                      g$x$19415$1POZIn)))
                                (begin
                                  '#f
                                  (if (list? g$x$19415$1POZIn)
                                    (g$cps/generate-combination$19199$1POZIn
                                      (g$parse$19233$1POZIn
                                        (car g$x$19415$1POZIn))
                                      (g$map$11833$1POZIn
                                        g$parse$19233$1POZIn
                                        (cdr g$x$19415$1POZIn)))
                                    (error
                                      'rewrite
                                      '"invalid form ~s ~s"
                                      g$x$19415$1POZIn
                                      (list?
                                        g$x$19415$1POZIn)))))))))))))))
           (car g$x$19415$1POZIn))
          (if (g$symbol?$12665$1POZIn g$x$19415$1POZIn)
            (g$cps/generate-reference$19187$1POZIn g$x$19415$1POZIn)
            (begin
              '#f
              (g$cps/generate-literal$19188$1POZIn
                g$x$19415$1POZIn)))))))
   (g$starts-with?$19234$1POZIn
     g$starts-with?$19499$1POZIn
     (case-lambda
       ((g$str$19440$1POZIn g$sub$19441$1POZIn)
        (clr-call-internal
          'system.string
          'startswith
          g$str$19440$1POZIn
          g$sub$19441$1POZIn))))
   (g$ends-with?$19235$1POZIn
     g$ends-with?$19500$1POZIn
     (case-lambda
       ((g$str$19442$1POZIn g$sub$19443$1POZIn)
        (clr-call-internal
          'system.string
          'endswith
          g$str$19442$1POZIn
          g$sub$19443$1POZIn))))
   (g$clr-generator?$19236$1POZIn
     g$clr-generator?$19501$1POZIn
     (case-lambda
       ((g$o$19444$1POZIn)
        (if (g$symbol?$12665$1POZIn g$o$19444$1POZIn)
          (begin
            '#f
            ((case-lambda
               ((g$o$19445$1POZIn)
                (if (g$starts-with?$19234$1POZIn
                      g$o$19445$1POZIn
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$19235$1POZIn
                      g$o$19445$1POZIn
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$19444$1POZIn)))
          '#f))))
   (g$fix-primitives$19237$1POZIn
     g$fix-primitives$19502$1POZIn
     (case-lambda
       ((g$e$19446$1POZIn)
        (if (if (pair? g$e$19446$1POZIn)
              (begin '#f (list? g$e$19446$1POZIn))
              '#f)
          ((case-lambda
             ((g$o$19447$1POZIn)
              (if (eq? g$o$19447$1POZIn 'quote)
                g$e$19446$1POZIn
                (if (begin
                      '#f
                      (g$clr-generator?$19236$1POZIn g$o$19447$1POZIn))
                  (if (pair? (cdr g$e$19446$1POZIn))
                    (list
                      (g$fix-primitives$19237$1POZIn
                        (g$cadr$12684$1POZIn g$e$19446$1POZIn))
                      (cons
                        g$o$19447$1POZIn
                        (g$map$11833$1POZIn
                          g$fix-primitives$19237$1POZIn
                          (g$cddr$12686$1POZIn g$e$19446$1POZIn))))
                    g$e$19446$1POZIn)
                  (begin
                    '#f
                    (cons
                      (g$fix-primitives$19237$1POZIn g$o$19447$1POZIn)
                      (g$map$11833$1POZIn
                        g$fix-primitives$19237$1POZIn
                        (cdr g$e$19446$1POZIn))))))))
           (car g$e$19446$1POZIn))
          g$e$19446$1POZIn))))
   (g$parse->cps$19238$1POZIn
     g$parse->cps$19503$1POZIn
     (case-lambda
       ((g$e$19448$1POZIn g$var$19449$1POZIn)
        ((g$parse$19233$1POZIn g$e$19448$1POZIn)
         (g$variable-continuator$19204$1POZIn g$var$19449$1POZIn)))))
   (g$convert->cps$19239$1POZIn
     g$convert->cps$19504$1POZIn
     (case-lambda
       ((g$e$19450$1POZIn g$var$19451$1POZIn)
        (g$fix-primitives$19237$1POZIn
          (g$parse->cps$19238$1POZIn
            g$e$19450$1POZIn
            g$var$19451$1POZIn))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$19505$1POZIn
     g$current-primitive-locations$19550$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda ((g$x$19511$1POZIn) '#f))
       (case-lambda
         ((g$p$19512$1POZIn)
          (begin
            (if (not (g$procedure?$12667$1POZIn g$p$19512$1POZIn))
              (g$assertion-error$24317$1POZIn
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$19512$1POZIn)))))
   (g$mutable?$19506$1POZIn
     g$mutable?$19551$1POZIn
     (case-lambda
       ((g$x$19513$1POZIn)
        (letrec* ((g$simple?$19514$1POZIn
                    (case-lambda
                      ((g$x$19515$1POZIn)
                       ((case-lambda
                          ((g$t$19516$1POZIn)
                           (if g$t$19516$1POZIn
                             g$t$19516$1POZIn
                             ((case-lambda
                                ((g$t$19517$1POZIn)
                                 (if g$t$19517$1POZIn
                                   g$t$19517$1POZIn
                                   ((case-lambda
                                      ((g$t$19518$1POZIn)
                                       (if g$t$19518$1POZIn
                                         g$t$19518$1POZIn
                                         ((case-lambda
                                            ((g$t$19519$1POZIn)
                                             (if g$t$19519$1POZIn
                                               g$t$19519$1POZIn
                                               ((case-lambda
                                                  ((g$t$19520$1POZIn)
                                                   (if g$t$19520$1POZIn
                                                     g$t$19520$1POZIn
                                                     ((case-lambda
                                                        ((g$t$19521$1POZIn)
                                                         (if g$t$19521$1POZIn
                                                           g$t$19521$1POZIn
                                                           (begin
                                                             '#f
                                                             (g$number?$13600$1POZIn
                                                               g$x$19515$1POZIn)))))
                                                      (g$bytevector?$12664$1POZIn
                                                        g$x$19515$1POZIn)))))
                                                (string?
                                                  g$x$19515$1POZIn)))))
                                          (g$boolean?$12666$1POZIn
                                            g$x$19515$1POZIn)))))
                                    (g$symbol?$12665$1POZIn
                                      g$x$19515$1POZIn)))))
                              (g$char?$12662$1POZIn
                                g$x$19515$1POZIn)))))
                        (null? g$x$19515$1POZIn))))))
          (not (g$simple?$19514$1POZIn g$x$19513$1POZIn))))))
   (g$rewriter$19507$1POZIn
     g$rewriter$19552$1POZIn
     (case-lambda
       ((g$quote-hack?$19522$1POZIn)
        (letrec* ((g$f$19523$1POZIn
                    (case-lambda
                      ((g$x$19524$1POZIn)
                       (if (pair? g$x$19524$1POZIn)
                         ((case-lambda
                            ((g$t$19525$1POZIn)
                             (if (eqv? g$t$19525$1POZIn 'quote)
                               (if (if g$quote-hack?$19522$1POZIn
                                     (begin
                                       '#f
                                       (g$mutable?$19506$1POZIn
                                         (g$cadr$12684$1POZIn
                                           g$x$19524$1POZIn)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$19526$1POZIn)
                                     (begin
                                       (set-symbol-value!
                                         g$g$19526$1POZIn
                                         (g$cadr$12684$1POZIn
                                           g$x$19524$1POZIn))
                                       g$g$19526$1POZIn)))
                                  (gensym 'weak-temp))
                                 (begin '#f g$x$19524$1POZIn))
                               (if (eqv? g$t$19525$1POZIn 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$11833$1POZIn
                                     (case-lambda
                                       ((g$x$19527$1POZIn)
                                        (cons
                                          (car g$x$19527$1POZIn)
                                          (g$map$11833$1POZIn
                                            g$f$19523$1POZIn
                                            (cdr g$x$19527$1POZIn)))))
                                     (cdr g$x$19524$1POZIn)))
                                 (if (eqv? g$t$19525$1POZIn 'lambda)
                                   (g$cons*$11835$1POZIn
                                     'lambda
                                     (g$cadr$12684$1POZIn
                                       g$x$19524$1POZIn)
                                     (g$map$11833$1POZIn
                                       g$f$19523$1POZIn
                                       (g$cddr$12686$1POZIn
                                         g$x$19524$1POZIn)))
                                   (if (eqv? g$t$19525$1POZIn 'letrec)
                                     ((case-lambda
                                        ((g$bindings$19528$1POZIn
                                           g$body*$19529$1POZIn)
                                         ((case-lambda
                                            ((g$lhs*$19530$1POZIn
                                               g$rhs*$19531$1POZIn)
                                             (g$cons*$11835$1POZIn
                                               'letrec
                                               (g$map$11833$1POZIn
                                                 list
                                                 g$lhs*$19530$1POZIn
                                                 (g$map$11833$1POZIn
                                                   g$f$19523$1POZIn
                                                   g$rhs*$19531$1POZIn))
                                               (g$map$11833$1POZIn
                                                 g$f$19523$1POZIn
                                                 g$body*$19529$1POZIn))))
                                          (g$map$11833$1POZIn
                                            car
                                            g$bindings$19528$1POZIn)
                                          (g$map$11833$1POZIn
                                            g$cadr$12684$1POZIn
                                            g$bindings$19528$1POZIn))))
                                      (g$cadr$12684$1POZIn
                                        g$x$19524$1POZIn)
                                      (g$cddr$12686$1POZIn
                                        g$x$19524$1POZIn))
                                     (if (eqv?
                                           g$t$19525$1POZIn
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$19532$1POZIn
                                             g$body*$19533$1POZIn)
                                           ((case-lambda
                                              ((g$lhs*$19534$1POZIn
                                                 g$rhs*$19535$1POZIn)
                                               (g$cons*$11835$1POZIn
                                                 'letrec*
                                                 (g$map$11833$1POZIn
                                                   list
                                                   g$lhs*$19534$1POZIn
                                                   (g$map$11833$1POZIn
                                                     g$f$19523$1POZIn
                                                     g$rhs*$19535$1POZIn))
                                                 (g$map$11833$1POZIn
                                                   g$f$19523$1POZIn
                                                   g$body*$19533$1POZIn))))
                                            (g$map$11833$1POZIn
                                              car
                                              g$bindings$19532$1POZIn)
                                            (g$map$11833$1POZIn
                                              g$cadr$12684$1POZIn
                                              g$bindings$19532$1POZIn))))
                                        (g$cadr$12684$1POZIn
                                          g$x$19524$1POZIn)
                                        (g$cddr$12686$1POZIn
                                          g$x$19524$1POZIn))
                                       (if (eqv?
                                             g$t$19525$1POZIn
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$19536$1POZIn
                                               g$x$19537$1POZIn)
                                             ((case-lambda
                                                ((g$bindings$19538$1POZIn
                                                   g$body*$19539$1POZIn)
                                                 ((case-lambda
                                                    ((g$lhs*$19540$1POZIn
                                                       g$lhs**$19541$1POZIn
                                                       g$rhs*$19542$1POZIn)
                                                     (g$cons*$11835$1POZIn
                                                       'library-letrec*
                                                       g$name$19536$1POZIn
                                                       (g$map$11833$1POZIn
                                                         list
                                                         g$lhs*$19540$1POZIn
                                                         g$lhs**$19541$1POZIn
                                                         (g$map$11833$1POZIn
                                                           g$f$19523$1POZIn
                                                           g$rhs*$19542$1POZIn))
                                                       (g$map$11833$1POZIn
                                                         g$f$19523$1POZIn
                                                         g$body*$19539$1POZIn))))
                                                  (g$map$11833$1POZIn
                                                    car
                                                    g$bindings$19538$1POZIn)
                                                  (g$map$11833$1POZIn
                                                    g$cadr$12684$1POZIn
                                                    g$bindings$19538$1POZIn)
                                                  (g$map$11833$1POZIn
                                                    g$caddr$12690$1POZIn
                                                    g$bindings$19538$1POZIn))))
                                              (g$cadr$12684$1POZIn
                                                g$x$19537$1POZIn)
                                              (g$cddr$12686$1POZIn
                                                g$x$19537$1POZIn))))
                                          (g$cadr$12684$1POZIn
                                            g$x$19524$1POZIn)
                                          (cdr g$x$19524$1POZIn))
                                         (if (eqv?
                                               g$t$19525$1POZIn
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$11833$1POZIn
                                               g$f$19523$1POZIn
                                               (cdr g$x$19524$1POZIn)))
                                           (if (eqv?
                                                 g$t$19525$1POZIn
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$12684$1POZIn
                                                 g$x$19524$1POZIn)
                                               (g$f$19523$1POZIn
                                                 (g$caddr$12690$1POZIn
                                                   g$x$19524$1POZIn)))
                                             (if (eqv?
                                                   g$t$19525$1POZIn
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$19543$1POZIn)
                                                   ((case-lambda
                                                      ((g$t$19544$1POZIn)
                                                       (if g$t$19544$1POZIn
                                                         ((case-lambda
                                                            ((g$loc$19545$1POZIn)
                                                             g$loc$19545$1POZIn))
                                                          g$t$19544$1POZIn)
                                                         (begin
                                                           '#f
                                                           g$op$19543$1POZIn))))
                                                    ((g$current-primitive-locations$19505$1POZIn)
                                                     g$op$19543$1POZIn))))
                                                (g$cadr$12684$1POZIn
                                                  g$x$19524$1POZIn))
                                               (if (eqv?
                                                     g$t$19525$1POZIn
                                                     'define)
                                                 g$x$19524$1POZIn
                                                 (begin
                                                   '#f
                                                   (if (list?
                                                         g$x$19524$1POZIn)
                                                     (g$map$11833$1POZIn
                                                       g$f$19523$1POZIn
                                                       g$x$19524$1POZIn)
                                                     (error
                                                       'rewrite
                                                       '"invalid form ~s ~s"
                                                       g$x$19524$1POZIn
                                                       (list?
                                                         g$x$19524$1POZIn))))))))))))))))
                          (car g$x$19524$1POZIn))
                         (begin '#f g$x$19524$1POZIn))))))
          g$f$19523$1POZIn))))
   (g$expanded->core$19508$1POZIn
     g$expanded->core$19553$1POZIn
     (case-lambda
       ((g$x$19546$1POZIn)
        ((g$rewriter$19507$1POZIn '#t) g$x$19546$1POZIn))))
   (g$compile-core-expr$19509$1POZIn
     g$compile-core-expr$19554$1POZIn
     (case-lambda
       ((g$x$19547$1POZIn)
        ((g$rewriter$19507$1POZIn '#f) g$x$19547$1POZIn))))
   (g$compile-core-expr-to-port$19510$1POZIn
     g$compile-core-expr-to-port$19555$1POZIn
     (case-lambda
       ((g$x$19548$1POZIn g$p$19549$1POZIn)
        (g$pretty-print$19186$1POZIn
          ((g$rewriter$19507$1POZIn '#f) g$x$19548$1POZIn)
          g$p$19549$1POZIn)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$19556$1POZIn
     g$make-collection$19765$1POZIn
     (case-lambda
       (()
        ((case-lambda
           ((g$set$19619$1POZIn)
            (letrec* ((g$set-cons$19620$1POZIn
                        (case-lambda
                          ((g$x$19624$1POZIn g$ls$19625$1POZIn)
                           (if (g$memq$11825$1POZIn
                                 g$x$19624$1POZIn
                                 g$ls$19625$1POZIn)
                             g$ls$19625$1POZIn
                             (begin
                               '#f
                               (cons
                                 g$x$19624$1POZIn
                                 g$ls$19625$1POZIn)))))))
              (case-lambda
                (() g$set$19619$1POZIn)
                ((g$x$19621$1POZIn)
                 (set! g$set$19619$1POZIn
                   (g$set-cons$19620$1POZIn
                     g$x$19621$1POZIn
                     g$set$19619$1POZIn)))
                ((g$x$19622$1POZIn g$del?$19623$1POZIn)
                 (if g$del?$19623$1POZIn
                   (set! g$set$19619$1POZIn
                     (g$remq$11840$1POZIn
                       g$x$19622$1POZIn
                       g$set$19619$1POZIn))
                   (set! g$set$19619$1POZIn
                     (g$set-cons$19620$1POZIn
                       g$x$19622$1POZIn
                       g$set$19619$1POZIn))))))))
         '()))))
   (g$current-library-collection$19557$1POZIn
     g$current-library-collection$19766$1POZIn
     (g$make-parameter$18976$1POZIn
       (g$make-collection$19556$1POZIn)
       (case-lambda
         ((g$x$19626$1POZIn)
          (begin
            (if (not (g$procedure?$12667$1POZIn g$x$19626$1POZIn))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$19626$1POZIn)
              (void))
            g$x$19626$1POZIn)))))
   (g$9489$19558$1POZIn
     g$9489$19767$1POZIn
     (make-record-type-descriptor
       'library
       '#f
       'g$9492$1POZIn
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9491$19559$1POZIn g$9491$19768$1POZIn '#f)
   (g$9490$19560$1POZIn
     g$9490$19769$1POZIn
     (make-record-constructor-descriptor
       g$9489$19558$1POZIn
       '#f
       g$9491$19559$1POZIn))
   (g$library?$19563$1POZIn
     g$library?$19770$1POZIn
     (record-predicate g$9489$19558$1POZIn))
   (g$make-library$19564$1POZIn
     g$make-library$19771$1POZIn
     (record-constructor g$9490$19560$1POZIn))
   (g$library-id$19565$1POZIn
     g$library-id$19772$1POZIn
     (record-accessor g$9489$19558$1POZIn '0))
   (g$library-name$19566$1POZIn
     g$library-name$19773$1POZIn
     (record-accessor g$9489$19558$1POZIn '1))
   (g$library-version$19567$1POZIn
     g$library-version$19774$1POZIn
     (record-accessor g$9489$19558$1POZIn '2))
   (g$library-imp*$19568$1POZIn
     g$library-imp*$19775$1POZIn
     (record-accessor g$9489$19558$1POZIn '3))
   (g$library-vis*$19569$1POZIn
     g$library-vis*$19776$1POZIn
     (record-accessor g$9489$19558$1POZIn '4))
   (g$library-inv*$19570$1POZIn
     g$library-inv*$19777$1POZIn
     (record-accessor g$9489$19558$1POZIn '5))
   (g$library-subst$19571$1POZIn
     g$library-subst$19778$1POZIn
     (record-accessor g$9489$19558$1POZIn '6))
   (g$library-env$19572$1POZIn
     g$library-env$19779$1POZIn
     (record-accessor g$9489$19558$1POZIn '7))
   (g$library-visit-state$19573$1POZIn
     g$library-visit-state$19780$1POZIn
     (record-accessor g$9489$19558$1POZIn '8))
   (g$library-invoke-state$19574$1POZIn
     g$library-invoke-state$19781$1POZIn
     (record-accessor g$9489$19558$1POZIn '9))
   (g$library-visit-code$19575$1POZIn
     g$library-visit-code$19782$1POZIn
     (record-accessor g$9489$19558$1POZIn '10))
   (g$library-invoke-code$19576$1POZIn
     g$library-invoke-code$19783$1POZIn
     (record-accessor g$9489$19558$1POZIn '11))
   (g$library-visible?$19577$1POZIn
     g$library-visible?$19784$1POZIn
     (record-accessor g$9489$19558$1POZIn '12))
   (g$library-source-file-name$19578$1POZIn
     g$library-source-file-name$19785$1POZIn
     (record-accessor g$9489$19558$1POZIn '13))
   (g$set-library-id!$19579$1POZIn
     g$set-library-id!$19786$1POZIn
     (record-mutator g$9489$19558$1POZIn '0))
   (g$set-library-name!$19580$1POZIn
     g$set-library-name!$19787$1POZIn
     (record-mutator g$9489$19558$1POZIn '1))
   (g$set-library-version!$19581$1POZIn
     g$set-library-version!$19788$1POZIn
     (record-mutator g$9489$19558$1POZIn '2))
   (g$set-library-imp*!$19582$1POZIn
     g$set-library-imp*!$19789$1POZIn
     (record-mutator g$9489$19558$1POZIn '3))
   (g$set-library-vis*!$19583$1POZIn
     g$set-library-vis*!$19790$1POZIn
     (record-mutator g$9489$19558$1POZIn '4))
   (g$set-library-inv*!$19584$1POZIn
     g$set-library-inv*!$19791$1POZIn
     (record-mutator g$9489$19558$1POZIn '5))
   (g$set-library-subst!$19585$1POZIn
     g$set-library-subst!$19792$1POZIn
     (record-mutator g$9489$19558$1POZIn '6))
   (g$set-library-env!$19586$1POZIn
     g$set-library-env!$19793$1POZIn
     (record-mutator g$9489$19558$1POZIn '7))
   (g$set-library-visit-state!$19587$1POZIn
     g$set-library-visit-state!$19794$1POZIn
     (record-mutator g$9489$19558$1POZIn '8))
   (g$set-library-invoke-state!$19588$1POZIn
     g$set-library-invoke-state!$19795$1POZIn
     (record-mutator g$9489$19558$1POZIn '9))
   (g$set-library-visit-code!$19589$1POZIn
     g$set-library-visit-code!$19796$1POZIn
     (record-mutator g$9489$19558$1POZIn '10))
   (g$set-library-invoke-code!$19590$1POZIn
     g$set-library-invoke-code!$19797$1POZIn
     (record-mutator g$9489$19558$1POZIn '11))
   (g$set-library-visible?!$19591$1POZIn
     g$set-library-visible?!$19798$1POZIn
     (record-mutator g$9489$19558$1POZIn '12))
   (g$set-library-source-file-name!$19592$1POZIn
     g$set-library-source-file-name!$19799$1POZIn
     (record-mutator g$9489$19558$1POZIn '13))
   (g$rp$19593$1POZIn
     g$rp$19800$1POZIn
     (make-record-printer
       'library
       (case-lambda
         ((g$x$19627$1POZIn g$p$19628$1POZIn g$wr$19629$1POZIn)
          (begin
            (if (not (g$library?$19563$1POZIn g$x$19627$1POZIn))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$18767$1POZIn
                '"#<library ~s>"
                (if (null?
                      (g$library-version$19567$1POZIn g$x$19627$1POZIn))
                  (g$library-name$19566$1POZIn g$x$19627$1POZIn)
                  (append
                    (g$library-name$19566$1POZIn g$x$19627$1POZIn)
                    (list
                      (g$library-version$19567$1POZIn
                        g$x$19627$1POZIn)))))
              g$p$19628$1POZIn))))))
   (g$find-dependencies$19594$1POZIn
     g$find-dependencies$19801$1POZIn
     (case-lambda
       ((g$ls$19630$1POZIn)
        (if (null? g$ls$19630$1POZIn)
          '()
          (begin
            '#f
            (assertion-violation
              'find-dependencies
              '"cannot handle deps yet"))))))
   (g$find-library-by$19595$1POZIn
     g$find-library-by$19802$1POZIn
     (case-lambda
       ((g$pred$19631$1POZIn)
        ((letrec ((g$f$19632$1POZIn
                    (case-lambda
                      ((g$ls$19633$1POZIn)
                       (if (null? g$ls$19633$1POZIn)
                         '#f
                         (if (g$pred$19631$1POZIn
                               (car g$ls$19633$1POZIn))
                           (car g$ls$19633$1POZIn)
                           (begin
                             '#f
                             (g$f$19632$1POZIn
                               (cdr g$ls$19633$1POZIn)))))))))
           g$f$19632$1POZIn)
         ((g$current-library-collection$19557$1POZIn))))))
   (g$library-path$19596$1POZIn
     g$library-path$19803$1POZIn
     (g$make-parameter$18976$1POZIn
       '(".")
       (case-lambda
         ((g$x$19634$1POZIn)
          (if (if (list? g$x$19634$1POZIn)
                (begin
                  '#f
                  (g$for-all$11831$1POZIn string? g$x$19634$1POZIn))
                '#f)
            (g$map$11833$1POZIn
              (case-lambda ((g$x$19635$1POZIn) g$x$19635$1POZIn))
              g$x$19634$1POZIn)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$19634$1POZIn))))))
   (g$library-extensions$19597$1POZIn
     g$library-extensions$19804$1POZIn
     (g$make-parameter$18976$1POZIn
       '(".sls" ".ss")
       (case-lambda
         ((g$x$19636$1POZIn)
          (if (if (list? g$x$19636$1POZIn)
                (begin
                  '#f
                  (g$for-all$11831$1POZIn string? g$x$19636$1POZIn))
                '#f)
            (g$map$11833$1POZIn
              (case-lambda ((g$x$19637$1POZIn) g$x$19637$1POZIn))
              g$x$19636$1POZIn)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$19636$1POZIn))))))
   (g$library-name->file-name$19598$1POZIn
     g$library-name->file-name$19805$1POZIn
     (case-lambda
       ((g$x$19638$1POZIn)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$18527$1POZIn)))
          (case-lambda
            ((g$p$19641$1POZIn g$extract$19642$1POZIn)
             ((case-lambda
                ((g$extract$19643$1POZIn g$p$19644$1POZIn)
                 (letrec* ((g$display-hex$19645$1POZIn
                             (case-lambda
                               ((g$n$19653$1POZIn)
                                (if (g$<=$13620$1POZIn
                                      '0
                                      g$n$19653$1POZIn
                                      '9)
                                  (display
                                    g$n$19653$1POZIn
                                    g$p$19644$1POZIn)
                                  (begin
                                    '#f
                                    (display
                                      (integer->char
                                        (+ (char->integer '#\A)
                                           (- g$n$19653$1POZIn '10)))
                                      g$p$19644$1POZIn)))))))
                   (begin
                     ((letrec ((g$f$19646$1POZIn
                                 (case-lambda
                                   ((g$ls$19647$1POZIn)
                                    (if (not (null? g$ls$19647$1POZIn))
                                      (begin
                                        (display '"/" g$p$19644$1POZIn)
                                        (g$for-each$11834$1POZIn
                                          (case-lambda
                                            ((g$c$19648$1POZIn)
                                             (if ((case-lambda
                                                    ((g$t$19649$1POZIn)
                                                     (if g$t$19649$1POZIn
                                                       g$t$19649$1POZIn
                                                       ((case-lambda
                                                          ((g$t$19650$1POZIn)
                                                           (if g$t$19650$1POZIn
                                                             g$t$19650$1POZIn
                                                             ((case-lambda
                                                                ((g$t$19651$1POZIn)
                                                                 (if g$t$19651$1POZIn
                                                                   g$t$19651$1POZIn
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$11826$1POZIn
                                                                       g$c$19648$1POZIn
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$12727$1POZIn
                                                                '#\0
                                                                g$c$19648$1POZIn
                                                                '#\9)))))
                                                        (g$char<=?$12727$1POZIn
                                                          '#\A
                                                          g$c$19648$1POZIn
                                                          '#\Z)))))
                                                  (g$char<=?$12727$1POZIn
                                                    '#\a
                                                    g$c$19648$1POZIn
                                                    '#\z))
                                               (display
                                                 g$c$19648$1POZIn
                                                 g$p$19644$1POZIn)
                                               (begin
                                                 '#f
                                                 (display
                                                   '"%"
                                                   g$p$19644$1POZIn)
                                                 ((case-lambda
                                                    ((g$n$19652$1POZIn)
                                                     (begin
                                                       (g$display-hex$19645$1POZIn
                                                         (g$quotient$14371$1POZIn
                                                           g$n$19652$1POZIn
                                                           '16))
                                                       (g$display-hex$19645$1POZIn
                                                         (g$remainder$14372$1POZIn
                                                           g$n$19652$1POZIn
                                                           '16)))))
                                                  (char->integer
                                                    g$c$19648$1POZIn))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$19647$1POZIn))))
                                        (g$f$19646$1POZIn
                                          (cdr g$ls$19647$1POZIn)))
                                      (void))))))
                        g$f$19646$1POZIn)
                      g$x$19638$1POZIn)
                     (g$extract$19643$1POZIn)))))
              g$extract$19642$1POZIn
              g$p$19641$1POZIn)))))))
   (g$file-locator$19599$1POZIn
     g$file-locator$19806$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda
         ((g$x$19654$1POZIn)
          ((case-lambda
             ((g$str$19655$1POZIn)
              ((letrec ((g$f$19656$1POZIn
                          (case-lambda
                            ((g$ls$19657$1POZIn
                               g$exts$19658$1POZIn
                               g$failed-list$19659$1POZIn)
                             (if (null? g$ls$19657$1POZIn)
                               (g$file-locator-resolution-error$18974$1POZIn
                                 g$x$19654$1POZIn
                                 (g$reverse$12682$1POZIn
                                   g$failed-list$19659$1POZIn)
                                 ((case-lambda
                                    ((g$ls$19660$1POZIn)
                                     (if (null? g$ls$19660$1POZIn)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$19660$1POZIn))))
                                  (g$external-pending-libraries$19605$1POZIn)))
                               (if (null? g$exts$19658$1POZIn)
                                 (g$f$19656$1POZIn
                                   (cdr g$ls$19657$1POZIn)
                                   (g$library-extensions$19597$1POZIn)
                                   g$failed-list$19659$1POZIn)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$name$19661$1POZIn)
                                       (if (g$file-exists?$12790$1POZIn
                                             g$name$19661$1POZIn)
                                         g$name$19661$1POZIn
                                         (g$f$19656$1POZIn
                                           g$ls$19657$1POZIn
                                           (cdr g$exts$19658$1POZIn)
                                           (cons
                                             g$name$19661$1POZIn
                                             g$failed-list$19659$1POZIn)))))
                                    (string-append
                                      (car g$ls$19657$1POZIn)
                                      g$str$19655$1POZIn
                                      (car g$exts$19658$1POZIn))))))))))
                 g$f$19656$1POZIn)
               (g$library-path$19596$1POZIn)
               (g$library-extensions$19597$1POZIn)
               '())))
           (g$library-name->file-name$19598$1POZIn g$x$19654$1POZIn))))
       (case-lambda
         ((g$f$19662$1POZIn)
          (if (g$procedure?$12667$1POZIn g$f$19662$1POZIn)
            g$f$19662$1POZIn
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$19662$1POZIn))))))
   (g$serialize-all$19600$1POZIn
     g$serialize-all$19807$1POZIn
     (case-lambda
       ((g$serialize$19663$1POZIn g$compile$19664$1POZIn)
        (letrec* ((g$library-desc$19665$1POZIn
                    (case-lambda
                      ((g$x$19667$1POZIn)
                       (list
                         (g$library-id$19565$1POZIn g$x$19667$1POZIn)
                         (g$library-name$19566$1POZIn
                           g$x$19667$1POZIn))))))
          (g$for-each$11834$1POZIn
            (case-lambda
              ((g$x$19666$1POZIn)
               (if (g$library-source-file-name$19578$1POZIn
                     g$x$19666$1POZIn)
                 (g$serialize$19663$1POZIn
                   (g$library-source-file-name$19578$1POZIn
                     g$x$19666$1POZIn)
                   (list
                     (g$library-id$19565$1POZIn g$x$19666$1POZIn)
                     (g$library-name$19566$1POZIn g$x$19666$1POZIn)
                     (g$library-version$19567$1POZIn g$x$19666$1POZIn)
                     (g$map$11833$1POZIn
                       g$library-desc$19665$1POZIn
                       (g$library-imp*$19568$1POZIn g$x$19666$1POZIn))
                     (g$map$11833$1POZIn
                       g$library-desc$19665$1POZIn
                       (g$library-vis*$19569$1POZIn g$x$19666$1POZIn))
                     (g$map$11833$1POZIn
                       g$library-desc$19665$1POZIn
                       (g$library-inv*$19570$1POZIn g$x$19666$1POZIn))
                     (g$library-subst$19571$1POZIn g$x$19666$1POZIn)
                     (g$library-env$19572$1POZIn g$x$19666$1POZIn)
                     (g$compile$19664$1POZIn
                       (g$library-visit-code$19575$1POZIn
                         g$x$19666$1POZIn))
                     (g$compile$19664$1POZIn
                       (g$library-invoke-code$19576$1POZIn
                         g$x$19666$1POZIn))
                     (g$library-visible?$19577$1POZIn
                       g$x$19666$1POZIn)))
                 (void))))
            ((g$current-library-collection$19557$1POZIn)))))))
   (g$current-precompiled-library-loader$19601$1POZIn
     g$current-precompiled-library-loader$19808$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda ((g$filename$19668$1POZIn g$sk$19669$1POZIn) '#f))))
   (g$try-load-from-file$19602$1POZIn
     g$try-load-from-file$19809$1POZIn
     (case-lambda
       ((g$filename$19670$1POZIn)
        ((g$current-precompiled-library-loader$19601$1POZIn)
         g$filename$19670$1POZIn
         (case-lambda
           ((g$id$19671$1POZIn
              g$name$19672$1POZIn
              g$ver$19673$1POZIn
              g$imp*$19674$1POZIn
              g$vis*$19675$1POZIn
              g$inv*$19676$1POZIn
              g$exp-subst$19677$1POZIn
              g$exp-env$19678$1POZIn
              g$visit-proc$19679$1POZIn
              g$invoke-proc$19680$1POZIn
              g$visible?$19681$1POZIn)
            ((letrec ((g$f$19682$1POZIn
                        (case-lambda
                          ((g$deps$19683$1POZIn)
                           (if (null? g$deps$19683$1POZIn)
                             (begin
                               (g$install-library$19612$1POZIn
                                 g$id$19671$1POZIn
                                 g$name$19672$1POZIn
                                 g$ver$19673$1POZIn
                                 g$imp*$19674$1POZIn
                                 g$vis*$19675$1POZIn
                                 g$inv*$19676$1POZIn
                                 g$exp-subst$19677$1POZIn
                                 g$exp-env$19678$1POZIn
                                 g$visit-proc$19679$1POZIn
                                 g$invoke-proc$19680$1POZIn
                                 '#f
                                 '#f
                                 g$visible?$19681$1POZIn
                                 '#f)
                               '#t)
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$d$19684$1POZIn)
                                   ((case-lambda
                                      ((g$label$19685$1POZIn
                                         g$dname$19686$1POZIn)
                                       ((case-lambda
                                          ((g$l$19687$1POZIn)
                                           (if (if (g$library?$19563$1POZIn
                                                     g$l$19687$1POZIn)
                                                 (begin
                                                   '#f
                                                   (eq? g$label$19685$1POZIn
                                                        (g$library-id$19565$1POZIn
                                                          g$l$19687$1POZIn)))
                                                 '#f)
                                             (g$f$19682$1POZIn
                                               (cdr g$deps$19683$1POZIn))
                                             (begin
                                               '#f
                                               (g$library-version-mismatch-warning$18973$1POZIn
                                                 g$name$19672$1POZIn
                                                 g$dname$19686$1POZIn
                                                 g$filename$19670$1POZIn)
                                               '#f))))
                                        (g$find-library-by-name$19607$1POZIn
                                          g$dname$19686$1POZIn))))
                                    (car g$d$19684$1POZIn)
                                    (g$cadr$12684$1POZIn
                                      g$d$19684$1POZIn))))
                                (car g$deps$19683$1POZIn))))))))
               g$f$19682$1POZIn)
             (append
               g$imp*$19674$1POZIn
               g$vis*$19675$1POZIn
               g$inv*$19676$1POZIn)))
           (g$others$19688$1POZIn '#f))))))
   (g$library-loader$19603$1POZIn
     g$library-loader$19810$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda
         ((g$x$19689$1POZIn)
          ((case-lambda
             ((g$file-name$19690$1POZIn)
              (if (not g$file-name$19690$1POZIn)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$19689$1POZIn)
                ((case-lambda
                   ((g$t$19691$1POZIn)
                    (if g$t$19691$1POZIn
                      g$t$19691$1POZIn
                      (begin
                        '#f
                        (begin
                          '#f
                          ((g$current-library-expander$19604$1POZIn)
                           (g$read-library-source-file$18975$1POZIn
                             g$file-name$19690$1POZIn)
                           g$file-name$19690$1POZIn
                           (case-lambda
                             ((g$name$19692$1POZIn)
                              (if (not (equal?
                                         g$name$19692$1POZIn
                                         g$x$19689$1POZIn))
                                (assertion-violation
                                  'import
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$open-string-output-port$18527$1POZIn)))
                                    (case-lambda
                                      ((g$p$19695$1POZIn
                                         g$e$19696$1POZIn)
                                       ((case-lambda
                                          ((g$e$19697$1POZIn
                                             g$p$19698$1POZIn)
                                           (begin
                                             (display
                                               '"expected to find library "
                                               g$p$19698$1POZIn)
                                             (write
                                               g$x$19689$1POZIn
                                               g$p$19698$1POZIn)
                                             (display
                                               '" in file "
                                               g$p$19698$1POZIn)
                                             (display
                                               g$file-name$19690$1POZIn
                                               g$p$19698$1POZIn)
                                             (display
                                               '", found "
                                               g$p$19698$1POZIn)
                                             (write
                                               g$name$19692$1POZIn
                                               g$p$19698$1POZIn)
                                             (display
                                               '" instead"
                                               g$p$19698$1POZIn)
                                             (g$e$19697$1POZIn))))
                                        g$e$19696$1POZIn
                                        g$p$19695$1POZIn)))))
                                (void))))))))))
                 (g$try-load-from-file$19602$1POZIn
                   g$file-name$19690$1POZIn)))))
           ((g$file-locator$19599$1POZIn) g$x$19689$1POZIn))))
       (case-lambda
         ((g$f$19699$1POZIn)
          (if (g$procedure?$12667$1POZIn g$f$19699$1POZIn)
            g$f$19699$1POZIn
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$19699$1POZIn))))))
   (g$current-library-expander$19604$1POZIn
     g$current-library-expander$19811$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda
         ((g$x$19700$1POZIn)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$19701$1POZIn)
          (if (g$procedure?$12667$1POZIn g$f$19701$1POZIn)
            g$f$19701$1POZIn
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$19701$1POZIn))))))
   (g$external-pending-libraries$19605$1POZIn
     g$external-pending-libraries$19812$1POZIn
     (g$make-parameter$18976$1POZIn '()))
   (g$find-external-library$19606$1POZIn
     g$find-external-library$19813$1POZIn
     (case-lambda
       ((g$name$19702$1POZIn)
        (begin
          (if (g$member$11827$1POZIn
                g$name$19702$1POZIn
                (g$external-pending-libraries$19605$1POZIn))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$19702$1POZIn)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$19705$1POZIn
                g$external-pending-libraries$19706$1POZIn)
              ((case-lambda
                 ((g$swap$19707$1POZIn)
                  (dynamic-wind
                    g$swap$19707$1POZIn
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$19603$1POZIn)
                          g$name$19702$1POZIn)
                         ((case-lambda
                            ((g$t$19708$1POZIn)
                             (if g$t$19708$1POZIn
                               g$t$19708$1POZIn
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$19702$1POZIn)))))
                          (g$find-library-by$19595$1POZIn
                            (case-lambda
                              ((g$x$19709$1POZIn)
                               (equal?
                                 (g$library-name$19566$1POZIn
                                   g$x$19709$1POZIn)
                                 g$name$19702$1POZIn))))))))
                    g$swap$19707$1POZIn)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$19710$1POZIn)
                      (begin
                        (g$external-pending-libraries$19705$1POZIn
                          g$external-pending-libraries$19706$1POZIn)
                        (set! g$external-pending-libraries$19706$1POZIn
                          g$t$19710$1POZIn))))
                   (g$external-pending-libraries$19705$1POZIn)))))))
           g$external-pending-libraries$19605$1POZIn
           (cons
             g$name$19702$1POZIn
             (g$external-pending-libraries$19605$1POZIn)))))))
   (g$find-library-by-name$19607$1POZIn
     g$find-library-by-name$19814$1POZIn
     (case-lambda
       ((g$name$19711$1POZIn)
        ((case-lambda
           ((g$t$19712$1POZIn)
            (if g$t$19712$1POZIn
              g$t$19712$1POZIn
              (begin
                '#f
                (g$find-external-library$19606$1POZIn
                  g$name$19711$1POZIn)))))
         (g$find-library-by$19595$1POZIn
           (case-lambda
             ((g$x$19713$1POZIn)
              (equal?
                (g$library-name$19566$1POZIn g$x$19713$1POZIn)
                g$name$19711$1POZIn))))))))
   (g$uninstall-library$19608$1POZIn
     g$uninstall-library$19815$1POZIn
     (case-lambda
       ((g$name$19714$1POZIn g$err?$19715$1POZIn)
        (letrec* ((g$who$19716$1POZIn 'uninstall-library))
          ((case-lambda
             ((g$lib$19717$1POZIn)
              (begin
                (if (if g$err?$19715$1POZIn
                      (begin '#f (not g$lib$19717$1POZIn))
                      '#f)
                  (assertion-violation
                    g$who$19716$1POZIn
                    '"library not installed"
                    g$name$19714$1POZIn)
                  (void))
                ((g$current-library-collection$19557$1POZIn)
                 g$lib$19717$1POZIn
                 '#t)
                (g$for-each$11834$1POZIn
                  (case-lambda
                    ((g$x$19718$1POZIn)
                     ((case-lambda
                        ((g$label$19719$1POZIn g$binding$19720$1POZIn)
                         (begin
                           (remove-location g$label$19719$1POZIn)
                           (if (g$memq$11825$1POZIn
                                 (car g$binding$19720$1POZIn)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$19720$1POZIn))
                             (void)))))
                      (car g$x$19718$1POZIn)
                      (cdr g$x$19718$1POZIn))))
                  (g$library-env$19572$1POZIn g$lib$19717$1POZIn)))))
           (g$find-library-by$19595$1POZIn
             (case-lambda
               ((g$x$19721$1POZIn)
                (equal?
                  (g$library-name$19566$1POZIn g$x$19721$1POZIn)
                  g$name$19714$1POZIn)))))))
       ((g$name$19722$1POZIn)
        (g$uninstall-library$19608$1POZIn g$name$19722$1POZIn '#t))))
   (g$library-exists?$19609$1POZIn
     g$library-exists?$19816$1POZIn
     (case-lambda
       ((g$name$19723$1POZIn)
        (if (g$find-library-by$19595$1POZIn
              (case-lambda
                ((g$x$19724$1POZIn)
                 (equal?
                   (g$library-name$19566$1POZIn g$x$19724$1POZIn)
                   g$name$19723$1POZIn))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$19610$1POZIn
     g$find-library-by-spec/die$19817$1POZIn
     (case-lambda
       ((g$spec$19725$1POZIn)
        ((case-lambda
           ((g$id$19726$1POZIn)
            ((case-lambda
               ((g$t$19727$1POZIn)
                (if g$t$19727$1POZIn
                  g$t$19727$1POZIn
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$19725$1POZIn)))))
             (g$find-library-by$19595$1POZIn
               (case-lambda
                 ((g$x$19728$1POZIn)
                  (eq? g$id$19726$1POZIn
                       (g$library-id$19565$1POZIn
                         g$x$19728$1POZIn))))))))
         (car g$spec$19725$1POZIn)))))
   (g$install-library-record$19611$1POZIn
     g$install-library-record$19818$1POZIn
     (case-lambda
       ((g$lib$19729$1POZIn)
        (begin
          ((case-lambda
             ((g$exp-env$19730$1POZIn)
              (g$for-each$11834$1POZIn
                (case-lambda
                  ((g$x$19731$1POZIn)
                   ((case-lambda
                      ((g$label$19732$1POZIn g$binding$19733$1POZIn)
                       ((case-lambda
                          ((g$binding$19734$1POZIn)
                           (g$set-label-binding!$18979$1POZIn
                             g$label$19732$1POZIn
                             g$binding$19734$1POZIn)))
                        ((case-lambda
                           ((g$t$19735$1POZIn)
                            (if (eqv? g$t$19735$1POZIn 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$19729$1POZIn
                                  (cdr g$binding$19733$1POZIn)))
                              (if (eqv? g$t$19735$1POZIn 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$19729$1POZIn
                                    (cdr g$binding$19733$1POZIn)))
                                (if (eqv?
                                      g$t$19735$1POZIn
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$19729$1POZIn
                                      (cdr g$binding$19733$1POZIn)))
                                  (if (eqv?
                                        g$t$19735$1POZIn
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$19729$1POZIn
                                        (cdr g$binding$19733$1POZIn)))
                                    (begin
                                      '#f
                                      g$binding$19733$1POZIn)))))))
                         (car g$binding$19733$1POZIn)))))
                    (car g$x$19731$1POZIn)
                    (cdr g$x$19731$1POZIn))))
                g$exp-env$19730$1POZIn)))
           (g$library-env$19572$1POZIn g$lib$19729$1POZIn))
          ((g$current-library-collection$19557$1POZIn)
           g$lib$19729$1POZIn)))))
   (g$install-library$19612$1POZIn
     g$install-library$19819$1POZIn
     (case-lambda
       ((g$id$19736$1POZIn
          g$name$19737$1POZIn
          g$ver$19738$1POZIn
          g$imp*$19739$1POZIn
          g$vis*$19740$1POZIn
          g$inv*$19741$1POZIn
          g$exp-subst$19742$1POZIn
          g$exp-env$19743$1POZIn
          g$visit-proc$19744$1POZIn
          g$invoke-proc$19745$1POZIn
          g$visit-code$19746$1POZIn
          g$invoke-code$19747$1POZIn
          g$visible?$19748$1POZIn
          g$source-file-name$19749$1POZIn)
        ((case-lambda
           ((g$imp-lib*$19750$1POZIn
              g$vis-lib*$19751$1POZIn
              g$inv-lib*$19752$1POZIn)
            (begin
              (if (not (if (g$symbol?$12665$1POZIn g$id$19736$1POZIn)
                         (if (list? g$name$19737$1POZIn)
                           (begin '#f (list? g$ver$19738$1POZIn))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$19736$1POZIn
                  g$name$19737$1POZIn
                  g$ver$19738$1POZIn)
                (void))
              (if (g$library-exists?$19609$1POZIn g$name$19737$1POZIn)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$19737$1POZIn)
                (void))
              ((case-lambda
                 ((g$lib$19753$1POZIn)
                  (g$install-library-record$19611$1POZIn
                    g$lib$19753$1POZIn)))
               (g$make-library$19564$1POZIn
                 g$id$19736$1POZIn
                 g$name$19737$1POZIn
                 g$ver$19738$1POZIn
                 g$imp-lib*$19750$1POZIn
                 g$vis-lib*$19751$1POZIn
                 g$inv-lib*$19752$1POZIn
                 g$exp-subst$19742$1POZIn
                 g$exp-env$19743$1POZIn
                 g$visit-proc$19744$1POZIn
                 g$invoke-proc$19745$1POZIn
                 g$visit-code$19746$1POZIn
                 g$invoke-code$19747$1POZIn
                 g$visible?$19748$1POZIn
                 g$source-file-name$19749$1POZIn)))))
         (g$map$11833$1POZIn
           g$find-library-by-spec/die$19610$1POZIn
           g$imp*$19739$1POZIn)
         (g$map$11833$1POZIn
           g$find-library-by-spec/die$19610$1POZIn
           g$vis*$19740$1POZIn)
         (g$map$11833$1POZIn
           g$find-library-by-spec/die$19610$1POZIn
           g$inv*$19741$1POZIn)))))
   (g$imported-label->binding$19613$1POZIn
     g$imported-label->binding$19820$1POZIn
     (case-lambda
       ((g$lab$19754$1POZIn)
        (g$label-binding$18980$1POZIn g$lab$19754$1POZIn))))
   (g$invoke-library$19614$1POZIn
     g$invoke-library$19821$1POZIn
     (case-lambda
       ((g$lib$19755$1POZIn)
        ((case-lambda
           ((g$invoke$19756$1POZIn)
            (if (g$procedure?$12667$1POZIn g$invoke$19756$1POZIn)
              (begin
                (g$set-library-invoke-state!$19588$1POZIn
                  g$lib$19755$1POZIn
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$19755$1POZIn))))
                (g$for-each$11834$1POZIn
                  g$invoke-library$19614$1POZIn
                  (g$library-inv*$19570$1POZIn g$lib$19755$1POZIn))
                (g$set-library-invoke-state!$19588$1POZIn
                  g$lib$19755$1POZIn
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$19755$1POZIn))))
                (g$invoke$19756$1POZIn)
                (g$set-library-invoke-state!$19588$1POZIn
                  g$lib$19755$1POZIn
                  '#t))
              (void))))
         (g$library-invoke-state$19574$1POZIn g$lib$19755$1POZIn)))))
   (g$visit-library$19615$1POZIn
     g$visit-library$19822$1POZIn
     (case-lambda
       ((g$lib$19757$1POZIn)
        ((case-lambda
           ((g$visit$19758$1POZIn)
            (if (g$procedure?$12667$1POZIn g$visit$19758$1POZIn)
              (begin
                (g$set-library-visit-state!$19587$1POZIn
                  g$lib$19757$1POZIn
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$19757$1POZIn))))
                (g$for-each$11834$1POZIn
                  g$invoke-library$19614$1POZIn
                  (g$library-vis*$19569$1POZIn g$lib$19757$1POZIn))
                (g$set-library-visit-state!$19587$1POZIn
                  g$lib$19757$1POZIn
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$19757$1POZIn))))
                (g$visit$19758$1POZIn)
                (g$set-library-visit-state!$19587$1POZIn
                  g$lib$19757$1POZIn
                  '#t))
              (void))))
         (g$library-visit-state$19573$1POZIn g$lib$19757$1POZIn)))))
   (g$invoke-library-by-spec$19616$1POZIn
     g$invoke-library-by-spec$19823$1POZIn
     (case-lambda
       ((g$spec$19759$1POZIn)
        (g$invoke-library$19614$1POZIn
          (g$find-library-by-spec/die$19610$1POZIn
            g$spec$19759$1POZIn)))))
   (g$installed-libraries$19617$1POZIn
     g$installed-libraries$19824$1POZIn
     (case-lambda
       ((g$all?$19760$1POZIn)
        ((letrec ((g$f$19761$1POZIn
                    (case-lambda
                      ((g$ls$19762$1POZIn)
                       (if (null? g$ls$19762$1POZIn)
                         '()
                         (if ((case-lambda
                                ((g$t$19763$1POZIn)
                                 (if g$t$19763$1POZIn
                                   g$t$19763$1POZIn
                                   (begin
                                     '#f
                                     (g$library-visible?$19577$1POZIn
                                       (car g$ls$19762$1POZIn))))))
                              g$all?$19760$1POZIn)
                           (cons
                             (g$library-name$19566$1POZIn
                               (car g$ls$19762$1POZIn))
                             (g$f$19761$1POZIn (cdr g$ls$19762$1POZIn)))
                           (begin
                             '#f
                             (g$f$19761$1POZIn
                               (cdr g$ls$19762$1POZIn)))))))))
           g$f$19761$1POZIn)
         ((g$current-library-collection$19557$1POZIn))))
       (() (g$installed-libraries$19617$1POZIn '#f))))
   (g$library-spec$19618$1POZIn
     g$library-spec$19825$1POZIn
     (case-lambda
       ((g$x$19764$1POZIn)
        (begin
          (if (not (g$library?$19563$1POZIn g$x$19764$1POZIn))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$19764$1POZIn)
            (void))
          (list
            (g$library-id$19565$1POZIn g$x$19764$1POZIn)
            (g$library-name$19566$1POZIn g$x$19764$1POZIn)
            (g$library-version$19567$1POZIn g$x$19764$1POZIn)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$19826$1POZIn
     g$build-global-define$20036$1POZIn
     (case-lambda ((g$x$20007$1POZIn) (g$build-void$20003$1POZIn))))
   (g$build-lambda$19937$1POZIn
     g$build-lambda$20037$1POZIn
     (case-lambda
       ((g$ae$20008$1POZIn g$vars$20009$1POZIn g$exp$20010$1POZIn)
        (list
          'case-lambda
          (list g$vars$20009$1POZIn g$exp$20010$1POZIn)))))
   (g$build-case-lambda$19938$1POZIn
     g$build-case-lambda$20038$1POZIn
     (case-lambda
       ((g$ae$20011$1POZIn g$vars*$20012$1POZIn g$exp*$20013$1POZIn)
        (cons
          'case-lambda
          (g$map$11833$1POZIn
            list
            g$vars*$20012$1POZIn
            g$exp*$20013$1POZIn)))))
   (g$build-let$19939$1POZIn
     g$build-let$20039$1POZIn
     (case-lambda
       ((g$ae$20014$1POZIn
          g$lhs*$20015$1POZIn
          g$rhs*$20016$1POZIn
          g$body$20017$1POZIn)
        (cons
          (g$build-lambda$19937$1POZIn
            g$ae$20014$1POZIn
            g$lhs*$20015$1POZIn
            g$body$20017$1POZIn)
          g$rhs*$20016$1POZIn))))
   (g$build-sequence$20002$1POZIn
     g$build-sequence$20040$1POZIn
     (case-lambda
       ((g$ae$20018$1POZIn g$exps$20019$1POZIn)
        ((letrec ((g$loop$20020$1POZIn
                    (case-lambda
                      ((g$exps$20021$1POZIn)
                       (if (null? (cdr g$exps$20021$1POZIn))
                         (car g$exps$20021$1POZIn)
                         (if (equal?
                               (car g$exps$20021$1POZIn)
                               (g$build-void$20003$1POZIn))
                           (g$loop$20020$1POZIn
                             (cdr g$exps$20021$1POZIn))
                           (cons 'begin g$exps$20021$1POZIn)))))))
           g$loop$20020$1POZIn)
         g$exps$20019$1POZIn))))
   (g$build-void$20003$1POZIn
     g$build-void$20041$1POZIn
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$20004$1POZIn
     g$build-letrec$20042$1POZIn
     (case-lambda
       ((g$ae$20022$1POZIn
          g$vars$20023$1POZIn
          g$val-exps$20024$1POZIn
          g$body-exp$20025$1POZIn)
        (if (null? g$vars$20023$1POZIn)
          g$body-exp$20025$1POZIn
          (list
            'letrec
            (g$map$11833$1POZIn
              list
              g$vars$20023$1POZIn
              g$val-exps$20024$1POZIn)
            g$body-exp$20025$1POZIn)))))
   (g$build-letrec*$20005$1POZIn
     g$build-letrec*$20043$1POZIn
     (case-lambda
       ((g$ae$20026$1POZIn
          g$vars$20027$1POZIn
          g$val-exps$20028$1POZIn
          g$body-exp$20029$1POZIn)
        (if (null? g$vars$20027$1POZIn)
          g$body-exp$20029$1POZIn
          (begin
            '#f
            (list
              'letrec*
              (g$map$11833$1POZIn
                list
                g$vars$20027$1POZIn
                g$val-exps$20028$1POZIn)
              g$body-exp$20029$1POZIn))))))
   (g$build-library-letrec*$20006$1POZIn
     g$build-library-letrec*$20044$1POZIn
     (case-lambda
       ((g$ae$20030$1POZIn
          g$name$20031$1POZIn
          g$vars$20032$1POZIn
          g$locs$20033$1POZIn
          g$val-exps$20034$1POZIn
          g$body-exp$20035$1POZIn)
        (list
          'library-letrec*
          g$name$20031$1POZIn
          (g$map$11833$1POZIn
            list
            g$vars$20032$1POZIn
            g$locs$20033$1POZIn
            g$val-exps$20034$1POZIn)
          g$body-exp$20035$1POZIn)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$20045$1POZIn
     g$set-cons$24056$1POZIn
     (case-lambda
       ((g$x$20741$1POZIn g$ls$20742$1POZIn)
        (if (g$memq$11825$1POZIn g$x$20741$1POZIn g$ls$20742$1POZIn)
          g$ls$20742$1POZIn
          (begin '#f (cons g$x$20741$1POZIn g$ls$20742$1POZIn))))))
   (g$set-union$20046$1POZIn
     g$set-union$24057$1POZIn
     (case-lambda
       ((g$ls1$20743$1POZIn g$ls2$20744$1POZIn)
        (if (null? g$ls1$20743$1POZIn)
          g$ls2$20744$1POZIn
          (if (g$memq$11825$1POZIn
                (car g$ls1$20743$1POZIn)
                g$ls2$20744$1POZIn)
            (g$set-union$20046$1POZIn
              (cdr g$ls1$20743$1POZIn)
              g$ls2$20744$1POZIn)
            (begin
              '#f
              (cons
                (car g$ls1$20743$1POZIn)
                (g$set-union$20046$1POZIn
                  (cdr g$ls1$20743$1POZIn)
                  g$ls2$20744$1POZIn))))))))
   (g$top-mark*$20048$1POZIn g$top-mark*$24058$1POZIn '(top))
   (g$top-marked?$20049$1POZIn
     g$top-marked?$24059$1POZIn
     (case-lambda
       ((g$m*$20745$1POZIn)
        (g$memq$11825$1POZIn 'top g$m*$20745$1POZIn))))
   (g$gen-lexical$20050$1POZIn
     g$gen-lexical$24060$1POZIn
     (case-lambda
       ((g$sym$20746$1POZIn)
        (if (g$symbol?$12665$1POZIn g$sym$20746$1POZIn)
          (gensym g$sym$20746$1POZIn)
          (if (g$stx?$20087$1POZIn g$sym$20746$1POZIn)
            (g$gen-lexical$20050$1POZIn
              (g$id->sym$20116$1POZIn g$sym$20746$1POZIn))
            (begin
              '#f
              (assertion-violation
                'gen-lexical
                '"BUG: invalid arg"
                g$sym$20746$1POZIn)))))))
   (g$gen-global$20051$1POZIn
     g$gen-global$24061$1POZIn
     (case-lambda
       ((g$x$20747$1POZIn)
        (g$gen-lexical$20050$1POZIn g$x$20747$1POZIn))))
   (g$gen-label$20052$1POZIn
     g$gen-label$24062$1POZIn
     (case-lambda ((g$_$20748$1POZIn) (gensym))))
   (g$gen-top-level-label$20053$1POZIn
     g$gen-top-level-label$24063$1POZIn
     (case-lambda
       ((g$id$20749$1POZIn g$rib$20750$1POZIn)
        (letrec* ((g$find$20751$1POZIn
                    (case-lambda
                      ((g$sym$20757$1POZIn
                         g$mark*$20758$1POZIn
                         g$sym*$20759$1POZIn
                         g$mark**$20760$1POZIn
                         g$label*$20761$1POZIn)
                       (if (pair? g$sym*$20759$1POZIn)
                         (begin
                           '#f
                           (if (if (eq? g$sym$20757$1POZIn
                                        (car g$sym*$20759$1POZIn))
                                 (begin
                                   '#f
                                   (g$same-marks?$20117$1POZIn
                                     g$mark*$20758$1POZIn
                                     (car g$mark**$20760$1POZIn)))
                                 '#f)
                             (car g$label*$20761$1POZIn)
                             (g$find$20751$1POZIn
                               g$sym$20757$1POZIn
                               g$mark*$20758$1POZIn
                               (cdr g$sym*$20759$1POZIn)
                               (cdr g$mark**$20760$1POZIn)
                               (cdr g$label*$20761$1POZIn))))
                         '#f)))))
          ((case-lambda
             ((g$sym$20752$1POZIn g$mark*$20753$1POZIn)
              ((case-lambda
                 ((g$sym*$20754$1POZIn)
                  ((case-lambda
                     ((g$t$20755$1POZIn)
                      (if g$t$20755$1POZIn
                        ((case-lambda
                           ((g$label$20756$1POZIn)
                            (if (g$imported-label->binding$19820$1POZIn
                                  g$label$20756$1POZIn)
                              (gensym)
                              (begin '#f g$label$20756$1POZIn))))
                         g$t$20755$1POZIn)
                        (begin '#f (gensym)))))
                   (if (g$memq$11825$1POZIn
                         g$sym$20752$1POZIn
                         (g$rib-sym*$20063$1POZIn g$rib$20750$1POZIn))
                     (begin
                       '#f
                       (g$find$20751$1POZIn
                         g$sym$20752$1POZIn
                         g$mark*$20753$1POZIn
                         g$sym*$20754$1POZIn
                         (g$rib-mark**$20064$1POZIn g$rib$20750$1POZIn)
                         (g$rib-label*$20065$1POZIn
                           g$rib$20750$1POZIn)))
                     '#f))))
               (g$rib-sym*$20063$1POZIn g$rib$20750$1POZIn))))
           (g$id->sym$20116$1POZIn g$id$20749$1POZIn)
           (g$stx-mark*$20090$1POZIn g$id$20749$1POZIn))))))
   (g$gen-define-label+loc$20054$1POZIn
     g$gen-define-label+loc$24064$1POZIn
     (case-lambda
       ((g$id$20762$1POZIn g$rib$20763$1POZIn g$sd?$20764$1POZIn)
        (if g$sd?$20764$1POZIn
          (values
            (gensym)
            (g$gen-lexical$20050$1POZIn g$id$20762$1POZIn))
          ((case-lambda
             ((g$env$20765$1POZIn)
              ((case-lambda
                 ((g$label$20766$1POZIn g$locs$20767$1POZIn)
                  (values
                    g$label$20766$1POZIn
                    ((case-lambda
                       ((g$t$20768$1POZIn)
                        (if g$t$20768$1POZIn
                          (cdr g$t$20768$1POZIn)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$loc$20769$1POZIn)
                                (begin
                                  (g$set-interaction-env-locs!$20703$1POZIn
                                    g$env$20765$1POZIn
                                    (cons
                                      (cons
                                        g$label$20766$1POZIn
                                        g$loc$20769$1POZIn)
                                      g$locs$20767$1POZIn))
                                  g$loc$20769$1POZIn)))
                             (g$gen-lexical$20050$1POZIn
                               g$id$20762$1POZIn))))))
                     (g$assq$11821$1POZIn
                       g$label$20766$1POZIn
                       g$locs$20767$1POZIn)))))
               (g$gen-top-level-label$20053$1POZIn
                 g$id$20762$1POZIn
                 g$rib$20763$1POZIn)
               (g$interaction-env-locs$20700$1POZIn
                 g$env$20765$1POZIn))))
           (g$top-level-context$20740$1POZIn))))))
   (g$gen-define-label$20055$1POZIn
     g$gen-define-label$24065$1POZIn
     (case-lambda
       ((g$id$20770$1POZIn g$rib$20771$1POZIn g$sd?$20772$1POZIn)
        (if g$sd?$20772$1POZIn
          (gensym)
          (g$gen-top-level-label$20053$1POZIn
            g$id$20770$1POZIn
            g$rib$20771$1POZIn)))))
   (g$9816$20056$1POZIn
     g$9816$24066$1POZIn
     (make-record-type-descriptor
       'rib
       '#f
       'g$9819$1POZIn
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$9818$20057$1POZIn g$9818$24067$1POZIn '#f)
   (g$9817$20058$1POZIn
     g$9817$24068$1POZIn
     (make-record-constructor-descriptor
       g$9816$20056$1POZIn
       '#f
       g$9818$20057$1POZIn))
   (g$rib?$20061$1POZIn
     g$rib?$24069$1POZIn
     (record-predicate g$9816$20056$1POZIn))
   (g$make-rib$20062$1POZIn
     g$make-rib$24070$1POZIn
     (record-constructor g$9817$20058$1POZIn))
   (g$rib-sym*$20063$1POZIn
     g$rib-sym*$24071$1POZIn
     (record-accessor g$9816$20056$1POZIn '0))
   (g$rib-mark**$20064$1POZIn
     g$rib-mark**$24072$1POZIn
     (record-accessor g$9816$20056$1POZIn '1))
   (g$rib-label*$20065$1POZIn
     g$rib-label*$24073$1POZIn
     (record-accessor g$9816$20056$1POZIn '2))
   (g$rib-sealed/freq$20066$1POZIn
     g$rib-sealed/freq$24074$1POZIn
     (record-accessor g$9816$20056$1POZIn '3))
   (g$rib-cache$20067$1POZIn
     g$rib-cache$24075$1POZIn
     (record-accessor g$9816$20056$1POZIn '4))
   (g$set-rib-sym*!$20068$1POZIn
     g$set-rib-sym*!$24076$1POZIn
     (record-mutator g$9816$20056$1POZIn '0))
   (g$set-rib-mark**!$20069$1POZIn
     g$set-rib-mark**!$24077$1POZIn
     (record-mutator g$9816$20056$1POZIn '1))
   (g$set-rib-label*!$20070$1POZIn
     g$set-rib-label*!$24078$1POZIn
     (record-mutator g$9816$20056$1POZIn '2))
   (g$set-rib-sealed/freq!$20071$1POZIn
     g$set-rib-sealed/freq!$24079$1POZIn
     (record-mutator g$9816$20056$1POZIn '3))
   (g$set-rib-cache!$20072$1POZIn
     g$set-rib-cache!$24080$1POZIn
     (record-mutator g$9816$20056$1POZIn '4))
   (g$make-empty-rib$20073$1POZIn
     g$make-empty-rib$24081$1POZIn
     (case-lambda (() (g$make-rib$20062$1POZIn '() '() '() '#f '#f))))
   (g$make-cache-rib$20074$1POZIn
     g$make-cache-rib$24082$1POZIn
     (case-lambda
       (()
        (g$make-rib$20062$1POZIn
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$12772$1POZIn)))))
   (g$find-label$20075$1POZIn
     g$find-label$24083$1POZIn
     (case-lambda
       ((g$rib$20773$1POZIn g$sym$20774$1POZIn g$mark*$20775$1POZIn)
        ((case-lambda
           ((g$ht$20776$1POZIn)
            (if g$ht$20776$1POZIn
              (begin
                '#f
                ((case-lambda
                   ((g$cv$20777$1POZIn)
                    ((case-lambda
                       ((g$t$20778$1POZIn)
                        (if g$t$20778$1POZIn
                          (cdr g$t$20778$1POZIn)
                          (begin '#f '#f))))
                     (if g$cv$20777$1POZIn
                       (begin
                         '#f
                         (g$assp$11824$1POZIn
                           (case-lambda
                             ((g$m$20779$1POZIn)
                              (g$same-marks?$20117$1POZIn
                                g$mark*$20775$1POZIn
                                g$m$20779$1POZIn)))
                           g$cv$20777$1POZIn))
                       '#f))))
                 (g$hashtable-ref$12775$1POZIn
                   g$ht$20776$1POZIn
                   g$sym$20774$1POZIn
                   '#f)))
              '#f)))
         (g$rib-cache$20067$1POZIn g$rib$20773$1POZIn)))))
   (g$extend-rib!$20076$1POZIn
     g$extend-rib!$24084$1POZIn
     (case-lambda
       ((g$rib$20780$1POZIn
          g$id$20781$1POZIn
          g$label$20782$1POZIn
          g$sd?$20783$1POZIn)
        (letrec* ((g$find$20784$1POZIn
                    (case-lambda
                      ((g$sym$20793$1POZIn
                         g$mark*$20794$1POZIn
                         g$sym*$20795$1POZIn
                         g$mark**$20796$1POZIn
                         g$label*$20797$1POZIn)
                       (if (pair? g$sym*$20795$1POZIn)
                         (begin
                           '#f
                           (if (if (eq? g$sym$20793$1POZIn
                                        (car g$sym*$20795$1POZIn))
                                 (begin
                                   '#f
                                   (g$same-marks?$20117$1POZIn
                                     g$mark*$20794$1POZIn
                                     (car g$mark**$20796$1POZIn)))
                                 '#f)
                             g$label*$20797$1POZIn
                             (g$find$20784$1POZIn
                               g$sym$20793$1POZIn
                               g$mark*$20794$1POZIn
                               (cdr g$sym*$20795$1POZIn)
                               (cdr g$mark**$20796$1POZIn)
                               (cdr g$label*$20797$1POZIn))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$20066$1POZIn g$rib$20780$1POZIn)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$20780$1POZIn)
              (void))
            ((case-lambda
               ((g$sym$20785$1POZIn g$mark*$20786$1POZIn)
                ((case-lambda
                   ((g$sym*$20787$1POZIn)
                    ((case-lambda
                       ((g$t$20788$1POZIn)
                        (if g$t$20788$1POZIn
                          ((case-lambda
                             ((g$p$20789$1POZIn)
                              (if (not (eq? g$label$20782$1POZIn
                                            g$p$20789$1POZIn))
                                (g$syntax-violation$20732$1POZIn
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$20781$1POZIn)
                                (void))))
                           g$t$20788$1POZIn)
                          ((case-lambda
                             ((g$t$20790$1POZIn)
                              (if g$t$20790$1POZIn
                                ((case-lambda
                                   ((g$p$20791$1POZIn)
                                    (if (not (eq? g$label$20782$1POZIn
                                                  (car g$p$20791$1POZIn)))
                                      (if (not g$sd?$20783$1POZIn)
                                        (set-car!
                                          g$p$20791$1POZIn
                                          g$label$20782$1POZIn)
                                        (begin
                                          '#f
                                          (g$syntax-violation$20732$1POZIn
                                            '#f
                                            '"multiple definitions of identifier"
                                            g$id$20781$1POZIn)))
                                      (void))))
                                 g$t$20790$1POZIn)
                                (begin
                                  '#f
                                  (if (g$rib-cache$20067$1POZIn
                                        g$rib$20780$1POZIn)
                                    (g$hashtable-update!$12779$1POZIn
                                      (g$rib-cache$20067$1POZIn
                                        g$rib$20780$1POZIn)
                                      g$sym$20785$1POZIn
                                      (case-lambda
                                        ((g$e$20792$1POZIn)
                                         (cons
                                           (cons
                                             g$mark*$20786$1POZIn
                                             g$label$20782$1POZIn)
                                           g$e$20792$1POZIn)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$20068$1POZIn
                                    g$rib$20780$1POZIn
                                    (cons
                                      g$sym$20785$1POZIn
                                      g$sym*$20787$1POZIn))
                                  (g$set-rib-mark**!$20069$1POZIn
                                    g$rib$20780$1POZIn
                                    (cons
                                      g$mark*$20786$1POZIn
                                      (g$rib-mark**$20064$1POZIn
                                        g$rib$20780$1POZIn)))
                                  (g$set-rib-label*!$20070$1POZIn
                                    g$rib$20780$1POZIn
                                    (cons
                                      g$label$20782$1POZIn
                                      (g$rib-label*$20065$1POZIn
                                        g$rib$20780$1POZIn)))))))
                           (if (g$memq$11825$1POZIn
                                 g$sym$20785$1POZIn
                                 (g$rib-sym*$20063$1POZIn
                                   g$rib$20780$1POZIn))
                             (begin
                               '#f
                               (g$find$20784$1POZIn
                                 g$sym$20785$1POZIn
                                 g$mark*$20786$1POZIn
                                 g$sym*$20787$1POZIn
                                 (g$rib-mark**$20064$1POZIn
                                   g$rib$20780$1POZIn)
                                 (g$rib-label*$20065$1POZIn
                                   g$rib$20780$1POZIn)))
                             '#f)))))
                     (g$find-label$20075$1POZIn
                       g$rib$20780$1POZIn
                       g$sym$20785$1POZIn
                       g$mark*$20786$1POZIn))))
                 (g$rib-sym*$20063$1POZIn g$rib$20780$1POZIn))))
             (g$id->sym$20116$1POZIn g$id$20781$1POZIn)
             (g$stx-mark*$20090$1POZIn g$id$20781$1POZIn)))))))
   (g$extend-rib/nc!$20077$1POZIn
     g$extend-rib/nc!$24085$1POZIn
     (case-lambda
       ((g$rib$20798$1POZIn g$id$20799$1POZIn g$label$20800$1POZIn)
        ((case-lambda
           ((g$sym$20801$1POZIn g$mark*$20802$1POZIn)
            ((case-lambda
               ((g$sym*$20803$1POZIn)
                (begin
                  (if (g$rib-cache$20067$1POZIn g$rib$20798$1POZIn)
                    (g$hashtable-update!$12779$1POZIn
                      (g$rib-cache$20067$1POZIn g$rib$20798$1POZIn)
                      g$sym$20801$1POZIn
                      (case-lambda
                        ((g$e$20804$1POZIn)
                         (cons
                           (cons
                             g$mark*$20802$1POZIn
                             g$label$20800$1POZIn)
                           g$e$20804$1POZIn)))
                      '())
                    (void))
                  (g$set-rib-sym*!$20068$1POZIn
                    g$rib$20798$1POZIn
                    (cons g$sym$20801$1POZIn g$sym*$20803$1POZIn))
                  (g$set-rib-mark**!$20069$1POZIn
                    g$rib$20798$1POZIn
                    (cons
                      g$mark*$20802$1POZIn
                      (g$rib-mark**$20064$1POZIn g$rib$20798$1POZIn)))
                  (g$set-rib-label*!$20070$1POZIn
                    g$rib$20798$1POZIn
                    (cons
                      g$label$20800$1POZIn
                      (g$rib-label*$20065$1POZIn
                        g$rib$20798$1POZIn))))))
             (g$rib-sym*$20063$1POZIn g$rib$20798$1POZIn))))
         (g$id->sym$20116$1POZIn g$id$20799$1POZIn)
         (g$stx-mark*$20090$1POZIn g$id$20799$1POZIn)))))
   (g$make-rib-map$20078$1POZIn
     g$make-rib-map$24086$1POZIn
     (case-lambda
       ((g$sym*$20805$1POZIn)
        ((case-lambda
           ((g$ht$20806$1POZIn)
            ((letrec ((g$f$20807$1POZIn
                        (case-lambda
                          ((g$i$20808$1POZIn g$sym*$20809$1POZIn)
                           (if (null? g$sym*$20809$1POZIn)
                             g$ht$20806$1POZIn
                             (begin
                               (g$hashtable-update!$12779$1POZIn
                                 g$ht$20806$1POZIn
                                 (car g$sym*$20809$1POZIn)
                                 (case-lambda
                                   ((g$x$20810$1POZIn)
                                    (cons
                                      g$i$20808$1POZIn
                                      g$x$20810$1POZIn)))
                                 '())
                               (g$f$20807$1POZIn
                                 (+ g$i$20808$1POZIn '1)
                                 (cdr g$sym*$20809$1POZIn))))))))
               g$f$20807$1POZIn)
             '0
             g$sym*$20805$1POZIn)))
         (g$make-eq-hashtable$12772$1POZIn)))))
   (g$seal-rib!$20079$1POZIn
     g$seal-rib!$24087$1POZIn
     (case-lambda
       ((g$rib$20811$1POZIn)
        ((case-lambda
           ((g$sym*$20812$1POZIn)
            (if (not (null? g$sym*$20812$1POZIn))
              (begin
                (g$set-rib-sym*!$20068$1POZIn
                  g$rib$20811$1POZIn
                  (g$list->vector$12676$1POZIn g$sym*$20812$1POZIn))
                (g$set-rib-mark**!$20069$1POZIn
                  g$rib$20811$1POZIn
                  (g$list->vector$12676$1POZIn
                    (g$rib-mark**$20064$1POZIn g$rib$20811$1POZIn)))
                (g$set-rib-label*!$20070$1POZIn
                  g$rib$20811$1POZIn
                  (g$list->vector$12676$1POZIn
                    (g$rib-label*$20065$1POZIn g$rib$20811$1POZIn)))
                (g$set-rib-sealed/freq!$20071$1POZIn
                  g$rib$20811$1POZIn
                  (g$make-rib-map$20078$1POZIn g$sym*$20812$1POZIn)))
              (void))))
         (g$rib-sym*$20063$1POZIn g$rib$20811$1POZIn)))))
   (g$unseal-rib!$20080$1POZIn
     g$unseal-rib!$24088$1POZIn
     (case-lambda
       ((g$rib$20813$1POZIn)
        (if (g$rib-sealed/freq$20066$1POZIn g$rib$20813$1POZIn)
          (begin
            (g$set-rib-sealed/freq!$20071$1POZIn g$rib$20813$1POZIn '#f)
            (g$set-rib-sym*!$20068$1POZIn
              g$rib$20813$1POZIn
              (vector->list
                (g$rib-sym*$20063$1POZIn g$rib$20813$1POZIn)))
            (g$set-rib-mark**!$20069$1POZIn
              g$rib$20813$1POZIn
              (vector->list
                (g$rib-mark**$20064$1POZIn g$rib$20813$1POZIn)))
            (g$set-rib-label*!$20070$1POZIn
              g$rib$20813$1POZIn
              (vector->list
                (g$rib-label*$20065$1POZIn g$rib$20813$1POZIn))))
          (void)))))
   (g$make-full-rib$20081$1POZIn
     g$make-full-rib$24089$1POZIn
     (case-lambda
       ((g$id*$20814$1POZIn g$label*$20815$1POZIn)
        ((case-lambda
           ((g$r$20816$1POZIn)
            (begin
              (g$seal-rib!$20079$1POZIn g$r$20816$1POZIn)
              g$r$20816$1POZIn)))
         (g$make-rib$20062$1POZIn
           (g$map$11833$1POZIn
             g$id->sym$20116$1POZIn
             g$id*$20814$1POZIn)
           (g$map$11833$1POZIn
             g$stx-mark*$20090$1POZIn
             g$id*$20814$1POZIn)
           g$label*$20815$1POZIn
           '#f
           '#f)))))
   (g$9845$20082$1POZIn
     g$9845$24090$1POZIn
     (make-record-type-descriptor
       'stx
       '#f
       'g$9848$1POZIn
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$9847$20083$1POZIn g$9847$24091$1POZIn '#f)
   (g$9846$20084$1POZIn
     g$9846$24092$1POZIn
     (make-record-constructor-descriptor
       g$9845$20082$1POZIn
       '#f
       g$9847$20083$1POZIn))
   (g$stx?$20087$1POZIn
     g$stx?$24093$1POZIn
     (record-predicate g$9845$20082$1POZIn))
   (g$make-stx$20088$1POZIn
     g$make-stx$24094$1POZIn
     (record-constructor g$9846$20084$1POZIn))
   (g$stx-expr$20089$1POZIn
     g$stx-expr$24095$1POZIn
     (record-accessor g$9845$20082$1POZIn '0))
   (g$stx-mark*$20090$1POZIn
     g$stx-mark*$24096$1POZIn
     (record-accessor g$9845$20082$1POZIn '1))
   (g$stx-subst*$20091$1POZIn
     g$stx-subst*$24097$1POZIn
     (record-accessor g$9845$20082$1POZIn '2))
   (g$stx-ae*$20092$1POZIn
     g$stx-ae*$24098$1POZIn
     (record-accessor g$9845$20082$1POZIn '3))
   (g$set-stx-expr!$20093$1POZIn
     g$set-stx-expr!$24099$1POZIn
     (record-mutator g$9845$20082$1POZIn '0))
   (g$set-stx-mark*!$20094$1POZIn
     g$set-stx-mark*!$24100$1POZIn
     (record-mutator g$9845$20082$1POZIn '1))
   (g$set-stx-subst*!$20095$1POZIn
     g$set-stx-subst*!$24101$1POZIn
     (record-mutator g$9845$20082$1POZIn '2))
   (g$set-stx-ae*!$20096$1POZIn
     g$set-stx-ae*!$24102$1POZIn
     (record-mutator g$9845$20082$1POZIn '3))
   (g$rp$20097$1POZIn
     g$rp$24103$1POZIn
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$20817$1POZIn g$p$20818$1POZIn g$wr$20819$1POZIn)
          (begin
            (display '"#<syntax " g$p$20818$1POZIn)
            (write
              (g$stx->datum$20126$1POZIn g$x$20817$1POZIn)
              g$p$20818$1POZIn)
            ((case-lambda
               ((g$expr$20820$1POZIn)
                (if (annotation? g$expr$20820$1POZIn)
                  ((case-lambda
                     ((g$src$20821$1POZIn)
                      (if (pair? g$src$20821$1POZIn)
                        (begin
                          (display '" (" g$p$20818$1POZIn)
                          (display
                            (cdr g$src$20821$1POZIn)
                            g$p$20818$1POZIn)
                          (display '" of " g$p$20818$1POZIn)
                          (display
                            (car g$src$20821$1POZIn)
                            g$p$20818$1POZIn)
                          (display '")" g$p$20818$1POZIn))
                        (void))))
                   (annotation-source g$expr$20820$1POZIn))
                  (void))))
             (g$stx-expr$20089$1POZIn g$x$20817$1POZIn))
            (display '">" g$p$20818$1POZIn))))))
   (g$datum->stx$20098$1POZIn
     g$datum->stx$24104$1POZIn
     (case-lambda
       ((g$id$20822$1POZIn g$datum$20823$1POZIn)
        (g$make-stx$20088$1POZIn
          g$datum$20823$1POZIn
          (g$stx-mark*$20090$1POZIn g$id$20822$1POZIn)
          (g$stx-subst*$20091$1POZIn g$id$20822$1POZIn)
          (g$stx-ae*$20092$1POZIn g$id$20822$1POZIn)))))
   (g$gen-mark$20099$1POZIn
     g$gen-mark$24105$1POZIn
     (case-lambda (() (string '#\m))))
   (g$anti-mark$20100$1POZIn g$anti-mark$24106$1POZIn '#f)
   (g$anti-mark?$20101$1POZIn g$anti-mark?$24107$1POZIn not)
   (g$join-wraps$20102$1POZIn
     g$join-wraps$24108$1POZIn
     (case-lambda
       ((g$m1*$20824$1POZIn
          g$s1*$20825$1POZIn
          g$ae1*$20826$1POZIn
          g$e$20827$1POZIn)
        (letrec* ((g$cancel$20828$1POZIn
                    (case-lambda
                      ((g$ls1$20832$1POZIn g$ls2$20833$1POZIn)
                       ((letrec ((g$f$20834$1POZIn
                                   (case-lambda
                                     ((g$x$20835$1POZIn
                                        g$ls1$20836$1POZIn)
                                      (if (null? g$ls1$20836$1POZIn)
                                        (cdr g$ls2$20833$1POZIn)
                                        (cons
                                          g$x$20835$1POZIn
                                          (g$f$20834$1POZIn
                                            (car g$ls1$20836$1POZIn)
                                            (cdr g$ls1$20836$1POZIn))))))))
                          g$f$20834$1POZIn)
                        (car g$ls1$20832$1POZIn)
                        (cdr g$ls1$20832$1POZIn))))))
          ((case-lambda
             ((g$m2*$20829$1POZIn
                g$s2*$20830$1POZIn
                g$ae2*$20831$1POZIn)
              (if (if (not (null? g$m1*$20824$1POZIn))
                    (if (not (null? g$m2*$20829$1POZIn))
                      (begin
                        '#f
                        (g$anti-mark?$20101$1POZIn
                          (car g$m2*$20829$1POZIn)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$20828$1POZIn
                    g$m1*$20824$1POZIn
                    g$m2*$20829$1POZIn)
                  (g$cancel$20828$1POZIn
                    g$s1*$20825$1POZIn
                    g$s2*$20830$1POZIn)
                  (g$cancel$20828$1POZIn
                    g$ae1*$20826$1POZIn
                    g$ae2*$20831$1POZIn))
                (values
                  (append g$m1*$20824$1POZIn g$m2*$20829$1POZIn)
                  (append g$s1*$20825$1POZIn g$s2*$20830$1POZIn)
                  (append g$ae1*$20826$1POZIn g$ae2*$20831$1POZIn)))))
           (g$stx-mark*$20090$1POZIn g$e$20827$1POZIn)
           (g$stx-subst*$20091$1POZIn g$e$20827$1POZIn)
           (g$stx-ae*$20092$1POZIn g$e$20827$1POZIn))))))
   (g$mkstx$20103$1POZIn
     g$mkstx$24109$1POZIn
     (case-lambda
       ((g$e$20837$1POZIn
          g$m*$20838$1POZIn
          g$s*$20839$1POZIn
          g$ae*$20840$1POZIn)
        (if (if (g$stx?$20087$1POZIn g$e$20837$1POZIn)
              (begin
                '#f
                (not (g$top-marked?$20049$1POZIn g$m*$20838$1POZIn)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$20102$1POZIn
                 g$m*$20838$1POZIn
                 g$s*$20839$1POZIn
                 g$ae*$20840$1POZIn
                 g$e$20837$1POZIn)))
            (case-lambda
              ((g$m*$20844$1POZIn g$s*$20845$1POZIn g$ae*$20846$1POZIn)
               ((case-lambda
                  ((g$ae*$20847$1POZIn
                     g$s*$20848$1POZIn
                     g$m*$20849$1POZIn)
                   (g$make-stx$20088$1POZIn
                     (g$stx-expr$20089$1POZIn g$e$20837$1POZIn)
                     g$m*$20849$1POZIn
                     g$s*$20848$1POZIn
                     g$ae*$20847$1POZIn)))
                g$ae*$20846$1POZIn
                g$s*$20845$1POZIn
                g$m*$20844$1POZIn))))
          (g$make-stx$20088$1POZIn
            g$e$20837$1POZIn
            g$m*$20838$1POZIn
            g$s*$20839$1POZIn
            g$ae*$20840$1POZIn)))))
   (g$add-mark$20104$1POZIn
     g$add-mark$24110$1POZIn
     (case-lambda
       ((g$m$20850$1POZIn g$e$20851$1POZIn g$ae$20852$1POZIn)
        (g$mkstx$20103$1POZIn
          g$e$20851$1POZIn
          (list g$m$20850$1POZIn)
          '(shift)
          (list g$ae$20852$1POZIn)))))
   (g$add-subst$20105$1POZIn
     g$add-subst$24111$1POZIn
     (case-lambda
       ((g$subst$20853$1POZIn g$e$20854$1POZIn)
        (g$mkstx$20103$1POZIn
          g$e$20854$1POZIn
          '()
          (list g$subst$20853$1POZIn)
          '()))))
   (g$syntax-kind?$20106$1POZIn
     g$syntax-kind?$24112$1POZIn
     (case-lambda
       ((g$x$20855$1POZIn g$p?$20856$1POZIn)
        (if (g$stx?$20087$1POZIn g$x$20855$1POZIn)
          (g$syntax-kind?$20106$1POZIn
            (g$stx-expr$20089$1POZIn g$x$20855$1POZIn)
            g$p?$20856$1POZIn)
          (if (annotation? g$x$20855$1POZIn)
            (g$syntax-kind?$20106$1POZIn
              (annotation-expression g$x$20855$1POZIn)
              g$p?$20856$1POZIn)
            (begin '#f (g$p?$20856$1POZIn g$x$20855$1POZIn)))))))
   (g$syntax-vector->list$20107$1POZIn
     g$syntax-vector->list$24113$1POZIn
     (case-lambda
       ((g$x$20857$1POZIn)
        (if (g$stx?$20087$1POZIn g$x$20857$1POZIn)
          ((case-lambda
             ((g$ls$20858$1POZIn
                g$m*$20859$1POZIn
                g$s*$20860$1POZIn
                g$ae*$20861$1POZIn)
              (g$map$11833$1POZIn
                (case-lambda
                  ((g$x$20862$1POZIn)
                   (g$mkstx$20103$1POZIn
                     g$x$20862$1POZIn
                     g$m*$20859$1POZIn
                     g$s*$20860$1POZIn
                     g$ae*$20861$1POZIn)))
                g$ls$20858$1POZIn)))
           (g$syntax-vector->list$20107$1POZIn
             (g$stx-expr$20089$1POZIn g$x$20857$1POZIn))
           (g$stx-mark*$20090$1POZIn g$x$20857$1POZIn)
           (g$stx-subst*$20091$1POZIn g$x$20857$1POZIn)
           (g$stx-ae*$20092$1POZIn g$x$20857$1POZIn))
          (if (annotation? g$x$20857$1POZIn)
            (g$syntax-vector->list$20107$1POZIn
              (annotation-expression g$x$20857$1POZIn))
            (if (g$vector?$12663$1POZIn g$x$20857$1POZIn)
              (vector->list g$x$20857$1POZIn)
              (begin
                '#f
                (assertion-violation
                  'syntax-vector->list
                  '"BUG: not a syntax vector"
                  g$x$20857$1POZIn))))))))
   (g$syntax-pair?$20108$1POZIn
     g$syntax-pair?$24114$1POZIn
     (case-lambda
       ((g$x$20863$1POZIn)
        (g$syntax-kind?$20106$1POZIn g$x$20863$1POZIn pair?))))
   (g$syntax-vector?$20109$1POZIn
     g$syntax-vector?$24115$1POZIn
     (case-lambda
       ((g$x$20864$1POZIn)
        (g$syntax-kind?$20106$1POZIn
          g$x$20864$1POZIn
          g$vector?$12663$1POZIn))))
   (g$syntax-null?$20110$1POZIn
     g$syntax-null?$24116$1POZIn
     (case-lambda
       ((g$x$20865$1POZIn)
        (g$syntax-kind?$20106$1POZIn g$x$20865$1POZIn null?))))
   (g$syntax-list?$20111$1POZIn
     g$syntax-list?$24117$1POZIn
     (case-lambda
       ((g$x$20866$1POZIn)
        ((case-lambda
           ((g$t$20867$1POZIn)
            (if g$t$20867$1POZIn
              g$t$20867$1POZIn
              (begin
                '#f
                (if (g$syntax-pair?$20108$1POZIn g$x$20866$1POZIn)
                  (begin
                    '#f
                    (g$syntax-list?$20111$1POZIn
                      (g$syntax-cdr$20113$1POZIn g$x$20866$1POZIn)))
                  '#f)))))
         (g$syntax-null?$20110$1POZIn g$x$20866$1POZIn)))))
   (g$syntax-car$20112$1POZIn
     g$syntax-car$24118$1POZIn
     (case-lambda
       ((g$x$20868$1POZIn)
        (if (g$stx?$20087$1POZIn g$x$20868$1POZIn)
          (g$mkstx$20103$1POZIn
            (g$syntax-car$20112$1POZIn
              (g$stx-expr$20089$1POZIn g$x$20868$1POZIn))
            (g$stx-mark*$20090$1POZIn g$x$20868$1POZIn)
            (g$stx-subst*$20091$1POZIn g$x$20868$1POZIn)
            (g$stx-ae*$20092$1POZIn g$x$20868$1POZIn))
          (if (annotation? g$x$20868$1POZIn)
            (g$syntax-car$20112$1POZIn
              (annotation-expression g$x$20868$1POZIn))
            (if (pair? g$x$20868$1POZIn)
              (car g$x$20868$1POZIn)
              (begin
                '#f
                (assertion-violation
                  'syntax-car
                  '"BUG: not a pair"
                  g$x$20868$1POZIn))))))))
   (g$syntax-cdr$20113$1POZIn
     g$syntax-cdr$24119$1POZIn
     (case-lambda
       ((g$x$20869$1POZIn)
        (if (g$stx?$20087$1POZIn g$x$20869$1POZIn)
          (g$mkstx$20103$1POZIn
            (g$syntax-cdr$20113$1POZIn
              (g$stx-expr$20089$1POZIn g$x$20869$1POZIn))
            (g$stx-mark*$20090$1POZIn g$x$20869$1POZIn)
            (g$stx-subst*$20091$1POZIn g$x$20869$1POZIn)
            (g$stx-ae*$20092$1POZIn g$x$20869$1POZIn))
          (if (annotation? g$x$20869$1POZIn)
            (g$syntax-cdr$20113$1POZIn
              (annotation-expression g$x$20869$1POZIn))
            (if (pair? g$x$20869$1POZIn)
              (cdr g$x$20869$1POZIn)
              (begin
                '#f
                (assertion-violation
                  'syntax-cdr
                  '"BUG: not a pair"
                  g$x$20869$1POZIn))))))))
   (g$syntax->list$20114$1POZIn
     g$syntax->list$24120$1POZIn
     (case-lambda
       ((g$x$20870$1POZIn)
        (if (g$syntax-pair?$20108$1POZIn g$x$20870$1POZIn)
          (cons
            (g$syntax-car$20112$1POZIn g$x$20870$1POZIn)
            (g$syntax->list$20114$1POZIn
              (g$syntax-cdr$20113$1POZIn g$x$20870$1POZIn)))
          (if (g$syntax-null?$20110$1POZIn g$x$20870$1POZIn)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$20870$1POZIn))))))
   (g$id?$20115$1POZIn
     g$id?$24121$1POZIn
     (case-lambda
       ((g$x$20871$1POZIn)
        (if (g$stx?$20087$1POZIn g$x$20871$1POZIn)
          (begin
            '#f
            ((case-lambda
               ((g$expr$20872$1POZIn)
                (g$symbol?$12665$1POZIn
                  (if (annotation? g$expr$20872$1POZIn)
                    (annotation-stripped g$expr$20872$1POZIn)
                    g$expr$20872$1POZIn))))
             (g$stx-expr$20089$1POZIn g$x$20871$1POZIn)))
          '#f))))
   (g$id->sym$20116$1POZIn
     g$id->sym$24122$1POZIn
     (case-lambda
       ((g$x$20873$1POZIn)
        (begin
          (if (not (g$stx?$20087$1POZIn g$x$20873$1POZIn))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$20873$1POZIn)
            (void))
          ((case-lambda
             ((g$expr$20874$1POZIn)
              ((case-lambda
                 ((g$sym$20875$1POZIn)
                  (if (g$symbol?$12665$1POZIn g$sym$20875$1POZIn)
                    g$sym$20875$1POZIn
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$20873$1POZIn))))
               (if (annotation? g$expr$20874$1POZIn)
                 (annotation-stripped g$expr$20874$1POZIn)
                 g$expr$20874$1POZIn))))
           (g$stx-expr$20089$1POZIn g$x$20873$1POZIn))))))
   (g$same-marks?$20117$1POZIn
     g$same-marks?$24123$1POZIn
     (case-lambda
       ((g$x$20876$1POZIn g$y$20877$1POZIn)
        ((case-lambda
           ((g$t$20878$1POZIn)
            (if g$t$20878$1POZIn
              g$t$20878$1POZIn
              (begin
                '#f
                (if (pair? g$x$20876$1POZIn)
                  (if (pair? g$y$20877$1POZIn)
                    (if (eq? (car g$x$20876$1POZIn)
                             (car g$y$20877$1POZIn))
                      (begin
                        '#f
                        (g$same-marks?$20117$1POZIn
                          (cdr g$x$20876$1POZIn)
                          (cdr g$y$20877$1POZIn)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$20876$1POZIn)
           (begin '#f (null? g$y$20877$1POZIn))
           '#f)))))
   (g$bound-id=?$20118$1POZIn
     g$bound-id=?$24124$1POZIn
     (case-lambda
       ((g$x$20879$1POZIn g$y$20880$1POZIn)
        (if (eq? (g$id->sym$20116$1POZIn g$x$20879$1POZIn)
                 (g$id->sym$20116$1POZIn g$y$20880$1POZIn))
          (begin
            '#f
            (g$same-marks?$20117$1POZIn
              (g$stx-mark*$20090$1POZIn g$x$20879$1POZIn)
              (g$stx-mark*$20090$1POZIn g$y$20880$1POZIn)))
          '#f))))
   (g$free-id=?$20119$1POZIn
     g$free-id=?$24125$1POZIn
     (case-lambda
       ((g$i$20881$1POZIn g$j$20882$1POZIn)
        ((case-lambda
           ((g$t0$20883$1POZIn g$t1$20884$1POZIn)
            (if ((case-lambda
                   ((g$t$20885$1POZIn)
                    (if g$t$20885$1POZIn
                      g$t$20885$1POZIn
                      (begin '#f g$t1$20884$1POZIn))))
                 g$t0$20883$1POZIn)
              (eq? g$t0$20883$1POZIn g$t1$20884$1POZIn)
              (eq? (g$id->sym$20116$1POZIn g$i$20881$1POZIn)
                   (g$id->sym$20116$1POZIn g$j$20882$1POZIn)))))
         (g$id->real-label$20129$1POZIn g$i$20881$1POZIn)
         (g$id->real-label$20129$1POZIn g$j$20882$1POZIn)))))
   (g$valid-bound-ids?$20120$1POZIn
     g$valid-bound-ids?$24126$1POZIn
     (case-lambda
       ((g$id*$20886$1POZIn)
        (if (g$for-all$11831$1POZIn
              g$id?$20115$1POZIn
              g$id*$20886$1POZIn)
          (begin
            '#f
            (g$distinct-bound-ids?$20121$1POZIn g$id*$20886$1POZIn))
          '#f))))
   (g$distinct-bound-ids?$20121$1POZIn
     g$distinct-bound-ids?$24127$1POZIn
     (case-lambda
       ((g$id*$20887$1POZIn)
        ((case-lambda
           ((g$t$20888$1POZIn)
            (if g$t$20888$1POZIn
              g$t$20888$1POZIn
              (begin
                '#f
                (if (not (g$bound-id-member?$20122$1POZIn
                           (car g$id*$20887$1POZIn)
                           (cdr g$id*$20887$1POZIn)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$20121$1POZIn
                      (cdr g$id*$20887$1POZIn)))
                  '#f)))))
         (null? g$id*$20887$1POZIn)))))
   (g$bound-id-member?$20122$1POZIn
     g$bound-id-member?$24128$1POZIn
     (case-lambda
       ((g$id$20889$1POZIn g$id*$20890$1POZIn)
        (if (pair? g$id*$20890$1POZIn)
          (begin
            '#f
            ((case-lambda
               ((g$t$20891$1POZIn)
                (if g$t$20891$1POZIn
                  g$t$20891$1POZIn
                  (begin
                    '#f
                    (g$bound-id-member?$20122$1POZIn
                      g$id$20889$1POZIn
                      (cdr g$id*$20890$1POZIn))))))
             (g$bound-id=?$20118$1POZIn
               g$id$20889$1POZIn
               (car g$id*$20890$1POZIn))))
          '#f))))
   (g$self-evaluating?$20123$1POZIn
     g$self-evaluating?$24129$1POZIn
     (case-lambda
       ((g$x$20892$1POZIn)
        ((case-lambda
           ((g$t$20893$1POZIn)
            (if g$t$20893$1POZIn
              g$t$20893$1POZIn
              ((case-lambda
                 ((g$t$20894$1POZIn)
                  (if g$t$20894$1POZIn
                    g$t$20894$1POZIn
                    ((case-lambda
                       ((g$t$20895$1POZIn)
                        (if g$t$20895$1POZIn
                          g$t$20895$1POZIn
                          ((case-lambda
                             ((g$t$20896$1POZIn)
                              (if g$t$20896$1POZIn
                                g$t$20896$1POZIn
                                (begin
                                  '#f
                                  (g$bytevector?$12664$1POZIn
                                    g$x$20892$1POZIn)))))
                           (g$boolean?$12666$1POZIn
                             g$x$20892$1POZIn)))))
                     (g$char?$12662$1POZIn g$x$20892$1POZIn)))))
               (string? g$x$20892$1POZIn)))))
         (g$number?$13600$1POZIn g$x$20892$1POZIn)))))
   (g$strip-annotations$20124$1POZIn
     g$strip-annotations$24130$1POZIn
     (case-lambda
       ((g$x$20897$1POZIn)
        (if (pair? g$x$20897$1POZIn)
          (cons
            (g$strip-annotations$20124$1POZIn (car g$x$20897$1POZIn))
            (g$strip-annotations$20124$1POZIn (cdr g$x$20897$1POZIn)))
          (if (g$vector?$12663$1POZIn g$x$20897$1POZIn)
            (g$vector-map$12732$1POZIn
              g$strip-annotations$20124$1POZIn
              g$x$20897$1POZIn)
            (if (annotation? g$x$20897$1POZIn)
              (annotation-stripped g$x$20897$1POZIn)
              (begin '#f g$x$20897$1POZIn)))))))
   (g$strip$20125$1POZIn
     g$strip$24131$1POZIn
     (case-lambda
       ((g$x$20898$1POZIn g$m*$20899$1POZIn)
        (if (g$top-marked?$20049$1POZIn g$m*$20899$1POZIn)
          (if ((case-lambda
                 ((g$t$20900$1POZIn)
                  (if g$t$20900$1POZIn
                    g$t$20900$1POZIn
                    ((case-lambda
                       ((g$t$20901$1POZIn)
                        (if g$t$20901$1POZIn
                          g$t$20901$1POZIn
                          (begin
                            '#f
                            (if (g$vector?$12663$1POZIn
                                  g$x$20898$1POZIn)
                              (if (g$>$13621$1POZIn
                                    (vector-length g$x$20898$1POZIn)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$12678$1POZIn
                                      g$x$20898$1POZIn
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$20898$1POZIn)
                       (begin '#f (annotation? (car g$x$20898$1POZIn)))
                       '#f)))))
               (annotation? g$x$20898$1POZIn))
            (g$strip-annotations$20124$1POZIn g$x$20898$1POZIn)
            g$x$20898$1POZIn)
          ((letrec ((g$f$20902$1POZIn
                      (case-lambda
                        ((g$x$20903$1POZIn)
                         (if (g$stx?$20087$1POZIn g$x$20903$1POZIn)
                           (g$strip$20125$1POZIn
                             (g$stx-expr$20089$1POZIn g$x$20903$1POZIn)
                             (g$stx-mark*$20090$1POZIn
                               g$x$20903$1POZIn))
                           (if (annotation? g$x$20903$1POZIn)
                             (annotation-stripped g$x$20903$1POZIn)
                             (if (pair? g$x$20903$1POZIn)
                               ((case-lambda
                                  ((g$a$20904$1POZIn g$d$20905$1POZIn)
                                   (if (if (eq? g$a$20904$1POZIn
                                                (car g$x$20903$1POZIn))
                                         (begin
                                           '#f
                                           (eq? g$d$20905$1POZIn
                                                (cdr g$x$20903$1POZIn)))
                                         '#f)
                                     g$x$20903$1POZIn
                                     (cons
                                       g$a$20904$1POZIn
                                       g$d$20905$1POZIn))))
                                (g$f$20902$1POZIn
                                  (car g$x$20903$1POZIn))
                                (g$f$20902$1POZIn
                                  (cdr g$x$20903$1POZIn)))
                               (if (g$vector?$12663$1POZIn
                                     g$x$20903$1POZIn)
                                 ((case-lambda
                                    ((g$old$20906$1POZIn)
                                     ((case-lambda
                                        ((g$new$20907$1POZIn)
                                         (if (g$for-all$11831$1POZIn
                                               eq?
                                               g$old$20906$1POZIn
                                               g$new$20907$1POZIn)
                                           g$x$20903$1POZIn
                                           (g$list->vector$12676$1POZIn
                                             g$new$20907$1POZIn))))
                                      (g$map$11833$1POZIn
                                        g$f$20902$1POZIn
                                        g$old$20906$1POZIn))))
                                  (vector->list g$x$20903$1POZIn))
                                 (begin '#f g$x$20903$1POZIn)))))))))
             g$f$20902$1POZIn)
           g$x$20898$1POZIn)))))
   (g$stx->datum$20126$1POZIn
     g$stx->datum$24132$1POZIn
     (case-lambda
       ((g$x$20908$1POZIn)
        (g$strip$20125$1POZIn g$x$20908$1POZIn '()))))
   (g$same-marks*?$20127$1POZIn
     g$same-marks*?$24133$1POZIn
     (case-lambda
       ((g$mark*$20909$1POZIn g$mark**$20910$1POZIn g$si$20911$1POZIn)
        (if (null? g$si$20911$1POZIn)
          '#f
          (if (g$same-marks?$20117$1POZIn
                g$mark*$20909$1POZIn
                (g$vector-ref$12678$1POZIn
                  g$mark**$20910$1POZIn
                  (car g$si$20911$1POZIn)))
            (car g$si$20911$1POZIn)
            (g$same-marks*?$20127$1POZIn
              g$mark*$20909$1POZIn
              g$mark**$20910$1POZIn
              (cdr g$si$20911$1POZIn)))))))
   (g$id->label$20128$1POZIn
     g$id->label$24134$1POZIn
     (case-lambda
       ((g$id$20912$1POZIn)
        ((case-lambda
           ((g$t$20913$1POZIn)
            (if g$t$20913$1POZIn
              g$t$20913$1POZIn
              (begin
                '#f
                ((case-lambda
                   ((g$t$20914$1POZIn)
                    (if g$t$20914$1POZIn
                      ((case-lambda
                         ((g$env$20915$1POZIn)
                          ((case-lambda
                             ((g$rib$20916$1POZIn)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$20054$1POZIn
                                     g$id$20912$1POZIn
                                     g$rib$20916$1POZIn
                                     '#f)))
                                (case-lambda
                                  ((g$lab$20919$1POZIn
                                     g$_loc$20920$1POZIn)
                                   ((case-lambda
                                      ((g$_loc$20921$1POZIn
                                         g$lab$20922$1POZIn)
                                       (begin
                                         (g$extend-rib!$20076$1POZIn
                                           g$rib$20916$1POZIn
                                           g$id$20912$1POZIn
                                           g$lab$20922$1POZIn
                                           '#t)
                                         g$lab$20922$1POZIn)))
                                    g$_loc$20920$1POZIn
                                    g$lab$20919$1POZIn))))))
                           (g$interaction-env-rib$20698$1POZIn
                             g$env$20915$1POZIn))))
                       g$t$20914$1POZIn)
                      (begin '#f '#f))))
                 (g$top-level-context$20740$1POZIn))))))
         (g$id->real-label$20129$1POZIn g$id$20912$1POZIn)))))
   (g$id->real-label$20129$1POZIn
     g$id->real-label$24135$1POZIn
     (case-lambda
       ((g$id$20923$1POZIn)
        ((case-lambda
           ((g$sym$20924$1POZIn)
            ((letrec ((g$search$20925$1POZIn
                        (case-lambda
                          ((g$subst*$20926$1POZIn g$mark*$20927$1POZIn)
                           (if (null? g$subst*$20926$1POZIn)
                             '#f
                             (if (eq? (car g$subst*$20926$1POZIn)
                                      'shift)
                               (g$search$20925$1POZIn
                                 (cdr g$subst*$20926$1POZIn)
                                 (cdr g$mark*$20927$1POZIn))
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rib$20928$1POZIn)
                                     ((case-lambda
                                        ((g$t$20929$1POZIn)
                                         (if g$t$20929$1POZIn
                                           ((case-lambda
                                              ((g$ht$20930$1POZIn)
                                               ((case-lambda
                                                  ((g$si$20931$1POZIn)
                                                   ((case-lambda
                                                      ((g$i$20932$1POZIn)
                                                       (if g$i$20932$1POZIn
                                                         (g$vector-ref$12678$1POZIn
                                                           (g$rib-label*$20065$1POZIn
                                                             g$rib$20928$1POZIn)
                                                           g$i$20932$1POZIn)
                                                         (g$search$20925$1POZIn
                                                           (cdr g$subst*$20926$1POZIn)
                                                           g$mark*$20927$1POZIn))))
                                                    (if g$si$20931$1POZIn
                                                      (begin
                                                        '#f
                                                        (g$same-marks*?$20127$1POZIn
                                                          g$mark*$20927$1POZIn
                                                          (g$rib-mark**$20064$1POZIn
                                                            g$rib$20928$1POZIn)
                                                          (g$reverse$12682$1POZIn
                                                            g$si$20931$1POZIn)))
                                                      '#f))))
                                                (g$hashtable-ref$12775$1POZIn
                                                  g$ht$20930$1POZIn
                                                  g$sym$20924$1POZIn
                                                  '#f))))
                                            g$t$20929$1POZIn)
                                           ((case-lambda
                                              ((g$t$20933$1POZIn)
                                               (if g$t$20933$1POZIn
                                                 g$t$20933$1POZIn
                                                 (begin
                                                   '#f
                                                   (begin
                                                     '#f
                                                     ((letrec ((g$f$20934$1POZIn
                                                                 (case-lambda
                                                                   ((g$sym*$20935$1POZIn
                                                                      g$mark**$20936$1POZIn
                                                                      g$label*$20937$1POZIn)
                                                                    (if (null?
                                                                          g$sym*$20935$1POZIn)
                                                                      (g$search$20925$1POZIn
                                                                        (cdr g$subst*$20926$1POZIn)
                                                                        g$mark*$20927$1POZIn)
                                                                      (if (if (eq? (car g$sym*$20935$1POZIn)
                                                                                   g$sym$20924$1POZIn)
                                                                            (begin
                                                                              '#f
                                                                              (g$same-marks?$20117$1POZIn
                                                                                (car g$mark**$20936$1POZIn)
                                                                                g$mark*$20927$1POZIn))
                                                                            '#f)
                                                                        (car g$label*$20937$1POZIn)
                                                                        (begin
                                                                          '#f
                                                                          (g$f$20934$1POZIn
                                                                            (cdr g$sym*$20935$1POZIn)
                                                                            (cdr g$mark**$20936$1POZIn)
                                                                            (cdr g$label*$20937$1POZIn)))))))))
                                                        g$f$20934$1POZIn)
                                                      (g$rib-sym*$20063$1POZIn
                                                        g$rib$20928$1POZIn)
                                                      (g$rib-mark**$20064$1POZIn
                                                        g$rib$20928$1POZIn)
                                                      (g$rib-label*$20065$1POZIn
                                                        g$rib$20928$1POZIn)))))))
                                            (g$find-label$20075$1POZIn
                                              g$rib$20928$1POZIn
                                              g$sym$20924$1POZIn
                                              g$mark*$20927$1POZIn)))))
                                      (g$rib-sealed/freq$20066$1POZIn
                                        g$rib$20928$1POZIn))))
                                  (car g$subst*$20926$1POZIn)))))))))
               g$search$20925$1POZIn)
             (g$stx-subst*$20091$1POZIn g$id$20923$1POZIn)
             (g$stx-mark*$20090$1POZIn g$id$20923$1POZIn))))
         (g$id->sym$20116$1POZIn g$id$20923$1POZIn)))))
   (g$label->binding$20130$1POZIn
     g$label->binding$24136$1POZIn
     (case-lambda
       ((g$x$20938$1POZIn g$r$20939$1POZIn)
        (if (not g$x$20938$1POZIn)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$20940$1POZIn)
              (if g$t$20940$1POZIn
                ((case-lambda
                   ((g$b$20941$1POZIn)
                    (if (if (pair? g$b$20941$1POZIn)
                          (begin
                            '#f
                            (eq? (car g$b$20941$1POZIn) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$11833$1POZIn
                          g$bless$20576$1POZIn
                          (cdr g$b$20941$1POZIn)))
                      (if (if (pair? g$b$20941$1POZIn)
                            (begin
                              '#f
                              (eq? (car g$b$20941$1POZIn) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$20942$1POZIn g$loc$20943$1POZIn)
                            (cons
                              '$rtd
                              (symbol-value g$loc$20943$1POZIn))))
                         (g$cadr$12684$1POZIn g$b$20941$1POZIn)
                         (g$cddr$12686$1POZIn g$b$20941$1POZIn))
                        (begin '#f g$b$20941$1POZIn)))))
                 g$t$20940$1POZIn)
                ((case-lambda
                   ((g$t$20944$1POZIn)
                    (if g$t$20944$1POZIn
                      (cdr g$t$20944$1POZIn)
                      ((case-lambda
                         ((g$t$20945$1POZIn)
                          (if g$t$20945$1POZIn
                            ((case-lambda
                               ((g$env$20946$1POZIn)
                                ((case-lambda
                                   ((g$t$20947$1POZIn)
                                    (if g$t$20947$1POZIn
                                      ((case-lambda
                                         ((g$p$20948$1POZIn)
                                          (g$cons*$11835$1POZIn
                                            'lexical
                                            (cdr g$p$20948$1POZIn)
                                            '#f)))
                                       g$t$20947$1POZIn)
                                      (begin
                                        '#f
                                        '(displaced-lexical . #f)))))
                                 (g$assq$11821$1POZIn
                                   g$x$20938$1POZIn
                                   (g$interaction-env-locs$20700$1POZIn
                                     g$env$20946$1POZIn)))))
                             g$t$20945$1POZIn)
                            (begin '#f '(displaced-lexical . #f)))))
                       (g$top-level-context$20740$1POZIn)))))
                 (g$assq$11821$1POZIn
                   g$x$20938$1POZIn
                   g$r$20939$1POZIn)))))
           (g$imported-label->binding$19820$1POZIn
             g$x$20938$1POZIn))))))
   (g$make-binding$20131$1POZIn g$make-binding$24137$1POZIn cons)
   (g$binding-type$20132$1POZIn g$binding-type$24138$1POZIn car)
   (g$binding-value$20133$1POZIn g$binding-value$24139$1POZIn cdr)
   (g$raise-unbound-error$20134$1POZIn
     g$raise-unbound-error$24140$1POZIn
     (case-lambda
       ((g$id$20949$1POZIn)
        (g$syntax-violation*$20731$1POZIn
          '#f
          '"unbound identifier"
          g$id$20949$1POZIn
          (g$make-undefined-violation$14217$1POZIn)))))
   (g$syntax-type$20135$1POZIn
     g$syntax-type$24141$1POZIn
     (case-lambda
       ((g$e$20950$1POZIn g$r$20951$1POZIn)
        (if (g$id?$20115$1POZIn g$e$20950$1POZIn)
          ((case-lambda
             ((g$id$20952$1POZIn)
              ((case-lambda
                 ((g$label$20953$1POZIn)
                  ((case-lambda
                     ((g$b$20954$1POZIn)
                      ((case-lambda
                         ((g$type$20955$1POZIn)
                          (begin
                            (if (not g$label$20953$1POZIn)
                              (g$raise-unbound-error$20134$1POZIn
                                g$id$20952$1POZIn)
                              (void))
                            ((case-lambda
                               ((g$t$20956$1POZIn)
                                (if (g$memv$11826$1POZIn
                                      g$t$20956$1POZIn
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$20955$1POZIn
                                    (g$binding-value$20133$1POZIn
                                      g$b$20954$1POZIn)
                                    g$id$20952$1POZIn)
                                  (begin '#f (values 'other '#f '#f)))))
                             g$type$20955$1POZIn))))
                       (g$binding-type$20132$1POZIn g$b$20954$1POZIn))))
                   (g$label->binding$20130$1POZIn
                     g$label$20953$1POZIn
                     g$r$20951$1POZIn))))
               (g$id->label$20128$1POZIn g$id$20952$1POZIn))))
           g$e$20950$1POZIn)
          (if (g$syntax-pair?$20108$1POZIn g$e$20950$1POZIn)
            ((case-lambda
               ((g$id$20957$1POZIn)
                (if (g$id?$20115$1POZIn g$id$20957$1POZIn)
                  ((case-lambda
                     ((g$label$20958$1POZIn)
                      ((case-lambda
                         ((g$b$20959$1POZIn)
                          ((case-lambda
                             ((g$type$20960$1POZIn)
                              (begin
                                (if (not g$label$20958$1POZIn)
                                  (g$raise-unbound-error$20134$1POZIn
                                    g$id$20957$1POZIn)
                                  (void))
                                ((case-lambda
                                   ((g$t$20961$1POZIn)
                                    (if (g$memv$11826$1POZIn
                                          g$t$20961$1POZIn
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$20960$1POZIn
                                        (g$binding-value$20133$1POZIn
                                          g$b$20959$1POZIn)
                                        g$id$20957$1POZIn)
                                      (begin
                                        '#f
                                        (values 'call '#f '#f)))))
                                 g$type$20960$1POZIn))))
                           (g$binding-type$20132$1POZIn
                             g$b$20959$1POZIn))))
                       (g$label->binding$20130$1POZIn
                         g$label$20958$1POZIn
                         g$r$20951$1POZIn))))
                   (g$id->label$20128$1POZIn g$id$20957$1POZIn))
                  (values 'call '#f '#f))))
             (g$syntax-car$20112$1POZIn g$e$20950$1POZIn))
            (begin
              '#f
              ((case-lambda
                 ((g$d$20962$1POZIn)
                  (if (g$self-evaluating?$20123$1POZIn g$d$20962$1POZIn)
                    (values 'constant g$d$20962$1POZIn '#f)
                    (values 'other '#f '#f))))
               (g$stx->datum$20126$1POZIn g$e$20950$1POZIn))))))))
   (g$sanitize-binding$20158$1POZIn
     g$sanitize-binding$24142$1POZIn
     (case-lambda
       ((g$x$20963$1POZIn g$src$20964$1POZIn)
        (if (g$procedure?$12667$1POZIn g$x$20963$1POZIn)
          (g$cons*$11835$1POZIn
            'local-macro
            g$x$20963$1POZIn
            g$src$20964$1POZIn)
          (if (if (pair? g$x$20963$1POZIn)
                (if (eq? (car g$x$20963$1POZIn) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$12667$1POZIn (cdr g$x$20963$1POZIn)))
                  '#f)
                '#f)
            (g$cons*$11835$1POZIn
              'local-macro!
              (cdr g$x$20963$1POZIn)
              g$src$20964$1POZIn)
            (if (if (pair? g$x$20963$1POZIn)
                  (begin '#f (eq? (car g$x$20963$1POZIn) '$rtd))
                  '#f)
              g$x$20963$1POZIn
              (if (if (pair? g$x$20963$1POZIn)
                    (begin '#f (eq? (car g$x$20963$1POZIn) 'ctv))
                    '#f)
                (g$cons*$11835$1POZIn
                  'local-ctv
                  (cdr g$x$20963$1POZIn)
                  g$src$20964$1POZIn)
                (begin
                  '#f
                  (assertion-violation
                    'expand
                    '"invalid transformer"
                    g$x$20963$1POZIn)))))))))
   (g$make-variable-transformer$20159$1POZIn
     g$make-variable-transformer$24143$1POZIn
     (case-lambda
       ((g$x$20965$1POZIn)
        (if (g$procedure?$12667$1POZIn g$x$20965$1POZIn)
          (cons 'macro! g$x$20965$1POZIn)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$20965$1POZIn)))))
   (g$make-compile-time-value$20160$1POZIn
     g$make-compile-time-value$24144$1POZIn
     (case-lambda ((g$x$20966$1POZIn) (cons 'ctv g$x$20966$1POZIn))))
   (g$variable-transformer?$20161$1POZIn
     g$variable-transformer?$24145$1POZIn
     (case-lambda
       ((g$x$20967$1POZIn)
        (if (pair? g$x$20967$1POZIn)
          (if (eq? (car g$x$20967$1POZIn) 'macro!)
            (begin
              '#f
              (g$procedure?$12667$1POZIn (cdr g$x$20967$1POZIn)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$20162$1POZIn
     g$variable-transformer-procedure$24146$1POZIn
     (case-lambda
       ((g$x$20968$1POZIn)
        (if (g$variable-transformer?$20161$1POZIn g$x$20968$1POZIn)
          (cdr g$x$20968$1POZIn)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$20968$1POZIn)))))
   (g$make-eval-transformer$20163$1POZIn
     g$make-eval-transformer$24147$1POZIn
     (case-lambda
       ((g$x$20969$1POZIn)
        (g$sanitize-binding$20158$1POZIn
          (eval-core (g$expanded->core$19553$1POZIn g$x$20969$1POZIn))
          g$x$20969$1POZIn))))
   (g$parse-define$20553$1POZIn
     g$parse-define$24148$1POZIn
     (case-lambda
       ((g$x$20970$1POZIn)
        ((case-lambda
           ((g$t$20971$1POZIn)
            ((case-lambda
               ((g$ls/false$20972$1POZIn)
                (if (if g$ls/false$20972$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20973$1POZIn
                               g$fmls$20974$1POZIn
                               g$b$20975$1POZIn
                               g$b*$20976$1POZIn)
                             (g$id?$20115$1POZIn g$id$20973$1POZIn)))
                          g$ls/false$20972$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20977$1POZIn
                         g$fmls$20978$1POZIn
                         g$b$20979$1POZIn
                         g$b*$20980$1POZIn)
                       (begin
                         (g$verify-formals$20633$1POZIn
                           g$fmls$20978$1POZIn
                           g$x$20970$1POZIn)
                         (values
                           g$id$20977$1POZIn
                           (cons
                             'defun
                             (cons
                               g$fmls$20978$1POZIn
                               (cons
                                 g$b$20979$1POZIn
                                 g$b*$20980$1POZIn)))))))
                    g$ls/false$20972$1POZIn)
                  ((case-lambda
                     ((g$t$20981$1POZIn)
                      ((case-lambda
                         ((g$ls/false$20982$1POZIn)
                          (if (if g$ls/false$20982$1POZIn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$20983$1POZIn
                                         g$val$20984$1POZIn)
                                       (g$id?$20115$1POZIn
                                         g$id$20983$1POZIn)))
                                    g$ls/false$20982$1POZIn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$20985$1POZIn g$val$20986$1POZIn)
                                 (values
                                   g$id$20985$1POZIn
                                   (cons 'expr g$val$20986$1POZIn))))
                              g$ls/false$20982$1POZIn)
                            ((case-lambda
                               ((g$t$20987$1POZIn)
                                ((case-lambda
                                   ((g$ls/false$20988$1POZIn)
                                    (if (if g$ls/false$20988$1POZIn
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$20989$1POZIn)
                                                 (g$id?$20115$1POZIn
                                                   g$id$20989$1POZIn)))
                                              g$ls/false$20988$1POZIn))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$20990$1POZIn)
                                           (values
                                             g$id$20990$1POZIn
                                             (cons
                                               'expr
                                               (g$bless$20576$1POZIn
                                                 '(void))))))
                                        g$ls/false$20988$1POZIn)
                                      (g$syntax-violation$20732$1POZIn
                                        '#f
                                        '"invalid syntax"
                                        g$t$20987$1POZIn))))
                                 (g$syntax-dispatch$20613$1POZIn
                                   g$t$20987$1POZIn
                                   '(_ any)))))
                             g$t$20981$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$20981$1POZIn
                         '(_ any any)))))
                   g$t$20971$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$20971$1POZIn
               '(_ (any . any) any . each-any)))))
         g$x$20970$1POZIn))))
   (g$parse-define-syntax$20554$1POZIn
     g$parse-define-syntax$24149$1POZIn
     (case-lambda
       ((g$x$20991$1POZIn)
        ((case-lambda
           ((g$t$20992$1POZIn)
            ((case-lambda
               ((g$ls/false$20993$1POZIn)
                (if (if g$ls/false$20993$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$20994$1POZIn g$val$20995$1POZIn)
                             (g$id?$20115$1POZIn g$id$20994$1POZIn)))
                          g$ls/false$20993$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$20996$1POZIn g$val$20997$1POZIn)
                       (values g$id$20996$1POZIn g$val$20997$1POZIn)))
                    g$ls/false$20993$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$20992$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$20992$1POZIn
               '(_ any any)))))
         g$x$20991$1POZIn))))
   (g$scheme-stx-hashtable$20555$1POZIn
     g$scheme-stx-hashtable$24150$1POZIn
     (g$make-eq-hashtable$12772$1POZIn))
   (g$scheme-stx$20556$1POZIn
     g$scheme-stx$24151$1POZIn
     (case-lambda
       ((g$sym$20998$1POZIn)
        ((case-lambda
           ((g$t$20999$1POZIn)
            (if g$t$20999$1POZIn
              g$t$20999$1POZIn
              (begin
                '#f
                ((case-lambda
                   ((g$subst$21000$1POZIn)
                    ((case-lambda
                       ((g$stx$21001$1POZIn)
                        ((case-lambda
                           ((g$stx$21002$1POZIn)
                            (begin
                              (g$hashtable-set!$12776$1POZIn
                                g$scheme-stx-hashtable$20555$1POZIn
                                g$sym$20998$1POZIn
                                g$stx$21002$1POZIn)
                              g$stx$21002$1POZIn)))
                         ((case-lambda
                            ((g$t$21003$1POZIn)
                             (if g$t$21003$1POZIn
                               ((case-lambda
                                  ((g$x$21004$1POZIn)
                                   ((case-lambda
                                      ((g$name$21005$1POZIn
                                         g$label$21006$1POZIn)
                                       (g$add-subst$20105$1POZIn
                                         (g$make-rib$20062$1POZIn
                                           (list g$name$21005$1POZIn)
                                           (list
                                             g$top-mark*$20048$1POZIn)
                                           (list g$label$21006$1POZIn)
                                           '#f
                                           '#f)
                                         g$stx$21001$1POZIn)))
                                    (car g$x$21004$1POZIn)
                                    (cdr g$x$21004$1POZIn))))
                                g$t$21003$1POZIn)
                               (begin '#f g$stx$21001$1POZIn))))
                          (g$assq$11821$1POZIn
                            g$sym$20998$1POZIn
                            g$subst$21000$1POZIn)))))
                     (g$make-stx$20088$1POZIn
                       g$sym$20998$1POZIn
                       g$top-mark*$20048$1POZIn
                       '()
                       '()))))
                 (g$library-subst$19778$1POZIn
                   (g$find-library-by-name$19814$1POZIn
                     '(psyntax system $all))))))))
         (g$hashtable-ref$12775$1POZIn
           g$scheme-stx-hashtable$20555$1POZIn
           g$sym$20998$1POZIn
           '#f)))))
   (g$lexical-var$20557$1POZIn g$lexical-var$24152$1POZIn car)
   (g$lexical-mutable?$20558$1POZIn g$lexical-mutable?$24153$1POZIn cdr)
   (g$set-lexical-mutable!$20559$1POZIn
     g$set-lexical-mutable!$24154$1POZIn
     set-cdr!)
   (g$add-lexical$20560$1POZIn
     g$add-lexical$24155$1POZIn
     (case-lambda
       ((g$lab$21007$1POZIn g$lex$21008$1POZIn g$r$21009$1POZIn)
        (cons
          (g$cons*$11835$1POZIn
            g$lab$21007$1POZIn
            'lexical
            g$lex$21008$1POZIn
            '#f)
          g$r$21009$1POZIn))))
   (g$add-lexicals$20561$1POZIn
     g$add-lexicals$24156$1POZIn
     (case-lambda
       ((g$lab*$21010$1POZIn g$lex*$21011$1POZIn g$r$21012$1POZIn)
        (if (null? g$lab*$21010$1POZIn)
          g$r$21012$1POZIn
          (begin
            '#f
            (g$add-lexicals$20561$1POZIn
              (cdr g$lab*$21010$1POZIn)
              (cdr g$lex*$21011$1POZIn)
              (g$add-lexical$20560$1POZIn
                (car g$lab*$21010$1POZIn)
                (car g$lex*$21011$1POZIn)
                g$r$21012$1POZIn)))))))
   (g$letrec-helper$20562$1POZIn
     g$letrec-helper$24157$1POZIn
     (case-lambda
       ((g$e$21013$1POZIn
          g$r$21014$1POZIn
          g$mr$21015$1POZIn
          g$build$21016$1POZIn)
        ((case-lambda
           ((g$t$21017$1POZIn)
            ((case-lambda
               ((g$ls/false$21018$1POZIn)
                (if g$ls/false$21018$1POZIn
                  (apply
                    (case-lambda
                      ((g$lhs*$21019$1POZIn
                         g$rhs*$21020$1POZIn
                         g$b$21021$1POZIn
                         g$b*$21022$1POZIn)
                       (if (not (g$valid-bound-ids?$20120$1POZIn
                                  g$lhs*$21019$1POZIn))
                         (g$invalid-fmls-error$20578$1POZIn
                           g$e$21013$1POZIn
                           g$lhs*$21019$1POZIn)
                         ((case-lambda
                            ((g$lex*$21023$1POZIn g$lab*$21024$1POZIn)
                             ((case-lambda
                                ((g$rib$21025$1POZIn g$r$21026$1POZIn)
                                 ((case-lambda
                                    ((g$body$21027$1POZIn
                                       g$rhs*$21028$1POZIn)
                                     (g$build$21016$1POZIn
                                       '#f
                                       g$lex*$21023$1POZIn
                                       g$rhs*$21028$1POZIn
                                       g$body$21027$1POZIn)))
                                  (g$chi-internal$20642$1POZIn
                                    (g$add-subst$20105$1POZIn
                                      g$rib$21025$1POZIn
                                      (cons
                                        g$b$21021$1POZIn
                                        g$b*$21022$1POZIn))
                                    g$r$21026$1POZIn
                                    g$mr$21015$1POZIn)
                                  (g$chi-expr*$20629$1POZIn
                                    (g$map$11833$1POZIn
                                      (case-lambda
                                        ((g$x$21029$1POZIn)
                                         (g$add-subst$20105$1POZIn
                                           g$rib$21025$1POZIn
                                           g$x$21029$1POZIn)))
                                      g$rhs*$21020$1POZIn)
                                    g$r$21026$1POZIn
                                    g$mr$21015$1POZIn))))
                              (g$make-full-rib$20081$1POZIn
                                g$lhs*$21019$1POZIn
                                g$lab*$21024$1POZIn)
                              (g$add-lexicals$20561$1POZIn
                                g$lab*$21024$1POZIn
                                g$lex*$21023$1POZIn
                                g$r$21014$1POZIn))))
                          (g$map$11833$1POZIn
                            g$gen-lexical$20050$1POZIn
                            g$lhs*$21019$1POZIn)
                          (g$map$11833$1POZIn
                            g$gen-label$20052$1POZIn
                            g$lhs*$21019$1POZIn)))))
                    g$ls/false$21018$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21017$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21017$1POZIn
               '(_ #(each (any any)) any . each-any)))))
         g$e$21013$1POZIn))))
   (g$letrec-transformer$20563$1POZIn
     g$letrec-transformer$24158$1POZIn
     (case-lambda
       ((g$e$21030$1POZIn g$r$21031$1POZIn g$mr$21032$1POZIn)
        (g$letrec-helper$20562$1POZIn
          g$e$21030$1POZIn
          g$r$21031$1POZIn
          g$mr$21032$1POZIn
          g$build-letrec$20042$1POZIn))))
   (g$letrec*-transformer$20564$1POZIn
     g$letrec*-transformer$24159$1POZIn
     (case-lambda
       ((g$e$21033$1POZIn g$r$21034$1POZIn g$mr$21035$1POZIn)
        (g$letrec-helper$20562$1POZIn
          g$e$21033$1POZIn
          g$r$21034$1POZIn
          g$mr$21035$1POZIn
          g$build-letrec*$20043$1POZIn))))
   (g$fluid-let-syntax-transformer$20565$1POZIn
     g$fluid-let-syntax-transformer$24160$1POZIn
     (case-lambda
       ((g$e$21036$1POZIn g$r$21037$1POZIn g$mr$21038$1POZIn)
        (letrec* ((g$lookup$21039$1POZIn
                    (case-lambda
                      ((g$x$21049$1POZIn)
                       ((case-lambda
                          ((g$t$21050$1POZIn)
                           (if g$t$21050$1POZIn
                             g$t$21050$1POZIn
                             (begin
                               '#f
                               (g$syntax-violation$20732$1POZIn
                                 '#f
                                 '"unbound identifier"
                                 g$e$21036$1POZIn
                                 g$x$21049$1POZIn)))))
                        (g$id->label$20128$1POZIn g$x$21049$1POZIn))))))
          ((case-lambda
             ((g$t$21040$1POZIn)
              ((case-lambda
                 ((g$ls/false$21041$1POZIn)
                  (if g$ls/false$21041$1POZIn
                    (apply
                      (case-lambda
                        ((g$lhs*$21042$1POZIn
                           g$rhs*$21043$1POZIn
                           g$b$21044$1POZIn
                           g$b*$21045$1POZIn)
                         (if (not (g$valid-bound-ids?$20120$1POZIn
                                    g$lhs*$21042$1POZIn))
                           (g$invalid-fmls-error$20578$1POZIn
                             g$e$21036$1POZIn
                             g$lhs*$21042$1POZIn)
                           ((case-lambda
                              ((g$lab*$21046$1POZIn g$rhs*$21047$1POZIn)
                               (g$chi-internal$20642$1POZIn
                                 (cons
                                   g$b$21044$1POZIn
                                   g$b*$21045$1POZIn)
                                 (append
                                   (g$map$11833$1POZIn
                                     cons
                                     g$lab*$21046$1POZIn
                                     g$rhs*$21047$1POZIn)
                                   g$r$21037$1POZIn)
                                 (append
                                   (g$map$11833$1POZIn
                                     cons
                                     g$lab*$21046$1POZIn
                                     g$rhs*$21047$1POZIn)
                                   g$mr$21038$1POZIn))))
                            (g$map$11833$1POZIn
                              g$lookup$21039$1POZIn
                              g$lhs*$21042$1POZIn)
                            (g$map$11833$1POZIn
                              (case-lambda
                                ((g$x$21048$1POZIn)
                                 (g$make-eval-transformer$20163$1POZIn
                                   (g$expand-transformer$20661$1POZIn
                                     g$x$21048$1POZIn
                                     g$mr$21038$1POZIn))))
                              g$rhs*$21043$1POZIn)))))
                      g$ls/false$21041$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$21040$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21040$1POZIn
                 '(_ #(each (any any)) any . each-any)))))
           g$e$21036$1POZIn)))))
   (g$type-descriptor-transformer$20566$1POZIn
     g$type-descriptor-transformer$24161$1POZIn
     (case-lambda
       ((g$e$21051$1POZIn g$r$21052$1POZIn g$mr$21053$1POZIn)
        ((case-lambda
           ((g$t$21054$1POZIn)
            ((case-lambda
               ((g$ls/false$21055$1POZIn)
                (if (if g$ls/false$21055$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21056$1POZIn)
                             (g$id?$20115$1POZIn g$id$21056$1POZIn)))
                          g$ls/false$21055$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21057$1POZIn)
                       ((case-lambda
                          ((g$lab$21058$1POZIn)
                           ((case-lambda
                              ((g$b$21059$1POZIn)
                               ((case-lambda
                                  ((g$type$21060$1POZIn)
                                   (begin
                                     (if (not g$lab$21058$1POZIn)
                                       (g$raise-unbound-error$20134$1POZIn
                                         g$id$21057$1POZIn)
                                       (void))
                                     (if (not (if (eq? g$type$21060$1POZIn
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$20133$1POZIn
                                                           g$b$21059$1POZIn))))
                                                '#f))
                                       (g$syntax-violation$20732$1POZIn
                                         '#f
                                         '"not a record type"
                                         g$e$21051$1POZIn)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$20133$1POZIn
                                         g$b$21059$1POZIn)))))
                                (g$binding-type$20132$1POZIn
                                  g$b$21059$1POZIn))))
                            (g$label->binding$20130$1POZIn
                              g$lab$21058$1POZIn
                              g$r$21052$1POZIn))))
                        (g$id->label$20128$1POZIn g$id$21057$1POZIn))))
                    g$ls/false$21055$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21054$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21054$1POZIn
               '(_ any)))))
         g$e$21051$1POZIn))))
   (g$record-type-descriptor-transformer$20567$1POZIn
     g$record-type-descriptor-transformer$24162$1POZIn
     (case-lambda
       ((g$e$21061$1POZIn g$r$21062$1POZIn g$mr$21063$1POZIn)
        ((case-lambda
           ((g$t$21064$1POZIn)
            ((case-lambda
               ((g$ls/false$21065$1POZIn)
                (if (if g$ls/false$21065$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21066$1POZIn)
                             (g$id?$20115$1POZIn g$id$21066$1POZIn)))
                          g$ls/false$21065$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21067$1POZIn)
                       ((case-lambda
                          ((g$lab$21068$1POZIn)
                           ((case-lambda
                              ((g$b$21069$1POZIn)
                               ((case-lambda
                                  ((g$type$21070$1POZIn)
                                   (begin
                                     (if (not g$lab$21068$1POZIn)
                                       (g$raise-unbound-error$20134$1POZIn
                                         g$id$21067$1POZIn)
                                       (void))
                                     (if (not (if (eq? g$type$21070$1POZIn
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$20133$1POZIn
                                                      g$b$21069$1POZIn)))
                                                '#f))
                                       (g$syntax-violation$20732$1POZIn
                                         '#f
                                         '"not a record type"
                                         g$e$21061$1POZIn)
                                       (void))
                                     (g$chi-expr$20631$1POZIn
                                       (car (g$binding-value$20133$1POZIn
                                              g$b$21069$1POZIn))
                                       g$r$21062$1POZIn
                                       g$mr$21063$1POZIn))))
                                (g$binding-type$20132$1POZIn
                                  g$b$21069$1POZIn))))
                            (g$label->binding$20130$1POZIn
                              g$lab$21068$1POZIn
                              g$r$21062$1POZIn))))
                        (g$id->label$20128$1POZIn g$id$21067$1POZIn))))
                    g$ls/false$21065$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21064$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21064$1POZIn
               '(_ any)))))
         g$e$21061$1POZIn))))
   (g$record-constructor-descriptor-transformer$20568$1POZIn
     g$record-constructor-descriptor-transformer$24163$1POZIn
     (case-lambda
       ((g$e$21071$1POZIn g$r$21072$1POZIn g$mr$21073$1POZIn)
        ((case-lambda
           ((g$t$21074$1POZIn)
            ((case-lambda
               ((g$ls/false$21075$1POZIn)
                (if (if g$ls/false$21075$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$21076$1POZIn)
                             (g$id?$20115$1POZIn g$id$21076$1POZIn)))
                          g$ls/false$21075$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$21077$1POZIn)
                       ((case-lambda
                          ((g$lab$21078$1POZIn)
                           ((case-lambda
                              ((g$b$21079$1POZIn)
                               ((case-lambda
                                  ((g$type$21080$1POZIn)
                                   (begin
                                     (if (not g$lab$21078$1POZIn)
                                       (g$raise-unbound-error$20134$1POZIn
                                         g$id$21077$1POZIn)
                                       (void))
                                     (if (not (if (eq? g$type$21080$1POZIn
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$20133$1POZIn
                                                      g$b$21079$1POZIn)))
                                                '#f))
                                       (g$syntax-violation$20732$1POZIn
                                         '#f
                                         '"invalid type"
                                         g$e$21071$1POZIn)
                                       (void))
                                     (g$chi-expr$20631$1POZIn
                                       (g$cadr$12684$1POZIn
                                         (g$binding-value$20133$1POZIn
                                           g$b$21079$1POZIn))
                                       g$r$21072$1POZIn
                                       g$mr$21073$1POZIn))))
                                (g$binding-type$20132$1POZIn
                                  g$b$21079$1POZIn))))
                            (g$label->binding$20130$1POZIn
                              g$lab$21078$1POZIn
                              g$r$21072$1POZIn))))
                        (g$id->label$20128$1POZIn g$id$21077$1POZIn))))
                    g$ls/false$21075$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21074$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21074$1POZIn
               '(_ any)))))
         g$e$21071$1POZIn))))
   (g$when-macro$20569$1POZIn
     g$when-macro$24164$1POZIn
     (case-lambda
       ((g$e$21081$1POZIn)
        ((case-lambda
           ((g$t$21082$1POZIn)
            ((case-lambda
               ((g$ls/false$21083$1POZIn)
                (if g$ls/false$21083$1POZIn
                  (apply
                    (case-lambda
                      ((g$test$21084$1POZIn
                         g$e$21085$1POZIn
                         g$e*$21086$1POZIn)
                       (g$bless$20576$1POZIn
                         (list
                           'if
                           g$test$21084$1POZIn
                           (cons
                             'begin
                             (cons
                               g$e$21085$1POZIn
                               g$e*$21086$1POZIn))))))
                    g$ls/false$21083$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21082$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21082$1POZIn
               '(_ any any . each-any)))))
         g$e$21081$1POZIn))))
   (g$unless-macro$20570$1POZIn
     g$unless-macro$24165$1POZIn
     (case-lambda
       ((g$e$21087$1POZIn)
        ((case-lambda
           ((g$t$21088$1POZIn)
            ((case-lambda
               ((g$ls/false$21089$1POZIn)
                (if g$ls/false$21089$1POZIn
                  (apply
                    (case-lambda
                      ((g$test$21090$1POZIn
                         g$e$21091$1POZIn
                         g$e*$21092$1POZIn)
                       (g$bless$20576$1POZIn
                         (list
                           'if
                           (list 'not g$test$21090$1POZIn)
                           (cons
                             'begin
                             (cons
                               g$e$21091$1POZIn
                               g$e*$21092$1POZIn))))))
                    g$ls/false$21089$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21088$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21088$1POZIn
               '(_ any any . each-any)))))
         g$e$21087$1POZIn))))
   (g$if-transformer$20571$1POZIn
     g$if-transformer$24166$1POZIn
     (case-lambda
       ((g$e$21093$1POZIn g$r$21094$1POZIn g$mr$21095$1POZIn)
        ((case-lambda
           ((g$t$21096$1POZIn)
            ((case-lambda
               ((g$ls/false$21097$1POZIn)
                (if g$ls/false$21097$1POZIn
                  (apply
                    (case-lambda
                      ((g$e0$21098$1POZIn
                         g$e1$21099$1POZIn
                         g$e2$21100$1POZIn)
                       (list
                         'if
                         (g$chi-expr$20631$1POZIn
                           g$e0$21098$1POZIn
                           g$r$21094$1POZIn
                           g$mr$21095$1POZIn)
                         (g$chi-expr$20631$1POZIn
                           g$e1$21099$1POZIn
                           g$r$21094$1POZIn
                           g$mr$21095$1POZIn)
                         (g$chi-expr$20631$1POZIn
                           g$e2$21100$1POZIn
                           g$r$21094$1POZIn
                           g$mr$21095$1POZIn))))
                    g$ls/false$21097$1POZIn)
                  ((case-lambda
                     ((g$t$21101$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21102$1POZIn)
                          (if g$ls/false$21102$1POZIn
                            (apply
                              (case-lambda
                                ((g$e0$21103$1POZIn g$e1$21104$1POZIn)
                                 (list
                                   'if
                                   (g$chi-expr$20631$1POZIn
                                     g$e0$21103$1POZIn
                                     g$r$21094$1POZIn
                                     g$mr$21095$1POZIn)
                                   (g$chi-expr$20631$1POZIn
                                     g$e1$21104$1POZIn
                                     g$r$21094$1POZIn
                                     g$mr$21095$1POZIn)
                                   (g$build-void$20041$1POZIn))))
                              g$ls/false$21102$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21101$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21101$1POZIn
                         '(_ any any)))))
                   g$t$21096$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21096$1POZIn
               '(_ any any any)))))
         g$e$21093$1POZIn))))
   (g$case-macro$20572$1POZIn
     g$case-macro$24167$1POZIn
     (case-lambda
       ((g$e$21105$1POZIn)
        (letrec* ((g$build-last$21106$1POZIn
                    (case-lambda
                      ((g$cls$21126$1POZIn)
                       ((case-lambda
                          ((g$t$21127$1POZIn)
                           ((case-lambda
                              ((g$ls/false$21128$1POZIn)
                               (if g$ls/false$21128$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$e$21129$1POZIn
                                        g$e*$21130$1POZIn)
                                      (cons
                                        'begin
                                        (cons
                                          '#f
                                          (cons
                                            g$e$21129$1POZIn
                                            g$e*$21130$1POZIn)))))
                                   g$ls/false$21128$1POZIn)
                                 ((case-lambda
                                    ((g$t$21131$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$21132$1POZIn)
                                         (if g$ls/false$21132$1POZIn
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$21107$1POZIn
                                                  g$cls$21126$1POZIn
                                                  '(if #f #f))))
                                             g$ls/false$21132$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$21131$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$21131$1POZIn
                                        '_))))
                                  g$t$21127$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$21127$1POZIn
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$21126$1POZIn))))
                  (g$build-one$21107$1POZIn
                    (case-lambda
                      ((g$cls$21119$1POZIn g$k$21120$1POZIn)
                       ((case-lambda
                          ((g$t$21121$1POZIn)
                           ((case-lambda
                              ((g$ls/false$21122$1POZIn)
                               (if g$ls/false$21122$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$d*$21123$1POZIn
                                        g$e$21124$1POZIn
                                        g$e*$21125$1POZIn)
                                      (if (g$=$13618$1POZIn
                                            '1
                                            (length g$d*$21123$1POZIn))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$21123$1POZIn)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$21124$1POZIn
                                              g$e*$21125$1POZIn))
                                          g$k$21120$1POZIn)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$21123$1POZIn))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$21124$1POZIn
                                              g$e*$21125$1POZIn))
                                          g$k$21120$1POZIn))))
                                   g$ls/false$21122$1POZIn)
                                 (g$syntax-violation$20732$1POZIn
                                   '#f
                                   '"invalid syntax"
                                   g$t$21121$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$21121$1POZIn
                              '(each-any any . each-any)))))
                        g$cls$21119$1POZIn)))))
          ((case-lambda
             ((g$t$21108$1POZIn)
              ((case-lambda
                 ((g$ls/false$21109$1POZIn)
                  (if g$ls/false$21109$1POZIn
                    (apply
                      (case-lambda
                        ((g$expr$21110$1POZIn)
                         (g$bless$20576$1POZIn
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$21110$1POZIn))
                               '((if #f #f)))))))
                      g$ls/false$21109$1POZIn)
                    ((case-lambda
                       ((g$t$21111$1POZIn)
                        ((case-lambda
                           ((g$ls/false$21112$1POZIn)
                            (if g$ls/false$21112$1POZIn
                              (apply
                                (case-lambda
                                  ((g$expr$21113$1POZIn
                                     g$cls$21114$1POZIn
                                     g$cls*$21115$1POZIn)
                                   (g$bless$20576$1POZIn
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$21113$1POZIn))
                                       ((letrec ((g$f$21116$1POZIn
                                                   (case-lambda
                                                     ((g$cls$21117$1POZIn
                                                        g$cls*$21118$1POZIn)
                                                      (if (null?
                                                            g$cls*$21118$1POZIn)
                                                        (g$build-last$21106$1POZIn
                                                          g$cls$21117$1POZIn)
                                                        (g$build-one$21107$1POZIn
                                                          g$cls$21117$1POZIn
                                                          (g$f$21116$1POZIn
                                                            (car g$cls*$21118$1POZIn)
                                                            (cdr g$cls*$21118$1POZIn))))))))
                                          g$f$21116$1POZIn)
                                        g$cls$21114$1POZIn
                                        g$cls*$21115$1POZIn)))))
                                g$ls/false$21112$1POZIn)
                              (g$syntax-violation$20732$1POZIn
                                '#f
                                '"invalid syntax"
                                g$t$21111$1POZIn))))
                         (g$syntax-dispatch$20613$1POZIn
                           g$t$21111$1POZIn
                           '(_ any any . each-any)))))
                     g$t$21108$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21108$1POZIn
                 '(_ any)))))
           g$e$21105$1POZIn)))))
   (g$quote-transformer$20573$1POZIn
     g$quote-transformer$24168$1POZIn
     (case-lambda
       ((g$e$21133$1POZIn g$r$21134$1POZIn g$mr$21135$1POZIn)
        ((case-lambda
           ((g$t$21136$1POZIn)
            ((case-lambda
               ((g$ls/false$21137$1POZIn)
                (if g$ls/false$21137$1POZIn
                  (apply
                    (case-lambda
                      ((g$datum$21138$1POZIn)
                       (list
                         'quote
                         (g$stx->datum$20126$1POZIn
                           g$datum$21138$1POZIn))))
                    g$ls/false$21137$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21136$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21136$1POZIn
               '(_ any)))))
         g$e$21133$1POZIn))))
   (g$case-lambda-transformer$20574$1POZIn
     g$case-lambda-transformer$24169$1POZIn
     (case-lambda
       ((g$e$21139$1POZIn g$r$21140$1POZIn g$mr$21141$1POZIn)
        ((case-lambda
           ((g$t$21142$1POZIn)
            ((case-lambda
               ((g$ls/false$21143$1POZIn)
                (if g$ls/false$21143$1POZIn
                  (apply
                    (case-lambda
                      ((g$fmls*$21144$1POZIn
                         g$b*$21145$1POZIn
                         g$b**$21146$1POZIn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$20635$1POZIn
                              g$e$21139$1POZIn
                              g$fmls*$21144$1POZIn
                              (g$map$11833$1POZIn
                                cons
                                g$b*$21145$1POZIn
                                g$b**$21146$1POZIn)
                              g$r$21140$1POZIn
                              g$mr$21141$1POZIn)))
                         (case-lambda
                           ((g$fmls*$21149$1POZIn g$body*$21150$1POZIn)
                            ((case-lambda
                               ((g$body*$21151$1POZIn
                                  g$fmls*$21152$1POZIn)
                                (g$build-case-lambda$20038$1POZIn
                                  '#f
                                  g$fmls*$21152$1POZIn
                                  g$body*$21151$1POZIn)))
                             g$body*$21150$1POZIn
                             g$fmls*$21149$1POZIn))))))
                    g$ls/false$21143$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21142$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21142$1POZIn
               '(_ . #(each (any any . each-any)))))))
         g$e$21139$1POZIn))))
   (g$lambda-transformer$20575$1POZIn
     g$lambda-transformer$24170$1POZIn
     (case-lambda
       ((g$e$21153$1POZIn g$r$21154$1POZIn g$mr$21155$1POZIn)
        ((case-lambda
           ((g$t$21156$1POZIn)
            ((case-lambda
               ((g$ls/false$21157$1POZIn)
                (if g$ls/false$21157$1POZIn
                  (apply
                    (case-lambda
                      ((g$fmls$21158$1POZIn
                         g$b$21159$1POZIn
                         g$b*$21160$1POZIn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$20634$1POZIn
                              g$e$21153$1POZIn
                              g$fmls$21158$1POZIn
                              (cons g$b$21159$1POZIn g$b*$21160$1POZIn)
                              g$r$21154$1POZIn
                              g$mr$21155$1POZIn)))
                         (case-lambda
                           ((g$fmls$21163$1POZIn g$body$21164$1POZIn)
                            ((case-lambda
                               ((g$body$21165$1POZIn
                                  g$fmls$21166$1POZIn)
                                (g$build-lambda$20037$1POZIn
                                  '#f
                                  g$fmls$21166$1POZIn
                                  g$body$21165$1POZIn)))
                             g$body$21164$1POZIn
                             g$fmls$21163$1POZIn))))))
                    g$ls/false$21157$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21156$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21156$1POZIn
               '(_ any any . each-any)))))
         g$e$21153$1POZIn))))
   (g$bless$20576$1POZIn
     g$bless$24171$1POZIn
     (case-lambda
       ((g$x$21167$1POZIn)
        (g$mkstx$20103$1POZIn
          ((letrec ((g$f$21168$1POZIn
                      (case-lambda
                        ((g$x$21169$1POZIn)
                         (if (g$stx?$20087$1POZIn g$x$21169$1POZIn)
                           g$x$21169$1POZIn
                           (if (pair? g$x$21169$1POZIn)
                             (cons
                               (g$f$21168$1POZIn (car g$x$21169$1POZIn))
                               (g$f$21168$1POZIn
                                 (cdr g$x$21169$1POZIn)))
                             (if (g$symbol?$12665$1POZIn
                                   g$x$21169$1POZIn)
                               (g$scheme-stx$20556$1POZIn
                                 g$x$21169$1POZIn)
                               (if (g$vector?$12663$1POZIn
                                     g$x$21169$1POZIn)
                                 (g$vector-map$12732$1POZIn
                                   g$f$21168$1POZIn
                                   g$x$21169$1POZIn)
                                 (begin '#f g$x$21169$1POZIn)))))))))
             g$f$21168$1POZIn)
           g$x$21167$1POZIn)
          '()
          '()
          '()))))
   (g$with-syntax-macro$20577$1POZIn
     g$with-syntax-macro$24172$1POZIn
     (case-lambda
       ((g$e$21170$1POZIn)
        ((case-lambda
           ((g$t$21171$1POZIn)
            ((case-lambda
               ((g$ls/false$21172$1POZIn)
                (if g$ls/false$21172$1POZIn
                  (apply
                    (case-lambda
                      ((g$pat*$21173$1POZIn
                         g$expr*$21174$1POZIn
                         g$b$21175$1POZIn
                         g$b*$21176$1POZIn)
                       ((case-lambda
                          ((g$idn*$21177$1POZIn)
                           (begin
                             (g$verify-formals$20633$1POZIn
                               (g$map$11833$1POZIn
                                 car
                                 g$idn*$21177$1POZIn)
                               g$e$21170$1POZIn)
                             ((case-lambda
                                ((g$t*$21178$1POZIn)
                                 (g$bless$20576$1POZIn
                                   (list
                                     'let
                                     (g$map$11833$1POZIn
                                       list
                                       g$t*$21178$1POZIn
                                       g$expr*$21174$1POZIn)
                                     ((letrec ((g$f$21179$1POZIn
                                                 (case-lambda
                                                   ((g$pat*$21180$1POZIn
                                                      g$t*$21181$1POZIn)
                                                    (if (null?
                                                          g$pat*$21180$1POZIn)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$21175$1POZIn
                                                          g$b*$21176$1POZIn))
                                                      (begin
                                                        '#f
                                                        (list
                                                          'syntax-case
                                                          (car g$t*$21181$1POZIn)
                                                          '()
                                                          (list
                                                            (car g$pat*$21180$1POZIn)
                                                            (g$f$21179$1POZIn
                                                              (cdr g$pat*$21180$1POZIn)
                                                              (cdr g$t*$21181$1POZIn)))
                                                          (list
                                                            '_
                                                            (list
                                                              'assertion-violation
                                                              ''with-syntax
                                                              '"pattern does not match value"
                                                              (list
                                                                'quote
                                                                (car g$pat*$21180$1POZIn))
                                                              (car g$t*$21181$1POZIn))))))))))
                                        g$f$21179$1POZIn)
                                      g$pat*$21173$1POZIn
                                      g$t*$21178$1POZIn)))))
                              (g$generate-temporaries$20722$1POZIn
                                g$expr*$21174$1POZIn)))))
                        ((letrec ((g$f$21182$1POZIn
                                    (case-lambda
                                      ((g$pat*$21183$1POZIn)
                                       (if (null? g$pat*$21183$1POZIn)
                                         '()
                                         (begin
                                           '#f
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$convert-pattern$20612$1POZIn
                                                  (car g$pat*$21183$1POZIn)
                                                  '())))
                                             (case-lambda
                                               ((g$pat$21186$1POZIn
                                                  g$idn*$21187$1POZIn)
                                                ((case-lambda
                                                   ((g$idn*$21188$1POZIn
                                                      g$pat$21189$1POZIn)
                                                    (append
                                                      g$idn*$21188$1POZIn
                                                      (g$f$21182$1POZIn
                                                        (cdr g$pat*$21183$1POZIn)))))
                                                 g$idn*$21187$1POZIn
                                                 g$pat$21186$1POZIn))))))))))
                           g$f$21182$1POZIn)
                         g$pat*$21173$1POZIn))))
                    g$ls/false$21172$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21171$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21171$1POZIn
               '(_ #(each (any any)) any . each-any)))))
         g$e$21170$1POZIn))))
   (g$invalid-fmls-error$20578$1POZIn
     g$invalid-fmls-error$24173$1POZIn
     (case-lambda
       ((g$stx$21190$1POZIn g$fmls$21191$1POZIn)
        ((case-lambda
           ((g$t$21192$1POZIn)
            ((case-lambda
               ((g$ls/false$21193$1POZIn)
                (if g$ls/false$21193$1POZIn
                  (apply
                    (case-lambda
                      ((g$id*$21194$1POZIn g$last$21195$1POZIn)
                       ((letrec ((g$f$21196$1POZIn
                                   (case-lambda
                                     ((g$id*$21197$1POZIn)
                                      (if (null? g$id*$21197$1POZIn)
                                        (values)
                                        (if (not (g$id?$20115$1POZIn
                                                   (car g$id*$21197$1POZIn)))
                                          (g$syntax-violation$20732$1POZIn
                                            '#f
                                            '"not an identifier"
                                            g$stx$21190$1POZIn
                                            (car g$id*$21197$1POZIn))
                                          (begin
                                            '#f
                                            (g$f$21196$1POZIn
                                              (cdr g$id*$21197$1POZIn))
                                            (if (g$bound-id-member?$20122$1POZIn
                                                  (car g$id*$21197$1POZIn)
                                                  (cdr g$id*$21197$1POZIn))
                                              (g$syntax-violation$20732$1POZIn
                                                '#f
                                                '"duplicate binding"
                                                g$stx$21190$1POZIn
                                                (car g$id*$21197$1POZIn))
                                              (void)))))))))
                          g$f$21196$1POZIn)
                        (if (g$id?$20115$1POZIn g$last$21195$1POZIn)
                          (cons g$last$21195$1POZIn g$id*$21194$1POZIn)
                          (if (g$syntax-null?$20110$1POZIn
                                g$last$21195$1POZIn)
                            g$id*$21194$1POZIn
                            (begin
                              '#f
                              (g$syntax-violation$20732$1POZIn
                                '#f
                                '"not an identifier"
                                g$stx$21190$1POZIn
                                g$last$21195$1POZIn)))))))
                    g$ls/false$21193$1POZIn)
                  ((case-lambda
                     ((g$t$21198$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21199$1POZIn)
                          (if g$ls/false$21199$1POZIn
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$20732$1POZIn
                                   '#f
                                   '"malformed binding form"
                                   g$stx$21190$1POZIn
                                   g$fmls$21191$1POZIn)))
                              g$ls/false$21199$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21198$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21198$1POZIn
                         '_))))
                   g$t$21192$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21192$1POZIn
               '#(each+ any () any)))))
         g$fmls$21191$1POZIn))))
   (g$let-macro$20579$1POZIn
     g$let-macro$24174$1POZIn
     (case-lambda
       ((g$stx$21200$1POZIn)
        ((case-lambda
           ((g$t$21201$1POZIn)
            ((case-lambda
               ((g$ls/false$21202$1POZIn)
                (if g$ls/false$21202$1POZIn
                  (apply
                    (case-lambda
                      ((g$lhs*$21203$1POZIn
                         g$rhs*$21204$1POZIn
                         g$b$21205$1POZIn
                         g$b*$21206$1POZIn)
                       (if (g$valid-bound-ids?$20120$1POZIn
                             g$lhs*$21203$1POZIn)
                         (g$bless$20576$1POZIn
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$21203$1POZIn
                                 (cons
                                   g$b$21205$1POZIn
                                   g$b*$21206$1POZIn)))
                             g$rhs*$21204$1POZIn))
                         (g$invalid-fmls-error$20578$1POZIn
                           g$stx$21200$1POZIn
                           g$lhs*$21203$1POZIn))))
                    g$ls/false$21202$1POZIn)
                  ((case-lambda
                     ((g$t$21207$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21208$1POZIn)
                          (if (if g$ls/false$21208$1POZIn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$21209$1POZIn
                                         g$lhs*$21210$1POZIn
                                         g$rhs*$21211$1POZIn
                                         g$b$21212$1POZIn
                                         g$b*$21213$1POZIn)
                                       (g$id?$20115$1POZIn
                                         g$f$21209$1POZIn)))
                                    g$ls/false$21208$1POZIn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$21214$1POZIn
                                   g$lhs*$21215$1POZIn
                                   g$rhs*$21216$1POZIn
                                   g$b$21217$1POZIn
                                   g$b*$21218$1POZIn)
                                 (if (g$valid-bound-ids?$20120$1POZIn
                                       g$lhs*$21215$1POZIn)
                                   (g$bless$20576$1POZIn
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$21214$1POZIn
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$21215$1POZIn
                                                 (cons
                                                   g$b$21217$1POZIn
                                                   g$b*$21218$1POZIn)))))
                                         g$f$21214$1POZIn)
                                       g$rhs*$21216$1POZIn))
                                   (g$invalid-fmls-error$20578$1POZIn
                                     g$stx$21200$1POZIn
                                     g$lhs*$21215$1POZIn))))
                              g$ls/false$21208$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21207$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21207$1POZIn
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$21201$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21201$1POZIn
               '(_ #(each (any any)) any . each-any)))))
         g$stx$21200$1POZIn))))
   (g$let-values-macro$20580$1POZIn
     g$let-values-macro$24175$1POZIn
     (case-lambda
       ((g$stx$21219$1POZIn)
        (letrec* ((g$rename$21220$1POZIn
                    (case-lambda
                      ((g$x$21271$1POZIn
                         g$old*$21272$1POZIn
                         g$new*$21273$1POZIn)
                       (begin
                         (if (not (g$id?$20115$1POZIn g$x$21271$1POZIn))
                           (g$syntax-violation$20732$1POZIn
                             '#f
                             '"not an indentifier"
                             g$stx$21219$1POZIn
                             g$x$21271$1POZIn)
                           (void))
                         (if (g$bound-id-member?$20122$1POZIn
                               g$x$21271$1POZIn
                               g$old*$21272$1POZIn)
                           (g$syntax-violation$20732$1POZIn
                             '#f
                             '"duplicate binding"
                             g$stx$21219$1POZIn
                             g$x$21271$1POZIn)
                           (void))
                         ((case-lambda
                            ((g$y$21274$1POZIn)
                             (values
                               g$y$21274$1POZIn
                               (cons
                                 g$x$21271$1POZIn
                                 g$old*$21272$1POZIn)
                               (cons
                                 g$y$21274$1POZIn
                                 g$new*$21273$1POZIn))))
                          (gensym
                            (g$syntax->datum$20735$1POZIn
                              g$x$21271$1POZIn)))))))
                  (g$rename*$21221$1POZIn
                    (case-lambda
                      ((g$x*$21262$1POZIn
                         g$old*$21263$1POZIn
                         g$new*$21264$1POZIn)
                       (if (null? g$x*$21262$1POZIn)
                         (values
                           '()
                           g$old*$21263$1POZIn
                           g$new*$21264$1POZIn)
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$rename$21220$1POZIn
                                  (car g$x*$21262$1POZIn)
                                  g$old*$21263$1POZIn
                                  g$new*$21264$1POZIn)))
                             (case-lambda
                               ((g$x$21265$1POZIn
                                  g$old*$21266$1POZIn
                                  g$new*$21267$1POZIn)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$rename*$21221$1POZIn
                                       (cdr g$x*$21262$1POZIn)
                                       g$old*$21266$1POZIn
                                       g$new*$21267$1POZIn)))
                                  (case-lambda
                                    ((g$x*$21268$1POZIn
                                       g$old*$21269$1POZIn
                                       g$new*$21270$1POZIn)
                                     (values
                                       (cons
                                         g$x$21265$1POZIn
                                         g$x*$21268$1POZIn)
                                       g$old*$21269$1POZIn
                                       g$new*$21270$1POZIn)))))))))))))
          ((case-lambda
             ((g$t$21222$1POZIn)
              ((case-lambda
                 ((g$ls/false$21223$1POZIn)
                  (if g$ls/false$21223$1POZIn
                    (apply
                      (case-lambda
                        ((g$b$21224$1POZIn g$b*$21225$1POZIn)
                         (g$cons*$11835$1POZIn
                           (g$bless$20576$1POZIn 'let)
                           '()
                           g$b$21224$1POZIn
                           g$b*$21225$1POZIn)))
                      g$ls/false$21223$1POZIn)
                    ((case-lambda
                       ((g$t$21226$1POZIn)
                        ((case-lambda
                           ((g$ls/false$21227$1POZIn)
                            (if g$ls/false$21227$1POZIn
                              (apply
                                (case-lambda
                                  ((g$lhs*$21228$1POZIn
                                     g$rhs*$21229$1POZIn
                                     g$b$21230$1POZIn
                                     g$b*$21231$1POZIn)
                                   (g$bless$20576$1POZIn
                                     ((letrec ((g$f$21232$1POZIn
                                                 (case-lambda
                                                   ((g$lhs*$21233$1POZIn
                                                      g$rhs*$21234$1POZIn
                                                      g$old*$21235$1POZIn
                                                      g$new*$21236$1POZIn)
                                                    (if (null?
                                                          g$lhs*$21233$1POZIn)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$11833$1POZIn
                                                            list
                                                            g$old*$21235$1POZIn
                                                            g$new*$21236$1POZIn)
                                                          (cons
                                                            g$b$21230$1POZIn
                                                            g$b*$21231$1POZIn)))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$21237$1POZIn)
                                                            ((case-lambda
                                                               ((g$ls/false$21238$1POZIn)
                                                                (if g$ls/false$21238$1POZIn
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$21239$1POZIn)
                                                                       (call-with-values
                                                                         (case-lambda
                                                                           (()
                                                                            (g$rename*$21221$1POZIn
                                                                              g$x*$21239$1POZIn
                                                                              g$old*$21235$1POZIn
                                                                              g$new*$21236$1POZIn)))
                                                                         (case-lambda
                                                                           ((g$y*$21243$1POZIn
                                                                              g$old*$21244$1POZIn
                                                                              g$new*$21245$1POZIn)
                                                                            ((case-lambda
                                                                               ((g$new*$21246$1POZIn
                                                                                  g$old*$21247$1POZIn
                                                                                  g$y*$21248$1POZIn)
                                                                                (list
                                                                                  'call-with-values
                                                                                  (list
                                                                                    'lambda
                                                                                    '()
                                                                                    (car g$rhs*$21234$1POZIn))
                                                                                  (list
                                                                                    'lambda
                                                                                    g$y*$21248$1POZIn
                                                                                    (g$f$21232$1POZIn
                                                                                      (cdr g$lhs*$21233$1POZIn)
                                                                                      (cdr g$rhs*$21234$1POZIn)
                                                                                      g$old*$21247$1POZIn
                                                                                      g$new*$21246$1POZIn)))))
                                                                             g$new*$21245$1POZIn
                                                                             g$old*$21244$1POZIn
                                                                             g$y*$21243$1POZIn))))))
                                                                    g$ls/false$21238$1POZIn)
                                                                  ((case-lambda
                                                                     ((g$t$21249$1POZIn)
                                                                      ((case-lambda
                                                                         ((g$ls/false$21250$1POZIn)
                                                                          (if g$ls/false$21250$1POZIn
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$21251$1POZIn
                                                                                   g$x$21252$1POZIn)
                                                                                 (call-with-values
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$rename$21220$1POZIn
                                                                                        g$x$21252$1POZIn
                                                                                        g$old*$21235$1POZIn
                                                                                        g$new*$21236$1POZIn)))
                                                                                   (case-lambda
                                                                                     ((g$y$21253$1POZIn
                                                                                        g$old*$21254$1POZIn
                                                                                        g$new*$21255$1POZIn)
                                                                                      (call-with-values
                                                                                        (case-lambda
                                                                                          (()
                                                                                           (g$rename*$21221$1POZIn
                                                                                             g$x*$21251$1POZIn
                                                                                             g$old*$21254$1POZIn
                                                                                             g$new*$21255$1POZIn)))
                                                                                        (case-lambda
                                                                                          ((g$y*$21256$1POZIn
                                                                                             g$old*$21257$1POZIn
                                                                                             g$new*$21258$1POZIn)
                                                                                           (list
                                                                                             'call-with-values
                                                                                             (list
                                                                                               'lambda
                                                                                               '()
                                                                                               (car g$rhs*$21234$1POZIn))
                                                                                             (list
                                                                                               'lambda
                                                                                               (append
                                                                                                 g$y*$21256$1POZIn
                                                                                                 g$y$21253$1POZIn)
                                                                                               (g$f$21232$1POZIn
                                                                                                 (cdr g$lhs*$21233$1POZIn)
                                                                                                 (cdr g$rhs*$21234$1POZIn)
                                                                                                 g$old*$21257$1POZIn
                                                                                                 g$new*$21258$1POZIn)))))))))))
                                                                              g$ls/false$21250$1POZIn)
                                                                            ((case-lambda
                                                                               ((g$t$21259$1POZIn)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$21260$1POZIn)
                                                                                    (if g$ls/false$21260$1POZIn
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$21261$1POZIn)
                                                                                           (g$syntax-violation$20732$1POZIn
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$21219$1POZIn
                                                                                             g$others$21261$1POZIn)))
                                                                                        g$ls/false$21260$1POZIn)
                                                                                      (g$syntax-violation$20732$1POZIn
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$21259$1POZIn))))
                                                                                 (g$syntax-dispatch$20613$1POZIn
                                                                                   g$t$21259$1POZIn
                                                                                   'any))))
                                                                             g$t$21249$1POZIn))))
                                                                       (g$syntax-dispatch$20613$1POZIn
                                                                         g$t$21249$1POZIn
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$21237$1POZIn))))
                                                             (g$syntax-dispatch$20613$1POZIn
                                                               g$t$21237$1POZIn
                                                               'each-any))))
                                                         (car g$lhs*$21233$1POZIn))))))))
                                        g$f$21232$1POZIn)
                                      g$lhs*$21228$1POZIn
                                      g$rhs*$21229$1POZIn
                                      '()
                                      '()))))
                                g$ls/false$21227$1POZIn)
                              (g$syntax-violation$20732$1POZIn
                                '#f
                                '"invalid syntax"
                                g$t$21226$1POZIn))))
                         (g$syntax-dispatch$20613$1POZIn
                           g$t$21226$1POZIn
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$21222$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21222$1POZIn
                 '(_ () any . each-any)))))
           g$stx$21219$1POZIn)))))
   (g$let*-values-macro$20581$1POZIn
     g$let*-values-macro$24176$1POZIn
     (case-lambda
       ((g$stx$21275$1POZIn)
        (letrec* ((g$check$21276$1POZIn
                    (case-lambda
                      ((g$x*$21300$1POZIn)
                       (if (not (null? g$x*$21300$1POZIn))
                         ((case-lambda
                            ((g$x$21301$1POZIn)
                             (begin
                               (if (not (g$id?$20115$1POZIn
                                          g$x$21301$1POZIn))
                                 (g$syntax-violation$20732$1POZIn
                                   '#f
                                   '"not an identifier"
                                   g$stx$21275$1POZIn
                                   g$x$21301$1POZIn)
                                 (void))
                               (g$check$21276$1POZIn
                                 (cdr g$x*$21300$1POZIn))
                               (if (g$bound-id-member?$20122$1POZIn
                                     g$x$21301$1POZIn
                                     (cdr g$x*$21300$1POZIn))
                                 (g$syntax-violation$20732$1POZIn
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$21275$1POZIn
                                   g$x$21301$1POZIn)
                                 (void)))))
                          (car g$x*$21300$1POZIn))
                         (void))))))
          ((case-lambda
             ((g$t$21277$1POZIn)
              ((case-lambda
                 ((g$ls/false$21278$1POZIn)
                  (if g$ls/false$21278$1POZIn
                    (apply
                      (case-lambda
                        ((g$b$21279$1POZIn g$b*$21280$1POZIn)
                         (g$cons*$11835$1POZIn
                           (g$bless$20576$1POZIn 'let)
                           '()
                           g$b$21279$1POZIn
                           g$b*$21280$1POZIn)))
                      g$ls/false$21278$1POZIn)
                    ((case-lambda
                       ((g$t$21281$1POZIn)
                        ((case-lambda
                           ((g$ls/false$21282$1POZIn)
                            (if g$ls/false$21282$1POZIn
                              (apply
                                (case-lambda
                                  ((g$lhs*$21283$1POZIn
                                     g$rhs*$21284$1POZIn
                                     g$b$21285$1POZIn
                                     g$b*$21286$1POZIn)
                                   (g$bless$20576$1POZIn
                                     ((letrec ((g$f$21287$1POZIn
                                                 (case-lambda
                                                   ((g$lhs*$21288$1POZIn
                                                      g$rhs*$21289$1POZIn)
                                                    (if (null?
                                                          g$lhs*$21288$1POZIn)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$21285$1POZIn
                                                          g$b*$21286$1POZIn))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$21290$1POZIn)
                                                            ((case-lambda
                                                               ((g$ls/false$21291$1POZIn)
                                                                (if g$ls/false$21291$1POZIn
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$21292$1POZIn)
                                                                       (begin
                                                                         (g$check$21276$1POZIn
                                                                           g$x*$21292$1POZIn)
                                                                         (list
                                                                           'call-with-values
                                                                           (list
                                                                             'lambda
                                                                             '()
                                                                             (car g$rhs*$21289$1POZIn))
                                                                           (list
                                                                             'lambda
                                                                             g$x*$21292$1POZIn
                                                                             (g$f$21287$1POZIn
                                                                               (cdr g$lhs*$21288$1POZIn)
                                                                               (cdr g$rhs*$21289$1POZIn)))))))
                                                                    g$ls/false$21291$1POZIn)
                                                                  ((case-lambda
                                                                     ((g$t$21293$1POZIn)
                                                                      ((case-lambda
                                                                         ((g$ls/false$21294$1POZIn)
                                                                          (if g$ls/false$21294$1POZIn
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$21295$1POZIn
                                                                                   g$x$21296$1POZIn)
                                                                                 (begin
                                                                                   (g$check$21276$1POZIn
                                                                                     (cons
                                                                                       g$x$21296$1POZIn
                                                                                       g$x*$21295$1POZIn))
                                                                                   (list
                                                                                     'call-with-values
                                                                                     (list
                                                                                       'lambda
                                                                                       '()
                                                                                       (car g$rhs*$21289$1POZIn))
                                                                                     (list
                                                                                       'lambda
                                                                                       (append
                                                                                         g$x*$21295$1POZIn
                                                                                         g$x$21296$1POZIn)
                                                                                       (g$f$21287$1POZIn
                                                                                         (cdr g$lhs*$21288$1POZIn)
                                                                                         (cdr g$rhs*$21289$1POZIn)))))))
                                                                              g$ls/false$21294$1POZIn)
                                                                            ((case-lambda
                                                                               ((g$t$21297$1POZIn)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$21298$1POZIn)
                                                                                    (if g$ls/false$21298$1POZIn
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$21299$1POZIn)
                                                                                           (g$syntax-violation$20732$1POZIn
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$21275$1POZIn
                                                                                             g$others$21299$1POZIn)))
                                                                                        g$ls/false$21298$1POZIn)
                                                                                      (g$syntax-violation$20732$1POZIn
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$21297$1POZIn))))
                                                                                 (g$syntax-dispatch$20613$1POZIn
                                                                                   g$t$21297$1POZIn
                                                                                   'any))))
                                                                             g$t$21293$1POZIn))))
                                                                       (g$syntax-dispatch$20613$1POZIn
                                                                         g$t$21293$1POZIn
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$21290$1POZIn))))
                                                             (g$syntax-dispatch$20613$1POZIn
                                                               g$t$21290$1POZIn
                                                               'each-any))))
                                                         (car g$lhs*$21288$1POZIn))))))))
                                        g$f$21287$1POZIn)
                                      g$lhs*$21283$1POZIn
                                      g$rhs*$21284$1POZIn))))
                                g$ls/false$21282$1POZIn)
                              (g$syntax-violation$20732$1POZIn
                                '#f
                                '"invalid syntax"
                                g$t$21281$1POZIn))))
                         (g$syntax-dispatch$20613$1POZIn
                           g$t$21281$1POZIn
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$21277$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21277$1POZIn
                 '(_ () any . each-any)))))
           g$stx$21275$1POZIn)))))
   (g$trace-lambda-macro$20582$1POZIn
     g$trace-lambda-macro$24177$1POZIn
     (case-lambda
       ((g$stx$21302$1POZIn)
        ((case-lambda
           ((g$t$21303$1POZIn)
            ((case-lambda
               ((g$ls/false$21304$1POZIn)
                (if g$ls/false$21304$1POZIn
                  (apply
                    (case-lambda
                      ((g$who$21305$1POZIn
                         g$fmls$21306$1POZIn
                         g$b$21307$1POZIn
                         g$b*$21308$1POZIn)
                       (if (g$valid-bound-ids?$20120$1POZIn
                             g$fmls$21306$1POZIn)
                         (g$bless$20576$1POZIn
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$21305$1POZIn)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$21306$1POZIn
                                 (cons
                                   g$b$21307$1POZIn
                                   g$b*$21308$1POZIn)))))
                         (g$invalid-fmls-error$20578$1POZIn
                           g$stx$21302$1POZIn
                           g$fmls$21306$1POZIn))))
                    g$ls/false$21304$1POZIn)
                  ((case-lambda
                     ((g$t$21309$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21310$1POZIn)
                          (if g$ls/false$21310$1POZIn
                            (apply
                              (case-lambda
                                ((g$who$21311$1POZIn
                                   g$fmls$21312$1POZIn
                                   g$last$21313$1POZIn
                                   g$b$21314$1POZIn
                                   g$b*$21315$1POZIn)
                                 (if (g$valid-bound-ids?$20120$1POZIn
                                       (cons
                                         g$last$21313$1POZIn
                                         g$fmls$21312$1POZIn))
                                   (g$bless$20576$1POZIn
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$21311$1POZIn)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$21312$1POZIn
                                             g$last$21313$1POZIn)
                                           (cons
                                             g$b$21314$1POZIn
                                             g$b*$21315$1POZIn)))))
                                   (g$invalid-fmls-error$20578$1POZIn
                                     g$stx$21302$1POZIn
                                     (append
                                       g$fmls$21312$1POZIn
                                       g$last$21313$1POZIn)))))
                              g$ls/false$21310$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21309$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21309$1POZIn
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$21303$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21303$1POZIn
               '(_ any each-any any . each-any)))))
         g$stx$21302$1POZIn))))
   (g$trace-define-macro$20583$1POZIn
     g$trace-define-macro$24178$1POZIn
     (case-lambda
       ((g$stx$21316$1POZIn)
        ((case-lambda
           ((g$t$21317$1POZIn)
            ((case-lambda
               ((g$ls/false$21318$1POZIn)
                (if g$ls/false$21318$1POZIn
                  (apply
                    (case-lambda
                      ((g$who$21319$1POZIn
                         g$fmls$21320$1POZIn
                         g$b$21321$1POZIn
                         g$b*$21322$1POZIn)
                       (if (g$valid-bound-ids?$20120$1POZIn
                             g$fmls$21320$1POZIn)
                         (g$bless$20576$1POZIn
                           (list
                             'define
                             g$who$21319$1POZIn
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$21319$1POZIn)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$21320$1POZIn
                                   (cons
                                     g$b$21321$1POZIn
                                     g$b*$21322$1POZIn))))))
                         (g$invalid-fmls-error$20578$1POZIn
                           g$stx$21316$1POZIn
                           g$fmls$21320$1POZIn))))
                    g$ls/false$21318$1POZIn)
                  ((case-lambda
                     ((g$t$21323$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21324$1POZIn)
                          (if g$ls/false$21324$1POZIn
                            (apply
                              (case-lambda
                                ((g$who$21325$1POZIn
                                   g$fmls$21326$1POZIn
                                   g$last$21327$1POZIn
                                   g$b$21328$1POZIn
                                   g$b*$21329$1POZIn)
                                 (if (g$valid-bound-ids?$20120$1POZIn
                                       (cons
                                         g$last$21327$1POZIn
                                         g$fmls$21326$1POZIn))
                                   (g$bless$20576$1POZIn
                                     (list
                                       'define
                                       g$who$21325$1POZIn
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$21325$1POZIn)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$21326$1POZIn
                                               g$last$21327$1POZIn)
                                             (cons
                                               g$b$21328$1POZIn
                                               g$b*$21329$1POZIn))))))
                                   (g$invalid-fmls-error$20578$1POZIn
                                     g$stx$21316$1POZIn
                                     (append
                                       g$fmls$21326$1POZIn
                                       g$last$21327$1POZIn)))))
                              g$ls/false$21324$1POZIn)
                            ((case-lambda
                               ((g$t$21330$1POZIn)
                                ((case-lambda
                                   ((g$ls/false$21331$1POZIn)
                                    (if g$ls/false$21331$1POZIn
                                      (apply
                                        (case-lambda
                                          ((g$who$21332$1POZIn
                                             g$expr$21333$1POZIn)
                                           (if (g$id?$20115$1POZIn
                                                 g$who$21332$1POZIn)
                                             (g$bless$20576$1POZIn
                                               (list
                                                 'define
                                                 g$who$21332$1POZIn
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$21333$1POZIn))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$21332$1POZIn)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$20732$1POZIn
                                               '#f
                                               '"invalid name"
                                               g$stx$21316$1POZIn))))
                                        g$ls/false$21331$1POZIn)
                                      (g$syntax-violation$20732$1POZIn
                                        '#f
                                        '"invalid syntax"
                                        g$t$21330$1POZIn))))
                                 (g$syntax-dispatch$20613$1POZIn
                                   g$t$21330$1POZIn
                                   '(_ any any)))))
                             g$t$21323$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21323$1POZIn
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$21317$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21317$1POZIn
               '(_ (any . each-any) any . each-any)))))
         g$stx$21316$1POZIn))))
   (g$trace-define-syntax-macro$20584$1POZIn
     g$trace-define-syntax-macro$24179$1POZIn
     (case-lambda
       ((g$stx$21334$1POZIn)
        ((case-lambda
           ((g$t$21335$1POZIn)
            ((case-lambda
               ((g$ls/false$21336$1POZIn)
                (if g$ls/false$21336$1POZIn
                  (apply
                    (case-lambda
                      ((g$who$21337$1POZIn g$expr$21338$1POZIn)
                       (if (g$id?$20115$1POZIn g$who$21337$1POZIn)
                         (g$bless$20576$1POZIn
                           (list
                             'define-syntax
                             g$who$21337$1POZIn
                             (list
                               'make-traced-macro
                               (list 'quote g$who$21337$1POZIn)
                               g$expr$21338$1POZIn)))
                         (g$syntax-violation$20732$1POZIn
                           '#f
                           '"invalid name"
                           g$stx$21334$1POZIn))))
                    g$ls/false$21336$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21335$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21335$1POZIn
               '(_ any any)))))
         g$stx$21334$1POZIn))))
   (g$trace-let/rec-syntax$20585$1POZIn
     g$trace-let/rec-syntax$24180$1POZIn
     (case-lambda
       ((g$who$21339$1POZIn)
        (case-lambda
          ((g$stx$21340$1POZIn)
           ((case-lambda
              ((g$t$21341$1POZIn)
               ((case-lambda
                  ((g$ls/false$21342$1POZIn)
                   (if g$ls/false$21342$1POZIn
                     (apply
                       (case-lambda
                         ((g$lhs*$21343$1POZIn
                            g$rhs*$21344$1POZIn
                            g$b$21345$1POZIn
                            g$b*$21346$1POZIn)
                          (if (g$valid-bound-ids?$20120$1POZIn
                                g$lhs*$21343$1POZIn)
                            ((case-lambda
                               ((g$rhs*$21347$1POZIn)
                                (g$bless$20576$1POZIn
                                  (cons
                                    g$who$21339$1POZIn
                                    (cons
                                      (g$map$11833$1POZIn
                                        list
                                        g$lhs*$21343$1POZIn
                                        g$rhs*$21347$1POZIn)
                                      (cons
                                        g$b$21345$1POZIn
                                        g$b*$21346$1POZIn))))))
                             (g$map$11833$1POZIn
                               (case-lambda
                                 ((g$lhs$21348$1POZIn
                                    g$rhs$21349$1POZIn)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$21348$1POZIn)
                                    g$rhs$21349$1POZIn)))
                               g$lhs*$21343$1POZIn
                               g$rhs*$21344$1POZIn))
                            (g$invalid-fmls-error$20578$1POZIn
                              g$stx$21340$1POZIn
                              g$lhs*$21343$1POZIn))))
                       g$ls/false$21342$1POZIn)
                     (g$syntax-violation$20732$1POZIn
                       '#f
                       '"invalid syntax"
                       g$t$21341$1POZIn))))
                (g$syntax-dispatch$20613$1POZIn
                  g$t$21341$1POZIn
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$21340$1POZIn))))))
   (g$trace-let-syntax-macro$20586$1POZIn
     g$trace-let-syntax-macro$24181$1POZIn
     (g$trace-let/rec-syntax$20585$1POZIn 'let-syntax))
   (g$trace-letrec-syntax-macro$20587$1POZIn
     g$trace-letrec-syntax-macro$24182$1POZIn
     (g$trace-let/rec-syntax$20585$1POZIn 'letrec-syntax))
   (g$guard-macro$20588$1POZIn
     g$guard-macro$24183$1POZIn
     (case-lambda
       ((g$x$21350$1POZIn)
        (letrec* ((g$gen-clauses$21351$1POZIn
                    (case-lambda
                      ((g$con$21363$1POZIn
                         g$outerk$21364$1POZIn
                         g$clause*$21365$1POZIn)
                       (letrec* ((g$f$21366$1POZIn
                                   (case-lambda
                                     ((g$x$21394$1POZIn
                                        g$k$21395$1POZIn)
                                      ((case-lambda
                                         ((g$t$21396$1POZIn)
                                          ((case-lambda
                                             ((g$ls/false$21397$1POZIn)
                                              (if g$ls/false$21397$1POZIn
                                                (apply
                                                  (case-lambda
                                                    ((g$e$21398$1POZIn
                                                       g$p$21399$1POZIn)
                                                     ((case-lambda
                                                        ((g$t$21400$1POZIn)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$21400$1POZIn
                                                               g$e$21398$1POZIn))
                                                           (list
                                                             'if
                                                             g$t$21400$1POZIn
                                                             (list
                                                               g$p$21399$1POZIn
                                                               g$t$21400$1POZIn)
                                                             g$k$21395$1POZIn))))
                                                      (gensym))))
                                                  g$ls/false$21397$1POZIn)
                                                ((case-lambda
                                                   ((g$t$21401$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$21402$1POZIn)
                                                        (if g$ls/false$21402$1POZIn
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$21403$1POZIn)
                                                               ((case-lambda
                                                                  ((g$t$21404$1POZIn)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$21404$1POZIn
                                                                         g$e$21403$1POZIn))
                                                                     (list
                                                                       'if
                                                                       g$t$21404$1POZIn
                                                                       g$t$21404$1POZIn
                                                                       g$k$21395$1POZIn))))
                                                                (gensym))))
                                                            g$ls/false$21402$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$21405$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$21406$1POZIn)
                                                                  (if g$ls/false$21406$1POZIn
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$21407$1POZIn
                                                                           g$v$21408$1POZIn
                                                                           g$v*$21409$1POZIn)
                                                                         (list
                                                                           'if
                                                                           g$e$21407$1POZIn
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$21408$1POZIn
                                                                               g$v*$21409$1POZIn))
                                                                           g$k$21395$1POZIn)))
                                                                      g$ls/false$21406$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$t$21410$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21411$1POZIn)
                                                                            (if g$ls/false$21411$1POZIn
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$20732$1POZIn
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$21394$1POZIn)))
                                                                                g$ls/false$21411$1POZIn)
                                                                              (g$syntax-violation$20732$1POZIn
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$21410$1POZIn))))
                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                           g$t$21410$1POZIn
                                                                           '_))))
                                                                     g$t$21405$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$21405$1POZIn
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$21401$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$21401$1POZIn
                                                       '(any)))))
                                                 g$t$21396$1POZIn))))
                                           (g$syntax-dispatch$20613$1POZIn
                                             g$t$21396$1POZIn
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$21394$1POZIn))))
                                 (g$f*$21367$1POZIn
                                   (case-lambda
                                     ((g$x*$21374$1POZIn)
                                      ((case-lambda
                                         ((g$t$21375$1POZIn)
                                          ((case-lambda
                                             ((g$ls/false$21376$1POZIn)
                                              (if g$ls/false$21376$1POZIn
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$21363$1POZIn)
                                                       '#t)))
                                                  g$ls/false$21376$1POZIn)
                                                ((case-lambda
                                                   ((g$t$21377$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$21378$1POZIn)
                                                        (if g$ls/false$21378$1POZIn
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$21379$1POZIn
                                                                 g$e*$21380$1POZIn)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$21379$1POZIn
                                                                     g$e*$21380$1POZIn))
                                                                 '#f)))
                                                            g$ls/false$21378$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$21381$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$21382$1POZIn)
                                                                  (if g$ls/false$21382$1POZIn
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$21383$1POZIn
                                                                           g$cls*$21384$1POZIn)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$21367$1POZIn
                                                                                g$cls*$21384$1POZIn)))
                                                                           (case-lambda
                                                                             ((g$e$21387$1POZIn
                                                                                g$g$21388$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$g$21389$1POZIn
                                                                                    g$e$21390$1POZIn)
                                                                                  (values
                                                                                    (g$f$21366$1POZIn
                                                                                      g$cls$21383$1POZIn
                                                                                      g$e$21390$1POZIn)
                                                                                    g$g$21389$1POZIn)))
                                                                               g$g$21388$1POZIn
                                                                               g$e$21387$1POZIn))))))
                                                                      g$ls/false$21382$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$t$21391$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21392$1POZIn)
                                                                            (if g$ls/false$21392$1POZIn
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$21393$1POZIn)
                                                                                   (g$syntax-violation$20732$1POZIn
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$21393$1POZIn)))
                                                                                g$ls/false$21392$1POZIn)
                                                                              (g$syntax-violation$20732$1POZIn
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$21391$1POZIn))))
                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                           g$t$21391$1POZIn
                                                                           'any))))
                                                                     g$t$21381$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$21381$1POZIn
                                                                 '(any .
                                                                       any)))))
                                                           g$t$21377$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$21377$1POZIn
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$21375$1POZIn))))
                                           (g$syntax-dispatch$20613$1POZIn
                                             g$t$21375$1POZIn
                                             '()))))
                                       g$x*$21374$1POZIn)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$21367$1POZIn
                                g$clause*$21365$1POZIn)))
                           (case-lambda
                             ((g$code$21370$1POZIn
                                g$raisek$21371$1POZIn)
                              ((case-lambda
                                 ((g$raisek$21372$1POZIn
                                    g$code$21373$1POZIn)
                                  (if g$raisek$21372$1POZIn
                                    (list
                                      g$outerk$21364$1POZIn
                                      g$code$21373$1POZIn)
                                    g$code$21373$1POZIn)))
                               g$raisek$21371$1POZIn
                               g$code$21370$1POZIn)))))))))
          ((case-lambda
             ((g$t$21352$1POZIn)
              ((case-lambda
                 ((g$ls/false$21353$1POZIn)
                  (if (if g$ls/false$21353$1POZIn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$21354$1POZIn
                                 g$clause*$21355$1POZIn
                                 g$b$21356$1POZIn
                                 g$b*$21357$1POZIn)
                               (g$id?$20115$1POZIn g$con$21354$1POZIn)))
                            g$ls/false$21353$1POZIn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$21358$1POZIn
                           g$clause*$21359$1POZIn
                           g$b$21360$1POZIn
                           g$b*$21361$1POZIn)
                         ((case-lambda
                            ((g$outerk$21362$1POZIn)
                             (g$bless$20576$1POZIn
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$21362$1POZIn)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$21358$1POZIn)
                                           (g$gen-clauses$21351$1POZIn
                                             g$con$21358$1POZIn
                                             g$outerk$21362$1POZIn
                                             g$clause*$21359$1POZIn))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$21360$1POZIn
                                               g$b*$21361$1POZIn)))))))))))
                          (gensym))))
                      g$ls/false$21353$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$21352$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21352$1POZIn
                 '(_ (any . each-any) any . each-any)))))
           g$x$21350$1POZIn)))))
   (g$define-enumeration-macro$20589$1POZIn
     g$define-enumeration-macro$24184$1POZIn
     (case-lambda
       ((g$stx$21412$1POZIn)
        (letrec* ((g$set?$21413$1POZIn
                    (case-lambda
                      ((g$x$21426$1POZIn)
                       ((case-lambda
                          ((g$t$21427$1POZIn)
                           (if g$t$21427$1POZIn
                             g$t$21427$1POZIn
                             (begin
                               '#f
                               (if (not (g$memq$11825$1POZIn
                                          (car g$x$21426$1POZIn)
                                          (cdr g$x$21426$1POZIn)))
                                 (begin
                                   '#f
                                   (g$set?$21413$1POZIn
                                     (cdr g$x$21426$1POZIn)))
                                 '#f)))))
                        (null? g$x$21426$1POZIn)))))
                  (g$remove-dups$21414$1POZIn
                    (case-lambda
                      ((g$ls$21425$1POZIn)
                       (if (null? g$ls$21425$1POZIn)
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$ls$21425$1POZIn)
                             (g$remove-dups$21414$1POZIn
                               (g$remq$11840$1POZIn
                                 (car g$ls$21425$1POZIn)
                                 (cdr g$ls$21425$1POZIn))))))))))
          ((case-lambda
             ((g$t$21415$1POZIn)
              ((case-lambda
                 ((g$ls/false$21416$1POZIn)
                  (if (if g$ls/false$21416$1POZIn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$21417$1POZIn
                                 g$id*$21418$1POZIn
                                 g$maker$21419$1POZIn)
                               (if (g$id?$20115$1POZIn
                                     g$name$21417$1POZIn)
                                 (if (g$id?$20115$1POZIn
                                       g$maker$21419$1POZIn)
                                   (begin
                                     '#f
                                     (g$for-all$11831$1POZIn
                                       g$id?$20115$1POZIn
                                       g$id*$21418$1POZIn))
                                   '#f)
                                 '#f)))
                            g$ls/false$21416$1POZIn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$21420$1POZIn
                           g$id*$21421$1POZIn
                           g$maker$21422$1POZIn)
                         ((case-lambda
                            ((g$name*$21423$1POZIn g$mk$21424$1POZIn)
                             (g$bless$20576$1POZIn
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$21424$1POZIn
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$21423$1POZIn))))
                                 (list
                                   'define-syntax
                                   g$name$21420$1POZIn
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$21423$1POZIn))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$21420$1POZIn)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$21422$1POZIn
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$21422$1POZIn)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$21423$1POZIn))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$21422$1POZIn)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$21424$1POZIn
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$21414$1POZIn
                            (g$syntax->datum$20735$1POZIn
                              g$id*$21421$1POZIn))
                          (gensym))))
                      g$ls/false$21416$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$21415$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21415$1POZIn
                 '(_ any each-any any)))))
           g$stx$21412$1POZIn)))))
   (g$time-macro$20590$1POZIn
     g$time-macro$24185$1POZIn
     (case-lambda
       ((g$stx$21428$1POZIn)
        ((case-lambda
           ((g$t$21429$1POZIn)
            ((case-lambda
               ((g$ls/false$21430$1POZIn)
                (if g$ls/false$21430$1POZIn
                  (apply
                    (case-lambda
                      ((g$expr$21431$1POZIn)
                       ((case-lambda
                          ((g$str$21432$1POZIn)
                           (g$bless$20576$1POZIn
                             (list
                               'time-it
                               g$str$21432$1POZIn
                               (list
                                 'lambda
                                 '()
                                 g$expr$21431$1POZIn)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$18527$1POZIn)))
                          (case-lambda
                            ((g$p$21435$1POZIn g$e$21436$1POZIn)
                             ((case-lambda
                                ((g$e$21437$1POZIn g$p$21438$1POZIn)
                                 (begin
                                   (write
                                     (g$syntax->datum$20735$1POZIn
                                       g$expr$21431$1POZIn)
                                     g$p$21438$1POZIn)
                                   (g$e$21437$1POZIn))))
                              g$e$21436$1POZIn
                              g$p$21435$1POZIn)))))))
                    g$ls/false$21430$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21429$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21429$1POZIn
               '(_ any)))))
         g$stx$21428$1POZIn))))
   (g$delay-macro$20591$1POZIn
     g$delay-macro$24186$1POZIn
     (case-lambda
       ((g$stx$21439$1POZIn)
        ((case-lambda
           ((g$t$21440$1POZIn)
            ((case-lambda
               ((g$ls/false$21441$1POZIn)
                (if g$ls/false$21441$1POZIn
                  (apply
                    (case-lambda
                      ((g$expr$21442$1POZIn)
                       (g$bless$20576$1POZIn
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$21442$1POZIn)))))
                    g$ls/false$21441$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21440$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21440$1POZIn
               '(_ any)))))
         g$stx$21439$1POZIn))))
   (g$assert-macro$20592$1POZIn
     g$assert-macro$24187$1POZIn
     (case-lambda
       ((g$stx$21443$1POZIn)
        ((case-lambda
           ((g$t$21444$1POZIn)
            ((case-lambda
               ((g$ls/false$21445$1POZIn)
                (if g$ls/false$21445$1POZIn
                  (apply
                    (case-lambda
                      ((g$expr$21446$1POZIn)
                       ((case-lambda
                          ((g$pos$21447$1POZIn)
                           (g$bless$20576$1POZIn
                             (list
                               'unless
                               g$expr$21446$1POZIn
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$21446$1POZIn)
                                 (list 'quote g$pos$21447$1POZIn))))))
                        ((case-lambda
                           ((g$t$21448$1POZIn)
                            (if g$t$21448$1POZIn
                              g$t$21448$1POZIn
                              (begin
                                '#f
                                (g$expression-position$20727$1POZIn
                                  g$expr$21446$1POZIn)))))
                         (g$expression-position$20727$1POZIn
                           g$stx$21443$1POZIn)))))
                    g$ls/false$21445$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21444$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21444$1POZIn
               '(_ any)))))
         g$stx$21443$1POZIn))))
   (g$endianness-macro$20593$1POZIn
     g$endianness-macro$24188$1POZIn
     (case-lambda
       ((g$stx$21449$1POZIn)
        ((case-lambda
           ((g$t$21450$1POZIn)
            ((case-lambda
               ((g$ls/false$21451$1POZIn)
                (if g$ls/false$21451$1POZIn
                  (apply
                    (case-lambda
                      ((g$e$21452$1POZIn)
                       ((case-lambda
                          ((g$t$21453$1POZIn)
                           (if (eqv? g$t$21453$1POZIn 'little)
                             (g$bless$20576$1POZIn ''little)
                             (if (eqv? g$t$21453$1POZIn 'big)
                               (g$bless$20576$1POZIn ''big)
                               (begin
                                 '#f
                                 (g$syntax-violation$20732$1POZIn
                                   '#f
                                   '"endianness must be big or little"
                                   g$stx$21449$1POZIn))))))
                        (g$syntax->datum$20735$1POZIn
                          g$e$21452$1POZIn))))
                    g$ls/false$21451$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21450$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21450$1POZIn
               '(_ any)))))
         g$stx$21449$1POZIn))))
   (g$identifier-syntax-macro$20594$1POZIn
     g$identifier-syntax-macro$24189$1POZIn
     (case-lambda
       ((g$stx$21454$1POZIn)
        ((case-lambda
           ((g$t$21455$1POZIn)
            ((case-lambda
               ((g$ls/false$21456$1POZIn)
                (if g$ls/false$21456$1POZIn
                  (apply
                    (case-lambda
                      ((g$expr$21457$1POZIn)
                       (g$bless$20576$1POZIn
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$21457$1POZIn))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$21457$1POZIn)
                                   '(#'(e* ...))))))))))
                    g$ls/false$21456$1POZIn)
                  ((case-lambda
                     ((g$t$21458$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21459$1POZIn)
                          (if (if g$ls/false$21459$1POZIn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$21460$1POZIn
                                         g$expr1$21461$1POZIn
                                         g$id2$21462$1POZIn
                                         g$expr2$21463$1POZIn
                                         g$expr3$21464$1POZIn)
                                       (if (g$id?$20115$1POZIn
                                             g$id1$21460$1POZIn)
                                         (if (g$id?$20115$1POZIn
                                               g$id2$21462$1POZIn)
                                           (begin
                                             '#f
                                             (g$id?$20115$1POZIn
                                               g$expr2$21463$1POZIn))
                                           '#f)
                                         '#f)))
                                    g$ls/false$21459$1POZIn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$21465$1POZIn
                                   g$expr1$21466$1POZIn
                                   g$id2$21467$1POZIn
                                   g$expr2$21468$1POZIn
                                   g$expr3$21469$1POZIn)
                                 (g$bless$20576$1POZIn
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$21466$1POZIn))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$21468$1POZIn)
                                           (list
                                             'syntax
                                             g$expr3$21469$1POZIn))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$21466$1POZIn
                                               '(e* ...))))))))))
                              g$ls/false$21459$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21458$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21458$1POZIn
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$21455$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21455$1POZIn
               '(_ any)))))
         g$stx$21454$1POZIn))))
   (g$do-macro$20595$1POZIn
     g$do-macro$24190$1POZIn
     (case-lambda
       ((g$stx$21470$1POZIn)
        (letrec* ((g$bind$21471$1POZIn
                    (case-lambda
                      ((g$x$21483$1POZIn)
                       ((case-lambda
                          ((g$t$21484$1POZIn)
                           ((case-lambda
                              ((g$ls/false$21485$1POZIn)
                               (if g$ls/false$21485$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$x$21486$1POZIn
                                        g$init$21487$1POZIn)
                                      (list
                                        g$x$21486$1POZIn
                                        g$init$21487$1POZIn
                                        g$x$21486$1POZIn)))
                                   g$ls/false$21485$1POZIn)
                                 ((case-lambda
                                    ((g$t$21488$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$21489$1POZIn)
                                         (if g$ls/false$21489$1POZIn
                                           (apply
                                             (case-lambda
                                               ((g$x$21490$1POZIn
                                                  g$init$21491$1POZIn
                                                  g$step$21492$1POZIn)
                                                (list
                                                  g$x$21490$1POZIn
                                                  g$init$21491$1POZIn
                                                  g$step$21492$1POZIn)))
                                             g$ls/false$21489$1POZIn)
                                           ((case-lambda
                                              ((g$t$21493$1POZIn)
                                               ((case-lambda
                                                  ((g$ls/false$21494$1POZIn)
                                                   (if g$ls/false$21494$1POZIn
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$20732$1POZIn
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$21470$1POZIn)))
                                                       g$ls/false$21494$1POZIn)
                                                     (g$syntax-violation$20732$1POZIn
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$21493$1POZIn))))
                                                (g$syntax-dispatch$20613$1POZIn
                                                  g$t$21493$1POZIn
                                                  '_))))
                                            g$t$21488$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$21488$1POZIn
                                        '(any any any)))))
                                  g$t$21484$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$21484$1POZIn
                              '(any any)))))
                        g$x$21483$1POZIn)))))
          ((case-lambda
             ((g$t$21472$1POZIn)
              ((case-lambda
                 ((g$ls/false$21473$1POZIn)
                  (if g$ls/false$21473$1POZIn
                    (apply
                      (case-lambda
                        ((g$binding*$21474$1POZIn
                           g$test$21475$1POZIn
                           g$expr*$21476$1POZIn
                           g$command*$21477$1POZIn)
                         ((case-lambda
                            ((g$t$21478$1POZIn)
                             ((case-lambda
                                ((g$ls/false$21479$1POZIn)
                                 (if g$ls/false$21479$1POZIn
                                   (apply
                                     (case-lambda
                                       ((g$x*$21480$1POZIn
                                          g$init*$21481$1POZIn
                                          g$step*$21482$1POZIn)
                                        (if (g$valid-bound-ids?$20120$1POZIn
                                              g$x*$21480$1POZIn)
                                          (g$bless$20576$1POZIn
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$21480$1POZIn
                                                    (list
                                                      'if
                                                      g$test$21475$1POZIn
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$21476$1POZIn))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$21477$1POZIn
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$21482$1POZIn))))))))
                                              (cons
                                                'loop
                                                g$init*$21481$1POZIn)))
                                          (g$syntax-violation$20732$1POZIn
                                            '#f
                                            '"invalid bindings"
                                            g$stx$21470$1POZIn))))
                                     g$ls/false$21479$1POZIn)
                                   (g$syntax-violation$20732$1POZIn
                                     '#f
                                     '"invalid syntax"
                                     g$t$21478$1POZIn))))
                              (g$syntax-dispatch$20613$1POZIn
                                g$t$21478$1POZIn
                                '#(each (any any any))))))
                          (g$map$11833$1POZIn
                            g$bind$21471$1POZIn
                            g$binding*$21474$1POZIn))))
                      g$ls/false$21473$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$21472$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21472$1POZIn
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$21470$1POZIn)))))
   (g$let*-macro$20596$1POZIn
     g$let*-macro$24191$1POZIn
     (case-lambda
       ((g$stx$21495$1POZIn)
        ((case-lambda
           ((g$t$21496$1POZIn)
            ((case-lambda
               ((g$ls/false$21497$1POZIn)
                (if (if g$ls/false$21497$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$21498$1POZIn
                               g$rhs*$21499$1POZIn
                               g$b$21500$1POZIn
                               g$b*$21501$1POZIn)
                             (g$for-all$11831$1POZIn
                               g$id?$20115$1POZIn
                               g$lhs*$21498$1POZIn)))
                          g$ls/false$21497$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$21502$1POZIn
                         g$rhs*$21503$1POZIn
                         g$b$21504$1POZIn
                         g$b*$21505$1POZIn)
                       (g$bless$20576$1POZIn
                         ((letrec ((g$f$21506$1POZIn
                                     (case-lambda
                                       ((g$x*$21507$1POZIn)
                                        (if (null? g$x*$21507$1POZIn)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$21504$1POZIn
                                                g$b*$21505$1POZIn)))
                                          (if (null?
                                                (cdr g$x*$21507$1POZIn))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$21507$1POZIn))
                                                (cons
                                                  g$b$21504$1POZIn
                                                  g$b*$21505$1POZIn)))
                                            (begin
                                              '#f
                                              (list
                                                'let
                                                (list
                                                  (car g$x*$21507$1POZIn))
                                                (g$f$21506$1POZIn
                                                  (cdr g$x*$21507$1POZIn))))))))))
                            g$f$21506$1POZIn)
                          (g$map$11833$1POZIn
                            list
                            g$lhs*$21502$1POZIn
                            g$rhs*$21503$1POZIn)))))
                    g$ls/false$21497$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21496$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21496$1POZIn
               '(_ #(each (any any)) any . each-any)))))
         g$stx$21495$1POZIn))))
   (g$or-macro$20597$1POZIn
     g$or-macro$24192$1POZIn
     (case-lambda
       ((g$stx$21508$1POZIn)
        ((case-lambda
           ((g$t$21509$1POZIn)
            ((case-lambda
               ((g$ls/false$21510$1POZIn)
                (if g$ls/false$21510$1POZIn
                  (apply (case-lambda (() '#f)) g$ls/false$21510$1POZIn)
                  ((case-lambda
                     ((g$t$21511$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21512$1POZIn)
                          (if g$ls/false$21512$1POZIn
                            (apply
                              (case-lambda
                                ((g$e$21513$1POZIn g$e*$21514$1POZIn)
                                 (g$bless$20576$1POZIn
                                   ((letrec ((g$f$21515$1POZIn
                                               (case-lambda
                                                 ((g$e$21516$1POZIn
                                                    g$e*$21517$1POZIn)
                                                  (if (null?
                                                        g$e*$21517$1POZIn)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$21516$1POZIn)
                                                    (begin
                                                      '#f
                                                      (list
                                                        'let
                                                        (list
                                                          (list
                                                            't
                                                            g$e$21516$1POZIn))
                                                        (list
                                                          'if
                                                          't
                                                          't
                                                          (g$f$21515$1POZIn
                                                            (car g$e*$21517$1POZIn)
                                                            (cdr g$e*$21517$1POZIn))))))))))
                                      g$f$21515$1POZIn)
                                    g$e$21513$1POZIn
                                    g$e*$21514$1POZIn))))
                              g$ls/false$21512$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21511$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21511$1POZIn
                         '(_ any . each-any)))))
                   g$t$21509$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn g$t$21509$1POZIn '(_)))))
         g$stx$21508$1POZIn))))
   (g$and-macro$20598$1POZIn
     g$and-macro$24193$1POZIn
     (case-lambda
       ((g$stx$21518$1POZIn)
        ((case-lambda
           ((g$t$21519$1POZIn)
            ((case-lambda
               ((g$ls/false$21520$1POZIn)
                (if g$ls/false$21520$1POZIn
                  (apply (case-lambda (() '#t)) g$ls/false$21520$1POZIn)
                  ((case-lambda
                     ((g$t$21521$1POZIn)
                      ((case-lambda
                         ((g$ls/false$21522$1POZIn)
                          (if g$ls/false$21522$1POZIn
                            (apply
                              (case-lambda
                                ((g$e$21523$1POZIn g$e*$21524$1POZIn)
                                 (g$bless$20576$1POZIn
                                   ((letrec ((g$f$21525$1POZIn
                                               (case-lambda
                                                 ((g$e$21526$1POZIn
                                                    g$e*$21527$1POZIn)
                                                  (if (null?
                                                        g$e*$21527$1POZIn)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$21526$1POZIn)
                                                    (begin
                                                      '#f
                                                      (cons
                                                        'if
                                                        (cons
                                                          g$e$21526$1POZIn
                                                          (cons
                                                            (g$f$21525$1POZIn
                                                              (car g$e*$21527$1POZIn)
                                                              (cdr g$e*$21527$1POZIn))
                                                            '(#f))))))))))
                                      g$f$21525$1POZIn)
                                    g$e$21523$1POZIn
                                    g$e*$21524$1POZIn))))
                              g$ls/false$21522$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$21521$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$21521$1POZIn
                         '(_ any . each-any)))))
                   g$t$21519$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn g$t$21519$1POZIn '(_)))))
         g$stx$21518$1POZIn))))
   (g$cond-macro$20599$1POZIn
     g$cond-macro$24194$1POZIn
     (case-lambda
       ((g$stx$21528$1POZIn)
        ((case-lambda
           ((g$t$21529$1POZIn)
            ((case-lambda
               ((g$ls/false$21530$1POZIn)
                (if g$ls/false$21530$1POZIn
                  (apply
                    (case-lambda
                      ((g$cls$21531$1POZIn g$cls*$21532$1POZIn)
                       (g$bless$20576$1POZIn
                         ((letrec ((g$f$21533$1POZIn
                                     (case-lambda
                                       ((g$cls$21534$1POZIn
                                          g$cls*$21535$1POZIn)
                                        (if (null? g$cls*$21535$1POZIn)
                                          ((case-lambda
                                             ((g$t$21536$1POZIn)
                                              ((case-lambda
                                                 ((g$ls/false$21537$1POZIn)
                                                  (if g$ls/false$21537$1POZIn
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$21538$1POZIn
                                                           g$e*$21539$1POZIn)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             '#f
                                                             (cons
                                                               g$e$21538$1POZIn
                                                               g$e*$21539$1POZIn)))))
                                                      g$ls/false$21537$1POZIn)
                                                    ((case-lambda
                                                       ((g$t$21540$1POZIn)
                                                        ((case-lambda
                                                           ((g$ls/false$21541$1POZIn)
                                                            (if g$ls/false$21541$1POZIn
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$21542$1POZIn
                                                                     g$p$21543$1POZIn)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$21542$1POZIn))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$21543$1POZIn
                                                                         '(t))))))
                                                                g$ls/false$21541$1POZIn)
                                                              ((case-lambda
                                                                 ((g$t$21544$1POZIn)
                                                                  ((case-lambda
                                                                     ((g$ls/false$21545$1POZIn)
                                                                      (if g$ls/false$21545$1POZIn
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$21546$1POZIn)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$21546$1POZIn
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$21545$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$t$21547$1POZIn)
                                                                            ((case-lambda
                                                                               ((g$ls/false$21548$1POZIn)
                                                                                (if g$ls/false$21548$1POZIn
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$21549$1POZIn
                                                                                         g$e*$21550$1POZIn)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$21549$1POZIn
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$21550$1POZIn))))
                                                                                    g$ls/false$21548$1POZIn)
                                                                                  ((case-lambda
                                                                                     ((g$t$21551$1POZIn)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$21552$1POZIn)
                                                                                          (if g$ls/false$21552$1POZIn
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$20732$1POZIn
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$21528$1POZIn)))
                                                                                              g$ls/false$21552$1POZIn)
                                                                                            (g$syntax-violation$20732$1POZIn
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$21551$1POZIn))))
                                                                                       (g$syntax-dispatch$20613$1POZIn
                                                                                         g$t$21551$1POZIn
                                                                                         '_))))
                                                                                   g$t$21547$1POZIn))))
                                                                             (g$syntax-dispatch$20613$1POZIn
                                                                               g$t$21547$1POZIn
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$21544$1POZIn))))
                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                     g$t$21544$1POZIn
                                                                     '(any)))))
                                                               g$t$21540$1POZIn))))
                                                         (g$syntax-dispatch$20613$1POZIn
                                                           g$t$21540$1POZIn
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$21536$1POZIn))))
                                               (g$syntax-dispatch$20613$1POZIn
                                                 g$t$21536$1POZIn
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$21534$1POZIn)
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$t$21553$1POZIn)
                                                ((case-lambda
                                                   ((g$ls/false$21554$1POZIn)
                                                    (if g$ls/false$21554$1POZIn
                                                      (apply
                                                        (case-lambda
                                                          ((g$e$21555$1POZIn
                                                             g$e*$21556$1POZIn)
                                                           (g$syntax-violation$20732$1POZIn
                                                             '#f
                                                             '"incorrect position of keyword else"
                                                             g$stx$21528$1POZIn)))
                                                        g$ls/false$21554$1POZIn)
                                                      ((case-lambda
                                                         ((g$t$21557$1POZIn)
                                                          ((case-lambda
                                                             ((g$ls/false$21558$1POZIn)
                                                              (if g$ls/false$21558$1POZIn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$e$21559$1POZIn
                                                                       g$p$21560$1POZIn)
                                                                     (list
                                                                       'let
                                                                       (list
                                                                         (list
                                                                           't
                                                                           g$e$21559$1POZIn))
                                                                       (list
                                                                         'if
                                                                         't
                                                                         (cons
                                                                           g$p$21560$1POZIn
                                                                           '(t))
                                                                         (g$f$21533$1POZIn
                                                                           (car g$cls*$21535$1POZIn)
                                                                           (cdr g$cls*$21535$1POZIn))))))
                                                                  g$ls/false$21558$1POZIn)
                                                                ((case-lambda
                                                                   ((g$t$21561$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21562$1POZIn)
                                                                        (if g$ls/false$21562$1POZIn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$e$21563$1POZIn)
                                                                               (list
                                                                                 'or
                                                                                 g$e$21563$1POZIn
                                                                                 (g$f$21533$1POZIn
                                                                                   (car g$cls*$21535$1POZIn)
                                                                                   (cdr g$cls*$21535$1POZIn)))))
                                                                            g$ls/false$21562$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$21564$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21565$1POZIn)
                                                                                  (if g$ls/false$21565$1POZIn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$e$21566$1POZIn
                                                                                           g$e*$21567$1POZIn)
                                                                                         (list
                                                                                           'if
                                                                                           g$e$21566$1POZIn
                                                                                           (cons
                                                                                             'begin
                                                                                             g$e*$21567$1POZIn)
                                                                                           (g$f$21533$1POZIn
                                                                                             (car g$cls*$21535$1POZIn)
                                                                                             (cdr g$cls*$21535$1POZIn)))))
                                                                                      g$ls/false$21565$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$21568$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21569$1POZIn)
                                                                                            (if g$ls/false$21569$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$20732$1POZIn
                                                                                                     '#f
                                                                                                     '"invalid last clause"
                                                                                                     g$stx$21528$1POZIn)))
                                                                                                g$ls/false$21569$1POZIn)
                                                                                              (g$syntax-violation$20732$1POZIn
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21568$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$21568$1POZIn
                                                                                           '_))))
                                                                                     g$t$21564$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$21564$1POZIn
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$t$21561$1POZIn))))
                                                                     (g$syntax-dispatch$20613$1POZIn
                                                                       g$t$21561$1POZIn
                                                                       '(any)))))
                                                                 g$t$21557$1POZIn))))
                                                           (g$syntax-dispatch$20613$1POZIn
                                                             g$t$21557$1POZIn
                                                             '(any #(scheme-id
                                                                     =>)
                                                                   any)))))
                                                       g$t$21553$1POZIn))))
                                                 (g$syntax-dispatch$20613$1POZIn
                                                   g$t$21553$1POZIn
                                                   '(#(scheme-id else)
                                                     any
                                                     .
                                                     each-any)))))
                                             g$cls$21534$1POZIn)))))))
                            g$f$21533$1POZIn)
                          g$cls$21531$1POZIn
                          g$cls*$21532$1POZIn))))
                    g$ls/false$21530$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21529$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21529$1POZIn
               '(_ any . each-any)))))
         g$stx$21528$1POZIn))))
   (g$do-include$20600$1POZIn
     g$do-include$24195$1POZIn
     (case-lambda
       ((g$stx$21570$1POZIn g$id$21571$1POZIn g$filename$21572$1POZIn)
        ((case-lambda
           ((g$filename$21573$1POZIn)
            (begin
              (if (not (if (string? g$filename$21573$1POZIn)
                         (begin
                           '#f
                           (g$id?$20115$1POZIn g$id$21571$1POZIn))
                         '#f))
                (g$syntax-violation$20732$1POZIn
                  '#f
                  '"invalid syntax"
                  g$stx$21570$1POZIn)
                (void))
              (cons
                (g$bless$20576$1POZIn 'begin)
                (g$with-input-from-file$18589$1POZIn
                  g$filename$21573$1POZIn
                  (case-lambda
                    (()
                     ((letrec ((g$f$21574$1POZIn
                                 (case-lambda
                                   ((g$ls$21575$1POZIn)
                                    ((case-lambda
                                       ((g$x$21576$1POZIn)
                                        (if (eof-object?
                                              g$x$21576$1POZIn)
                                          (g$reverse$12682$1POZIn
                                            g$ls$21575$1POZIn)
                                          (begin
                                            '#f
                                            (g$f$21574$1POZIn
                                              (cons
                                                (g$datum->stx$20098$1POZIn
                                                  g$id$21571$1POZIn
                                                  g$x$21576$1POZIn)
                                                g$ls$21575$1POZIn))))))
                                     (read-annotated))))))
                        g$f$21574$1POZIn)
                      '()))))))))
         (g$stx->datum$20126$1POZIn g$filename$21572$1POZIn)))))
   (g$include-macro$20601$1POZIn
     g$include-macro$24196$1POZIn
     (case-lambda
       ((g$e$21577$1POZIn)
        ((case-lambda
           ((g$t$21578$1POZIn)
            ((case-lambda
               ((g$ls/false$21579$1POZIn)
                (if g$ls/false$21579$1POZIn
                  (apply
                    (case-lambda
                      ((g$id$21580$1POZIn g$filename$21581$1POZIn)
                       (g$do-include$20600$1POZIn
                         g$e$21577$1POZIn
                         g$id$21580$1POZIn
                         g$filename$21581$1POZIn)))
                    g$ls/false$21579$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21578$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21578$1POZIn
               '(any any)))))
         g$e$21577$1POZIn))))
   (g$include-into-macro$20602$1POZIn
     g$include-into-macro$24197$1POZIn
     (case-lambda
       ((g$e$21582$1POZIn)
        ((case-lambda
           ((g$t$21583$1POZIn)
            ((case-lambda
               ((g$ls/false$21584$1POZIn)
                (if g$ls/false$21584$1POZIn
                  (apply
                    (case-lambda
                      ((g$id$21585$1POZIn g$filename$21586$1POZIn)
                       (g$do-include$20600$1POZIn
                         g$e$21582$1POZIn
                         g$id$21585$1POZIn
                         g$filename$21586$1POZIn)))
                    g$ls/false$21584$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21583$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21583$1POZIn
               '(_ any any)))))
         g$e$21582$1POZIn))))
   (g$syntax-rules-macro$20603$1POZIn
     g$syntax-rules-macro$24198$1POZIn
     (case-lambda
       ((g$e$21587$1POZIn)
        ((case-lambda
           ((g$t$21588$1POZIn)
            ((case-lambda
               ((g$ls/false$21589$1POZIn)
                (if g$ls/false$21589$1POZIn
                  (apply
                    (case-lambda
                      ((g$lits$21590$1POZIn
                         g$pat*$21591$1POZIn
                         g$tmp*$21592$1POZIn)
                       (begin
                         (g$verify-literals$20616$1POZIn
                           g$lits$21590$1POZIn
                           g$e$21587$1POZIn)
                         (g$bless$20576$1POZIn
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$21590$1POZIn
                                   (g$map$11833$1POZIn
                                     (case-lambda
                                       ((g$pat$21593$1POZIn
                                          g$tmp$21594$1POZIn)
                                        ((case-lambda
                                           ((g$t$21595$1POZIn)
                                            ((case-lambda
                                               ((g$ls/false$21596$1POZIn)
                                                (if g$ls/false$21596$1POZIn
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$21597$1POZIn)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$21597$1POZIn)
                                                         (list
                                                           'syntax
                                                           g$tmp$21594$1POZIn))))
                                                    g$ls/false$21596$1POZIn)
                                                  ((case-lambda
                                                     ((g$t$21598$1POZIn)
                                                      ((case-lambda
                                                         ((g$ls/false$21599$1POZIn)
                                                          (if g$ls/false$21599$1POZIn
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$20732$1POZIn
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$21587$1POZIn
                                                                   g$pat$21593$1POZIn)))
                                                              g$ls/false$21599$1POZIn)
                                                            (g$syntax-violation$20732$1POZIn
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$21598$1POZIn))))
                                                       (g$syntax-dispatch$20613$1POZIn
                                                         g$t$21598$1POZIn
                                                         '_))))
                                                   g$t$21595$1POZIn))))
                                             (g$syntax-dispatch$20613$1POZIn
                                               g$t$21595$1POZIn
                                               '(_ . any)))))
                                         g$pat$21593$1POZIn)))
                                     g$pat*$21591$1POZIn
                                     g$tmp*$21592$1POZIn)))))))))
                    g$ls/false$21589$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$21588$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$21588$1POZIn
               '(_ each-any . #(each (any any)))))))
         g$e$21587$1POZIn))))
   (g$quasiquote-macro$20604$1POZIn
     g$quasiquote-macro$24199$1POZIn
     ((case-lambda
        (()
         (letrec* ((g$datum$21600$1POZIn
                     (case-lambda
                       ((g$x$21750$1POZIn)
                        (list
                          (g$scheme-stx$20556$1POZIn 'quote)
                          (g$mkstx$20103$1POZIn
                            g$x$21750$1POZIn
                            '()
                            '()
                            '())))))
                   (g$quasicons*$21635$1POZIn
                     (case-lambda
                       ((g$x$21746$1POZIn g$y$21747$1POZIn)
                        ((letrec ((g$f$21748$1POZIn
                                    (case-lambda
                                      ((g$x$21749$1POZIn)
                                       (if (null? g$x$21749$1POZIn)
                                         g$y$21747$1POZIn
                                         (g$quasicons$21636$1POZIn
                                           (car g$x$21749$1POZIn)
                                           (g$f$21748$1POZIn
                                             (cdr g$x$21749$1POZIn))))))))
                           g$f$21748$1POZIn)
                         g$x$21746$1POZIn))))
                   (g$quasicons$21636$1POZIn
                     (case-lambda
                       ((g$x$21727$1POZIn g$y$21728$1POZIn)
                        ((case-lambda
                           ((g$t$21729$1POZIn)
                            ((case-lambda
                               ((g$ls/false$21730$1POZIn)
                                (if g$ls/false$21730$1POZIn
                                  (apply
                                    (case-lambda
                                      ((g$dy$21731$1POZIn)
                                       ((case-lambda
                                          ((g$t$21732$1POZIn)
                                           ((case-lambda
                                              ((g$ls/false$21733$1POZIn)
                                               (if g$ls/false$21733$1POZIn
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$21734$1POZIn)
                                                      (list
                                                        (g$scheme-stx$20556$1POZIn
                                                          'quote)
                                                        (cons
                                                          g$dx$21734$1POZIn
                                                          g$dy$21731$1POZIn))))
                                                   g$ls/false$21733$1POZIn)
                                                 ((case-lambda
                                                    ((g$t$21735$1POZIn)
                                                     ((case-lambda
                                                        ((g$ls/false$21736$1POZIn)
                                                         (if g$ls/false$21736$1POZIn
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$21737$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21738$1POZIn)
                                                                        (if g$ls/false$21738$1POZIn
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$20556$1POZIn
                                                                                   'list)
                                                                                 g$x$21727$1POZIn)))
                                                                            g$ls/false$21738$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$21739$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21740$1POZIn)
                                                                                  (if g$ls/false$21740$1POZIn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$20556$1POZIn
                                                                                             'cons)
                                                                                           g$x$21727$1POZIn
                                                                                           g$y$21728$1POZIn)))
                                                                                      g$ls/false$21740$1POZIn)
                                                                                    (g$syntax-violation$20732$1POZIn
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$21739$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$21739$1POZIn
                                                                                 '_))))
                                                                           g$t$21737$1POZIn))))
                                                                     (g$syntax-dispatch$20613$1POZIn
                                                                       g$t$21737$1POZIn
                                                                       '()))))
                                                                 g$dy$21731$1POZIn)))
                                                             g$ls/false$21736$1POZIn)
                                                           (g$syntax-violation$20732$1POZIn
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$21735$1POZIn))))
                                                      (g$syntax-dispatch$20613$1POZIn
                                                        g$t$21735$1POZIn
                                                        '_))))
                                                  g$t$21732$1POZIn))))
                                            (g$syntax-dispatch$20613$1POZIn
                                              g$t$21732$1POZIn
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$21727$1POZIn)))
                                    g$ls/false$21730$1POZIn)
                                  ((case-lambda
                                     ((g$t$21741$1POZIn)
                                      ((case-lambda
                                         ((g$ls/false$21742$1POZIn)
                                          (if g$ls/false$21742$1POZIn
                                            (apply
                                              (case-lambda
                                                ((g$stuff$21743$1POZIn)
                                                 (g$cons*$11835$1POZIn
                                                   (g$scheme-stx$20556$1POZIn
                                                     'list)
                                                   g$x$21727$1POZIn
                                                   g$stuff$21743$1POZIn)))
                                              g$ls/false$21742$1POZIn)
                                            ((case-lambda
                                               ((g$t$21744$1POZIn)
                                                ((case-lambda
                                                   ((g$ls/false$21745$1POZIn)
                                                    (if g$ls/false$21745$1POZIn
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$20556$1POZIn
                                                               'cons)
                                                             g$x$21727$1POZIn
                                                             g$y$21728$1POZIn)))
                                                        g$ls/false$21745$1POZIn)
                                                      (g$syntax-violation$20732$1POZIn
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$21744$1POZIn))))
                                                 (g$syntax-dispatch$20613$1POZIn
                                                   g$t$21744$1POZIn
                                                   '_))))
                                             g$t$21741$1POZIn))))
                                       (g$syntax-dispatch$20613$1POZIn
                                         g$t$21741$1POZIn
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$21729$1POZIn))))
                             (g$syntax-dispatch$20613$1POZIn
                               g$t$21729$1POZIn
                               '(#(scheme-id quote) any)))))
                         g$y$21728$1POZIn))))
                   (g$quasiappend$21637$1POZIn
                     (case-lambda
                       ((g$x$21714$1POZIn g$y$21715$1POZIn)
                        ((case-lambda
                           ((g$ls$21716$1POZIn)
                            (if (null? g$ls$21716$1POZIn)
                              (list
                                (g$scheme-stx$20556$1POZIn 'quote)
                                '())
                              (if (null? (cdr g$ls$21716$1POZIn))
                                (car g$ls$21716$1POZIn)
                                (begin
                                  '#f
                                  (g$cons*$11835$1POZIn
                                    (g$scheme-stx$20556$1POZIn 'append)
                                    g$ls$21716$1POZIn))))))
                         ((letrec ((g$f$21717$1POZIn
                                     (case-lambda
                                       ((g$x$21718$1POZIn)
                                        (if (null? g$x$21718$1POZIn)
                                          ((case-lambda
                                             ((g$t$21719$1POZIn)
                                              ((case-lambda
                                                 ((g$ls/false$21720$1POZIn)
                                                  (if g$ls/false$21720$1POZIn
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$21720$1POZIn)
                                                    ((case-lambda
                                                       ((g$t$21721$1POZIn)
                                                        ((case-lambda
                                                           ((g$ls/false$21722$1POZIn)
                                                            (if g$ls/false$21722$1POZIn
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$21715$1POZIn)))
                                                                g$ls/false$21722$1POZIn)
                                                              (g$syntax-violation$20732$1POZIn
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21721$1POZIn))))
                                                         (g$syntax-dispatch$20613$1POZIn
                                                           g$t$21721$1POZIn
                                                           '_))))
                                                     g$t$21719$1POZIn))))
                                               (g$syntax-dispatch$20613$1POZIn
                                                 g$t$21719$1POZIn
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$21715$1POZIn)
                                          ((case-lambda
                                             ((g$t$21723$1POZIn)
                                              ((case-lambda
                                                 ((g$ls/false$21724$1POZIn)
                                                  (if g$ls/false$21724$1POZIn
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$21717$1POZIn
                                                           (cdr g$x$21718$1POZIn))))
                                                      g$ls/false$21724$1POZIn)
                                                    ((case-lambda
                                                       ((g$t$21725$1POZIn)
                                                        ((case-lambda
                                                           ((g$ls/false$21726$1POZIn)
                                                            (if g$ls/false$21726$1POZIn
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$21718$1POZIn)
                                                                     (g$f$21717$1POZIn
                                                                       (cdr g$x$21718$1POZIn)))))
                                                                g$ls/false$21726$1POZIn)
                                                              (g$syntax-violation$20732$1POZIn
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21725$1POZIn))))
                                                         (g$syntax-dispatch$20613$1POZIn
                                                           g$t$21725$1POZIn
                                                           '_))))
                                                     g$t$21723$1POZIn))))
                                               (g$syntax-dispatch$20613$1POZIn
                                                 g$t$21723$1POZIn
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$21718$1POZIn)))))))
                            g$f$21717$1POZIn)
                          g$x$21714$1POZIn)))))
                   (g$quasivector$21638$1POZIn
                     (case-lambda
                       ((g$x$21689$1POZIn)
                        ((case-lambda
                           ((g$pat-x$21690$1POZIn)
                            ((case-lambda
                               ((g$t$21691$1POZIn)
                                ((case-lambda
                                   ((g$ls/false$21692$1POZIn)
                                    (if g$ls/false$21692$1POZIn
                                      (apply
                                        (case-lambda
                                          ((g$x*$21693$1POZIn)
                                           (list
                                             (g$scheme-stx$20556$1POZIn
                                               'quote)
                                             (g$list->vector$12676$1POZIn
                                               g$x*$21693$1POZIn))))
                                        g$ls/false$21692$1POZIn)
                                      ((case-lambda
                                         ((g$t$21694$1POZIn)
                                          ((case-lambda
                                             ((g$ls/false$21695$1POZIn)
                                              (if g$ls/false$21695$1POZIn
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$21696$1POZIn
                                                                 (case-lambda
                                                                   ((g$x$21697$1POZIn
                                                                      g$k$21698$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$t$21699$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$21700$1POZIn)
                                                                            (if g$ls/false$21700$1POZIn
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$21701$1POZIn)
                                                                                   (g$k$21698$1POZIn
                                                                                     (g$map$11833$1POZIn
                                                                                       (case-lambda
                                                                                         ((g$x$21702$1POZIn)
                                                                                          (list
                                                                                            (g$scheme-stx$20556$1POZIn
                                                                                              'quote)
                                                                                            g$x$21702$1POZIn)))
                                                                                       g$x*$21701$1POZIn))))
                                                                                g$ls/false$21700$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$t$21703$1POZIn)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$21704$1POZIn)
                                                                                      (if g$ls/false$21704$1POZIn
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$21705$1POZIn)
                                                                                             (g$k$21698$1POZIn
                                                                                               g$x*$21705$1POZIn)))
                                                                                          g$ls/false$21704$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$t$21706$1POZIn)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$21707$1POZIn)
                                                                                                (if g$ls/false$21707$1POZIn
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$21708$1POZIn
                                                                                                         g$y$21709$1POZIn)
                                                                                                       (g$f$21696$1POZIn
                                                                                                         g$y$21709$1POZIn
                                                                                                         (case-lambda
                                                                                                           ((g$ls$21710$1POZIn)
                                                                                                            (g$k$21698$1POZIn
                                                                                                              (cons
                                                                                                                g$x$21708$1POZIn
                                                                                                                g$ls$21710$1POZIn)))))))
                                                                                                    g$ls/false$21707$1POZIn)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$21711$1POZIn)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$21712$1POZIn)
                                                                                                          (if g$ls/false$21712$1POZIn
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$20556$1POZIn
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$21690$1POZIn)))
                                                                                                              g$ls/false$21712$1POZIn)
                                                                                                            (g$syntax-violation$20732$1POZIn
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$21711$1POZIn))))
                                                                                                       (g$syntax-dispatch$20613$1POZIn
                                                                                                         g$t$21711$1POZIn
                                                                                                         '_))))
                                                                                                   g$t$21706$1POZIn))))
                                                                                             (g$syntax-dispatch$20613$1POZIn
                                                                                               g$t$21706$1POZIn
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$21703$1POZIn))))
                                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                                     g$t$21703$1POZIn
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$21699$1POZIn))))
                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                           g$t$21699$1POZIn
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$21697$1POZIn)))))
                                                        g$f$21696$1POZIn)
                                                      g$x$21689$1POZIn
                                                      (case-lambda
                                                        ((g$ls$21713$1POZIn)
                                                         (g$cons*$11835$1POZIn
                                                           (g$scheme-stx$20556$1POZIn
                                                             'vector)
                                                           g$ls$21713$1POZIn))))))
                                                  g$ls/false$21695$1POZIn)
                                                (g$syntax-violation$20732$1POZIn
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$21694$1POZIn))))
                                           (g$syntax-dispatch$20613$1POZIn
                                             g$t$21694$1POZIn
                                             '_))))
                                       g$t$21691$1POZIn))))
                                 (g$syntax-dispatch$20613$1POZIn
                                   g$t$21691$1POZIn
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$21690$1POZIn)))
                         g$x$21689$1POZIn))))
                   (g$vquasi$21639$1POZIn
                     (case-lambda
                       ((g$p$21672$1POZIn g$lev$21673$1POZIn)
                        ((case-lambda
                           ((g$t$21674$1POZIn)
                            ((case-lambda
                               ((g$ls/false$21675$1POZIn)
                                (if g$ls/false$21675$1POZIn
                                  (apply
                                    (case-lambda
                                      ((g$p$21676$1POZIn
                                         g$q$21677$1POZIn)
                                       ((case-lambda
                                          ((g$t$21678$1POZIn)
                                           ((case-lambda
                                              ((g$ls/false$21679$1POZIn)
                                               (if g$ls/false$21679$1POZIn
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$21680$1POZIn)
                                                      (if (g$=$13618$1POZIn
                                                            g$lev$21673$1POZIn
                                                            '0)
                                                        (g$quasicons*$21635$1POZIn
                                                          g$p$21680$1POZIn
                                                          (g$vquasi$21639$1POZIn
                                                            g$q$21677$1POZIn
                                                            g$lev$21673$1POZIn))
                                                        (g$quasicons$21636$1POZIn
                                                          (g$quasicons$21636$1POZIn
                                                            (g$datum$21600$1POZIn
                                                              'unquote)
                                                            (g$quasi$21640$1POZIn
                                                              g$p$21680$1POZIn
                                                              (- g$lev$21673$1POZIn
                                                                 '1)))
                                                          (g$vquasi$21639$1POZIn
                                                            g$q$21677$1POZIn
                                                            g$lev$21673$1POZIn)))))
                                                   g$ls/false$21679$1POZIn)
                                                 ((case-lambda
                                                    ((g$t$21681$1POZIn)
                                                     ((case-lambda
                                                        ((g$ls/false$21682$1POZIn)
                                                         (if g$ls/false$21682$1POZIn
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$21683$1POZIn)
                                                                (if (g$=$13618$1POZIn
                                                                      g$lev$21673$1POZIn
                                                                      '0)
                                                                  (g$quasiappend$21637$1POZIn
                                                                    g$p$21683$1POZIn
                                                                    (g$vquasi$21639$1POZIn
                                                                      g$q$21677$1POZIn
                                                                      g$lev$21673$1POZIn))
                                                                  (g$quasicons$21636$1POZIn
                                                                    (g$quasicons$21636$1POZIn
                                                                      (g$datum$21600$1POZIn
                                                                        'unquote-splicing)
                                                                      (g$quasi$21640$1POZIn
                                                                        g$p$21683$1POZIn
                                                                        (- g$lev$21673$1POZIn
                                                                           '1)))
                                                                    (g$vquasi$21639$1POZIn
                                                                      g$q$21677$1POZIn
                                                                      g$lev$21673$1POZIn)))))
                                                             g$ls/false$21682$1POZIn)
                                                           ((case-lambda
                                                              ((g$t$21684$1POZIn)
                                                               ((case-lambda
                                                                  ((g$ls/false$21685$1POZIn)
                                                                   (if g$ls/false$21685$1POZIn
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$21686$1POZIn)
                                                                          (g$quasicons$21636$1POZIn
                                                                            (g$quasi$21640$1POZIn
                                                                              g$p$21686$1POZIn
                                                                              g$lev$21673$1POZIn)
                                                                            (g$vquasi$21639$1POZIn
                                                                              g$q$21677$1POZIn
                                                                              g$lev$21673$1POZIn))))
                                                                       g$ls/false$21685$1POZIn)
                                                                     (g$syntax-violation$20732$1POZIn
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$21684$1POZIn))))
                                                                (g$syntax-dispatch$20613$1POZIn
                                                                  g$t$21684$1POZIn
                                                                  'any))))
                                                            g$t$21681$1POZIn))))
                                                      (g$syntax-dispatch$20613$1POZIn
                                                        g$t$21681$1POZIn
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$21678$1POZIn))))
                                            (g$syntax-dispatch$20613$1POZIn
                                              g$t$21678$1POZIn
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$21676$1POZIn)))
                                    g$ls/false$21675$1POZIn)
                                  ((case-lambda
                                     ((g$t$21687$1POZIn)
                                      ((case-lambda
                                         ((g$ls/false$21688$1POZIn)
                                          (if g$ls/false$21688$1POZIn
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$20556$1POZIn
                                                     'quote)
                                                   '())))
                                              g$ls/false$21688$1POZIn)
                                            (g$syntax-violation$20732$1POZIn
                                              '#f
                                              '"invalid syntax"
                                              g$t$21687$1POZIn))))
                                       (g$syntax-dispatch$20613$1POZIn
                                         g$t$21687$1POZIn
                                         '()))))
                                   g$t$21674$1POZIn))))
                             (g$syntax-dispatch$20613$1POZIn
                               g$t$21674$1POZIn
                               '(any . any)))))
                         g$p$21672$1POZIn))))
                   (g$quasi$21640$1POZIn
                     (case-lambda
                       ((g$p$21645$1POZIn g$lev$21646$1POZIn)
                        ((case-lambda
                           ((g$t$21647$1POZIn)
                            ((case-lambda
                               ((g$ls/false$21648$1POZIn)
                                (if g$ls/false$21648$1POZIn
                                  (apply
                                    (case-lambda
                                      ((g$p$21649$1POZIn)
                                       (if (g$=$13618$1POZIn
                                             g$lev$21646$1POZIn
                                             '0)
                                         g$p$21649$1POZIn
                                         (g$quasicons$21636$1POZIn
                                           (g$datum$21600$1POZIn
                                             'unquote)
                                           (g$quasi$21640$1POZIn
                                             (list g$p$21649$1POZIn)
                                             (- g$lev$21646$1POZIn
                                                '1))))))
                                    g$ls/false$21648$1POZIn)
                                  ((case-lambda
                                     ((g$t$21650$1POZIn)
                                      ((case-lambda
                                         ((g$ls/false$21651$1POZIn)
                                          (if g$ls/false$21651$1POZIn
                                            (apply
                                              (case-lambda
                                                ((g$p$21652$1POZIn
                                                   g$q$21653$1POZIn)
                                                 (if (g$=$13618$1POZIn
                                                       g$lev$21646$1POZIn
                                                       '0)
                                                   (g$quasicons*$21635$1POZIn
                                                     g$p$21652$1POZIn
                                                     (g$quasi$21640$1POZIn
                                                       g$q$21653$1POZIn
                                                       g$lev$21646$1POZIn))
                                                   (g$quasicons$21636$1POZIn
                                                     (g$quasicons$21636$1POZIn
                                                       (g$datum$21600$1POZIn
                                                         'unquote)
                                                       (g$quasi$21640$1POZIn
                                                         g$p$21652$1POZIn
                                                         (- g$lev$21646$1POZIn
                                                            '1)))
                                                     (g$quasi$21640$1POZIn
                                                       g$q$21653$1POZIn
                                                       g$lev$21646$1POZIn)))))
                                              g$ls/false$21651$1POZIn)
                                            ((case-lambda
                                               ((g$t$21654$1POZIn)
                                                ((case-lambda
                                                   ((g$ls/false$21655$1POZIn)
                                                    (if g$ls/false$21655$1POZIn
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$21656$1POZIn
                                                             g$q$21657$1POZIn)
                                                           (if (g$=$13618$1POZIn
                                                                 g$lev$21646$1POZIn
                                                                 '0)
                                                             (g$quasiappend$21637$1POZIn
                                                               g$p$21656$1POZIn
                                                               (g$quasi$21640$1POZIn
                                                                 g$q$21657$1POZIn
                                                                 g$lev$21646$1POZIn))
                                                             (g$quasicons$21636$1POZIn
                                                               (g$quasicons$21636$1POZIn
                                                                 (g$datum$21600$1POZIn
                                                                   'unquote-splicing)
                                                                 (g$quasi$21640$1POZIn
                                                                   g$p$21656$1POZIn
                                                                   (- g$lev$21646$1POZIn
                                                                      '1)))
                                                               (g$quasi$21640$1POZIn
                                                                 g$q$21657$1POZIn
                                                                 g$lev$21646$1POZIn)))))
                                                        g$ls/false$21655$1POZIn)
                                                      ((case-lambda
                                                         ((g$t$21658$1POZIn)
                                                          ((case-lambda
                                                             ((g$ls/false$21659$1POZIn)
                                                              (if g$ls/false$21659$1POZIn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$21660$1POZIn)
                                                                     (g$quasicons$21636$1POZIn
                                                                       (g$datum$21600$1POZIn
                                                                         'quasiquote)
                                                                       (g$quasi$21640$1POZIn
                                                                         (list
                                                                           g$p$21660$1POZIn)
                                                                         (+ g$lev$21646$1POZIn
                                                                            '1)))))
                                                                  g$ls/false$21659$1POZIn)
                                                                ((case-lambda
                                                                   ((g$t$21661$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21662$1POZIn)
                                                                        (if g$ls/false$21662$1POZIn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$21663$1POZIn
                                                                                 g$q$21664$1POZIn)
                                                                               (g$quasicons$21636$1POZIn
                                                                                 (g$quasi$21640$1POZIn
                                                                                   g$p$21663$1POZIn
                                                                                   g$lev$21646$1POZIn)
                                                                                 (g$quasi$21640$1POZIn
                                                                                   g$q$21664$1POZIn
                                                                                   g$lev$21646$1POZIn))))
                                                                            g$ls/false$21662$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$21665$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21666$1POZIn)
                                                                                  (if (if g$ls/false$21666$1POZIn
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$21667$1POZIn)
                                                                                               (not (g$stx?$20087$1POZIn
                                                                                                      g$x$21667$1POZIn))))
                                                                                            g$ls/false$21666$1POZIn))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$21668$1POZIn)
                                                                                         (g$quasivector$21638$1POZIn
                                                                                           (g$vquasi$21639$1POZIn
                                                                                             g$x$21668$1POZIn
                                                                                             g$lev$21646$1POZIn))))
                                                                                      g$ls/false$21666$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$21669$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21670$1POZIn)
                                                                                            (if g$ls/false$21670$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21671$1POZIn)
                                                                                                   (list
                                                                                                     (g$scheme-stx$20556$1POZIn
                                                                                                       'quote)
                                                                                                     g$p$21671$1POZIn)))
                                                                                                g$ls/false$21670$1POZIn)
                                                                                              (g$syntax-violation$20732$1POZIn
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$21669$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$21669$1POZIn
                                                                                           'any))))
                                                                                     g$t$21665$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$21665$1POZIn
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$21661$1POZIn))))
                                                                     (g$syntax-dispatch$20613$1POZIn
                                                                       g$t$21661$1POZIn
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$21658$1POZIn))))
                                                           (g$syntax-dispatch$20613$1POZIn
                                                             g$t$21658$1POZIn
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$21654$1POZIn))))
                                                 (g$syntax-dispatch$20613$1POZIn
                                                   g$t$21654$1POZIn
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$21650$1POZIn))))
                                       (g$syntax-dispatch$20613$1POZIn
                                         g$t$21650$1POZIn
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$21647$1POZIn))))
                             (g$syntax-dispatch$20613$1POZIn
                               g$t$21647$1POZIn
                               '(#(scheme-id unquote) any)))))
                         g$p$21645$1POZIn)))))
           (case-lambda
             ((g$x$21641$1POZIn)
              ((case-lambda
                 ((g$t$21642$1POZIn)
                  ((case-lambda
                     ((g$ls/false$21643$1POZIn)
                      (if g$ls/false$21643$1POZIn
                        (apply
                          (case-lambda
                            ((g$e$21644$1POZIn)
                             (g$quasi$21640$1POZIn
                               g$e$21644$1POZIn
                               '0)))
                          g$ls/false$21643$1POZIn)
                        (g$syntax-violation$20732$1POZIn
                          '#f
                          '"invalid syntax"
                          g$t$21642$1POZIn))))
                   (g$syntax-dispatch$20613$1POZIn
                     g$t$21642$1POZIn
                     '(_ any)))))
               g$x$21641$1POZIn))))))))
   (g$quasisyntax-macro$20605$1POZIn
     g$quasisyntax-macro$24200$1POZIn
     ((case-lambda
        (()
         (letrec* ((g$quasi$21751$1POZIn
                     (case-lambda
                       ((g$p$21765$1POZIn g$lev$21766$1POZIn)
                        ((case-lambda
                           ((g$t$21767$1POZIn)
                            ((case-lambda
                               ((g$ls/false$21768$1POZIn)
                                (if g$ls/false$21768$1POZIn
                                  (apply
                                    (case-lambda
                                      ((g$p$21769$1POZIn)
                                       (if (g$=$13618$1POZIn
                                             g$lev$21766$1POZIn
                                             '0)
                                         ((case-lambda
                                            ((g$g$21770$1POZIn)
                                             (values
                                               (list g$g$21770$1POZIn)
                                               (list g$p$21769$1POZIn)
                                               g$g$21770$1POZIn)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$21751$1POZIn
                                                g$p$21769$1POZIn
                                                (- g$lev$21766$1POZIn
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$21774$1POZIn
                                                g$rhs*$21775$1POZIn
                                                g$p$21776$1POZIn)
                                              ((case-lambda
                                                 ((g$p$21777$1POZIn
                                                    g$rhs*$21778$1POZIn
                                                    g$lhs*$21779$1POZIn)
                                                  (values
                                                    g$lhs*$21779$1POZIn
                                                    g$rhs*$21778$1POZIn
                                                    (list
                                                      'unsyntax
                                                      g$p$21777$1POZIn))))
                                               g$p$21776$1POZIn
                                               g$rhs*$21775$1POZIn
                                               g$lhs*$21774$1POZIn)))))))
                                    g$ls/false$21768$1POZIn)
                                  ((case-lambda
                                     ((g$t$21780$1POZIn)
                                      ((case-lambda
                                         ((g$ls/false$21781$1POZIn)
                                          (if (if g$ls/false$21781$1POZIn
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$13618$1POZIn
                                                         g$lev$21766$1POZIn
                                                         '0)))
                                                    g$ls/false$21781$1POZIn))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$20732$1POZIn
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$21765$1POZIn)))
                                              g$ls/false$21781$1POZIn)
                                            ((case-lambda
                                               ((g$t$21782$1POZIn)
                                                ((case-lambda
                                                   ((g$ls/false$21783$1POZIn)
                                                    (if g$ls/false$21783$1POZIn
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$21784$1POZIn
                                                             g$q$21785$1POZIn)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$21751$1POZIn
                                                                  g$q$21785$1POZIn
                                                                  g$lev$21766$1POZIn)))
                                                             (case-lambda
                                                               ((g$lhs*$21789$1POZIn
                                                                  g$rhs*$21790$1POZIn
                                                                  g$q$21791$1POZIn)
                                                                ((case-lambda
                                                                   ((g$q$21792$1POZIn
                                                                      g$rhs*$21793$1POZIn
                                                                      g$lhs*$21794$1POZIn)
                                                                    (if (g$=$13618$1POZIn
                                                                          g$lev$21766$1POZIn
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$21795$1POZIn)
                                                                          (values
                                                                            (append
                                                                              g$g*$21795$1POZIn
                                                                              g$lhs*$21794$1POZIn)
                                                                            (append
                                                                              g$p*$21784$1POZIn
                                                                              g$rhs*$21793$1POZIn)
                                                                            (append
                                                                              g$g*$21795$1POZIn
                                                                              g$q$21792$1POZIn))))
                                                                       (g$map$11833$1POZIn
                                                                         (case-lambda
                                                                           ((g$x$21796$1POZIn)
                                                                            (gensym)))
                                                                         g$p*$21784$1POZIn))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$21751$1POZIn
                                                                             g$p*$21784$1POZIn
                                                                             (- g$lev$21766$1POZIn
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$21800$1POZIn
                                                                             g$rhs2*$21801$1POZIn
                                                                             g$p*$21802$1POZIn)
                                                                           ((case-lambda
                                                                              ((g$p*$21803$1POZIn
                                                                                 g$rhs2*$21804$1POZIn
                                                                                 g$lhs2*$21805$1POZIn)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$21805$1POZIn
                                                                                   g$lhs*$21794$1POZIn)
                                                                                 (append
                                                                                   g$rhs2*$21804$1POZIn
                                                                                   g$rhs*$21793$1POZIn)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$21803$1POZIn)
                                                                                   g$q$21792$1POZIn))))
                                                                            g$p*$21802$1POZIn
                                                                            g$rhs2*$21801$1POZIn
                                                                            g$lhs2*$21800$1POZIn)))))))
                                                                 g$q$21791$1POZIn
                                                                 g$rhs*$21790$1POZIn
                                                                 g$lhs*$21789$1POZIn))))))
                                                        g$ls/false$21783$1POZIn)
                                                      ((case-lambda
                                                         ((g$t$21806$1POZIn)
                                                          ((case-lambda
                                                             ((g$ls/false$21807$1POZIn)
                                                              (if g$ls/false$21807$1POZIn
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$21808$1POZIn
                                                                       g$q$21809$1POZIn)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$21751$1POZIn
                                                                            g$q$21809$1POZIn
                                                                            g$lev$21766$1POZIn)))
                                                                       (case-lambda
                                                                         ((g$lhs*$21813$1POZIn
                                                                            g$rhs*$21814$1POZIn
                                                                            g$q$21815$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$q$21816$1POZIn
                                                                                g$rhs*$21817$1POZIn
                                                                                g$lhs*$21818$1POZIn)
                                                                              (if (g$=$13618$1POZIn
                                                                                    g$lev$21766$1POZIn
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$21819$1POZIn)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$11833$1POZIn
                                                                                          (case-lambda
                                                                                            ((g$g$21820$1POZIn)
                                                                                             (cons
                                                                                               g$g$21820$1POZIn
                                                                                               '(...))))
                                                                                          g$g*$21819$1POZIn)
                                                                                        g$lhs*$21818$1POZIn)
                                                                                      (append
                                                                                        g$p*$21808$1POZIn
                                                                                        g$rhs*$21817$1POZIn)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$11833$1POZIn
                                                                                            (case-lambda
                                                                                              ((g$g$21821$1POZIn)
                                                                                               (cons
                                                                                                 g$g$21821$1POZIn
                                                                                                 '(...))))
                                                                                            g$g*$21819$1POZIn))
                                                                                        g$q$21816$1POZIn))))
                                                                                 (g$map$11833$1POZIn
                                                                                   (case-lambda
                                                                                     ((g$x$21822$1POZIn)
                                                                                      (gensym)))
                                                                                   g$p*$21808$1POZIn))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$21751$1POZIn
                                                                                       g$p*$21808$1POZIn
                                                                                       (- g$lev$21766$1POZIn
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$21826$1POZIn
                                                                                       g$rhs2*$21827$1POZIn
                                                                                       g$p*$21828$1POZIn)
                                                                                     ((case-lambda
                                                                                        ((g$p*$21829$1POZIn
                                                                                           g$rhs2*$21830$1POZIn
                                                                                           g$lhs2*$21831$1POZIn)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$21831$1POZIn
                                                                                             g$lhs*$21818$1POZIn)
                                                                                           (append
                                                                                             g$rhs2*$21830$1POZIn
                                                                                             g$rhs*$21817$1POZIn)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$21829$1POZIn)
                                                                                             g$q$21816$1POZIn))))
                                                                                      g$p*$21828$1POZIn
                                                                                      g$rhs2*$21827$1POZIn
                                                                                      g$lhs2*$21826$1POZIn)))))))
                                                                           g$q$21815$1POZIn
                                                                           g$rhs*$21814$1POZIn
                                                                           g$lhs*$21813$1POZIn))))))
                                                                  g$ls/false$21807$1POZIn)
                                                                ((case-lambda
                                                                   ((g$t$21832$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$21833$1POZIn)
                                                                        (if (if g$ls/false$21833$1POZIn
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$13618$1POZIn
                                                                                       g$lev$21766$1POZIn
                                                                                       '0)))
                                                                                  g$ls/false$21833$1POZIn))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$20732$1POZIn
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$21765$1POZIn)))
                                                                            g$ls/false$21833$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$21834$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$21835$1POZIn)
                                                                                  (if g$ls/false$21835$1POZIn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$21836$1POZIn)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$21751$1POZIn
                                                                                                g$p$21836$1POZIn
                                                                                                (+ g$lev$21766$1POZIn
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$21840$1POZIn
                                                                                                g$rhs*$21841$1POZIn
                                                                                                g$p$21842$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$p$21843$1POZIn
                                                                                                    g$rhs*$21844$1POZIn
                                                                                                    g$lhs*$21845$1POZIn)
                                                                                                  (values
                                                                                                    g$lhs*$21845$1POZIn
                                                                                                    g$rhs*$21844$1POZIn
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$21843$1POZIn))))
                                                                                               g$p$21842$1POZIn
                                                                                               g$rhs*$21841$1POZIn
                                                                                               g$lhs*$21840$1POZIn))))))
                                                                                      g$ls/false$21835$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$21846$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$21847$1POZIn)
                                                                                            (if g$ls/false$21847$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$21848$1POZIn
                                                                                                     g$q$21849$1POZIn)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$21751$1POZIn
                                                                                                          g$p$21848$1POZIn
                                                                                                          g$lev$21766$1POZIn)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$21856$1POZIn
                                                                                                          g$rhs*$21857$1POZIn
                                                                                                          g$p$21858$1POZIn)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$21751$1POZIn
                                                                                                               g$q$21849$1POZIn
                                                                                                               g$lev$21766$1POZIn)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$21859$1POZIn
                                                                                                               g$rhs2*$21860$1POZIn
                                                                                                               g$q$21861$1POZIn)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$21862$1POZIn
                                                                                                                   g$rhs2*$21863$1POZIn
                                                                                                                   g$lhs2*$21864$1POZIn
                                                                                                                   g$p$21865$1POZIn
                                                                                                                   g$rhs*$21866$1POZIn
                                                                                                                   g$lhs*$21867$1POZIn)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$21864$1POZIn
                                                                                                                     g$lhs*$21867$1POZIn)
                                                                                                                   (append
                                                                                                                     g$rhs2*$21863$1POZIn
                                                                                                                     g$rhs*$21866$1POZIn)
                                                                                                                   (cons
                                                                                                                     g$p$21865$1POZIn
                                                                                                                     g$q$21862$1POZIn))))
                                                                                                              g$q$21861$1POZIn
                                                                                                              g$rhs2*$21860$1POZIn
                                                                                                              g$lhs2*$21859$1POZIn
                                                                                                              g$p$21858$1POZIn
                                                                                                              g$rhs*$21857$1POZIn
                                                                                                              g$lhs*$21856$1POZIn)))))))))
                                                                                                g$ls/false$21847$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$t$21868$1POZIn)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$21869$1POZIn)
                                                                                                      (if g$ls/false$21869$1POZIn
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$21870$1POZIn)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$21751$1POZIn
                                                                                                                    g$x*$21870$1POZIn
                                                                                                                    g$lev$21766$1POZIn)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$21874$1POZIn
                                                                                                                    g$rhs*$21875$1POZIn
                                                                                                                    g$x*$21876$1POZIn)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$21877$1POZIn
                                                                                                                        g$rhs*$21878$1POZIn
                                                                                                                        g$lhs*$21879$1POZIn)
                                                                                                                      (values
                                                                                                                        g$lhs*$21879$1POZIn
                                                                                                                        g$rhs*$21878$1POZIn
                                                                                                                        (g$list->vector$12676$1POZIn
                                                                                                                          g$x*$21877$1POZIn))))
                                                                                                                   g$x*$21876$1POZIn
                                                                                                                   g$rhs*$21875$1POZIn
                                                                                                                   g$lhs*$21874$1POZIn))))))
                                                                                                          g$ls/false$21869$1POZIn)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$21880$1POZIn)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$21881$1POZIn)
                                                                                                                (if g$ls/false$21881$1POZIn
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$21765$1POZIn)))
                                                                                                                    g$ls/false$21881$1POZIn)
                                                                                                                  (g$syntax-violation$20732$1POZIn
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$21880$1POZIn))))
                                                                                                             (g$syntax-dispatch$20613$1POZIn
                                                                                                               g$t$21880$1POZIn
                                                                                                               '_))))
                                                                                                         g$t$21868$1POZIn))))
                                                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                                                     g$t$21868$1POZIn
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$21846$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$21846$1POZIn
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$21834$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$21834$1POZIn
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$21832$1POZIn))))
                                                                     (g$syntax-dispatch$20613$1POZIn
                                                                       g$t$21832$1POZIn
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$21806$1POZIn))))
                                                           (g$syntax-dispatch$20613$1POZIn
                                                             g$t$21806$1POZIn
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$21782$1POZIn))))
                                                 (g$syntax-dispatch$20613$1POZIn
                                                   g$t$21782$1POZIn
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$21780$1POZIn))))
                                       (g$syntax-dispatch$20613$1POZIn
                                         g$t$21780$1POZIn
                                         '#(scheme-id unsyntax)))))
                                   g$t$21767$1POZIn))))
                             (g$syntax-dispatch$20613$1POZIn
                               g$t$21767$1POZIn
                               '(#(scheme-id unsyntax) any)))))
                         g$p$21765$1POZIn)))))
           (case-lambda
             ((g$x$21752$1POZIn)
              ((case-lambda
                 ((g$t$21753$1POZIn)
                  ((case-lambda
                     ((g$ls/false$21754$1POZIn)
                      (if g$ls/false$21754$1POZIn
                        (apply
                          (case-lambda
                            ((g$e$21755$1POZIn)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$21751$1POZIn
                                    g$e$21755$1POZIn
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$21759$1POZIn
                                    g$rhs*$21760$1POZIn
                                    g$v$21761$1POZIn)
                                  ((case-lambda
                                     ((g$v$21762$1POZIn
                                        g$rhs*$21763$1POZIn
                                        g$lhs*$21764$1POZIn)
                                      (g$bless$20576$1POZIn
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$21763$1POZIn)
                                          '()
                                          (list
                                            g$lhs*$21764$1POZIn
                                            (list
                                              'syntax
                                              g$v$21762$1POZIn))))))
                                   g$v$21761$1POZIn
                                   g$rhs*$21760$1POZIn
                                   g$lhs*$21759$1POZIn))))))
                          g$ls/false$21754$1POZIn)
                        (g$syntax-violation$20732$1POZIn
                          '#f
                          '"invalid syntax"
                          g$t$21753$1POZIn))))
                   (g$syntax-dispatch$20613$1POZIn
                     g$t$21753$1POZIn
                     '(_ any)))))
               g$x$21752$1POZIn))))))))
   (g$define-struct-macro$20606$1POZIn
     g$define-struct-macro$24201$1POZIn
     (case-lambda
       ((g$stx$21882$1POZIn)
        (g$syntax-violation$20732$1POZIn
          '#f
          '"define-struct not supported"
          g$stx$21882$1POZIn))))
   (g$define-record-type-macro$20607$1POZIn
     g$define-record-type-macro$24202$1POZIn
     (case-lambda
       ((g$x$21883$1POZIn)
        (letrec* ((g$id$21884$1POZIn
                    (case-lambda
                      ((g$ctxt$22136$1POZIn . g$str*$22137$1POZIn)
                       (g$datum->syntax$20734$1POZIn
                         g$ctxt$22136$1POZIn
                         (string->symbol
                           (apply
                             string-append
                             (g$map$11833$1POZIn
                               (case-lambda
                                 ((g$x$22138$1POZIn)
                                  (if (g$symbol?$12665$1POZIn
                                        g$x$22138$1POZIn)
                                    (symbol->string g$x$22138$1POZIn)
                                    (if (string? g$x$22138$1POZIn)
                                      g$x$22138$1POZIn
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'define-record-type
                                          '"BUG"))))))
                               g$str*$22137$1POZIn)))))))
                  (g$get-record-name$21885$1POZIn
                    (case-lambda
                      ((g$spec$22127$1POZIn)
                       ((case-lambda
                          ((g$t$22128$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22129$1POZIn)
                               (if g$ls/false$22129$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$foo$22130$1POZIn
                                        g$make-foo$22131$1POZIn
                                        g$foo?$22132$1POZIn)
                                      g$foo$22130$1POZIn))
                                   g$ls/false$22129$1POZIn)
                                 ((case-lambda
                                    ((g$t$22133$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22134$1POZIn)
                                         (if g$ls/false$22134$1POZIn
                                           (apply
                                             (case-lambda
                                               ((g$foo$22135$1POZIn)
                                                g$foo$22135$1POZIn))
                                             g$ls/false$22134$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22133$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22133$1POZIn
                                        'any))))
                                  g$t$22128$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22128$1POZIn
                              '(any any any)))))
                        g$spec$22127$1POZIn))))
                  (g$get-record-constructor-name$21886$1POZIn
                    (case-lambda
                      ((g$spec$22117$1POZIn)
                       ((case-lambda
                          ((g$t$22118$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22119$1POZIn)
                               (if g$ls/false$22119$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$foo$22120$1POZIn
                                        g$make-foo$22121$1POZIn
                                        g$foo?$22122$1POZIn)
                                      g$make-foo$22121$1POZIn))
                                   g$ls/false$22119$1POZIn)
                                 ((case-lambda
                                    ((g$t$22123$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22124$1POZIn)
                                         (if (if g$ls/false$22124$1POZIn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$22125$1POZIn)
                                                      (g$id?$20115$1POZIn
                                                        g$foo$22125$1POZIn)))
                                                   g$ls/false$22124$1POZIn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$22126$1POZIn)
                                                (g$id$21884$1POZIn
                                                  g$foo$22126$1POZIn
                                                  '"make-"
                                                  (g$stx->datum$20126$1POZIn
                                                    g$foo$22126$1POZIn))))
                                             g$ls/false$22124$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22123$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22123$1POZIn
                                        'any))))
                                  g$t$22118$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22118$1POZIn
                              '(any any any)))))
                        g$spec$22117$1POZIn))))
                  (g$get-record-predicate-name$21887$1POZIn
                    (case-lambda
                      ((g$spec$22107$1POZIn)
                       ((case-lambda
                          ((g$t$22108$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22109$1POZIn)
                               (if g$ls/false$22109$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$foo$22110$1POZIn
                                        g$make-foo$22111$1POZIn
                                        g$foo?$22112$1POZIn)
                                      g$foo?$22112$1POZIn))
                                   g$ls/false$22109$1POZIn)
                                 ((case-lambda
                                    ((g$t$22113$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22114$1POZIn)
                                         (if (if g$ls/false$22114$1POZIn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$22115$1POZIn)
                                                      (g$id?$20115$1POZIn
                                                        g$foo$22115$1POZIn)))
                                                   g$ls/false$22114$1POZIn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$22116$1POZIn)
                                                (g$id$21884$1POZIn
                                                  g$foo$22116$1POZIn
                                                  (g$stx->datum$20126$1POZIn
                                                    g$foo$22116$1POZIn)
                                                  '"?")))
                                             g$ls/false$22114$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22113$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22113$1POZIn
                                        'any))))
                                  g$t$22108$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22108$1POZIn
                              '(any any any)))))
                        g$spec$22107$1POZIn))))
                  (g$get-clause$21888$1POZIn
                    (case-lambda
                      ((g$id$22098$1POZIn g$ls$22099$1POZIn)
                       ((case-lambda
                          ((g$t$22100$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22101$1POZIn)
                               (if g$ls/false$22101$1POZIn
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$22101$1POZIn)
                                 ((case-lambda
                                    ((g$t$22102$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22103$1POZIn)
                                         (if g$ls/false$22103$1POZIn
                                           (apply
                                             (case-lambda
                                               ((g$x$22104$1POZIn
                                                  g$rest$22105$1POZIn
                                                  g$ls$22106$1POZIn)
                                                (if (g$free-id=?$20119$1POZIn
                                                      (g$bless$20576$1POZIn
                                                        g$id$22098$1POZIn)
                                                      g$x$22104$1POZIn)
                                                  (cons
                                                    g$x$22104$1POZIn
                                                    g$rest$22105$1POZIn)
                                                  (g$get-clause$21888$1POZIn
                                                    g$id$22098$1POZIn
                                                    g$ls$22106$1POZIn))))
                                             g$ls/false$22103$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22102$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22102$1POZIn
                                        '((any . any) . any)))))
                                  g$t$22100$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22100$1POZIn
                              '()))))
                        g$ls$22099$1POZIn))))
                  (g$foo-rtd-code$21889$1POZIn
                    (case-lambda
                      ((g$name$22057$1POZIn
                         g$clause*$22058$1POZIn
                         g$parent-rtd-code$22059$1POZIn)
                       (letrec* ((g$convert-field-spec*$22060$1POZIn
                                   (case-lambda
                                     ((g$ls$22085$1POZIn)
                                      (g$list->vector$12676$1POZIn
                                        (g$map$11833$1POZIn
                                          (case-lambda
                                            ((g$x$22086$1POZIn)
                                             ((case-lambda
                                                ((g$t$22087$1POZIn)
                                                 ((case-lambda
                                                    ((g$ls/false$22088$1POZIn)
                                                     (if g$ls/false$22088$1POZIn
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$22089$1POZIn
                                                              g$rest$22090$1POZIn)
                                                            (list
                                                              'mutable
                                                              g$name$22089$1POZIn)))
                                                         g$ls/false$22088$1POZIn)
                                                       ((case-lambda
                                                          ((g$t$22091$1POZIn)
                                                           ((case-lambda
                                                              ((g$ls/false$22092$1POZIn)
                                                               (if g$ls/false$22092$1POZIn
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$22093$1POZIn
                                                                        g$rest$22094$1POZIn)
                                                                      (list
                                                                        'immutable
                                                                        g$name$22093$1POZIn)))
                                                                   g$ls/false$22092$1POZIn)
                                                                 ((case-lambda
                                                                    ((g$t$22095$1POZIn)
                                                                     ((case-lambda
                                                                        ((g$ls/false$22096$1POZIn)
                                                                         (if g$ls/false$22096$1POZIn
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$22097$1POZIn)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$22097$1POZIn)))
                                                                             g$ls/false$22096$1POZIn)
                                                                           (g$syntax-violation$20732$1POZIn
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$22095$1POZIn))))
                                                                      (g$syntax-dispatch$20613$1POZIn
                                                                        g$t$22095$1POZIn
                                                                        'any))))
                                                                  g$t$22091$1POZIn))))
                                                            (g$syntax-dispatch$20613$1POZIn
                                                              g$t$22091$1POZIn
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$22087$1POZIn))))
                                                  (g$syntax-dispatch$20613$1POZIn
                                                    g$t$22087$1POZIn
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$22086$1POZIn)))
                                          g$ls$22085$1POZIn))))))
                         ((case-lambda
                            ((g$uid-code$22061$1POZIn
                               g$sealed?$22062$1POZIn
                               g$opaque?$22063$1POZIn
                               g$fields$22064$1POZIn)
                             (g$bless$20576$1POZIn
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$22057$1POZIn)
                                 g$parent-rtd-code$22059$1POZIn
                                 g$uid-code$22061$1POZIn
                                 g$sealed?$22062$1POZIn
                                 g$opaque?$22063$1POZIn
                                 g$fields$22064$1POZIn))))
                          ((case-lambda
                             ((g$t$22065$1POZIn)
                              ((case-lambda
                                 ((g$ls/false$22066$1POZIn)
                                  (if g$ls/false$22066$1POZIn
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$22066$1POZIn)
                                    ((case-lambda
                                       ((g$t$22067$1POZIn)
                                        ((case-lambda
                                           ((g$ls/false$22068$1POZIn)
                                            (if g$ls/false$22068$1POZIn
                                              (apply
                                                (case-lambda
                                                  ((g$uid$22069$1POZIn)
                                                   (list
                                                     'quote
                                                     g$uid$22069$1POZIn)))
                                                g$ls/false$22068$1POZIn)
                                              ((case-lambda
                                                 ((g$t$22070$1POZIn)
                                                  ((case-lambda
                                                     ((g$ls/false$22071$1POZIn)
                                                      (if g$ls/false$22071$1POZIn
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$22071$1POZIn)
                                                        (g$syntax-violation$20732$1POZIn
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$22070$1POZIn))))
                                                   (g$syntax-dispatch$20613$1POZIn
                                                     g$t$22070$1POZIn
                                                     '_))))
                                               g$t$22067$1POZIn))))
                                         (g$syntax-dispatch$20613$1POZIn
                                           g$t$22067$1POZIn
                                           '(_ any)))))
                                     g$t$22065$1POZIn))))
                               (g$syntax-dispatch$20613$1POZIn
                                 g$t$22065$1POZIn
                                 '(_)))))
                           (g$get-clause$21888$1POZIn
                             'nongenerative
                             g$clause*$22058$1POZIn))
                          ((case-lambda
                             ((g$t$22072$1POZIn)
                              ((case-lambda
                                 ((g$ls/false$22073$1POZIn)
                                  (if g$ls/false$22073$1POZIn
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$22073$1POZIn)
                                    ((case-lambda
                                       ((g$t$22074$1POZIn)
                                        ((case-lambda
                                           ((g$ls/false$22075$1POZIn)
                                            (if g$ls/false$22075$1POZIn
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$22075$1POZIn)
                                              (g$syntax-violation$20732$1POZIn
                                                '#f
                                                '"invalid syntax"
                                                g$t$22074$1POZIn))))
                                         (g$syntax-dispatch$20613$1POZIn
                                           g$t$22074$1POZIn
                                           '_))))
                                     g$t$22072$1POZIn))))
                               (g$syntax-dispatch$20613$1POZIn
                                 g$t$22072$1POZIn
                                 '(_ #(atom #t))))))
                           (g$get-clause$21888$1POZIn
                             'sealed
                             g$clause*$22058$1POZIn))
                          ((case-lambda
                             ((g$t$22076$1POZIn)
                              ((case-lambda
                                 ((g$ls/false$22077$1POZIn)
                                  (if g$ls/false$22077$1POZIn
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$22077$1POZIn)
                                    ((case-lambda
                                       ((g$t$22078$1POZIn)
                                        ((case-lambda
                                           ((g$ls/false$22079$1POZIn)
                                            (if g$ls/false$22079$1POZIn
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$22079$1POZIn)
                                              (g$syntax-violation$20732$1POZIn
                                                '#f
                                                '"invalid syntax"
                                                g$t$22078$1POZIn))))
                                         (g$syntax-dispatch$20613$1POZIn
                                           g$t$22078$1POZIn
                                           '_))))
                                     g$t$22076$1POZIn))))
                               (g$syntax-dispatch$20613$1POZIn
                                 g$t$22076$1POZIn
                                 '(_ #(atom #t))))))
                           (g$get-clause$21888$1POZIn
                             'opaque
                             g$clause*$22058$1POZIn))
                          ((case-lambda
                             ((g$t$22080$1POZIn)
                              ((case-lambda
                                 ((g$ls/false$22081$1POZIn)
                                  (if g$ls/false$22081$1POZIn
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$22082$1POZIn)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$22060$1POZIn
                                             g$field-spec*$22082$1POZIn))))
                                      g$ls/false$22081$1POZIn)
                                    ((case-lambda
                                       ((g$t$22083$1POZIn)
                                        ((case-lambda
                                           ((g$ls/false$22084$1POZIn)
                                            (if g$ls/false$22084$1POZIn
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$22084$1POZIn)
                                              (g$syntax-violation$20732$1POZIn
                                                '#f
                                                '"invalid syntax"
                                                g$t$22083$1POZIn))))
                                         (g$syntax-dispatch$20613$1POZIn
                                           g$t$22083$1POZIn
                                           '_))))
                                     g$t$22080$1POZIn))))
                               (g$syntax-dispatch$20613$1POZIn
                                 g$t$22080$1POZIn
                                 '(_ . each-any)))))
                           (g$get-clause$21888$1POZIn
                             'fields
                             g$clause*$22058$1POZIn)))))))
                  (g$parent-rtd-code$21890$1POZIn
                    (case-lambda
                      ((g$clause*$22045$1POZIn)
                       ((case-lambda
                          ((g$t$22046$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22047$1POZIn)
                               (if g$ls/false$22047$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$name$22048$1POZIn)
                                      (list
                                        'record-type-descriptor
                                        g$name$22048$1POZIn)))
                                   g$ls/false$22047$1POZIn)
                                 ((case-lambda
                                    ((g$t$22049$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22050$1POZIn)
                                         (if g$ls/false$22050$1POZIn
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$22051$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$22052$1POZIn)
                                                        (if g$ls/false$22052$1POZIn
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$22053$1POZIn
                                                                 g$rcd$22054$1POZIn)
                                                               g$rtd$22053$1POZIn))
                                                            g$ls/false$22052$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$22055$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$22056$1POZIn)
                                                                  (if g$ls/false$22056$1POZIn
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$22056$1POZIn)
                                                                    (g$syntax-violation$20732$1POZIn
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22055$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$22055$1POZIn
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$22051$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$22051$1POZIn
                                                       '(_ any any)))))
                                                 (g$get-clause$21888$1POZIn
                                                   'parent-rtd
                                                   g$clause*$22045$1POZIn))))
                                             g$ls/false$22050$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22049$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22049$1POZIn
                                        '#(atom #f)))))
                                  g$t$22046$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22046$1POZIn
                              '(_ any)))))
                        (g$get-clause$21888$1POZIn
                          'parent
                          g$clause*$22045$1POZIn)))))
                  (g$parent-rcd-code$21891$1POZIn
                    (case-lambda
                      ((g$clause*$22033$1POZIn)
                       ((case-lambda
                          ((g$t$22034$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22035$1POZIn)
                               (if g$ls/false$22035$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$name$22036$1POZIn)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$22036$1POZIn)))
                                   g$ls/false$22035$1POZIn)
                                 ((case-lambda
                                    ((g$t$22037$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22038$1POZIn)
                                         (if g$ls/false$22038$1POZIn
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$22039$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$22040$1POZIn)
                                                        (if g$ls/false$22040$1POZIn
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$22041$1POZIn
                                                                 g$rcd$22042$1POZIn)
                                                               g$rcd$22042$1POZIn))
                                                            g$ls/false$22040$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$22043$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$22044$1POZIn)
                                                                  (if g$ls/false$22044$1POZIn
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$22044$1POZIn)
                                                                    (g$syntax-violation$20732$1POZIn
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22043$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$22043$1POZIn
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$22039$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$22039$1POZIn
                                                       '(_ any any)))))
                                                 (g$get-clause$21888$1POZIn
                                                   'parent-rtd
                                                   g$clause*$22033$1POZIn))))
                                             g$ls/false$22038$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22037$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22037$1POZIn
                                        '#(atom #f)))))
                                  g$t$22034$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22034$1POZIn
                              '(_ any)))))
                        (g$get-clause$21888$1POZIn
                          'parent
                          g$clause*$22033$1POZIn)))))
                  (g$foo-rcd-code$21892$1POZIn
                    (case-lambda
                      ((g$clause*$22029$1POZIn
                         g$foo-rtd$22030$1POZIn
                         g$protocol$22031$1POZIn
                         g$parent-rcd-code$22032$1POZIn)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$22030$1POZIn
                         g$parent-rcd-code$22032$1POZIn
                         g$protocol$22031$1POZIn))))
                  (g$get-protocol-code$21893$1POZIn
                    (case-lambda
                      ((g$clause*$22023$1POZIn)
                       ((case-lambda
                          ((g$t$22024$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22025$1POZIn)
                               (if g$ls/false$22025$1POZIn
                                 (apply
                                   (case-lambda
                                     ((g$expr$22026$1POZIn)
                                      g$expr$22026$1POZIn))
                                   g$ls/false$22025$1POZIn)
                                 ((case-lambda
                                    ((g$t$22027$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22028$1POZIn)
                                         (if g$ls/false$22028$1POZIn
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$22028$1POZIn)
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$t$22027$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22027$1POZIn
                                        '_))))
                                  g$t$22024$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22024$1POZIn
                              '(_ any)))))
                        (g$get-clause$21888$1POZIn
                          'protocol
                          g$clause*$22023$1POZIn)))))
                  (g$get-fields$21894$1POZIn
                    (case-lambda
                      ((g$clause*$22014$1POZIn)
                       ((case-lambda
                          ((g$t$22015$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22016$1POZIn)
                               (if g$ls/false$22016$1POZIn
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$22016$1POZIn)
                                 ((case-lambda
                                    ((g$t$22017$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22018$1POZIn)
                                         (if g$ls/false$22018$1POZIn
                                           (apply
                                             (case-lambda
                                               ((g$f*$22019$1POZIn)
                                                g$f*$22019$1POZIn))
                                             g$ls/false$22018$1POZIn)
                                           ((case-lambda
                                              ((g$t$22020$1POZIn)
                                               ((case-lambda
                                                  ((g$ls/false$22021$1POZIn)
                                                   (if g$ls/false$22021$1POZIn
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$22022$1POZIn)
                                                          (g$get-fields$21894$1POZIn
                                                            g$rest$22022$1POZIn)))
                                                       g$ls/false$22021$1POZIn)
                                                     (g$syntax-violation$20732$1POZIn
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22020$1POZIn))))
                                                (g$syntax-dispatch$20613$1POZIn
                                                  g$t$22020$1POZIn
                                                  '(_ . any)))))
                                            g$t$22017$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22017$1POZIn
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$22015$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22015$1POZIn
                              '()))))
                        g$clause*$22014$1POZIn))))
                  (g$get-mutator-indices$21895$1POZIn
                    (case-lambda
                      ((g$fields$22002$1POZIn)
                       ((letrec ((g$f$22003$1POZIn
                                   (case-lambda
                                     ((g$fields$22004$1POZIn
                                        g$i$22005$1POZIn)
                                      ((case-lambda
                                         ((g$t$22006$1POZIn)
                                          ((case-lambda
                                             ((g$ls/false$22007$1POZIn)
                                              (if g$ls/false$22007$1POZIn
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$22007$1POZIn)
                                                ((case-lambda
                                                   ((g$t$22008$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$22009$1POZIn)
                                                        (if g$ls/false$22009$1POZIn
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$22010$1POZIn)
                                                               (cons
                                                                 g$i$22005$1POZIn
                                                                 (g$f$22003$1POZIn
                                                                   g$rest$22010$1POZIn
                                                                   (+ g$i$22005$1POZIn
                                                                      '1)))))
                                                            g$ls/false$22009$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$22011$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$22012$1POZIn)
                                                                  (if g$ls/false$22012$1POZIn
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$22013$1POZIn)
                                                                         (g$f$22003$1POZIn
                                                                           g$rest$22013$1POZIn
                                                                           (+ g$i$22005$1POZIn
                                                                              '1))))
                                                                      g$ls/false$22012$1POZIn)
                                                                    (g$syntax-violation$20732$1POZIn
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$22011$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$22011$1POZIn
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$22008$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$22008$1POZIn
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$22006$1POZIn))))
                                           (g$syntax-dispatch$20613$1POZIn
                                             g$t$22006$1POZIn
                                             '()))))
                                       g$fields$22004$1POZIn)))))
                          g$f$22003$1POZIn)
                        g$fields$22002$1POZIn
                        '0))))
                  (g$get-mutators$21896$1POZIn
                    (case-lambda
                      ((g$foo$21981$1POZIn g$fields$21982$1POZIn)
                       (letrec* ((g$gen-name$21983$1POZIn
                                   (case-lambda
                                     ((g$x$22001$1POZIn)
                                      (g$datum->syntax$20734$1POZIn
                                        g$foo$21981$1POZIn
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$20735$1POZIn
                                                g$foo$21981$1POZIn))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$20735$1POZIn
                                                g$x$22001$1POZIn))
                                            '"-set!")))))))
                         ((letrec ((g$f$21984$1POZIn
                                     (case-lambda
                                       ((g$fields$21985$1POZIn)
                                        ((case-lambda
                                           ((g$t$21986$1POZIn)
                                            ((case-lambda
                                               ((g$ls/false$21987$1POZIn)
                                                (if g$ls/false$21987$1POZIn
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$21987$1POZIn)
                                                  ((case-lambda
                                                     ((g$t$21988$1POZIn)
                                                      ((case-lambda
                                                         ((g$ls/false$21989$1POZIn)
                                                          (if g$ls/false$21989$1POZIn
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21990$1POZIn
                                                                   g$accessor$21991$1POZIn
                                                                   g$mutator$21992$1POZIn
                                                                   g$rest$21993$1POZIn)
                                                                 (cons
                                                                   g$mutator$21992$1POZIn
                                                                   (g$f$21984$1POZIn
                                                                     g$rest$21993$1POZIn))))
                                                              g$ls/false$21989$1POZIn)
                                                            ((case-lambda
                                                               ((g$t$21994$1POZIn)
                                                                ((case-lambda
                                                                   ((g$ls/false$21995$1POZIn)
                                                                    (if g$ls/false$21995$1POZIn
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21996$1POZIn
                                                                             g$rest$21997$1POZIn)
                                                                           (cons
                                                                             (g$gen-name$21983$1POZIn
                                                                               g$name$21996$1POZIn)
                                                                             (g$f$21984$1POZIn
                                                                               g$rest$21997$1POZIn))))
                                                                        g$ls/false$21995$1POZIn)
                                                                      ((case-lambda
                                                                         ((g$t$21998$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21999$1POZIn)
                                                                              (if g$ls/false$21999$1POZIn
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$22000$1POZIn)
                                                                                     (g$f$21984$1POZIn
                                                                                       g$rest$22000$1POZIn)))
                                                                                  g$ls/false$21999$1POZIn)
                                                                                (g$syntax-violation$20732$1POZIn
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$21998$1POZIn))))
                                                                           (g$syntax-dispatch$20613$1POZIn
                                                                             g$t$21998$1POZIn
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$21994$1POZIn))))
                                                                 (g$syntax-dispatch$20613$1POZIn
                                                                   g$t$21994$1POZIn
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$21988$1POZIn))))
                                                       (g$syntax-dispatch$20613$1POZIn
                                                         g$t$21988$1POZIn
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$21986$1POZIn))))
                                             (g$syntax-dispatch$20613$1POZIn
                                               g$t$21986$1POZIn
                                               '()))))
                                         g$fields$21985$1POZIn)))))
                            g$f$21984$1POZIn)
                          g$fields$21982$1POZIn)))))
                  (g$get-accessors$21897$1POZIn
                    (case-lambda
                      ((g$foo$21947$1POZIn g$fields$21948$1POZIn)
                       (letrec* ((g$gen-name$21949$1POZIn
                                   (case-lambda
                                     ((g$x$21980$1POZIn)
                                      (g$datum->syntax$20734$1POZIn
                                        g$foo$21947$1POZIn
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$20735$1POZIn
                                                g$foo$21947$1POZIn))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$20735$1POZIn
                                                g$x$21980$1POZIn)))))))))
                         (g$map$11833$1POZIn
                           (case-lambda
                             ((g$field$21950$1POZIn)
                              ((case-lambda
                                 ((g$t$21951$1POZIn)
                                  ((case-lambda
                                     ((g$ls/false$21952$1POZIn)
                                      (if (if g$ls/false$21952$1POZIn
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$21953$1POZIn
                                                     g$accessor$21954$1POZIn
                                                     g$mutator$21955$1POZIn)
                                                   (g$id?$20115$1POZIn
                                                     g$accessor$21954$1POZIn)))
                                                g$ls/false$21952$1POZIn))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$21956$1POZIn
                                               g$accessor$21957$1POZIn
                                               g$mutator$21958$1POZIn)
                                             g$accessor$21957$1POZIn))
                                          g$ls/false$21952$1POZIn)
                                        ((case-lambda
                                           ((g$t$21959$1POZIn)
                                            ((case-lambda
                                               ((g$ls/false$21960$1POZIn)
                                                (if (if g$ls/false$21960$1POZIn
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$21961$1POZIn
                                                               g$accessor$21962$1POZIn)
                                                             (g$id?$20115$1POZIn
                                                               g$accessor$21962$1POZIn)))
                                                          g$ls/false$21960$1POZIn))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$21963$1POZIn
                                                         g$accessor$21964$1POZIn)
                                                       g$accessor$21964$1POZIn))
                                                    g$ls/false$21960$1POZIn)
                                                  ((case-lambda
                                                     ((g$t$21965$1POZIn)
                                                      ((case-lambda
                                                         ((g$ls/false$21966$1POZIn)
                                                          (if (if g$ls/false$21966$1POZIn
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$21967$1POZIn)
                                                                       (g$id?$20115$1POZIn
                                                                         g$name$21967$1POZIn)))
                                                                    g$ls/false$21966$1POZIn))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$21968$1POZIn)
                                                                 (g$gen-name$21949$1POZIn
                                                                   g$name$21968$1POZIn)))
                                                              g$ls/false$21966$1POZIn)
                                                            ((case-lambda
                                                               ((g$t$21969$1POZIn)
                                                                ((case-lambda
                                                                   ((g$ls/false$21970$1POZIn)
                                                                    (if (if g$ls/false$21970$1POZIn
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$21971$1POZIn)
                                                                                 (g$id?$20115$1POZIn
                                                                                   g$name$21971$1POZIn)))
                                                                              g$ls/false$21970$1POZIn))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$21972$1POZIn)
                                                                           (g$gen-name$21949$1POZIn
                                                                             g$name$21972$1POZIn)))
                                                                        g$ls/false$21970$1POZIn)
                                                                      ((case-lambda
                                                                         ((g$t$21973$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$ls/false$21974$1POZIn)
                                                                              (if (if g$ls/false$21974$1POZIn
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$21975$1POZIn)
                                                                                           (g$id?$20115$1POZIn
                                                                                             g$name$21975$1POZIn)))
                                                                                        g$ls/false$21974$1POZIn))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$21976$1POZIn)
                                                                                     (g$gen-name$21949$1POZIn
                                                                                       g$name$21976$1POZIn)))
                                                                                  g$ls/false$21974$1POZIn)
                                                                                ((case-lambda
                                                                                   ((g$t$21977$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$21978$1POZIn)
                                                                                        (if g$ls/false$21978$1POZIn
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$21979$1POZIn)
                                                                                               (g$syntax-violation$20732$1POZIn
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$21950$1POZIn)))
                                                                                            g$ls/false$21978$1POZIn)
                                                                                          (g$syntax-violation$20732$1POZIn
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$21977$1POZIn))))
                                                                                     (g$syntax-dispatch$20613$1POZIn
                                                                                       g$t$21977$1POZIn
                                                                                       'any))))
                                                                                 g$t$21973$1POZIn))))
                                                                           (g$syntax-dispatch$20613$1POZIn
                                                                             g$t$21973$1POZIn
                                                                             'any))))
                                                                       g$t$21969$1POZIn))))
                                                                 (g$syntax-dispatch$20613$1POZIn
                                                                   g$t$21969$1POZIn
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$21965$1POZIn))))
                                                       (g$syntax-dispatch$20613$1POZIn
                                                         g$t$21965$1POZIn
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$21959$1POZIn))))
                                             (g$syntax-dispatch$20613$1POZIn
                                               g$t$21959$1POZIn
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$21951$1POZIn))))
                                   (g$syntax-dispatch$20613$1POZIn
                                     g$t$21951$1POZIn
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$21950$1POZIn)))
                           g$fields$21948$1POZIn)))))
                  (g$enumerate$21898$1POZIn
                    (case-lambda
                      ((g$ls$21943$1POZIn)
                       ((letrec ((g$f$21944$1POZIn
                                   (case-lambda
                                     ((g$ls$21945$1POZIn
                                        g$i$21946$1POZIn)
                                      (if (null? g$ls$21945$1POZIn)
                                        '()
                                        (begin
                                          '#f
                                          (cons
                                            g$i$21946$1POZIn
                                            (g$f$21944$1POZIn
                                              (cdr g$ls$21945$1POZIn)
                                              (+ g$i$21946$1POZIn
                                                 '1)))))))))
                          g$f$21944$1POZIn)
                        g$ls$21943$1POZIn
                        '0))))
                  (g$do-define-record$21899$1POZIn
                    (case-lambda
                      ((g$namespec$21923$1POZIn g$clause*$21924$1POZIn)
                       ((case-lambda
                          ((g$foo$21925$1POZIn)
                           ((case-lambda
                              ((g$foo-rtd$21926$1POZIn)
                               ((case-lambda
                                  ((g$foo-rcd$21927$1POZIn)
                                   ((case-lambda
                                      ((g$protocol$21928$1POZIn)
                                       ((case-lambda
                                          ((g$make-foo$21929$1POZIn)
                                           ((case-lambda
                                              ((g$fields$21930$1POZIn)
                                               ((case-lambda
                                                  ((g$idx*$21931$1POZIn)
                                                   ((case-lambda
                                                      ((g$foo-x*$21932$1POZIn)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$21933$1POZIn)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$21934$1POZIn)
                                                               ((case-lambda
                                                                  ((g$foo?$21935$1POZIn)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$21936$1POZIn)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$21937$1POZIn)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$21938$1POZIn)
                                                                               (g$bless$20576$1POZIn
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$21926$1POZIn
                                                                                       g$foo-rtd-code$21936$1POZIn)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$21928$1POZIn
                                                                                         g$protocol-code$21938$1POZIn)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$21927$1POZIn
                                                                                           g$foo-rcd-code$21937$1POZIn)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$21925$1POZIn
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$21926$1POZIn)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$21927$1POZIn)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$21935$1POZIn
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$21926$1POZIn))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$21929$1POZIn
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$21927$1POZIn))
                                                                                               (append
                                                                                                 (g$map$11833$1POZIn
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$21939$1POZIn
                                                                                                        g$idx$21940$1POZIn)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$21939$1POZIn
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$21926$1POZIn
                                                                                                          g$idx$21940$1POZIn))))
                                                                                                   g$foo-x*$21932$1POZIn
                                                                                                   g$idx*$21931$1POZIn)
                                                                                                 (g$map$11833$1POZIn
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$21941$1POZIn
                                                                                                        g$idx$21942$1POZIn)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$21941$1POZIn
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$21926$1POZIn
                                                                                                          g$idx$21942$1POZIn))))
                                                                                                   g$set-foo-x!*$21933$1POZIn
                                                                                                   g$set-foo-idx*$21934$1POZIn))))))))))))
                                                                            (g$get-protocol-code$21893$1POZIn
                                                                              g$clause*$21924$1POZIn))))
                                                                        (g$foo-rcd-code$21892$1POZIn
                                                                          g$clause*$21924$1POZIn
                                                                          g$foo-rtd$21926$1POZIn
                                                                          g$protocol$21928$1POZIn
                                                                          (g$parent-rcd-code$21891$1POZIn
                                                                            g$clause*$21924$1POZIn)))))
                                                                    (g$foo-rtd-code$21889$1POZIn
                                                                      g$foo$21925$1POZIn
                                                                      g$clause*$21924$1POZIn
                                                                      (g$parent-rtd-code$21890$1POZIn
                                                                        g$clause*$21924$1POZIn)))))
                                                                (g$get-record-predicate-name$21887$1POZIn
                                                                  g$namespec$21923$1POZIn))))
                                                            (g$get-mutator-indices$21895$1POZIn
                                                              g$fields$21930$1POZIn))))
                                                        (g$get-mutators$21896$1POZIn
                                                          g$foo$21925$1POZIn
                                                          g$fields$21930$1POZIn))))
                                                    (g$get-accessors$21897$1POZIn
                                                      g$foo$21925$1POZIn
                                                      g$fields$21930$1POZIn))))
                                                (g$enumerate$21898$1POZIn
                                                  g$fields$21930$1POZIn))))
                                            (g$get-fields$21894$1POZIn
                                              g$clause*$21924$1POZIn))))
                                        (g$get-record-constructor-name$21886$1POZIn
                                          g$namespec$21923$1POZIn))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$21885$1POZIn
                          g$namespec$21923$1POZIn)))))
                  (g$verify-clauses$21900$1POZIn
                    (case-lambda
                      ((g$x$21905$1POZIn g$cls*$21906$1POZIn)
                       (letrec* ((g$valid-kwds$21907$1POZIn
                                   (g$map$11833$1POZIn
                                     g$bless$20576$1POZIn
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$21908$1POZIn
                                   (case-lambda
                                     ((g$x$21920$1POZIn
                                        g$ls$21921$1POZIn)
                                      (if (pair? g$ls$21921$1POZIn)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$21922$1POZIn)
                                              (if g$t$21922$1POZIn
                                                g$t$21922$1POZIn
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$21908$1POZIn
                                                    g$x$21920$1POZIn
                                                    (cdr g$ls$21921$1POZIn))))))
                                           (g$free-id=?$20119$1POZIn
                                             g$x$21920$1POZIn
                                             (car g$ls$21921$1POZIn))))
                                        '#f)))))
                         ((letrec ((g$f$21909$1POZIn
                                     (case-lambda
                                       ((g$cls*$21910$1POZIn
                                          g$seen*$21911$1POZIn)
                                        (if (not (null?
                                                   g$cls*$21910$1POZIn))
                                          ((case-lambda
                                             ((g$t$21912$1POZIn)
                                              ((case-lambda
                                                 ((g$ls/false$21913$1POZIn)
                                                  (if g$ls/false$21913$1POZIn
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$21914$1POZIn
                                                           g$rest$21915$1POZIn)
                                                         (if ((case-lambda
                                                                ((g$t$21916$1POZIn)
                                                                 (if g$t$21916$1POZIn
                                                                   g$t$21916$1POZIn
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$21908$1POZIn
                                                                            g$kwd$21914$1POZIn
                                                                            g$valid-kwds$21907$1POZIn))))))
                                                              (not (g$id?$20115$1POZIn
                                                                     g$kwd$21914$1POZIn)))
                                                           (g$syntax-violation$20732$1POZIn
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$21914$1POZIn)
                                                           (if (g$bound-id-member?$20122$1POZIn
                                                                 g$kwd$21914$1POZIn
                                                                 g$seen*$21911$1POZIn)
                                                             (g$syntax-violation$20732$1POZIn
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$21905$1POZIn
                                                               g$kwd$21914$1POZIn)
                                                             (begin
                                                               '#f
                                                               (g$f$21909$1POZIn
                                                                 (cdr g$cls*$21910$1POZIn)
                                                                 (cons
                                                                   g$kwd$21914$1POZIn
                                                                   g$seen*$21911$1POZIn)))))))
                                                      g$ls/false$21913$1POZIn)
                                                    ((case-lambda
                                                       ((g$t$21917$1POZIn)
                                                        ((case-lambda
                                                           ((g$ls/false$21918$1POZIn)
                                                            (if g$ls/false$21918$1POZIn
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$21919$1POZIn)
                                                                   (g$syntax-violation$20732$1POZIn
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$21919$1POZIn)))
                                                                g$ls/false$21918$1POZIn)
                                                              (g$syntax-violation$20732$1POZIn
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$21917$1POZIn))))
                                                         (g$syntax-dispatch$20613$1POZIn
                                                           g$t$21917$1POZIn
                                                           'any))))
                                                     g$t$21912$1POZIn))))
                                               (g$syntax-dispatch$20613$1POZIn
                                                 g$t$21912$1POZIn
                                                 '(any . any)))))
                                           (car g$cls*$21910$1POZIn))
                                          (void))))))
                            g$f$21909$1POZIn)
                          g$cls*$21906$1POZIn
                          '()))))))
          ((case-lambda
             ((g$t$21901$1POZIn)
              ((case-lambda
                 ((g$ls/false$21902$1POZIn)
                  (if g$ls/false$21902$1POZIn
                    (apply
                      (case-lambda
                        ((g$namespec$21903$1POZIn
                           g$clause*$21904$1POZIn)
                         (begin
                           (g$verify-clauses$21900$1POZIn
                             g$x$21883$1POZIn
                             g$clause*$21904$1POZIn)
                           (g$do-define-record$21899$1POZIn
                             g$namespec$21903$1POZIn
                             g$clause*$21904$1POZIn))))
                      g$ls/false$21902$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$21901$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$21901$1POZIn
                 '(_ any . each-any)))))
           g$x$21883$1POZIn)))))
   (g$define-condition-type-macro$20608$1POZIn
     g$define-condition-type-macro$24203$1POZIn
     (case-lambda
       ((g$x$22139$1POZIn)
        (letrec* ((g$mkname$22140$1POZIn
                    (case-lambda
                      ((g$name$22163$1POZIn g$suffix$22164$1POZIn)
                       (g$datum->syntax$20734$1POZIn
                         g$name$22163$1POZIn
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$20735$1POZIn
                                 g$name$22163$1POZIn))
                             g$suffix$22164$1POZIn)))))))
          ((case-lambda
             ((g$t$22141$1POZIn)
              ((case-lambda
                 ((g$ls/false$22142$1POZIn)
                  (if (if g$ls/false$22142$1POZIn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$22143$1POZIn
                                 g$name$22144$1POZIn
                                 g$super$22145$1POZIn
                                 g$constructor$22146$1POZIn
                                 g$predicate$22147$1POZIn
                                 g$field*$22148$1POZIn
                                 g$accessor*$22149$1POZIn)
                               (if (g$id?$20115$1POZIn
                                     g$name$22144$1POZIn)
                                 (if (g$id?$20115$1POZIn
                                       g$super$22145$1POZIn)
                                   (if (g$id?$20115$1POZIn
                                         g$constructor$22146$1POZIn)
                                     (if (g$id?$20115$1POZIn
                                           g$predicate$22147$1POZIn)
                                       (if (g$for-all$11831$1POZIn
                                             g$id?$20115$1POZIn
                                             g$field*$22148$1POZIn)
                                         (begin
                                           '#f
                                           (g$for-all$11831$1POZIn
                                             g$id?$20115$1POZIn
                                             g$accessor*$22149$1POZIn))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$22142$1POZIn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$22150$1POZIn
                           g$name$22151$1POZIn
                           g$super$22152$1POZIn
                           g$constructor$22153$1POZIn
                           g$predicate$22154$1POZIn
                           g$field*$22155$1POZIn
                           g$accessor*$22156$1POZIn)
                         ((case-lambda
                            ((g$aux-accessor*$22157$1POZIn)
                             (g$bless$20576$1POZIn
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$22151$1POZIn
                                         g$constructor$22153$1POZIn
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$22152$1POZIn)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$11833$1POZIn
                                               (case-lambda
                                                 ((g$field$22158$1POZIn
                                                    g$aux$22159$1POZIn)
                                                  (list
                                                    'immutable
                                                    g$field$22158$1POZIn
                                                    g$aux$22159$1POZIn)))
                                               g$field*$22155$1POZIn
                                               g$aux-accessor*$22157$1POZIn))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$22154$1POZIn
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$22151$1POZIn)))
                                     (g$map$11833$1POZIn
                                       (case-lambda
                                         ((g$accessor$22160$1POZIn
                                            g$aux$22161$1POZIn)
                                          (list
                                            'define
                                            g$accessor$22160$1POZIn
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$22151$1POZIn)
                                              g$aux$22161$1POZIn))))
                                       g$accessor*$22156$1POZIn
                                       g$aux-accessor*$22157$1POZIn)))))))
                          (g$map$11833$1POZIn
                            (case-lambda ((g$x$22162$1POZIn) (gensym)))
                            g$accessor*$22156$1POZIn))))
                      g$ls/false$22142$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$22141$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$22141$1POZIn
                 '(any any any any any . #(each (any any)))))))
           g$x$22139$1POZIn)))))
   (g$incorrect-usage-macro$20609$1POZIn
     g$incorrect-usage-macro$24204$1POZIn
     (case-lambda
       ((g$e$22165$1POZIn)
        (g$syntax-violation$20732$1POZIn
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$22165$1POZIn))))
   (g$parameterize-macro$20610$1POZIn
     g$parameterize-macro$24205$1POZIn
     (case-lambda
       ((g$e$22166$1POZIn)
        ((case-lambda
           ((g$t$22167$1POZIn)
            ((case-lambda
               ((g$ls/false$22168$1POZIn)
                (if g$ls/false$22168$1POZIn
                  (apply
                    (case-lambda
                      ((g$b$22169$1POZIn g$b*$22170$1POZIn)
                       (g$bless$20576$1POZIn
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$22169$1POZIn
                               g$b*$22170$1POZIn))))))
                    g$ls/false$22168$1POZIn)
                  ((case-lambda
                     ((g$t$22171$1POZIn)
                      ((case-lambda
                         ((g$ls/false$22172$1POZIn)
                          (if g$ls/false$22172$1POZIn
                            (apply
                              (case-lambda
                                ((g$olhs*$22173$1POZIn
                                   g$orhs*$22174$1POZIn
                                   g$b$22175$1POZIn
                                   g$b*$22176$1POZIn)
                                 ((case-lambda
                                    ((g$lhs*$22177$1POZIn
                                       g$rhs*$22178$1POZIn)
                                     (g$bless$20576$1POZIn
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$22177$1POZIn
                                             g$rhs*$22178$1POZIn)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$11833$1POZIn
                                                       (case-lambda
                                                         ((g$lhs$22179$1POZIn
                                                            g$rhs$22180$1POZIn)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$22179$1POZIn)))
                                                            (list
                                                              g$lhs$22179$1POZIn
                                                              g$rhs$22180$1POZIn)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$22180$1POZIn
                                                                '(t))))))
                                                       g$lhs*$22177$1POZIn
                                                       g$rhs*$22178$1POZIn)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$22175$1POZIn
                                                         g$b*$22176$1POZIn)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$22173$1POZIn
                                           g$orhs*$22174$1POZIn)))))
                                  (g$generate-temporaries$20722$1POZIn
                                    g$olhs*$22173$1POZIn)
                                  (g$generate-temporaries$20722$1POZIn
                                    g$orhs*$22174$1POZIn))))
                              g$ls/false$22172$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$22171$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$22171$1POZIn
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$22167$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22167$1POZIn
               '(_ () any . each-any)))))
         g$e$22166$1POZIn))))
   (g$foreign-call-transformer$20611$1POZIn
     g$foreign-call-transformer$24206$1POZIn
     (case-lambda
       ((g$e$22181$1POZIn g$r$22182$1POZIn g$mr$22183$1POZIn)
        ((case-lambda
           ((g$t$22184$1POZIn)
            ((case-lambda
               ((g$ls/false$22185$1POZIn)
                (if g$ls/false$22185$1POZIn
                  (apply
                    (case-lambda
                      ((g$name$22186$1POZIn g$arg*$22187$1POZIn)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$20631$1POZIn
                             g$name$22186$1POZIn
                             g$r$22182$1POZIn
                             g$mr$22183$1POZIn)
                           (g$chi-expr*$20629$1POZIn
                             g$arg*$22187$1POZIn
                             g$r$22182$1POZIn
                             g$mr$22183$1POZIn)))))
                    g$ls/false$22185$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$22184$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22184$1POZIn
               '(_ any . each-any)))))
         g$e$22181$1POZIn))))
   (g$convert-pattern$20612$1POZIn
     g$convert-pattern$24207$1POZIn
     (case-lambda
       ((g$pattern$22188$1POZIn g$keys$22189$1POZIn)
        (letrec* ((g$cvt*$22190$1POZIn
                    (case-lambda
                      ((g$p*$22270$1POZIn
                         g$n$22271$1POZIn
                         g$ids$22272$1POZIn)
                       (if (null? g$p*$22270$1POZIn)
                         (values '() g$ids$22272$1POZIn)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$22190$1POZIn
                                (cdr g$p*$22270$1POZIn)
                                g$n$22271$1POZIn
                                g$ids$22272$1POZIn)))
                           (case-lambda
                             ((g$y$22275$1POZIn g$ids$22276$1POZIn)
                              ((case-lambda
                                 ((g$ids$22277$1POZIn g$y$22278$1POZIn)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$22191$1POZIn
                                         (car g$p*$22270$1POZIn)
                                         g$n$22271$1POZIn
                                         g$ids$22277$1POZIn)))
                                    (case-lambda
                                      ((g$x$22281$1POZIn
                                         g$ids$22282$1POZIn)
                                       ((case-lambda
                                          ((g$ids$22283$1POZIn
                                             g$x$22284$1POZIn)
                                           (values
                                             (cons
                                               g$x$22284$1POZIn
                                               g$y$22278$1POZIn)
                                             g$ids$22283$1POZIn)))
                                        g$ids$22282$1POZIn
                                        g$x$22281$1POZIn))))))
                               g$ids$22276$1POZIn
                               g$y$22275$1POZIn))))))))
                  (g$cvt$22191$1POZIn
                    (case-lambda
                      ((g$p$22192$1POZIn
                         g$n$22193$1POZIn
                         g$ids$22194$1POZIn)
                       ((case-lambda
                          ((g$t$22195$1POZIn)
                           ((case-lambda
                              ((g$ls/false$22196$1POZIn)
                               (if (if g$ls/false$22196$1POZIn
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$22197$1POZIn)
                                            (g$id?$20115$1POZIn
                                              g$id$22197$1POZIn)))
                                         g$ls/false$22196$1POZIn))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$22198$1POZIn)
                                      (if (g$bound-id-member?$20122$1POZIn
                                            g$p$22192$1POZIn
                                            g$keys$22189$1POZIn)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$22192$1POZIn)
                                          g$ids$22194$1POZIn)
                                        (if (g$free-id=?$20119$1POZIn
                                              g$p$22192$1POZIn
                                              (g$scheme-stx$20556$1POZIn
                                                '_))
                                          (values '_ g$ids$22194$1POZIn)
                                          (begin
                                            '#f
                                            (values
                                              'any
                                              (cons
                                                (cons
                                                  g$p$22192$1POZIn
                                                  g$n$22193$1POZIn)
                                                g$ids$22194$1POZIn)))))))
                                   g$ls/false$22196$1POZIn)
                                 ((case-lambda
                                    ((g$t$22199$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$22200$1POZIn)
                                         (if (if g$ls/false$22200$1POZIn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$22201$1POZIn
                                                        g$dots$22202$1POZIn)
                                                      (g$ellipsis?$20614$1POZIn
                                                        g$dots$22202$1POZIn)))
                                                   g$ls/false$22200$1POZIn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$22203$1POZIn
                                                  g$dots$22204$1POZIn)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$22191$1POZIn
                                                       g$p$22203$1POZIn
                                                       (+ g$n$22193$1POZIn
                                                          '1)
                                                       g$ids$22194$1POZIn)))
                                                  (case-lambda
                                                    ((g$p$22207$1POZIn
                                                       g$ids$22208$1POZIn)
                                                     ((case-lambda
                                                        ((g$ids$22209$1POZIn
                                                           g$p$22210$1POZIn)
                                                         (values
                                                           (if (eq? g$p$22210$1POZIn
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$22210$1POZIn))
                                                           g$ids$22209$1POZIn)))
                                                      g$ids$22208$1POZIn
                                                      g$p$22207$1POZIn))))))
                                             g$ls/false$22200$1POZIn)
                                           ((case-lambda
                                              ((g$t$22211$1POZIn)
                                               ((case-lambda
                                                  ((g$ls/false$22212$1POZIn)
                                                   (if (if g$ls/false$22212$1POZIn
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$22213$1POZIn
                                                                  g$dots$22214$1POZIn
                                                                  g$ys$22215$1POZIn
                                                                  g$z$22216$1POZIn)
                                                                (g$ellipsis?$20614$1POZIn
                                                                  g$dots$22214$1POZIn)))
                                                             g$ls/false$22212$1POZIn))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$22217$1POZIn
                                                            g$dots$22218$1POZIn
                                                            g$ys$22219$1POZIn
                                                            g$z$22220$1POZIn)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$22191$1POZIn
                                                                 g$z$22220$1POZIn
                                                                 g$n$22193$1POZIn
                                                                 g$ids$22194$1POZIn)))
                                                            (case-lambda
                                                              ((g$z$22223$1POZIn
                                                                 g$ids$22224$1POZIn)
                                                               ((case-lambda
                                                                  ((g$ids$22225$1POZIn
                                                                     g$z$22226$1POZIn)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$22190$1POZIn
                                                                          g$ys$22219$1POZIn
                                                                          g$n$22193$1POZIn
                                                                          g$ids$22225$1POZIn)))
                                                                     (case-lambda
                                                                       ((g$ys$22229$1POZIn
                                                                          g$ids$22230$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$ids$22231$1POZIn
                                                                              g$ys$22232$1POZIn)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$22191$1POZIn
                                                                                   g$x$22217$1POZIn
                                                                                   (+ g$n$22193$1POZIn
                                                                                      '1)
                                                                                   g$ids$22231$1POZIn)))
                                                                              (case-lambda
                                                                                ((g$x$22235$1POZIn
                                                                                   g$ids$22236$1POZIn)
                                                                                 ((case-lambda
                                                                                    ((g$ids$22237$1POZIn
                                                                                       g$x$22238$1POZIn)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$22238$1POZIn
                                                                                         (g$reverse$12682$1POZIn
                                                                                           g$ys$22232$1POZIn)
                                                                                         g$z$22226$1POZIn)
                                                                                       g$ids$22237$1POZIn)))
                                                                                  g$ids$22236$1POZIn
                                                                                  g$x$22235$1POZIn))))))
                                                                         g$ids$22230$1POZIn
                                                                         g$ys$22229$1POZIn))))))
                                                                g$ids$22224$1POZIn
                                                                g$z$22223$1POZIn))))))
                                                       g$ls/false$22212$1POZIn)
                                                     ((case-lambda
                                                        ((g$t$22239$1POZIn)
                                                         ((case-lambda
                                                            ((g$ls/false$22240$1POZIn)
                                                             (if g$ls/false$22240$1POZIn
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$22241$1POZIn
                                                                      g$y$22242$1POZIn)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$22191$1POZIn
                                                                           g$y$22242$1POZIn
                                                                           g$n$22193$1POZIn
                                                                           g$ids$22194$1POZIn)))
                                                                      (case-lambda
                                                                        ((g$y$22245$1POZIn
                                                                           g$ids$22246$1POZIn)
                                                                         ((case-lambda
                                                                            ((g$ids$22247$1POZIn
                                                                               g$y$22248$1POZIn)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$22191$1POZIn
                                                                                    g$x$22241$1POZIn
                                                                                    g$n$22193$1POZIn
                                                                                    g$ids$22247$1POZIn)))
                                                                               (case-lambda
                                                                                 ((g$x$22251$1POZIn
                                                                                    g$ids$22252$1POZIn)
                                                                                  ((case-lambda
                                                                                     ((g$ids$22253$1POZIn
                                                                                        g$x$22254$1POZIn)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$22254$1POZIn
                                                                                          g$y$22248$1POZIn)
                                                                                        g$ids$22253$1POZIn)))
                                                                                   g$ids$22252$1POZIn
                                                                                   g$x$22251$1POZIn))))))
                                                                          g$ids$22246$1POZIn
                                                                          g$y$22245$1POZIn))))))
                                                                 g$ls/false$22240$1POZIn)
                                                               ((case-lambda
                                                                  ((g$t$22255$1POZIn)
                                                                   ((case-lambda
                                                                      ((g$ls/false$22256$1POZIn)
                                                                       (if g$ls/false$22256$1POZIn
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$22194$1POZIn)))
                                                                           g$ls/false$22256$1POZIn)
                                                                         ((case-lambda
                                                                            ((g$t$22257$1POZIn)
                                                                             ((case-lambda
                                                                                ((g$ls/false$22258$1POZIn)
                                                                                 (if (if g$ls/false$22258$1POZIn
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$22259$1POZIn)
                                                                                              (not (g$stx?$20087$1POZIn
                                                                                                     g$p$22259$1POZIn))))
                                                                                           g$ls/false$22258$1POZIn))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$22260$1POZIn)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$22191$1POZIn
                                                                                               g$p$22260$1POZIn
                                                                                               g$n$22193$1POZIn
                                                                                               g$ids$22194$1POZIn)))
                                                                                          (case-lambda
                                                                                            ((g$p$22263$1POZIn
                                                                                               g$ids$22264$1POZIn)
                                                                                             ((case-lambda
                                                                                                ((g$ids$22265$1POZIn
                                                                                                   g$p$22266$1POZIn)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$22266$1POZIn)
                                                                                                   g$ids$22265$1POZIn)))
                                                                                              g$ids$22264$1POZIn
                                                                                              g$p$22263$1POZIn))))))
                                                                                     g$ls/false$22258$1POZIn)
                                                                                   ((case-lambda
                                                                                      ((g$t$22267$1POZIn)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$22268$1POZIn)
                                                                                           (if g$ls/false$22268$1POZIn
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$22269$1POZIn)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$20126$1POZIn
                                                                                                        g$datum$22269$1POZIn))
                                                                                                    g$ids$22194$1POZIn)))
                                                                                               g$ls/false$22268$1POZIn)
                                                                                             (g$syntax-violation$20732$1POZIn
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$22267$1POZIn))))
                                                                                        (g$syntax-dispatch$20613$1POZIn
                                                                                          g$t$22267$1POZIn
                                                                                          'any))))
                                                                                    g$t$22257$1POZIn))))
                                                                              (g$syntax-dispatch$20613$1POZIn
                                                                                g$t$22257$1POZIn
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$22255$1POZIn))))
                                                                    (g$syntax-dispatch$20613$1POZIn
                                                                      g$t$22255$1POZIn
                                                                      '()))))
                                                                g$t$22239$1POZIn))))
                                                          (g$syntax-dispatch$20613$1POZIn
                                                            g$t$22239$1POZIn
                                                            '(any .
                                                                  any)))))
                                                      g$t$22211$1POZIn))))
                                                (g$syntax-dispatch$20613$1POZIn
                                                  g$t$22211$1POZIn
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$22199$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$22199$1POZIn
                                        '(any any)))))
                                  g$t$22195$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$22195$1POZIn
                              'any))))
                        g$p$22192$1POZIn)))))
          (g$cvt$22191$1POZIn g$pattern$22188$1POZIn '0 '())))))
   (g$syntax-dispatch$20613$1POZIn
     g$syntax-dispatch$24208$1POZIn
     (case-lambda
       ((g$e$22285$1POZIn g$p$22286$1POZIn)
        (letrec* ((g$stx^$22287$1POZIn
                    (case-lambda
                      ((g$e$22395$1POZIn
                         g$m*$22396$1POZIn
                         g$s*$22397$1POZIn
                         g$ae*$22398$1POZIn)
                       (if (if (null? g$m*$22396$1POZIn)
                             (if (null? g$s*$22397$1POZIn)
                               (begin '#f (null? g$ae*$22398$1POZIn))
                               '#f)
                             '#f)
                         g$e$22395$1POZIn
                         (g$mkstx$20103$1POZIn
                           g$e$22395$1POZIn
                           g$m*$22396$1POZIn
                           g$s*$22397$1POZIn
                           g$ae*$22398$1POZIn)))))
                  (g$match-each$22288$1POZIn
                    (case-lambda
                      ((g$e$22379$1POZIn
                         g$p$22380$1POZIn
                         g$m*$22381$1POZIn
                         g$s*$22382$1POZIn
                         g$ae*$22383$1POZIn)
                       (if (pair? g$e$22379$1POZIn)
                         ((case-lambda
                            ((g$first$22384$1POZIn)
                             (if g$first$22384$1POZIn
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$22385$1POZIn)
                                     (if g$rest$22385$1POZIn
                                       (begin
                                         '#f
                                         (cons
                                           g$first$22384$1POZIn
                                           g$rest$22385$1POZIn))
                                       '#f)))
                                  (g$match-each$22288$1POZIn
                                    (cdr g$e$22379$1POZIn)
                                    g$p$22380$1POZIn
                                    g$m*$22381$1POZIn
                                    g$s*$22382$1POZIn
                                    g$ae*$22383$1POZIn)))
                               '#f)))
                          (g$match$22294$1POZIn
                            (car g$e$22379$1POZIn)
                            g$p$22380$1POZIn
                            g$m*$22381$1POZIn
                            g$s*$22382$1POZIn
                            g$ae*$22383$1POZIn
                            '()))
                         (if (null? g$e$22379$1POZIn)
                           '()
                           (if (g$stx?$20087$1POZIn g$e$22379$1POZIn)
                             (if (not (g$top-marked?$20049$1POZIn
                                        g$m*$22381$1POZIn))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$20102$1POZIn
                                        g$m*$22381$1POZIn
                                        g$s*$22382$1POZIn
                                        g$ae*$22383$1POZIn
                                        g$e$22379$1POZIn)))
                                   (case-lambda
                                     ((g$m*$22389$1POZIn
                                        g$s*$22390$1POZIn
                                        g$ae*$22391$1POZIn)
                                      ((case-lambda
                                         ((g$ae*$22392$1POZIn
                                            g$s*$22393$1POZIn
                                            g$m*$22394$1POZIn)
                                          (g$match-each$22288$1POZIn
                                            (g$stx-expr$20089$1POZIn
                                              g$e$22379$1POZIn)
                                            g$p$22380$1POZIn
                                            g$m*$22394$1POZIn
                                            g$s*$22393$1POZIn
                                            g$ae*$22392$1POZIn)))
                                       g$ae*$22391$1POZIn
                                       g$s*$22390$1POZIn
                                       g$m*$22389$1POZIn)))))
                               '#f)
                             (if (annotation? g$e$22379$1POZIn)
                               (g$match-each$22288$1POZIn
                                 (annotation-expression
                                   g$e$22379$1POZIn)
                                 g$p$22380$1POZIn
                                 g$m*$22381$1POZIn
                                 g$s*$22382$1POZIn
                                 g$ae*$22383$1POZIn)
                               (begin '#f '#f))))))))
                  (g$match-each+$22289$1POZIn
                    (case-lambda
                      ((g$e$22347$1POZIn
                         g$x-pat$22348$1POZIn
                         g$y-pat$22349$1POZIn
                         g$z-pat$22350$1POZIn
                         g$m*$22351$1POZIn
                         g$s*$22352$1POZIn
                         g$ae*$22353$1POZIn
                         g$r$22354$1POZIn)
                       ((letrec ((g$f$22355$1POZIn
                                   (case-lambda
                                     ((g$e$22356$1POZIn
                                        g$m*$22357$1POZIn
                                        g$s*$22358$1POZIn
                                        g$ae*$22359$1POZIn)
                                      (if (pair? g$e$22356$1POZIn)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$22355$1POZIn
                                               (cdr g$e$22356$1POZIn)
                                               g$m*$22357$1POZIn
                                               g$s*$22358$1POZIn
                                               g$ae*$22359$1POZIn)))
                                          (case-lambda
                                            ((g$xr*$22363$1POZIn
                                               g$y-pat$22364$1POZIn
                                               g$r$22365$1POZIn)
                                             ((case-lambda
                                                ((g$r$22366$1POZIn
                                                   g$y-pat$22367$1POZIn
                                                   g$xr*$22368$1POZIn)
                                                 (if g$r$22366$1POZIn
                                                   (if (null?
                                                         g$y-pat$22367$1POZIn)
                                                     ((case-lambda
                                                        ((g$xr$22369$1POZIn)
                                                         (if g$xr$22369$1POZIn
                                                           (values
                                                             (cons
                                                               g$xr$22369$1POZIn
                                                               g$xr*$22368$1POZIn)
                                                             g$y-pat$22367$1POZIn
                                                             g$r$22366$1POZIn)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$22294$1POZIn
                                                        (car g$e$22356$1POZIn)
                                                        g$x-pat$22348$1POZIn
                                                        g$m*$22357$1POZIn
                                                        g$s*$22358$1POZIn
                                                        g$ae*$22359$1POZIn
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$22367$1POZIn)
                                                       (g$match$22294$1POZIn
                                                         (car g$e$22356$1POZIn)
                                                         (car g$y-pat$22367$1POZIn)
                                                         g$m*$22357$1POZIn
                                                         g$s*$22358$1POZIn
                                                         g$ae*$22359$1POZIn
                                                         g$r$22366$1POZIn)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$22365$1POZIn
                                              g$y-pat$22364$1POZIn
                                              g$xr*$22363$1POZIn))))
                                        (if (g$stx?$20087$1POZIn
                                              g$e$22356$1POZIn)
                                          (if (g$top-marked?$20049$1POZIn
                                                g$m*$22357$1POZIn)
                                            (values
                                              '()
                                              g$y-pat$22349$1POZIn
                                              (g$match$22294$1POZIn
                                                g$e$22356$1POZIn
                                                g$z-pat$22350$1POZIn
                                                g$m*$22357$1POZIn
                                                g$s*$22358$1POZIn
                                                g$ae*$22359$1POZIn
                                                g$r$22354$1POZIn))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$20102$1POZIn
                                                   g$m*$22357$1POZIn
                                                   g$s*$22358$1POZIn
                                                   g$ae*$22359$1POZIn
                                                   g$e$22356$1POZIn)))
                                              (case-lambda
                                                ((g$m*$22373$1POZIn
                                                   g$s*$22374$1POZIn
                                                   g$ae*$22375$1POZIn)
                                                 ((case-lambda
                                                    ((g$ae*$22376$1POZIn
                                                       g$s*$22377$1POZIn
                                                       g$m*$22378$1POZIn)
                                                     (g$f$22355$1POZIn
                                                       (g$stx-expr$20089$1POZIn
                                                         g$e$22356$1POZIn)
                                                       g$m*$22378$1POZIn
                                                       g$s*$22377$1POZIn
                                                       g$ae*$22376$1POZIn)))
                                                  g$ae*$22375$1POZIn
                                                  g$s*$22374$1POZIn
                                                  g$m*$22373$1POZIn)))))
                                          (if (annotation?
                                                g$e$22356$1POZIn)
                                            (g$f$22355$1POZIn
                                              (annotation-expression
                                                g$e$22356$1POZIn)
                                              g$m*$22357$1POZIn
                                              g$s*$22358$1POZIn
                                              g$ae*$22359$1POZIn)
                                            (begin
                                              '#f
                                              (values
                                                '()
                                                g$y-pat$22349$1POZIn
                                                (g$match$22294$1POZIn
                                                  g$e$22356$1POZIn
                                                  g$z-pat$22350$1POZIn
                                                  g$m*$22357$1POZIn
                                                  g$s*$22358$1POZIn
                                                  g$ae*$22359$1POZIn
                                                  g$r$22354$1POZIn))))))))))
                          g$f$22355$1POZIn)
                        g$e$22347$1POZIn
                        g$m*$22351$1POZIn
                        g$s*$22352$1POZIn
                        g$ae*$22353$1POZIn))))
                  (g$match-each-any$22290$1POZIn
                    (case-lambda
                      ((g$e$22333$1POZIn
                         g$m*$22334$1POZIn
                         g$s*$22335$1POZIn
                         g$ae*$22336$1POZIn)
                       (if (pair? g$e$22333$1POZIn)
                         ((case-lambda
                            ((g$l$22337$1POZIn)
                             (if g$l$22337$1POZIn
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$22287$1POZIn
                                     (car g$e$22333$1POZIn)
                                     g$m*$22334$1POZIn
                                     g$s*$22335$1POZIn
                                     g$ae*$22336$1POZIn)
                                   g$l$22337$1POZIn))
                               '#f)))
                          (g$match-each-any$22290$1POZIn
                            (cdr g$e$22333$1POZIn)
                            g$m*$22334$1POZIn
                            g$s*$22335$1POZIn
                            g$ae*$22336$1POZIn))
                         (if (null? g$e$22333$1POZIn)
                           '()
                           (if (g$stx?$20087$1POZIn g$e$22333$1POZIn)
                             (if (not (g$top-marked?$20049$1POZIn
                                        g$m*$22334$1POZIn))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$20102$1POZIn
                                        g$m*$22334$1POZIn
                                        g$s*$22335$1POZIn
                                        g$ae*$22336$1POZIn
                                        g$e$22333$1POZIn)))
                                   (case-lambda
                                     ((g$m*$22341$1POZIn
                                        g$s*$22342$1POZIn
                                        g$ae*$22343$1POZIn)
                                      ((case-lambda
                                         ((g$ae*$22344$1POZIn
                                            g$s*$22345$1POZIn
                                            g$m*$22346$1POZIn)
                                          (g$match-each-any$22290$1POZIn
                                            (g$stx-expr$20089$1POZIn
                                              g$e$22333$1POZIn)
                                            g$m*$22346$1POZIn
                                            g$s*$22345$1POZIn
                                            g$ae*$22344$1POZIn)))
                                       g$ae*$22343$1POZIn
                                       g$s*$22342$1POZIn
                                       g$m*$22341$1POZIn)))))
                               '#f)
                             (if (annotation? g$e$22333$1POZIn)
                               (g$match-each-any$22290$1POZIn
                                 (annotation-expression
                                   g$e$22333$1POZIn)
                                 g$m*$22334$1POZIn
                                 g$s*$22335$1POZIn
                                 g$ae*$22336$1POZIn)
                               (begin '#f '#f))))))))
                  (g$match-empty$22291$1POZIn
                    (case-lambda
                      ((g$p$22330$1POZIn g$r$22331$1POZIn)
                       (if (null? g$p$22330$1POZIn)
                         g$r$22331$1POZIn
                         (if (eq? g$p$22330$1POZIn '_)
                           g$r$22331$1POZIn
                           (if (eq? g$p$22330$1POZIn 'any)
                             (cons '() g$r$22331$1POZIn)
                             (if (pair? g$p$22330$1POZIn)
                               (g$match-empty$22291$1POZIn
                                 (car g$p$22330$1POZIn)
                                 (g$match-empty$22291$1POZIn
                                   (cdr g$p$22330$1POZIn)
                                   g$r$22331$1POZIn))
                               (if (eq? g$p$22330$1POZIn 'each-any)
                                 (cons '() g$r$22331$1POZIn)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$22332$1POZIn)
                                       (if (eqv? g$t$22332$1POZIn 'each)
                                         (g$match-empty$22291$1POZIn
                                           (g$vector-ref$12678$1POZIn
                                             g$p$22330$1POZIn
                                             '1)
                                           g$r$22331$1POZIn)
                                         (if (eqv?
                                               g$t$22332$1POZIn
                                               'each+)
                                           (g$match-empty$22291$1POZIn
                                             (g$vector-ref$12678$1POZIn
                                               g$p$22330$1POZIn
                                               '1)
                                             (g$match-empty$22291$1POZIn
                                               (g$reverse$12682$1POZIn
                                                 (g$vector-ref$12678$1POZIn
                                                   g$p$22330$1POZIn
                                                   '2))
                                               (g$match-empty$22291$1POZIn
                                                 (g$vector-ref$12678$1POZIn
                                                   g$p$22330$1POZIn
                                                   '3)
                                                 g$r$22331$1POZIn)))
                                           (if (g$memv$11826$1POZIn
                                                 g$t$22332$1POZIn
                                                 '(free-id atom))
                                             g$r$22331$1POZIn
                                             (if (g$memv$11826$1POZIn
                                                   g$t$22332$1POZIn
                                                   '(scheme-id atom))
                                               g$r$22331$1POZIn
                                               (if (eqv?
                                                     g$t$22332$1POZIn
                                                     'vector)
                                                 (g$match-empty$22291$1POZIn
                                                   (g$vector-ref$12678$1POZIn
                                                     g$p$22330$1POZIn
                                                     '1)
                                                   g$r$22331$1POZIn)
                                                 (begin
                                                   '#f
                                                   (assertion-violation
                                                     'syntax-dispatch
                                                     '"invalid pattern"
                                                     g$p$22330$1POZIn)))))))))
                                    (g$vector-ref$12678$1POZIn
                                      g$p$22330$1POZIn
                                      '0)))))))))))
                  (g$combine$22292$1POZIn
                    (case-lambda
                      ((g$r*$22328$1POZIn g$r$22329$1POZIn)
                       (if (null? (car g$r*$22328$1POZIn))
                         g$r$22329$1POZIn
                         (cons
                           (g$map$11833$1POZIn car g$r*$22328$1POZIn)
                           (g$combine$22292$1POZIn
                             (g$map$11833$1POZIn cdr g$r*$22328$1POZIn)
                             g$r$22329$1POZIn))))))
                  (g$match*$22293$1POZIn
                    (case-lambda
                      ((g$e$22310$1POZIn
                         g$p$22311$1POZIn
                         g$m*$22312$1POZIn
                         g$s*$22313$1POZIn
                         g$ae*$22314$1POZIn
                         g$r$22315$1POZIn)
                       (if (null? g$p$22311$1POZIn)
                         (if (null? g$e$22310$1POZIn)
                           (begin '#f g$r$22315$1POZIn)
                           '#f)
                         (if (pair? g$p$22311$1POZIn)
                           (if (pair? g$e$22310$1POZIn)
                             (begin
                               '#f
                               (g$match$22294$1POZIn
                                 (car g$e$22310$1POZIn)
                                 (car g$p$22311$1POZIn)
                                 g$m*$22312$1POZIn
                                 g$s*$22313$1POZIn
                                 g$ae*$22314$1POZIn
                                 (g$match$22294$1POZIn
                                   (cdr g$e$22310$1POZIn)
                                   (cdr g$p$22311$1POZIn)
                                   g$m*$22312$1POZIn
                                   g$s*$22313$1POZIn
                                   g$ae*$22314$1POZIn
                                   g$r$22315$1POZIn)))
                             '#f)
                           (if (eq? g$p$22311$1POZIn 'each-any)
                             ((case-lambda
                                ((g$l$22316$1POZIn)
                                 (if g$l$22316$1POZIn
                                   (begin
                                     '#f
                                     (cons
                                       g$l$22316$1POZIn
                                       g$r$22315$1POZIn))
                                   '#f)))
                              (g$match-each-any$22290$1POZIn
                                g$e$22310$1POZIn
                                g$m*$22312$1POZIn
                                g$s*$22313$1POZIn
                                g$ae*$22314$1POZIn))
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$22317$1POZIn)
                                   (if (eqv? g$t$22317$1POZIn 'each)
                                     (if (null? g$e$22310$1POZIn)
                                       (g$match-empty$22291$1POZIn
                                         (g$vector-ref$12678$1POZIn
                                           g$p$22311$1POZIn
                                           '1)
                                         g$r$22315$1POZIn)
                                       ((case-lambda
                                          ((g$r*$22318$1POZIn)
                                           (if g$r*$22318$1POZIn
                                             (begin
                                               '#f
                                               (g$combine$22292$1POZIn
                                                 g$r*$22318$1POZIn
                                                 g$r$22315$1POZIn))
                                             '#f)))
                                        (g$match-each$22288$1POZIn
                                          g$e$22310$1POZIn
                                          (g$vector-ref$12678$1POZIn
                                            g$p$22311$1POZIn
                                            '1)
                                          g$m*$22312$1POZIn
                                          g$s*$22313$1POZIn
                                          g$ae*$22314$1POZIn)))
                                     (if (eqv?
                                           g$t$22317$1POZIn
                                           'free-id)
                                       (if (g$symbol?$12665$1POZIn
                                             g$e$22310$1POZIn)
                                         (if (g$top-marked?$20049$1POZIn
                                               g$m*$22312$1POZIn)
                                           (if (g$free-id=?$20119$1POZIn
                                                 (g$stx^$22287$1POZIn
                                                   g$e$22310$1POZIn
                                                   g$m*$22312$1POZIn
                                                   g$s*$22313$1POZIn
                                                   g$ae*$22314$1POZIn)
                                                 (g$vector-ref$12678$1POZIn
                                                   g$p$22311$1POZIn
                                                   '1))
                                             (begin
                                               '#f
                                               g$r$22315$1POZIn)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$22317$1POZIn
                                             'scheme-id)
                                         (if (g$symbol?$12665$1POZIn
                                               g$e$22310$1POZIn)
                                           (if (g$top-marked?$20049$1POZIn
                                                 g$m*$22312$1POZIn)
                                             (if (g$free-id=?$20119$1POZIn
                                                   (g$stx^$22287$1POZIn
                                                     g$e$22310$1POZIn
                                                     g$m*$22312$1POZIn
                                                     g$s*$22313$1POZIn
                                                     g$ae*$22314$1POZIn)
                                                   (g$scheme-stx$20556$1POZIn
                                                     (g$vector-ref$12678$1POZIn
                                                       g$p$22311$1POZIn
                                                       '1)))
                                               (begin
                                                 '#f
                                                 g$r$22315$1POZIn)
                                               '#f)
                                             '#f)
                                           '#f)
                                         (if (eqv?
                                               g$t$22317$1POZIn
                                               'each+)
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$match-each+$22289$1POZIn
                                                  g$e$22310$1POZIn
                                                  (g$vector-ref$12678$1POZIn
                                                    g$p$22311$1POZIn
                                                    '1)
                                                  (g$vector-ref$12678$1POZIn
                                                    g$p$22311$1POZIn
                                                    '2)
                                                  (g$vector-ref$12678$1POZIn
                                                    g$p$22311$1POZIn
                                                    '3)
                                                  g$m*$22312$1POZIn
                                                  g$s*$22313$1POZIn
                                                  g$ae*$22314$1POZIn
                                                  g$r$22315$1POZIn)))
                                             (case-lambda
                                               ((g$xr*$22322$1POZIn
                                                  g$y-pat$22323$1POZIn
                                                  g$r$22324$1POZIn)
                                                ((case-lambda
                                                   ((g$r$22325$1POZIn
                                                      g$y-pat$22326$1POZIn
                                                      g$xr*$22327$1POZIn)
                                                    (if g$r$22325$1POZIn
                                                      (if (null?
                                                            g$y-pat$22326$1POZIn)
                                                        (begin
                                                          '#f
                                                          (if (null?
                                                                g$xr*$22327$1POZIn)
                                                            (g$match-empty$22291$1POZIn
                                                              (g$vector-ref$12678$1POZIn
                                                                g$p$22311$1POZIn
                                                                '1)
                                                              g$r$22325$1POZIn)
                                                            (g$combine$22292$1POZIn
                                                              g$xr*$22327$1POZIn
                                                              g$r$22325$1POZIn)))
                                                        '#f)
                                                      '#f)))
                                                 g$r$22324$1POZIn
                                                 g$y-pat$22323$1POZIn
                                                 g$xr*$22322$1POZIn))))
                                           (if (eqv?
                                                 g$t$22317$1POZIn
                                                 'atom)
                                             (if (equal?
                                                   (g$vector-ref$12678$1POZIn
                                                     g$p$22311$1POZIn
                                                     '1)
                                                   (g$strip$20125$1POZIn
                                                     g$e$22310$1POZIn
                                                     g$m*$22312$1POZIn))
                                               (begin
                                                 '#f
                                                 g$r$22315$1POZIn)
                                               '#f)
                                             (if (eqv?
                                                   g$t$22317$1POZIn
                                                   'vector)
                                               (if (g$vector?$12663$1POZIn
                                                     g$e$22310$1POZIn)
                                                 (begin
                                                   '#f
                                                   (g$match$22294$1POZIn
                                                     (vector->list
                                                       g$e$22310$1POZIn)
                                                     (g$vector-ref$12678$1POZIn
                                                       g$p$22311$1POZIn
                                                       '1)
                                                     g$m*$22312$1POZIn
                                                     g$s*$22313$1POZIn
                                                     g$ae*$22314$1POZIn
                                                     g$r$22315$1POZIn))
                                                 '#f)
                                               (begin
                                                 '#f
                                                 (assertion-violation
                                                   'syntax-dispatch
                                                   '"invalid pattern"
                                                   g$p$22311$1POZIn))))))))))
                                (g$vector-ref$12678$1POZIn
                                  g$p$22311$1POZIn
                                  '0)))))))))
                  (g$match$22294$1POZIn
                    (case-lambda
                      ((g$e$22295$1POZIn
                         g$p$22296$1POZIn
                         g$m*$22297$1POZIn
                         g$s*$22298$1POZIn
                         g$ae*$22299$1POZIn
                         g$r$22300$1POZIn)
                       (if (not g$r$22300$1POZIn)
                         '#f
                         (if (eq? g$p$22296$1POZIn '_)
                           g$r$22300$1POZIn
                           (if (eq? g$p$22296$1POZIn 'any)
                             (cons
                               (g$stx^$22287$1POZIn
                                 g$e$22295$1POZIn
                                 g$m*$22297$1POZIn
                                 g$s*$22298$1POZIn
                                 g$ae*$22299$1POZIn)
                               g$r$22300$1POZIn)
                             (if (g$stx?$20087$1POZIn g$e$22295$1POZIn)
                               (if (not (g$top-marked?$20049$1POZIn
                                          g$m*$22297$1POZIn))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$20102$1POZIn
                                          g$m*$22297$1POZIn
                                          g$s*$22298$1POZIn
                                          g$ae*$22299$1POZIn
                                          g$e$22295$1POZIn)))
                                     (case-lambda
                                       ((g$m*$22304$1POZIn
                                          g$s*$22305$1POZIn
                                          g$ae*$22306$1POZIn)
                                        ((case-lambda
                                           ((g$ae*$22307$1POZIn
                                              g$s*$22308$1POZIn
                                              g$m*$22309$1POZIn)
                                            (g$match$22294$1POZIn
                                              (g$stx-expr$20089$1POZIn
                                                g$e$22295$1POZIn)
                                              g$p$22296$1POZIn
                                              g$m*$22309$1POZIn
                                              g$s*$22308$1POZIn
                                              g$ae*$22307$1POZIn
                                              g$r$22300$1POZIn)))
                                         g$ae*$22306$1POZIn
                                         g$s*$22305$1POZIn
                                         g$m*$22304$1POZIn)))))
                                 '#f)
                               (if (annotation? g$e$22295$1POZIn)
                                 (g$match$22294$1POZIn
                                   (annotation-expression
                                     g$e$22295$1POZIn)
                                   g$p$22296$1POZIn
                                   g$m*$22297$1POZIn
                                   g$s*$22298$1POZIn
                                   g$ae*$22299$1POZIn
                                   g$r$22300$1POZIn)
                                 (begin
                                   '#f
                                   (g$match*$22293$1POZIn
                                     g$e$22295$1POZIn
                                     g$p$22296$1POZIn
                                     g$m*$22297$1POZIn
                                     g$s*$22298$1POZIn
                                     g$ae*$22299$1POZIn
                                     g$r$22300$1POZIn)))))))))))
          (g$match$22294$1POZIn
            g$e$22285$1POZIn
            g$p$22286$1POZIn
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$20614$1POZIn
     g$ellipsis?$24209$1POZIn
     (case-lambda
       ((g$x$22399$1POZIn)
        (if (g$id?$20115$1POZIn g$x$22399$1POZIn)
          (begin
            '#f
            (g$free-id=?$20119$1POZIn
              g$x$22399$1POZIn
              (g$scheme-stx$20556$1POZIn '...)))
          '#f))))
   (g$underscore?$20615$1POZIn
     g$underscore?$24210$1POZIn
     (case-lambda
       ((g$x$22400$1POZIn)
        (if (g$id?$20115$1POZIn g$x$22400$1POZIn)
          (begin
            '#f
            (g$free-id=?$20119$1POZIn
              g$x$22400$1POZIn
              (g$scheme-stx$20556$1POZIn '_)))
          '#f))))
   (g$verify-literals$20616$1POZIn
     g$verify-literals$24211$1POZIn
     (case-lambda
       ((g$lits$22401$1POZIn g$expr$22402$1POZIn)
        (g$for-each$11834$1POZIn
          (case-lambda
            ((g$x$22403$1POZIn)
             (if ((case-lambda
                    ((g$t$22404$1POZIn)
                     (if g$t$22404$1POZIn
                       g$t$22404$1POZIn
                       ((case-lambda
                          ((g$t$22405$1POZIn)
                           (if g$t$22405$1POZIn
                             g$t$22405$1POZIn
                             (begin
                               '#f
                               (g$underscore?$20615$1POZIn
                                 g$x$22403$1POZIn)))))
                        (g$ellipsis?$20614$1POZIn g$x$22403$1POZIn)))))
                  (not (g$id?$20115$1POZIn g$x$22403$1POZIn)))
               (g$syntax-violation$20732$1POZIn
                 '#f
                 '"invalid literal"
                 g$expr$22402$1POZIn
                 g$x$22403$1POZIn)
               (void))))
          g$lits$22401$1POZIn))))
   (g$syntax-case-transformer$20617$1POZIn
     g$syntax-case-transformer$24212$1POZIn
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$22406$1POZIn
                     (case-lambda
                       ((g$pvars$22463$1POZIn
                          g$expr$22464$1POZIn
                          g$y$22465$1POZIn
                          g$r$22466$1POZIn
                          g$mr$22467$1POZIn)
                        ((case-lambda
                           ((g$ids$22468$1POZIn g$levels$22469$1POZIn)
                            ((case-lambda
                               ((g$labels$22470$1POZIn
                                  g$new-vars$22471$1POZIn)
                                ((case-lambda
                                   ((g$body$22472$1POZIn)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$20037$1POZIn
                                        '#f
                                        g$new-vars$22471$1POZIn
                                        g$body$22472$1POZIn)
                                      g$y$22465$1POZIn)))
                                 (g$chi-expr$20631$1POZIn
                                   (g$add-subst$20105$1POZIn
                                     (g$make-full-rib$20081$1POZIn
                                       g$ids$22468$1POZIn
                                       g$labels$22470$1POZIn)
                                     g$expr$22464$1POZIn)
                                   (append
                                     (g$map$11833$1POZIn
                                       (case-lambda
                                         ((g$label$22473$1POZIn
                                            g$var$22474$1POZIn
                                            g$level$22475$1POZIn)
                                          (cons
                                            g$label$22473$1POZIn
                                            (g$make-binding$20131$1POZIn
                                              'syntax
                                              (cons
                                                g$var$22474$1POZIn
                                                g$level$22475$1POZIn)))))
                                       g$labels$22470$1POZIn
                                       g$new-vars$22471$1POZIn
                                       (g$map$11833$1POZIn
                                         cdr
                                         g$pvars$22463$1POZIn))
                                     g$r$22466$1POZIn)
                                   g$mr$22467$1POZIn))))
                             (g$map$11833$1POZIn
                               g$gen-label$20052$1POZIn
                               g$ids$22468$1POZIn)
                             (g$map$11833$1POZIn
                               g$gen-lexical$20050$1POZIn
                               g$ids$22468$1POZIn))))
                         (g$map$11833$1POZIn car g$pvars$22463$1POZIn)
                         (g$map$11833$1POZIn
                           cdr
                           g$pvars$22463$1POZIn)))))
                   (g$invalid-ids-error$22407$1POZIn
                     (case-lambda
                       ((g$id*$22457$1POZIn
                          g$e$22458$1POZIn
                          g$class$22459$1POZIn)
                        ((letrec ((g$find$22460$1POZIn
                                    (case-lambda
                                      ((g$id*$22461$1POZIn
                                         g$ok*$22462$1POZIn)
                                       (if (null? g$id*$22461$1POZIn)
                                         (g$syntax-violation$20732$1POZIn
                                           '#f
                                           '"invalid syntax"
                                           g$e$22458$1POZIn)
                                         (if (g$id?$20115$1POZIn
                                               (car g$id*$22461$1POZIn))
                                           (if (g$bound-id-member?$20122$1POZIn
                                                 (car g$id*$22461$1POZIn)
                                                 g$ok*$22462$1POZIn)
                                             (g$syntax-error$20729$1POZIn
                                               (car g$id*$22461$1POZIn)
                                               '"duplicate "
                                               g$class$22459$1POZIn)
                                             (g$find$22460$1POZIn
                                               (cdr g$id*$22461$1POZIn)
                                               (cons
                                                 (car g$id*$22461$1POZIn)
                                                 g$ok*$22462$1POZIn)))
                                           (g$syntax-error$20729$1POZIn
                                             (car g$id*$22461$1POZIn)
                                             '"invalid "
                                             g$class$22459$1POZIn)))))))
                           g$find$22460$1POZIn)
                         g$id*$22457$1POZIn
                         '()))))
                   (g$gen-clause$22408$1POZIn
                     (case-lambda
                       ((g$x$22437$1POZIn
                          g$keys$22438$1POZIn
                          g$clauses$22439$1POZIn
                          g$r$22440$1POZIn
                          g$mr$22441$1POZIn
                          g$pat$22442$1POZIn
                          g$fender$22443$1POZIn
                          g$expr$22444$1POZIn)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$20612$1POZIn
                               g$pat$22442$1POZIn
                               g$keys$22438$1POZIn)))
                          (case-lambda
                            ((g$p$22447$1POZIn g$pvars$22448$1POZIn)
                             ((case-lambda
                                ((g$pvars$22449$1POZIn g$p$22450$1POZIn)
                                 (if (not (g$distinct-bound-ids?$20121$1POZIn
                                            (g$map$11833$1POZIn
                                              car
                                              g$pvars$22449$1POZIn)))
                                   (g$invalid-ids-error$22407$1POZIn
                                     (g$map$11833$1POZIn
                                       car
                                       g$pvars$22449$1POZIn)
                                     g$pat$22442$1POZIn
                                     '"pattern variable")
                                   (if (not (g$for-all$11831$1POZIn
                                              (case-lambda
                                                ((g$x$22451$1POZIn)
                                                 (not (g$ellipsis?$20614$1POZIn
                                                        (car g$x$22451$1POZIn)))))
                                              g$pvars$22449$1POZIn))
                                     (g$syntax-violation$20732$1POZIn
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$22442$1POZIn)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$y$22452$1POZIn)
                                           ((case-lambda
                                              ((g$test$22453$1POZIn)
                                               ((case-lambda
                                                  ((g$conseq$22454$1POZIn)
                                                   ((case-lambda
                                                      ((g$altern$22455$1POZIn)
                                                       (list
                                                         (g$build-lambda$20037$1POZIn
                                                           '#f
                                                           (list
                                                             g$y$22452$1POZIn)
                                                           (list
                                                             'if
                                                             g$test$22453$1POZIn
                                                             g$conseq$22454$1POZIn
                                                             g$altern$22455$1POZIn))
                                                         (list
                                                           '(primitive
                                                              syntax-dispatch)
                                                           g$x$22437$1POZIn
                                                           (list
                                                             'quote
                                                             g$p$22450$1POZIn)))))
                                                    (g$gen-syntax-case$22409$1POZIn
                                                      g$x$22437$1POZIn
                                                      g$keys$22438$1POZIn
                                                      g$clauses$22439$1POZIn
                                                      g$r$22440$1POZIn
                                                      g$mr$22441$1POZIn))))
                                                (g$build-dispatch-call$22406$1POZIn
                                                  g$pvars$22449$1POZIn
                                                  g$expr$22444$1POZIn
                                                  g$y$22452$1POZIn
                                                  g$r$22440$1POZIn
                                                  g$mr$22441$1POZIn))))
                                            (if (eq? g$fender$22443$1POZIn
                                                     '#t)
                                              g$y$22452$1POZIn
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$call$22456$1POZIn)
                                                    (list
                                                      'if
                                                      g$y$22452$1POZIn
                                                      g$call$22456$1POZIn
                                                      (list
                                                        'quote
                                                        '#f))))
                                                 (g$build-dispatch-call$22406$1POZIn
                                                   g$pvars$22449$1POZIn
                                                   g$fender$22443$1POZIn
                                                   g$y$22452$1POZIn
                                                   g$r$22440$1POZIn
                                                   g$mr$22441$1POZIn)))))))
                                        (g$gen-lexical$20050$1POZIn
                                          'tmp)))))))
                              g$pvars$22448$1POZIn
                              g$p$22447$1POZIn)))))))
                   (g$gen-syntax-case$22409$1POZIn
                     (case-lambda
                       ((g$x$22420$1POZIn
                          g$keys$22421$1POZIn
                          g$clauses$22422$1POZIn
                          g$r$22423$1POZIn
                          g$mr$22424$1POZIn)
                        (if (null? g$clauses$22422$1POZIn)
                          (list
                            '(primitive syntax-error)
                            g$x$22420$1POZIn)
                          ((case-lambda
                             ((g$t$22425$1POZIn)
                              ((case-lambda
                                 ((g$ls/false$22426$1POZIn)
                                  (if g$ls/false$22426$1POZIn
                                    (apply
                                      (case-lambda
                                        ((g$pat$22427$1POZIn
                                           g$expr$22428$1POZIn)
                                         (if (if (g$id?$20115$1POZIn
                                                   g$pat$22427$1POZIn)
                                               (if (not (g$bound-id-member?$20122$1POZIn
                                                          g$pat$22427$1POZIn
                                                          g$keys$22421$1POZIn))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$20614$1POZIn
                                                          g$pat$22427$1POZIn)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$20119$1POZIn
                                                 g$pat$22427$1POZIn
                                                 (g$scheme-stx$20556$1POZIn
                                                   '_))
                                             (g$chi-expr$20631$1POZIn
                                               g$expr$22428$1POZIn
                                               g$r$22423$1POZIn
                                               g$mr$22424$1POZIn)
                                             ((case-lambda
                                                ((g$lab$22429$1POZIn
                                                   g$lex$22430$1POZIn)
                                                 ((case-lambda
                                                    ((g$body$22431$1POZIn)
                                                     (list
                                                       (g$build-lambda$20037$1POZIn
                                                         '#f
                                                         (list
                                                           g$lex$22430$1POZIn)
                                                         g$body$22431$1POZIn)
                                                       g$x$22420$1POZIn)))
                                                  (g$chi-expr$20631$1POZIn
                                                    (g$add-subst$20105$1POZIn
                                                      (g$make-full-rib$20081$1POZIn
                                                        (list
                                                          g$pat$22427$1POZIn)
                                                        (list
                                                          g$lab$22429$1POZIn))
                                                      g$expr$22428$1POZIn)
                                                    (cons
                                                      (cons
                                                        g$lab$22429$1POZIn
                                                        (g$make-binding$20131$1POZIn
                                                          'syntax
                                                          (cons
                                                            g$lex$22430$1POZIn
                                                            '0)))
                                                      g$r$22423$1POZIn)
                                                    g$mr$22424$1POZIn))))
                                              (g$gen-label$20052$1POZIn
                                                g$pat$22427$1POZIn)
                                              (g$gen-lexical$20050$1POZIn
                                                g$pat$22427$1POZIn)))
                                           (g$gen-clause$22408$1POZIn
                                             g$x$22420$1POZIn
                                             g$keys$22421$1POZIn
                                             (cdr g$clauses$22422$1POZIn)
                                             g$r$22423$1POZIn
                                             g$mr$22424$1POZIn
                                             g$pat$22427$1POZIn
                                             '#t
                                             g$expr$22428$1POZIn))))
                                      g$ls/false$22426$1POZIn)
                                    ((case-lambda
                                       ((g$t$22432$1POZIn)
                                        ((case-lambda
                                           ((g$ls/false$22433$1POZIn)
                                            (if g$ls/false$22433$1POZIn
                                              (apply
                                                (case-lambda
                                                  ((g$pat$22434$1POZIn
                                                     g$fender$22435$1POZIn
                                                     g$expr$22436$1POZIn)
                                                   (g$gen-clause$22408$1POZIn
                                                     g$x$22420$1POZIn
                                                     g$keys$22421$1POZIn
                                                     (cdr g$clauses$22422$1POZIn)
                                                     g$r$22423$1POZIn
                                                     g$mr$22424$1POZIn
                                                     g$pat$22434$1POZIn
                                                     g$fender$22435$1POZIn
                                                     g$expr$22436$1POZIn)))
                                                g$ls/false$22433$1POZIn)
                                              (g$syntax-violation$20732$1POZIn
                                                '#f
                                                '"invalid syntax"
                                                g$t$22432$1POZIn))))
                                         (g$syntax-dispatch$20613$1POZIn
                                           g$t$22432$1POZIn
                                           '(any any any)))))
                                     g$t$22425$1POZIn))))
                               (g$syntax-dispatch$20613$1POZIn
                                 g$t$22425$1POZIn
                                 '(any any)))))
                           (car g$clauses$22422$1POZIn)))))))
           (case-lambda
             ((g$e$22410$1POZIn g$r$22411$1POZIn g$mr$22412$1POZIn)
              ((case-lambda
                 ((g$t$22413$1POZIn)
                  ((case-lambda
                     ((g$ls/false$22414$1POZIn)
                      (if g$ls/false$22414$1POZIn
                        (apply
                          (case-lambda
                            ((g$expr$22415$1POZIn
                               g$keys$22416$1POZIn
                               g$clauses$22417$1POZIn)
                             (begin
                               (g$verify-literals$20616$1POZIn
                                 g$keys$22416$1POZIn
                                 g$e$22410$1POZIn)
                               ((case-lambda
                                  ((g$x$22418$1POZIn)
                                   ((case-lambda
                                      ((g$body$22419$1POZIn)
                                       (list
                                         (g$build-lambda$20037$1POZIn
                                           '#f
                                           (list g$x$22418$1POZIn)
                                           g$body$22419$1POZIn)
                                         (g$chi-expr$20631$1POZIn
                                           g$expr$22415$1POZIn
                                           g$r$22411$1POZIn
                                           g$mr$22412$1POZIn))))
                                    (g$gen-syntax-case$22409$1POZIn
                                      g$x$22418$1POZIn
                                      g$keys$22416$1POZIn
                                      g$clauses$22417$1POZIn
                                      g$r$22411$1POZIn
                                      g$mr$22412$1POZIn))))
                                (g$gen-lexical$20050$1POZIn 'tmp)))))
                          g$ls/false$22414$1POZIn)
                        (g$syntax-violation$20732$1POZIn
                          '#f
                          '"invalid syntax"
                          g$t$22413$1POZIn))))
                   (g$syntax-dispatch$20613$1POZIn
                     g$t$22413$1POZIn
                     '(_ any each-any . each-any)))))
               g$e$22410$1POZIn))))))))
   (g$ellipsis-map$20618$1POZIn
     g$ellipsis-map$24213$1POZIn
     (case-lambda
       ((g$proc$22476$1POZIn g$ls$22477$1POZIn . g$ls*$22478$1POZIn)
        (letrec* ((g$who$22479$1POZIn '...))
          (begin
            (if (not (list? g$ls$22477$1POZIn))
              (assertion-violation
                g$who$22479$1POZIn
                '"not a list"
                g$ls$22477$1POZIn)
              (void))
            (if (not (null? g$ls*$22478$1POZIn))
              ((case-lambda
                 ((g$n$22480$1POZIn)
                  (g$for-each$11834$1POZIn
                    (case-lambda
                      ((g$x$22481$1POZIn)
                       (begin
                         (if (not (list? g$x$22481$1POZIn))
                           (assertion-violation
                             g$who$22479$1POZIn
                             '"not a list"
                             g$x$22481$1POZIn)
                           (void))
                         (if (not (g$=$13618$1POZIn
                                    (length g$x$22481$1POZIn)
                                    g$n$22480$1POZIn))
                           (assertion-violation
                             g$who$22479$1POZIn
                             '"length mismatch"
                             g$ls$22477$1POZIn
                             g$x$22481$1POZIn)
                           (void)))))
                    g$ls*$22478$1POZIn)))
               (length g$ls$22477$1POZIn))
              (void))
            (apply
              g$map$11833$1POZIn
              g$proc$22476$1POZIn
              g$ls$22477$1POZIn
              g$ls*$22478$1POZIn))))))
   (g$syntax-transformer$20619$1POZIn
     g$syntax-transformer$24214$1POZIn
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$22482$1POZIn
                     (case-lambda
                       ((g$src$22542$1POZIn
                          g$e$22543$1POZIn
                          g$r$22544$1POZIn
                          g$maps$22545$1POZIn
                          g$ellipsis?$22546$1POZIn
                          g$vec?$22547$1POZIn)
                        ((case-lambda
                           ((g$t$22548$1POZIn)
                            ((case-lambda
                               ((g$ls/false$22549$1POZIn)
                                (if (if g$ls/false$22549$1POZIn
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$22550$1POZIn)
                                             (g$ellipsis?$22546$1POZIn
                                               g$dots$22550$1POZIn)))
                                          g$ls/false$22549$1POZIn))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$22551$1POZIn)
                                       (g$syntax-violation$20732$1POZIn
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$22542$1POZIn)))
                                    g$ls/false$22549$1POZIn)
                                  ((case-lambda
                                     ((g$t$22552$1POZIn)
                                      ((case-lambda
                                         ((g$ls/false$22553$1POZIn)
                                          (if (if g$ls/false$22553$1POZIn
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$22554$1POZIn)
                                                       (g$id?$20115$1POZIn
                                                         g$id$22554$1POZIn)))
                                                    g$ls/false$22553$1POZIn))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$22555$1POZIn)
                                                 ((case-lambda
                                                    ((g$label$22556$1POZIn)
                                                     ((case-lambda
                                                        ((g$b$22557$1POZIn)
                                                         (if (eq? (g$binding-type$20132$1POZIn
                                                                    g$b$22557$1POZIn)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$22560$1POZIn)
                                                                    (g$gen-ref$22483$1POZIn
                                                                      g$src$22542$1POZIn
                                                                      (car g$var.lev$22560$1POZIn)
                                                                      (cdr g$var.lev$22560$1POZIn)
                                                                      g$maps$22545$1POZIn)))
                                                                 (g$binding-value$20133$1POZIn
                                                                   g$b$22557$1POZIn))))
                                                             (case-lambda
                                                               ((g$var$22561$1POZIn
                                                                  g$maps$22562$1POZIn)
                                                                ((case-lambda
                                                                   ((g$maps$22563$1POZIn
                                                                      g$var$22564$1POZIn)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$22564$1POZIn)
                                                                      g$maps$22563$1POZIn)))
                                                                 g$maps$22562$1POZIn
                                                                 g$var$22561$1POZIn))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$22543$1POZIn)
                                                             g$maps$22545$1POZIn))))
                                                      (g$label->binding$20130$1POZIn
                                                        g$label$22556$1POZIn
                                                        g$r$22544$1POZIn))))
                                                  (g$id->label$20128$1POZIn
                                                    g$e$22543$1POZIn))))
                                              g$ls/false$22553$1POZIn)
                                            ((case-lambda
                                               ((g$t$22565$1POZIn)
                                                ((case-lambda
                                                   ((g$ls/false$22566$1POZIn)
                                                    (if (if g$ls/false$22566$1POZIn
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$22567$1POZIn
                                                                   g$e$22568$1POZIn)
                                                                 (g$ellipsis?$22546$1POZIn
                                                                   g$dots$22567$1POZIn)))
                                                              g$ls/false$22566$1POZIn))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$22569$1POZIn
                                                             g$e$22570$1POZIn)
                                                           (if g$vec?$22547$1POZIn
                                                             (g$syntax-violation$20732$1POZIn
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$22542$1POZIn)
                                                             (g$gen-syntax$22482$1POZIn
                                                               g$src$22542$1POZIn
                                                               g$e$22570$1POZIn
                                                               g$r$22544$1POZIn
                                                               g$maps$22545$1POZIn
                                                               (case-lambda
                                                                 ((g$x$22571$1POZIn)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$22566$1POZIn)
                                                      ((case-lambda
                                                         ((g$t$22572$1POZIn)
                                                          ((case-lambda
                                                             ((g$ls/false$22573$1POZIn)
                                                              (if (if g$ls/false$22573$1POZIn
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$22574$1POZIn
                                                                             g$dots$22575$1POZIn
                                                                             g$y$22576$1POZIn)
                                                                           (g$ellipsis?$22546$1POZIn
                                                                             g$dots$22575$1POZIn)))
                                                                        g$ls/false$22573$1POZIn))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$22577$1POZIn
                                                                       g$dots$22578$1POZIn
                                                                       g$y$22579$1POZIn)
                                                                     ((letrec ((g$f$22580$1POZIn
                                                                                 (case-lambda
                                                                                   ((g$y$22581$1POZIn
                                                                                      g$k$22582$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$22583$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22584$1POZIn)
                                                                                            (if g$ls/false$22584$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$22582$1POZIn
                                                                                                     g$maps$22545$1POZIn)))
                                                                                                g$ls/false$22584$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$t$22585$1POZIn)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$22586$1POZIn)
                                                                                                      (if (if g$ls/false$22586$1POZIn
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$22587$1POZIn
                                                                                                                     g$y$22588$1POZIn)
                                                                                                                   (g$ellipsis?$22546$1POZIn
                                                                                                                     g$dots$22587$1POZIn)))
                                                                                                                g$ls/false$22586$1POZIn))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$22589$1POZIn
                                                                                                               g$y$22590$1POZIn)
                                                                                                             (g$f$22580$1POZIn
                                                                                                               g$y$22590$1POZIn
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$22591$1POZIn)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$22582$1POZIn
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$22591$1POZIn))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$22594$1POZIn
                                                                                                                         g$maps$22595$1POZIn)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$22596$1POZIn
                                                                                                                             g$x$22597$1POZIn)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$22596$1POZIn))
                                                                                                                             (g$syntax-violation$20732$1POZIn
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$22542$1POZIn)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$22485$1POZIn
                                                                                                                                 g$x$22597$1POZIn
                                                                                                                                 (car g$maps$22596$1POZIn))
                                                                                                                               (cdr g$maps$22596$1POZIn)))))
                                                                                                                        g$maps$22595$1POZIn
                                                                                                                        g$x$22594$1POZIn)))))))))
                                                                                                          g$ls/false$22586$1POZIn)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$22598$1POZIn)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$22599$1POZIn)
                                                                                                                (if g$ls/false$22599$1POZIn
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$22482$1POZIn
                                                                                                                              g$src$22542$1POZIn
                                                                                                                              g$y$22581$1POZIn
                                                                                                                              g$r$22544$1POZIn
                                                                                                                              g$maps$22545$1POZIn
                                                                                                                              g$ellipsis?$22546$1POZIn
                                                                                                                              g$vec?$22547$1POZIn)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$22602$1POZIn
                                                                                                                              g$maps$22603$1POZIn)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$22604$1POZIn
                                                                                                                                  g$y$22605$1POZIn)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$22582$1POZIn
                                                                                                                                       g$maps$22604$1POZIn)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$22608$1POZIn
                                                                                                                                       g$maps$22609$1POZIn)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$22610$1POZIn
                                                                                                                                           g$x$22611$1POZIn)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$22484$1POZIn
                                                                                                                                             g$x$22611$1POZIn
                                                                                                                                             g$y$22605$1POZIn)
                                                                                                                                           g$maps$22610$1POZIn)))
                                                                                                                                      g$maps$22609$1POZIn
                                                                                                                                      g$x$22608$1POZIn))))))
                                                                                                                             g$maps$22603$1POZIn
                                                                                                                             g$y$22602$1POZIn))))))
                                                                                                                    g$ls/false$22599$1POZIn)
                                                                                                                  (g$syntax-violation$20732$1POZIn
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$22598$1POZIn))))
                                                                                                             (g$syntax-dispatch$20613$1POZIn
                                                                                                               g$t$22598$1POZIn
                                                                                                               '_))))
                                                                                                         g$t$22585$1POZIn))))
                                                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                                                     g$t$22585$1POZIn
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$22583$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$22583$1POZIn
                                                                                           '()))))
                                                                                     g$y$22581$1POZIn)))))
                                                                        g$f$22580$1POZIn)
                                                                      g$y$22579$1POZIn
                                                                      (case-lambda
                                                                        ((g$maps$22612$1POZIn)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$22482$1POZIn
                                                                                g$src$22542$1POZIn
                                                                                g$x$22577$1POZIn
                                                                                g$r$22544$1POZIn
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$22612$1POZIn)
                                                                                g$ellipsis?$22546$1POZIn
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$22615$1POZIn
                                                                                g$maps$22616$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$maps$22617$1POZIn
                                                                                    g$x$22618$1POZIn)
                                                                                  (if (null?
                                                                                        (car g$maps$22617$1POZIn))
                                                                                    (g$syntax-violation$20732$1POZIn
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$22542$1POZIn)
                                                                                    (values
                                                                                      (g$gen-map$22486$1POZIn
                                                                                        g$x$22618$1POZIn
                                                                                        (car g$maps$22617$1POZIn))
                                                                                      (cdr g$maps$22617$1POZIn)))))
                                                                               g$maps$22616$1POZIn
                                                                               g$x$22615$1POZIn)))))))))
                                                                  g$ls/false$22573$1POZIn)
                                                                ((case-lambda
                                                                   ((g$t$22619$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$ls/false$22620$1POZIn)
                                                                        (if g$ls/false$22620$1POZIn
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$22621$1POZIn
                                                                                 g$y$22622$1POZIn)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$22482$1POZIn
                                                                                      g$src$22542$1POZIn
                                                                                      g$x$22621$1POZIn
                                                                                      g$r$22544$1POZIn
                                                                                      g$maps$22545$1POZIn
                                                                                      g$ellipsis?$22546$1POZIn
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$22625$1POZIn
                                                                                      g$maps$22626$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$maps$22627$1POZIn
                                                                                          g$xnew$22628$1POZIn)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$22482$1POZIn
                                                                                               g$src$22542$1POZIn
                                                                                               g$y$22622$1POZIn
                                                                                               g$r$22544$1POZIn
                                                                                               g$maps$22627$1POZIn
                                                                                               g$ellipsis?$22546$1POZIn
                                                                                               g$vec?$22547$1POZIn)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$22631$1POZIn
                                                                                               g$maps$22632$1POZIn)
                                                                                             ((case-lambda
                                                                                                ((g$maps$22633$1POZIn
                                                                                                   g$ynew$22634$1POZIn)
                                                                                                 (values
                                                                                                   (g$gen-cons$22487$1POZIn
                                                                                                     g$e$22543$1POZIn
                                                                                                     g$x$22621$1POZIn
                                                                                                     g$y$22622$1POZIn
                                                                                                     g$xnew$22628$1POZIn
                                                                                                     g$ynew$22634$1POZIn)
                                                                                                   g$maps$22633$1POZIn)))
                                                                                              g$maps$22632$1POZIn
                                                                                              g$ynew$22631$1POZIn))))))
                                                                                     g$maps$22626$1POZIn
                                                                                     g$xnew$22625$1POZIn))))))
                                                                            g$ls/false$22620$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$22635$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$22636$1POZIn)
                                                                                  (if g$ls/false$22636$1POZIn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$22637$1POZIn)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$22482$1POZIn
                                                                                                g$src$22542$1POZIn
                                                                                                g$ls$22637$1POZIn
                                                                                                g$r$22544$1POZIn
                                                                                                g$maps$22545$1POZIn
                                                                                                g$ellipsis?$22546$1POZIn
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$22640$1POZIn
                                                                                                g$maps$22641$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$22642$1POZIn
                                                                                                    g$lsnew$22643$1POZIn)
                                                                                                  (values
                                                                                                    (g$gen-vector$22488$1POZIn
                                                                                                      g$e$22543$1POZIn
                                                                                                      g$ls$22637$1POZIn
                                                                                                      g$lsnew$22643$1POZIn)
                                                                                                    g$maps$22642$1POZIn)))
                                                                                               g$maps$22641$1POZIn
                                                                                               g$lsnew$22640$1POZIn))))))
                                                                                      g$ls/false$22636$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$22644$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$22645$1POZIn)
                                                                                            (if g$ls/false$22645$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$22543$1POZIn)
                                                                                                     g$maps$22545$1POZIn)))
                                                                                                g$ls/false$22645$1POZIn)
                                                                                              (g$syntax-violation$20732$1POZIn
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$22644$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$22644$1POZIn
                                                                                           '_))))
                                                                                     g$t$22635$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$22635$1POZIn
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$22619$1POZIn))))
                                                                     (g$syntax-dispatch$20613$1POZIn
                                                                       g$t$22619$1POZIn
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$22572$1POZIn))))
                                                           (g$syntax-dispatch$20613$1POZIn
                                                             g$t$22572$1POZIn
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$22565$1POZIn))))
                                                 (g$syntax-dispatch$20613$1POZIn
                                                   g$t$22565$1POZIn
                                                   '(any any)))))
                                             g$t$22552$1POZIn))))
                                       (g$syntax-dispatch$20613$1POZIn
                                         g$t$22552$1POZIn
                                         'any))))
                                   g$t$22548$1POZIn))))
                             (g$syntax-dispatch$20613$1POZIn
                               g$t$22548$1POZIn
                               'any))))
                         g$e$22543$1POZIn))))
                   (g$gen-ref$22483$1POZIn
                     (case-lambda
                       ((g$src$22529$1POZIn
                          g$var$22530$1POZIn
                          g$level$22531$1POZIn
                          g$maps$22532$1POZIn)
                        (if (g$=$13618$1POZIn g$level$22531$1POZIn '0)
                          (values
                            g$var$22530$1POZIn
                            g$maps$22532$1POZIn)
                          (if (null? g$maps$22532$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$22529$1POZIn)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$22483$1POZIn
                                   g$src$22529$1POZIn
                                   g$var$22530$1POZIn
                                   (- g$level$22531$1POZIn '1)
                                   (cdr g$maps$22532$1POZIn))))
                              (case-lambda
                                ((g$outer-var$22535$1POZIn
                                   g$outer-maps$22536$1POZIn)
                                 ((case-lambda
                                    ((g$outer-maps$22537$1POZIn
                                       g$outer-var$22538$1POZIn)
                                     ((case-lambda
                                        ((g$t$22539$1POZIn)
                                         (if g$t$22539$1POZIn
                                           ((case-lambda
                                              ((g$b$22540$1POZIn)
                                               (values
                                                 (cdr g$b$22540$1POZIn)
                                                 g$maps$22532$1POZIn)))
                                            g$t$22539$1POZIn)
                                           (begin
                                             '#f
                                             ((case-lambda
                                                ((g$inner-var$22541$1POZIn)
                                                 (values
                                                   g$inner-var$22541$1POZIn
                                                   (cons
                                                     (cons
                                                       (cons
                                                         g$outer-var$22538$1POZIn
                                                         g$inner-var$22541$1POZIn)
                                                       (car g$maps$22532$1POZIn))
                                                     g$outer-maps$22537$1POZIn))))
                                              (g$gen-lexical$20050$1POZIn
                                                'tmp))))))
                                      (g$assq$11821$1POZIn
                                        g$outer-var$22538$1POZIn
                                        (car g$maps$22532$1POZIn)))))
                                  g$outer-maps$22536$1POZIn
                                  g$outer-var$22535$1POZIn)))))))))
                   (g$gen-append$22484$1POZIn
                     (case-lambda
                       ((g$x$22527$1POZIn g$y$22528$1POZIn)
                        (if (equal? g$y$22528$1POZIn ''())
                          g$x$22527$1POZIn
                          (list
                            'append
                            g$x$22527$1POZIn
                            g$y$22528$1POZIn)))))
                   (g$gen-mappend$22485$1POZIn
                     (case-lambda
                       ((g$e$22525$1POZIn g$map-env$22526$1POZIn)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$22486$1POZIn
                            g$e$22525$1POZIn
                            g$map-env$22526$1POZIn)))))
                   (g$gen-map$22486$1POZIn
                     (case-lambda
                       ((g$e$22516$1POZIn g$map-env$22517$1POZIn)
                        ((case-lambda
                           ((g$formals$22518$1POZIn
                              g$actuals$22519$1POZIn)
                            (if (eq? (car g$e$22516$1POZIn) 'ref)
                              (car g$actuals$22519$1POZIn)
                              (if (g$for-all$11831$1POZIn
                                    (case-lambda
                                      ((g$x$22520$1POZIn)
                                       (if (eq? (car g$x$22520$1POZIn)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$11825$1POZIn
                                             (g$cadr$12684$1POZIn
                                               g$x$22520$1POZIn)
                                             g$formals$22518$1POZIn))
                                         '#f)))
                                    (cdr g$e$22516$1POZIn))
                                ((case-lambda
                                   ((g$args$22521$1POZIn)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$22516$1POZIn))
                                        g$args$22521$1POZIn))))
                                 (g$map$11833$1POZIn
                                   ((case-lambda
                                      ((g$r$22522$1POZIn)
                                       (case-lambda
                                         ((g$x$22523$1POZIn)
                                          (cdr (g$assq$11821$1POZIn
                                                 (g$cadr$12684$1POZIn
                                                   g$x$22523$1POZIn)
                                                 g$r$22522$1POZIn))))))
                                    (g$map$11833$1POZIn
                                      cons
                                      g$formals$22518$1POZIn
                                      g$actuals$22519$1POZIn))
                                   (cdr g$e$22516$1POZIn)))
                                (begin
                                  '#f
                                  (g$cons*$11835$1POZIn
                                    'map
                                    (list
                                      'lambda
                                      g$formals$22518$1POZIn
                                      g$e$22516$1POZIn)
                                    g$actuals$22519$1POZIn))))))
                         (g$map$11833$1POZIn cdr g$map-env$22517$1POZIn)
                         (g$map$11833$1POZIn
                           (case-lambda
                             ((g$x$22524$1POZIn)
                              (list 'ref (car g$x$22524$1POZIn))))
                           g$map-env$22517$1POZIn)))))
                   (g$gen-cons$22487$1POZIn
                     (case-lambda
                       ((g$e$22508$1POZIn
                          g$x$22509$1POZIn
                          g$y$22510$1POZIn
                          g$xnew$22511$1POZIn
                          g$ynew$22512$1POZIn)
                        ((case-lambda
                           ((g$t$22513$1POZIn)
                            (if (eqv? g$t$22513$1POZIn 'quote)
                              (if (eq? (car g$xnew$22511$1POZIn) 'quote)
                                ((case-lambda
                                   ((g$xnew$22514$1POZIn
                                      g$ynew$22515$1POZIn)
                                    (if (if (eq? g$xnew$22514$1POZIn
                                                 g$x$22509$1POZIn)
                                          (begin
                                            '#f
                                            (eq? g$ynew$22515$1POZIn
                                                 g$y$22510$1POZIn))
                                          '#f)
                                      (list 'quote g$e$22508$1POZIn)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$22514$1POZIn
                                          g$ynew$22515$1POZIn)))))
                                 (g$cadr$12684$1POZIn
                                   g$xnew$22511$1POZIn)
                                 (g$cadr$12684$1POZIn
                                   g$ynew$22512$1POZIn))
                                (if (null?
                                      (g$cadr$12684$1POZIn
                                        g$ynew$22512$1POZIn))
                                  (list 'list g$xnew$22511$1POZIn)
                                  (list
                                    'cons
                                    g$xnew$22511$1POZIn
                                    g$ynew$22512$1POZIn)))
                              (if (eqv? g$t$22513$1POZIn 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$22511$1POZIn
                                    (cdr g$ynew$22512$1POZIn)))
                                (begin
                                  '#f
                                  (list
                                    'cons
                                    g$xnew$22511$1POZIn
                                    g$ynew$22512$1POZIn))))))
                         (car g$ynew$22512$1POZIn)))))
                   (g$gen-vector$22488$1POZIn
                     (case-lambda
                       ((g$e$22505$1POZIn
                          g$ls$22506$1POZIn
                          g$lsnew$22507$1POZIn)
                        (if (eq? (car g$lsnew$22507$1POZIn) 'quote)
                          (if (eq? (g$cadr$12684$1POZIn
                                     g$lsnew$22507$1POZIn)
                                   g$ls$22506$1POZIn)
                            (list 'quote g$e$22505$1POZIn)
                            (list
                              'quote
                              (g$list->vector$12676$1POZIn
                                (g$cadr$12684$1POZIn
                                  g$lsnew$22507$1POZIn))))
                          (if (eq? (car g$lsnew$22507$1POZIn) 'list)
                            (cons 'vector (cdr g$lsnew$22507$1POZIn))
                            (begin
                              '#f
                              (list
                                'list->vector
                                g$lsnew$22507$1POZIn)))))))
                   (g$regen$22489$1POZIn
                     (case-lambda
                       ((g$x$22502$1POZIn)
                        ((case-lambda
                           ((g$t$22503$1POZIn)
                            (if (eqv? g$t$22503$1POZIn 'ref)
                              (g$cadr$12684$1POZIn g$x$22502$1POZIn)
                              (if (eqv? g$t$22503$1POZIn 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$12684$1POZIn
                                    g$x$22502$1POZIn))
                                (if (eqv? g$t$22503$1POZIn 'quote)
                                  (list
                                    'quote
                                    (g$cadr$12684$1POZIn
                                      g$x$22502$1POZIn))
                                  (if (eqv? g$t$22503$1POZIn 'lambda)
                                    (g$build-lambda$20037$1POZIn
                                      '#f
                                      (g$cadr$12684$1POZIn
                                        g$x$22502$1POZIn)
                                      (g$regen$22489$1POZIn
                                        (g$caddr$12690$1POZIn
                                          g$x$22502$1POZIn)))
                                    (if (eqv? g$t$22503$1POZIn 'map)
                                      ((case-lambda
                                         ((g$ls$22504$1POZIn)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$22504$1POZIn)))
                                       (g$map$11833$1POZIn
                                         g$regen$22489$1POZIn
                                         (cdr g$x$22502$1POZIn)))
                                      (begin
                                        '#f
                                        (cons
                                          (list
                                            'primitive
                                            (car g$x$22502$1POZIn))
                                          (g$map$11833$1POZIn
                                            g$regen$22489$1POZIn
                                            (cdr g$x$22502$1POZIn)))))))))))
                         (car g$x$22502$1POZIn))))))
           (case-lambda
             ((g$e$22490$1POZIn g$r$22491$1POZIn g$mr$22492$1POZIn)
              ((case-lambda
                 ((g$t$22493$1POZIn)
                  ((case-lambda
                     ((g$ls/false$22494$1POZIn)
                      (if g$ls/false$22494$1POZIn
                        (apply
                          (case-lambda
                            ((g$x$22495$1POZIn)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$22482$1POZIn
                                    g$e$22490$1POZIn
                                    g$x$22495$1POZIn
                                    g$r$22491$1POZIn
                                    '()
                                    g$ellipsis?$20614$1POZIn
                                    '#f)))
                               (case-lambda
                                 ((g$e$22498$1POZIn g$maps$22499$1POZIn)
                                  ((case-lambda
                                     ((g$maps$22500$1POZIn
                                        g$e$22501$1POZIn)
                                      (g$regen$22489$1POZIn
                                        g$e$22501$1POZIn)))
                                   g$maps$22499$1POZIn
                                   g$e$22498$1POZIn))))))
                          g$ls/false$22494$1POZIn)
                        (g$syntax-violation$20732$1POZIn
                          '#f
                          '"invalid syntax"
                          g$t$22493$1POZIn))))
                   (g$syntax-dispatch$20613$1POZIn
                     g$t$22493$1POZIn
                     '(_ any)))))
               g$e$22490$1POZIn))))))))
   (g$core-macro-transformer$20620$1POZIn
     g$core-macro-transformer$24215$1POZIn
     (case-lambda
       ((g$name$22646$1POZIn)
        ((case-lambda
           ((g$t$22647$1POZIn)
            (if (eqv? g$t$22647$1POZIn 'quote)
              g$quote-transformer$20573$1POZIn
              (if (eqv? g$t$22647$1POZIn 'lambda)
                g$lambda-transformer$20575$1POZIn
                (if (eqv? g$t$22647$1POZIn 'case-lambda)
                  g$case-lambda-transformer$20574$1POZIn
                  (if (eqv? g$t$22647$1POZIn 'letrec)
                    g$letrec-transformer$20563$1POZIn
                    (if (eqv? g$t$22647$1POZIn 'letrec*)
                      g$letrec*-transformer$20564$1POZIn
                      (if (eqv? g$t$22647$1POZIn 'if)
                        g$if-transformer$20571$1POZIn
                        (if (eqv? g$t$22647$1POZIn 'foreign-call)
                          g$foreign-call-transformer$20611$1POZIn
                          (if (eqv? g$t$22647$1POZIn 'syntax-case)
                            g$syntax-case-transformer$20617$1POZIn
                            (if (eqv? g$t$22647$1POZIn 'syntax)
                              g$syntax-transformer$20619$1POZIn
                              (if (eqv?
                                    g$t$22647$1POZIn
                                    'type-descriptor)
                                g$type-descriptor-transformer$20566$1POZIn
                                (if (eqv?
                                      g$t$22647$1POZIn
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$20567$1POZIn
                                  (if (eqv?
                                        g$t$22647$1POZIn
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$20568$1POZIn
                                    (if (eqv?
                                          g$t$22647$1POZIn
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$20565$1POZIn
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'macro-transformer
                                          '"BUG: cannot find transformer"
                                          g$name$22646$1POZIn)))))))))))))))))
         g$name$22646$1POZIn))))
   (g$file-options-macro$20621$1POZIn
     g$file-options-macro$24216$1POZIn
     (case-lambda
       ((g$x$22648$1POZIn)
        (letrec* ((g$valid-option?$22649$1POZIn
                    (case-lambda
                      ((g$x$22654$1POZIn)
                       (if (g$id?$20115$1POZIn g$x$22654$1POZIn)
                         (begin
                           '#f
                           (g$memq$11825$1POZIn
                             (g$id->sym$20116$1POZIn g$x$22654$1POZIn)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$22650$1POZIn)
              ((case-lambda
                 ((g$ls/false$22651$1POZIn)
                  (if (if g$ls/false$22651$1POZIn
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$22652$1POZIn)
                               (if (g$for-all$11831$1POZIn
                                     g$valid-option?$22649$1POZIn
                                     g$opt*$22652$1POZIn)
                                 (begin
                                   '#f
                                   (g$file-options-spec$18978$1POZIn
                                     (g$map$11833$1POZIn
                                       g$id->sym$20116$1POZIn
                                       g$opt*$22652$1POZIn)))
                                 '#f)))
                            g$ls/false$22651$1POZIn))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$22653$1POZIn)
                         (g$bless$20576$1POZIn
                           (list
                             'quote
                             (g$file-options-spec$18978$1POZIn
                               (g$map$11833$1POZIn
                                 g$id->sym$20116$1POZIn
                                 g$opt*$22653$1POZIn))))))
                      g$ls/false$22651$1POZIn)
                    (g$syntax-violation$20732$1POZIn
                      '#f
                      '"invalid syntax"
                      g$t$22650$1POZIn))))
               (g$syntax-dispatch$20613$1POZIn
                 g$t$22650$1POZIn
                 '(_ . each-any)))))
           g$x$22648$1POZIn)))))
   (g$symbol-macro$20622$1POZIn
     g$symbol-macro$24217$1POZIn
     (case-lambda
       ((g$x$22655$1POZIn g$set$22656$1POZIn)
        ((case-lambda
           ((g$t$22657$1POZIn)
            ((case-lambda
               ((g$ls/false$22658$1POZIn)
                (if (if g$ls/false$22658$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$22659$1POZIn)
                             (if (g$id?$20115$1POZIn
                                   g$name$22659$1POZIn)
                               (begin
                                 '#f
                                 (g$memq$11825$1POZIn
                                   (g$id->sym$20116$1POZIn
                                     g$name$22659$1POZIn)
                                   g$set$22656$1POZIn))
                               '#f)))
                          g$ls/false$22658$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$22660$1POZIn)
                       (g$bless$20576$1POZIn
                         (list 'quote g$name$22660$1POZIn))))
                    g$ls/false$22658$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$22657$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22657$1POZIn
               '(_ any)))))
         g$x$22655$1POZIn))))
   (g$macro-transformer$20623$1POZIn
     g$macro-transformer$24218$1POZIn
     (case-lambda
       ((g$x$22661$1POZIn)
        (if (g$procedure?$12667$1POZIn g$x$22661$1POZIn)
          g$x$22661$1POZIn
          (if (g$symbol?$12665$1POZIn g$x$22661$1POZIn)
            ((case-lambda
               ((g$t$22662$1POZIn)
                (if (eqv? g$t$22662$1POZIn 'define-record-type)
                  g$define-record-type-macro$20607$1POZIn
                  (if (eqv? g$t$22662$1POZIn 'define-struct)
                    g$define-struct-macro$20606$1POZIn
                    (if (eqv? g$t$22662$1POZIn 'include)
                      g$include-macro$20601$1POZIn
                      (if (eqv? g$t$22662$1POZIn 'cond)
                        g$cond-macro$20599$1POZIn
                        (if (eqv? g$t$22662$1POZIn 'let)
                          g$let-macro$20579$1POZIn
                          (if (eqv? g$t$22662$1POZIn 'do)
                            g$do-macro$20595$1POZIn
                            (if (eqv? g$t$22662$1POZIn 'or)
                              g$or-macro$20597$1POZIn
                              (if (eqv? g$t$22662$1POZIn 'and)
                                g$and-macro$20598$1POZIn
                                (if (eqv? g$t$22662$1POZIn 'let*)
                                  g$let*-macro$20596$1POZIn
                                  (if (eqv?
                                        g$t$22662$1POZIn
                                        'let-values)
                                    g$let-values-macro$20580$1POZIn
                                    (if (eqv?
                                          g$t$22662$1POZIn
                                          'let*-values)
                                      g$let*-values-macro$20581$1POZIn
                                      (if (eqv?
                                            g$t$22662$1POZIn
                                            'syntax-rules)
                                        g$syntax-rules-macro$20603$1POZIn
                                        (if (eqv?
                                              g$t$22662$1POZIn
                                              'quasiquote)
                                          g$quasiquote-macro$20604$1POZIn
                                          (if (eqv?
                                                g$t$22662$1POZIn
                                                'quasisyntax)
                                            g$quasisyntax-macro$20605$1POZIn
                                            (if (eqv?
                                                  g$t$22662$1POZIn
                                                  'with-syntax)
                                              g$with-syntax-macro$20577$1POZIn
                                              (if (eqv?
                                                    g$t$22662$1POZIn
                                                    'when)
                                                g$when-macro$20569$1POZIn
                                                (if (eqv?
                                                      g$t$22662$1POZIn
                                                      'unless)
                                                  g$unless-macro$20570$1POZIn
                                                  (if (eqv?
                                                        g$t$22662$1POZIn
                                                        'case)
                                                    g$case-macro$20572$1POZIn
                                                    (if (eqv?
                                                          g$t$22662$1POZIn
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$20594$1POZIn
                                                      (if (eqv?
                                                            g$t$22662$1POZIn
                                                            'time)
                                                        g$time-macro$20590$1POZIn
                                                        (if (eqv?
                                                              g$t$22662$1POZIn
                                                              'delay)
                                                          g$delay-macro$20591$1POZIn
                                                          (if (eqv?
                                                                g$t$22662$1POZIn
                                                                'assert)
                                                            g$assert-macro$20592$1POZIn
                                                            (if (eqv?
                                                                  g$t$22662$1POZIn
                                                                  'endianness)
                                                              g$endianness-macro$20593$1POZIn
                                                              (if (eqv?
                                                                    g$t$22662$1POZIn
                                                                    'guard)
                                                                g$guard-macro$20588$1POZIn
                                                                (if (eqv?
                                                                      g$t$22662$1POZIn
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$20589$1POZIn
                                                                  (if (eqv?
                                                                        g$t$22662$1POZIn
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$20582$1POZIn
                                                                    (if (eqv?
                                                                          g$t$22662$1POZIn
                                                                          'trace-define)
                                                                      g$trace-define-macro$20583$1POZIn
                                                                      (if (eqv?
                                                                            g$t$22662$1POZIn
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$20584$1POZIn
                                                                        (if (eqv?
                                                                              g$t$22662$1POZIn
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$20586$1POZIn
                                                                          (if (eqv?
                                                                                g$t$22662$1POZIn
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$20587$1POZIn
                                                                            (if (eqv?
                                                                                  g$t$22662$1POZIn
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$20608$1POZIn
                                                                              (if (eqv?
                                                                                    g$t$22662$1POZIn
                                                                                    'parameterize)
                                                                                g$parameterize-macro$20610$1POZIn
                                                                                (if (eqv?
                                                                                      g$t$22662$1POZIn
                                                                                      'include-into)
                                                                                  g$include-into-macro$20602$1POZIn
                                                                                  (if (eqv?
                                                                                        g$t$22662$1POZIn
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$22663$1POZIn)
                                                                                       (g$symbol-macro$20622$1POZIn
                                                                                         g$x$22663$1POZIn
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$22662$1POZIn
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$22664$1POZIn)
                                                                                         (g$symbol-macro$20622$1POZIn
                                                                                           g$x$22664$1POZIn
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$22662$1POZIn
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$22665$1POZIn)
                                                                                           (g$symbol-macro$20622$1POZIn
                                                                                             g$x$22665$1POZIn
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$22662$1POZIn
                                                                                              'file-options)
                                                                                          g$file-options-macro$20621$1POZIn
                                                                                          (if (g$memv$11826$1POZIn
                                                                                                g$t$22662$1POZIn
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$20609$1POZIn
                                                                                            (begin
                                                                                              '#f
                                                                                              (error
                                                                                                'macro-transformer
                                                                                                '"BUG: invalid macro"
                                                                                                g$x$22661$1POZIn))))))))))))))))))))))))))))))))))))))))))
             g$x$22661$1POZIn)
            (begin
              '#f
              (error
                'core-macro-transformer
                '"BUG: invalid macro"
                g$x$22661$1POZIn)))))))
   (g$local-macro-transformer$20624$1POZIn
     g$local-macro-transformer$24219$1POZIn
     (case-lambda ((g$x$22666$1POZIn) (car g$x$22666$1POZIn))))
   (g$do-macro-call$20625$1POZIn
     g$do-macro-call$24220$1POZIn
     (case-lambda
       ((g$transformer$22667$1POZIn
          g$expr$22668$1POZIn
          g$r$22669$1POZIn)
        (letrec* ((g$return$22670$1POZIn
                    (case-lambda
                      ((g$x$22678$1POZIn)
                       (begin
                         ((letrec ((g$f$22679$1POZIn
                                     (case-lambda
                                       ((g$x$22680$1POZIn)
                                        (if (not (g$stx?$20087$1POZIn
                                                   g$x$22680$1POZIn))
                                          (if (pair? g$x$22680$1POZIn)
                                            (begin
                                              (g$f$22679$1POZIn
                                                (car g$x$22680$1POZIn))
                                              (g$f$22679$1POZIn
                                                (cdr g$x$22680$1POZIn)))
                                            (if (g$vector?$12663$1POZIn
                                                  g$x$22680$1POZIn)
                                              (g$vector-for-each$12733$1POZIn
                                                g$f$22679$1POZIn
                                                g$x$22680$1POZIn)
                                              (if (g$symbol?$12665$1POZIn
                                                    g$x$22680$1POZIn)
                                                (g$syntax-violation$20732$1POZIn
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$22668$1POZIn
                                                  g$x$22680$1POZIn)
                                                (void))))
                                          (void))))))
                            g$f$22679$1POZIn)
                          g$x$22678$1POZIn)
                         (g$add-mark$20104$1POZIn
                           (g$gen-mark$20099$1POZIn)
                           g$x$22678$1POZIn
                           g$expr$22668$1POZIn))))))
          ((case-lambda
             ((g$x$22671$1POZIn)
              (if (g$procedure?$12667$1POZIn g$x$22671$1POZIn)
                (g$return$22670$1POZIn
                  (g$x$22671$1POZIn
                    (case-lambda
                      ((g$id$22672$1POZIn)
                       (begin
                         (if (not (g$id?$20115$1POZIn
                                    g$id$22672$1POZIn))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$22672$1POZIn)
                           (void))
                         ((case-lambda
                            ((g$label$22673$1POZIn)
                             ((case-lambda
                                ((g$binding$22674$1POZIn)
                                 ((case-lambda
                                    ((g$t$22675$1POZIn)
                                     (if (eqv?
                                           g$t$22675$1POZIn
                                           'local-ctv)
                                       (g$cadr$12684$1POZIn
                                         g$binding$22674$1POZIn)
                                       (if (eqv?
                                             g$t$22675$1POZIn
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$22676$1POZIn
                                               g$loc$22677$1POZIn)
                                             (begin
                                               (g$visit-library$19822$1POZIn
                                                 g$lib$22676$1POZIn)
                                               (symbol-value
                                                 g$loc$22677$1POZIn))))
                                          (g$cadr$12684$1POZIn
                                            g$binding$22674$1POZIn)
                                          (g$cddr$12686$1POZIn
                                            g$binding$22674$1POZIn))
                                         (begin '#f '#f)))))
                                  (car g$binding$22674$1POZIn))))
                              (g$label->binding$20130$1POZIn
                                g$label$22673$1POZIn
                                g$r$22669$1POZIn))))
                          (g$id->label$20128$1POZIn
                            g$id$22672$1POZIn)))))))
                (g$return$22670$1POZIn g$x$22671$1POZIn))))
           (g$transformer$22667$1POZIn
             (g$add-mark$20104$1POZIn
               g$anti-mark$20100$1POZIn
               g$expr$22668$1POZIn
               '#f)))))))
   (g$chi-macro$20626$1POZIn
     g$chi-macro$24221$1POZIn
     (case-lambda
       ((g$p$22681$1POZIn g$e$22682$1POZIn g$r$22683$1POZIn)
        (g$do-macro-call$20625$1POZIn
          (g$macro-transformer$20623$1POZIn g$p$22681$1POZIn)
          g$e$22682$1POZIn
          g$r$22683$1POZIn))))
   (g$chi-local-macro$20627$1POZIn
     g$chi-local-macro$24222$1POZIn
     (case-lambda
       ((g$p$22684$1POZIn g$e$22685$1POZIn g$r$22686$1POZIn)
        (g$do-macro-call$20625$1POZIn
          (g$local-macro-transformer$20624$1POZIn g$p$22684$1POZIn)
          g$e$22685$1POZIn
          g$r$22686$1POZIn))))
   (g$chi-global-macro$20628$1POZIn
     g$chi-global-macro$24223$1POZIn
     (case-lambda
       ((g$p$22687$1POZIn g$e$22688$1POZIn g$r$22689$1POZIn)
        ((case-lambda
           ((g$lib$22690$1POZIn g$loc$22691$1POZIn)
            (begin
              (g$visit-library$19822$1POZIn g$lib$22690$1POZIn)
              ((case-lambda
                 ((g$x$22692$1POZIn)
                  ((case-lambda
                     ((g$transformer$22693$1POZIn)
                      (g$do-macro-call$20625$1POZIn
                        g$transformer$22693$1POZIn
                        g$e$22688$1POZIn
                        g$r$22689$1POZIn)))
                   (if (g$procedure?$12667$1POZIn g$x$22692$1POZIn)
                     g$x$22692$1POZIn
                     (begin
                       '#f
                       (assertion-violation
                         'chi-global-macro
                         '"BUG: not a procedure"
                         g$x$22692$1POZIn))))))
               (symbol-value g$loc$22691$1POZIn)))))
         (car g$p$22687$1POZIn)
         (cdr g$p$22687$1POZIn)))))
   (g$chi-expr*$20629$1POZIn
     g$chi-expr*$24224$1POZIn
     (case-lambda
       ((g$e*$22694$1POZIn g$r$22695$1POZIn g$mr$22696$1POZIn)
        (if (null? g$e*$22694$1POZIn)
          '()
          (begin
            '#f
            ((case-lambda
               ((g$e$22697$1POZIn)
                (cons
                  g$e$22697$1POZIn
                  (g$chi-expr*$20629$1POZIn
                    (cdr g$e*$22694$1POZIn)
                    g$r$22695$1POZIn
                    g$mr$22696$1POZIn))))
             (g$chi-expr$20631$1POZIn
               (car g$e*$22694$1POZIn)
               g$r$22695$1POZIn
               g$mr$22696$1POZIn)))))))
   (g$chi-application$20630$1POZIn
     g$chi-application$24225$1POZIn
     (case-lambda
       ((g$e$22698$1POZIn g$r$22699$1POZIn g$mr$22700$1POZIn)
        ((case-lambda
           ((g$t$22701$1POZIn)
            ((case-lambda
               ((g$ls/false$22702$1POZIn)
                (if g$ls/false$22702$1POZIn
                  (apply
                    (case-lambda
                      ((g$rator$22703$1POZIn g$rands$22704$1POZIn)
                       ((case-lambda
                          ((g$rator$22705$1POZIn)
                           (cons
                             g$rator$22705$1POZIn
                             (g$chi-expr*$20629$1POZIn
                               g$rands$22704$1POZIn
                               g$r$22699$1POZIn
                               g$mr$22700$1POZIn))))
                        (g$chi-expr$20631$1POZIn
                          g$rator$22703$1POZIn
                          g$r$22699$1POZIn
                          g$mr$22700$1POZIn))))
                    g$ls/false$22702$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$22701$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22701$1POZIn
               '(any . each-any)))))
         g$e$22698$1POZIn))))
   (g$chi-expr$20631$1POZIn
     g$chi-expr$24226$1POZIn
     (case-lambda
       ((g$e$22706$1POZIn g$r$22707$1POZIn g$mr$22708$1POZIn)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$20135$1POZIn
               g$e$22706$1POZIn
               g$r$22707$1POZIn)))
          (case-lambda
            ((g$type$22712$1POZIn
               g$value$22713$1POZIn
               g$kwd$22714$1POZIn)
             ((case-lambda
                ((g$kwd$22715$1POZIn
                   g$value$22716$1POZIn
                   g$type$22717$1POZIn)
                 ((case-lambda
                    ((g$t$22718$1POZIn)
                     (if (eqv? g$t$22718$1POZIn 'core-macro)
                       ((case-lambda
                          ((g$transformer$22719$1POZIn)
                           (g$transformer$22719$1POZIn
                             g$e$22706$1POZIn
                             g$r$22707$1POZIn
                             g$mr$22708$1POZIn)))
                        (g$core-macro-transformer$20620$1POZIn
                          g$value$22716$1POZIn))
                       (if (eqv? g$t$22718$1POZIn 'global)
                         ((case-lambda
                            ((g$lib$22720$1POZIn)
                             ((case-lambda
                                ((g$loc$22721$1POZIn)
                                 (begin
                                   ((g$inv-collector$20668$1POZIn)
                                    g$lib$22720$1POZIn)
                                   g$loc$22721$1POZIn)))
                              (cdr g$value$22716$1POZIn))))
                          (car g$value$22716$1POZIn))
                         (if (eqv? g$t$22718$1POZIn 'core-prim)
                           ((case-lambda
                              ((g$name$22722$1POZIn)
                               (list 'primitive g$name$22722$1POZIn)))
                            g$value$22716$1POZIn)
                           (if (eqv? g$t$22718$1POZIn 'call)
                             (g$chi-application$20630$1POZIn
                               g$e$22706$1POZIn
                               g$r$22707$1POZIn
                               g$mr$22708$1POZIn)
                             (if (eqv? g$t$22718$1POZIn 'lexical)
                               ((case-lambda
                                  ((g$lex$22723$1POZIn)
                                   g$lex$22723$1POZIn))
                                (g$lexical-var$20557$1POZIn
                                  g$value$22716$1POZIn))
                               (if (g$memv$11826$1POZIn
                                     g$t$22718$1POZIn
                                     '(global-macro global-macro!))
                                 (g$chi-expr$20631$1POZIn
                                   (g$chi-global-macro$20628$1POZIn
                                     g$value$22716$1POZIn
                                     g$e$22706$1POZIn
                                     g$r$22707$1POZIn)
                                   g$r$22707$1POZIn
                                   g$mr$22708$1POZIn)
                                 (if (g$memv$11826$1POZIn
                                       g$t$22718$1POZIn
                                       '(local-macro local-macro!))
                                   (g$chi-expr$20631$1POZIn
                                     (g$chi-local-macro$20627$1POZIn
                                       g$value$22716$1POZIn
                                       g$e$22706$1POZIn
                                       g$r$22707$1POZIn)
                                     g$r$22707$1POZIn
                                     g$mr$22708$1POZIn)
                                   (if (g$memv$11826$1POZIn
                                         g$t$22718$1POZIn
                                         '(macro macro!))
                                     (g$chi-expr$20631$1POZIn
                                       (g$chi-macro$20626$1POZIn
                                         g$value$22716$1POZIn
                                         g$e$22706$1POZIn
                                         g$r$22707$1POZIn)
                                       g$r$22707$1POZIn
                                       g$mr$22708$1POZIn)
                                     (if (eqv?
                                           g$t$22718$1POZIn
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$22724$1POZIn)
                                           (list
                                             'quote
                                             g$datum$22724$1POZIn)))
                                        g$value$22716$1POZIn)
                                       (if (eqv? g$t$22718$1POZIn 'set!)
                                         (g$chi-set!$20632$1POZIn
                                           g$e$22706$1POZIn
                                           g$r$22707$1POZIn
                                           g$mr$22708$1POZIn)
                                         (if (eqv?
                                               g$t$22718$1POZIn
                                               'begin)
                                           ((case-lambda
                                              ((g$t$22725$1POZIn)
                                               ((case-lambda
                                                  ((g$ls/false$22726$1POZIn)
                                                   (if g$ls/false$22726$1POZIn
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$22727$1POZIn
                                                            g$x*$22728$1POZIn)
                                                          (g$build-sequence$20040$1POZIn
                                                            '#f
                                                            (g$chi-expr*$20629$1POZIn
                                                              (cons
                                                                g$x$22727$1POZIn
                                                                g$x*$22728$1POZIn)
                                                              g$r$22707$1POZIn
                                                              g$mr$22708$1POZIn))))
                                                       g$ls/false$22726$1POZIn)
                                                     (g$syntax-violation$20732$1POZIn
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$22725$1POZIn))))
                                                (g$syntax-dispatch$20613$1POZIn
                                                  g$t$22725$1POZIn
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$22706$1POZIn)
                                           (if (g$memv$11826$1POZIn
                                                 g$t$22718$1POZIn
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$22729$1POZIn)
                                                 ((case-lambda
                                                    ((g$ls/false$22730$1POZIn)
                                                     (if (if g$ls/false$22730$1POZIn
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$22731$1POZIn
                                                                    g$xrhs*$22732$1POZIn
                                                                    g$xbody$22733$1POZIn
                                                                    g$xbody*$22734$1POZIn)
                                                                  (if (not (g$valid-bound-ids?$20120$1POZIn
                                                                             g$xlhs*$22731$1POZIn))
                                                                    (g$syntax-violation$20732$1POZIn
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$22706$1POZIn)
                                                                    (void))))
                                                               g$ls/false$22730$1POZIn))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$22735$1POZIn
                                                              g$xrhs*$22736$1POZIn
                                                              g$xbody$22737$1POZIn
                                                              g$xbody*$22738$1POZIn)
                                                            ((case-lambda
                                                               ((g$xlab*$22739$1POZIn)
                                                                ((case-lambda
                                                                   ((g$xrib$22740$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$xb*$22741$1POZIn)
                                                                        (g$build-sequence$20040$1POZIn
                                                                          '#f
                                                                          (g$chi-expr*$20629$1POZIn
                                                                            (g$map$11833$1POZIn
                                                                              (case-lambda
                                                                                ((g$x$22742$1POZIn)
                                                                                 (g$add-subst$20105$1POZIn
                                                                                   g$xrib$22740$1POZIn
                                                                                   g$x$22742$1POZIn)))
                                                                              (cons
                                                                                g$xbody$22737$1POZIn
                                                                                g$xbody*$22738$1POZIn))
                                                                            (append
                                                                              (g$map$11833$1POZIn
                                                                                cons
                                                                                g$xlab*$22739$1POZIn
                                                                                g$xb*$22741$1POZIn)
                                                                              g$r$22707$1POZIn)
                                                                            (append
                                                                              (g$map$11833$1POZIn
                                                                                cons
                                                                                g$xlab*$22739$1POZIn
                                                                                g$xb*$22741$1POZIn)
                                                                              g$mr$22708$1POZIn)))))
                                                                     (g$map$11833$1POZIn
                                                                       (case-lambda
                                                                         ((g$x$22743$1POZIn)
                                                                          (g$make-eval-transformer$20163$1POZIn
                                                                            (g$expand-transformer$20661$1POZIn
                                                                              (if (eq? g$type$22717$1POZIn
                                                                                       'let-syntax)
                                                                                g$x$22743$1POZIn
                                                                                (g$add-subst$20105$1POZIn
                                                                                  g$xrib$22740$1POZIn
                                                                                  g$x$22743$1POZIn))
                                                                              g$mr$22708$1POZIn))))
                                                                       g$xrhs*$22736$1POZIn))))
                                                                 (g$make-full-rib$20081$1POZIn
                                                                   g$xlhs*$22735$1POZIn
                                                                   g$xlab*$22739$1POZIn))))
                                                             (g$map$11833$1POZIn
                                                               g$gen-label$20052$1POZIn
                                                               g$xlhs*$22735$1POZIn))))
                                                         g$ls/false$22730$1POZIn)
                                                       (g$syntax-violation$20732$1POZIn
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$22729$1POZIn))))
                                                  (g$syntax-dispatch$20613$1POZIn
                                                    g$t$22729$1POZIn
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$22706$1POZIn)
                                             (if (eqv?
                                                   g$t$22718$1POZIn
                                                   'displaced-lexical)
                                               (g$syntax-violation$20732$1POZIn
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$22706$1POZIn)
                                               (if (eqv?
                                                     g$t$22718$1POZIn
                                                     'syntax)
                                                 (g$syntax-violation$20732$1POZIn
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$22706$1POZIn)
                                                 (if (g$memv$11826$1POZIn
                                                       g$t$22718$1POZIn
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$20732$1POZIn
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$22744$1POZIn)
                                                           (if (eqv?
                                                                 g$t$22744$1POZIn
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$22744$1POZIn
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$22744$1POZIn
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$22744$1POZIn
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$22744$1POZIn
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$22744$1POZIn
                                                                           'export)
                                                                       '"an export declaration"
                                                                       (begin
                                                                         '#f
                                                                         '"a non-expression")))))))))
                                                        g$type$22717$1POZIn)
                                                       '" was found where an expression was expected")
                                                     g$e$22706$1POZIn)
                                                   (if (eqv?
                                                         g$t$22718$1POZIn
                                                         'mutable)
                                                     (g$syntax-violation$20732$1POZIn
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$22706$1POZIn)
                                                     (begin
                                                       '#f
                                                       (g$syntax-violation$20732$1POZIn
                                                         '#f
                                                         '"invalid expression"
                                                         g$e$22706$1POZIn))))))))))))))))))))
                  g$type$22717$1POZIn)))
              g$kwd$22714$1POZIn
              g$value$22713$1POZIn
              g$type$22712$1POZIn)))))))
   (g$chi-set!$20632$1POZIn
     g$chi-set!$24227$1POZIn
     (case-lambda
       ((g$e$22745$1POZIn g$r$22746$1POZIn g$mr$22747$1POZIn)
        ((case-lambda
           ((g$t$22748$1POZIn)
            ((case-lambda
               ((g$ls/false$22749$1POZIn)
                (if (if g$ls/false$22749$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$22750$1POZIn g$v$22751$1POZIn)
                             (g$id?$20115$1POZIn g$x$22750$1POZIn)))
                          g$ls/false$22749$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$22752$1POZIn g$v$22753$1POZIn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$20135$1POZIn
                              g$x$22752$1POZIn
                              g$r$22746$1POZIn)))
                         (case-lambda
                           ((g$type$22757$1POZIn
                              g$value$22758$1POZIn
                              g$kwd$22759$1POZIn)
                            ((case-lambda
                               ((g$kwd$22760$1POZIn
                                  g$value$22761$1POZIn
                                  g$type$22762$1POZIn)
                                ((case-lambda
                                   ((g$t$22763$1POZIn)
                                    (if (eqv? g$t$22763$1POZIn 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$20559$1POZIn
                                          g$value$22761$1POZIn
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$20557$1POZIn
                                            g$value$22761$1POZIn)
                                          (g$chi-expr$20631$1POZIn
                                            g$v$22753$1POZIn
                                            g$r$22746$1POZIn
                                            g$mr$22747$1POZIn)))
                                      (if (eqv?
                                            g$t$22763$1POZIn
                                            'core-prim)
                                        (g$syntax-violation$20732$1POZIn
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$22745$1POZIn)
                                        (if (eqv?
                                              g$t$22763$1POZIn
                                              'global)
                                          (g$syntax-violation$20732$1POZIn
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$22745$1POZIn)
                                          (if (eqv?
                                                g$t$22763$1POZIn
                                                'global-macro!)
                                            (g$chi-expr$20631$1POZIn
                                              (g$chi-global-macro$20628$1POZIn
                                                g$value$22761$1POZIn
                                                g$e$22745$1POZIn
                                                g$r$22746$1POZIn)
                                              g$r$22746$1POZIn
                                              g$mr$22747$1POZIn)
                                            (if (eqv?
                                                  g$t$22763$1POZIn
                                                  'local-macro!)
                                              (g$chi-expr$20631$1POZIn
                                                (g$chi-local-macro$20627$1POZIn
                                                  g$value$22761$1POZIn
                                                  g$e$22745$1POZIn
                                                  g$r$22746$1POZIn)
                                                g$r$22746$1POZIn
                                                g$mr$22747$1POZIn)
                                              (if (eqv?
                                                    g$t$22763$1POZIn
                                                    'mutable)
                                                (g$syntax-violation$20732$1POZIn
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$22745$1POZIn)
                                                (begin
                                                  '#f
                                                  (g$syntax-violation$20732$1POZIn
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$22745$1POZIn))))))))))
                                 g$type$22762$1POZIn)))
                             g$kwd$22759$1POZIn
                             g$value$22758$1POZIn
                             g$type$22757$1POZIn))))))
                    g$ls/false$22749$1POZIn)
                  (g$syntax-violation$20732$1POZIn
                    '#f
                    '"invalid syntax"
                    g$t$22748$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22748$1POZIn
               '(_ any any)))))
         g$e$22745$1POZIn))))
   (g$verify-formals$20633$1POZIn
     g$verify-formals$24228$1POZIn
     (case-lambda
       ((g$fmls$22764$1POZIn g$stx$22765$1POZIn)
        ((case-lambda
           ((g$t$22766$1POZIn)
            ((case-lambda
               ((g$ls/false$22767$1POZIn)
                (if g$ls/false$22767$1POZIn
                  (apply
                    (case-lambda
                      ((g$x*$22768$1POZIn)
                       (if (not (g$valid-bound-ids?$20120$1POZIn
                                  g$x*$22768$1POZIn))
                         (g$invalid-fmls-error$20578$1POZIn
                           g$stx$22765$1POZIn
                           g$fmls$22764$1POZIn)
                         (void))))
                    g$ls/false$22767$1POZIn)
                  ((case-lambda
                     ((g$t$22769$1POZIn)
                      ((case-lambda
                         ((g$ls/false$22770$1POZIn)
                          (if g$ls/false$22770$1POZIn
                            (apply
                              (case-lambda
                                ((g$x*$22771$1POZIn g$x$22772$1POZIn)
                                 (if (not (g$valid-bound-ids?$20120$1POZIn
                                            (cons
                                              g$x$22772$1POZIn
                                              g$x*$22771$1POZIn)))
                                   (g$invalid-fmls-error$20578$1POZIn
                                     g$stx$22765$1POZIn
                                     g$fmls$22764$1POZIn)
                                   (void))))
                              g$ls/false$22770$1POZIn)
                            ((case-lambda
                               ((g$t$22773$1POZIn)
                                ((case-lambda
                                   ((g$ls/false$22774$1POZIn)
                                    (if g$ls/false$22774$1POZIn
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$stx$22765$1POZIn)))
                                        g$ls/false$22774$1POZIn)
                                      (g$syntax-violation$20732$1POZIn
                                        '#f
                                        '"invalid syntax"
                                        g$t$22773$1POZIn))))
                                 (g$syntax-dispatch$20613$1POZIn
                                   g$t$22773$1POZIn
                                   '_))))
                             g$t$22769$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$22769$1POZIn
                         '#(each+ any () any)))))
                   g$t$22766$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22766$1POZIn
               'each-any))))
         g$fmls$22764$1POZIn))))
   (g$chi-lambda-clause$20634$1POZIn
     g$chi-lambda-clause$24229$1POZIn
     (case-lambda
       ((g$stx$22775$1POZIn
          g$fmls$22776$1POZIn
          g$body*$22777$1POZIn
          g$r$22778$1POZIn
          g$mr$22779$1POZIn)
        ((case-lambda
           ((g$t$22780$1POZIn)
            ((case-lambda
               ((g$ls/false$22781$1POZIn)
                (if g$ls/false$22781$1POZIn
                  (apply
                    (case-lambda
                      ((g$x*$22782$1POZIn)
                       (begin
                         (g$verify-formals$20633$1POZIn
                           g$fmls$22776$1POZIn
                           g$stx$22775$1POZIn)
                         ((case-lambda
                            ((g$lex*$22783$1POZIn g$lab*$22784$1POZIn)
                             (values
                               g$lex*$22783$1POZIn
                               (g$chi-internal$20642$1POZIn
                                 (g$add-subst$20105$1POZIn
                                   (g$make-full-rib$20081$1POZIn
                                     g$x*$22782$1POZIn
                                     g$lab*$22784$1POZIn)
                                   g$body*$22777$1POZIn)
                                 (g$add-lexicals$20561$1POZIn
                                   g$lab*$22784$1POZIn
                                   g$lex*$22783$1POZIn
                                   g$r$22778$1POZIn)
                                 g$mr$22779$1POZIn))))
                          (g$map$11833$1POZIn
                            g$gen-lexical$20050$1POZIn
                            g$x*$22782$1POZIn)
                          (g$map$11833$1POZIn
                            g$gen-label$20052$1POZIn
                            g$x*$22782$1POZIn)))))
                    g$ls/false$22781$1POZIn)
                  ((case-lambda
                     ((g$t$22785$1POZIn)
                      ((case-lambda
                         ((g$ls/false$22786$1POZIn)
                          (if g$ls/false$22786$1POZIn
                            (apply
                              (case-lambda
                                ((g$x*$22787$1POZIn g$x$22788$1POZIn)
                                 (begin
                                   (g$verify-formals$20633$1POZIn
                                     g$fmls$22776$1POZIn
                                     g$stx$22775$1POZIn)
                                   ((case-lambda
                                      ((g$lex*$22789$1POZIn
                                         g$lab*$22790$1POZIn
                                         g$lex$22791$1POZIn
                                         g$lab$22792$1POZIn)
                                       (values
                                         (append
                                           g$lex*$22789$1POZIn
                                           g$lex$22791$1POZIn)
                                         (g$chi-internal$20642$1POZIn
                                           (g$add-subst$20105$1POZIn
                                             (g$make-full-rib$20081$1POZIn
                                               (cons
                                                 g$x$22788$1POZIn
                                                 g$x*$22787$1POZIn)
                                               (cons
                                                 g$lab$22792$1POZIn
                                                 g$lab*$22790$1POZIn))
                                             g$body*$22777$1POZIn)
                                           (g$add-lexicals$20561$1POZIn
                                             (cons
                                               g$lab$22792$1POZIn
                                               g$lab*$22790$1POZIn)
                                             (cons
                                               g$lex$22791$1POZIn
                                               g$lex*$22789$1POZIn)
                                             g$r$22778$1POZIn)
                                           g$mr$22779$1POZIn))))
                                    (g$map$11833$1POZIn
                                      g$gen-lexical$20050$1POZIn
                                      g$x*$22787$1POZIn)
                                    (g$map$11833$1POZIn
                                      g$gen-label$20052$1POZIn
                                      g$x*$22787$1POZIn)
                                    (g$gen-lexical$20050$1POZIn
                                      g$x$22788$1POZIn)
                                    (g$gen-label$20052$1POZIn
                                      g$x$22788$1POZIn)))))
                              g$ls/false$22786$1POZIn)
                            ((case-lambda
                               ((g$t$22793$1POZIn)
                                ((case-lambda
                                   ((g$ls/false$22794$1POZIn)
                                    (if g$ls/false$22794$1POZIn
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$20732$1POZIn
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$22776$1POZIn)))
                                        g$ls/false$22794$1POZIn)
                                      (g$syntax-violation$20732$1POZIn
                                        '#f
                                        '"invalid syntax"
                                        g$t$22793$1POZIn))))
                                 (g$syntax-dispatch$20613$1POZIn
                                   g$t$22793$1POZIn
                                   '_))))
                             g$t$22785$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$22785$1POZIn
                         '#(each+ any () any)))))
                   g$t$22780$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22780$1POZIn
               'each-any))))
         g$fmls$22776$1POZIn))))
   (g$chi-lambda-clause*$20635$1POZIn
     g$chi-lambda-clause*$24230$1POZIn
     (case-lambda
       ((g$stx$22795$1POZIn
          g$fmls*$22796$1POZIn
          g$body**$22797$1POZIn
          g$r$22798$1POZIn
          g$mr$22799$1POZIn)
        (if (null? g$fmls*$22796$1POZIn)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$20634$1POZIn
                   g$stx$22795$1POZIn
                   (car g$fmls*$22796$1POZIn)
                   (car g$body**$22797$1POZIn)
                   g$r$22798$1POZIn
                   g$mr$22799$1POZIn)))
              (case-lambda
                ((g$a$22802$1POZIn g$b$22803$1POZIn)
                 ((case-lambda
                    ((g$b$22804$1POZIn g$a$22805$1POZIn)
                     (call-with-values
                       (case-lambda
                         (()
                          (g$chi-lambda-clause*$20635$1POZIn
                            g$stx$22795$1POZIn
                            (cdr g$fmls*$22796$1POZIn)
                            (cdr g$body**$22797$1POZIn)
                            g$r$22798$1POZIn
                            g$mr$22799$1POZIn)))
                       (case-lambda
                         ((g$a*$22808$1POZIn g$b*$22809$1POZIn)
                          ((case-lambda
                             ((g$b*$22810$1POZIn g$a*$22811$1POZIn)
                              (values
                                (cons
                                  g$a$22805$1POZIn
                                  g$a*$22811$1POZIn)
                                (cons
                                  g$b$22804$1POZIn
                                  g$b*$22810$1POZIn))))
                           g$b*$22809$1POZIn
                           g$a*$22808$1POZIn))))))
                  g$b$22803$1POZIn
                  g$a$22802$1POZIn)))))))))
   (g$chi-defun$20636$1POZIn
     g$chi-defun$24231$1POZIn
     (case-lambda
       ((g$x$22812$1POZIn g$r$22813$1POZIn g$mr$22814$1POZIn)
        ((case-lambda
           ((g$fmls$22815$1POZIn g$body*$22816$1POZIn)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$20634$1POZIn
                   g$fmls$22815$1POZIn
                   g$fmls$22815$1POZIn
                   g$body*$22816$1POZIn
                   g$r$22813$1POZIn
                   g$mr$22814$1POZIn)))
              (case-lambda
                ((g$fmls$22819$1POZIn g$body$22820$1POZIn)
                 ((case-lambda
                    ((g$body$22821$1POZIn g$fmls$22822$1POZIn)
                     (g$build-lambda$20037$1POZIn
                       '#f
                       g$fmls$22822$1POZIn
                       g$body$22821$1POZIn)))
                  g$body$22820$1POZIn
                  g$fmls$22819$1POZIn))))))
         (car g$x$22812$1POZIn)
         (cdr g$x$22812$1POZIn)))))
   (g$chi-rhs$20637$1POZIn
     g$chi-rhs$24232$1POZIn
     (case-lambda
       ((g$rhs$22823$1POZIn g$r$22824$1POZIn g$mr$22825$1POZIn)
        ((case-lambda
           ((g$t$22826$1POZIn)
            (if (eqv? g$t$22826$1POZIn 'defun)
              (g$chi-defun$20636$1POZIn
                (cdr g$rhs$22823$1POZIn)
                g$r$22824$1POZIn
                g$mr$22825$1POZIn)
              (if (eqv? g$t$22826$1POZIn 'expr)
                ((case-lambda
                   ((g$expr$22827$1POZIn)
                    (g$chi-expr$20631$1POZIn
                      g$expr$22827$1POZIn
                      g$r$22824$1POZIn
                      g$mr$22825$1POZIn)))
                 (cdr g$rhs$22823$1POZIn))
                (if (eqv? g$t$22826$1POZIn 'top-expr)
                  ((case-lambda
                     ((g$expr$22828$1POZIn)
                      (g$build-sequence$20040$1POZIn
                        '#f
                        (list
                          (g$chi-expr$20631$1POZIn
                            g$expr$22828$1POZIn
                            g$r$22824$1POZIn
                            g$mr$22825$1POZIn)
                          (g$build-void$20041$1POZIn)))))
                   (cdr g$rhs$22823$1POZIn))
                  (begin
                    '#f
                    (assertion-violation
                      'chi-rhs
                      '"BUG: invalid rhs"
                      g$rhs$22823$1POZIn)))))))
         (car g$rhs$22823$1POZIn)))))
   (g$expand-interaction-rhs*/init*$20638$1POZIn
     g$expand-interaction-rhs*/init*$24233$1POZIn
     (case-lambda
       ((g$lhs*$22829$1POZIn
          g$rhs*$22830$1POZIn
          g$init*$22831$1POZIn
          g$r$22832$1POZIn
          g$mr$22833$1POZIn)
        ((letrec ((g$f$22834$1POZIn
                    (case-lambda
                      ((g$lhs*$22835$1POZIn g$rhs*$22836$1POZIn)
                       (if (null? g$lhs*$22835$1POZIn)
                         (g$map$11833$1POZIn
                           (case-lambda
                             ((g$x$22837$1POZIn)
                              (g$chi-expr$20631$1POZIn
                                g$x$22837$1POZIn
                                g$r$22832$1POZIn
                                g$mr$22833$1POZIn)))
                           g$init*$22831$1POZIn)
                         (begin
                           '#f
                           ((case-lambda
                              ((g$lhs$22838$1POZIn g$rhs$22839$1POZIn)
                               ((case-lambda
                                  ((g$t$22840$1POZIn)
                                   (if (eqv? g$t$22840$1POZIn 'defun)
                                     ((case-lambda
                                        ((g$rhs$22841$1POZIn)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$22838$1POZIn
                                             g$rhs$22841$1POZIn)
                                           (g$f$22834$1POZIn
                                             (cdr g$lhs*$22835$1POZIn)
                                             (cdr g$rhs*$22836$1POZIn)))))
                                      (g$chi-defun$20636$1POZIn
                                        (cdr g$rhs$22839$1POZIn)
                                        g$r$22832$1POZIn
                                        g$mr$22833$1POZIn))
                                     (if (eqv? g$t$22840$1POZIn 'expr)
                                       ((case-lambda
                                          ((g$rhs$22842$1POZIn)
                                           (cons
                                             (list
                                               'set!
                                               g$lhs$22838$1POZIn
                                               g$rhs$22842$1POZIn)
                                             (g$f$22834$1POZIn
                                               (cdr g$lhs*$22835$1POZIn)
                                               (cdr g$rhs*$22836$1POZIn)))))
                                        (g$chi-expr$20631$1POZIn
                                          (cdr g$rhs$22839$1POZIn)
                                          g$r$22832$1POZIn
                                          g$mr$22833$1POZIn))
                                       (if (eqv?
                                             g$t$22840$1POZIn
                                             'top-expr)
                                         ((case-lambda
                                            ((g$e$22843$1POZIn)
                                             (cons
                                               g$e$22843$1POZIn
                                               (g$f$22834$1POZIn
                                                 (cdr g$lhs*$22835$1POZIn)
                                                 (cdr g$rhs*$22836$1POZIn)))))
                                          (g$chi-expr$20631$1POZIn
                                            (cdr g$rhs$22839$1POZIn)
                                            g$r$22832$1POZIn
                                            g$mr$22833$1POZIn))
                                         (begin
                                           '#f
                                           (error
                                             'expand-interaction
                                             '"invallid"
                                             g$rhs$22839$1POZIn)))))))
                                (car g$rhs$22839$1POZIn))))
                            (car g$lhs*$22835$1POZIn)
                            (car g$rhs*$22836$1POZIn))))))))
           g$f$22834$1POZIn)
         g$lhs*$22829$1POZIn
         g$rhs*$22830$1POZIn))))
   (g$chi-rhs*$20639$1POZIn
     g$chi-rhs*$24234$1POZIn
     (case-lambda
       ((g$rhs*$22844$1POZIn g$r$22845$1POZIn g$mr$22846$1POZIn)
        ((letrec ((g$f$22847$1POZIn
                    (case-lambda
                      ((g$ls$22848$1POZIn)
                       (if (null? g$ls$22848$1POZIn)
                         '()
                         (begin
                           '#f
                           ((case-lambda
                              ((g$a$22849$1POZIn)
                               (cons
                                 g$a$22849$1POZIn
                                 (g$f$22847$1POZIn
                                   (cdr g$ls$22848$1POZIn)))))
                            (g$chi-rhs$20637$1POZIn
                              (car g$ls$22848$1POZIn)
                              g$r$22845$1POZIn
                              g$mr$22846$1POZIn))))))))
           g$f$22847$1POZIn)
         g$rhs*$22844$1POZIn))))
   (g$find-bound=?$20640$1POZIn
     g$find-bound=?$24235$1POZIn
     (case-lambda
       ((g$x$22850$1POZIn g$lhs*$22851$1POZIn g$rhs*$22852$1POZIn)
        (if (null? g$lhs*$22851$1POZIn)
          '#f
          (if (g$bound-id=?$20118$1POZIn
                g$x$22850$1POZIn
                (car g$lhs*$22851$1POZIn))
            (car g$rhs*$22852$1POZIn)
            (begin
              '#f
              (g$find-bound=?$20640$1POZIn
                g$x$22850$1POZIn
                (cdr g$lhs*$22851$1POZIn)
                (cdr g$rhs*$22852$1POZIn))))))))
   (g$find-dups$20641$1POZIn
     g$find-dups$24236$1POZIn
     (case-lambda
       ((g$ls$22853$1POZIn)
        ((letrec ((g$f$22854$1POZIn
                    (case-lambda
                      ((g$ls$22855$1POZIn g$dups$22856$1POZIn)
                       (if (null? g$ls$22855$1POZIn)
                         g$dups$22856$1POZIn
                         ((case-lambda
                            ((g$t$22857$1POZIn)
                             (if g$t$22857$1POZIn
                               ((case-lambda
                                  ((g$x$22858$1POZIn)
                                   (g$f$22854$1POZIn
                                     (cdr g$ls$22855$1POZIn)
                                     (cons
                                       (list
                                         (car g$ls$22855$1POZIn)
                                         g$x$22858$1POZIn)
                                       g$dups$22856$1POZIn))))
                                g$t$22857$1POZIn)
                               (begin
                                 '#f
                                 (g$f$22854$1POZIn
                                   (cdr g$ls$22855$1POZIn)
                                   g$dups$22856$1POZIn)))))
                          (g$find-bound=?$20640$1POZIn
                            (car g$ls$22855$1POZIn)
                            (cdr g$ls$22855$1POZIn)
                            (cdr g$ls$22855$1POZIn))))))))
           g$f$22854$1POZIn)
         g$ls$22853$1POZIn
         '()))))
   (g$chi-internal$20642$1POZIn
     g$chi-internal$24237$1POZIn
     (case-lambda
       ((g$e*$22859$1POZIn g$r$22860$1POZIn g$mr$22861$1POZIn)
        ((case-lambda
           ((g$rib$22862$1POZIn)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$20660$1POZIn
                   (g$map$11833$1POZIn
                     (case-lambda
                       ((g$x$22871$1POZIn)
                        (g$add-subst$20105$1POZIn
                          g$rib$22862$1POZIn
                          g$x$22871$1POZIn)))
                     (g$syntax->list$20114$1POZIn g$e*$22859$1POZIn))
                   g$r$22860$1POZIn
                   g$mr$22861$1POZIn
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$22862$1POZIn
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$22872$1POZIn
                   g$r$22873$1POZIn
                   g$mr$22874$1POZIn
                   g$lex*$22875$1POZIn
                   g$rhs*$22876$1POZIn
                   g$mod**$22877$1POZIn
                   g$kwd*$22878$1POZIn
                   g$_exp*$22879$1POZIn)
                 ((case-lambda
                    ((g$_exp*$22880$1POZIn
                       g$kwd*$22881$1POZIn
                       g$mod**$22882$1POZIn
                       g$rhs*$22883$1POZIn
                       g$lex*$22884$1POZIn
                       g$mr$22885$1POZIn
                       g$r$22886$1POZIn
                       g$e*$22887$1POZIn)
                     (begin
                       (if (null? g$e*$22887$1POZIn)
                         (g$syntax-violation$20732$1POZIn
                           '#f
                           '"no expression in body"
                           g$e*$22887$1POZIn)
                         (void))
                       ((case-lambda
                          ((g$init*$22888$1POZIn)
                           ((case-lambda
                              ((g$rhs*$22889$1POZIn)
                               (g$build-letrec*$20043$1POZIn
                                 '#f
                                 (g$reverse$12682$1POZIn
                                   g$lex*$22884$1POZIn)
                                 (g$reverse$12682$1POZIn
                                   g$rhs*$22889$1POZIn)
                                 (g$build-sequence$20040$1POZIn
                                   '#f
                                   g$init*$22888$1POZIn))))
                            (g$chi-rhs*$20639$1POZIn
                              g$rhs*$22883$1POZIn
                              g$r$22886$1POZIn
                              g$mr$22885$1POZIn))))
                        (g$chi-expr*$20629$1POZIn
                          (append
                            (apply
                              append
                              (g$reverse$12682$1POZIn
                                g$mod**$22882$1POZIn))
                            g$e*$22887$1POZIn)
                          g$r$22886$1POZIn
                          g$mr$22885$1POZIn)))))
                  g$_exp*$22879$1POZIn
                  g$kwd*$22878$1POZIn
                  g$mod**$22877$1POZIn
                  g$rhs*$22876$1POZIn
                  g$lex*$22875$1POZIn
                  g$mr$22874$1POZIn
                  g$r$22873$1POZIn
                  g$e*$22872$1POZIn))))))
         (g$make-empty-rib$20073$1POZIn)))))
   (g$parse-module$20643$1POZIn
     g$parse-module$24238$1POZIn
     (case-lambda
       ((g$e$22890$1POZIn)
        ((case-lambda
           ((g$t$22891$1POZIn)
            ((case-lambda
               ((g$ls/false$22892$1POZIn)
                (if g$ls/false$22892$1POZIn
                  (apply
                    (case-lambda
                      ((g$export*$22893$1POZIn g$b*$22894$1POZIn)
                       (begin
                         (if (not (g$for-all$11831$1POZIn
                                    g$id?$20115$1POZIn
                                    g$export*$22893$1POZIn))
                           (g$syntax-violation$20732$1POZIn
                             '#f
                             '"module exports must be identifiers"
                             g$e$22890$1POZIn)
                           (void))
                         (values
                           '#f
                           (g$list->vector$12676$1POZIn
                             g$export*$22893$1POZIn)
                           g$b*$22894$1POZIn))))
                    g$ls/false$22892$1POZIn)
                  ((case-lambda
                     ((g$t$22895$1POZIn)
                      ((case-lambda
                         ((g$ls/false$22896$1POZIn)
                          (if g$ls/false$22896$1POZIn
                            (apply
                              (case-lambda
                                ((g$name$22897$1POZIn
                                   g$export*$22898$1POZIn
                                   g$b*$22899$1POZIn)
                                 (begin
                                   (if (not (g$id?$20115$1POZIn
                                              g$name$22897$1POZIn))
                                     (g$syntax-violation$20732$1POZIn
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$22890$1POZIn)
                                     (void))
                                   (if (not (g$for-all$11831$1POZIn
                                              g$id?$20115$1POZIn
                                              g$export*$22898$1POZIn))
                                     (g$syntax-violation$20732$1POZIn
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$22890$1POZIn)
                                     (void))
                                   (values
                                     g$name$22897$1POZIn
                                     (g$list->vector$12676$1POZIn
                                       g$export*$22898$1POZIn)
                                     g$b*$22899$1POZIn))))
                              g$ls/false$22896$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$22895$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$22895$1POZIn
                         '(_ any each-any . each-any)))))
                   g$t$22891$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$22891$1POZIn
               '(_ each-any . each-any)))))
         g$e$22890$1POZIn))))
   (g$10130$20644$1POZIn
     g$10130$24239$1POZIn
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$10133$1POZIn
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$10132$20645$1POZIn g$10132$24240$1POZIn '#f)
   (g$10131$20646$1POZIn
     g$10131$24241$1POZIn
     (make-record-constructor-descriptor
       g$10130$20644$1POZIn
       '#f
       g$10132$20645$1POZIn))
   (g$module-interface?$20649$1POZIn
     g$module-interface?$24242$1POZIn
     (record-predicate g$10130$20644$1POZIn))
   (g$make-module-interface$20650$1POZIn
     g$make-module-interface$24243$1POZIn
     (record-constructor g$10131$20646$1POZIn))
   (g$module-interface-first-mark$20651$1POZIn
     g$module-interface-first-mark$24244$1POZIn
     (record-accessor g$10130$20644$1POZIn '0))
   (g$module-interface-exp-id-vec$20652$1POZIn
     g$module-interface-exp-id-vec$24245$1POZIn
     (record-accessor g$10130$20644$1POZIn '1))
   (g$module-interface-exp-lab-vec$20653$1POZIn
     g$module-interface-exp-lab-vec$24246$1POZIn
     (record-accessor g$10130$20644$1POZIn '2))
   (g$set-module-interface-first-mark!$20654$1POZIn
     g$set-module-interface-first-mark!$24247$1POZIn
     (record-mutator g$10130$20644$1POZIn '0))
   (g$set-module-interface-exp-id-vec!$20655$1POZIn
     g$set-module-interface-exp-id-vec!$24248$1POZIn
     (record-mutator g$10130$20644$1POZIn '1))
   (g$set-module-interface-exp-lab-vec!$20656$1POZIn
     g$set-module-interface-exp-lab-vec!$24249$1POZIn
     (record-mutator g$10130$20644$1POZIn '2))
   (g$module-interface-exp-id*$20657$1POZIn
     g$module-interface-exp-id*$24250$1POZIn
     (case-lambda
       ((g$iface$22900$1POZIn g$id$22901$1POZIn)
        (letrec* ((g$diff-marks$22902$1POZIn
                    (case-lambda
                      ((g$ls$22906$1POZIn g$x$22907$1POZIn)
                       (begin
                         (if (null? g$ls$22906$1POZIn)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$22908$1POZIn)
                             (if (eq? g$a$22908$1POZIn g$x$22907$1POZIn)
                               '()
                               (cons
                                 g$a$22908$1POZIn
                                 (g$diff-marks$22902$1POZIn
                                   (cdr g$ls$22906$1POZIn)
                                   g$x$22907$1POZIn)))))
                          (car g$ls$22906$1POZIn)))))))
          ((case-lambda
             ((g$diff$22903$1POZIn g$id-vec$22904$1POZIn)
              (if (null? g$diff$22903$1POZIn)
                g$id-vec$22904$1POZIn
                (g$vector-map$12732$1POZIn
                  (case-lambda
                    ((g$x$22905$1POZIn)
                     (g$make-stx$20088$1POZIn
                       (g$stx-expr$20089$1POZIn g$x$22905$1POZIn)
                       (append
                         g$diff$22903$1POZIn
                         (g$stx-mark*$20090$1POZIn g$x$22905$1POZIn))
                       '()
                       '())))
                  g$id-vec$22904$1POZIn))))
           (g$diff-marks$22902$1POZIn
             (g$stx-mark*$20090$1POZIn g$id$22901$1POZIn)
             (g$module-interface-first-mark$20651$1POZIn
               g$iface$22900$1POZIn))
           (g$module-interface-exp-id-vec$20652$1POZIn
             g$iface$22900$1POZIn))))))
   (g$syntax-transpose$20658$1POZIn
     g$syntax-transpose$24251$1POZIn
     (case-lambda
       ((g$object$22909$1POZIn
          g$base-id$22910$1POZIn
          g$new-id$22911$1POZIn)
        (letrec* ((g$who$22912$1POZIn 'syntax-transpose)
                  (g$err$22913$1POZIn
                    (case-lambda
                      ((g$msg$22955$1POZIn . g$args$22956$1POZIn)
                       (apply
                         assertion-violation
                         g$who$22912$1POZIn
                         g$msg$22955$1POZIn
                         g$args$22956$1POZIn))))
                  (g$split$22914$1POZIn
                    (case-lambda
                      ((g$s*$22948$1POZIn)
                       (if (eq? (car g$s*$22948$1POZIn) 'shift)
                         (values (list 'shift) (cdr g$s*$22948$1POZIn))
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$split$22914$1POZIn
                                  (cdr g$s*$22948$1POZIn))))
                             (case-lambda
                               ((g$s1*$22951$1POZIn g$s2*$22952$1POZIn)
                                ((case-lambda
                                   ((g$s2*$22953$1POZIn
                                      g$s1*$22954$1POZIn)
                                    (values
                                      (cons
                                        (car g$s*$22948$1POZIn)
                                        g$s1*$22954$1POZIn)
                                      g$s2*$22953$1POZIn)))
                                 g$s2*$22952$1POZIn
                                 g$s1*$22951$1POZIn)))))))))
                  (g$final$22915$1POZIn
                    (case-lambda
                      ((g$s*$22946$1POZIn)
                       (if ((case-lambda
                              ((g$t$22947$1POZIn)
                               (if g$t$22947$1POZIn
                                 g$t$22947$1POZIn
                                 (begin
                                   '#f
                                   (eq? (car g$s*$22946$1POZIn)
                                        'shift)))))
                            (null? g$s*$22946$1POZIn))
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$s*$22946$1POZIn)
                             (g$final$22915$1POZIn
                               (cdr g$s*$22946$1POZIn))))))))
                  (g$diff$22916$1POZIn
                    (case-lambda
                      ((g$m$22926$1POZIn
                         g$m*$22927$1POZIn
                         g$s*$22928$1POZIn
                         g$ae*$22929$1POZIn)
                       (if (null? g$m*$22927$1POZIn)
                         (g$err$22913$1POZIn
                           '"unmatched identifiers"
                           g$base-id$22910$1POZIn
                           g$new-id$22911$1POZIn)
                         ((case-lambda
                            ((g$m1$22930$1POZIn)
                             (if (eq? g$m$22926$1POZIn
                                      g$m1$22930$1POZIn)
                               (values
                                 '()
                                 (g$final$22915$1POZIn
                                   g$s*$22928$1POZIn)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$22914$1POZIn
                                      g$s*$22928$1POZIn)))
                                 (case-lambda
                                   ((g$s1*$22933$1POZIn
                                      g$s2*$22934$1POZIn)
                                    ((case-lambda
                                       ((g$s2*$22935$1POZIn
                                          g$s1*$22936$1POZIn)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$22916$1POZIn
                                               g$m$22926$1POZIn
                                               (cdr g$m*$22927$1POZIn)
                                               g$s2*$22935$1POZIn
                                               (cdr g$ae*$22929$1POZIn))))
                                          (case-lambda
                                            ((g$nm*$22940$1POZIn
                                               g$ns*$22941$1POZIn
                                               g$nae*$22942$1POZIn)
                                             ((case-lambda
                                                ((g$nae*$22943$1POZIn
                                                   g$ns*$22944$1POZIn
                                                   g$nm*$22945$1POZIn)
                                                 (values
                                                   (cons
                                                     g$m1$22930$1POZIn
                                                     g$nm*$22945$1POZIn)
                                                   (append
                                                     g$s1*$22936$1POZIn
                                                     g$ns*$22944$1POZIn)
                                                   (cons
                                                     (car g$ae*$22929$1POZIn)
                                                     g$nae*$22943$1POZIn))))
                                              g$nae*$22942$1POZIn
                                              g$ns*$22941$1POZIn
                                              g$nm*$22940$1POZIn))))))
                                     g$s2*$22934$1POZIn
                                     g$s1*$22933$1POZIn)))))))
                          (car g$m*$22927$1POZIn)))))))
          (begin
            (if (not (g$id?$20115$1POZIn g$base-id$22910$1POZIn))
              (g$err$22913$1POZIn
                '"not an identifier"
                g$base-id$22910$1POZIn)
              (void))
            (if (not (g$id?$20115$1POZIn g$new-id$22911$1POZIn))
              (g$err$22913$1POZIn
                '"not an identifier"
                g$new-id$22911$1POZIn)
              (void))
            (if (not (g$free-identifier=?$20723$1POZIn
                       g$base-id$22910$1POZIn
                       g$new-id$22911$1POZIn))
              (g$err$22913$1POZIn
                '"not the same identifier"
                g$base-id$22910$1POZIn
                g$new-id$22911$1POZIn)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$22916$1POZIn
                   (car (g$stx-mark*$20090$1POZIn
                          g$base-id$22910$1POZIn))
                   (g$stx-mark*$20090$1POZIn g$new-id$22911$1POZIn)
                   (g$stx-subst*$20091$1POZIn g$new-id$22911$1POZIn)
                   (g$stx-ae*$20092$1POZIn g$new-id$22911$1POZIn))))
              (case-lambda
                ((g$m*$22920$1POZIn
                   g$s*$22921$1POZIn
                   g$ae*$22922$1POZIn)
                 ((case-lambda
                    ((g$ae*$22923$1POZIn
                       g$s*$22924$1POZIn
                       g$m*$22925$1POZIn)
                     (if (if (null? g$m*$22925$1POZIn)
                           (begin '#f (null? g$s*$22924$1POZIn))
                           '#f)
                       g$object$22909$1POZIn
                       (g$mkstx$20103$1POZIn
                         g$object$22909$1POZIn
                         g$m*$22925$1POZIn
                         g$s*$22924$1POZIn
                         g$ae*$22923$1POZIn))))
                  g$ae*$22922$1POZIn
                  g$s*$22921$1POZIn
                  g$m*$22920$1POZIn)))))))))
   (g$chi-internal-module$20659$1POZIn
     g$chi-internal-module$24252$1POZIn
     (case-lambda
       ((g$e$22957$1POZIn
          g$r$22958$1POZIn
          g$mr$22959$1POZIn
          g$lex*$22960$1POZIn
          g$rhs*$22961$1POZIn
          g$mod**$22962$1POZIn
          g$kwd*$22963$1POZIn)
        (call-with-values
          (case-lambda
            (() (g$parse-module$20643$1POZIn g$e$22957$1POZIn)))
          (case-lambda
            ((g$name$22967$1POZIn
               g$exp-id*$22968$1POZIn
               g$e*$22969$1POZIn)
             ((case-lambda
                ((g$e*$22970$1POZIn
                   g$exp-id*$22971$1POZIn
                   g$name$22972$1POZIn)
                 ((case-lambda
                    ((g$rib$22973$1POZIn)
                     ((case-lambda
                        ((g$e*$22974$1POZIn)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$20660$1POZIn
                                g$e*$22974$1POZIn
                                g$r$22958$1POZIn
                                g$mr$22959$1POZIn
                                g$lex*$22960$1POZIn
                                g$rhs*$22961$1POZIn
                                g$mod**$22962$1POZIn
                                g$kwd*$22963$1POZIn
                                '()
                                g$rib$22973$1POZIn
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$22983$1POZIn
                                g$r$22984$1POZIn
                                g$mr$22985$1POZIn
                                g$lex*$22986$1POZIn
                                g$rhs*$22987$1POZIn
                                g$mod**$22988$1POZIn
                                g$kwd*$22989$1POZIn
                                g$_exp*$22990$1POZIn)
                              ((case-lambda
                                 ((g$_exp*$22991$1POZIn
                                    g$kwd*$22992$1POZIn
                                    g$mod**$22993$1POZIn
                                    g$rhs*$22994$1POZIn
                                    g$lex*$22995$1POZIn
                                    g$mr$22996$1POZIn
                                    g$r$22997$1POZIn
                                    g$e*$22998$1POZIn)
                                  ((case-lambda
                                     ((g$exp-lab*$22999$1POZIn
                                        g$mod**$23000$1POZIn)
                                      (if (not g$name$22972$1POZIn)
                                        (values
                                          g$lex*$22995$1POZIn
                                          g$rhs*$22994$1POZIn
                                          g$exp-id*$22971$1POZIn
                                          g$exp-lab*$22999$1POZIn
                                          g$r$22997$1POZIn
                                          g$mr$22996$1POZIn
                                          g$mod**$23000$1POZIn
                                          g$kwd*$22992$1POZIn)
                                        ((case-lambda
                                           ((g$lab$23001$1POZIn
                                              g$iface$23002$1POZIn)
                                            (values
                                              g$lex*$22995$1POZIn
                                              g$rhs*$22994$1POZIn
                                              (vector
                                                g$name$22972$1POZIn)
                                              (vector
                                                g$lab$23001$1POZIn)
                                              (cons
                                                (cons
                                                  g$lab$23001$1POZIn
                                                  (cons
                                                    '$module
                                                    g$iface$23002$1POZIn))
                                                g$r$22997$1POZIn)
                                              (cons
                                                (cons
                                                  g$lab$23001$1POZIn
                                                  (cons
                                                    '$module
                                                    g$iface$23002$1POZIn))
                                                g$mr$22996$1POZIn)
                                              g$mod**$23000$1POZIn
                                              g$kwd*$22992$1POZIn)))
                                         (g$gen-label$20052$1POZIn
                                           'module)
                                         (g$make-module-interface$20650$1POZIn
                                           (car (g$stx-mark*$20090$1POZIn
                                                  g$name$22972$1POZIn))
                                           (g$vector-map$12732$1POZIn
                                             (case-lambda
                                               ((g$x$23003$1POZIn)
                                                (g$make-stx$20088$1POZIn
                                                  (g$stx-expr$20089$1POZIn
                                                    g$x$23003$1POZIn)
                                                  (g$stx-mark*$20090$1POZIn
                                                    g$x$23003$1POZIn)
                                                  '()
                                                  '())))
                                             g$exp-id*$22971$1POZIn)
                                           g$exp-lab*$22999$1POZIn)))))
                                   (g$vector-map$12732$1POZIn
                                     (case-lambda
                                       ((g$x$23004$1POZIn)
                                        ((case-lambda
                                           ((g$t$23005$1POZIn)
                                            (if g$t$23005$1POZIn
                                              g$t$23005$1POZIn
                                              (begin
                                                '#f
                                                (g$syntax-violation$20732$1POZIn
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$23004$1POZIn)))))
                                         (g$id->label$20128$1POZIn
                                           (g$make-stx$20088$1POZIn
                                             (g$id->sym$20116$1POZIn
                                               g$x$23004$1POZIn)
                                             (g$stx-mark*$20090$1POZIn
                                               g$x$23004$1POZIn)
                                             (list g$rib$22973$1POZIn)
                                             '())))))
                                     g$exp-id*$22971$1POZIn)
                                   (cons
                                     g$e*$22998$1POZIn
                                     g$mod**$22993$1POZIn))))
                               g$_exp*$22990$1POZIn
                               g$kwd*$22989$1POZIn
                               g$mod**$22988$1POZIn
                               g$rhs*$22987$1POZIn
                               g$lex*$22986$1POZIn
                               g$mr$22985$1POZIn
                               g$r$22984$1POZIn
                               g$e*$22983$1POZIn))))))
                      (g$map$11833$1POZIn
                        (case-lambda
                          ((g$x$23006$1POZIn)
                           (g$add-subst$20105$1POZIn
                             g$rib$22973$1POZIn
                             g$x$23006$1POZIn)))
                        (g$syntax->list$20114$1POZIn
                          g$e*$22970$1POZIn)))))
                  (g$make-empty-rib$20073$1POZIn))))
              g$e*$22969$1POZIn
              g$exp-id*$22968$1POZIn
              g$name$22967$1POZIn)))))))
   (g$chi-body*$20660$1POZIn
     g$chi-body*$24253$1POZIn
     (case-lambda
       ((g$e*$23007$1POZIn
          g$r$23008$1POZIn
          g$mr$23009$1POZIn
          g$lex*$23010$1POZIn
          g$rhs*$23011$1POZIn
          g$mod**$23012$1POZIn
          g$kwd*$23013$1POZIn
          g$exp*$23014$1POZIn
          g$rib$23015$1POZIn
          g$mix?$23016$1POZIn
          g$sd?$23017$1POZIn)
        (if (null? g$e*$23007$1POZIn)
          (values
            g$e*$23007$1POZIn
            g$r$23008$1POZIn
            g$mr$23009$1POZIn
            g$lex*$23010$1POZIn
            g$rhs*$23011$1POZIn
            g$mod**$23012$1POZIn
            g$kwd*$23013$1POZIn
            g$exp*$23014$1POZIn)
          (begin
            '#f
            ((case-lambda
               ((g$e$23018$1POZIn)
                (call-with-values
                  (case-lambda
                    (()
                     (g$syntax-type$20135$1POZIn
                       g$e$23018$1POZIn
                       g$r$23008$1POZIn)))
                  (case-lambda
                    ((g$type$23022$1POZIn
                       g$value$23023$1POZIn
                       g$kwd$23024$1POZIn)
                     ((case-lambda
                        ((g$kwd$23025$1POZIn
                           g$value$23026$1POZIn
                           g$type$23027$1POZIn)
                         ((case-lambda
                            ((g$kwd*$23028$1POZIn)
                             ((case-lambda
                                ((g$t$23029$1POZIn)
                                 (if (eqv? g$t$23029$1POZIn 'define)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define$20553$1POZIn
                                          g$e$23018$1POZIn)))
                                     (case-lambda
                                       ((g$id$23032$1POZIn
                                          g$rhs$23033$1POZIn)
                                        ((case-lambda
                                           ((g$rhs$23034$1POZIn
                                              g$id$23035$1POZIn)
                                            (begin
                                              (if (g$bound-id-member?$20122$1POZIn
                                                    g$id$23035$1POZIn
                                                    g$kwd*$23028$1POZIn)
                                                (g$syntax-violation$20732$1POZIn
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$23018$1POZIn)
                                                (void))
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$gen-define-label+loc$20054$1POZIn
                                                     g$id$23035$1POZIn
                                                     g$rib$23015$1POZIn
                                                     g$sd?$23017$1POZIn)))
                                                (case-lambda
                                                  ((g$lab$23038$1POZIn
                                                     g$lex$23039$1POZIn)
                                                   ((case-lambda
                                                      ((g$lex$23040$1POZIn
                                                         g$lab$23041$1POZIn)
                                                       (begin
                                                         (g$extend-rib!$20076$1POZIn
                                                           g$rib$23015$1POZIn
                                                           g$id$23035$1POZIn
                                                           g$lab$23041$1POZIn
                                                           g$sd?$23017$1POZIn)
                                                         (g$chi-body*$20660$1POZIn
                                                           (cdr g$e*$23007$1POZIn)
                                                           (g$add-lexical$20560$1POZIn
                                                             g$lab$23041$1POZIn
                                                             g$lex$23040$1POZIn
                                                             g$r$23008$1POZIn)
                                                           g$mr$23009$1POZIn
                                                           (cons
                                                             g$lex$23040$1POZIn
                                                             g$lex*$23010$1POZIn)
                                                           (cons
                                                             g$rhs$23034$1POZIn
                                                             g$rhs*$23011$1POZIn)
                                                           g$mod**$23012$1POZIn
                                                           g$kwd*$23028$1POZIn
                                                           g$exp*$23014$1POZIn
                                                           g$rib$23015$1POZIn
                                                           g$mix?$23016$1POZIn
                                                           g$sd?$23017$1POZIn))))
                                                    g$lex$23039$1POZIn
                                                    g$lab$23038$1POZIn)))))))
                                         g$rhs$23033$1POZIn
                                         g$id$23032$1POZIn))))
                                   (if (eqv?
                                         g$t$23029$1POZIn
                                         'define-syntax)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$parse-define-syntax$20554$1POZIn
                                            g$e$23018$1POZIn)))
                                       (case-lambda
                                         ((g$id$23044$1POZIn
                                            g$rhs$23045$1POZIn)
                                          ((case-lambda
                                             ((g$rhs$23046$1POZIn
                                                g$id$23047$1POZIn)
                                              (begin
                                                (if (g$bound-id-member?$20122$1POZIn
                                                      g$id$23047$1POZIn
                                                      g$kwd*$23028$1POZIn)
                                                  (g$syntax-violation$20732$1POZIn
                                                    '#f
                                                    '"cannot redefine keyword"
                                                    g$e$23018$1POZIn)
                                                  (void))
                                                ((case-lambda
                                                   ((g$lab$23048$1POZIn)
                                                    ((case-lambda
                                                       ((g$expanded-rhs$23049$1POZIn)
                                                        (begin
                                                          (g$extend-rib!$20076$1POZIn
                                                            g$rib$23015$1POZIn
                                                            g$id$23047$1POZIn
                                                            g$lab$23048$1POZIn
                                                            g$sd?$23017$1POZIn)
                                                          ((case-lambda
                                                             ((g$b$23050$1POZIn)
                                                              (g$chi-body*$20660$1POZIn
                                                                (cdr g$e*$23007$1POZIn)
                                                                (cons
                                                                  (cons
                                                                    g$lab$23048$1POZIn
                                                                    g$b$23050$1POZIn)
                                                                  g$r$23008$1POZIn)
                                                                (cons
                                                                  (cons
                                                                    g$lab$23048$1POZIn
                                                                    g$b$23050$1POZIn)
                                                                  g$mr$23009$1POZIn)
                                                                g$lex*$23010$1POZIn
                                                                g$rhs*$23011$1POZIn
                                                                g$mod**$23012$1POZIn
                                                                g$kwd*$23028$1POZIn
                                                                g$exp*$23014$1POZIn
                                                                g$rib$23015$1POZIn
                                                                g$mix?$23016$1POZIn
                                                                g$sd?$23017$1POZIn)))
                                                           (g$make-eval-transformer$20163$1POZIn
                                                             g$expanded-rhs$23049$1POZIn)))))
                                                     (g$expand-transformer$20661$1POZIn
                                                       g$rhs$23046$1POZIn
                                                       g$mr$23009$1POZIn))))
                                                 (g$gen-define-label$20055$1POZIn
                                                   g$id$23047$1POZIn
                                                   g$rib$23015$1POZIn
                                                   g$sd?$23017$1POZIn)))))
                                           g$rhs$23045$1POZIn
                                           g$id$23044$1POZIn))))
                                     (if (g$memv$11826$1POZIn
                                           g$t$23029$1POZIn
                                           '(let-syntax letrec-syntax))
                                       ((case-lambda
                                          ((g$t$23051$1POZIn)
                                           ((case-lambda
                                              ((g$ls/false$23052$1POZIn)
                                               (if (if g$ls/false$23052$1POZIn
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$23053$1POZIn
                                                              g$xrhs*$23054$1POZIn
                                                              g$xbody*$23055$1POZIn)
                                                            (if (not (g$valid-bound-ids?$20120$1POZIn
                                                                       g$xlhs*$23053$1POZIn))
                                                              (g$syntax-violation$20732$1POZIn
                                                                '#f
                                                                '"invalid identifiers"
                                                                g$e$23018$1POZIn)
                                                              (void))))
                                                         g$ls/false$23052$1POZIn))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$xlhs*$23056$1POZIn
                                                        g$xrhs*$23057$1POZIn
                                                        g$xbody*$23058$1POZIn)
                                                      ((case-lambda
                                                         ((g$xlab*$23059$1POZIn)
                                                          ((case-lambda
                                                             ((g$xrib$23060$1POZIn)
                                                              ((case-lambda
                                                                 ((g$xb*$23061$1POZIn)
                                                                  (g$chi-body*$20660$1POZIn
                                                                    (append
                                                                      (g$map$11833$1POZIn
                                                                        (case-lambda
                                                                          ((g$x$23062$1POZIn)
                                                                           (g$add-subst$20105$1POZIn
                                                                             g$xrib$23060$1POZIn
                                                                             g$x$23062$1POZIn)))
                                                                        g$xbody*$23058$1POZIn)
                                                                      (cdr g$e*$23007$1POZIn))
                                                                    (append
                                                                      (g$map$11833$1POZIn
                                                                        cons
                                                                        g$xlab*$23059$1POZIn
                                                                        g$xb*$23061$1POZIn)
                                                                      g$r$23008$1POZIn)
                                                                    (append
                                                                      (g$map$11833$1POZIn
                                                                        cons
                                                                        g$xlab*$23059$1POZIn
                                                                        g$xb*$23061$1POZIn)
                                                                      g$mr$23009$1POZIn)
                                                                    g$lex*$23010$1POZIn
                                                                    g$rhs*$23011$1POZIn
                                                                    g$mod**$23012$1POZIn
                                                                    g$kwd*$23028$1POZIn
                                                                    g$exp*$23014$1POZIn
                                                                    g$rib$23015$1POZIn
                                                                    g$mix?$23016$1POZIn
                                                                    g$sd?$23017$1POZIn)))
                                                               (g$map$11833$1POZIn
                                                                 (case-lambda
                                                                   ((g$x$23063$1POZIn)
                                                                    (g$make-eval-transformer$20163$1POZIn
                                                                      (g$expand-transformer$20661$1POZIn
                                                                        (if (eq? g$type$23027$1POZIn
                                                                                 'let-syntax)
                                                                          g$x$23063$1POZIn
                                                                          (g$add-subst$20105$1POZIn
                                                                            g$xrib$23060$1POZIn
                                                                            g$x$23063$1POZIn))
                                                                        g$mr$23009$1POZIn))))
                                                                 g$xrhs*$23057$1POZIn))))
                                                           (g$make-full-rib$20081$1POZIn
                                                             g$xlhs*$23056$1POZIn
                                                             g$xlab*$23059$1POZIn))))
                                                       (g$map$11833$1POZIn
                                                         g$gen-label$20052$1POZIn
                                                         g$xlhs*$23056$1POZIn))))
                                                   g$ls/false$23052$1POZIn)
                                                 (g$syntax-violation$20732$1POZIn
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$23051$1POZIn))))
                                            (g$syntax-dispatch$20613$1POZIn
                                              g$t$23051$1POZIn
                                              '(_ #(each (any any))
                                                  .
                                                  each-any)))))
                                        g$e$23018$1POZIn)
                                       (if (eqv?
                                             g$t$23029$1POZIn
                                             'begin)
                                         ((case-lambda
                                            ((g$t$23064$1POZIn)
                                             ((case-lambda
                                                ((g$ls/false$23065$1POZIn)
                                                 (if g$ls/false$23065$1POZIn
                                                   (apply
                                                     (case-lambda
                                                       ((g$x*$23066$1POZIn)
                                                        (g$chi-body*$20660$1POZIn
                                                          (append
                                                            g$x*$23066$1POZIn
                                                            (cdr g$e*$23007$1POZIn))
                                                          g$r$23008$1POZIn
                                                          g$mr$23009$1POZIn
                                                          g$lex*$23010$1POZIn
                                                          g$rhs*$23011$1POZIn
                                                          g$mod**$23012$1POZIn
                                                          g$kwd*$23028$1POZIn
                                                          g$exp*$23014$1POZIn
                                                          g$rib$23015$1POZIn
                                                          g$mix?$23016$1POZIn
                                                          g$sd?$23017$1POZIn)))
                                                     g$ls/false$23065$1POZIn)
                                                   (g$syntax-violation$20732$1POZIn
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$23064$1POZIn))))
                                              (g$syntax-dispatch$20613$1POZIn
                                                g$t$23064$1POZIn
                                                '(_ . each-any)))))
                                          g$e$23018$1POZIn)
                                         (if (g$memv$11826$1POZIn
                                               g$t$23029$1POZIn
                                               '(global-macro
                                                  global-macro!))
                                           (g$chi-body*$20660$1POZIn
                                             (cons
                                               (g$add-subst$20105$1POZIn
                                                 g$rib$23015$1POZIn
                                                 (g$chi-global-macro$20628$1POZIn
                                                   g$value$23026$1POZIn
                                                   g$e$23018$1POZIn
                                                   g$r$23008$1POZIn))
                                               (cdr g$e*$23007$1POZIn))
                                             g$r$23008$1POZIn
                                             g$mr$23009$1POZIn
                                             g$lex*$23010$1POZIn
                                             g$rhs*$23011$1POZIn
                                             g$mod**$23012$1POZIn
                                             g$kwd*$23028$1POZIn
                                             g$exp*$23014$1POZIn
                                             g$rib$23015$1POZIn
                                             g$mix?$23016$1POZIn
                                             g$sd?$23017$1POZIn)
                                           (if (g$memv$11826$1POZIn
                                                 g$t$23029$1POZIn
                                                 '(local-macro
                                                    local-macro!))
                                             (g$chi-body*$20660$1POZIn
                                               (cons
                                                 (g$add-subst$20105$1POZIn
                                                   g$rib$23015$1POZIn
                                                   (g$chi-local-macro$20627$1POZIn
                                                     g$value$23026$1POZIn
                                                     g$e$23018$1POZIn
                                                     g$r$23008$1POZIn))
                                                 (cdr g$e*$23007$1POZIn))
                                               g$r$23008$1POZIn
                                               g$mr$23009$1POZIn
                                               g$lex*$23010$1POZIn
                                               g$rhs*$23011$1POZIn
                                               g$mod**$23012$1POZIn
                                               g$kwd*$23028$1POZIn
                                               g$exp*$23014$1POZIn
                                               g$rib$23015$1POZIn
                                               g$mix?$23016$1POZIn
                                               g$sd?$23017$1POZIn)
                                             (if (g$memv$11826$1POZIn
                                                   g$t$23029$1POZIn
                                                   '(macro macro!))
                                               (g$chi-body*$20660$1POZIn
                                                 (cons
                                                   (g$add-subst$20105$1POZIn
                                                     g$rib$23015$1POZIn
                                                     (g$chi-macro$20626$1POZIn
                                                       g$value$23026$1POZIn
                                                       g$e$23018$1POZIn
                                                       g$r$23008$1POZIn))
                                                   (cdr g$e*$23007$1POZIn))
                                                 g$r$23008$1POZIn
                                                 g$mr$23009$1POZIn
                                                 g$lex*$23010$1POZIn
                                                 g$rhs*$23011$1POZIn
                                                 g$mod**$23012$1POZIn
                                                 g$kwd*$23028$1POZIn
                                                 g$exp*$23014$1POZIn
                                                 g$rib$23015$1POZIn
                                                 g$mix?$23016$1POZIn
                                                 g$sd?$23017$1POZIn)
                                               (if (eqv?
                                                     g$t$23029$1POZIn
                                                     'module)
                                                 (call-with-values
                                                   (case-lambda
                                                     (()
                                                      (g$chi-internal-module$20659$1POZIn
                                                        g$e$23018$1POZIn
                                                        g$r$23008$1POZIn
                                                        g$mr$23009$1POZIn
                                                        g$lex*$23010$1POZIn
                                                        g$rhs*$23011$1POZIn
                                                        g$mod**$23012$1POZIn
                                                        g$kwd*$23028$1POZIn)))
                                                   (case-lambda
                                                     ((g$lex*$23075$1POZIn
                                                        g$rhs*$23076$1POZIn
                                                        g$m-exp-id*$23077$1POZIn
                                                        g$m-exp-lab*$23078$1POZIn
                                                        g$r$23079$1POZIn
                                                        g$mr$23080$1POZIn
                                                        g$mod**$23081$1POZIn
                                                        g$kwd*$23082$1POZIn)
                                                      ((case-lambda
                                                         ((g$kwd*$23083$1POZIn
                                                            g$mod**$23084$1POZIn
                                                            g$mr$23085$1POZIn
                                                            g$r$23086$1POZIn
                                                            g$m-exp-lab*$23087$1POZIn
                                                            g$m-exp-id*$23088$1POZIn
                                                            g$rhs*$23089$1POZIn
                                                            g$lex*$23090$1POZIn)
                                                          (begin
                                                            (g$vector-for-each$12733$1POZIn
                                                              (case-lambda
                                                                ((g$id$23091$1POZIn
                                                                   g$lab$23092$1POZIn)
                                                                 (g$extend-rib!$20076$1POZIn
                                                                   g$rib$23015$1POZIn
                                                                   g$id$23091$1POZIn
                                                                   g$lab$23092$1POZIn
                                                                   g$sd?$23017$1POZIn)))
                                                              g$m-exp-id*$23088$1POZIn
                                                              g$m-exp-lab*$23087$1POZIn)
                                                            (g$chi-body*$20660$1POZIn
                                                              (cdr g$e*$23007$1POZIn)
                                                              g$r$23086$1POZIn
                                                              g$mr$23085$1POZIn
                                                              g$lex*$23090$1POZIn
                                                              g$rhs*$23089$1POZIn
                                                              g$mod**$23084$1POZIn
                                                              g$kwd*$23083$1POZIn
                                                              g$exp*$23014$1POZIn
                                                              g$rib$23015$1POZIn
                                                              g$mix?$23016$1POZIn
                                                              g$sd?$23017$1POZIn))))
                                                       g$kwd*$23082$1POZIn
                                                       g$mod**$23081$1POZIn
                                                       g$mr$23080$1POZIn
                                                       g$r$23079$1POZIn
                                                       g$m-exp-lab*$23078$1POZIn
                                                       g$m-exp-id*$23077$1POZIn
                                                       g$rhs*$23076$1POZIn
                                                       g$lex*$23075$1POZIn))))
                                                 (if (eqv?
                                                       g$t$23029$1POZIn
                                                       'library)
                                                   (begin
                                                     (g$library-expander$20716$1POZIn
                                                       (g$stx->datum$20126$1POZIn
                                                         g$e$23018$1POZIn))
                                                     (g$chi-body*$20660$1POZIn
                                                       (cdr g$e*$23007$1POZIn)
                                                       g$r$23008$1POZIn
                                                       g$mr$23009$1POZIn
                                                       g$lex*$23010$1POZIn
                                                       g$rhs*$23011$1POZIn
                                                       g$mod**$23012$1POZIn
                                                       g$kwd*$23028$1POZIn
                                                       g$exp*$23014$1POZIn
                                                       g$rib$23015$1POZIn
                                                       g$mix?$23016$1POZIn
                                                       g$sd?$23017$1POZIn))
                                                   (if (eqv?
                                                         g$t$23029$1POZIn
                                                         'export)
                                                     ((case-lambda
                                                        ((g$t$23093$1POZIn)
                                                         ((case-lambda
                                                            ((g$ls/false$23094$1POZIn)
                                                             (if g$ls/false$23094$1POZIn
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$exp-decl*$23095$1POZIn)
                                                                    (g$chi-body*$20660$1POZIn
                                                                      (cdr g$e*$23007$1POZIn)
                                                                      g$r$23008$1POZIn
                                                                      g$mr$23009$1POZIn
                                                                      g$lex*$23010$1POZIn
                                                                      g$rhs*$23011$1POZIn
                                                                      g$mod**$23012$1POZIn
                                                                      g$kwd*$23028$1POZIn
                                                                      (append
                                                                        g$exp-decl*$23095$1POZIn
                                                                        g$exp*$23014$1POZIn)
                                                                      g$rib$23015$1POZIn
                                                                      g$mix?$23016$1POZIn
                                                                      g$sd?$23017$1POZIn)))
                                                                 g$ls/false$23094$1POZIn)
                                                               (g$syntax-violation$20732$1POZIn
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$23093$1POZIn))))
                                                          (g$syntax-dispatch$20613$1POZIn
                                                            g$t$23093$1POZIn
                                                            '(_ .
                                                                each-any)))))
                                                      g$e$23018$1POZIn)
                                                     (if (eqv?
                                                           g$t$23029$1POZIn
                                                           'import)
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$23096$1POZIn
                                                                       (case-lambda
                                                                         ((g$e$23138$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$23139$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23140$1POZIn)
                                                                                  (if (if g$ls/false$23140$1POZIn
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$23141$1POZIn)
                                                                                               (g$id?$20115$1POZIn
                                                                                                 g$id$23141$1POZIn)))
                                                                                            g$ls/false$23140$1POZIn))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$23142$1POZIn)
                                                                                         '#t))
                                                                                      g$ls/false$23140$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$23143$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$23144$1POZIn)
                                                                                            (if g$ls/false$23144$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$23145$1POZIn)
                                                                                                   '#f))
                                                                                                g$ls/false$23144$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$t$23146$1POZIn)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$23147$1POZIn)
                                                                                                      (if g$ls/false$23147$1POZIn
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$20732$1POZIn
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$23138$1POZIn)))
                                                                                                          g$ls/false$23147$1POZIn)
                                                                                                        (g$syntax-violation$20732$1POZIn
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$23146$1POZIn))))
                                                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                                                     g$t$23146$1POZIn
                                                                                                     '_))))
                                                                                               g$t$23143$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$23143$1POZIn
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$23139$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$23139$1POZIn
                                                                                 '(_ any)))))
                                                                           g$e$23138$1POZIn))))
                                                                     (g$module-import$23097$1POZIn
                                                                       (case-lambda
                                                                         ((g$e$23121$1POZIn
                                                                            g$r$23122$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$23123$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23124$1POZIn)
                                                                                  (if (if g$ls/false$23124$1POZIn
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$23125$1POZIn)
                                                                                               (g$id?$20115$1POZIn
                                                                                                 g$id$23125$1POZIn)))
                                                                                            g$ls/false$23124$1POZIn))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$23126$1POZIn)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$20135$1POZIn
                                                                                                g$id$23126$1POZIn
                                                                                                g$r$23122$1POZIn)))
                                                                                           (case-lambda
                                                                                             ((g$type$23130$1POZIn
                                                                                                g$value$23131$1POZIn
                                                                                                g$kwd$23132$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$23133$1POZIn
                                                                                                    g$value$23134$1POZIn
                                                                                                    g$type$23135$1POZIn)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$23136$1POZIn)
                                                                                                      (if (eqv?
                                                                                                            g$t$23136$1POZIn
                                                                                                            '$module)
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$23137$1POZIn)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$20657$1POZIn
                                                                                                                g$iface$23137$1POZIn
                                                                                                                g$id$23126$1POZIn)
                                                                                                              (g$module-interface-exp-lab-vec$20653$1POZIn
                                                                                                                g$iface$23137$1POZIn))))
                                                                                                         g$value$23134$1POZIn)
                                                                                                        (begin
                                                                                                          '#f
                                                                                                          (g$syntax-violation$20732$1POZIn
                                                                                                            '#f
                                                                                                            '"invalid import"
                                                                                                            g$e$23121$1POZIn)))))
                                                                                                   g$type$23135$1POZIn)))
                                                                                               g$kwd$23132$1POZIn
                                                                                               g$value$23131$1POZIn
                                                                                               g$type$23130$1POZIn))))))
                                                                                      g$ls/false$23124$1POZIn)
                                                                                    (g$syntax-violation$20732$1POZIn
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$23123$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$23123$1POZIn
                                                                                 '(_ any)))))
                                                                           g$e$23121$1POZIn))))
                                                                     (g$library-import$23098$1POZIn
                                                                       (case-lambda
                                                                         ((g$e$23107$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$t$23108$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$23109$1POZIn)
                                                                                  (if g$ls/false$23109$1POZIn
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$23110$1POZIn
                                                                                           g$imp*$23111$1POZIn)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$20665$1POZIn
                                                                                                (g$syntax->datum$20735$1POZIn
                                                                                                  g$imp*$23111$1POZIn))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$23114$1POZIn
                                                                                                g$subst-labels$23115$1POZIn)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$23116$1POZIn
                                                                                                    g$subst-names$23117$1POZIn)
                                                                                                  (values
                                                                                                    (g$vector-map$12732$1POZIn
                                                                                                      (case-lambda
                                                                                                        ((g$name$23118$1POZIn)
                                                                                                         (g$datum->stx$20098$1POZIn
                                                                                                           g$ctxt$23110$1POZIn
                                                                                                           g$name$23118$1POZIn)))
                                                                                                      g$subst-names$23117$1POZIn)
                                                                                                    g$subst-labels$23116$1POZIn)))
                                                                                               g$subst-labels$23115$1POZIn
                                                                                               g$subst-names$23114$1POZIn))))))
                                                                                      g$ls/false$23109$1POZIn)
                                                                                    ((case-lambda
                                                                                       ((g$t$23119$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$23120$1POZIn)
                                                                                            (if g$ls/false$23120$1POZIn
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$20732$1POZIn
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$23107$1POZIn)))
                                                                                                g$ls/false$23120$1POZIn)
                                                                                              (g$syntax-violation$20732$1POZIn
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$23119$1POZIn))))
                                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                                           g$t$23119$1POZIn
                                                                                           '_))))
                                                                                     g$t$23108$1POZIn))))
                                                                               (g$syntax-dispatch$20613$1POZIn
                                                                                 g$t$23108$1POZIn
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$23107$1POZIn)))))
                                                             (begin
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    (if (g$module-import?$23096$1POZIn
                                                                          g$e$23018$1POZIn)
                                                                      (g$module-import$23097$1POZIn
                                                                        g$e$23018$1POZIn
                                                                        g$r$23008$1POZIn)
                                                                      (g$library-import$23098$1POZIn
                                                                        g$e$23018$1POZIn))))
                                                                 (case-lambda
                                                                   ((g$id*$23101$1POZIn
                                                                      g$lab*$23102$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$lab*$23103$1POZIn
                                                                          g$id*$23104$1POZIn)
                                                                        (g$vector-for-each$12733$1POZIn
                                                                          (case-lambda
                                                                            ((g$id$23105$1POZIn
                                                                               g$lab$23106$1POZIn)
                                                                             (g$extend-rib!$20076$1POZIn
                                                                               g$rib$23015$1POZIn
                                                                               g$id$23105$1POZIn
                                                                               g$lab$23106$1POZIn
                                                                               g$sd?$23017$1POZIn)))
                                                                          g$id*$23104$1POZIn
                                                                          g$lab*$23103$1POZIn)))
                                                                     g$lab*$23102$1POZIn
                                                                     g$id*$23101$1POZIn))))
                                                               (g$chi-body*$20660$1POZIn
                                                                 (cdr g$e*$23007$1POZIn)
                                                                 g$r$23008$1POZIn
                                                                 g$mr$23009$1POZIn
                                                                 g$lex*$23010$1POZIn
                                                                 g$rhs*$23011$1POZIn
                                                                 g$mod**$23012$1POZIn
                                                                 g$kwd*$23028$1POZIn
                                                                 g$exp*$23014$1POZIn
                                                                 g$rib$23015$1POZIn
                                                                 g$mix?$23016$1POZIn
                                                                 g$sd?$23017$1POZIn))))))
                                                       (begin
                                                         '#f
                                                         (if g$mix?$23016$1POZIn
                                                           (g$chi-body*$20660$1POZIn
                                                             (cdr g$e*$23007$1POZIn)
                                                             g$r$23008$1POZIn
                                                             g$mr$23009$1POZIn
                                                             (cons
                                                               (g$gen-lexical$20050$1POZIn
                                                                 'dummy)
                                                               g$lex*$23010$1POZIn)
                                                             (cons
                                                               (cons
                                                                 'top-expr
                                                                 g$e$23018$1POZIn)
                                                               g$rhs*$23011$1POZIn)
                                                             g$mod**$23012$1POZIn
                                                             g$kwd*$23028$1POZIn
                                                             g$exp*$23014$1POZIn
                                                             g$rib$23015$1POZIn
                                                             '#t
                                                             g$sd?$23017$1POZIn)
                                                           (values
                                                             g$e*$23007$1POZIn
                                                             g$r$23008$1POZIn
                                                             g$mr$23009$1POZIn
                                                             g$lex*$23010$1POZIn
                                                             g$rhs*$23011$1POZIn
                                                             g$mod**$23012$1POZIn
                                                             g$kwd*$23028$1POZIn
                                                             g$exp*$23014$1POZIn))))))))))))))))
                              g$type$23027$1POZIn)))
                          (if (g$id?$20115$1POZIn g$kwd$23025$1POZIn)
                            (cons
                              g$kwd$23025$1POZIn
                              g$kwd*$23013$1POZIn)
                            g$kwd*$23013$1POZIn))))
                      g$kwd$23024$1POZIn
                      g$value$23023$1POZIn
                      g$type$23022$1POZIn))))))
             (car g$e*$23007$1POZIn)))))))
   (g$expand-transformer$20661$1POZIn
     g$expand-transformer$24254$1POZIn
     (case-lambda
       ((g$expr$23148$1POZIn g$r$23149$1POZIn)
        ((case-lambda
           ((g$rtc$23150$1POZIn)
            ((case-lambda
               ((g$expanded-rhs$23151$1POZIn)
                (begin
                  (g$for-each$11834$1POZIn
                    ((case-lambda
                       ((g$mark-visit$23152$1POZIn)
                        (case-lambda
                          ((g$x$23153$1POZIn)
                           (begin
                             (g$invoke-library$19821$1POZIn
                               g$x$23153$1POZIn)
                             (g$mark-visit$23152$1POZIn
                               g$x$23153$1POZIn))))))
                     (g$vis-collector$20669$1POZIn))
                    (g$rtc$23150$1POZIn))
                  g$expanded-rhs$23151$1POZIn)))
             ((case-lambda
                ((g$inv-collector$23158$1POZIn
                   g$vis-collector$23159$1POZIn
                   g$inv-collector$23160$1POZIn
                   g$vis-collector$23161$1POZIn)
                 ((case-lambda
                    ((g$swap$23162$1POZIn)
                     (dynamic-wind
                       g$swap$23162$1POZIn
                       (case-lambda
                         (()
                          (g$chi-expr$20631$1POZIn
                            g$expr$23148$1POZIn
                            g$r$23149$1POZIn
                            g$r$23149$1POZIn)))
                       g$swap$23162$1POZIn)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$23163$1POZIn)
                           (begin
                             (g$inv-collector$23158$1POZIn
                               g$inv-collector$23160$1POZIn)
                             (set! g$inv-collector$23160$1POZIn
                               g$t$23163$1POZIn))))
                        (g$inv-collector$23158$1POZIn))
                       ((case-lambda
                          ((g$t$23164$1POZIn)
                           (begin
                             (g$vis-collector$23159$1POZIn
                               g$vis-collector$23161$1POZIn)
                             (set! g$vis-collector$23161$1POZIn
                               g$t$23164$1POZIn))))
                        (g$vis-collector$23159$1POZIn))))))))
              g$inv-collector$20668$1POZIn
              g$vis-collector$20669$1POZIn
              g$rtc$23150$1POZIn
              (case-lambda ((g$x$23165$1POZIn) (values)))))))
         (g$make-collector$20667$1POZIn)))))
   (g$parse-exports$20662$1POZIn
     g$parse-exports$24255$1POZIn
     (case-lambda
       ((g$exp*$23166$1POZIn)
        ((letrec ((g$f$23167$1POZIn
                    (case-lambda
                      ((g$exp*$23168$1POZIn
                         g$int*$23169$1POZIn
                         g$ext*$23170$1POZIn)
                       (if (null? g$exp*$23168$1POZIn)
                         (begin
                           (if (not (g$valid-bound-ids?$20120$1POZIn
                                      g$ext*$23170$1POZIn))
                             (g$syntax-violation$20732$1POZIn
                               'export
                               '"invalid exports"
                               (g$find-dups$20641$1POZIn
                                 g$ext*$23170$1POZIn))
                             (void))
                           (values
                             (g$map$11833$1POZIn
                               g$syntax->datum$20735$1POZIn
                               g$ext*$23170$1POZIn)
                             g$int*$23169$1POZIn))
                         (begin
                           '#f
                           ((case-lambda
                              ((g$t$23171$1POZIn)
                               ((case-lambda
                                  ((g$ls/false$23172$1POZIn)
                                   (if g$ls/false$23172$1POZIn
                                     (apply
                                       (case-lambda
                                         ((g$rename$23173$1POZIn
                                            g$i*$23174$1POZIn
                                            g$e*$23175$1POZIn)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$20735$1POZIn
                                                                g$rename$23173$1POZIn)
                                                              'rename)
                                                       (if (g$for-all$11831$1POZIn
                                                             g$id?$20115$1POZIn
                                                             g$i*$23174$1POZIn)
                                                         (begin
                                                           '#f
                                                           (g$for-all$11831$1POZIn
                                                             g$id?$20115$1POZIn
                                                             g$e*$23175$1POZIn))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$20732$1POZIn
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$23168$1POZIn))
                                              (void))
                                            (g$f$23167$1POZIn
                                              (cdr g$exp*$23168$1POZIn)
                                              (append
                                                g$i*$23174$1POZIn
                                                g$int*$23169$1POZIn)
                                              (append
                                                g$e*$23175$1POZIn
                                                g$ext*$23170$1POZIn)))))
                                       g$ls/false$23172$1POZIn)
                                     ((case-lambda
                                        ((g$t$23176$1POZIn)
                                         ((case-lambda
                                            ((g$ls/false$23177$1POZIn)
                                             (if g$ls/false$23177$1POZIn
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$23178$1POZIn)
                                                    (begin
                                                      (if (not (g$id?$20115$1POZIn
                                                                 g$ie$23178$1POZIn))
                                                        (g$syntax-violation$20732$1POZIn
                                                          'export
                                                          '"invalid export"
                                                          g$ie$23178$1POZIn)
                                                        (void))
                                                      (g$f$23167$1POZIn
                                                        (cdr g$exp*$23168$1POZIn)
                                                        (cons
                                                          g$ie$23178$1POZIn
                                                          g$int*$23169$1POZIn)
                                                        (cons
                                                          g$ie$23178$1POZIn
                                                          g$ext*$23170$1POZIn)))))
                                                 g$ls/false$23177$1POZIn)
                                               (g$syntax-violation$20732$1POZIn
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$23176$1POZIn))))
                                          (g$syntax-dispatch$20613$1POZIn
                                            g$t$23176$1POZIn
                                            'any))))
                                      g$t$23171$1POZIn))))
                                (g$syntax-dispatch$20613$1POZIn
                                  g$t$23171$1POZIn
                                  '(any . #(each (any any)))))))
                            (car g$exp*$23168$1POZIn))))))))
           g$f$23167$1POZIn)
         g$exp*$23166$1POZIn
         '()
         '()))))
   (g$parse-library-name$20663$1POZIn
     g$parse-library-name$24256$1POZIn
     (case-lambda
       ((g$spec$23179$1POZIn)
        (letrec* ((g$parse$23180$1POZIn
                    (case-lambda
                      ((g$x$23187$1POZIn)
                       ((case-lambda
                          ((g$t$23188$1POZIn)
                           ((case-lambda
                              ((g$ls/false$23189$1POZIn)
                               (if (if g$ls/false$23189$1POZIn
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$23190$1POZIn)
                                            (g$for-all$11831$1POZIn
                                              (case-lambda
                                                ((g$x$23191$1POZIn)
                                                 ((case-lambda
                                                    ((g$x$23192$1POZIn)
                                                     (if (g$integer?$13609$1POZIn
                                                           g$x$23192$1POZIn)
                                                       (begin
                                                         '#f
                                                         (g$exact?$13604$1POZIn
                                                           g$x$23192$1POZIn))
                                                       '#f)))
                                                  (g$syntax->datum$20735$1POZIn
                                                    g$x$23191$1POZIn))))
                                              g$v*$23190$1POZIn)))
                                         g$ls/false$23189$1POZIn))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$23193$1POZIn)
                                      (values
                                        '()
                                        (g$map$11833$1POZIn
                                          g$syntax->datum$20735$1POZIn
                                          g$v*$23193$1POZIn))))
                                   g$ls/false$23189$1POZIn)
                                 ((case-lambda
                                    ((g$t$23194$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$23195$1POZIn)
                                         (if (if g$ls/false$23195$1POZIn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$23196$1POZIn
                                                        g$rest$23197$1POZIn)
                                                      (g$symbol?$12665$1POZIn
                                                        (g$syntax->datum$20735$1POZIn
                                                          g$x$23196$1POZIn))))
                                                   g$ls/false$23195$1POZIn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$23198$1POZIn
                                                  g$rest$23199$1POZIn)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$23180$1POZIn
                                                       g$rest$23199$1POZIn)))
                                                  (case-lambda
                                                    ((g$x*$23202$1POZIn
                                                       g$v*$23203$1POZIn)
                                                     ((case-lambda
                                                        ((g$v*$23204$1POZIn
                                                           g$x*$23205$1POZIn)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$20735$1POZIn
                                                               g$x$23198$1POZIn)
                                                             g$x*$23205$1POZIn)
                                                           g$v*$23204$1POZIn)))
                                                      g$v*$23203$1POZIn
                                                      g$x*$23202$1POZIn))))))
                                             g$ls/false$23195$1POZIn)
                                           ((case-lambda
                                              ((g$t$23206$1POZIn)
                                               ((case-lambda
                                                  ((g$ls/false$23207$1POZIn)
                                                   (if g$ls/false$23207$1POZIn
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$23207$1POZIn)
                                                     ((case-lambda
                                                        ((g$t$23208$1POZIn)
                                                         ((case-lambda
                                                            ((g$ls/false$23209$1POZIn)
                                                             (if g$ls/false$23209$1POZIn
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$20732$1POZIn
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$23179$1POZIn)))
                                                                 g$ls/false$23209$1POZIn)
                                                               (g$syntax-violation$20732$1POZIn
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$23208$1POZIn))))
                                                          (g$syntax-dispatch$20613$1POZIn
                                                            g$t$23208$1POZIn
                                                            '_))))
                                                      g$t$23206$1POZIn))))
                                                (g$syntax-dispatch$20613$1POZIn
                                                  g$t$23206$1POZIn
                                                  '()))))
                                            g$t$23194$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$23194$1POZIn
                                        '(any . any)))))
                                  g$t$23188$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$23188$1POZIn
                              '(each-any)))))
                        g$x$23187$1POZIn)))))
          (call-with-values
            (case-lambda
              (() (g$parse$23180$1POZIn g$spec$23179$1POZIn)))
            (case-lambda
              ((g$name*$23183$1POZIn g$ver*$23184$1POZIn)
               ((case-lambda
                  ((g$ver*$23185$1POZIn g$name*$23186$1POZIn)
                   (begin
                     (if (null? g$name*$23186$1POZIn)
                       (g$syntax-violation$20732$1POZIn
                         '#f
                         '"empty library name"
                         g$spec$23179$1POZIn)
                       (void))
                     (values
                       g$name*$23186$1POZIn
                       g$ver*$23185$1POZIn))))
                g$ver*$23184$1POZIn
                g$name*$23183$1POZIn))))))))
   (g$parse-library$20664$1POZIn
     g$parse-library$24257$1POZIn
     (case-lambda
       ((g$e$23210$1POZIn)
        ((case-lambda
           ((g$t$23211$1POZIn)
            ((case-lambda
               ((g$ls/false$23212$1POZIn)
                (if (if g$ls/false$23212$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$23213$1POZIn
                               g$name*$23214$1POZIn
                               g$export$23215$1POZIn
                               g$exp*$23216$1POZIn
                               g$import$23217$1POZIn
                               g$imp*$23218$1POZIn
                               g$b*$23219$1POZIn)
                             (if (eq? (g$syntax->datum$20735$1POZIn
                                        g$export$23215$1POZIn)
                                      'export)
                               (if (eq? (g$syntax->datum$20735$1POZIn
                                          g$import$23217$1POZIn)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$20735$1POZIn
                                          g$library$23213$1POZIn)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$23212$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$23220$1POZIn
                         g$name*$23221$1POZIn
                         g$export$23222$1POZIn
                         g$exp*$23223$1POZIn
                         g$import$23224$1POZIn
                         g$imp*$23225$1POZIn
                         g$b*$23226$1POZIn)
                       (values
                         g$name*$23221$1POZIn
                         g$exp*$23223$1POZIn
                         g$imp*$23225$1POZIn
                         g$b*$23226$1POZIn)))
                    g$ls/false$23212$1POZIn)
                  ((case-lambda
                     ((g$t$23227$1POZIn)
                      ((case-lambda
                         ((g$ls/false$23228$1POZIn)
                          (if g$ls/false$23228$1POZIn
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$20732$1POZIn
                                   '#f
                                   '"malformed library"
                                   g$e$23210$1POZIn)))
                              g$ls/false$23228$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$23227$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$23227$1POZIn
                         '_))))
                   g$t$23211$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$23211$1POZIn
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$23210$1POZIn))))
   (g$parse-import-spec*$20665$1POZIn
     g$parse-import-spec*$24258$1POZIn
     (case-lambda
       ((g$imp*$23229$1POZIn)
        (letrec* ((g$idsyn?$23230$1POZIn
                    (case-lambda
                      ((g$x$23490$1POZIn)
                       (g$symbol?$12665$1POZIn
                         (g$syntax->datum$20735$1POZIn
                           g$x$23490$1POZIn)))))
                  (g$dup-error$23231$1POZIn
                    (case-lambda
                      ((g$name$23489$1POZIn)
                       (g$syntax-violation$20732$1POZIn
                         'import
                         '"two imports with different bindings"
                         g$name$23489$1POZIn))))
                  (g$merge-substs$23232$1POZIn
                    (case-lambda
                      ((g$s$23480$1POZIn g$subst$23481$1POZIn)
                       (letrec* ((g$insert-to-subst$23482$1POZIn
                                   (case-lambda
                                     ((g$a$23483$1POZIn
                                        g$subst$23484$1POZIn)
                                      ((case-lambda
                                         ((g$name$23485$1POZIn
                                            g$label$23486$1POZIn)
                                          ((case-lambda
                                             ((g$t$23487$1POZIn)
                                              (if g$t$23487$1POZIn
                                                ((case-lambda
                                                   ((g$x$23488$1POZIn)
                                                    (if (eq? (cdr g$x$23488$1POZIn)
                                                             g$label$23486$1POZIn)
                                                      g$subst$23484$1POZIn
                                                      (begin
                                                        '#f
                                                        (g$dup-error$23231$1POZIn
                                                          g$name$23485$1POZIn)))))
                                                 g$t$23487$1POZIn)
                                                (begin
                                                  '#f
                                                  (cons
                                                    g$a$23483$1POZIn
                                                    g$subst$23484$1POZIn)))))
                                           (g$assq$11821$1POZIn
                                             g$name$23485$1POZIn
                                             g$subst$23484$1POZIn))))
                                       (car g$a$23483$1POZIn)
                                       (cdr g$a$23483$1POZIn))))))
                         (if (null? g$s$23480$1POZIn)
                           g$subst$23481$1POZIn
                           (begin
                             '#f
                             (g$insert-to-subst$23482$1POZIn
                               (car g$s$23480$1POZIn)
                               (g$merge-substs$23232$1POZIn
                                 (cdr g$s$23480$1POZIn)
                                 g$subst$23481$1POZIn))))))))
                  (g$exclude*$23233$1POZIn
                    (case-lambda
                      ((g$sym*$23456$1POZIn g$subst$23457$1POZIn)
                       (letrec* ((g$exclude$23458$1POZIn
                                   (case-lambda
                                     ((g$sym$23471$1POZIn
                                        g$subst$23472$1POZIn)
                                      (if (null? g$subst$23472$1POZIn)
                                        (g$syntax-violation$20732$1POZIn
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$23471$1POZIn)
                                        (if (eq? g$sym$23471$1POZIn
                                                 (g$caar$12683$1POZIn
                                                   g$subst$23472$1POZIn))
                                          (values
                                            (g$cdar$12685$1POZIn
                                              g$subst$23472$1POZIn)
                                            (cdr g$subst$23472$1POZIn))
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$a$23473$1POZIn)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$exclude$23458$1POZIn
                                                       g$sym$23471$1POZIn
                                                       (cdr g$subst$23472$1POZIn))))
                                                  (case-lambda
                                                    ((g$old$23476$1POZIn
                                                       g$subst$23477$1POZIn)
                                                     ((case-lambda
                                                        ((g$subst$23478$1POZIn
                                                           g$old$23479$1POZIn)
                                                         (values
                                                           g$old$23479$1POZIn
                                                           (cons
                                                             g$a$23473$1POZIn
                                                             g$subst$23478$1POZIn))))
                                                      g$subst$23477$1POZIn
                                                      g$old$23476$1POZIn))))))
                                             (car g$subst$23472$1POZIn)))))))))
                         (if (null? g$sym*$23456$1POZIn)
                           (values '() g$subst$23457$1POZIn)
                           (begin
                             '#f
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$exclude$23458$1POZIn
                                    (car g$sym*$23456$1POZIn)
                                    g$subst$23457$1POZIn)))
                               (case-lambda
                                 ((g$old$23461$1POZIn
                                    g$subst$23462$1POZIn)
                                  ((case-lambda
                                     ((g$subst$23463$1POZIn
                                        g$old$23464$1POZIn)
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$exclude*$23233$1POZIn
                                             (cdr g$sym*$23456$1POZIn)
                                             g$subst$23463$1POZIn)))
                                        (case-lambda
                                          ((g$old*$23467$1POZIn
                                             g$subst$23468$1POZIn)
                                           ((case-lambda
                                              ((g$subst$23469$1POZIn
                                                 g$old*$23470$1POZIn)
                                               (values
                                                 (cons
                                                   g$old$23464$1POZIn
                                                   g$old*$23470$1POZIn)
                                                 g$subst$23469$1POZIn)))
                                            g$subst$23468$1POZIn
                                            g$old*$23467$1POZIn))))))
                                   g$subst$23462$1POZIn
                                   g$old$23461$1POZIn))))))))))
                  (g$find*$23234$1POZIn
                    (case-lambda
                      ((g$sym*$23452$1POZIn g$subst$23453$1POZIn)
                       (g$map$11833$1POZIn
                         (case-lambda
                           ((g$x$23454$1POZIn)
                            ((case-lambda
                               ((g$t$23455$1POZIn)
                                (if g$t$23455$1POZIn
                                  (cdr g$t$23455$1POZIn)
                                  (begin
                                    '#f
                                    (g$syntax-violation$20732$1POZIn
                                      'import
                                      '"cannot find identifier"
                                      g$x$23454$1POZIn)))))
                             (g$assq$11821$1POZIn
                               g$x$23454$1POZIn
                               g$subst$23453$1POZIn))))
                         g$sym*$23452$1POZIn))))
                  (g$rem*$23235$1POZIn
                    (case-lambda
                      ((g$sym*$23448$1POZIn g$subst$23449$1POZIn)
                       ((letrec ((g$f$23450$1POZIn
                                   (case-lambda
                                     ((g$subst$23451$1POZIn)
                                      (if (null? g$subst$23451$1POZIn)
                                        '()
                                        (if (g$memq$11825$1POZIn
                                              (g$caar$12683$1POZIn
                                                g$subst$23451$1POZIn)
                                              g$sym*$23448$1POZIn)
                                          (g$f$23450$1POZIn
                                            (cdr g$subst$23451$1POZIn))
                                          (begin
                                            '#f
                                            (cons
                                              (car g$subst$23451$1POZIn)
                                              (g$f$23450$1POZIn
                                                (cdr g$subst$23451$1POZIn))))))))))
                          g$f$23450$1POZIn)
                        g$subst$23449$1POZIn))))
                  (g$remove-dups$23236$1POZIn
                    (case-lambda
                      ((g$ls$23447$1POZIn)
                       (if (null? g$ls$23447$1POZIn)
                         '()
                         (if (g$memq$11825$1POZIn
                               (car g$ls$23447$1POZIn)
                               (cdr g$ls$23447$1POZIn))
                           (g$remove-dups$23236$1POZIn
                             (cdr g$ls$23447$1POZIn))
                           (begin
                             '#f
                             (cons
                               (car g$ls$23447$1POZIn)
                               (g$remove-dups$23236$1POZIn
                                 (cdr g$ls$23447$1POZIn)))))))))
                  (g$parse-library-name$23237$1POZIn
                    (case-lambda
                      ((g$spec$23331$1POZIn)
                       (letrec* ((g$subversion?$23332$1POZIn
                                   (case-lambda
                                     ((g$x$23445$1POZIn)
                                      ((case-lambda
                                         ((g$x$23446$1POZIn)
                                          (if (g$integer?$13609$1POZIn
                                                g$x$23446$1POZIn)
                                            (if (g$exact?$13604$1POZIn
                                                  g$x$23446$1POZIn)
                                              (begin
                                                '#f
                                                (g$>=$13622$1POZIn
                                                  g$x$23446$1POZIn
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$20735$1POZIn
                                         g$x$23445$1POZIn)))))
                                 (g$subversion-pred$23333$1POZIn
                                   (case-lambda
                                     ((g$x*$23397$1POZIn)
                                      ((case-lambda
                                         ((g$t$23398$1POZIn)
                                          ((case-lambda
                                             ((g$ls/false$23399$1POZIn)
                                              (if (if g$ls/false$23399$1POZIn
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$23400$1POZIn)
                                                           (g$subversion?$23332$1POZIn
                                                             g$n$23400$1POZIn)))
                                                        g$ls/false$23399$1POZIn))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$23401$1POZIn)
                                                     (case-lambda
                                                       ((g$x$23402$1POZIn)
                                                        (g$=$13618$1POZIn
                                                          g$x$23402$1POZIn
                                                          (g$syntax->datum$20735$1POZIn
                                                            g$n$23401$1POZIn))))))
                                                  g$ls/false$23399$1POZIn)
                                                ((case-lambda
                                                   ((g$t$23403$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$23404$1POZIn)
                                                        (if (if g$ls/false$23404$1POZIn
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$23405$1POZIn
                                                                       g$sub*$23406$1POZIn)
                                                                     (eq? (g$syntax->datum$20735$1POZIn
                                                                            g$p?$23405$1POZIn)
                                                                          'and)))
                                                                  g$ls/false$23404$1POZIn))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$23407$1POZIn
                                                                 g$sub*$23408$1POZIn)
                                                               ((case-lambda
                                                                  ((g$p*$23409$1POZIn)
                                                                   (case-lambda
                                                                     ((g$x$23410$1POZIn)
                                                                      (g$for-all$11831$1POZIn
                                                                        (case-lambda
                                                                          ((g$p$23411$1POZIn)
                                                                           (g$p$23411$1POZIn
                                                                             g$x$23410$1POZIn)))
                                                                        g$p*$23409$1POZIn)))))
                                                                (g$map$11833$1POZIn
                                                                  g$subversion-pred$23333$1POZIn
                                                                  g$sub*$23408$1POZIn))))
                                                            g$ls/false$23404$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$23412$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$23413$1POZIn)
                                                                  (if (if g$ls/false$23413$1POZIn
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$23414$1POZIn
                                                                                 g$sub*$23415$1POZIn)
                                                                               (eq? (g$syntax->datum$20735$1POZIn
                                                                                      g$p?$23414$1POZIn)
                                                                                    'or)))
                                                                            g$ls/false$23413$1POZIn))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$23416$1POZIn
                                                                           g$sub*$23417$1POZIn)
                                                                         ((case-lambda
                                                                            ((g$p*$23418$1POZIn)
                                                                             (case-lambda
                                                                               ((g$x$23419$1POZIn)
                                                                                (g$exists$11832$1POZIn
                                                                                  (case-lambda
                                                                                    ((g$p$23420$1POZIn)
                                                                                     (g$p$23420$1POZIn
                                                                                       g$x$23419$1POZIn)))
                                                                                  g$p*$23418$1POZIn)))))
                                                                          (g$map$11833$1POZIn
                                                                            g$subversion-pred$23333$1POZIn
                                                                            g$sub*$23417$1POZIn))))
                                                                      g$ls/false$23413$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$t$23421$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$23422$1POZIn)
                                                                            (if (if g$ls/false$23422$1POZIn
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$23423$1POZIn
                                                                                           g$sub$23424$1POZIn)
                                                                                         (eq? (g$syntax->datum$20735$1POZIn
                                                                                                g$p?$23423$1POZIn)
                                                                                              'not)))
                                                                                      g$ls/false$23422$1POZIn))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$23425$1POZIn
                                                                                     g$sub$23426$1POZIn)
                                                                                   ((case-lambda
                                                                                      ((g$p$23427$1POZIn)
                                                                                       (case-lambda
                                                                                         ((g$x$23428$1POZIn)
                                                                                          (not (g$p$23427$1POZIn
                                                                                                 g$x$23428$1POZIn))))))
                                                                                    (g$subversion-pred$23333$1POZIn
                                                                                      g$sub$23426$1POZIn))))
                                                                                g$ls/false$23422$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$t$23429$1POZIn)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23430$1POZIn)
                                                                                      (if (if g$ls/false$23430$1POZIn
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$23431$1POZIn
                                                                                                     g$n$23432$1POZIn)
                                                                                                   (if (eq? (g$syntax->datum$20735$1POZIn
                                                                                                              g$p?$23431$1POZIn)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$23332$1POZIn
                                                                                                         g$n$23432$1POZIn))
                                                                                                     '#f)))
                                                                                                g$ls/false$23430$1POZIn))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$23433$1POZIn
                                                                                               g$n$23434$1POZIn)
                                                                                             (case-lambda
                                                                                               ((g$x$23435$1POZIn)
                                                                                                (g$<=$13620$1POZIn
                                                                                                  g$x$23435$1POZIn
                                                                                                  (g$syntax->datum$20735$1POZIn
                                                                                                    g$n$23434$1POZIn))))))
                                                                                          g$ls/false$23430$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$t$23436$1POZIn)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23437$1POZIn)
                                                                                                (if (if g$ls/false$23437$1POZIn
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$23438$1POZIn
                                                                                                               g$n$23439$1POZIn)
                                                                                                             (if (eq? (g$syntax->datum$20735$1POZIn
                                                                                                                        g$p?$23438$1POZIn)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$23332$1POZIn
                                                                                                                   g$n$23439$1POZIn))
                                                                                                               '#f)))
                                                                                                          g$ls/false$23437$1POZIn))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$23440$1POZIn
                                                                                                         g$n$23441$1POZIn)
                                                                                                       (case-lambda
                                                                                                         ((g$x$23442$1POZIn)
                                                                                                          (g$>=$13622$1POZIn
                                                                                                            g$x$23442$1POZIn
                                                                                                            (g$syntax->datum$20735$1POZIn
                                                                                                              g$n$23441$1POZIn))))))
                                                                                                    g$ls/false$23437$1POZIn)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$23443$1POZIn)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$23444$1POZIn)
                                                                                                          (if g$ls/false$23444$1POZIn
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$20732$1POZIn
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$23331$1POZIn
                                                                                                                   g$x*$23397$1POZIn)))
                                                                                                              g$ls/false$23444$1POZIn)
                                                                                                            (g$syntax-violation$20732$1POZIn
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$23443$1POZIn))))
                                                                                                       (g$syntax-dispatch$20613$1POZIn
                                                                                                         g$t$23443$1POZIn
                                                                                                         '_))))
                                                                                                   g$t$23436$1POZIn))))
                                                                                             (g$syntax-dispatch$20613$1POZIn
                                                                                               g$t$23436$1POZIn
                                                                                               '(any any)))))
                                                                                         g$t$23429$1POZIn))))
                                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                                     g$t$23429$1POZIn
                                                                                     '(any any)))))
                                                                               g$t$23421$1POZIn))))
                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                           g$t$23421$1POZIn
                                                                           '(any any)))))
                                                                     g$t$23412$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$23412$1POZIn
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$23403$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$23403$1POZIn
                                                       '(any .
                                                             each-any)))))
                                                 g$t$23398$1POZIn))))
                                           (g$syntax-dispatch$20613$1POZIn
                                             g$t$23398$1POZIn
                                             'any))))
                                       g$x*$23397$1POZIn))))
                                 (g$version-pred$23334$1POZIn
                                   (case-lambda
                                     ((g$x*$23357$1POZIn)
                                      ((case-lambda
                                         ((g$t$23358$1POZIn)
                                          ((case-lambda
                                             ((g$ls/false$23359$1POZIn)
                                              (if g$ls/false$23359$1POZIn
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$23360$1POZIn)
                                                        '#t))))
                                                  g$ls/false$23359$1POZIn)
                                                ((case-lambda
                                                   ((g$t$23361$1POZIn)
                                                    ((case-lambda
                                                       ((g$ls/false$23362$1POZIn)
                                                        (if (if g$ls/false$23362$1POZIn
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$23363$1POZIn
                                                                       g$ver*$23364$1POZIn)
                                                                     (eq? (g$syntax->datum$20735$1POZIn
                                                                            g$c$23363$1POZIn)
                                                                          'and)))
                                                                  g$ls/false$23362$1POZIn))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$23365$1POZIn
                                                                 g$ver*$23366$1POZIn)
                                                               ((case-lambda
                                                                  ((g$p*$23367$1POZIn)
                                                                   (case-lambda
                                                                     ((g$x$23368$1POZIn)
                                                                      (g$for-all$11831$1POZIn
                                                                        (case-lambda
                                                                          ((g$p$23369$1POZIn)
                                                                           (g$p$23369$1POZIn
                                                                             g$x$23368$1POZIn)))
                                                                        g$p*$23367$1POZIn)))))
                                                                (g$map$11833$1POZIn
                                                                  g$version-pred$23334$1POZIn
                                                                  g$ver*$23366$1POZIn))))
                                                            g$ls/false$23362$1POZIn)
                                                          ((case-lambda
                                                             ((g$t$23370$1POZIn)
                                                              ((case-lambda
                                                                 ((g$ls/false$23371$1POZIn)
                                                                  (if (if g$ls/false$23371$1POZIn
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$23372$1POZIn
                                                                                 g$ver*$23373$1POZIn)
                                                                               (eq? (g$syntax->datum$20735$1POZIn
                                                                                      g$c$23372$1POZIn)
                                                                                    'or)))
                                                                            g$ls/false$23371$1POZIn))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$23374$1POZIn
                                                                           g$ver*$23375$1POZIn)
                                                                         ((case-lambda
                                                                            ((g$p*$23376$1POZIn)
                                                                             (case-lambda
                                                                               ((g$x$23377$1POZIn)
                                                                                (g$exists$11832$1POZIn
                                                                                  (case-lambda
                                                                                    ((g$p$23378$1POZIn)
                                                                                     (g$p$23378$1POZIn
                                                                                       g$x$23377$1POZIn)))
                                                                                  g$p*$23376$1POZIn)))))
                                                                          (g$map$11833$1POZIn
                                                                            g$version-pred$23334$1POZIn
                                                                            g$ver*$23375$1POZIn))))
                                                                      g$ls/false$23371$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$t$23379$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$ls/false$23380$1POZIn)
                                                                            (if (if g$ls/false$23380$1POZIn
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$23381$1POZIn
                                                                                           g$ver$23382$1POZIn)
                                                                                         (eq? (g$syntax->datum$20735$1POZIn
                                                                                                g$c$23381$1POZIn)
                                                                                              'not)))
                                                                                      g$ls/false$23380$1POZIn))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$23383$1POZIn
                                                                                     g$ver$23384$1POZIn)
                                                                                   ((case-lambda
                                                                                      ((g$p$23385$1POZIn)
                                                                                       (case-lambda
                                                                                         ((g$x$23386$1POZIn)
                                                                                          (not (g$p$23385$1POZIn
                                                                                                 g$x$23386$1POZIn))))))
                                                                                    (g$version-pred$23334$1POZIn
                                                                                      g$ver$23384$1POZIn))))
                                                                                g$ls/false$23380$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$t$23387$1POZIn)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$23388$1POZIn)
                                                                                      (if g$ls/false$23388$1POZIn
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$23389$1POZIn)
                                                                                             ((case-lambda
                                                                                                ((g$p*$23390$1POZIn)
                                                                                                 (case-lambda
                                                                                                   ((g$x$23391$1POZIn)
                                                                                                    ((letrec ((g$f$23392$1POZIn
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$23393$1POZIn
                                                                                                                     g$x$23394$1POZIn)
                                                                                                                   (if (null?
                                                                                                                         g$p*$23393$1POZIn)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$23394$1POZIn)
                                                                                                                       '#f
                                                                                                                       (begin
                                                                                                                         '#f
                                                                                                                         (if ((car g$p*$23393$1POZIn)
                                                                                                                              (car g$x$23394$1POZIn))
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (g$f$23392$1POZIn
                                                                                                                               (cdr g$p*$23393$1POZIn)
                                                                                                                               (cdr g$x$23394$1POZIn)))
                                                                                                                           '#f))))))))
                                                                                                       g$f$23392$1POZIn)
                                                                                                     g$p*$23390$1POZIn
                                                                                                     g$x$23391$1POZIn)))))
                                                                                              (g$map$11833$1POZIn
                                                                                                g$subversion-pred$23333$1POZIn
                                                                                                g$sub*$23389$1POZIn))))
                                                                                          g$ls/false$23388$1POZIn)
                                                                                        ((case-lambda
                                                                                           ((g$t$23395$1POZIn)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$23396$1POZIn)
                                                                                                (if g$ls/false$23396$1POZIn
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$20732$1POZIn
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$23331$1POZIn
                                                                                                         g$x*$23357$1POZIn)))
                                                                                                    g$ls/false$23396$1POZIn)
                                                                                                  (g$syntax-violation$20732$1POZIn
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$23395$1POZIn))))
                                                                                             (g$syntax-dispatch$20613$1POZIn
                                                                                               g$t$23395$1POZIn
                                                                                               '_))))
                                                                                         g$t$23387$1POZIn))))
                                                                                   (g$syntax-dispatch$20613$1POZIn
                                                                                     g$t$23387$1POZIn
                                                                                     'each-any))))
                                                                               g$t$23379$1POZIn))))
                                                                         (g$syntax-dispatch$20613$1POZIn
                                                                           g$t$23379$1POZIn
                                                                           '(any any)))))
                                                                     g$t$23370$1POZIn))))
                                                               (g$syntax-dispatch$20613$1POZIn
                                                                 g$t$23370$1POZIn
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$23361$1POZIn))))
                                                     (g$syntax-dispatch$20613$1POZIn
                                                       g$t$23361$1POZIn
                                                       '(any .
                                                             each-any)))))
                                                 g$t$23358$1POZIn))))
                                           (g$syntax-dispatch$20613$1POZIn
                                             g$t$23358$1POZIn
                                             '()))))
                                       g$x*$23357$1POZIn)))))
                         ((letrec ((g$f$23335$1POZIn
                                     (case-lambda
                                       ((g$x$23336$1POZIn)
                                        ((case-lambda
                                           ((g$t$23337$1POZIn)
                                            ((case-lambda
                                               ((g$ls/false$23338$1POZIn)
                                                (if g$ls/false$23338$1POZIn
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$23339$1POZIn)
                                                       (values
                                                         '()
                                                         (g$version-pred$23334$1POZIn
                                                           g$version-spec*$23339$1POZIn))))
                                                    g$ls/false$23338$1POZIn)
                                                  ((case-lambda
                                                     ((g$t$23340$1POZIn)
                                                      ((case-lambda
                                                         ((g$ls/false$23341$1POZIn)
                                                          (if (if g$ls/false$23341$1POZIn
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$23342$1POZIn
                                                                         g$x*$23343$1POZIn)
                                                                       (g$idsyn?$23230$1POZIn
                                                                         g$x$23342$1POZIn)))
                                                                    g$ls/false$23341$1POZIn))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$23344$1POZIn
                                                                   g$x*$23345$1POZIn)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$23335$1POZIn
                                                                        g$x*$23345$1POZIn)))
                                                                   (case-lambda
                                                                     ((g$name$23348$1POZIn
                                                                        g$pred$23349$1POZIn)
                                                                      ((case-lambda
                                                                         ((g$pred$23350$1POZIn
                                                                            g$name$23351$1POZIn)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$20735$1POZIn
                                                                                g$x$23344$1POZIn)
                                                                              g$name$23351$1POZIn)
                                                                            g$pred$23350$1POZIn)))
                                                                       g$pred$23349$1POZIn
                                                                       g$name$23348$1POZIn))))))
                                                              g$ls/false$23341$1POZIn)
                                                            ((case-lambda
                                                               ((g$t$23352$1POZIn)
                                                                ((case-lambda
                                                                   ((g$ls/false$23353$1POZIn)
                                                                    (if g$ls/false$23353$1POZIn
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$23354$1POZIn)
                                                                                '#t)))))
                                                                        g$ls/false$23353$1POZIn)
                                                                      ((case-lambda
                                                                         ((g$t$23355$1POZIn)
                                                                          ((case-lambda
                                                                             ((g$ls/false$23356$1POZIn)
                                                                              (if g$ls/false$23356$1POZIn
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$20732$1POZIn
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$23331$1POZIn)))
                                                                                  g$ls/false$23356$1POZIn)
                                                                                (g$syntax-violation$20732$1POZIn
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$23355$1POZIn))))
                                                                           (g$syntax-dispatch$20613$1POZIn
                                                                             g$t$23355$1POZIn
                                                                             '_))))
                                                                       g$t$23352$1POZIn))))
                                                                 (g$syntax-dispatch$20613$1POZIn
                                                                   g$t$23352$1POZIn
                                                                   '()))))
                                                             g$t$23340$1POZIn))))
                                                       (g$syntax-dispatch$20613$1POZIn
                                                         g$t$23340$1POZIn
                                                         '(any .
                                                               any)))))
                                                   g$t$23337$1POZIn))))
                                             (g$syntax-dispatch$20613$1POZIn
                                               g$t$23337$1POZIn
                                               '(each-any)))))
                                         g$x$23336$1POZIn)))))
                            g$f$23335$1POZIn)
                          g$spec$23331$1POZIn)))))
                  (g$import-library$23238$1POZIn
                    (case-lambda
                      ((g$spec*$23323$1POZIn)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$23237$1POZIn
                              g$spec*$23323$1POZIn)))
                         (case-lambda
                           ((g$name$23326$1POZIn g$pred$23327$1POZIn)
                            ((case-lambda
                               ((g$pred$23328$1POZIn
                                  g$name$23329$1POZIn)
                                (begin
                                  (if (null? g$name$23329$1POZIn)
                                    (g$syntax-violation$20732$1POZIn
                                      'import
                                      '"empty library name"
                                      g$spec*$23323$1POZIn)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$23330$1POZIn)
                                      (begin
                                        (if (not g$lib$23330$1POZIn)
                                          (g$syntax-violation$20732$1POZIn
                                            'import
                                            '"cannot find library with required name"
                                            g$name$23329$1POZIn)
                                          (void))
                                        (if (not (g$pred$23328$1POZIn
                                                   (g$library-version$19774$1POZIn
                                                     g$lib$23330$1POZIn)))
                                          (g$syntax-violation$20732$1POZIn
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$23323$1POZIn
                                            g$lib$23330$1POZIn)
                                          (void))
                                        ((g$imp-collector$20670$1POZIn)
                                         g$lib$23330$1POZIn)
                                        (g$library-subst$19778$1POZIn
                                          g$lib$23330$1POZIn))))
                                   (g$find-library-by-name$19814$1POZIn
                                     g$name$23329$1POZIn)))))
                             g$pred$23327$1POZIn
                             g$name$23326$1POZIn)))))))
                  (g$get-import$23239$1POZIn
                    (case-lambda
                      ((g$spec$23252$1POZIn)
                       ((case-lambda
                          ((g$t$23253$1POZIn)
                           ((case-lambda
                              ((g$ls/false$23254$1POZIn)
                               (if (if g$ls/false$23254$1POZIn
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$23255$1POZIn
                                              g$x*$23256$1POZIn)
                                            (not (g$memq$11825$1POZIn
                                                   (g$syntax->datum$20735$1POZIn
                                                     g$x$23255$1POZIn)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$23254$1POZIn))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$23257$1POZIn
                                        g$x*$23258$1POZIn)
                                      (g$import-library$23238$1POZIn
                                        (cons
                                          g$x$23257$1POZIn
                                          g$x*$23258$1POZIn))))
                                   g$ls/false$23254$1POZIn)
                                 ((case-lambda
                                    ((g$t$23259$1POZIn)
                                     ((case-lambda
                                        ((g$ls/false$23260$1POZIn)
                                         (if (if g$ls/false$23260$1POZIn
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$23261$1POZIn
                                                        g$isp$23262$1POZIn
                                                        g$old*$23263$1POZIn
                                                        g$new*$23264$1POZIn)
                                                      (if (eq? (g$syntax->datum$20735$1POZIn
                                                                 g$rename$23261$1POZIn)
                                                               'rename)
                                                        (if (g$for-all$11831$1POZIn
                                                              g$idsyn?$23230$1POZIn
                                                              g$old*$23263$1POZIn)
                                                          (begin
                                                            '#f
                                                            (g$for-all$11831$1POZIn
                                                              g$idsyn?$23230$1POZIn
                                                              g$new*$23264$1POZIn))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$23260$1POZIn))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$23265$1POZIn
                                                  g$isp$23266$1POZIn
                                                  g$old*$23267$1POZIn
                                                  g$new*$23268$1POZIn)
                                                ((case-lambda
                                                   ((g$subst$23269$1POZIn
                                                      g$old*$23270$1POZIn
                                                      g$new*$23271$1POZIn)
                                                    ((case-lambda
                                                       ((g$old-label*$23272$1POZIn)
                                                        ((case-lambda
                                                           ((g$subst$23273$1POZIn)
                                                            (g$merge-substs$23232$1POZIn
                                                              (g$map$11833$1POZIn
                                                                cons
                                                                g$new*$23271$1POZIn
                                                                g$old-label*$23272$1POZIn)
                                                              g$subst$23273$1POZIn)))
                                                         (g$rem*$23235$1POZIn
                                                           g$old*$23270$1POZIn
                                                           g$subst$23269$1POZIn))))
                                                     (g$find*$23234$1POZIn
                                                       g$old*$23270$1POZIn
                                                       g$subst$23269$1POZIn))))
                                                 (g$get-import$23239$1POZIn
                                                   g$isp$23266$1POZIn)
                                                 (g$map$11833$1POZIn
                                                   g$syntax->datum$20735$1POZIn
                                                   g$old*$23267$1POZIn)
                                                 (g$map$11833$1POZIn
                                                   g$syntax->datum$20735$1POZIn
                                                   g$new*$23268$1POZIn))))
                                             g$ls/false$23260$1POZIn)
                                           ((case-lambda
                                              ((g$t$23274$1POZIn)
                                               ((case-lambda
                                                  ((g$ls/false$23275$1POZIn)
                                                   (if (if g$ls/false$23275$1POZIn
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$23276$1POZIn
                                                                  g$isp$23277$1POZIn
                                                                  g$sym*$23278$1POZIn)
                                                                (if (eq? (g$syntax->datum$20735$1POZIn
                                                                           g$except$23276$1POZIn)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$11831$1POZIn
                                                                      g$idsyn?$23230$1POZIn
                                                                      g$sym*$23278$1POZIn))
                                                                  '#f)))
                                                             g$ls/false$23275$1POZIn))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$23279$1POZIn
                                                            g$isp$23280$1POZIn
                                                            g$sym*$23281$1POZIn)
                                                          ((case-lambda
                                                             ((g$subst$23282$1POZIn)
                                                              (g$rem*$23235$1POZIn
                                                                (g$map$11833$1POZIn
                                                                  g$syntax->datum$20735$1POZIn
                                                                  g$sym*$23281$1POZIn)
                                                                g$subst$23282$1POZIn)))
                                                           (g$get-import$23239$1POZIn
                                                             g$isp$23280$1POZIn))))
                                                       g$ls/false$23275$1POZIn)
                                                     ((case-lambda
                                                        ((g$t$23283$1POZIn)
                                                         ((case-lambda
                                                            ((g$ls/false$23284$1POZIn)
                                                             (if (if g$ls/false$23284$1POZIn
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$23285$1POZIn
                                                                            g$isp$23286$1POZIn
                                                                            g$sym*$23287$1POZIn)
                                                                          (if (eq? (g$syntax->datum$20735$1POZIn
                                                                                     g$only$23285$1POZIn)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$11831$1POZIn
                                                                                g$idsyn?$23230$1POZIn
                                                                                g$sym*$23287$1POZIn))
                                                                            '#f)))
                                                                       g$ls/false$23284$1POZIn))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$23288$1POZIn
                                                                      g$isp$23289$1POZIn
                                                                      g$sym*$23290$1POZIn)
                                                                    ((case-lambda
                                                                       ((g$subst$23291$1POZIn
                                                                          g$sym*$23292$1POZIn)
                                                                        ((case-lambda
                                                                           ((g$sym*$23293$1POZIn)
                                                                            ((case-lambda
                                                                               ((g$lab*$23294$1POZIn)
                                                                                (g$map$11833$1POZIn
                                                                                  cons
                                                                                  g$sym*$23293$1POZIn
                                                                                  g$lab*$23294$1POZIn)))
                                                                             (g$find*$23234$1POZIn
                                                                               g$sym*$23293$1POZIn
                                                                               g$subst$23291$1POZIn))))
                                                                         (g$remove-dups$23236$1POZIn
                                                                           g$sym*$23292$1POZIn))))
                                                                     (g$get-import$23239$1POZIn
                                                                       g$isp$23289$1POZIn)
                                                                     (g$map$11833$1POZIn
                                                                       g$syntax->datum$20735$1POZIn
                                                                       g$sym*$23290$1POZIn))))
                                                                 g$ls/false$23284$1POZIn)
                                                               ((case-lambda
                                                                  ((g$t$23295$1POZIn)
                                                                   ((case-lambda
                                                                      ((g$ls/false$23296$1POZIn)
                                                                       (if (if g$ls/false$23296$1POZIn
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$23297$1POZIn
                                                                                      g$isp$23298$1POZIn
                                                                                      g$p$23299$1POZIn)
                                                                                    (if (eq? (g$syntax->datum$20735$1POZIn
                                                                                               g$prefix$23297$1POZIn)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$23230$1POZIn
                                                                                          g$p$23299$1POZIn))
                                                                                      '#f)))
                                                                                 g$ls/false$23296$1POZIn))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$23300$1POZIn
                                                                                g$isp$23301$1POZIn
                                                                                g$p$23302$1POZIn)
                                                                              ((case-lambda
                                                                                 ((g$subst$23303$1POZIn
                                                                                    g$prefix$23304$1POZIn)
                                                                                  (g$map$11833$1POZIn
                                                                                    (case-lambda
                                                                                      ((g$x$23305$1POZIn)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$23304$1POZIn
                                                                                             (symbol->string
                                                                                               (car g$x$23305$1POZIn))))
                                                                                         (cdr g$x$23305$1POZIn))))
                                                                                    g$subst$23303$1POZIn)))
                                                                               (g$get-import$23239$1POZIn
                                                                                 g$isp$23301$1POZIn)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$20735$1POZIn
                                                                                   g$p$23302$1POZIn)))))
                                                                           g$ls/false$23296$1POZIn)
                                                                         ((case-lambda
                                                                            ((g$t$23306$1POZIn)
                                                                             ((case-lambda
                                                                                ((g$ls/false$23307$1POZIn)
                                                                                 (if (if g$ls/false$23307$1POZIn
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$23308$1POZIn
                                                                                                g$spec*$23309$1POZIn)
                                                                                              (eq? (g$syntax->datum$20735$1POZIn
                                                                                                     g$library$23308$1POZIn)
                                                                                                   'library)))
                                                                                           g$ls/false$23307$1POZIn))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$23310$1POZIn
                                                                                          g$spec*$23311$1POZIn)
                                                                                        (g$import-library$23238$1POZIn
                                                                                          g$spec*$23311$1POZIn)))
                                                                                     g$ls/false$23307$1POZIn)
                                                                                   ((case-lambda
                                                                                      ((g$t$23312$1POZIn)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$23313$1POZIn)
                                                                                           (if (if g$ls/false$23313$1POZIn
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$23314$1POZIn
                                                                                                          g$isp$23315$1POZIn
                                                                                                          g$rest$23316$1POZIn)
                                                                                                        (eq? (g$syntax->datum$20735$1POZIn
                                                                                                               g$for$23314$1POZIn)
                                                                                                             'for)))
                                                                                                     g$ls/false$23313$1POZIn))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$23317$1POZIn
                                                                                                    g$isp$23318$1POZIn
                                                                                                    g$rest$23319$1POZIn)
                                                                                                  (g$get-import$23239$1POZIn
                                                                                                    g$isp$23318$1POZIn)))
                                                                                               g$ls/false$23313$1POZIn)
                                                                                             ((case-lambda
                                                                                                ((g$t$23320$1POZIn)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$23321$1POZIn)
                                                                                                     (if g$ls/false$23321$1POZIn
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$23322$1POZIn)
                                                                                                            (g$syntax-violation$20732$1POZIn
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$23322$1POZIn)))
                                                                                                         g$ls/false$23321$1POZIn)
                                                                                                       (g$syntax-violation$20732$1POZIn
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$23320$1POZIn))))
                                                                                                  (g$syntax-dispatch$20613$1POZIn
                                                                                                    g$t$23320$1POZIn
                                                                                                    'any))))
                                                                                              g$t$23312$1POZIn))))
                                                                                        (g$syntax-dispatch$20613$1POZIn
                                                                                          g$t$23312$1POZIn
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$23306$1POZIn))))
                                                                              (g$syntax-dispatch$20613$1POZIn
                                                                                g$t$23306$1POZIn
                                                                                '(any each-any)))))
                                                                          g$t$23295$1POZIn))))
                                                                    (g$syntax-dispatch$20613$1POZIn
                                                                      g$t$23295$1POZIn
                                                                      '(any any
                                                                            any)))))
                                                                g$t$23283$1POZIn))))
                                                          (g$syntax-dispatch$20613$1POZIn
                                                            g$t$23283$1POZIn
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$23274$1POZIn))))
                                                (g$syntax-dispatch$20613$1POZIn
                                                  g$t$23274$1POZIn
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$23259$1POZIn))))
                                      (g$syntax-dispatch$20613$1POZIn
                                        g$t$23259$1POZIn
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$23253$1POZIn))))
                            (g$syntax-dispatch$20613$1POZIn
                              g$t$23253$1POZIn
                              '(any . each-any)))))
                        g$spec$23252$1POZIn))))
                  (g$add-imports!$23240$1POZIn
                    (case-lambda
                      ((g$imp$23244$1POZIn g$h$23245$1POZIn)
                       ((case-lambda
                          ((g$subst$23246$1POZIn)
                           (g$for-each$11834$1POZIn
                             (case-lambda
                               ((g$x$23247$1POZIn)
                                ((case-lambda
                                   ((g$name$23248$1POZIn
                                      g$label$23249$1POZIn)
                                    ((case-lambda
                                       ((g$t$23250$1POZIn)
                                        (if g$t$23250$1POZIn
                                          ((case-lambda
                                             ((g$l$23251$1POZIn)
                                              (if (not (eq? g$l$23251$1POZIn
                                                            g$label$23249$1POZIn))
                                                (g$dup-error$23231$1POZIn
                                                  g$name$23248$1POZIn)
                                                (void))))
                                           g$t$23250$1POZIn)
                                          (begin
                                            '#f
                                            (g$hashtable-set!$12776$1POZIn
                                              g$h$23245$1POZIn
                                              g$name$23248$1POZIn
                                              g$label$23249$1POZIn)))))
                                     (g$hashtable-ref$12775$1POZIn
                                       g$h$23245$1POZIn
                                       g$name$23248$1POZIn
                                       '#f))))
                                 (car g$x$23247$1POZIn)
                                 (cdr g$x$23247$1POZIn))))
                             g$subst$23246$1POZIn)))
                        (g$get-import$23239$1POZIn
                          g$imp$23244$1POZIn))))))
          ((letrec ((g$f$23241$1POZIn
                      (case-lambda
                        ((g$imp*$23242$1POZIn g$h$23243$1POZIn)
                         (if (null? g$imp*$23242$1POZIn)
                           (hashtable-entries g$h$23243$1POZIn)
                           (begin
                             '#f
                             (g$add-imports!$23240$1POZIn
                               (car g$imp*$23242$1POZIn)
                               g$h$23243$1POZIn)
                             (g$f$23241$1POZIn
                               (cdr g$imp*$23242$1POZIn)
                               g$h$23243$1POZIn)))))))
             g$f$23241$1POZIn)
           g$imp*$23229$1POZIn
           (g$make-eq-hashtable$12772$1POZIn))))))
   (g$make-top-rib$20666$1POZIn
     g$make-top-rib$24259$1POZIn
     (case-lambda
       ((g$names$23491$1POZIn g$labels$23492$1POZIn)
        ((case-lambda
           ((g$rib$23493$1POZIn)
            (begin
              (g$vector-for-each$12733$1POZIn
                (case-lambda
                  ((g$name$23494$1POZIn g$label$23495$1POZIn)
                   (begin
                     (if (not (g$symbol?$12665$1POZIn
                                g$name$23494$1POZIn))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$23494$1POZIn)
                       (void))
                     (g$extend-rib/nc!$20077$1POZIn
                       g$rib$23493$1POZIn
                       (g$make-stx$20088$1POZIn
                         g$name$23494$1POZIn
                         g$top-mark*$20048$1POZIn
                         '()
                         '())
                       g$label$23495$1POZIn))))
                g$names$23491$1POZIn
                g$labels$23492$1POZIn)
              g$rib$23493$1POZIn)))
         (g$make-cache-rib$20074$1POZIn)))))
   (g$make-collector$20667$1POZIn
     g$make-collector$24260$1POZIn
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$23496$1POZIn)
            (case-lambda
              (() g$ls$23496$1POZIn)
              ((g$x$23497$1POZIn)
               (set! g$ls$23496$1POZIn
                 (g$set-cons$20045$1POZIn
                   g$x$23497$1POZIn
                   g$ls$23496$1POZIn))))))
         '()))))
   (g$inv-collector$20668$1POZIn
     g$inv-collector$24261$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda
         (g$args$23498$1POZIn
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23499$1POZIn)
          (begin
            (if (not (g$procedure?$12667$1POZIn g$x$23499$1POZIn))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$23499$1POZIn)
              (void))
            g$x$23499$1POZIn)))))
   (g$vis-collector$20669$1POZIn
     g$vis-collector$24262$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda
         (g$args$23500$1POZIn
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23501$1POZIn)
          (begin
            (if (not (g$procedure?$12667$1POZIn g$x$23501$1POZIn))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$23501$1POZIn)
              (void))
            g$x$23501$1POZIn)))))
   (g$imp-collector$20670$1POZIn
     g$imp-collector$24263$1POZIn
     (g$make-parameter$18976$1POZIn
       (case-lambda
         (g$args$23502$1POZIn
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$23503$1POZIn)
          (begin
            (if (not (g$procedure?$12667$1POZIn g$x$23503$1POZIn))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$23503$1POZIn)
              (void))
            g$x$23503$1POZIn)))))
   (g$chi-library-internal$20671$1POZIn
     g$chi-library-internal$24264$1POZIn
     (case-lambda
       ((g$e*$23504$1POZIn g$rib$23505$1POZIn g$mix?$23506$1POZIn)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$20660$1POZIn
               g$e*$23504$1POZIn
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$23505$1POZIn
               g$mix?$23506$1POZIn
               '#t)))
          (case-lambda
            ((g$e*$23515$1POZIn
               g$r$23516$1POZIn
               g$mr$23517$1POZIn
               g$lex*$23518$1POZIn
               g$rhs*$23519$1POZIn
               g$mod**$23520$1POZIn
               g$_kwd*$23521$1POZIn
               g$exp*$23522$1POZIn)
             ((case-lambda
                ((g$exp*$23523$1POZIn
                   g$_kwd*$23524$1POZIn
                   g$mod**$23525$1POZIn
                   g$rhs*$23526$1POZIn
                   g$lex*$23527$1POZIn
                   g$mr$23528$1POZIn
                   g$r$23529$1POZIn
                   g$e*$23530$1POZIn)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$12682$1POZIn g$mod**$23525$1POZIn))
                     g$e*$23530$1POZIn)
                   g$r$23529$1POZIn
                   g$mr$23528$1POZIn
                   (g$reverse$12682$1POZIn g$lex*$23527$1POZIn)
                   (g$reverse$12682$1POZIn g$rhs*$23526$1POZIn)
                   g$exp*$23523$1POZIn)))
              g$exp*$23522$1POZIn
              g$_kwd*$23521$1POZIn
              g$mod**$23520$1POZIn
              g$rhs*$23519$1POZIn
              g$lex*$23518$1POZIn
              g$mr$23517$1POZIn
              g$r$23516$1POZIn
              g$e*$23515$1POZIn)))))))
   (g$chi-interaction-expr$20672$1POZIn
     g$chi-interaction-expr$24265$1POZIn
     (case-lambda
       ((g$e$23531$1POZIn g$rib$23532$1POZIn g$r$23533$1POZIn)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$20660$1POZIn
               (list g$e$23531$1POZIn)
               g$r$23533$1POZIn
               g$r$23533$1POZIn
               '()
               '()
               '()
               '()
               '()
               g$rib$23532$1POZIn
               '#t
               '#f)))
          (case-lambda
            ((g$e*$23542$1POZIn
               g$r$23543$1POZIn
               g$mr$23544$1POZIn
               g$lex*$23545$1POZIn
               g$rhs*$23546$1POZIn
               g$mod**$23547$1POZIn
               g$_kwd*$23548$1POZIn
               g$_exp*$23549$1POZIn)
             ((case-lambda
                ((g$_exp*$23550$1POZIn
                   g$_kwd*$23551$1POZIn
                   g$mod**$23552$1POZIn
                   g$rhs*$23553$1POZIn
                   g$lex*$23554$1POZIn
                   g$mr$23555$1POZIn
                   g$r$23556$1POZIn
                   g$e*$23557$1POZIn)
                 ((case-lambda
                    ((g$e*$23558$1POZIn)
                     ((case-lambda
                        ((g$e$23559$1POZIn)
                         (values g$e$23559$1POZIn g$r$23556$1POZIn)))
                      (if (null? g$e*$23558$1POZIn)
                        (g$build-void$20041$1POZIn)
                        (if (null? (cdr g$e*$23558$1POZIn))
                          (car g$e*$23558$1POZIn)
                          (begin
                            '#f
                            (g$build-sequence$20040$1POZIn
                              '#f
                              g$e*$23558$1POZIn)))))))
                  (g$expand-interaction-rhs*/init*$20638$1POZIn
                    (g$reverse$12682$1POZIn g$lex*$23554$1POZIn)
                    (g$reverse$12682$1POZIn g$rhs*$23553$1POZIn)
                    (append
                      (apply
                        append
                        (g$reverse$12682$1POZIn g$mod**$23552$1POZIn))
                      g$e*$23557$1POZIn)
                    g$r$23556$1POZIn
                    g$mr$23555$1POZIn))))
              g$_exp*$23549$1POZIn
              g$_kwd*$23548$1POZIn
              g$mod**$23547$1POZIn
              g$rhs*$23546$1POZIn
              g$lex*$23545$1POZIn
              g$mr$23544$1POZIn
              g$r$23543$1POZIn
              g$e*$23542$1POZIn)))))))
   (g$library-body-expander$20673$1POZIn
     g$library-body-expander$24266$1POZIn
     (case-lambda
       ((g$name$23560$1POZIn
          g$main-exp*$23561$1POZIn
          g$imp*$23562$1POZIn
          g$b*$23563$1POZIn
          g$mix?$23564$1POZIn)
        (letrec* ((g$itc$23565$1POZIn (g$make-collector$20667$1POZIn)))
          ((case-lambda
             ((g$imp-collector$23570$1POZIn
                g$top-level-context$23571$1POZIn
                g$imp-collector$23572$1POZIn
                g$top-level-context$23573$1POZIn)
              ((case-lambda
                 ((g$swap$23574$1POZIn)
                  (dynamic-wind
                    g$swap$23574$1POZIn
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$20665$1POZIn
                              g$imp*$23562$1POZIn)))
                         (case-lambda
                           ((g$subst-names$23577$1POZIn
                              g$subst-labels$23578$1POZIn)
                            ((case-lambda
                               ((g$subst-labels$23579$1POZIn
                                  g$subst-names$23580$1POZIn)
                                ((case-lambda
                                   ((g$rib$23581$1POZIn)
                                    (letrec* ((g$wrap$23582$1POZIn
                                                (case-lambda
                                                  ((g$x$23644$1POZIn)
                                                   (g$make-stx$20088$1POZIn
                                                     g$x$23644$1POZIn
                                                     g$top-mark*$20048$1POZIn
                                                     (list
                                                       g$rib$23581$1POZIn)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$23583$1POZIn
                                            g$main-exp*$23584$1POZIn
                                            g$rtc$23585$1POZIn
                                            g$vtc$23586$1POZIn)
                                          ((case-lambda
                                             ((g$inv-collector$23591$1POZIn
                                                g$vis-collector$23592$1POZIn
                                                g$inv-collector$23593$1POZIn
                                                g$vis-collector$23594$1POZIn)
                                              ((case-lambda
                                                 ((g$swap$23595$1POZIn)
                                                  (dynamic-wind
                                                    g$swap$23595$1POZIn
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$20671$1POZIn
                                                              g$b*$23583$1POZIn
                                                              g$rib$23581$1POZIn
                                                              g$mix?$23564$1POZIn)))
                                                         (case-lambda
                                                           ((g$init*$23602$1POZIn
                                                              g$r$23603$1POZIn
                                                              g$mr$23604$1POZIn
                                                              g$lex*$23605$1POZIn
                                                              g$rhs*$23606$1POZIn
                                                              g$internal-exp*$23607$1POZIn)
                                                            ((case-lambda
                                                               ((g$internal-exp*$23608$1POZIn
                                                                  g$rhs*$23609$1POZIn
                                                                  g$lex*$23610$1POZIn
                                                                  g$mr$23611$1POZIn
                                                                  g$r$23612$1POZIn
                                                                  g$init*$23613$1POZIn)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$20662$1POZIn
                                                                       (append
                                                                         g$main-exp*$23584$1POZIn
                                                                         g$internal-exp*$23608$1POZIn))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$23616$1POZIn
                                                                       g$exp-id*$23617$1POZIn)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$23618$1POZIn
                                                                           g$exp-name*$23619$1POZIn)
                                                                         (begin
                                                                           (g$seal-rib!$20079$1POZIn
                                                                             g$rib$23581$1POZIn)
                                                                           ((case-lambda
                                                                              ((g$init*$23620$1POZIn)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$23621$1POZIn)
                                                                                   (begin
                                                                                     (g$unseal-rib!$20080$1POZIn
                                                                                       g$rib$23581$1POZIn)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$23622$1POZIn
                                                                                           g$export-subst$23623$1POZIn)
                                                                                         (letrec* ((g$errstr$23624$1POZIn
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$20721$1POZIn
                                                                                                  g$lex*$23610$1POZIn
                                                                                                  g$loc*$23622$1POZIn
                                                                                                  g$r$23612$1POZIn)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$23628$1POZIn
                                                                                                  g$global*$23629$1POZIn
                                                                                                  g$macro*$23630$1POZIn)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$23631$1POZIn
                                                                                                      g$global*$23632$1POZIn
                                                                                                      g$export-env$23633$1POZIn)
                                                                                                    (begin
                                                                                                      (g$for-each$11834$1POZIn
                                                                                                        (case-lambda
                                                                                                          ((g$s$23634$1POZIn)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$23635$1POZIn
                                                                                                                 g$label$23636$1POZIn)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$23637$1POZIn)
                                                                                                                   (if g$p$23637$1POZIn
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$23638$1POZIn)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$23639$1POZIn)
                                                                                                                             (if (eq? g$type$23639$1POZIn
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$20732$1POZIn
                                                                                                                                 'export
                                                                                                                                 g$errstr$23624$1POZIn
                                                                                                                                 g$name$23635$1POZIn)
                                                                                                                               (void))))
                                                                                                                          (car g$b$23638$1POZIn))))
                                                                                                                      (cdr g$p$23637$1POZIn))
                                                                                                                     (void))))
                                                                                                                (g$assq$11821$1POZIn
                                                                                                                  g$label$23636$1POZIn
                                                                                                                  g$export-env$23633$1POZIn))))
                                                                                                            (car g$s$23634$1POZIn)
                                                                                                            (cdr g$s$23634$1POZIn))))
                                                                                                        g$export-subst$23623$1POZIn)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$23640$1POZIn
                                                                                                            g$invoke-definitions$23641$1POZIn)
                                                                                                          (values
                                                                                                            (g$itc$23565$1POZIn)
                                                                                                            (g$rtc$23585$1POZIn)
                                                                                                            (g$vtc$23586$1POZIn)
                                                                                                            (g$build-sequence$20040$1POZIn
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$23641$1POZIn
                                                                                                                (list
                                                                                                                  g$invoke-body$23640$1POZIn)))
                                                                                                            g$macro*$23631$1POZIn
                                                                                                            g$export-subst$23623$1POZIn
                                                                                                            g$export-env$23633$1POZIn)))
                                                                                                       (g$build-library-letrec*$20044$1POZIn
                                                                                                         '#f
                                                                                                         g$name$23560$1POZIn
                                                                                                         g$lex*$23610$1POZIn
                                                                                                         g$loc*$23622$1POZIn
                                                                                                         g$rhs*$23621$1POZIn
                                                                                                         (if (null?
                                                                                                               g$init*$23620$1POZIn)
                                                                                                           (g$build-void$20041$1POZIn)
                                                                                                           (g$build-sequence$20040$1POZIn
                                                                                                             '#f
                                                                                                             g$init*$23620$1POZIn)))
                                                                                                       (g$map$11833$1POZIn
                                                                                                         g$build-global-define$20036$1POZIn
                                                                                                         (g$map$11833$1POZIn
                                                                                                           cdr
                                                                                                           g$global*$23632$1POZIn))))))
                                                                                                 g$macro*$23630$1POZIn
                                                                                                 g$global*$23629$1POZIn
                                                                                                 g$export-env$23628$1POZIn)))))))
                                                                                      (g$map$11833$1POZIn
                                                                                        g$gen-global$20051$1POZIn
                                                                                        g$lex*$23610$1POZIn)
                                                                                      (g$make-export-subst$20720$1POZIn
                                                                                        g$exp-name*$23619$1POZIn
                                                                                        g$exp-id*$23618$1POZIn)))))
                                                                                (g$chi-rhs*$20639$1POZIn
                                                                                  g$rhs*$23609$1POZIn
                                                                                  g$r$23612$1POZIn
                                                                                  g$mr$23611$1POZIn))))
                                                                            (g$chi-expr*$20629$1POZIn
                                                                              g$init*$23613$1POZIn
                                                                              g$r$23612$1POZIn
                                                                              g$mr$23611$1POZIn)))))
                                                                      g$exp-id*$23617$1POZIn
                                                                      g$exp-name*$23616$1POZIn))))))
                                                             g$internal-exp*$23607$1POZIn
                                                             g$rhs*$23606$1POZIn
                                                             g$lex*$23605$1POZIn
                                                             g$mr$23604$1POZIn
                                                             g$r$23603$1POZIn
                                                             g$init*$23602$1POZIn))))))
                                                    g$swap$23595$1POZIn)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$23642$1POZIn)
                                                        (begin
                                                          (g$inv-collector$23591$1POZIn
                                                            g$inv-collector$23593$1POZIn)
                                                          (set! g$inv-collector$23593$1POZIn
                                                            g$t$23642$1POZIn))))
                                                     (g$inv-collector$23591$1POZIn))
                                                    ((case-lambda
                                                       ((g$t$23643$1POZIn)
                                                        (begin
                                                          (g$vis-collector$23592$1POZIn
                                                            g$vis-collector$23594$1POZIn)
                                                          (set! g$vis-collector$23594$1POZIn
                                                            g$t$23643$1POZIn))))
                                                     (g$vis-collector$23592$1POZIn))))))))
                                           g$inv-collector$20668$1POZIn
                                           g$vis-collector$20669$1POZIn
                                           g$rtc$23585$1POZIn
                                           g$vtc$23586$1POZIn)))
                                       (g$map$11833$1POZIn
                                         g$wrap$23582$1POZIn
                                         g$b*$23563$1POZIn)
                                       (g$map$11833$1POZIn
                                         g$wrap$23582$1POZIn
                                         g$main-exp*$23561$1POZIn)
                                       (g$make-collector$20667$1POZIn)
                                       (g$make-collector$20667$1POZIn)))))
                                 (g$make-top-rib$20666$1POZIn
                                   g$subst-names$23580$1POZIn
                                   g$subst-labels$23579$1POZIn))))
                             g$subst-labels$23578$1POZIn
                             g$subst-names$23577$1POZIn))))))
                    g$swap$23574$1POZIn)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$23645$1POZIn)
                        (begin
                          (g$imp-collector$23570$1POZIn
                            g$imp-collector$23572$1POZIn)
                          (set! g$imp-collector$23572$1POZIn
                            g$t$23645$1POZIn))))
                     (g$imp-collector$23570$1POZIn))
                    ((case-lambda
                       ((g$t$23646$1POZIn)
                        (begin
                          (g$top-level-context$23571$1POZIn
                            g$top-level-context$23573$1POZIn)
                          (set! g$top-level-context$23573$1POZIn
                            g$t$23646$1POZIn))))
                     (g$top-level-context$23571$1POZIn))))))))
           g$imp-collector$20670$1POZIn
           g$top-level-context$20740$1POZIn
           g$itc$23565$1POZIn
           '#f)))))
   (g$core-library-expander$20674$1POZIn
     g$core-library-expander$24267$1POZIn
     (case-lambda
       ((g$e$23647$1POZIn g$verify-name$23648$1POZIn)
        (call-with-values
          (case-lambda
            (() (g$parse-library$20664$1POZIn g$e$23647$1POZIn)))
          (case-lambda
            ((g$name*$23653$1POZIn
               g$exp*$23654$1POZIn
               g$imp*$23655$1POZIn
               g$b*$23656$1POZIn)
             ((case-lambda
                ((g$b*$23657$1POZIn
                   g$imp*$23658$1POZIn
                   g$exp*$23659$1POZIn
                   g$name*$23660$1POZIn)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$20663$1POZIn
                        g$name*$23660$1POZIn)))
                   (case-lambda
                     ((g$name$23663$1POZIn g$ver$23664$1POZIn)
                      ((case-lambda
                         ((g$ver$23665$1POZIn g$name$23666$1POZIn)
                          (begin
                            (g$verify-name$23648$1POZIn
                              g$name$23666$1POZIn)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$20673$1POZIn
                                   g$name$23666$1POZIn
                                   g$exp*$23659$1POZIn
                                   g$imp*$23658$1POZIn
                                   g$b*$23657$1POZIn
                                   '#f)))
                              (case-lambda
                                ((g$imp*$23674$1POZIn
                                   g$invoke-req*$23675$1POZIn
                                   g$visit-req*$23676$1POZIn
                                   g$invoke-code$23677$1POZIn
                                   g$visit-code$23678$1POZIn
                                   g$export-subst$23679$1POZIn
                                   g$export-env$23680$1POZIn)
                                 ((case-lambda
                                    ((g$export-env$23681$1POZIn
                                       g$export-subst$23682$1POZIn
                                       g$visit-code$23683$1POZIn
                                       g$invoke-code$23684$1POZIn
                                       g$visit-req*$23685$1POZIn
                                       g$invoke-req*$23686$1POZIn
                                       g$imp*$23687$1POZIn)
                                     (values
                                       g$name$23666$1POZIn
                                       g$ver$23665$1POZIn
                                       g$imp*$23687$1POZIn
                                       g$invoke-req*$23686$1POZIn
                                       g$visit-req*$23685$1POZIn
                                       g$invoke-code$23684$1POZIn
                                       g$visit-code$23683$1POZIn
                                       g$export-subst$23682$1POZIn
                                       g$export-env$23681$1POZIn)))
                                  g$export-env$23680$1POZIn
                                  g$export-subst$23679$1POZIn
                                  g$visit-code$23678$1POZIn
                                  g$invoke-code$23677$1POZIn
                                  g$visit-req*$23676$1POZIn
                                  g$invoke-req*$23675$1POZIn
                                  g$imp*$23674$1POZIn)))))))
                       g$ver$23664$1POZIn
                       g$name$23663$1POZIn))))))
              g$b*$23656$1POZIn
              g$imp*$23655$1POZIn
              g$exp*$23654$1POZIn
              g$name*$23653$1POZIn)))))))
   (g$parse-top-level-program$20675$1POZIn
     g$parse-top-level-program$24268$1POZIn
     (case-lambda
       ((g$e*$23688$1POZIn)
        ((case-lambda
           ((g$t$23689$1POZIn)
            ((case-lambda
               ((g$ls/false$23690$1POZIn)
                (if (if g$ls/false$23690$1POZIn
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$23691$1POZIn
                               g$imp*$23692$1POZIn
                               g$b*$23693$1POZIn)
                             (eq? (g$syntax->datum$20735$1POZIn
                                    g$import$23691$1POZIn)
                                  'import)))
                          g$ls/false$23690$1POZIn))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$23694$1POZIn
                         g$imp*$23695$1POZIn
                         g$b*$23696$1POZIn)
                       (values g$imp*$23695$1POZIn g$b*$23696$1POZIn)))
                    g$ls/false$23690$1POZIn)
                  ((case-lambda
                     ((g$t$23697$1POZIn)
                      ((case-lambda
                         ((g$ls/false$23698$1POZIn)
                          (if (if g$ls/false$23698$1POZIn
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$23699$1POZIn
                                         g$x$23700$1POZIn
                                         g$y$23701$1POZIn)
                                       (eq? (g$syntax->datum$20735$1POZIn
                                              g$import$23699$1POZIn)
                                            'import)))
                                    g$ls/false$23698$1POZIn))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$23702$1POZIn
                                   g$x$23703$1POZIn
                                   g$y$23704$1POZIn)
                                 (g$syntax-violation$20732$1POZIn
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$20112$1POZIn
                                     g$e*$23688$1POZIn))))
                              g$ls/false$23698$1POZIn)
                            ((case-lambda
                               ((g$t$23705$1POZIn)
                                ((case-lambda
                                   ((g$ls/false$23706$1POZIn)
                                    (if g$ls/false$23706$1POZIn
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$23706$1POZIn)
                                      (g$syntax-violation$20732$1POZIn
                                        '#f
                                        '"invalid syntax"
                                        g$t$23705$1POZIn))))
                                 (g$syntax-dispatch$20613$1POZIn
                                   g$t$23705$1POZIn
                                   '_))))
                             g$t$23697$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$23697$1POZIn
                         '((any . any) . any)))))
                   g$t$23689$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$23689$1POZIn
               '((any . each-any) . each-any)))))
         g$e*$23688$1POZIn))))
   (g$top-level-expander$20676$1POZIn
     g$top-level-expander$24269$1POZIn
     (case-lambda
       ((g$e*$23707$1POZIn)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$20675$1POZIn
               g$e*$23707$1POZIn)))
          (case-lambda
            ((g$imp*$23710$1POZIn g$b*$23711$1POZIn)
             ((case-lambda
                ((g$b*$23712$1POZIn g$imp*$23713$1POZIn)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$20673$1POZIn
                        '()
                        '()
                        g$imp*$23713$1POZIn
                        g$b*$23712$1POZIn
                        '#t)))
                   (case-lambda
                     ((g$imp*$23721$1POZIn
                        g$invoke-req*$23722$1POZIn
                        g$visit-req*$23723$1POZIn
                        g$invoke-code$23724$1POZIn
                        g$visit-code$23725$1POZIn
                        g$export-subst$23726$1POZIn
                        g$export-env$23727$1POZIn)
                      ((case-lambda
                         ((g$export-env$23728$1POZIn
                            g$export-subst$23729$1POZIn
                            g$visit-code$23730$1POZIn
                            g$invoke-code$23731$1POZIn
                            g$visit-req*$23732$1POZIn
                            g$invoke-req*$23733$1POZIn
                            g$imp*$23734$1POZIn)
                          (values
                            g$invoke-req*$23733$1POZIn
                            g$invoke-code$23731$1POZIn)))
                       g$export-env$23727$1POZIn
                       g$export-subst$23726$1POZIn
                       g$visit-code$23725$1POZIn
                       g$invoke-code$23724$1POZIn
                       g$visit-req*$23723$1POZIn
                       g$invoke-req*$23722$1POZIn
                       g$imp*$23721$1POZIn))))))
              g$b*$23711$1POZIn
              g$imp*$23710$1POZIn)))))))
   (g$10166$20677$1POZIn
     g$10166$24270$1POZIn
     (make-record-type-descriptor
       'env
       '#f
       'g$10169$1POZIn
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$10168$20678$1POZIn g$10168$24271$1POZIn '#f)
   (g$10167$20679$1POZIn
     g$10167$24272$1POZIn
     (make-record-constructor-descriptor
       g$10166$20677$1POZIn
       '#f
       g$10168$20678$1POZIn))
   (g$env?$20682$1POZIn
     g$env?$24273$1POZIn
     (record-predicate g$10166$20677$1POZIn))
   (g$make-env$20683$1POZIn
     g$make-env$24274$1POZIn
     (record-constructor g$10167$20679$1POZIn))
   (g$env-names$20684$1POZIn
     g$env-names$24275$1POZIn
     (record-accessor g$10166$20677$1POZIn '0))
   (g$env-labels$20685$1POZIn
     g$env-labels$24276$1POZIn
     (record-accessor g$10166$20677$1POZIn '1))
   (g$env-itc$20686$1POZIn
     g$env-itc$24277$1POZIn
     (record-accessor g$10166$20677$1POZIn '2))
   (g$set-env-names!$20687$1POZIn
     g$set-env-names!$24278$1POZIn
     (record-mutator g$10166$20677$1POZIn '0))
   (g$set-env-labels!$20688$1POZIn
     g$set-env-labels!$24279$1POZIn
     (record-mutator g$10166$20677$1POZIn '1))
   (g$set-env-itc!$20689$1POZIn
     g$set-env-itc!$24280$1POZIn
     (record-mutator g$10166$20677$1POZIn '2))
   (g$rp$20690$1POZIn
     g$rp$24281$1POZIn
     (make-record-printer
       'env
       (case-lambda
         ((g$x$23735$1POZIn g$p$23736$1POZIn g$wr$23737$1POZIn)
          (display '"#<environment>" g$p$23736$1POZIn)))))
   (g$10183$20691$1POZIn
     g$10183$24282$1POZIn
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$10186$1POZIn
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$10185$20692$1POZIn g$10185$24283$1POZIn '#f)
   (g$10184$20693$1POZIn
     g$10184$24284$1POZIn
     (make-record-constructor-descriptor
       g$10183$20691$1POZIn
       '#f
       g$10185$20692$1POZIn))
   (g$interaction-env?$20696$1POZIn
     g$interaction-env?$24285$1POZIn
     (record-predicate g$10183$20691$1POZIn))
   (g$make-interaction-env$20697$1POZIn
     g$make-interaction-env$24286$1POZIn
     (record-constructor g$10184$20693$1POZIn))
   (g$interaction-env-rib$20698$1POZIn
     g$interaction-env-rib$24287$1POZIn
     (record-accessor g$10183$20691$1POZIn '0))
   (g$interaction-env-r$20699$1POZIn
     g$interaction-env-r$24288$1POZIn
     (record-accessor g$10183$20691$1POZIn '1))
   (g$interaction-env-locs$20700$1POZIn
     g$interaction-env-locs$24289$1POZIn
     (record-accessor g$10183$20691$1POZIn '2))
   (g$set-interaction-env-rib!$20701$1POZIn
     g$set-interaction-env-rib!$24290$1POZIn
     (record-mutator g$10183$20691$1POZIn '0))
   (g$set-interaction-env-r!$20702$1POZIn
     g$set-interaction-env-r!$24291$1POZIn
     (record-mutator g$10183$20691$1POZIn '1))
   (g$set-interaction-env-locs!$20703$1POZIn
     g$set-interaction-env-locs!$24292$1POZIn
     (record-mutator g$10183$20691$1POZIn '2))
   (g$rp$20704$1POZIn
     g$rp$24293$1POZIn
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$23738$1POZIn g$p$23739$1POZIn g$wr$23740$1POZIn)
          (display '"#<environment>" g$p$23739$1POZIn)))))
   (g$interaction-environment-symbols$20705$1POZIn
     g$interaction-environment-symbols$24294$1POZIn
     (case-lambda
       (()
        (g$environment-symbols$20709$1POZIn
          (g$interaction-environment$20739$1POZIn)))))
   (g$environment-bindings$20706$1POZIn
     g$environment-bindings$24295$1POZIn
     (case-lambda
       ((g$e$23741$1POZIn)
        (vector->list
          (g$vector-map$12732$1POZIn
            (case-lambda
              ((g$name$23742$1POZIn g$label$23743$1POZIn)
               (g$parse-binding$20707$1POZIn
                 (cons
                   g$name$23742$1POZIn
                   (g$imported-label->binding$19820$1POZIn
                     g$label$23743$1POZIn)))))
            (g$env-names$20684$1POZIn g$e$23741$1POZIn)
            (g$env-labels$20685$1POZIn g$e$23741$1POZIn))))))
   (g$parse-binding$20707$1POZIn
     g$parse-binding$24296$1POZIn
     (case-lambda
       ((g$b$23744$1POZIn)
        (cons
          (car g$b$23744$1POZIn)
          ((case-lambda
             ((g$t$23745$1POZIn)
              (if (g$memv$11826$1POZIn
                    g$t$23745$1POZIn
                    '(core-prim global))
                'procedure
                (if (g$memv$11826$1POZIn
                      g$t$23745$1POZIn
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$23745$1POZIn '$core-rtd)
                    'record
                    (begin
                      '#f
                      (if (eq? (car g$b$23744$1POZIn)
                               (g$cadr$12684$1POZIn g$b$23744$1POZIn))
                        'syntax
                        'unknown)))))))
           (g$cadr$12684$1POZIn g$b$23744$1POZIn))))))
   (g$environment?$20708$1POZIn
     g$environment?$24297$1POZIn
     (case-lambda
       ((g$x$23746$1POZIn)
        ((case-lambda
           ((g$t$23747$1POZIn)
            (if g$t$23747$1POZIn
              g$t$23747$1POZIn
              (begin
                '#f
                (g$interaction-env?$20696$1POZIn g$x$23746$1POZIn)))))
         (g$env?$20682$1POZIn g$x$23746$1POZIn)))))
   (g$environment-symbols$20709$1POZIn
     g$environment-symbols$24298$1POZIn
     (case-lambda
       ((g$x$23748$1POZIn)
        (if (g$env?$20682$1POZIn g$x$23748$1POZIn)
          (vector->list (g$env-names$20684$1POZIn g$x$23748$1POZIn))
          (if (g$interaction-env?$20696$1POZIn g$x$23748$1POZIn)
            (g$map$11833$1POZIn
              values
              (g$rib-sym*$20063$1POZIn
                (g$interaction-env-rib$20698$1POZIn g$x$23748$1POZIn)))
            (begin
              '#f
              (assertion-violation
                'environment-symbols
                '"not an environment"
                g$x$23748$1POZIn)))))))
   (g$environment$20710$1POZIn
     g$environment$24299$1POZIn
     (case-lambda
       (g$imp*$23749$1POZIn
        ((case-lambda
           ((g$itc$23750$1POZIn)
            ((case-lambda
               ((g$imp-collector$23753$1POZIn
                  g$imp-collector$23754$1POZIn)
                ((case-lambda
                   ((g$swap$23755$1POZIn)
                    (dynamic-wind
                      g$swap$23755$1POZIn
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$20665$1POZIn
                                g$imp*$23749$1POZIn)))
                           (case-lambda
                             ((g$subst-names$23758$1POZIn
                                g$subst-labels$23759$1POZIn)
                              ((case-lambda
                                 ((g$subst-labels$23760$1POZIn
                                    g$subst-names$23761$1POZIn)
                                  (g$make-env$20683$1POZIn
                                    g$subst-names$23761$1POZIn
                                    g$subst-labels$23760$1POZIn
                                    g$itc$23750$1POZIn)))
                               g$subst-labels$23759$1POZIn
                               g$subst-names$23758$1POZIn))))))
                      g$swap$23755$1POZIn)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$23762$1POZIn)
                        (begin
                          (g$imp-collector$23753$1POZIn
                            g$imp-collector$23754$1POZIn)
                          (set! g$imp-collector$23754$1POZIn
                            g$t$23762$1POZIn))))
                     (g$imp-collector$23753$1POZIn)))))))
             g$imp-collector$20670$1POZIn
             g$itc$23750$1POZIn)))
         (g$make-collector$20667$1POZIn)))))
   (g$null-environment$20711$1POZIn
     g$null-environment$24300$1POZIn
     (case-lambda
       ((g$n$23763$1POZIn)
        (begin
          (if (not (eqv? g$n$23763$1POZIn '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$23763$1POZIn)
            (void))
          (g$environment$20710$1POZIn '(psyntax null-environment-5))))))
   (g$scheme-report-environment$20712$1POZIn
     g$scheme-report-environment$24301$1POZIn
     (case-lambda
       ((g$n$23764$1POZIn)
        (begin
          (if (not (eqv? g$n$23764$1POZIn '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$23764$1POZIn)
            (void))
          (g$environment$20710$1POZIn
            '(psyntax scheme-report-environment-5))))))
   (g$expand$20713$1POZIn
     g$expand$24302$1POZIn
     (case-lambda
       ((g$x$23765$1POZIn g$env$23766$1POZIn)
        (if (g$env?$20682$1POZIn g$env$23766$1POZIn)
          ((case-lambda
             ((g$rib$23767$1POZIn)
              ((case-lambda
                 ((g$x$23768$1POZIn
                    g$itc$23769$1POZIn
                    g$rtc$23770$1POZIn
                    g$vtc$23771$1POZIn)
                  ((case-lambda
                     ((g$x$23772$1POZIn)
                      (begin
                        (g$seal-rib!$20079$1POZIn g$rib$23767$1POZIn)
                        (values
                          g$x$23772$1POZIn
                          (g$rtc$23770$1POZIn)))))
                   ((case-lambda
                      ((g$top-level-context$23781$1POZIn
                         g$inv-collector$23782$1POZIn
                         g$vis-collector$23783$1POZIn
                         g$imp-collector$23784$1POZIn
                         g$top-level-context$23785$1POZIn
                         g$inv-collector$23786$1POZIn
                         g$vis-collector$23787$1POZIn
                         g$imp-collector$23788$1POZIn)
                       ((case-lambda
                          ((g$swap$23789$1POZIn)
                           (dynamic-wind
                             g$swap$23789$1POZIn
                             (case-lambda
                               (()
                                (g$chi-expr$20631$1POZIn
                                  g$x$23768$1POZIn
                                  '()
                                  '())))
                             g$swap$23789$1POZIn)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$23790$1POZIn)
                                 (begin
                                   (g$top-level-context$23781$1POZIn
                                     g$top-level-context$23785$1POZIn)
                                   (set! g$top-level-context$23785$1POZIn
                                     g$t$23790$1POZIn))))
                              (g$top-level-context$23781$1POZIn))
                             ((case-lambda
                                ((g$t$23791$1POZIn)
                                 (begin
                                   (g$inv-collector$23782$1POZIn
                                     g$inv-collector$23786$1POZIn)
                                   (set! g$inv-collector$23786$1POZIn
                                     g$t$23791$1POZIn))))
                              (g$inv-collector$23782$1POZIn))
                             ((case-lambda
                                ((g$t$23792$1POZIn)
                                 (begin
                                   (g$vis-collector$23783$1POZIn
                                     g$vis-collector$23787$1POZIn)
                                   (set! g$vis-collector$23787$1POZIn
                                     g$t$23792$1POZIn))))
                              (g$vis-collector$23783$1POZIn))
                             ((case-lambda
                                ((g$t$23793$1POZIn)
                                 (begin
                                   (g$imp-collector$23784$1POZIn
                                     g$imp-collector$23788$1POZIn)
                                   (set! g$imp-collector$23788$1POZIn
                                     g$t$23793$1POZIn))))
                              (g$imp-collector$23784$1POZIn))))))))
                    g$top-level-context$20740$1POZIn
                    g$inv-collector$20668$1POZIn
                    g$vis-collector$20669$1POZIn
                    g$imp-collector$20670$1POZIn
                    '#f
                    g$rtc$23770$1POZIn
                    g$vtc$23771$1POZIn
                    g$itc$23769$1POZIn))))
               (g$make-stx$20088$1POZIn
                 g$x$23765$1POZIn
                 g$top-mark*$20048$1POZIn
                 (list g$rib$23767$1POZIn)
                 '())
               (g$env-itc$20686$1POZIn g$env$23766$1POZIn)
               (g$make-collector$20667$1POZIn)
               (g$make-collector$20667$1POZIn))))
           (g$make-top-rib$20666$1POZIn
             (g$env-names$20684$1POZIn g$env$23766$1POZIn)
             (g$env-labels$20685$1POZIn g$env$23766$1POZIn)))
          (if (g$interaction-env?$20696$1POZIn g$env$23766$1POZIn)
            ((case-lambda
               ((g$rib$23794$1POZIn g$r$23795$1POZIn g$rtc$23796$1POZIn)
                ((case-lambda
                   ((g$x$23797$1POZIn)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$23808$1POZIn
                               g$inv-collector$23809$1POZIn
                               g$vis-collector$23810$1POZIn
                               g$imp-collector$23811$1POZIn
                               g$top-level-context$23812$1POZIn
                               g$inv-collector$23813$1POZIn
                               g$vis-collector$23814$1POZIn
                               g$imp-collector$23815$1POZIn)
                             ((case-lambda
                                ((g$swap$23816$1POZIn)
                                 (dynamic-wind
                                   g$swap$23816$1POZIn
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$20672$1POZIn
                                        g$x$23797$1POZIn
                                        g$rib$23794$1POZIn
                                        g$r$23795$1POZIn)))
                                   g$swap$23816$1POZIn)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$23817$1POZIn)
                                       (begin
                                         (g$top-level-context$23808$1POZIn
                                           g$top-level-context$23812$1POZIn)
                                         (set! g$top-level-context$23812$1POZIn
                                           g$t$23817$1POZIn))))
                                    (g$top-level-context$23808$1POZIn))
                                   ((case-lambda
                                      ((g$t$23818$1POZIn)
                                       (begin
                                         (g$inv-collector$23809$1POZIn
                                           g$inv-collector$23813$1POZIn)
                                         (set! g$inv-collector$23813$1POZIn
                                           g$t$23818$1POZIn))))
                                    (g$inv-collector$23809$1POZIn))
                                   ((case-lambda
                                      ((g$t$23819$1POZIn)
                                       (begin
                                         (g$vis-collector$23810$1POZIn
                                           g$vis-collector$23814$1POZIn)
                                         (set! g$vis-collector$23814$1POZIn
                                           g$t$23819$1POZIn))))
                                    (g$vis-collector$23810$1POZIn))
                                   ((case-lambda
                                      ((g$t$23820$1POZIn)
                                       (begin
                                         (g$imp-collector$23811$1POZIn
                                           g$imp-collector$23815$1POZIn)
                                         (set! g$imp-collector$23815$1POZIn
                                           g$t$23820$1POZIn))))
                                    (g$imp-collector$23811$1POZIn))))))))
                          g$top-level-context$20740$1POZIn
                          g$inv-collector$20668$1POZIn
                          g$vis-collector$20669$1POZIn
                          g$imp-collector$20670$1POZIn
                          g$env$23766$1POZIn
                          g$rtc$23796$1POZIn
                          (g$make-collector$20667$1POZIn)
                          (g$make-collector$20667$1POZIn))))
                      (case-lambda
                        ((g$e$23821$1POZIn g$r^$23822$1POZIn)
                         ((case-lambda
                            ((g$r^$23823$1POZIn g$e$23824$1POZIn)
                             (begin
                               (g$set-interaction-env-r!$20702$1POZIn
                                 g$env$23766$1POZIn
                                 g$r^$23823$1POZIn)
                               (values
                                 g$e$23824$1POZIn
                                 (g$rtc$23796$1POZIn)))))
                          g$r^$23822$1POZIn
                          g$e$23821$1POZIn))))))
                 (g$make-stx$20088$1POZIn
                   g$x$23765$1POZIn
                   g$top-mark*$20048$1POZIn
                   (list g$rib$23794$1POZIn)
                   '()))))
             (g$interaction-env-rib$20698$1POZIn g$env$23766$1POZIn)
             (g$interaction-env-r$20699$1POZIn g$env$23766$1POZIn)
             (g$make-collector$20667$1POZIn))
            (begin
              '#f
              (assertion-violation
                'expand
                '"not an environment"
                g$env$23766$1POZIn)))))))
   (g$eval$20714$1POZIn
     g$eval$24303$1POZIn
     (case-lambda
       ((g$x$23825$1POZIn g$env$23826$1POZIn)
        (begin
          (if (not (g$environment?$20708$1POZIn g$env$23826$1POZIn))
            (error 'eval '"not an environment" g$env$23826$1POZIn)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$20713$1POZIn
                 g$x$23825$1POZIn
                 g$env$23826$1POZIn)))
            (case-lambda
              ((g$x$23829$1POZIn g$invoke-req*$23830$1POZIn)
               ((case-lambda
                  ((g$invoke-req*$23831$1POZIn g$x$23832$1POZIn)
                   (begin
                     (g$for-each$11834$1POZIn
                       g$invoke-library$19821$1POZIn
                       g$invoke-req*$23831$1POZIn)
                     (eval-core
                       (g$expanded->core$19553$1POZIn
                         g$x$23832$1POZIn)))))
                g$invoke-req*$23830$1POZIn
                g$x$23829$1POZIn))))))))
   (g$expand->core$20715$1POZIn
     g$expand->core$24304$1POZIn
     (case-lambda
       ((g$x$23833$1POZIn g$env$23834$1POZIn)
        (begin
          (if (not (g$environment?$20708$1POZIn g$env$23834$1POZIn))
            (error 'eval '"not an environment" g$env$23834$1POZIn)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$20713$1POZIn
                 g$x$23833$1POZIn
                 g$env$23834$1POZIn)))
            (case-lambda
              ((g$x$23837$1POZIn g$invoke-req*$23838$1POZIn)
               ((case-lambda
                  ((g$invoke-req*$23839$1POZIn g$x$23840$1POZIn)
                   (begin
                     (g$for-each$11834$1POZIn
                       g$invoke-library$19821$1POZIn
                       g$invoke-req*$23839$1POZIn)
                     (g$expanded->core$19553$1POZIn g$x$23840$1POZIn))))
                g$invoke-req*$23838$1POZIn
                g$x$23837$1POZIn))))))))
   (g$library-expander$20716$1POZIn
     g$library-expander$24305$1POZIn
     (case-lambda
       ((g$x$23841$1POZIn
          g$filename$23842$1POZIn
          g$verify-name$23843$1POZIn)
        (letrec* ((g$build-visit-code$23844$1POZIn
                    (case-lambda
                      ((g$macro*$23887$1POZIn)
                       (if (null? g$macro*$23887$1POZIn)
                         (g$build-void$20041$1POZIn)
                         (g$build-sequence$20040$1POZIn
                           '#f
                           (g$map$11833$1POZIn
                             (case-lambda
                               ((g$x$23888$1POZIn)
                                ((case-lambda
                                   ((g$loc$23889$1POZIn
                                      g$src$23890$1POZIn)
                                    (list
                                      'set!
                                      g$loc$23889$1POZIn
                                      g$src$23890$1POZIn)))
                                 (car g$x$23888$1POZIn)
                                 (g$cddr$12686$1POZIn
                                   g$x$23888$1POZIn))))
                             g$macro*$23887$1POZIn))))))
                  (g$visit!$23845$1POZIn
                    (case-lambda
                      ((g$macro*$23883$1POZIn)
                       (g$for-each$11834$1POZIn
                         (case-lambda
                           ((g$x$23884$1POZIn)
                            ((case-lambda
                               ((g$loc$23885$1POZIn g$proc$23886$1POZIn)
                                (set-symbol-value!
                                  g$loc$23885$1POZIn
                                  g$proc$23886$1POZIn)))
                             (car g$x$23884$1POZIn)
                             (g$cadr$12684$1POZIn g$x$23884$1POZIn))))
                         g$macro*$23883$1POZIn)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$20674$1POZIn
                 g$x$23841$1POZIn
                 g$verify-name$23843$1POZIn)))
            (case-lambda
              ((g$name$23855$1POZIn
                 g$ver$23856$1POZIn
                 g$imp*$23857$1POZIn
                 g$inv*$23858$1POZIn
                 g$vis*$23859$1POZIn
                 g$invoke-code$23860$1POZIn
                 g$macro*$23861$1POZIn
                 g$export-subst$23862$1POZIn
                 g$export-env$23863$1POZIn)
               ((case-lambda
                  ((g$export-env$23864$1POZIn
                     g$export-subst$23865$1POZIn
                     g$macro*$23866$1POZIn
                     g$invoke-code$23867$1POZIn
                     g$vis*$23868$1POZIn
                     g$inv*$23869$1POZIn
                     g$imp*$23870$1POZIn
                     g$ver$23871$1POZIn
                     g$name$23872$1POZIn)
                   ((case-lambda
                      ((g$id$23873$1POZIn
                         g$name$23874$1POZIn
                         g$ver$23875$1POZIn
                         g$imp*$23876$1POZIn
                         g$vis*$23877$1POZIn
                         g$inv*$23878$1POZIn
                         g$visit-proc$23879$1POZIn
                         g$invoke-proc$23880$1POZIn
                         g$visit-code$23881$1POZIn
                         g$invoke-code$23882$1POZIn)
                       (begin
                         (g$install-library$19819$1POZIn
                           g$id$23873$1POZIn
                           g$name$23874$1POZIn
                           g$ver$23875$1POZIn
                           g$imp*$23876$1POZIn
                           g$vis*$23877$1POZIn
                           g$inv*$23878$1POZIn
                           g$export-subst$23865$1POZIn
                           g$export-env$23864$1POZIn
                           g$visit-proc$23879$1POZIn
                           g$invoke-proc$23880$1POZIn
                           g$visit-code$23881$1POZIn
                           g$invoke-code$23882$1POZIn
                           '#t
                           g$filename$23842$1POZIn)
                         (values
                           g$id$23873$1POZIn
                           g$name$23874$1POZIn
                           g$ver$23875$1POZIn
                           g$imp*$23876$1POZIn
                           g$vis*$23877$1POZIn
                           g$inv*$23878$1POZIn
                           g$invoke-code$23882$1POZIn
                           g$visit-code$23881$1POZIn
                           g$export-subst$23865$1POZIn
                           g$export-env$23864$1POZIn))))
                    (gensym)
                    g$name$23872$1POZIn
                    g$ver$23871$1POZIn
                    (g$map$11833$1POZIn
                      g$library-spec$19825$1POZIn
                      g$imp*$23870$1POZIn)
                    (g$map$11833$1POZIn
                      g$library-spec$19825$1POZIn
                      g$vis*$23868$1POZIn)
                    (g$map$11833$1POZIn
                      g$library-spec$19825$1POZIn
                      g$inv*$23869$1POZIn)
                    (case-lambda
                      (()
                       (g$visit!$23845$1POZIn g$macro*$23866$1POZIn)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$19553$1POZIn
                           g$invoke-code$23867$1POZIn))))
                    (g$build-visit-code$23844$1POZIn
                      g$macro*$23866$1POZIn)
                    g$invoke-code$23867$1POZIn)))
                g$export-env$23863$1POZIn
                g$export-subst$23862$1POZIn
                g$macro*$23861$1POZIn
                g$invoke-code$23860$1POZIn
                g$vis*$23859$1POZIn
                g$inv*$23858$1POZIn
                g$imp*$23857$1POZIn
                g$ver$23856$1POZIn
                g$name$23855$1POZIn))))))
       ((g$x$23891$1POZIn g$filename$23892$1POZIn)
        (g$library-expander$20716$1POZIn
          g$x$23891$1POZIn
          g$filename$23892$1POZIn
          (case-lambda ((g$x$23893$1POZIn) (values)))))
       ((g$x$23894$1POZIn)
        (g$library-expander$20716$1POZIn
          g$x$23894$1POZIn
          '#f
          (case-lambda ((g$x$23895$1POZIn) (values)))))))
   (g$boot-library-expand$20717$1POZIn
     g$boot-library-expand$24306$1POZIn
     (case-lambda
       ((g$x$23896$1POZIn)
        (call-with-values
          (case-lambda
            (() (g$library-expander$20716$1POZIn g$x$23896$1POZIn)))
          (case-lambda
            ((g$id$23907$1POZIn
               g$name$23908$1POZIn
               g$ver$23909$1POZIn
               g$imp*$23910$1POZIn
               g$vis*$23911$1POZIn
               g$inv*$23912$1POZIn
               g$invoke-code$23913$1POZIn
               g$visit-code$23914$1POZIn
               g$export-subst$23915$1POZIn
               g$export-env$23916$1POZIn)
             ((case-lambda
                ((g$export-env$23917$1POZIn
                   g$export-subst$23918$1POZIn
                   g$visit-code$23919$1POZIn
                   g$invoke-code$23920$1POZIn
                   g$inv*$23921$1POZIn
                   g$vis*$23922$1POZIn
                   g$imp*$23923$1POZIn
                   g$ver$23924$1POZIn
                   g$name$23925$1POZIn
                   g$id$23926$1POZIn)
                 (values
                   g$name$23925$1POZIn
                   g$invoke-code$23920$1POZIn
                   g$export-subst$23918$1POZIn
                   g$export-env$23917$1POZIn)))
              g$export-env$23916$1POZIn
              g$export-subst$23915$1POZIn
              g$visit-code$23914$1POZIn
              g$invoke-code$23913$1POZIn
              g$inv*$23912$1POZIn
              g$vis*$23911$1POZIn
              g$imp*$23910$1POZIn
              g$ver$23909$1POZIn
              g$name$23908$1POZIn
              g$id$23907$1POZIn)))))))
   (g$rev-map-append$20718$1POZIn
     g$rev-map-append$24307$1POZIn
     (case-lambda
       ((g$f$23927$1POZIn g$ls$23928$1POZIn g$ac$23929$1POZIn)
        (if (null? g$ls$23928$1POZIn)
          g$ac$23929$1POZIn
          (begin
            '#f
            (g$rev-map-append$20718$1POZIn
              g$f$23927$1POZIn
              (cdr g$ls$23928$1POZIn)
              (cons
                (g$f$23927$1POZIn (car g$ls$23928$1POZIn))
                g$ac$23929$1POZIn)))))))
   (g$build-exports$20719$1POZIn
     g$build-exports$24308$1POZIn
     (case-lambda
       ((g$lex*+loc*$23930$1POZIn g$init*$23931$1POZIn)
        (g$build-sequence$20040$1POZIn
          '#f
          (cons
            (g$build-void$20041$1POZIn)
            (g$rev-map-append$20718$1POZIn
              (case-lambda
                ((g$x$23932$1POZIn)
                 (list
                   'set!
                   (cdr g$x$23932$1POZIn)
                   (car g$x$23932$1POZIn))))
              g$lex*+loc*$23930$1POZIn
              g$init*$23931$1POZIn))))))
   (g$make-export-subst$20720$1POZIn
     g$make-export-subst$24309$1POZIn
     (case-lambda
       ((g$name*$23933$1POZIn g$id*$23934$1POZIn)
        (g$map$11833$1POZIn
          (case-lambda
            ((g$name$23935$1POZIn g$id$23936$1POZIn)
             ((case-lambda
                ((g$label$23937$1POZIn)
                 (begin
                   (if (not g$label$23937$1POZIn)
                     (g$syntax-violation$20732$1POZIn
                       '#f
                       '"cannot export unbound identifier"
                       g$id$23936$1POZIn)
                     (void))
                   (cons g$name$23935$1POZIn g$label$23937$1POZIn))))
              (g$id->label$20128$1POZIn g$id$23936$1POZIn))))
          g$name*$23933$1POZIn
          g$id*$23934$1POZIn))))
   (g$make-export-env/macros$20721$1POZIn
     g$make-export-env/macros$24310$1POZIn
     (case-lambda
       ((g$lex*$23938$1POZIn g$loc*$23939$1POZIn g$r$23940$1POZIn)
        (letrec* ((g$lookup$23941$1POZIn
                    (case-lambda
                      ((g$x$23957$1POZIn)
                       ((letrec ((g$f$23958$1POZIn
                                   (case-lambda
                                     ((g$x$23959$1POZIn
                                        g$lex*$23960$1POZIn
                                        g$loc*$23961$1POZIn)
                                      (if (pair? g$lex*$23960$1POZIn)
                                        (if (eq? g$x$23959$1POZIn
                                                 (car g$lex*$23960$1POZIn))
                                          (car g$loc*$23961$1POZIn)
                                          (g$f$23958$1POZIn
                                            g$x$23959$1POZIn
                                            (cdr g$lex*$23960$1POZIn)
                                            (cdr g$loc*$23961$1POZIn)))
                                        (begin
                                          '#f
                                          (assertion-violation
                                            'lookup-make-export
                                            '"BUG")))))))
                          g$f$23958$1POZIn)
                        g$x$23957$1POZIn
                        g$lex*$23938$1POZIn
                        g$loc*$23939$1POZIn)))))
          ((letrec ((g$f$23942$1POZIn
                      (case-lambda
                        ((g$r$23943$1POZIn
                           g$env$23944$1POZIn
                           g$global*$23945$1POZIn
                           g$macro*$23946$1POZIn)
                         (if (null? g$r$23943$1POZIn)
                           (values
                             g$env$23944$1POZIn
                             g$global*$23945$1POZIn
                             g$macro*$23946$1POZIn)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x$23947$1POZIn)
                                 ((case-lambda
                                    ((g$label$23948$1POZIn
                                       g$b$23949$1POZIn)
                                     ((case-lambda
                                        ((g$t$23950$1POZIn)
                                         (if (eqv?
                                               g$t$23950$1POZIn
                                               'lexical)
                                           ((case-lambda
                                              ((g$v$23951$1POZIn)
                                               ((case-lambda
                                                  ((g$loc$23952$1POZIn
                                                     g$type$23953$1POZIn)
                                                   (g$f$23942$1POZIn
                                                     (cdr g$r$23943$1POZIn)
                                                     (cons
                                                       (g$cons*$11835$1POZIn
                                                         g$label$23948$1POZIn
                                                         g$type$23953$1POZIn
                                                         g$loc$23952$1POZIn)
                                                       g$env$23944$1POZIn)
                                                     (cons
                                                       (cons
                                                         (g$lexical-var$20557$1POZIn
                                                           g$v$23951$1POZIn)
                                                         g$loc$23952$1POZIn)
                                                       g$global*$23945$1POZIn)
                                                     g$macro*$23946$1POZIn)))
                                                (g$lookup$23941$1POZIn
                                                  (g$lexical-var$20557$1POZIn
                                                    g$v$23951$1POZIn))
                                                (if (g$lexical-mutable?$20558$1POZIn
                                                      g$v$23951$1POZIn)
                                                  'mutable
                                                  'global))))
                                            (g$binding-value$20133$1POZIn
                                              g$b$23949$1POZIn))
                                           (if (eqv?
                                                 g$t$23950$1POZIn
                                                 'local-macro)
                                             ((case-lambda
                                                ((g$loc$23954$1POZIn)
                                                 (g$f$23942$1POZIn
                                                   (cdr g$r$23943$1POZIn)
                                                   (cons
                                                     (g$cons*$11835$1POZIn
                                                       g$label$23948$1POZIn
                                                       'global-macro
                                                       g$loc$23954$1POZIn)
                                                     g$env$23944$1POZIn)
                                                   g$global*$23945$1POZIn
                                                   (cons
                                                     (cons
                                                       g$loc$23954$1POZIn
                                                       (g$binding-value$20133$1POZIn
                                                         g$b$23949$1POZIn))
                                                     g$macro*$23946$1POZIn))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$23950$1POZIn
                                                   'local-macro!)
                                               ((case-lambda
                                                  ((g$loc$23955$1POZIn)
                                                   (g$f$23942$1POZIn
                                                     (cdr g$r$23943$1POZIn)
                                                     (cons
                                                       (g$cons*$11835$1POZIn
                                                         g$label$23948$1POZIn
                                                         'global-macro!
                                                         g$loc$23955$1POZIn)
                                                       g$env$23944$1POZIn)
                                                     g$global*$23945$1POZIn
                                                     (cons
                                                       (cons
                                                         g$loc$23955$1POZIn
                                                         (g$binding-value$20133$1POZIn
                                                           g$b$23949$1POZIn))
                                                       g$macro*$23946$1POZIn))))
                                                (gensym))
                                               (if (eqv?
                                                     g$t$23950$1POZIn
                                                     'local-ctv)
                                                 ((case-lambda
                                                    ((g$loc$23956$1POZIn)
                                                     (g$f$23942$1POZIn
                                                       (cdr g$r$23943$1POZIn)
                                                       (cons
                                                         (g$cons*$11835$1POZIn
                                                           g$label$23948$1POZIn
                                                           'global-ctv
                                                           g$loc$23956$1POZIn)
                                                         g$env$23944$1POZIn)
                                                       g$global*$23945$1POZIn
                                                       (cons
                                                         (cons
                                                           g$loc$23956$1POZIn
                                                           (g$binding-value$20133$1POZIn
                                                             g$b$23949$1POZIn))
                                                         g$macro*$23946$1POZIn))))
                                                  (gensym))
                                                 (if (g$memv$11826$1POZIn
                                                       g$t$23950$1POZIn
                                                       '($rtd $module))
                                                   (g$f$23942$1POZIn
                                                     (cdr g$r$23943$1POZIn)
                                                     (cons
                                                       g$x$23947$1POZIn
                                                       g$env$23944$1POZIn)
                                                     g$global*$23945$1POZIn
                                                     g$macro*$23946$1POZIn)
                                                   (begin
                                                     '#f
                                                     (assertion-violation
                                                       'expander
                                                       '"BUG: do not know how to export"
                                                       (g$binding-type$20132$1POZIn
                                                         g$b$23949$1POZIn)
                                                       (g$binding-value$20133$1POZIn
                                                         g$b$23949$1POZIn))))))))))
                                      (g$binding-type$20132$1POZIn
                                        g$b$23949$1POZIn))))
                                  (car g$x$23947$1POZIn)
                                  (cdr g$x$23947$1POZIn))))
                              (car g$r$23943$1POZIn))))))))
             g$f$23942$1POZIn)
           g$r$23940$1POZIn
           '()
           '()
           '())))))
   (g$generate-temporaries$20722$1POZIn
     g$generate-temporaries$24311$1POZIn
     (case-lambda
       ((g$ls$23962$1POZIn)
        ((case-lambda
           ((g$t$23963$1POZIn)
            ((case-lambda
               ((g$ls/false$23964$1POZIn)
                (if g$ls/false$23964$1POZIn
                  (apply
                    (case-lambda
                      ((g$ls$23965$1POZIn)
                       (g$map$11833$1POZIn
                         (case-lambda
                           ((g$x$23966$1POZIn)
                            (g$make-stx$20088$1POZIn
                              ((case-lambda
                                 ((g$x$23967$1POZIn)
                                  (if ((case-lambda
                                         ((g$t$23968$1POZIn)
                                          (if g$t$23968$1POZIn
                                            g$t$23968$1POZIn
                                            (begin
                                              '#f
                                              (string?
                                                g$x$23967$1POZIn)))))
                                       (g$symbol?$12665$1POZIn
                                         g$x$23967$1POZIn))
                                    (gensym g$x$23967$1POZIn)
                                    (begin '#f (gensym 't)))))
                               (g$syntax->datum$20735$1POZIn
                                 g$x$23966$1POZIn))
                              g$top-mark*$20048$1POZIn
                              '()
                              '())))
                         g$ls$23965$1POZIn)))
                    g$ls/false$23964$1POZIn)
                  ((case-lambda
                     ((g$t$23969$1POZIn)
                      ((case-lambda
                         ((g$ls/false$23970$1POZIn)
                          (if g$ls/false$23970$1POZIn
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$23970$1POZIn)
                            (g$syntax-violation$20732$1POZIn
                              '#f
                              '"invalid syntax"
                              g$t$23969$1POZIn))))
                       (g$syntax-dispatch$20613$1POZIn
                         g$t$23969$1POZIn
                         '_))))
                   g$t$23963$1POZIn))))
             (g$syntax-dispatch$20613$1POZIn
               g$t$23963$1POZIn
               'each-any))))
         g$ls$23962$1POZIn))))
   (g$free-identifier=?$20723$1POZIn
     g$free-identifier=?$24312$1POZIn
     (case-lambda
       ((g$x$23971$1POZIn g$y$23972$1POZIn)
        (if (g$id?$20115$1POZIn g$x$23971$1POZIn)
          (if (g$id?$20115$1POZIn g$y$23972$1POZIn)
            (g$free-id=?$20119$1POZIn g$x$23971$1POZIn g$y$23972$1POZIn)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$23972$1POZIn))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$23971$1POZIn)))))
   (g$bound-identifier=?$20724$1POZIn
     g$bound-identifier=?$24313$1POZIn
     (case-lambda
       ((g$x$23973$1POZIn g$y$23974$1POZIn)
        (if (g$id?$20115$1POZIn g$x$23973$1POZIn)
          (if (g$id?$20115$1POZIn g$y$23974$1POZIn)
            (g$bound-id=?$20118$1POZIn
              g$x$23973$1POZIn
              g$y$23974$1POZIn)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$23974$1POZIn))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$23973$1POZIn)))))
   (g$make-source-condition$20725$1POZIn
     g$make-source-condition$24314$1POZIn
     (case-lambda
       ((g$x$23975$1POZIn)
        (letrec* ((g$13156$23976$1POZIn
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$14085$1POZIn
                      'g$13159$1POZIn
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$13158$23977$1POZIn '#f)
                  (g$13157$23978$1POZIn
                    (make-record-constructor-descriptor
                      g$13156$23976$1POZIn
                      g$&condition-rcd$14086$1POZIn
                      g$13158$23977$1POZIn))
                  (g$13155$23981$1POZIn
                    (record-predicate g$13156$23976$1POZIn))
                  (g$make-source-condition$23982$1POZIn
                    (record-constructor g$13157$23978$1POZIn))
                  (g$13153$23983$1POZIn
                    (record-accessor g$13156$23976$1POZIn '0))
                  (g$13154$23984$1POZIn
                    (record-accessor g$13156$23976$1POZIn '1))
                  (g$source-condition?$23985$1POZIn
                    (condition-predicate g$13156$23976$1POZIn))
                  (g$source-filename$23986$1POZIn
                    (condition-accessor
                      g$13156$23976$1POZIn
                      g$13153$23983$1POZIn))
                  (g$source-character$23987$1POZIn
                    (condition-accessor
                      g$13156$23976$1POZIn
                      g$13154$23984$1POZIn)))
          (if (pair? g$x$23975$1POZIn)
            (g$make-source-condition$23982$1POZIn
              (car g$x$23975$1POZIn)
              (cdr g$x$23975$1POZIn))
            (condition))))))
   (g$extract-position-condition$20726$1POZIn
     g$extract-position-condition$24315$1POZIn
     (case-lambda
       ((g$x$23988$1POZIn)
        (g$make-source-condition$20725$1POZIn
          (g$expression-position$20727$1POZIn g$x$23988$1POZIn)))))
   (g$expression-position$20727$1POZIn
     g$expression-position$24316$1POZIn
     (case-lambda
       ((g$x$23989$1POZIn)
        (if (g$stx?$20087$1POZIn g$x$23989$1POZIn)
          (begin
            '#f
            ((case-lambda
               ((g$x$23990$1POZIn)
                (if (annotation? g$x$23990$1POZIn)
                  (begin '#f (annotation-source g$x$23990$1POZIn))
                  '#f)))
             (g$stx-expr$20089$1POZIn g$x$23989$1POZIn)))
          '#f))))
   (g$assertion-error$20728$1POZIn
     g$assertion-error$24317$1POZIn
     (case-lambda
       ((g$expr$23991$1POZIn g$pos$23992$1POZIn)
        (raise
          (condition
            (g$make-assertion-violation$14133$1POZIn)
            (g$make-who-condition$14151$1POZIn 'assert)
            (g$make-message-condition$14091$1POZIn '"assertion failed")
            (g$make-irritants-condition$14141$1POZIn
              (list g$expr$23991$1POZIn))
            (g$make-source-condition$20725$1POZIn
              g$pos$23992$1POZIn))))))
   (g$syntax-error$20729$1POZIn
     g$syntax-error$24318$1POZIn
     (case-lambda
       ((g$x$23993$1POZIn . g$args$23994$1POZIn)
        (begin
          (if (not (g$for-all$11831$1POZIn string? g$args$23994$1POZIn))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$23994$1POZIn)
            (void))
          (raise
            (condition
              (g$make-message-condition$14091$1POZIn
                (if (null? g$args$23994$1POZIn)
                  '"invalid syntax"
                  (apply string-append g$args$23994$1POZIn)))
              (g$make-syntax-violation$14205$1POZIn
                (g$syntax->datum$20735$1POZIn g$x$23993$1POZIn)
                '#f)
              (g$extract-position-condition$20726$1POZIn
                g$x$23993$1POZIn)
              (g$extract-trace$20730$1POZIn g$x$23993$1POZIn)))))))
   (g$extract-trace$20730$1POZIn
     g$extract-trace$24319$1POZIn
     (case-lambda
       ((g$x$23995$1POZIn)
        (letrec* ((g$13181$23996$1POZIn
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$14085$1POZIn
                      'g$13184$1POZIn
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$13183$23997$1POZIn '#f)
                  (g$13182$23998$1POZIn
                    (make-record-constructor-descriptor
                      g$13181$23996$1POZIn
                      g$&condition-rcd$14086$1POZIn
                      g$13183$23997$1POZIn))
                  (g$13180$24001$1POZIn
                    (record-predicate g$13181$23996$1POZIn))
                  (g$make-trace$24002$1POZIn
                    (record-constructor g$13182$23998$1POZIn))
                  (g$13179$24003$1POZIn
                    (record-accessor g$13181$23996$1POZIn '0))
                  (g$trace?$24004$1POZIn
                    (condition-predicate g$13181$23996$1POZIn))
                  (g$trace-form$24005$1POZIn
                    (condition-accessor
                      g$13181$23996$1POZIn
                      g$13179$24003$1POZIn)))
          ((letrec ((g$f$24006$1POZIn
                      (case-lambda
                        ((g$x$24007$1POZIn)
                         (if (g$stx?$20087$1POZIn g$x$24007$1POZIn)
                           (apply
                             condition
                             (g$make-trace$24002$1POZIn
                               g$x$24007$1POZIn)
                             (g$map$11833$1POZIn
                               g$f$24006$1POZIn
                               (g$stx-ae*$20092$1POZIn
                                 g$x$24007$1POZIn)))
                           (if (annotation? g$x$24007$1POZIn)
                             (g$make-trace$24002$1POZIn
                               (g$make-stx$20088$1POZIn
                                 g$x$24007$1POZIn
                                 '()
                                 '()
                                 '()))
                             (begin '#f (condition))))))))
             g$f$24006$1POZIn)
           g$x$23995$1POZIn)))))
   (g$syntax-violation*$20731$1POZIn
     g$syntax-violation*$24320$1POZIn
     (case-lambda
       ((g$who$24008$1POZIn
          g$msg$24009$1POZIn
          g$form$24010$1POZIn
          g$condition-object$24011$1POZIn)
        (begin
          (if (not (string? g$msg$24009$1POZIn))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$24009$1POZIn)
            (void))
          ((case-lambda
             ((g$who$24012$1POZIn)
              (raise
                (condition
                  (if g$who$24012$1POZIn
                    (g$make-who-condition$14151$1POZIn
                      g$who$24012$1POZIn)
                    (condition))
                  (g$make-message-condition$14091$1POZIn
                    g$msg$24009$1POZIn)
                  g$condition-object$24011$1POZIn
                  (g$extract-position-condition$20726$1POZIn
                    g$form$24010$1POZIn)
                  (g$extract-trace$20730$1POZIn g$form$24010$1POZIn)))))
           (if ((case-lambda
                  ((g$t$24013$1POZIn)
                   (if g$t$24013$1POZIn
                     g$t$24013$1POZIn
                     (begin
                       '#f
                       (g$symbol?$12665$1POZIn g$who$24008$1POZIn)))))
                (string? g$who$24008$1POZIn))
             g$who$24008$1POZIn
             (if (not g$who$24008$1POZIn)
               ((case-lambda
                  ((g$t$24014$1POZIn)
                   ((case-lambda
                      ((g$ls/false$24015$1POZIn)
                       (if (if g$ls/false$24015$1POZIn
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$24016$1POZIn)
                                    (g$id?$20115$1POZIn
                                      g$id$24016$1POZIn)))
                                 g$ls/false$24015$1POZIn))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$24017$1POZIn)
                              (g$syntax->datum$20735$1POZIn
                                g$id$24017$1POZIn)))
                           g$ls/false$24015$1POZIn)
                         ((case-lambda
                            ((g$t$24018$1POZIn)
                             ((case-lambda
                                ((g$ls/false$24019$1POZIn)
                                 (if (if g$ls/false$24019$1POZIn
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$24020$1POZIn
                                                g$rest$24021$1POZIn)
                                              (g$id?$20115$1POZIn
                                                g$id$24020$1POZIn)))
                                           g$ls/false$24019$1POZIn))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$24022$1POZIn
                                          g$rest$24023$1POZIn)
                                        (g$syntax->datum$20735$1POZIn
                                          g$id$24022$1POZIn)))
                                     g$ls/false$24019$1POZIn)
                                   ((case-lambda
                                      ((g$t$24024$1POZIn)
                                       ((case-lambda
                                          ((g$ls/false$24025$1POZIn)
                                           (if g$ls/false$24025$1POZIn
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$24025$1POZIn)
                                             (g$syntax-violation$20732$1POZIn
                                               '#f
                                               '"invalid syntax"
                                               g$t$24024$1POZIn))))
                                        (g$syntax-dispatch$20613$1POZIn
                                          g$t$24024$1POZIn
                                          '_))))
                                    g$t$24018$1POZIn))))
                              (g$syntax-dispatch$20613$1POZIn
                                g$t$24018$1POZIn
                                '(any . any)))))
                          g$t$24014$1POZIn))))
                    (g$syntax-dispatch$20613$1POZIn
                      g$t$24014$1POZIn
                      'any))))
                g$form$24010$1POZIn)
               (begin
                 '#f
                 (assertion-violation
                   'syntax-violation
                   '"invalid who argument"
                   g$who$24008$1POZIn)))))))))
   (g$syntax-violation$20732$1POZIn
     g$syntax-violation$24321$1POZIn
     (case-lambda
       ((g$who$24026$1POZIn g$msg$24027$1POZIn g$form$24028$1POZIn)
        (g$syntax-violation$20732$1POZIn
          g$who$24026$1POZIn
          g$msg$24027$1POZIn
          g$form$24028$1POZIn
          '#f))
       ((g$who$24029$1POZIn
          g$msg$24030$1POZIn
          g$form$24031$1POZIn
          g$subform$24032$1POZIn)
        (g$syntax-violation*$20731$1POZIn
          g$who$24029$1POZIn
          g$msg$24030$1POZIn
          g$form$24031$1POZIn
          (g$make-syntax-violation$14205$1POZIn
            (g$syntax->datum$20735$1POZIn g$form$24031$1POZIn)
            (g$syntax->datum$20735$1POZIn g$subform$24032$1POZIn))))))
   (g$identifier?$20733$1POZIn
     g$identifier?$24322$1POZIn
     (case-lambda
       ((g$x$24033$1POZIn) (g$id?$20115$1POZIn g$x$24033$1POZIn))))
   (g$datum->syntax$20734$1POZIn
     g$datum->syntax$24323$1POZIn
     (case-lambda
       ((g$id$24034$1POZIn g$datum$24035$1POZIn)
        (if (g$id?$20115$1POZIn g$id$24034$1POZIn)
          (g$datum->stx$20098$1POZIn
            g$id$24034$1POZIn
            g$datum$24035$1POZIn)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$24034$1POZIn)))))
   (g$syntax->datum$20735$1POZIn
     g$syntax->datum$24324$1POZIn
     (case-lambda
       ((g$x$24036$1POZIn)
        (g$stx->datum$20126$1POZIn g$x$24036$1POZIn))))
   (g$compile-r6rs-top-level$20736$1POZIn
     g$compile-r6rs-top-level$24325$1POZIn
     (case-lambda
       ((g$x*$24037$1POZIn)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$20676$1POZIn g$x*$24037$1POZIn)))
          (case-lambda
            ((g$lib*$24040$1POZIn g$invoke-code$24041$1POZIn)
             ((case-lambda
                ((g$invoke-code$24042$1POZIn g$lib*$24043$1POZIn)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$11834$1POZIn
                        g$invoke-library$19821$1POZIn
                        g$lib*$24043$1POZIn)
                      (eval-core
                        (g$expanded->core$19553$1POZIn
                          g$invoke-code$24042$1POZIn)))))))
              g$invoke-code$24041$1POZIn
              g$lib*$24040$1POZIn)))))))
   (g$pre-compile-r6rs-top-level$20737$1POZIn
     g$pre-compile-r6rs-top-level$24326$1POZIn
     (case-lambda
       ((g$x*$24044$1POZIn)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$20676$1POZIn g$x*$24044$1POZIn)))
          (case-lambda
            ((g$lib*$24047$1POZIn g$invoke-code$24048$1POZIn)
             ((case-lambda
                ((g$invoke-code$24049$1POZIn g$lib*$24050$1POZIn)
                 (begin
                   (g$for-each$11834$1POZIn
                     g$invoke-library$19821$1POZIn
                     g$lib*$24050$1POZIn)
                   (compile-core
                     (g$expanded->core$19553$1POZIn
                       g$invoke-code$24049$1POZIn)))))
              g$invoke-code$24048$1POZIn
              g$lib*$24047$1POZIn)))))))
   (g$new-interaction-environment$20738$1POZIn
     g$new-interaction-environment$24327$1POZIn
     (case-lambda
       (() (g$new-interaction-environment$20738$1POZIn '(ironscheme)))
       ((g$libname$24051$1POZIn)
        ((case-lambda
           ((g$lib$24052$1POZIn g$rib$24053$1POZIn)
            (begin
              ((case-lambda
                 ((g$subst$24054$1POZIn)
                  (begin
                    (g$set-rib-sym*!$20068$1POZIn
                      g$rib$24053$1POZIn
                      (g$map$11833$1POZIn car g$subst$24054$1POZIn))
                    (g$set-rib-mark**!$20069$1POZIn
                      g$rib$24053$1POZIn
                      (g$map$11833$1POZIn
                        (case-lambda
                          ((g$x$24055$1POZIn) g$top-mark*$20048$1POZIn))
                        g$subst$24054$1POZIn))
                    (g$set-rib-label*!$20070$1POZIn
                      g$rib$24053$1POZIn
                      (g$map$11833$1POZIn cdr g$subst$24054$1POZIn)))))
               (g$library-subst$19778$1POZIn g$lib$24052$1POZIn))
              (g$make-interaction-env$20697$1POZIn
                g$rib$24053$1POZIn
                '()
                '()))))
         (g$find-library-by-name$19814$1POZIn g$libname$24051$1POZIn)
         (g$make-empty-rib$20073$1POZIn)))))
   (g$interaction-environment$20739$1POZIn
     g$interaction-environment$24328$1POZIn
     (g$make-parameter$18976$1POZIn '#f))
   (g$top-level-context$20740$1POZIn
     g$top-level-context$24329$1POZIn
     (g$make-parameter$18976$1POZIn '#f)))
  (g$current-library-expander$19811$1POZIn
    g$library-expander$20716$1POZIn))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$19550$1POZIn
      (case-lambda
        ((g$x$24414$1POZIn)
         ((case-lambda
            ((g$t$24415$1POZIn)
             (if g$t$24415$1POZIn
               (cdr g$t$24415$1POZIn)
               (begin '#f '#f))))
          (g$assq$11821$1POZIn
            g$x$24414$1POZIn
            '((ellipsis-map . g$ellipsis-map$24213$1POZIn)
              (&stacktrace-rcd . g$&stacktrace-rcd$14176$1POZIn)
              (&stacktrace-rtd . g$&stacktrace-rtd$14175$1POZIn)
              (&where-rcd . g$&where-rcd$14166$1POZIn)
              (&where-rtd . g$&where-rtd$14165$1POZIn)
              (&no-nans-rcd . g$&no-nans-rcd$14340$1POZIn)
              (&no-nans-rtd . g$&no-nans-rtd$14339$1POZIn)
              (&no-infinities-rcd . g$&no-infinities-rcd$14332$1POZIn)
              (&no-infinities-rtd . g$&no-infinities-rtd$14331$1POZIn)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$14324$1POZIn)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$14323$1POZIn)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$14314$1POZIn)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$14313$1POZIn)
              (&i/o-port-rcd . g$&i/o-port-rcd$14306$1POZIn)
              (&i/o-port-rtd . g$&i/o-port-rtd$14305$1POZIn)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$14296$1POZIn)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$14295$1POZIn)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$14288$1POZIn)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$14287$1POZIn)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$14280$1POZIn)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$14279$1POZIn)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$14272$1POZIn)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$14271$1POZIn)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$14264$1POZIn)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$14263$1POZIn)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$14254$1POZIn)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$14253$1POZIn)
              (&i/o-write-rcd . g$&i/o-write-rcd$14244$1POZIn)
              (&i/o-write-rtd . g$&i/o-write-rtd$14243$1POZIn)
              (&i/o-read-rcd . g$&i/o-read-rcd$14236$1POZIn)
              (&i/o-read-rtd . g$&i/o-read-rtd$14235$1POZIn)
              (&i/o-rcd . g$&i/o-rcd$14228$1POZIn)
              (&i/o-rtd . g$&i/o-rtd$14227$1POZIn)
              (&undefined-rcd . g$&undefined-rcd$14220$1POZIn)
              (&undefined-rtd . g$&undefined-rtd$14219$1POZIn)
              (&syntax-rcd . g$&syntax-rcd$14212$1POZIn)
              (&syntax-rtd . g$&syntax-rtd$14211$1POZIn)
              (&lexical-rcd . g$&lexical-rcd$14200$1POZIn)
              (&lexical-rtd . g$&lexical-rtd$14199$1POZIn)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$14192$1POZIn)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$14191$1POZIn)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$14184$1POZIn)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$14183$1POZIn)
              (&who-rcd . g$&who-rcd$14156$1POZIn)
              (&who-rtd . g$&who-rtd$14155$1POZIn)
              (&irritants-rcd . g$&irritants-rcd$14146$1POZIn)
              (&irritants-rtd . g$&irritants-rtd$14145$1POZIn)
              (&assertion-rcd . g$&assertion-rcd$14136$1POZIn)
              (&assertion-rtd . g$&assertion-rtd$14135$1POZIn)
              (&violation-rcd . g$&violation-rcd$14128$1POZIn)
              (&violation-rtd . g$&violation-rtd$14127$1POZIn)
              (&error-rcd . g$&error-rcd$14120$1POZIn)
              (&error-rtd . g$&error-rtd$14119$1POZIn)
              (&serious-rcd . g$&serious-rcd$14112$1POZIn)
              (&serious-rtd . g$&serious-rtd$14111$1POZIn)
              (&warning-rcd . g$&warning-rcd$14104$1POZIn)
              (&warning-rtd . g$&warning-rtd$14103$1POZIn)
              (&message-rcd . g$&message-rcd$14096$1POZIn)
              (&message-rtd . g$&message-rtd$14095$1POZIn)
              (&condition-rcd . g$&condition-rcd$14086$1POZIn)
              (&condition-rtd . g$&condition-rtd$14085$1POZIn)
              (tanh . g$tanh$13640$1POZIn)
              (cosh . g$cosh$13638$1POZIn)
              (sinh . g$sinh$13635$1POZIn)
              (make-list . g$make-list$11816$1POZIn)
              (last-pair . g$last-pair$11815$1POZIn)
              (ironscheme-test . g$ironscheme-test$24404$1POZIn)
              (ironscheme-build . g$ironscheme-build$24405$1POZIn)
              (syntax-error . g$syntax-error$24318$1POZIn)
              (syntax-dispatch . g$syntax-dispatch$24208$1POZIn)
              (compile-system-libraries
                .
                g$compile-system-libraries$24409$1POZIn)
              (compile->closure . g$compile->closure$24411$1POZIn)
              (compile . g$compile$24410$1POZIn)
              (load . g$load$24403$1POZIn)
              (new-interaction-environment
                .
                g$new-interaction-environment$24327$1POZIn)
              (interaction-environment
                .
                g$interaction-environment$24328$1POZIn)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$14562$1POZIn)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$14561$1POZIn)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$14560$1POZIn)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$14559$1POZIn)
              (string-ci>? . g$string-ci>?$14551$1POZIn)
              (string-ci>=? . g$string-ci>=?$14553$1POZIn)
              (string-ci=? . g$string-ci=?$14549$1POZIn)
              (string-ci<? . g$string-ci<?$14550$1POZIn)
              (string-ci<=? . g$string-ci<=?$14552$1POZIn)
              (char-ci>? . g$char-ci>?$14556$1POZIn)
              (char-ci>=? . g$char-ci>=?$14558$1POZIn)
              (char-ci=? . g$char-ci=?$14554$1POZIn)
              (char-ci<? . g$char-ci<?$14555$1POZIn)
              (char-ci<=? . g$char-ci<=?$14557$1POZIn)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$24146$1POZIn)
              (variable-transformer?
                .
                g$variable-transformer?$24145$1POZIn)
              (make-variable-transformer
                .
                g$make-variable-transformer$24143$1POZIn)
              (identifier? . g$identifier?$24322$1POZIn)
              (generate-temporaries
                .
                g$generate-temporaries$24311$1POZIn)
              (free-identifier=? . g$free-identifier=?$24312$1POZIn)
              (syntax->datum . g$syntax->datum$24324$1POZIn)
              (datum->syntax . g$datum->syntax$24323$1POZIn)
              (bound-identifier=? . g$bound-identifier=?$24313$1POZIn)
              (delete-file . g$delete-file$12791$1POZIn)
              (file-exists? . g$file-exists?$12790$1POZIn)
              (list-sort . g$list-sort$14404$1POZIn)
              (make-eqv-hashtable . g$make-eqv-hashtable$12773$1POZIn)
              (make-eq-hashtable . g$make-eq-hashtable$12772$1POZIn)
              (hashtable-update! . g$hashtable-update!$12779$1POZIn)
              (hashtable-size . g$hashtable-size$12774$1POZIn)
              (hashtable-set! . g$hashtable-set!$12776$1POZIn)
              (hashtable-ref . g$hashtable-ref$12775$1POZIn)
              (hashtable-delete! . g$hashtable-delete!$12777$1POZIn)
              (hashtable-contains? . g$hashtable-contains?$12778$1POZIn)
              (hashtable-clear! . g$hashtable-clear!$12780$1POZIn)
              (call-with-output-file
                .
                g$call-with-output-file$18592$1POZIn)
              (call-with-input-file
                .
                g$call-with-input-file$18591$1POZIn)
              (write-char . g$write-char$18588$1POZIn)
              (with-output-to-file . g$with-output-to-file$18590$1POZIn)
              (with-input-from-file
                .
                g$with-input-from-file$18589$1POZIn)
              (read-char . g$read-char$18587$1POZIn)
              (peek-char . g$peek-char$18586$1POZIn)
              (newline . g$newline$18593$1POZIn)
              (standard-output-port
                .
                g$standard-output-port$18520$1POZIn)
              (standard-input-port . g$standard-input-port$18519$1POZIn)
              (standard-error-port . g$standard-error-port$18518$1POZIn)
              (put-datum . g$put-datum$18523$1POZIn)
              (port? . g$port?$18528$1POZIn)
              (open-string-output-port
                .
                g$open-string-output-port$18527$1POZIn)
              (native-eol-style . g$native-eol-style$18521$1POZIn)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$14241$1POZIn)
              (make-i/o-read-error . g$make-i/o-read-error$14233$1POZIn)
              (make-i/o-port-error . g$make-i/o-port-error$14301$1POZIn)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$14249$1POZIn)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$14259$1POZIn)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$14269$1POZIn)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$14277$1POZIn)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$14293$1POZIn)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$14285$1POZIn)
              (make-i/o-error . g$make-i/o-error$14225$1POZIn)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$14319$1POZIn)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$14311$1POZIn)
              (make-bytevector . g$make-bytevector$13116$1POZIn)
              (i/o-write-error? . g$i/o-write-error?$14242$1POZIn)
              (i/o-read-error? . g$i/o-read-error?$14234$1POZIn)
              (i/o-port-error? . g$i/o-port-error?$14303$1POZIn)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$14251$1POZIn)
              (i/o-error-position . g$i/o-error-position$14252$1POZIn)
              (i/o-filename-error? . g$i/o-filename-error?$14261$1POZIn)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$14270$1POZIn)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$14278$1POZIn)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$14294$1POZIn)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$14286$1POZIn)
              (i/o-error? . g$i/o-error?$14226$1POZIn)
              (i/o-error-port . g$i/o-error-port$14304$1POZIn)
              (i/o-error-filename . g$i/o-error-filename$14262$1POZIn)
              (i/o-encoding-error? . g$i/o-encoding-error?$14321$1POZIn)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$14322$1POZIn)
              (i/o-decoding-error? . g$i/o-decoding-error?$14312$1POZIn)
              (get-datum . g$get-datum$18524$1POZIn)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$18529$1POZIn)
              (call-with-port . g$call-with-port$18530$1POZIn)
              (buffer-mode? . g$buffer-mode?$18522$1POZIn)
              (scheme-report-environment
                .
                g$scheme-report-environment$24301$1POZIn)
              (quotient . g$quotient$14371$1POZIn)
              (null-environment . g$null-environment$24300$1POZIn)
              (remainder . g$remainder$14372$1POZIn)
              (modulo . g$modulo$14373$1POZIn)
              (inexact->exact . g$inexact->exact$14368$1POZIn)
              (force . g$force$14375$1POZIn)
              (exact->inexact . g$exact->inexact$14369$1POZIn)
              (command-line . g$command-line$24398$1POZIn)
              (remove . g$remove$11838$1POZIn)
              (remv . g$remv$11839$1POZIn)
              (remp . g$remp$11819$1POZIn)
              (remq . g$remq$11840$1POZIn)
              (partition . g$partition$11818$1POZIn)
              (memv . g$memv$11826$1POZIn)
              (memq . g$memq$11825$1POZIn)
              (memp . g$memp$11828$1POZIn)
              (member . g$member$11827$1POZIn)
              (exists . g$exists$11832$1POZIn)
              (for-all . g$for-all$11831$1POZIn)
              (fold-right . g$fold-right$11837$1POZIn)
              (fold-left . g$fold-left$11836$1POZIn)
              (find . g$find$11817$1POZIn)
              (filter . g$filter$11820$1POZIn)
              (cons* . g$cons*$11835$1POZIn)
              (assv . g$assv$11822$1POZIn)
              (assq . g$assq$11821$1POZIn)
              (assp . g$assp$11824$1POZIn)
              (assoc . g$assoc$11823$1POZIn)
              (eval . g$eval$24303$1POZIn)
              (environment . g$environment$24299$1POZIn)
              (make-enumeration . g$make-enumeration$18729$1POZIn)
              (enum-set=? . g$enum-set=?$18736$1POZIn)
              (enum-set-universe . g$enum-set-universe$18730$1POZIn)
              (enum-set-union . g$enum-set-union$18737$1POZIn)
              (enum-set-subset? . g$enum-set-subset?$18735$1POZIn)
              (enum-set-projection . g$enum-set-projection$18741$1POZIn)
              (enum-set-member? . g$enum-set-member?$18734$1POZIn)
              (enum-set-intersection
                .
                g$enum-set-intersection$18738$1POZIn)
              (enum-set-indexer . g$enum-set-indexer$18731$1POZIn)
              (enum-set-difference . g$enum-set-difference$18739$1POZIn)
              (enum-set-constructor
                .
                g$enum-set-constructor$18732$1POZIn)
              (enum-set-complement . g$enum-set-complement$18740$1POZIn)
              (enum-set->list . g$enum-set->list$18733$1POZIn)
              (who-condition? . g$who-condition?$14153$1POZIn)
              (warning? . g$warning?$14102$1POZIn)
              (violation? . g$violation?$14126$1POZIn)
              (undefined-violation?
                .
                g$undefined-violation?$14218$1POZIn)
              (syntax-violation? . g$syntax-violation?$14208$1POZIn)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$14210$1POZIn)
              (syntax-violation-form
                .
                g$syntax-violation-form$14209$1POZIn)
              (syntax-violation . g$syntax-violation$24321$1POZIn)
              (serious-condition? . g$serious-condition?$14110$1POZIn)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$14182$1POZIn)
              (message-condition? . g$message-condition?$14093$1POZIn)
              (make-who-condition . g$make-who-condition$14151$1POZIn)
              (make-warning . g$make-warning$14101$1POZIn)
              (make-violation . g$make-violation$14125$1POZIn)
              (make-undefined-violation
                .
                g$make-undefined-violation$14217$1POZIn)
              (make-syntax-violation
                .
                g$make-syntax-violation$14205$1POZIn)
              (make-serious-condition
                .
                g$make-serious-condition$14109$1POZIn)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$14181$1POZIn)
              (make-message-condition
                .
                g$make-message-condition$14091$1POZIn)
              (make-lexical-violation
                .
                g$make-lexical-violation$14197$1POZIn)
              (make-irritants-condition
                .
                g$make-irritants-condition$14141$1POZIn)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$14189$1POZIn)
              (make-error . g$make-error$14117$1POZIn)
              (make-assertion-violation
                .
                g$make-assertion-violation$14133$1POZIn)
              (lexical-violation? . g$lexical-violation?$14198$1POZIn)
              (irritants-condition?
                .
                g$irritants-condition?$14143$1POZIn)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$14190$1POZIn)
              (error? . g$error?$14118$1POZIn)
              (condition-who . g$condition-who$14154$1POZIn)
              (condition-message . g$condition-message$14094$1POZIn)
              (condition-irritants . g$condition-irritants$14144$1POZIn)
              (assertion-violation?
                .
                g$assertion-violation?$14134$1POZIn)
              (utf32->string . g$utf32->string$13134$1POZIn)
              (utf16->string . g$utf16->string$13133$1POZIn)
              (utf8->string . g$utf8->string$13131$1POZIn)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$13135$1POZIn)
              (u8-list->bytevector . g$u8-list->bytevector$13127$1POZIn)
              (string->utf8 . g$string->utf8$13128$1POZIn)
              (string->utf32 . g$string->utf32$13130$1POZIn)
              (string->utf16 . g$string->utf16$13129$1POZIn)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$13136$1POZIn)
              (native-endianness . g$native-endianness$13105$1POZIn)
              (bytevector? . g$bytevector?$12664$1POZIn)
              (bytevector=? . g$bytevector=?$13118$1POZIn)
              (bytevector-u8-set! . g$bytevector-u8-set!$13123$1POZIn)
              (bytevector-u8-ref . g$bytevector-u8-ref$13122$1POZIn)
              (bytevector-u64-set! . g$bytevector-u64-set!$13164$1POZIn)
              (bytevector-u64-ref . g$bytevector-u64-ref$13160$1POZIn)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$13166$1POZIn)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$13162$1POZIn)
              (bytevector-u32-set! . g$bytevector-u32-set!$13156$1POZIn)
              (bytevector-u32-ref . g$bytevector-u32-ref$13152$1POZIn)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$13158$1POZIn)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$13154$1POZIn)
              (bytevector-u16-set! . g$bytevector-u16-set!$13148$1POZIn)
              (bytevector-u16-ref . g$bytevector-u16-ref$13144$1POZIn)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$13150$1POZIn)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$13146$1POZIn)
              (bytevector-s8-set! . g$bytevector-s8-set!$13125$1POZIn)
              (bytevector-s8-ref . g$bytevector-s8-ref$13124$1POZIn)
              (bytevector-s64-set! . g$bytevector-s64-set!$13165$1POZIn)
              (bytevector-s64-ref . g$bytevector-s64-ref$13161$1POZIn)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$13167$1POZIn)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$13163$1POZIn)
              (bytevector-s32-set! . g$bytevector-s32-set!$13157$1POZIn)
              (bytevector-s32-ref . g$bytevector-s32-ref$13153$1POZIn)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$13159$1POZIn)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$13155$1POZIn)
              (bytevector-s16-set! . g$bytevector-s16-set!$13149$1POZIn)
              (bytevector-s16-ref . g$bytevector-s16-ref$13145$1POZIn)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$13151$1POZIn)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$13147$1POZIn)
              (bytevector-length . g$bytevector-length$13117$1POZIn)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$13142$1POZIn)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$13140$1POZIn)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$13170$1POZIn)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$13168$1POZIn)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$13143$1POZIn)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$13141$1POZIn)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$13171$1POZIn)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$13169$1POZIn)
              (bytevector-fill! . g$bytevector-fill!$13119$1POZIn)
              (bytevector-copy! . g$bytevector-copy!$13120$1POZIn)
              (bytevector-copy . g$bytevector-copy$13121$1POZIn)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$13137$1POZIn)
              (bytevector->u8-list . g$bytevector->u8-list$13126$1POZIn)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$13138$1POZIn)
              (no-nans-violation? . g$no-nans-violation?$14338$1POZIn)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$14330$1POZIn)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$14337$1POZIn)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$14329$1POZIn)
              (real->flonum . g$real->flonum$13598$1POZIn)
              (flzero? . g$flzero?$18485$1POZIn)
              (fltruncate . g$fltruncate$18480$1POZIn)
              (fltan . g$fltan$18469$1POZIn)
              (flsqrt . g$flsqrt$18474$1POZIn)
              (flsin . g$flsin$18467$1POZIn)
              (flround . g$flround$18481$1POZIn)
              (flpositive? . g$flpositive?$18483$1POZIn)
              (flonum? . g$flonum?$12669$1POZIn)
              (flodd? . g$flodd?$18487$1POZIn)
              (flnumerator . g$flnumerator$18445$1POZIn)
              (flnegative? . g$flnegative?$18484$1POZIn)
              (flnan? . g$flnan?$18466$1POZIn)
              (flmod0 . g$flmod0$18457$1POZIn)
              (flmod . g$flmod$18456$1POZIn)
              (flmin . g$flmin$18489$1POZIn)
              (flmax . g$flmax$18488$1POZIn)
              (fllog . g$fllog$18473$1POZIn)
              (flinteger? . g$flinteger?$18462$1POZIn)
              (flinfinite? . g$flinfinite?$18465$1POZIn)
              (flfloor . g$flfloor$18479$1POZIn)
              (flfinite? . g$flfinite?$18463$1POZIn)
              (flexpt . g$flexpt$18476$1POZIn)
              (flexp . g$flexp$18475$1POZIn)
              (fleven? . g$fleven?$18486$1POZIn)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$18461$1POZIn)
              (fldiv0 . g$fldiv0$18454$1POZIn)
              (fldiv-and-mod . g$fldiv-and-mod$18458$1POZIn)
              (fldiv . g$fldiv$18460$1POZIn)
              (fldenominator . g$fldenominator$18444$1POZIn)
              (flcos . g$flcos$18468$1POZIn)
              (flceiling . g$flceiling$18477$1POZIn)
              (flatan . g$flatan$18472$1POZIn)
              (flasin . g$flasin$18470$1POZIn)
              (flacos . g$flacos$18471$1POZIn)
              (flabs . g$flabs$18482$1POZIn)
              (fl>? . g$fl>?$18451$1POZIn)
              (fl>=? . g$fl>=?$18452$1POZIn)
              (fl=? . g$fl=?$18448$1POZIn)
              (fl<? . g$fl<?$18449$1POZIn)
              (fl<=? . g$fl<=?$18450$1POZIn)
              (fl/ . g$fl/$18447$1POZIn)
              (fl- . g$fl-$18446$1POZIn)
              (fl+ . g$fl+$18442$1POZIn)
              (fl* . g$fl*$18443$1POZIn)
              (fixnum->flonum . g$fixnum->flonum$13599$1POZIn)
              (fxzero? . g$fxzero?$16927$1POZIn)
              (fxxor . g$fxxor$16911$1POZIn)
              (fxrotate-bit-field . g$fxrotate-bit-field$16947$1POZIn)
              (fxreverse-bit-field . g$fxreverse-bit-field$16948$1POZIn)
              (fxpositive? . g$fxpositive?$16923$1POZIn)
              (fxodd? . g$fxodd?$16931$1POZIn)
              (fxnot . g$fxnot$16903$1POZIn)
              (fxnegative? . g$fxnegative?$16925$1POZIn)
              (fxmod0 . g$fxmod0$16916$1POZIn)
              (fxmod . g$fxmod$16915$1POZIn)
              (fxmin . g$fxmin$16933$1POZIn)
              (fxmax . g$fxmax$16932$1POZIn)
              (fxlength . g$fxlength$16900$1POZIn)
              (fxior . g$fxior$16910$1POZIn)
              (fxif . g$fxif$16938$1POZIn)
              (fxfirst-bit-set . g$fxfirst-bit-set$16901$1POZIn)
              (fxeven? . g$fxeven?$16929$1POZIn)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$16921$1POZIn)
              (fxdiv0 . g$fxdiv0$16919$1POZIn)
              (fxdiv-and-mod . g$fxdiv-and-mod$16917$1POZIn)
              (fxdiv . g$fxdiv$16913$1POZIn)
              (fxcopy-bit-field . g$fxcopy-bit-field$16944$1POZIn)
              (fxcopy-bit . g$fxcopy-bit$16940$1POZIn)
              (fxbit-set? . g$fxbit-set?$16902$1POZIn)
              (fxbit-field . g$fxbit-field$16942$1POZIn)
              (fxbit-count . g$fxbit-count$16898$1POZIn)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$16946$1POZIn)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$16945$1POZIn)
              (fxarithmetic-shift . g$fxarithmetic-shift$16896$1POZIn)
              (fxand . g$fxand$16909$1POZIn)
              (fx>? . g$fx>?$16907$1POZIn)
              (fx>=? . g$fx>=?$16908$1POZIn)
              (fx=? . g$fx=?$16904$1POZIn)
              (fx<? . g$fx<?$16905$1POZIn)
              (fx<=? . g$fx<=?$16906$1POZIn)
              (fx-/carry . g$fx-/carry$16935$1POZIn)
              (fx- . g$fx-$16893$1POZIn)
              (fx+/carry . g$fx+/carry$16936$1POZIn)
              (fx+ . g$fx+$16891$1POZIn)
              (fx*/carry . g$fx*/carry$16934$1POZIn)
              (fx* . g$fx*$16892$1POZIn)
              (greatest-fixnum . g$greatest-fixnum$16889$1POZIn)
              (least-fixnum . g$least-fixnum$16890$1POZIn)
              (fixnum-width . g$fixnum-width$12670$1POZIn)
              (fixnum? . g$fixnum?$12668$1POZIn)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$14656$1POZIn)
              (bitwise-length . g$bitwise-length$14647$1POZIn)
              (bitwise-if . g$bitwise-if$14650$1POZIn)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$14648$1POZIn)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$14653$1POZIn)
              (bitwise-copy-bit . g$bitwise-copy-bit$14651$1POZIn)
              (bitwise-bit-set? . g$bitwise-bit-set?$14649$1POZIn)
              (bitwise-bit-field . g$bitwise-bit-field$14652$1POZIn)
              (bitwise-bit-count . g$bitwise-bit-count$14646$1POZIn)
              (bitwise-xor . g$bitwise-xor$14645$1POZIn)
              (bitwise-ior . g$bitwise-ior$14644$1POZIn)
              (bitwise-and . g$bitwise-and$14643$1POZIn)
              (bitwise-not . g$bitwise-not$14642$1POZIn)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$14655$1POZIn)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$14654$1POZIn)
              (zero? . g$zero?$13613$1POZIn)
              (vector? . g$vector?$12663$1POZIn)
              (vector-set! . g$vector-set!$12679$1POZIn)
              (vector-ref . g$vector-ref$12678$1POZIn)
              (vector-map . g$vector-map$12732$1POZIn)
              (vector-for-each . g$vector-for-each$12733$1POZIn)
              (vector-fill! . g$vector-fill!$12680$1POZIn)
              (truncate . g$truncate$13647$1POZIn)
              (tan . g$tan$13639$1POZIn)
              (symbol? . g$symbol?$12665$1POZIn)
              (symbol=? . g$symbol=?$12722$1POZIn)
              (string>? . g$string>?$12719$1POZIn)
              (string>=? . g$string>=?$12721$1POZIn)
              (string=? . g$string=?$12717$1POZIn)
              (string<? . g$string<?$12718$1POZIn)
              (string<=? . g$string<=?$12720$1POZIn)
              (string-for-each . g$string-for-each$12734$1POZIn)
              (sqrt . g$sqrt$13649$1POZIn)
              (sin . g$sin$13633$1POZIn)
              (round . g$round$13648$1POZIn)
              (reverse . g$reverse$12682$1POZIn)
              (real? . g$real?$13607$1POZIn)
              (real-valued? . g$real-valued?$13610$1POZIn)
              (real-part . g$real-part$13630$1POZIn)
              (rationalize . g$rationalize$12729$1POZIn)
              (rational? . g$rational?$13608$1POZIn)
              (rational-valued? . g$rational-valued?$13611$1POZIn)
              (procedure? . g$procedure?$12667$1POZIn)
              (positive? . g$positive?$13614$1POZIn)
              (odd? . g$odd?$12712$1POZIn)
              (numerator . g$numerator$13628$1POZIn)
              (number? . g$number?$13600$1POZIn)
              (negative? . g$negative?$13615$1POZIn)
              (nan? . g$nan?$13601$1POZIn)
              (min . g$min$12714$1POZIn)
              (max . g$max$12713$1POZIn)
              (map . g$map$11833$1POZIn)
              (make-rectangular . g$make-rectangular$13623$1POZIn)
              (make-polar . g$make-polar$13624$1POZIn)
              (magnitude . g$magnitude$13626$1POZIn)
              (log . g$log$13642$1POZIn)
              (list-tail . g$list-tail$11813$1POZIn)
              (list-ref . g$list-ref$11814$1POZIn)
              (list->vector . g$list->vector$12676$1POZIn)
              (list->string . g$list->string$12677$1POZIn)
              (lcm . g$lcm$12716$1POZIn)
              (integer? . g$integer?$13609$1POZIn)
              (integer-valued? . g$integer-valued?$13612$1POZIn)
              (infinite? . g$infinite?$13603$1POZIn)
              (inexact? . g$inexact?$13605$1POZIn)
              (inexact . g$inexact$13616$1POZIn)
              (imag-part . g$imag-part$13631$1POZIn)
              (gcd . g$gcd$12715$1POZIn)
              (for-each . g$for-each$11834$1POZIn)
              (floor . g$floor$13645$1POZIn)
              (finite? . g$finite?$13602$1POZIn)
              (expt . g$expt$13651$1POZIn)
              (exp . g$exp$13632$1POZIn)
              (exact? . g$exact?$13604$1POZIn)
              (exact-integer-sqrt . g$exact-integer-sqrt$13650$1POZIn)
              (exact . g$exact$13617$1POZIn)
              (even? . g$even?$12711$1POZIn)
              (div0-and-mod0 . g$div0-and-mod0$12675$1POZIn)
              (mod0 . g$mod0$12673$1POZIn)
              (div0 . g$div0$12671$1POZIn)
              (div-and-mod . g$div-and-mod$12674$1POZIn)
              (mod . g$mod$12672$1POZIn)
              (div . g$div$13643$1POZIn)
              (denominator . g$denominator$13629$1POZIn)
              (cos . g$cos$13636$1POZIn)
              (complex? . g$complex?$13606$1POZIn)
              (char? . g$char?$12662$1POZIn)
              (char>? . g$char>?$12726$1POZIn)
              (char>=? . g$char>=?$12728$1POZIn)
              (char=? . g$char=?$12724$1POZIn)
              (char<? . g$char<?$12725$1POZIn)
              (char<=? . g$char<=?$12727$1POZIn)
              (ceiling . g$ceiling$13646$1POZIn)
              (cddddr . g$cddddr$12710$1POZIn)
              (cdddar . g$cdddar$12709$1POZIn)
              (cddadr . g$cddadr$12708$1POZIn)
              (cddaar . g$cddaar$12707$1POZIn)
              (cdaddr . g$cdaddr$12706$1POZIn)
              (cdadar . g$cdadar$12705$1POZIn)
              (cdaadr . g$cdaadr$12704$1POZIn)
              (cdaaar . g$cdaaar$12703$1POZIn)
              (cadddr . g$cadddr$12702$1POZIn)
              (caddar . g$caddar$12701$1POZIn)
              (cadadr . g$cadadr$12700$1POZIn)
              (cadaar . g$cadaar$12699$1POZIn)
              (caaddr . g$caaddr$12698$1POZIn)
              (caadar . g$caadar$12697$1POZIn)
              (caaadr . g$caaadr$12696$1POZIn)
              (caaaar . g$caaaar$12695$1POZIn)
              (cdddr . g$cdddr$12694$1POZIn)
              (cddar . g$cddar$12693$1POZIn)
              (cdadr . g$cdadr$12692$1POZIn)
              (cdaar . g$cdaar$12691$1POZIn)
              (caddr . g$caddr$12690$1POZIn)
              (cadar . g$cadar$12689$1POZIn)
              (caadr . g$caadr$12688$1POZIn)
              (caaar . g$caaar$12687$1POZIn)
              (cddr . g$cddr$12686$1POZIn)
              (cdar . g$cdar$12685$1POZIn)
              (cadr . g$cadr$12684$1POZIn)
              (caar . g$caar$12683$1POZIn)
              (boolean? . g$boolean?$12666$1POZIn)
              (boolean=? . g$boolean=?$12723$1POZIn)
              (atan . g$atan$13641$1POZIn)
              (asin . g$asin$13634$1POZIn)
              (angle . g$angle$13625$1POZIn)
              (acos . g$acos$13637$1POZIn)
              (abs . g$abs$13644$1POZIn)
              (>= . g$>=$13622$1POZIn)
              (> . g$>$13621$1POZIn)
              (= . g$=$13618$1POZIn)
              (<= . g$<=$13620$1POZIn)
              (< . g$<$13619$1POZIn)
              (enum-set? . g$enum?$18710$1POZIn)
              (make-promise . g$make-promise$14374$1POZIn)
              (load/unload . g$load/unload$24402$1POZIn)
              (load/args . g$load/args$24401$1POZIn)
              (printf . g$printf$18765$1POZIn)
              (fprintf . g$fprintf$18766$1POZIn)
              (format . g$format$18767$1POZIn)
              (trace-printer . g$trace-printer$24397$1POZIn)
              (make-traced-macro . g$make-traced-macro$18771$1POZIn)
              (assertion-error . g$assertion-error$24317$1POZIn)
              (make-parameter . g$make-parameter$18976$1POZIn)
              (environment-bindings
                .
                g$environment-bindings$24295$1POZIn)
              (environment-symbols . g$environment-symbols$24298$1POZIn)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$24294$1POZIn)
              (library-path . g$library-path$19803$1POZIn)
              (make-compile-time-value
                .
                g$make-compile-time-value$24144$1POZIn)
              (expand->core . g$expand->core$24304$1POZIn)
              (expand . g$expand$24302$1POZIn)
              (emacs-mode? . g$emacs-mode?$24399$1POZIn)
              (syntax-transpose . g$syntax-transpose$24251$1POZIn)
              (convert->cps . g$convert->cps$19504$1POZIn)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$14173$1POZIn)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$14171$1POZIn)
              (where-condition? . g$where-condition?$14163$1POZIn)
              (make-where-condition
                .
                g$make-where-condition$14161$1POZIn)
              (installed-libraries . g$installed-libraries$19824$1POZIn)
              (uninstall-library . g$uninstall-library$19815$1POZIn)
              (pretty-gensyms . g$pretty-gensyms$19184$1POZIn)
              (pretty-width . g$pretty-width$19181$1POZIn)
              (pretty-print . g$pretty-print$19186$1POZIn)))))))
    (g$install-library$19819$1POZIn
      'g$13697$1POZIn
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$6196$1POZIn)
        (cosh . g$6194$1POZIn)
        (sinh . g$6191$1POZIn)
        (make-guid . g$13690$1POZIn)
        (unspecified? . g$13689$1POZIn)
        (make-list . g$5166$1POZIn)
        (last-pair . g$5165$1POZIn)
        (load-r5rs . g$13688$1POZIn)
        (license . g$13687$1POZIn)
        (stacktrace . g$13686$1POZIn)
        (ironscheme-test . g$13251$1POZIn)
        (ironscheme-build . g$13252$1POZIn)
        (remove-location . g$13670$1POZIn)
        (set-symbol-value! . g$13669$1POZIn)
        (symbol-value . g$13668$1POZIn)
        (symbol-bound? . g$13667$1POZIn)
        (ungensym . g$13666$1POZIn)
        (gensym . g$13665$1POZIn)
        (void . g$13664$1POZIn)
        (compile-system-libraries . g$13256$1POZIn)
        (compile->closure . g$13258$1POZIn)
        (compile . g$13257$1POZIn)
        (load . g$13250$1POZIn)
        (new-interaction-environment . g$10233$1POZIn)
        (interaction-environment . g$10234$1POZIn)
        (string-upcase . g$13659$1POZIn)
        (string-titlecase . g$13658$1POZIn)
        (string-normalize-nfkd . g$6937$1POZIn)
        (string-normalize-nfkc . g$6936$1POZIn)
        (string-normalize-nfd . g$6935$1POZIn)
        (string-normalize-nfc . g$6934$1POZIn)
        (string-foldcase . g$13657$1POZIn)
        (string-downcase . g$13656$1POZIn)
        (string-ci>? . g$6921$1POZIn)
        (string-ci>=? . g$6923$1POZIn)
        (string-ci=? . g$6919$1POZIn)
        (string-ci<? . g$6920$1POZIn)
        (string-ci<=? . g$6922$1POZIn)
        (char-whitespace? . g$13655$1POZIn)
        (char-upper-case? . g$13654$1POZIn)
        (char-title-case? . g$13653$1POZIn)
        (char-numeric? . g$13652$1POZIn)
        (char-lower-case? . g$13651$1POZIn)
        (char-general-category . g$13650$1POZIn)
        (char-upcase . g$13649$1POZIn)
        (char-titlecase . g$13648$1POZIn)
        (char-foldcase . g$13647$1POZIn)
        (char-downcase . g$13646$1POZIn)
        (char-ci>? . g$6931$1POZIn)
        (char-ci>=? . g$6933$1POZIn)
        (char-ci=? . g$6929$1POZIn)
        (char-ci<? . g$6930$1POZIn)
        (char-ci<=? . g$6932$1POZIn)
        (char-alphabetic? . g$13645$1POZIn)
        (make-variable-transformer . g$9908$1POZIn)
        (identifier? . g$10228$1POZIn)
        (generate-temporaries . g$10217$1POZIn)
        (free-identifier=? . g$10218$1POZIn)
        (syntax->datum . g$10230$1POZIn)
        (datum->syntax . g$10229$1POZIn)
        (bound-identifier=? . g$10219$1POZIn)
        (record-type-descriptor? . g$13644$1POZIn)
        (record-predicate . g$13643$1POZIn)
        (record-mutator . g$13642$1POZIn)
        (record-constructor . g$13641$1POZIn)
        (record-accessor . g$13640$1POZIn)
        (make-record-type-descriptor . g$13639$1POZIn)
        (make-record-constructor-descriptor . g$13638$1POZIn)
        (record? . g$13637$1POZIn)
        (record-type-uid . g$13636$1POZIn)
        (record-type-sealed? . g$13635$1POZIn)
        (record-type-parent . g$13634$1POZIn)
        (record-type-opaque? . g$13633$1POZIn)
        (record-type-name . g$13632$1POZIn)
        (record-type-generative? . g$13631$1POZIn)
        (record-type-field-names . g$13630$1POZIn)
        (record-rtd . g$13629$1POZIn)
        (record-field-mutable? . g$13628$1POZIn)
        (delete-file . g$5826$1POZIn)
        (file-exists? . g$5825$1POZIn)
        (vector-sort! . g$13627$1POZIn)
        (vector-sort . g$13626$1POZIn)
        (list-sort . g$6890$1POZIn)
        (symbol-hash . g$13625$1POZIn)
        (string-ci-hash . g$13624$1POZIn)
        (string-hash . g$13623$1POZIn)
        (equal-hash . g$13622$1POZIn)
        (hashtable-equivalence-function . g$13621$1POZIn)
        (make-hashtable . g$13620$1POZIn)
        (hashtable-hash-function . g$13619$1POZIn)
        (make-eqv-hashtable . g$5793$1POZIn)
        (make-eq-hashtable . g$5792$1POZIn)
        (hashtable? . g$13618$1POZIn)
        (hashtable-update! . g$5799$1POZIn)
        (hashtable-size . g$5794$1POZIn)
        (hashtable-set! . g$5796$1POZIn)
        (hashtable-ref . g$5795$1POZIn)
        (hashtable-mutable? . g$13617$1POZIn)
        (hashtable-keys . g$13616$1POZIn)
        (hashtable-entries . g$13615$1POZIn)
        (hashtable-delete! . g$5797$1POZIn)
        (hashtable-copy . g$13614$1POZIn)
        (hashtable-contains? . g$5798$1POZIn)
        (hashtable-clear! . g$5800$1POZIn)
        (call-with-output-file . g$8732$1POZIn)
        (call-with-input-file . g$8731$1POZIn)
        (write-char . g$8723$1POZIn)
        (write . g$13613$1POZIn)
        (with-output-to-file . g$8730$1POZIn)
        (with-input-from-file . g$8729$1POZIn)
        (read-char . g$8722$1POZIn)
        (read . g$13612$1POZIn)
        (peek-char . g$8721$1POZIn)
        (open-output-file . g$13611$1POZIn)
        (open-input-file . g$13610$1POZIn)
        (newline . g$8733$1POZIn)
        (display . g$13609$1POZIn)
        (close-output-port . g$13608$1POZIn)
        (close-input-port . g$13607$1POZIn)
        (eof-object? . g$13606$1POZIn)
        (eof-object . g$13605$1POZIn)
        (current-error-port . g$13604$1POZIn)
        (current-output-port . g$13603$1POZIn)
        (current-input-port . g$13602$1POZIn)
        (output-port? . g$13601$1POZIn)
        (input-port? . g$13600$1POZIn)
        (utf-8-codec . g$13599$1POZIn)
        (utf-16-codec . g$13598$1POZIn)
        (transcoder-error-handling-mode . g$13597$1POZIn)
        (transcoder-eol-style . g$13596$1POZIn)
        (transcoder-codec . g$13595$1POZIn)
        (transcoded-port . g$13594$1POZIn)
        (textual-port? . g$13593$1POZIn)
        (string->bytevector . g$13592$1POZIn)
        (standard-output-port . g$8697$1POZIn)
        (standard-input-port . g$8696$1POZIn)
        (standard-error-port . g$8695$1POZIn)
        (set-port-position! . g$13591$1POZIn)
        (put-u8 . g$13590$1POZIn)
        (put-string . g$13589$1POZIn)
        (put-datum . g$8700$1POZIn)
        (put-char . g$13588$1POZIn)
        (put-bytevector . g$13587$1POZIn)
        (port? . g$8705$1POZIn)
        (port-transcoder . g$13586$1POZIn)
        (port-position . g$13585$1POZIn)
        (port-has-set-port-position!? . g$13584$1POZIn)
        (port-has-port-position? . g$13583$1POZIn)
        (port-eof? . g$13582$1POZIn)
        (output-port-buffer-mode . g$13581$1POZIn)
        (open-string-output-port . g$8704$1POZIn)
        (open-string-input-port . g$13580$1POZIn)
        (open-file-output-port . g$13579$1POZIn)
        (open-file-input/output-port . g$13578$1POZIn)
        (open-file-input-port . g$13577$1POZIn)
        (open-bytevector-output-port . g$13576$1POZIn)
        (open-bytevector-input-port . g$13575$1POZIn)
        (native-transcoder . g$13574$1POZIn)
        (native-eol-style . g$8698$1POZIn)
        (make-transcoder . g$13573$1POZIn)
        (latin-1-codec . g$13572$1POZIn)
        (make-i/o-write-error . g$6700$1POZIn)
        (make-i/o-read-error . g$6687$1POZIn)
        (make-i/o-port-error . g$6795$1POZIn)
        (make-i/o-invalid-position-error . g$6713$1POZIn)
        (make-i/o-filename-error . g$6728$1POZIn)
        (make-i/o-file-protection-error . g$6743$1POZIn)
        (make-i/o-file-is-read-only-error . g$6756$1POZIn)
        (make-i/o-file-does-not-exist-error . g$6782$1POZIn)
        (make-i/o-file-already-exists-error . g$6769$1POZIn)
        (make-i/o-error . g$6674$1POZIn)
        (make-i/o-encoding-error . g$6823$1POZIn)
        (make-i/o-decoding-error . g$6810$1POZIn)
        (make-custom-textual-output-port . g$13571$1POZIn)
        (make-custom-textual-input/output-port . g$13570$1POZIn)
        (make-custom-textual-input-port . g$13569$1POZIn)
        (make-custom-binary-output-port . g$13568$1POZIn)
        (make-custom-binary-input/output-port . g$13567$1POZIn)
        (make-custom-binary-input-port . g$13566$1POZIn)
        (make-bytevector . g$5846$1POZIn)
        (lookahead-u8 . g$13565$1POZIn)
        (lookahead-char . g$13564$1POZIn)
        (i/o-write-error? . g$6701$1POZIn)
        (i/o-read-error? . g$6688$1POZIn)
        (i/o-port-error? . g$6797$1POZIn)
        (i/o-invalid-position-error? . g$6715$1POZIn)
        (i/o-error-position . g$6716$1POZIn)
        (i/o-filename-error? . g$6730$1POZIn)
        (i/o-file-protection-error? . g$6744$1POZIn)
        (i/o-file-is-read-only-error? . g$6757$1POZIn)
        (i/o-file-does-not-exist-error? . g$6783$1POZIn)
        (i/o-file-already-exists-error? . g$6770$1POZIn)
        (i/o-error? . g$6675$1POZIn)
        (i/o-error-port . g$6798$1POZIn)
        (i/o-error-filename . g$6731$1POZIn)
        (i/o-encoding-error? . g$6825$1POZIn)
        (i/o-encoding-error-char . g$6826$1POZIn)
        (i/o-decoding-error? . g$6811$1POZIn)
        (get-u8 . g$13563$1POZIn)
        (get-string-n! . g$13562$1POZIn)
        (get-string-n . g$13561$1POZIn)
        (get-string-all . g$13560$1POZIn)
        (get-line . g$13559$1POZIn)
        (get-datum . g$8701$1POZIn)
        (get-char . g$13558$1POZIn)
        (get-bytevector-some . g$13557$1POZIn)
        (get-bytevector-n! . g$13556$1POZIn)
        (get-bytevector-n . g$13555$1POZIn)
        (get-bytevector-all . g$13554$1POZIn)
        (flush-output-port . g$13553$1POZIn)
        (close-port . g$13552$1POZIn)
        (call-with-string-output-port . g$8706$1POZIn)
        (call-with-port . g$8707$1POZIn)
        (call-with-bytevector-output-port . g$13551$1POZIn)
        (bytevector->string . g$13550$1POZIn)
        (buffer-mode? . g$8699$1POZIn)
        (binary-port? . g$13549$1POZIn)
        (scheme-report-environment . g$10207$1POZIn)
        (quotient . g$6869$1POZIn)
        (null-environment . g$10206$1POZIn)
        (remainder . g$6870$1POZIn)
        (modulo . g$6871$1POZIn)
        (inexact->exact . g$6866$1POZIn)
        (force . g$6873$1POZIn)
        (exact->inexact . g$6867$1POZIn)
        (exit . g$13548$1POZIn)
        (command-line . g$13245$1POZIn)
        (string-fill! . g$13547$1POZIn)
        (string-set! . g$13546$1POZIn)
        (set-cdr! . g$13545$1POZIn)
        (set-car! . g$13544$1POZIn)
        (remove . g$5188$1POZIn)
        (remv . g$5189$1POZIn)
        (remp . g$5169$1POZIn)
        (remq . g$5190$1POZIn)
        (partition . g$5168$1POZIn)
        (memv . g$5176$1POZIn)
        (memq . g$5175$1POZIn)
        (memp . g$5178$1POZIn)
        (member . g$5177$1POZIn)
        (exists . g$5182$1POZIn)
        (for-all . g$5181$1POZIn)
        (fold-right . g$5187$1POZIn)
        (fold-left . g$5186$1POZIn)
        (find . g$5167$1POZIn)
        (filter . g$5170$1POZIn)
        (cons* . g$5185$1POZIn)
        (assv . g$5172$1POZIn)
        (assq . g$5171$1POZIn)
        (assp . g$5174$1POZIn)
        (assoc . g$5173$1POZIn)
        (with-exception-handler . g$13543$1POZIn)
        (raise-continuable . g$13542$1POZIn)
        (raise . g$13541$1POZIn)
        (eval . g$10209$1POZIn)
        (environment . g$10205$1POZIn)
        (make-enumeration . g$8793$1POZIn)
        (enum-set=? . g$8800$1POZIn)
        (enum-set-universe . g$8794$1POZIn)
        (enum-set-union . g$8801$1POZIn)
        (enum-set-subset? . g$8799$1POZIn)
        (enum-set-projection . g$8805$1POZIn)
        (enum-set-member? . g$8798$1POZIn)
        (enum-set-intersection . g$8802$1POZIn)
        (enum-set-indexer . g$8795$1POZIn)
        (enum-set-difference . g$8803$1POZIn)
        (enum-set-constructor . g$8796$1POZIn)
        (enum-set-complement . g$8804$1POZIn)
        (enum-set->list . g$8797$1POZIn)
        (who-condition? . g$6562$1POZIn)
        (warning? . g$6481$1POZIn)
        (violation? . g$6520$1POZIn)
        (undefined-violation? . g$6662$1POZIn)
        (syntax-violation? . g$6647$1POZIn)
        (syntax-violation-subform . g$6649$1POZIn)
        (syntax-violation-form . g$6648$1POZIn)
        (syntax-violation . g$10227$1POZIn)
        (simple-conditions . g$13540$1POZIn)
        (serious-condition? . g$6494$1POZIn)
        (non-continuable-violation? . g$6606$1POZIn)
        (message-condition? . g$6467$1POZIn)
        (make-who-condition . g$6560$1POZIn)
        (make-warning . g$6480$1POZIn)
        (make-violation . g$6519$1POZIn)
        (make-undefined-violation . g$6661$1POZIn)
        (make-syntax-violation . g$6644$1POZIn)
        (make-serious-condition . g$6493$1POZIn)
        (make-non-continuable-violation . g$6605$1POZIn)
        (make-message-condition . g$6465$1POZIn)
        (make-lexical-violation . g$6631$1POZIn)
        (make-irritants-condition . g$6545$1POZIn)
        (make-implementation-restriction-violation . g$6618$1POZIn)
        (make-error . g$6506$1POZIn)
        (make-assertion-violation . g$6532$1POZIn)
        (lexical-violation? . g$6632$1POZIn)
        (irritants-condition? . g$6547$1POZIn)
        (implementation-restriction-violation? . g$6619$1POZIn)
        (error? . g$6507$1POZIn)
        (condition-who . g$6563$1POZIn)
        (condition-predicate . g$13539$1POZIn)
        (condition-message . g$6468$1POZIn)
        (condition-irritants . g$6548$1POZIn)
        (condition-accessor . g$13538$1POZIn)
        (condition . g$13537$1POZIn)
        (assertion-violation? . g$6533$1POZIn)
        (condition? . g$13536$1POZIn)
        (utf32->string . g$5864$1POZIn)
        (utf16->string . g$5863$1POZIn)
        (utf8->string . g$5861$1POZIn)
        (uint-list->bytevector . g$5865$1POZIn)
        (u8-list->bytevector . g$5857$1POZIn)
        (string->utf8 . g$5858$1POZIn)
        (string->utf32 . g$5860$1POZIn)
        (string->utf16 . g$5859$1POZIn)
        (sint-list->bytevector . g$5866$1POZIn)
        (native-endianness . g$5832$1POZIn)
        (bytevector? . g$5522$1POZIn)
        (bytevector=? . g$5848$1POZIn)
        (bytevector-uint-set! . g$13535$1POZIn)
        (bytevector-uint-ref . g$13534$1POZIn)
        (bytevector-u8-set! . g$5853$1POZIn)
        (bytevector-u8-ref . g$5852$1POZIn)
        (bytevector-u64-set! . g$5894$1POZIn)
        (bytevector-u64-ref . g$5890$1POZIn)
        (bytevector-u64-native-set! . g$5896$1POZIn)
        (bytevector-u64-native-ref . g$5892$1POZIn)
        (bytevector-u32-set! . g$5886$1POZIn)
        (bytevector-u32-ref . g$5882$1POZIn)
        (bytevector-u32-native-set! . g$5888$1POZIn)
        (bytevector-u32-native-ref . g$5884$1POZIn)
        (bytevector-u16-set! . g$5878$1POZIn)
        (bytevector-u16-ref . g$5874$1POZIn)
        (bytevector-u16-native-set! . g$5880$1POZIn)
        (bytevector-u16-native-ref . g$5876$1POZIn)
        (bytevector-sint-set! . g$13533$1POZIn)
        (bytevector-sint-ref . g$13532$1POZIn)
        (bytevector-s8-set! . g$5855$1POZIn)
        (bytevector-s8-ref . g$5854$1POZIn)
        (bytevector-s64-set! . g$5895$1POZIn)
        (bytevector-s64-ref . g$5891$1POZIn)
        (bytevector-s64-native-set! . g$5897$1POZIn)
        (bytevector-s64-native-ref . g$5893$1POZIn)
        (bytevector-s32-set! . g$5887$1POZIn)
        (bytevector-s32-ref . g$5883$1POZIn)
        (bytevector-s32-native-set! . g$5889$1POZIn)
        (bytevector-s32-native-ref . g$5885$1POZIn)
        (bytevector-s16-set! . g$5879$1POZIn)
        (bytevector-s16-ref . g$5875$1POZIn)
        (bytevector-s16-native-set! . g$5881$1POZIn)
        (bytevector-s16-native-ref . g$5877$1POZIn)
        (bytevector-length . g$5847$1POZIn)
        (bytevector-ieee-single-set! . g$5872$1POZIn)
        (bytevector-ieee-single-ref . g$5870$1POZIn)
        (bytevector-ieee-single-native-set! . g$5900$1POZIn)
        (bytevector-ieee-single-native-ref . g$5898$1POZIn)
        (bytevector-ieee-double-set! . g$5873$1POZIn)
        (bytevector-ieee-double-ref . g$5871$1POZIn)
        (bytevector-ieee-double-native-set! . g$5901$1POZIn)
        (bytevector-ieee-double-native-ref . g$5899$1POZIn)
        (bytevector-fill! . g$5849$1POZIn)
        (bytevector-copy! . g$5850$1POZIn)
        (bytevector-copy . g$5851$1POZIn)
        (bytevector->uint-list . g$5867$1POZIn)
        (bytevector->u8-list . g$5856$1POZIn)
        (bytevector->sint-list . g$5868$1POZIn)
        (no-nans-violation? . g$6852$1POZIn)
        (no-infinities-violation? . g$6839$1POZIn)
        (make-no-nans-violation . g$6851$1POZIn)
        (make-no-infinities-violation . g$6838$1POZIn)
        (real->flonum . g$6140$1POZIn)
        (flzero? . g$8137$1POZIn)
        (fltruncate . g$8132$1POZIn)
        (fltan . g$8118$1POZIn)
        (flsqrt . g$8123$1POZIn)
        (flsin . g$8116$1POZIn)
        (flround . g$8133$1POZIn)
        (flpositive? . g$8135$1POZIn)
        (flonum? . g$5527$1POZIn)
        (flodd? . g$8139$1POZIn)
        (flnumerator . g$8082$1POZIn)
        (flnegative? . g$8136$1POZIn)
        (flnan? . g$8115$1POZIn)
        (flmod0 . g$8100$1POZIn)
        (flmod . g$8099$1POZIn)
        (flmin . g$8141$1POZIn)
        (flmax . g$8140$1POZIn)
        (fllog . g$8122$1POZIn)
        (flinteger? . g$8108$1POZIn)
        (flinfinite? . g$8114$1POZIn)
        (flfloor . g$8131$1POZIn)
        (flfinite? . g$8109$1POZIn)
        (flexpt . g$8125$1POZIn)
        (flexp . g$8124$1POZIn)
        (fleven? . g$8138$1POZIn)
        (fldiv0-and-mod0 . g$8107$1POZIn)
        (fldiv0 . g$8094$1POZIn)
        (fldiv-and-mod . g$8101$1POZIn)
        (fldiv . g$8106$1POZIn)
        (fldenominator . g$8081$1POZIn)
        (flcos . g$8117$1POZIn)
        (flceiling . g$8126$1POZIn)
        (flatan . g$8121$1POZIn)
        (flasin . g$8119$1POZIn)
        (flacos . g$8120$1POZIn)
        (flabs . g$8134$1POZIn)
        (fl>? . g$8088$1POZIn)
        (fl>=? . g$8089$1POZIn)
        (fl=? . g$8085$1POZIn)
        (fl<? . g$8086$1POZIn)
        (fl<=? . g$8087$1POZIn)
        (fl/ . g$8084$1POZIn)
        (fl- . g$8083$1POZIn)
        (fl+ . g$8079$1POZIn)
        (fl* . g$8080$1POZIn)
        (fixnum->flonum . g$6141$1POZIn)
        (fxzero? . g$7179$1POZIn)
        (fxxor . g$7142$1POZIn)
        (fxrotate-bit-field . g$7217$1POZIn)
        (fxreverse-bit-field . g$7218$1POZIn)
        (fxpositive? . g$7169$1POZIn)
        (fxodd? . g$7189$1POZIn)
        (fxnot . g$7123$1POZIn)
        (fxnegative? . g$7174$1POZIn)
        (fxmod0 . g$7153$1POZIn)
        (fxmod . g$7152$1POZIn)
        (fxmin . g$7191$1POZIn)
        (fxmax . g$7190$1POZIn)
        (fxlength . g$7120$1POZIn)
        (fxior . g$7141$1POZIn)
        (fxif . g$7199$1POZIn)
        (fxfirst-bit-set . g$7121$1POZIn)
        (fxeven? . g$7184$1POZIn)
        (fxdiv0-and-mod0 . g$7164$1POZIn)
        (fxdiv0 . g$7159$1POZIn)
        (fxdiv-and-mod . g$7154$1POZIn)
        (fxdiv . g$7147$1POZIn)
        (fxcopy-bit-field . g$7214$1POZIn)
        (fxcopy-bit . g$7204$1POZIn)
        (fxbit-set? . g$7122$1POZIn)
        (fxbit-field . g$7209$1POZIn)
        (fxbit-count . g$7115$1POZIn)
        (fxarithmetic-shift-right . g$7216$1POZIn)
        (fxarithmetic-shift-left . g$7215$1POZIn)
        (fxarithmetic-shift . g$7110$1POZIn)
        (fxand . g$7140$1POZIn)
        (fx>? . g$7132$1POZIn)
        (fx>=? . g$7133$1POZIn)
        (fx=? . g$7129$1POZIn)
        (fx<? . g$7130$1POZIn)
        (fx<=? . g$7131$1POZIn)
        (fx-/carry . g$7193$1POZIn)
        (fx- . g$7104$1POZIn)
        (fx+/carry . g$7194$1POZIn)
        (fx+ . g$7102$1POZIn)
        (fx*/carry . g$7192$1POZIn)
        (fx* . g$7103$1POZIn)
        (greatest-fixnum . g$7073$1POZIn)
        (least-fixnum . g$7074$1POZIn)
        (fixnum-width . g$5528$1POZIn)
        (fixnum? . g$5526$1POZIn)
        (bitwise-rotate-bit-field . g$7011$1POZIn)
        (bitwise-reverse-bit-field . g$13531$1POZIn)
        (bitwise-length . g$7002$1POZIn)
        (bitwise-if . g$7005$1POZIn)
        (bitwise-first-bit-set . g$7003$1POZIn)
        (bitwise-copy-bit-field . g$7008$1POZIn)
        (bitwise-copy-bit . g$7006$1POZIn)
        (bitwise-bit-set? . g$7004$1POZIn)
        (bitwise-bit-field . g$7007$1POZIn)
        (bitwise-bit-count . g$7001$1POZIn)
        (bitwise-xor . g$7000$1POZIn)
        (bitwise-ior . g$6999$1POZIn)
        (bitwise-and . g$6998$1POZIn)
        (bitwise-not . g$6997$1POZIn)
        (bitwise-arithmetic-shift-right . g$7010$1POZIn)
        (bitwise-arithmetic-shift-left . g$7009$1POZIn)
        (bitwise-arithmetic-shift . g$13530$1POZIn)
        (zero? . g$6155$1POZIn)
        (vector? . g$5521$1POZIn)
        (vector-set! . g$5537$1POZIn)
        (vector-ref . g$5536$1POZIn)
        (vector-map . g$5600$1POZIn)
        (vector-length . g$13529$1POZIn)
        (vector-for-each . g$5601$1POZIn)
        (vector-fill! . g$5538$1POZIn)
        (vector->list . g$13528$1POZIn)
        (vector . g$13527$1POZIn)
        (values . g$13526$1POZIn)
        (truncate . g$6203$1POZIn)
        (tan . g$6195$1POZIn)
        (symbol? . g$5523$1POZIn)
        (symbol=? . g$5585$1POZIn)
        (symbol->string . g$13525$1POZIn)
        (substring . g$13524$1POZIn)
        (string? . g$13523$1POZIn)
        (string>? . g$5582$1POZIn)
        (string>=? . g$5584$1POZIn)
        (string=? . g$5580$1POZIn)
        (string<? . g$5581$1POZIn)
        (string<=? . g$5583$1POZIn)
        (string-ref . g$13522$1POZIn)
        (string-length . g$13521$1POZIn)
        (string-for-each . g$5602$1POZIn)
        (string-copy . g$13520$1POZIn)
        (string-append . g$13519$1POZIn)
        (string->symbol . g$13518$1POZIn)
        (string->number . g$13517$1POZIn)
        (string->list . g$13516$1POZIn)
        (string . g$13515$1POZIn)
        (sqrt . g$6205$1POZIn)
        (sin . g$6189$1POZIn)
        (round . g$6204$1POZIn)
        (reverse . g$5540$1POZIn)
        (real? . g$6149$1POZIn)
        (real-valued? . g$6152$1POZIn)
        (real-part . g$6182$1POZIn)
        (rationalize . g$5597$1POZIn)
        (rational? . g$6150$1POZIn)
        (rational-valued? . g$6153$1POZIn)
        (procedure? . g$5525$1POZIn)
        (positive? . g$6156$1POZIn)
        (pair? . g$13514$1POZIn)
        (odd? . g$5570$1POZIn)
        (numerator . g$6180$1POZIn)
        (number? . g$6142$1POZIn)
        (number->string . g$13513$1POZIn)
        (null? . g$13512$1POZIn)
        (not . g$13511$1POZIn)
        (negative? . g$6157$1POZIn)
        (nan? . g$6143$1POZIn)
        (min . g$5572$1POZIn)
        (max . g$5571$1POZIn)
        (map . g$5183$1POZIn)
        (make-vector . g$13510$1POZIn)
        (make-string . g$13509$1POZIn)
        (make-rectangular . g$6175$1POZIn)
        (make-polar . g$6176$1POZIn)
        (magnitude . g$6178$1POZIn)
        (log . g$6198$1POZIn)
        (list? . g$13508$1POZIn)
        (list-tail . g$5163$1POZIn)
        (list-ref . g$5164$1POZIn)
        (list->vector . g$5534$1POZIn)
        (list->string . g$5535$1POZIn)
        (list . g$13507$1POZIn)
        (length . g$13506$1POZIn)
        (lcm . g$5574$1POZIn)
        (integer? . g$6151$1POZIn)
        (integer-valued? . g$6154$1POZIn)
        (integer->char . g$13505$1POZIn)
        (infinite? . g$6145$1POZIn)
        (inexact? . g$6147$1POZIn)
        (inexact . g$6158$1POZIn)
        (imag-part . g$6183$1POZIn)
        (gcd . g$5573$1POZIn)
        (for-each . g$5184$1POZIn)
        (floor . g$6201$1POZIn)
        (finite? . g$6144$1POZIn)
        (expt . g$6207$1POZIn)
        (exp . g$6188$1POZIn)
        (exact? . g$6146$1POZIn)
        (exact-integer-sqrt . g$6206$1POZIn)
        (exact . g$6159$1POZIn)
        (even? . g$5569$1POZIn)
        (error . g$13504$1POZIn)
        (eqv? . g$13503$1POZIn)
        (equal? . g$13502$1POZIn)
        (eq? . g$13501$1POZIn)
        (dynamic-wind . g$13500$1POZIn)
        (div0-and-mod0 . g$5533$1POZIn)
        (mod0 . g$5531$1POZIn)
        (div0 . g$5529$1POZIn)
        (div-and-mod . g$5532$1POZIn)
        (mod . g$5530$1POZIn)
        (div . g$6199$1POZIn)
        (denominator . g$6181$1POZIn)
        (cos . g$6192$1POZIn)
        (cons . g$13499$1POZIn)
        (complex? . g$6148$1POZIn)
        (char? . g$5520$1POZIn)
        (char>? . g$5594$1POZIn)
        (char>=? . g$5596$1POZIn)
        (char=? . g$5592$1POZIn)
        (char<? . g$5593$1POZIn)
        (char<=? . g$5595$1POZIn)
        (char->integer . g$13498$1POZIn)
        (ceiling . g$6202$1POZIn)
        (call-with-values . g$13497$1POZIn)
        (call/cc . g$13496$1POZIn)
        (call-with-current-continuation . g$13495$1POZIn)
        (cddddr . g$5568$1POZIn)
        (cdddar . g$5567$1POZIn)
        (cddadr . g$5566$1POZIn)
        (cddaar . g$5565$1POZIn)
        (cdaddr . g$5564$1POZIn)
        (cdadar . g$5563$1POZIn)
        (cdaadr . g$5562$1POZIn)
        (cdaaar . g$5561$1POZIn)
        (cadddr . g$5560$1POZIn)
        (caddar . g$5559$1POZIn)
        (cadadr . g$5558$1POZIn)
        (cadaar . g$5557$1POZIn)
        (caaddr . g$5556$1POZIn)
        (caadar . g$5555$1POZIn)
        (caaadr . g$5554$1POZIn)
        (caaaar . g$5553$1POZIn)
        (cdddr . g$5552$1POZIn)
        (cddar . g$5551$1POZIn)
        (cdadr . g$5550$1POZIn)
        (cdaar . g$5549$1POZIn)
        (caddr . g$5548$1POZIn)
        (cadar . g$5547$1POZIn)
        (caadr . g$5546$1POZIn)
        (caaar . g$5545$1POZIn)
        (cddr . g$5544$1POZIn)
        (cdar . g$5543$1POZIn)
        (cadr . g$5542$1POZIn)
        (caar . g$5541$1POZIn)
        (cdr . g$13494$1POZIn)
        (car . g$13493$1POZIn)
        (boolean? . g$5524$1POZIn)
        (boolean=? . g$5586$1POZIn)
        (atan . g$6197$1POZIn)
        (assertion-violation . g$13492$1POZIn)
        (asin . g$6190$1POZIn)
        (apply . g$13491$1POZIn)
        (append . g$13490$1POZIn)
        (angle . g$6177$1POZIn)
        (acos . g$6193$1POZIn)
        (abs . g$6200$1POZIn)
        (/ . g$13489$1POZIn)
        (* . g$13488$1POZIn)
        (- . g$13487$1POZIn)
        (+ . g$13486$1POZIn)
        (>= . g$6174$1POZIn)
        (> . g$6173$1POZIn)
        (= . g$6170$1POZIn)
        (<= . g$6172$1POZIn)
        (< . g$6171$1POZIn)
        (deserialize-port . g$13447$1POZIn)
        (serialize-port . g$13446$1POZIn)
        (enum-set? . g$8770$1POZIn)
        (load/unload . g$13249$1POZIn)
        (load/args . g$13248$1POZIn)
        (printf . g$8879$1POZIn)
        (fprintf . g$8880$1POZIn)
        (format . g$8881$1POZIn)
        (procedure-form . g$13445$1POZIn)
        (procedure-environment . g$13444$1POZIn)
        (procedure-name . g$13443$1POZIn)
        (procedure-arity . g$13442$1POZIn)
        (gc-collect . g$13441$1POZIn)
        (typeof . g$13440$1POZIn)
        (clr-type? . g$13439$1POZIn)
        (get-clr-type . g$13438$1POZIn)
        (vector-append . g$13436$1POZIn)
        (vector-filter . g$13435$1POZIn)
        (vector-reverse! . g$13434$1POZIn)
        (vector-contains? . g$13433$1POZIn)
        (vector-index-of . g$13432$1POZIn)
        (vector-copy . g$13431$1POZIn)
        (vector-binary-search . g$13430$1POZIn)
        (string-ci-compare . g$13429$1POZIn)
        (string-compare . g$13428$1POZIn)
        (string-format . g$13427$1POZIn)
        (trace-printer . g$13244$1POZIn)
        (time-it . g$13425$1POZIn)
        (make-parameter . g$8908$1POZIn)
        (open-tcp-input/output-port . g$13422$1POZIn)
        (hashtable-for-each . g$13421$1POZIn)
        (hashtable-map . g$13420$1POZIn)
        (environment-bindings . g$10201$1POZIn)
        (environment-symbols . g$10204$1POZIn)
        (interaction-environment-symbols . g$10200$1POZIn)
        (optimization-level . g$13419$1POZIn)
        (library-path . g$9530$1POZIn)
        (make-compile-time-value . g$9909$1POZIn)
        (expand->core . g$10210$1POZIn)
        (expand . g$10208$1POZIn)
        (emacs-mode? . g$13246$1POZIn)
        (syntax-transpose . g$10147$1POZIn)
        (convert->cps . g$9227$1POZIn)
        (condition-stacktrace . g$13413$1POZIn)
        (stacktrace-condition? . g$6592$1POZIn)
        (make-stacktrace-condition . g$6590$1POZIn)
        (condition-where . g$13412$1POZIn)
        (where-condition? . g$6577$1POZIn)
        (make-where-condition . g$6575$1POZIn)
        (installed-libraries . g$9551$1POZIn)
        (uninstall-library . g$9542$1POZIn)
        (pretty-gensyms . g$8991$1POZIn)
        (pretty-width . g$8988$1POZIn)
        (pretty-print . g$8993$1POZIn)
        (pointer+ . g$13411$1POZIn)
        (&no-nans . g$13408$1POZIn)
        (&no-infinities . g$13407$1POZIn)
        (&i/o-encoding . g$13406$1POZIn)
        (&i/o-decoding . g$13405$1POZIn)
        (&i/o-port . g$13404$1POZIn)
        (&i/o-file-does-not-exist . g$13403$1POZIn)
        (&i/o-file-already-exists . g$13402$1POZIn)
        (&i/o-file-is-read-only . g$13401$1POZIn)
        (&i/o-file-protection . g$13400$1POZIn)
        (&i/o-filename . g$13399$1POZIn)
        (&i/o-invalid-position . g$13398$1POZIn)
        (&i/o-write . g$13397$1POZIn)
        (&i/o-read . g$13396$1POZIn)
        (&i/o . g$13395$1POZIn)
        (&non-continuable . g$13394$1POZIn)
        (&undefined . g$13393$1POZIn)
        (&syntax . g$13392$1POZIn)
        (&lexical . g$13391$1POZIn)
        (&implementation-restriction . g$13390$1POZIn)
        (&who . g$13389$1POZIn)
        (&irritants . g$13388$1POZIn)
        (&assertion . g$13387$1POZIn)
        (&violation . g$13386$1POZIn)
        (&error . g$13385$1POZIn)
        (&serious . g$13384$1POZIn)
        (&warning . g$13383$1POZIn)
        (&message . g$13382$1POZIn)
        (&condition . g$13381$1POZIn)
        (define-condition-type . g$13380$1POZIn)
        (define-enumeration . g$13379$1POZIn)
        (define-record-type . g$13378$1POZIn)
        (parent-rtd . g$13377$1POZIn)
        (nongenerative . g$13376$1POZIn)
        (opaque . g$13375$1POZIn)
        (sealed . g$13374$1POZIn)
        (protocol . g$13373$1POZIn)
        (parent . g$13372$1POZIn)
        (immutable . g$13371$1POZIn)
        (mutable . g$13370$1POZIn)
        (fields . g$13369$1POZIn)
        (error-handling-mode . g$13368$1POZIn)
        (file-options . g$13367$1POZIn)
        (buffer-mode . g$13366$1POZIn)
        (eol-style . g$13365$1POZIn)
        (guard . g$13364$1POZIn)
        (trace-letrec-syntax . g$13363$1POZIn)
        (trace-let-syntax . g$13362$1POZIn)
        (trace-define-syntax . g$13361$1POZIn)
        (trace-define . g$13360$1POZIn)
        (trace-lambda . g$13359$1POZIn)
        (unsyntax-splicing . g$13358$1POZIn)
        (unsyntax . g$13357$1POZIn)
        (unquote-splicing . g$13356$1POZIn)
        (unquote . g$13355$1POZIn)
        (_ . g$13354$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn)
        (... . g$13351$1POZIn)
        (assert . g$13350$1POZIn)
        (endianness . g$13349$1POZIn)
        (delay . g$13348$1POZIn)
        (time . g$13347$1POZIn)
        (or . g$13346$1POZIn)
        (and . g$13345$1POZIn)
        (do . g$13344$1POZIn)
        (cond . g$13343$1POZIn)
        (let* . g$13342$1POZIn)
        (let . g$13341$1POZIn)
        (identifier-syntax . g$13340$1POZIn)
        (with-syntax . g$13339$1POZIn)
        (quasisyntax . g$13338$1POZIn)
        (quasiquote . g$13337$1POZIn)
        (syntax-rules . g$13336$1POZIn)
        (include-into . g$13335$1POZIn)
        (include . g$13334$1POZIn)
        (let-values . g$13332$1POZIn)
        (let*-values . g$13331$1POZIn)
        (record-constructor-descriptor . g$13330$1POZIn)
        (record-type-descriptor . g$13329$1POZIn)
        (fluid-let-syntax . g$13328$1POZIn)
        (case . g$13327$1POZIn)
        (parameterize . g$13326$1POZIn)
        (unless . g$13325$1POZIn)
        (when . g$13324$1POZIn)
        (if . g$13323$1POZIn)
        (letrec* . g$13322$1POZIn)
        (letrec . g$13321$1POZIn)
        (case-lambda . g$13319$1POZIn)
        (lambda . g$13318$1POZIn)
        (syntax . g$13317$1POZIn)
        (syntax-case . g$13316$1POZIn)
        (quote . g$13315$1POZIn)
        (letrec-syntax . g$13313$1POZIn)
        (let-syntax . g$13312$1POZIn)
        (set! . g$13311$1POZIn)
        (export . g$13310$1POZIn)
        (import . g$13309$1POZIn)
        (library . g$13308$1POZIn)
        (begin . g$13307$1POZIn)
        (module . g$13306$1POZIn)
        (define-syntax . g$13305$1POZIn)
        (define . g$13304$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13698$1POZIn
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13423$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13699$1POZIn
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13695$1POZIn)
        (annotation-source . g$13694$1POZIn)
        (annotation-expression . g$13693$1POZIn)
        (annotation? . g$13692$1POZIn)
        (read-annotated . g$13691$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13700$1POZIn
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13663$1POZIn)
        (serialize-library . g$13662$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13701$1POZIn
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13661$1POZIn)
        (variable-transformer-procedure . g$9911$1POZIn)
        (variable-transformer? . g$9910$1POZIn)
        (eqv-hash . g$13449$1POZIn)
        (reverse! . g$13448$1POZIn)
        (make-promise . g$6872$1POZIn)
        (format . g$8881$1POZIn)
        (get-command-line . g$13437$1POZIn)
        (make-traced-procedure . g$13426$1POZIn)
        (make-traced-macro . g$8901$1POZIn)
        (assertion-error . g$10223$1POZIn)
        (library-locator . g$13424$1POZIn)
        (get-library-paths . g$13423$1POZIn)
        (library-path . g$9530$1POZIn)
        (inexact=? . g$13418$1POZIn)
        (bignum-sqrt-exact . g$13417$1POZIn)
        (bignum-sqrt . g$13416$1POZIn)
        (inexact-compare . g$13415$1POZIn)
        (exact-compare . g$13414$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13702$1POZIn
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$13485$1POZIn)
        ($bytevector-ref . g$13484$1POZIn)
        ($fl>=? . g$13483$1POZIn)
        ($fl>? . g$13482$1POZIn)
        ($fl<=? . g$13481$1POZIn)
        ($fl<? . g$13480$1POZIn)
        ($fl- . g$13479$1POZIn)
        ($fl/ . g$13478$1POZIn)
        ($fl* . g$13477$1POZIn)
        ($fl+ . g$13476$1POZIn)
        ($fl=? . g$13475$1POZIn)
        ($try . g$13474$1POZIn)
        ($fxarithmetic-shift-right . g$13473$1POZIn)
        ($fxarithmetic-shift-left . g$13472$1POZIn)
        ($$fx- . g$13471$1POZIn)
        ($$fx* . g$13470$1POZIn)
        ($$fx+ . g$13469$1POZIn)
        ($fxnot . g$13468$1POZIn)
        ($fxxor . g$13467$1POZIn)
        ($fxior . g$13466$1POZIn)
        ($fxand . g$13465$1POZIn)
        ($fx>=? . g$13464$1POZIn)
        ($fx>? . g$13463$1POZIn)
        ($fx<=? . g$13462$1POZIn)
        ($fx<? . g$13461$1POZIn)
        ($fx- . g$13460$1POZIn)
        ($fxmod0 . g$13459$1POZIn)
        ($fxdiv0 . g$13458$1POZIn)
        ($fx* . g$13457$1POZIn)
        ($fx+ . g$13456$1POZIn)
        ($fx=? . g$13455$1POZIn)
        ($vector-set! . g$13454$1POZIn)
        ($vector-ref . g$13453$1POZIn)
        ($cdr . g$13452$1POZIn)
        ($car . g$13451$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13703$1POZIn
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13450$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13704$1POZIn
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$13685$1POZIn)
        (ffi-callback-internal . g$13684$1POZIn)
        (ffi-callout-internal . g$13683$1POZIn)
        (define-clr-class-internal . g$13682$1POZIn)
        (clr-field-set!-internal . g$13681$1POZIn)
        (clr-field-get-internal . g$13680$1POZIn)
        (clr-cast-internal . g$13679$1POZIn)
        (clr-call-internal . g$13678$1POZIn)
        (clr-new-internal . g$13677$1POZIn)
        (clr-new-array-internal . g$13676$1POZIn)
        (clr-is-internal . g$13675$1POZIn)
        (clr-reference-internal . g$13674$1POZIn)
        (clr-using-internal . g$13673$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13705$1POZIn
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13356$1POZIn)
        (unquote . g$13355$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn)
        (delay . g$13348$1POZIn)
        (or . g$13346$1POZIn)
        (and . g$13345$1POZIn)
        (do . g$13344$1POZIn)
        (cond . g$13343$1POZIn)
        (let* . g$13342$1POZIn)
        (let . g$13341$1POZIn)
        (quasiquote . g$13337$1POZIn)
        (syntax-rules . g$13336$1POZIn)
        (case . g$13327$1POZIn)
        (if . g$13323$1POZIn)
        (letrec . g$13321$1POZIn)
        (lambda . g$13318$1POZIn)
        (quote . g$13315$1POZIn)
        (letrec-syntax . g$13313$1POZIn)
        (let-syntax . g$13312$1POZIn)
        (set! . g$13311$1POZIn)
        (begin . g$13307$1POZIn)
        (define-syntax . g$13305$1POZIn)
        (define . g$13304$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13706$1POZIn
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13660$1POZIn)
        (string-ci>? . g$6921$1POZIn)
        (string-ci>=? . g$6923$1POZIn)
        (string-ci=? . g$6919$1POZIn)
        (string-ci<? . g$6920$1POZIn)
        (string-ci<=? . g$6922$1POZIn)
        (char-whitespace? . g$13655$1POZIn)
        (char-upper-case? . g$13654$1POZIn)
        (char-numeric? . g$13652$1POZIn)
        (char-lower-case? . g$13651$1POZIn)
        (char-upcase . g$13649$1POZIn)
        (char-downcase . g$13646$1POZIn)
        (char-ci>? . g$6931$1POZIn)
        (char-ci>=? . g$6933$1POZIn)
        (char-ci=? . g$6929$1POZIn)
        (char-ci<? . g$6930$1POZIn)
        (char-ci<=? . g$6932$1POZIn)
        (char-alphabetic? . g$13645$1POZIn)
        (call-with-output-file . g$8732$1POZIn)
        (call-with-input-file . g$8731$1POZIn)
        (write-char . g$8723$1POZIn)
        (write . g$13613$1POZIn)
        (with-output-to-file . g$8730$1POZIn)
        (with-input-from-file . g$8729$1POZIn)
        (read-char . g$8722$1POZIn)
        (read . g$13612$1POZIn)
        (peek-char . g$8721$1POZIn)
        (open-output-file . g$13611$1POZIn)
        (open-input-file . g$13610$1POZIn)
        (newline . g$8733$1POZIn)
        (display . g$13609$1POZIn)
        (close-output-port . g$13608$1POZIn)
        (close-input-port . g$13607$1POZIn)
        (eof-object? . g$13606$1POZIn)
        (current-error-port . g$13604$1POZIn)
        (current-output-port . g$13603$1POZIn)
        (current-input-port . g$13602$1POZIn)
        (output-port? . g$13601$1POZIn)
        (input-port? . g$13600$1POZIn)
        (scheme-report-environment . g$10207$1POZIn)
        (quotient . g$6869$1POZIn)
        (null-environment . g$10206$1POZIn)
        (remainder . g$6870$1POZIn)
        (modulo . g$6871$1POZIn)
        (inexact->exact . g$6866$1POZIn)
        (force . g$6873$1POZIn)
        (exact->inexact . g$6867$1POZIn)
        (string-fill! . g$13547$1POZIn)
        (string-set! . g$13546$1POZIn)
        (set-cdr! . g$13545$1POZIn)
        (set-car! . g$13544$1POZIn)
        (memv . g$5176$1POZIn)
        (memq . g$5175$1POZIn)
        (member . g$5177$1POZIn)
        (assv . g$5172$1POZIn)
        (assq . g$5171$1POZIn)
        (assoc . g$5173$1POZIn)
        (eval . g$10209$1POZIn)
        (zero? . g$6155$1POZIn)
        (vector? . g$5521$1POZIn)
        (vector-set! . g$5537$1POZIn)
        (vector-ref . g$5536$1POZIn)
        (vector-length . g$13529$1POZIn)
        (vector-fill! . g$5538$1POZIn)
        (vector->list . g$13528$1POZIn)
        (vector . g$13527$1POZIn)
        (values . g$13526$1POZIn)
        (truncate . g$6203$1POZIn)
        (tan . g$6195$1POZIn)
        (symbol? . g$5523$1POZIn)
        (symbol->string . g$13525$1POZIn)
        (substring . g$13524$1POZIn)
        (string? . g$13523$1POZIn)
        (string>? . g$5582$1POZIn)
        (string>=? . g$5584$1POZIn)
        (string=? . g$5580$1POZIn)
        (string<? . g$5581$1POZIn)
        (string<=? . g$5583$1POZIn)
        (string-ref . g$13522$1POZIn)
        (string-length . g$13521$1POZIn)
        (string-copy . g$13520$1POZIn)
        (string-append . g$13519$1POZIn)
        (string->symbol . g$13518$1POZIn)
        (string->number . g$13517$1POZIn)
        (string->list . g$13516$1POZIn)
        (string . g$13515$1POZIn)
        (sqrt . g$6205$1POZIn)
        (sin . g$6189$1POZIn)
        (round . g$6204$1POZIn)
        (reverse . g$5540$1POZIn)
        (real? . g$6149$1POZIn)
        (real-part . g$6182$1POZIn)
        (rationalize . g$5597$1POZIn)
        (rational? . g$6150$1POZIn)
        (procedure? . g$5525$1POZIn)
        (positive? . g$6156$1POZIn)
        (pair? . g$13514$1POZIn)
        (odd? . g$5570$1POZIn)
        (numerator . g$6180$1POZIn)
        (number? . g$6142$1POZIn)
        (number->string . g$13513$1POZIn)
        (null? . g$13512$1POZIn)
        (not . g$13511$1POZIn)
        (negative? . g$6157$1POZIn)
        (min . g$5572$1POZIn)
        (max . g$5571$1POZIn)
        (map . g$5183$1POZIn)
        (make-vector . g$13510$1POZIn)
        (make-string . g$13509$1POZIn)
        (make-rectangular . g$6175$1POZIn)
        (make-polar . g$6176$1POZIn)
        (magnitude . g$6178$1POZIn)
        (log . g$6198$1POZIn)
        (list? . g$13508$1POZIn)
        (list-tail . g$5163$1POZIn)
        (list-ref . g$5164$1POZIn)
        (list->vector . g$5534$1POZIn)
        (list->string . g$5535$1POZIn)
        (list . g$13507$1POZIn)
        (length . g$13506$1POZIn)
        (lcm . g$5574$1POZIn)
        (integer? . g$6151$1POZIn)
        (integer->char . g$13505$1POZIn)
        (inexact? . g$6147$1POZIn)
        (imag-part . g$6183$1POZIn)
        (gcd . g$5573$1POZIn)
        (for-each . g$5184$1POZIn)
        (floor . g$6201$1POZIn)
        (expt . g$6207$1POZIn)
        (exp . g$6188$1POZIn)
        (exact? . g$6146$1POZIn)
        (even? . g$5569$1POZIn)
        (eqv? . g$13503$1POZIn)
        (equal? . g$13502$1POZIn)
        (eq? . g$13501$1POZIn)
        (dynamic-wind . g$13500$1POZIn)
        (denominator . g$6181$1POZIn)
        (cos . g$6192$1POZIn)
        (cons . g$13499$1POZIn)
        (complex? . g$6148$1POZIn)
        (char? . g$5520$1POZIn)
        (char>? . g$5594$1POZIn)
        (char>=? . g$5596$1POZIn)
        (char=? . g$5592$1POZIn)
        (char<? . g$5593$1POZIn)
        (char<=? . g$5595$1POZIn)
        (char->integer . g$13498$1POZIn)
        (ceiling . g$6202$1POZIn)
        (call-with-values . g$13497$1POZIn)
        (call-with-current-continuation . g$13495$1POZIn)
        (cddddr . g$5568$1POZIn)
        (cdddar . g$5567$1POZIn)
        (cddadr . g$5566$1POZIn)
        (cddaar . g$5565$1POZIn)
        (cdaddr . g$5564$1POZIn)
        (cdadar . g$5563$1POZIn)
        (cdaadr . g$5562$1POZIn)
        (cdaaar . g$5561$1POZIn)
        (cadddr . g$5560$1POZIn)
        (caddar . g$5559$1POZIn)
        (cadadr . g$5558$1POZIn)
        (cadaar . g$5557$1POZIn)
        (caaddr . g$5556$1POZIn)
        (caadar . g$5555$1POZIn)
        (caaadr . g$5554$1POZIn)
        (caaaar . g$5553$1POZIn)
        (cdddr . g$5552$1POZIn)
        (cddar . g$5551$1POZIn)
        (cdadr . g$5550$1POZIn)
        (cdaar . g$5549$1POZIn)
        (caddr . g$5548$1POZIn)
        (cadar . g$5547$1POZIn)
        (caadr . g$5546$1POZIn)
        (caaar . g$5545$1POZIn)
        (cddr . g$5544$1POZIn)
        (cdar . g$5543$1POZIn)
        (cadr . g$5542$1POZIn)
        (caar . g$5541$1POZIn)
        (cdr . g$13494$1POZIn)
        (car . g$13493$1POZIn)
        (boolean? . g$5524$1POZIn)
        (atan . g$6197$1POZIn)
        (asin . g$6190$1POZIn)
        (apply . g$13491$1POZIn)
        (append . g$13490$1POZIn)
        (angle . g$6177$1POZIn)
        (acos . g$6193$1POZIn)
        (abs . g$6200$1POZIn)
        (/ . g$13489$1POZIn)
        (* . g$13488$1POZIn)
        (- . g$13487$1POZIn)
        (+ . g$13486$1POZIn)
        (>= . g$6174$1POZIn)
        (> . g$6173$1POZIn)
        (= . g$6170$1POZIn)
        (<= . g$6172$1POZIn)
        (< . g$6171$1POZIn)
        (unquote-splicing . g$13356$1POZIn)
        (unquote . g$13355$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn)
        (... . g$13351$1POZIn)
        (delay . g$13348$1POZIn)
        (or . g$13346$1POZIn)
        (and . g$13345$1POZIn)
        (do . g$13344$1POZIn)
        (cond . g$13343$1POZIn)
        (let* . g$13342$1POZIn)
        (let . g$13341$1POZIn)
        (quasiquote . g$13337$1POZIn)
        (syntax-rules . g$13336$1POZIn)
        (case . g$13327$1POZIn)
        (if . g$13323$1POZIn)
        (letrec . g$13321$1POZIn)
        (lambda . g$13318$1POZIn)
        (quote . g$13315$1POZIn)
        (letrec-syntax . g$13313$1POZIn)
        (let-syntax . g$13312$1POZIn)
        (set! . g$13311$1POZIn)
        (begin . g$13307$1POZIn)
        (define-syntax . g$13305$1POZIn)
        (define . g$13304$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13707$1POZIn
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13659$1POZIn)
        (string-titlecase . g$13658$1POZIn)
        (string-normalize-nfkd . g$6937$1POZIn)
        (string-normalize-nfkc . g$6936$1POZIn)
        (string-normalize-nfd . g$6935$1POZIn)
        (string-normalize-nfc . g$6934$1POZIn)
        (string-foldcase . g$13657$1POZIn)
        (string-downcase . g$13656$1POZIn)
        (string-ci>? . g$6921$1POZIn)
        (string-ci>=? . g$6923$1POZIn)
        (string-ci=? . g$6919$1POZIn)
        (string-ci<? . g$6920$1POZIn)
        (string-ci<=? . g$6922$1POZIn)
        (char-whitespace? . g$13655$1POZIn)
        (char-upper-case? . g$13654$1POZIn)
        (char-title-case? . g$13653$1POZIn)
        (char-numeric? . g$13652$1POZIn)
        (char-lower-case? . g$13651$1POZIn)
        (char-general-category . g$13650$1POZIn)
        (char-upcase . g$13649$1POZIn)
        (char-titlecase . g$13648$1POZIn)
        (char-foldcase . g$13647$1POZIn)
        (char-downcase . g$13646$1POZIn)
        (char-ci>? . g$6931$1POZIn)
        (char-ci>=? . g$6933$1POZIn)
        (char-ci=? . g$6929$1POZIn)
        (char-ci<? . g$6930$1POZIn)
        (char-ci<=? . g$6932$1POZIn)
        (char-alphabetic? . g$13645$1POZIn)
        (make-variable-transformer . g$9908$1POZIn)
        (identifier? . g$10228$1POZIn)
        (generate-temporaries . g$10217$1POZIn)
        (free-identifier=? . g$10218$1POZIn)
        (syntax->datum . g$10230$1POZIn)
        (datum->syntax . g$10229$1POZIn)
        (bound-identifier=? . g$10219$1POZIn)
        (record-type-descriptor? . g$13644$1POZIn)
        (record-predicate . g$13643$1POZIn)
        (record-mutator . g$13642$1POZIn)
        (record-constructor . g$13641$1POZIn)
        (record-accessor . g$13640$1POZIn)
        (make-record-type-descriptor . g$13639$1POZIn)
        (make-record-constructor-descriptor . g$13638$1POZIn)
        (record? . g$13637$1POZIn)
        (record-type-uid . g$13636$1POZIn)
        (record-type-sealed? . g$13635$1POZIn)
        (record-type-parent . g$13634$1POZIn)
        (record-type-opaque? . g$13633$1POZIn)
        (record-type-name . g$13632$1POZIn)
        (record-type-generative? . g$13631$1POZIn)
        (record-type-field-names . g$13630$1POZIn)
        (record-rtd . g$13629$1POZIn)
        (record-field-mutable? . g$13628$1POZIn)
        (delete-file . g$5826$1POZIn)
        (file-exists? . g$5825$1POZIn)
        (vector-sort! . g$13627$1POZIn)
        (vector-sort . g$13626$1POZIn)
        (list-sort . g$6890$1POZIn)
        (symbol-hash . g$13625$1POZIn)
        (string-ci-hash . g$13624$1POZIn)
        (string-hash . g$13623$1POZIn)
        (equal-hash . g$13622$1POZIn)
        (hashtable-equivalence-function . g$13621$1POZIn)
        (make-hashtable . g$13620$1POZIn)
        (hashtable-hash-function . g$13619$1POZIn)
        (make-eqv-hashtable . g$5793$1POZIn)
        (make-eq-hashtable . g$5792$1POZIn)
        (hashtable? . g$13618$1POZIn)
        (hashtable-update! . g$5799$1POZIn)
        (hashtable-size . g$5794$1POZIn)
        (hashtable-set! . g$5796$1POZIn)
        (hashtable-ref . g$5795$1POZIn)
        (hashtable-mutable? . g$13617$1POZIn)
        (hashtable-keys . g$13616$1POZIn)
        (hashtable-entries . g$13615$1POZIn)
        (hashtable-delete! . g$5797$1POZIn)
        (hashtable-copy . g$13614$1POZIn)
        (hashtable-contains? . g$5798$1POZIn)
        (hashtable-clear! . g$5800$1POZIn)
        (call-with-output-file . g$8732$1POZIn)
        (call-with-input-file . g$8731$1POZIn)
        (write-char . g$8723$1POZIn)
        (write . g$13613$1POZIn)
        (with-output-to-file . g$8730$1POZIn)
        (with-input-from-file . g$8729$1POZIn)
        (read-char . g$8722$1POZIn)
        (read . g$13612$1POZIn)
        (peek-char . g$8721$1POZIn)
        (open-output-file . g$13611$1POZIn)
        (open-input-file . g$13610$1POZIn)
        (newline . g$8733$1POZIn)
        (display . g$13609$1POZIn)
        (close-output-port . g$13608$1POZIn)
        (close-input-port . g$13607$1POZIn)
        (eof-object? . g$13606$1POZIn)
        (eof-object . g$13605$1POZIn)
        (current-error-port . g$13604$1POZIn)
        (current-output-port . g$13603$1POZIn)
        (current-input-port . g$13602$1POZIn)
        (output-port? . g$13601$1POZIn)
        (input-port? . g$13600$1POZIn)
        (utf-8-codec . g$13599$1POZIn)
        (utf-16-codec . g$13598$1POZIn)
        (transcoder-error-handling-mode . g$13597$1POZIn)
        (transcoder-eol-style . g$13596$1POZIn)
        (transcoder-codec . g$13595$1POZIn)
        (transcoded-port . g$13594$1POZIn)
        (textual-port? . g$13593$1POZIn)
        (string->bytevector . g$13592$1POZIn)
        (standard-output-port . g$8697$1POZIn)
        (standard-input-port . g$8696$1POZIn)
        (standard-error-port . g$8695$1POZIn)
        (set-port-position! . g$13591$1POZIn)
        (put-u8 . g$13590$1POZIn)
        (put-string . g$13589$1POZIn)
        (put-datum . g$8700$1POZIn)
        (put-char . g$13588$1POZIn)
        (put-bytevector . g$13587$1POZIn)
        (port? . g$8705$1POZIn)
        (port-transcoder . g$13586$1POZIn)
        (port-position . g$13585$1POZIn)
        (port-has-set-port-position!? . g$13584$1POZIn)
        (port-has-port-position? . g$13583$1POZIn)
        (port-eof? . g$13582$1POZIn)
        (output-port-buffer-mode . g$13581$1POZIn)
        (open-string-output-port . g$8704$1POZIn)
        (open-string-input-port . g$13580$1POZIn)
        (open-file-output-port . g$13579$1POZIn)
        (open-file-input/output-port . g$13578$1POZIn)
        (open-file-input-port . g$13577$1POZIn)
        (open-bytevector-output-port . g$13576$1POZIn)
        (open-bytevector-input-port . g$13575$1POZIn)
        (native-transcoder . g$13574$1POZIn)
        (native-eol-style . g$8698$1POZIn)
        (make-transcoder . g$13573$1POZIn)
        (latin-1-codec . g$13572$1POZIn)
        (make-i/o-write-error . g$6700$1POZIn)
        (make-i/o-read-error . g$6687$1POZIn)
        (make-i/o-port-error . g$6795$1POZIn)
        (make-i/o-invalid-position-error . g$6713$1POZIn)
        (make-i/o-filename-error . g$6728$1POZIn)
        (make-i/o-file-protection-error . g$6743$1POZIn)
        (make-i/o-file-is-read-only-error . g$6756$1POZIn)
        (make-i/o-file-does-not-exist-error . g$6782$1POZIn)
        (make-i/o-file-already-exists-error . g$6769$1POZIn)
        (make-i/o-error . g$6674$1POZIn)
        (make-i/o-encoding-error . g$6823$1POZIn)
        (make-i/o-decoding-error . g$6810$1POZIn)
        (make-custom-textual-output-port . g$13571$1POZIn)
        (make-custom-textual-input/output-port . g$13570$1POZIn)
        (make-custom-textual-input-port . g$13569$1POZIn)
        (make-custom-binary-output-port . g$13568$1POZIn)
        (make-custom-binary-input/output-port . g$13567$1POZIn)
        (make-custom-binary-input-port . g$13566$1POZIn)
        (make-bytevector . g$5846$1POZIn)
        (lookahead-u8 . g$13565$1POZIn)
        (lookahead-char . g$13564$1POZIn)
        (i/o-write-error? . g$6701$1POZIn)
        (i/o-read-error? . g$6688$1POZIn)
        (i/o-port-error? . g$6797$1POZIn)
        (i/o-invalid-position-error? . g$6715$1POZIn)
        (i/o-error-position . g$6716$1POZIn)
        (i/o-filename-error? . g$6730$1POZIn)
        (i/o-file-protection-error? . g$6744$1POZIn)
        (i/o-file-is-read-only-error? . g$6757$1POZIn)
        (i/o-file-does-not-exist-error? . g$6783$1POZIn)
        (i/o-file-already-exists-error? . g$6770$1POZIn)
        (i/o-error? . g$6675$1POZIn)
        (i/o-error-port . g$6798$1POZIn)
        (i/o-error-filename . g$6731$1POZIn)
        (i/o-encoding-error? . g$6825$1POZIn)
        (i/o-encoding-error-char . g$6826$1POZIn)
        (i/o-decoding-error? . g$6811$1POZIn)
        (get-u8 . g$13563$1POZIn)
        (get-string-n! . g$13562$1POZIn)
        (get-string-n . g$13561$1POZIn)
        (get-string-all . g$13560$1POZIn)
        (get-line . g$13559$1POZIn)
        (get-datum . g$8701$1POZIn)
        (get-char . g$13558$1POZIn)
        (get-bytevector-some . g$13557$1POZIn)
        (get-bytevector-n! . g$13556$1POZIn)
        (get-bytevector-n . g$13555$1POZIn)
        (get-bytevector-all . g$13554$1POZIn)
        (flush-output-port . g$13553$1POZIn)
        (close-port . g$13552$1POZIn)
        (call-with-string-output-port . g$8706$1POZIn)
        (call-with-port . g$8707$1POZIn)
        (call-with-bytevector-output-port . g$13551$1POZIn)
        (bytevector->string . g$13550$1POZIn)
        (buffer-mode? . g$8699$1POZIn)
        (binary-port? . g$13549$1POZIn)
        (exit . g$13548$1POZIn)
        (command-line . g$13245$1POZIn)
        (remove . g$5188$1POZIn)
        (remv . g$5189$1POZIn)
        (remp . g$5169$1POZIn)
        (remq . g$5190$1POZIn)
        (partition . g$5168$1POZIn)
        (memv . g$5176$1POZIn)
        (memq . g$5175$1POZIn)
        (memp . g$5178$1POZIn)
        (member . g$5177$1POZIn)
        (exists . g$5182$1POZIn)
        (for-all . g$5181$1POZIn)
        (fold-right . g$5187$1POZIn)
        (fold-left . g$5186$1POZIn)
        (find . g$5167$1POZIn)
        (filter . g$5170$1POZIn)
        (cons* . g$5185$1POZIn)
        (assv . g$5172$1POZIn)
        (assq . g$5171$1POZIn)
        (assp . g$5174$1POZIn)
        (assoc . g$5173$1POZIn)
        (with-exception-handler . g$13543$1POZIn)
        (raise-continuable . g$13542$1POZIn)
        (raise . g$13541$1POZIn)
        (make-enumeration . g$8793$1POZIn)
        (enum-set=? . g$8800$1POZIn)
        (enum-set-universe . g$8794$1POZIn)
        (enum-set-union . g$8801$1POZIn)
        (enum-set-subset? . g$8799$1POZIn)
        (enum-set-projection . g$8805$1POZIn)
        (enum-set-member? . g$8798$1POZIn)
        (enum-set-intersection . g$8802$1POZIn)
        (enum-set-indexer . g$8795$1POZIn)
        (enum-set-difference . g$8803$1POZIn)
        (enum-set-constructor . g$8796$1POZIn)
        (enum-set-complement . g$8804$1POZIn)
        (enum-set->list . g$8797$1POZIn)
        (who-condition? . g$6562$1POZIn)
        (warning? . g$6481$1POZIn)
        (violation? . g$6520$1POZIn)
        (undefined-violation? . g$6662$1POZIn)
        (syntax-violation? . g$6647$1POZIn)
        (syntax-violation-subform . g$6649$1POZIn)
        (syntax-violation-form . g$6648$1POZIn)
        (syntax-violation . g$10227$1POZIn)
        (simple-conditions . g$13540$1POZIn)
        (serious-condition? . g$6494$1POZIn)
        (non-continuable-violation? . g$6606$1POZIn)
        (message-condition? . g$6467$1POZIn)
        (make-who-condition . g$6560$1POZIn)
        (make-warning . g$6480$1POZIn)
        (make-violation . g$6519$1POZIn)
        (make-undefined-violation . g$6661$1POZIn)
        (make-syntax-violation . g$6644$1POZIn)
        (make-serious-condition . g$6493$1POZIn)
        (make-non-continuable-violation . g$6605$1POZIn)
        (make-message-condition . g$6465$1POZIn)
        (make-lexical-violation . g$6631$1POZIn)
        (make-irritants-condition . g$6545$1POZIn)
        (make-implementation-restriction-violation . g$6618$1POZIn)
        (make-error . g$6506$1POZIn)
        (make-assertion-violation . g$6532$1POZIn)
        (lexical-violation? . g$6632$1POZIn)
        (irritants-condition? . g$6547$1POZIn)
        (implementation-restriction-violation? . g$6619$1POZIn)
        (error? . g$6507$1POZIn)
        (condition-who . g$6563$1POZIn)
        (condition-predicate . g$13539$1POZIn)
        (condition-message . g$6468$1POZIn)
        (condition-irritants . g$6548$1POZIn)
        (condition-accessor . g$13538$1POZIn)
        (condition . g$13537$1POZIn)
        (assertion-violation? . g$6533$1POZIn)
        (condition? . g$13536$1POZIn)
        (utf32->string . g$5864$1POZIn)
        (utf16->string . g$5863$1POZIn)
        (utf8->string . g$5861$1POZIn)
        (uint-list->bytevector . g$5865$1POZIn)
        (u8-list->bytevector . g$5857$1POZIn)
        (string->utf8 . g$5858$1POZIn)
        (string->utf32 . g$5860$1POZIn)
        (string->utf16 . g$5859$1POZIn)
        (sint-list->bytevector . g$5866$1POZIn)
        (native-endianness . g$5832$1POZIn)
        (bytevector? . g$5522$1POZIn)
        (bytevector=? . g$5848$1POZIn)
        (bytevector-uint-set! . g$13535$1POZIn)
        (bytevector-uint-ref . g$13534$1POZIn)
        (bytevector-u8-set! . g$5853$1POZIn)
        (bytevector-u8-ref . g$5852$1POZIn)
        (bytevector-u64-set! . g$5894$1POZIn)
        (bytevector-u64-ref . g$5890$1POZIn)
        (bytevector-u64-native-set! . g$5896$1POZIn)
        (bytevector-u64-native-ref . g$5892$1POZIn)
        (bytevector-u32-set! . g$5886$1POZIn)
        (bytevector-u32-ref . g$5882$1POZIn)
        (bytevector-u32-native-set! . g$5888$1POZIn)
        (bytevector-u32-native-ref . g$5884$1POZIn)
        (bytevector-u16-set! . g$5878$1POZIn)
        (bytevector-u16-ref . g$5874$1POZIn)
        (bytevector-u16-native-set! . g$5880$1POZIn)
        (bytevector-u16-native-ref . g$5876$1POZIn)
        (bytevector-sint-set! . g$13533$1POZIn)
        (bytevector-sint-ref . g$13532$1POZIn)
        (bytevector-s8-set! . g$5855$1POZIn)
        (bytevector-s8-ref . g$5854$1POZIn)
        (bytevector-s64-set! . g$5895$1POZIn)
        (bytevector-s64-ref . g$5891$1POZIn)
        (bytevector-s64-native-set! . g$5897$1POZIn)
        (bytevector-s64-native-ref . g$5893$1POZIn)
        (bytevector-s32-set! . g$5887$1POZIn)
        (bytevector-s32-ref . g$5883$1POZIn)
        (bytevector-s32-native-set! . g$5889$1POZIn)
        (bytevector-s32-native-ref . g$5885$1POZIn)
        (bytevector-s16-set! . g$5879$1POZIn)
        (bytevector-s16-ref . g$5875$1POZIn)
        (bytevector-s16-native-set! . g$5881$1POZIn)
        (bytevector-s16-native-ref . g$5877$1POZIn)
        (bytevector-length . g$5847$1POZIn)
        (bytevector-ieee-single-set! . g$5872$1POZIn)
        (bytevector-ieee-single-ref . g$5870$1POZIn)
        (bytevector-ieee-single-native-set! . g$5900$1POZIn)
        (bytevector-ieee-single-native-ref . g$5898$1POZIn)
        (bytevector-ieee-double-set! . g$5873$1POZIn)
        (bytevector-ieee-double-ref . g$5871$1POZIn)
        (bytevector-ieee-double-native-set! . g$5901$1POZIn)
        (bytevector-ieee-double-native-ref . g$5899$1POZIn)
        (bytevector-fill! . g$5849$1POZIn)
        (bytevector-copy! . g$5850$1POZIn)
        (bytevector-copy . g$5851$1POZIn)
        (bytevector->uint-list . g$5867$1POZIn)
        (bytevector->u8-list . g$5856$1POZIn)
        (bytevector->sint-list . g$5868$1POZIn)
        (no-nans-violation? . g$6852$1POZIn)
        (no-infinities-violation? . g$6839$1POZIn)
        (make-no-nans-violation . g$6851$1POZIn)
        (make-no-infinities-violation . g$6838$1POZIn)
        (real->flonum . g$6140$1POZIn)
        (flzero? . g$8137$1POZIn)
        (fltruncate . g$8132$1POZIn)
        (fltan . g$8118$1POZIn)
        (flsqrt . g$8123$1POZIn)
        (flsin . g$8116$1POZIn)
        (flround . g$8133$1POZIn)
        (flpositive? . g$8135$1POZIn)
        (flonum? . g$5527$1POZIn)
        (flodd? . g$8139$1POZIn)
        (flnumerator . g$8082$1POZIn)
        (flnegative? . g$8136$1POZIn)
        (flnan? . g$8115$1POZIn)
        (flmod0 . g$8100$1POZIn)
        (flmod . g$8099$1POZIn)
        (flmin . g$8141$1POZIn)
        (flmax . g$8140$1POZIn)
        (fllog . g$8122$1POZIn)
        (flinteger? . g$8108$1POZIn)
        (flinfinite? . g$8114$1POZIn)
        (flfloor . g$8131$1POZIn)
        (flfinite? . g$8109$1POZIn)
        (flexpt . g$8125$1POZIn)
        (flexp . g$8124$1POZIn)
        (fleven? . g$8138$1POZIn)
        (fldiv0-and-mod0 . g$8107$1POZIn)
        (fldiv0 . g$8094$1POZIn)
        (fldiv-and-mod . g$8101$1POZIn)
        (fldiv . g$8106$1POZIn)
        (fldenominator . g$8081$1POZIn)
        (flcos . g$8117$1POZIn)
        (flceiling . g$8126$1POZIn)
        (flatan . g$8121$1POZIn)
        (flasin . g$8119$1POZIn)
        (flacos . g$8120$1POZIn)
        (flabs . g$8134$1POZIn)
        (fl>? . g$8088$1POZIn)
        (fl>=? . g$8089$1POZIn)
        (fl=? . g$8085$1POZIn)
        (fl<? . g$8086$1POZIn)
        (fl<=? . g$8087$1POZIn)
        (fl/ . g$8084$1POZIn)
        (fl- . g$8083$1POZIn)
        (fl+ . g$8079$1POZIn)
        (fl* . g$8080$1POZIn)
        (fixnum->flonum . g$6141$1POZIn)
        (fxzero? . g$7179$1POZIn)
        (fxxor . g$7142$1POZIn)
        (fxrotate-bit-field . g$7217$1POZIn)
        (fxreverse-bit-field . g$7218$1POZIn)
        (fxpositive? . g$7169$1POZIn)
        (fxodd? . g$7189$1POZIn)
        (fxnot . g$7123$1POZIn)
        (fxnegative? . g$7174$1POZIn)
        (fxmod0 . g$7153$1POZIn)
        (fxmod . g$7152$1POZIn)
        (fxmin . g$7191$1POZIn)
        (fxmax . g$7190$1POZIn)
        (fxlength . g$7120$1POZIn)
        (fxior . g$7141$1POZIn)
        (fxif . g$7199$1POZIn)
        (fxfirst-bit-set . g$7121$1POZIn)
        (fxeven? . g$7184$1POZIn)
        (fxdiv0-and-mod0 . g$7164$1POZIn)
        (fxdiv0 . g$7159$1POZIn)
        (fxdiv-and-mod . g$7154$1POZIn)
        (fxdiv . g$7147$1POZIn)
        (fxcopy-bit-field . g$7214$1POZIn)
        (fxcopy-bit . g$7204$1POZIn)
        (fxbit-set? . g$7122$1POZIn)
        (fxbit-field . g$7209$1POZIn)
        (fxbit-count . g$7115$1POZIn)
        (fxarithmetic-shift-right . g$7216$1POZIn)
        (fxarithmetic-shift-left . g$7215$1POZIn)
        (fxarithmetic-shift . g$7110$1POZIn)
        (fxand . g$7140$1POZIn)
        (fx>? . g$7132$1POZIn)
        (fx>=? . g$7133$1POZIn)
        (fx=? . g$7129$1POZIn)
        (fx<? . g$7130$1POZIn)
        (fx<=? . g$7131$1POZIn)
        (fx-/carry . g$7193$1POZIn)
        (fx- . g$7104$1POZIn)
        (fx+/carry . g$7194$1POZIn)
        (fx+ . g$7102$1POZIn)
        (fx*/carry . g$7192$1POZIn)
        (fx* . g$7103$1POZIn)
        (greatest-fixnum . g$7073$1POZIn)
        (least-fixnum . g$7074$1POZIn)
        (fixnum-width . g$5528$1POZIn)
        (fixnum? . g$5526$1POZIn)
        (bitwise-rotate-bit-field . g$7011$1POZIn)
        (bitwise-reverse-bit-field . g$13531$1POZIn)
        (bitwise-length . g$7002$1POZIn)
        (bitwise-if . g$7005$1POZIn)
        (bitwise-first-bit-set . g$7003$1POZIn)
        (bitwise-copy-bit-field . g$7008$1POZIn)
        (bitwise-copy-bit . g$7006$1POZIn)
        (bitwise-bit-set? . g$7004$1POZIn)
        (bitwise-bit-field . g$7007$1POZIn)
        (bitwise-bit-count . g$7001$1POZIn)
        (bitwise-xor . g$7000$1POZIn)
        (bitwise-ior . g$6999$1POZIn)
        (bitwise-and . g$6998$1POZIn)
        (bitwise-not . g$6997$1POZIn)
        (bitwise-arithmetic-shift-right . g$7010$1POZIn)
        (bitwise-arithmetic-shift-left . g$7009$1POZIn)
        (bitwise-arithmetic-shift . g$13530$1POZIn)
        (zero? . g$6155$1POZIn)
        (vector? . g$5521$1POZIn)
        (vector-set! . g$5537$1POZIn)
        (vector-ref . g$5536$1POZIn)
        (vector-map . g$5600$1POZIn)
        (vector-length . g$13529$1POZIn)
        (vector-for-each . g$5601$1POZIn)
        (vector-fill! . g$5538$1POZIn)
        (vector->list . g$13528$1POZIn)
        (vector . g$13527$1POZIn)
        (values . g$13526$1POZIn)
        (truncate . g$6203$1POZIn)
        (tan . g$6195$1POZIn)
        (symbol? . g$5523$1POZIn)
        (symbol=? . g$5585$1POZIn)
        (symbol->string . g$13525$1POZIn)
        (substring . g$13524$1POZIn)
        (string? . g$13523$1POZIn)
        (string>? . g$5582$1POZIn)
        (string>=? . g$5584$1POZIn)
        (string=? . g$5580$1POZIn)
        (string<? . g$5581$1POZIn)
        (string<=? . g$5583$1POZIn)
        (string-ref . g$13522$1POZIn)
        (string-length . g$13521$1POZIn)
        (string-for-each . g$5602$1POZIn)
        (string-copy . g$13520$1POZIn)
        (string-append . g$13519$1POZIn)
        (string->symbol . g$13518$1POZIn)
        (string->number . g$13517$1POZIn)
        (string->list . g$13516$1POZIn)
        (string . g$13515$1POZIn)
        (sqrt . g$6205$1POZIn)
        (sin . g$6189$1POZIn)
        (round . g$6204$1POZIn)
        (reverse . g$5540$1POZIn)
        (real? . g$6149$1POZIn)
        (real-valued? . g$6152$1POZIn)
        (real-part . g$6182$1POZIn)
        (rationalize . g$5597$1POZIn)
        (rational? . g$6150$1POZIn)
        (rational-valued? . g$6153$1POZIn)
        (procedure? . g$5525$1POZIn)
        (positive? . g$6156$1POZIn)
        (pair? . g$13514$1POZIn)
        (odd? . g$5570$1POZIn)
        (numerator . g$6180$1POZIn)
        (number? . g$6142$1POZIn)
        (number->string . g$13513$1POZIn)
        (null? . g$13512$1POZIn)
        (not . g$13511$1POZIn)
        (negative? . g$6157$1POZIn)
        (nan? . g$6143$1POZIn)
        (min . g$5572$1POZIn)
        (max . g$5571$1POZIn)
        (map . g$5183$1POZIn)
        (make-vector . g$13510$1POZIn)
        (make-string . g$13509$1POZIn)
        (make-rectangular . g$6175$1POZIn)
        (make-polar . g$6176$1POZIn)
        (magnitude . g$6178$1POZIn)
        (log . g$6198$1POZIn)
        (list? . g$13508$1POZIn)
        (list-tail . g$5163$1POZIn)
        (list-ref . g$5164$1POZIn)
        (list->vector . g$5534$1POZIn)
        (list->string . g$5535$1POZIn)
        (list . g$13507$1POZIn)
        (length . g$13506$1POZIn)
        (lcm . g$5574$1POZIn)
        (integer? . g$6151$1POZIn)
        (integer-valued? . g$6154$1POZIn)
        (integer->char . g$13505$1POZIn)
        (infinite? . g$6145$1POZIn)
        (inexact? . g$6147$1POZIn)
        (inexact . g$6158$1POZIn)
        (imag-part . g$6183$1POZIn)
        (gcd . g$5573$1POZIn)
        (for-each . g$5184$1POZIn)
        (floor . g$6201$1POZIn)
        (finite? . g$6144$1POZIn)
        (expt . g$6207$1POZIn)
        (exp . g$6188$1POZIn)
        (exact? . g$6146$1POZIn)
        (exact-integer-sqrt . g$6206$1POZIn)
        (exact . g$6159$1POZIn)
        (even? . g$5569$1POZIn)
        (error . g$13504$1POZIn)
        (eqv? . g$13503$1POZIn)
        (equal? . g$13502$1POZIn)
        (eq? . g$13501$1POZIn)
        (dynamic-wind . g$13500$1POZIn)
        (div0-and-mod0 . g$5533$1POZIn)
        (mod0 . g$5531$1POZIn)
        (div0 . g$5529$1POZIn)
        (div-and-mod . g$5532$1POZIn)
        (mod . g$5530$1POZIn)
        (div . g$6199$1POZIn)
        (denominator . g$6181$1POZIn)
        (cos . g$6192$1POZIn)
        (cons . g$13499$1POZIn)
        (complex? . g$6148$1POZIn)
        (char? . g$5520$1POZIn)
        (char>? . g$5594$1POZIn)
        (char>=? . g$5596$1POZIn)
        (char=? . g$5592$1POZIn)
        (char<? . g$5593$1POZIn)
        (char<=? . g$5595$1POZIn)
        (char->integer . g$13498$1POZIn)
        (ceiling . g$6202$1POZIn)
        (call-with-values . g$13497$1POZIn)
        (call/cc . g$13496$1POZIn)
        (call-with-current-continuation . g$13495$1POZIn)
        (cddddr . g$5568$1POZIn)
        (cdddar . g$5567$1POZIn)
        (cddadr . g$5566$1POZIn)
        (cddaar . g$5565$1POZIn)
        (cdaddr . g$5564$1POZIn)
        (cdadar . g$5563$1POZIn)
        (cdaadr . g$5562$1POZIn)
        (cdaaar . g$5561$1POZIn)
        (cadddr . g$5560$1POZIn)
        (caddar . g$5559$1POZIn)
        (cadadr . g$5558$1POZIn)
        (cadaar . g$5557$1POZIn)
        (caaddr . g$5556$1POZIn)
        (caadar . g$5555$1POZIn)
        (caaadr . g$5554$1POZIn)
        (caaaar . g$5553$1POZIn)
        (cdddr . g$5552$1POZIn)
        (cddar . g$5551$1POZIn)
        (cdadr . g$5550$1POZIn)
        (cdaar . g$5549$1POZIn)
        (caddr . g$5548$1POZIn)
        (cadar . g$5547$1POZIn)
        (caadr . g$5546$1POZIn)
        (caaar . g$5545$1POZIn)
        (cddr . g$5544$1POZIn)
        (cdar . g$5543$1POZIn)
        (cadr . g$5542$1POZIn)
        (caar . g$5541$1POZIn)
        (cdr . g$13494$1POZIn)
        (car . g$13493$1POZIn)
        (boolean? . g$5524$1POZIn)
        (boolean=? . g$5586$1POZIn)
        (atan . g$6197$1POZIn)
        (assertion-violation . g$13492$1POZIn)
        (asin . g$6190$1POZIn)
        (apply . g$13491$1POZIn)
        (append . g$13490$1POZIn)
        (angle . g$6177$1POZIn)
        (acos . g$6193$1POZIn)
        (abs . g$6200$1POZIn)
        (/ . g$13489$1POZIn)
        (* . g$13488$1POZIn)
        (- . g$13487$1POZIn)
        (+ . g$13486$1POZIn)
        (>= . g$6174$1POZIn)
        (> . g$6173$1POZIn)
        (= . g$6170$1POZIn)
        (<= . g$6172$1POZIn)
        (< . g$6171$1POZIn)
        (&no-nans . g$13408$1POZIn)
        (&no-infinities . g$13407$1POZIn)
        (&i/o-encoding . g$13406$1POZIn)
        (&i/o-decoding . g$13405$1POZIn)
        (&i/o-port . g$13404$1POZIn)
        (&i/o-file-does-not-exist . g$13403$1POZIn)
        (&i/o-file-already-exists . g$13402$1POZIn)
        (&i/o-file-is-read-only . g$13401$1POZIn)
        (&i/o-file-protection . g$13400$1POZIn)
        (&i/o-filename . g$13399$1POZIn)
        (&i/o-invalid-position . g$13398$1POZIn)
        (&i/o-write . g$13397$1POZIn)
        (&i/o-read . g$13396$1POZIn)
        (&i/o . g$13395$1POZIn)
        (&non-continuable . g$13394$1POZIn)
        (&undefined . g$13393$1POZIn)
        (&syntax . g$13392$1POZIn)
        (&lexical . g$13391$1POZIn)
        (&implementation-restriction . g$13390$1POZIn)
        (&who . g$13389$1POZIn)
        (&irritants . g$13388$1POZIn)
        (&assertion . g$13387$1POZIn)
        (&violation . g$13386$1POZIn)
        (&error . g$13385$1POZIn)
        (&serious . g$13384$1POZIn)
        (&warning . g$13383$1POZIn)
        (&message . g$13382$1POZIn)
        (&condition . g$13381$1POZIn)
        (define-condition-type . g$13380$1POZIn)
        (define-enumeration . g$13379$1POZIn)
        (define-record-type . g$13378$1POZIn)
        (parent-rtd . g$13377$1POZIn)
        (nongenerative . g$13376$1POZIn)
        (opaque . g$13375$1POZIn)
        (sealed . g$13374$1POZIn)
        (protocol . g$13373$1POZIn)
        (parent . g$13372$1POZIn)
        (immutable . g$13371$1POZIn)
        (mutable . g$13370$1POZIn)
        (fields . g$13369$1POZIn)
        (error-handling-mode . g$13368$1POZIn)
        (file-options . g$13367$1POZIn)
        (buffer-mode . g$13366$1POZIn)
        (eol-style . g$13365$1POZIn)
        (guard . g$13364$1POZIn)
        (unsyntax-splicing . g$13358$1POZIn)
        (unsyntax . g$13357$1POZIn)
        (unquote-splicing . g$13356$1POZIn)
        (unquote . g$13355$1POZIn)
        (_ . g$13354$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn)
        (... . g$13351$1POZIn)
        (assert . g$13350$1POZIn)
        (endianness . g$13349$1POZIn)
        (or . g$13346$1POZIn)
        (and . g$13345$1POZIn)
        (do . g$13344$1POZIn)
        (cond . g$13343$1POZIn)
        (let* . g$13342$1POZIn)
        (let . g$13341$1POZIn)
        (identifier-syntax . g$13340$1POZIn)
        (with-syntax . g$13339$1POZIn)
        (quasisyntax . g$13338$1POZIn)
        (quasiquote . g$13337$1POZIn)
        (syntax-rules . g$13336$1POZIn)
        (let-values . g$13332$1POZIn)
        (let*-values . g$13331$1POZIn)
        (record-constructor-descriptor . g$13330$1POZIn)
        (record-type-descriptor . g$13329$1POZIn)
        (case . g$13327$1POZIn)
        (unless . g$13325$1POZIn)
        (when . g$13324$1POZIn)
        (if . g$13323$1POZIn)
        (letrec* . g$13322$1POZIn)
        (letrec . g$13321$1POZIn)
        (case-lambda . g$13319$1POZIn)
        (lambda . g$13318$1POZIn)
        (syntax . g$13317$1POZIn)
        (syntax-case . g$13316$1POZIn)
        (quote . g$13315$1POZIn)
        (letrec-syntax . g$13313$1POZIn)
        (let-syntax . g$13312$1POZIn)
        (set! . g$13311$1POZIn)
        (begin . g$13307$1POZIn)
        (define-syntax . g$13305$1POZIn)
        (define . g$13304$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13708$1POZIn
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$10207$1POZIn)
        (quotient . g$6869$1POZIn)
        (null-environment . g$10206$1POZIn)
        (remainder . g$6870$1POZIn)
        (modulo . g$6871$1POZIn)
        (inexact->exact . g$6866$1POZIn)
        (force . g$6873$1POZIn)
        (exact->inexact . g$6867$1POZIn)
        (delay . g$13348$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13709$1POZIn
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13344$1POZIn)
        (unless . g$13325$1POZIn)
        (when . g$13324$1POZIn)
        (case-lambda . g$13319$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13710$1POZIn
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$10209$1POZIn) (environment . g$10205$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13711$1POZIn
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$13545$1POZIn) (set-car! . g$13544$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13712$1POZIn
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$13547$1POZIn) (string-set! . g$13546$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13713$1POZIn
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13548$1POZIn) (command-line . g$13245$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13714$1POZIn
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9908$1POZIn)
        (identifier? . g$10228$1POZIn)
        (generate-temporaries . g$10217$1POZIn)
        (free-identifier=? . g$10218$1POZIn)
        (syntax->datum . g$10230$1POZIn)
        (datum->syntax . g$10229$1POZIn)
        (bound-identifier=? . g$10219$1POZIn)
        (syntax-violation . g$10227$1POZIn)
        (unsyntax-splicing . g$13358$1POZIn)
        (unsyntax . g$13357$1POZIn)
        (_ . g$13354$1POZIn)
        (... . g$13351$1POZIn)
        (with-syntax . g$13339$1POZIn)
        (quasisyntax . g$13338$1POZIn)
        (syntax . g$13317$1POZIn)
        (syntax-case . g$13316$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13715$1POZIn
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5826$1POZIn)
        (file-exists? . g$5825$1POZIn)
        (make-i/o-write-error . g$6700$1POZIn)
        (make-i/o-read-error . g$6687$1POZIn)
        (make-i/o-port-error . g$6795$1POZIn)
        (make-i/o-invalid-position-error . g$6713$1POZIn)
        (make-i/o-filename-error . g$6728$1POZIn)
        (make-i/o-file-protection-error . g$6743$1POZIn)
        (make-i/o-file-is-read-only-error . g$6756$1POZIn)
        (make-i/o-file-does-not-exist-error . g$6782$1POZIn)
        (make-i/o-file-already-exists-error . g$6769$1POZIn)
        (make-i/o-error . g$6674$1POZIn)
        (i/o-write-error? . g$6701$1POZIn)
        (i/o-read-error? . g$6688$1POZIn)
        (i/o-port-error? . g$6797$1POZIn)
        (i/o-invalid-position-error? . g$6715$1POZIn)
        (i/o-error-position . g$6716$1POZIn)
        (i/o-filename-error? . g$6730$1POZIn)
        (i/o-file-protection-error? . g$6744$1POZIn)
        (i/o-file-is-read-only-error? . g$6757$1POZIn)
        (i/o-file-does-not-exist-error? . g$6783$1POZIn)
        (i/o-file-already-exists-error? . g$6770$1POZIn)
        (i/o-error? . g$6675$1POZIn)
        (i/o-error-port . g$6798$1POZIn)
        (i/o-error-filename . g$6731$1POZIn)
        (&i/o-port . g$13404$1POZIn)
        (&i/o-file-does-not-exist . g$13403$1POZIn)
        (&i/o-file-already-exists . g$13402$1POZIn)
        (&i/o-file-is-read-only . g$13401$1POZIn)
        (&i/o-file-protection . g$13400$1POZIn)
        (&i/o-filename . g$13399$1POZIn)
        (&i/o-invalid-position . g$13398$1POZIn)
        (&i/o-write . g$13397$1POZIn)
        (&i/o-read . g$13396$1POZIn)
        (&i/o . g$13395$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13716$1POZIn
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13627$1POZIn)
        (vector-sort . g$13626$1POZIn)
        (list-sort . g$6890$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13717$1POZIn
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6155$1POZIn)
        (vector? . g$5521$1POZIn)
        (vector-set! . g$5537$1POZIn)
        (vector-ref . g$5536$1POZIn)
        (vector-map . g$5600$1POZIn)
        (vector-length . g$13529$1POZIn)
        (vector-for-each . g$5601$1POZIn)
        (vector-fill! . g$5538$1POZIn)
        (vector->list . g$13528$1POZIn)
        (vector . g$13527$1POZIn)
        (values . g$13526$1POZIn)
        (truncate . g$6203$1POZIn)
        (tan . g$6195$1POZIn)
        (symbol? . g$5523$1POZIn)
        (symbol=? . g$5585$1POZIn)
        (symbol->string . g$13525$1POZIn)
        (substring . g$13524$1POZIn)
        (string? . g$13523$1POZIn)
        (string>? . g$5582$1POZIn)
        (string>=? . g$5584$1POZIn)
        (string=? . g$5580$1POZIn)
        (string<? . g$5581$1POZIn)
        (string<=? . g$5583$1POZIn)
        (string-ref . g$13522$1POZIn)
        (string-length . g$13521$1POZIn)
        (string-for-each . g$5602$1POZIn)
        (string-copy . g$13520$1POZIn)
        (string-append . g$13519$1POZIn)
        (string->symbol . g$13518$1POZIn)
        (string->number . g$13517$1POZIn)
        (string->list . g$13516$1POZIn)
        (string . g$13515$1POZIn)
        (sqrt . g$6205$1POZIn)
        (sin . g$6189$1POZIn)
        (round . g$6204$1POZIn)
        (reverse . g$5540$1POZIn)
        (real? . g$6149$1POZIn)
        (real-valued? . g$6152$1POZIn)
        (real-part . g$6182$1POZIn)
        (rationalize . g$5597$1POZIn)
        (rational? . g$6150$1POZIn)
        (rational-valued? . g$6153$1POZIn)
        (procedure? . g$5525$1POZIn)
        (positive? . g$6156$1POZIn)
        (pair? . g$13514$1POZIn)
        (odd? . g$5570$1POZIn)
        (numerator . g$6180$1POZIn)
        (number? . g$6142$1POZIn)
        (number->string . g$13513$1POZIn)
        (null? . g$13512$1POZIn)
        (not . g$13511$1POZIn)
        (negative? . g$6157$1POZIn)
        (nan? . g$6143$1POZIn)
        (min . g$5572$1POZIn)
        (max . g$5571$1POZIn)
        (map . g$5183$1POZIn)
        (make-vector . g$13510$1POZIn)
        (make-string . g$13509$1POZIn)
        (make-rectangular . g$6175$1POZIn)
        (make-polar . g$6176$1POZIn)
        (magnitude . g$6178$1POZIn)
        (log . g$6198$1POZIn)
        (list? . g$13508$1POZIn)
        (list-tail . g$5163$1POZIn)
        (list-ref . g$5164$1POZIn)
        (list->vector . g$5534$1POZIn)
        (list->string . g$5535$1POZIn)
        (list . g$13507$1POZIn)
        (length . g$13506$1POZIn)
        (lcm . g$5574$1POZIn)
        (integer? . g$6151$1POZIn)
        (integer-valued? . g$6154$1POZIn)
        (integer->char . g$13505$1POZIn)
        (infinite? . g$6145$1POZIn)
        (inexact? . g$6147$1POZIn)
        (inexact . g$6158$1POZIn)
        (imag-part . g$6183$1POZIn)
        (gcd . g$5573$1POZIn)
        (for-each . g$5184$1POZIn)
        (floor . g$6201$1POZIn)
        (finite? . g$6144$1POZIn)
        (expt . g$6207$1POZIn)
        (exp . g$6188$1POZIn)
        (exact? . g$6146$1POZIn)
        (exact-integer-sqrt . g$6206$1POZIn)
        (exact . g$6159$1POZIn)
        (even? . g$5569$1POZIn)
        (error . g$13504$1POZIn)
        (eqv? . g$13503$1POZIn)
        (equal? . g$13502$1POZIn)
        (eq? . g$13501$1POZIn)
        (dynamic-wind . g$13500$1POZIn)
        (div0-and-mod0 . g$5533$1POZIn)
        (mod0 . g$5531$1POZIn)
        (div0 . g$5529$1POZIn)
        (div-and-mod . g$5532$1POZIn)
        (mod . g$5530$1POZIn)
        (div . g$6199$1POZIn)
        (denominator . g$6181$1POZIn)
        (cos . g$6192$1POZIn)
        (cons . g$13499$1POZIn)
        (complex? . g$6148$1POZIn)
        (char? . g$5520$1POZIn)
        (char>? . g$5594$1POZIn)
        (char>=? . g$5596$1POZIn)
        (char=? . g$5592$1POZIn)
        (char<? . g$5593$1POZIn)
        (char<=? . g$5595$1POZIn)
        (char->integer . g$13498$1POZIn)
        (ceiling . g$6202$1POZIn)
        (call-with-values . g$13497$1POZIn)
        (call/cc . g$13496$1POZIn)
        (call-with-current-continuation . g$13495$1POZIn)
        (cddddr . g$5568$1POZIn)
        (cdddar . g$5567$1POZIn)
        (cddadr . g$5566$1POZIn)
        (cddaar . g$5565$1POZIn)
        (cdaddr . g$5564$1POZIn)
        (cdadar . g$5563$1POZIn)
        (cdaadr . g$5562$1POZIn)
        (cdaaar . g$5561$1POZIn)
        (cadddr . g$5560$1POZIn)
        (caddar . g$5559$1POZIn)
        (cadadr . g$5558$1POZIn)
        (cadaar . g$5557$1POZIn)
        (caaddr . g$5556$1POZIn)
        (caadar . g$5555$1POZIn)
        (caaadr . g$5554$1POZIn)
        (caaaar . g$5553$1POZIn)
        (cdddr . g$5552$1POZIn)
        (cddar . g$5551$1POZIn)
        (cdadr . g$5550$1POZIn)
        (cdaar . g$5549$1POZIn)
        (caddr . g$5548$1POZIn)
        (cadar . g$5547$1POZIn)
        (caadr . g$5546$1POZIn)
        (caaar . g$5545$1POZIn)
        (cddr . g$5544$1POZIn)
        (cdar . g$5543$1POZIn)
        (cadr . g$5542$1POZIn)
        (caar . g$5541$1POZIn)
        (cdr . g$13494$1POZIn)
        (car . g$13493$1POZIn)
        (boolean? . g$5524$1POZIn)
        (boolean=? . g$5586$1POZIn)
        (atan . g$6197$1POZIn)
        (assertion-violation . g$13492$1POZIn)
        (asin . g$6190$1POZIn)
        (apply . g$13491$1POZIn)
        (append . g$13490$1POZIn)
        (angle . g$6177$1POZIn)
        (acos . g$6193$1POZIn)
        (abs . g$6200$1POZIn)
        (/ . g$13489$1POZIn)
        (* . g$13488$1POZIn)
        (- . g$13487$1POZIn)
        (+ . g$13486$1POZIn)
        (>= . g$6174$1POZIn)
        (> . g$6173$1POZIn)
        (= . g$6170$1POZIn)
        (<= . g$6172$1POZIn)
        (< . g$6171$1POZIn)
        (unquote-splicing . g$13356$1POZIn)
        (unquote . g$13355$1POZIn)
        (_ . g$13354$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn)
        (... . g$13351$1POZIn)
        (assert . g$13350$1POZIn)
        (or . g$13346$1POZIn)
        (and . g$13345$1POZIn)
        (cond . g$13343$1POZIn)
        (let* . g$13342$1POZIn)
        (let . g$13341$1POZIn)
        (identifier-syntax . g$13340$1POZIn)
        (quasiquote . g$13337$1POZIn)
        (syntax-rules . g$13336$1POZIn)
        (let-values . g$13332$1POZIn)
        (let*-values . g$13331$1POZIn)
        (case . g$13327$1POZIn)
        (if . g$13323$1POZIn)
        (letrec* . g$13322$1POZIn)
        (letrec . g$13321$1POZIn)
        (lambda . g$13318$1POZIn)
        (quote . g$13315$1POZIn)
        (letrec-syntax . g$13313$1POZIn)
        (let-syntax . g$13312$1POZIn)
        (set! . g$13311$1POZIn)
        (begin . g$13307$1POZIn)
        (define-syntax . g$13305$1POZIn)
        (define . g$13304$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13718$1POZIn
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5188$1POZIn)
        (remv . g$5189$1POZIn)
        (remp . g$5169$1POZIn)
        (remq . g$5190$1POZIn)
        (partition . g$5168$1POZIn)
        (memv . g$5176$1POZIn)
        (memq . g$5175$1POZIn)
        (memp . g$5178$1POZIn)
        (member . g$5177$1POZIn)
        (exists . g$5182$1POZIn)
        (for-all . g$5181$1POZIn)
        (fold-right . g$5187$1POZIn)
        (fold-left . g$5186$1POZIn)
        (find . g$5167$1POZIn)
        (filter . g$5170$1POZIn)
        (cons* . g$5185$1POZIn)
        (assv . g$5172$1POZIn)
        (assq . g$5171$1POZIn)
        (assp . g$5174$1POZIn)
        (assoc . g$5173$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13719$1POZIn
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8732$1POZIn)
        (call-with-input-file . g$8731$1POZIn)
        (write-char . g$8723$1POZIn)
        (write . g$13613$1POZIn)
        (with-output-to-file . g$8730$1POZIn)
        (with-input-from-file . g$8729$1POZIn)
        (read-char . g$8722$1POZIn)
        (read . g$13612$1POZIn)
        (peek-char . g$8721$1POZIn)
        (open-output-file . g$13611$1POZIn)
        (open-input-file . g$13610$1POZIn)
        (newline . g$8733$1POZIn)
        (display . g$13609$1POZIn)
        (close-output-port . g$13608$1POZIn)
        (close-input-port . g$13607$1POZIn)
        (eof-object? . g$13606$1POZIn)
        (eof-object . g$13605$1POZIn)
        (current-error-port . g$13604$1POZIn)
        (current-output-port . g$13603$1POZIn)
        (current-input-port . g$13602$1POZIn)
        (output-port? . g$13601$1POZIn)
        (input-port? . g$13600$1POZIn)
        (make-i/o-write-error . g$6700$1POZIn)
        (make-i/o-read-error . g$6687$1POZIn)
        (make-i/o-port-error . g$6795$1POZIn)
        (make-i/o-invalid-position-error . g$6713$1POZIn)
        (make-i/o-filename-error . g$6728$1POZIn)
        (make-i/o-file-protection-error . g$6743$1POZIn)
        (make-i/o-file-is-read-only-error . g$6756$1POZIn)
        (make-i/o-file-does-not-exist-error . g$6782$1POZIn)
        (make-i/o-file-already-exists-error . g$6769$1POZIn)
        (make-i/o-error . g$6674$1POZIn)
        (i/o-write-error? . g$6701$1POZIn)
        (i/o-read-error? . g$6688$1POZIn)
        (i/o-port-error? . g$6797$1POZIn)
        (i/o-invalid-position-error? . g$6715$1POZIn)
        (i/o-error-position . g$6716$1POZIn)
        (i/o-filename-error? . g$6730$1POZIn)
        (i/o-file-protection-error? . g$6744$1POZIn)
        (i/o-file-is-read-only-error? . g$6757$1POZIn)
        (i/o-file-does-not-exist-error? . g$6783$1POZIn)
        (i/o-file-already-exists-error? . g$6770$1POZIn)
        (i/o-error? . g$6675$1POZIn)
        (i/o-error-port . g$6798$1POZIn)
        (i/o-error-filename . g$6731$1POZIn)
        (&i/o-port . g$13404$1POZIn)
        (&i/o-file-does-not-exist . g$13403$1POZIn)
        (&i/o-file-already-exists . g$13402$1POZIn)
        (&i/o-file-is-read-only . g$13401$1POZIn)
        (&i/o-file-protection . g$13400$1POZIn)
        (&i/o-filename . g$13399$1POZIn)
        (&i/o-invalid-position . g$13398$1POZIn)
        (&i/o-write . g$13397$1POZIn)
        (&i/o-read . g$13396$1POZIn)
        (&i/o . g$13395$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13720$1POZIn
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$5846$1POZIn)
        (utf32->string . g$5864$1POZIn)
        (utf16->string . g$5863$1POZIn)
        (utf8->string . g$5861$1POZIn)
        (uint-list->bytevector . g$5865$1POZIn)
        (u8-list->bytevector . g$5857$1POZIn)
        (string->utf8 . g$5858$1POZIn)
        (string->utf32 . g$5860$1POZIn)
        (string->utf16 . g$5859$1POZIn)
        (sint-list->bytevector . g$5866$1POZIn)
        (native-endianness . g$5832$1POZIn)
        (bytevector? . g$5522$1POZIn)
        (bytevector=? . g$5848$1POZIn)
        (bytevector-uint-set! . g$13535$1POZIn)
        (bytevector-uint-ref . g$13534$1POZIn)
        (bytevector-u8-set! . g$5853$1POZIn)
        (bytevector-u8-ref . g$5852$1POZIn)
        (bytevector-u64-set! . g$5894$1POZIn)
        (bytevector-u64-ref . g$5890$1POZIn)
        (bytevector-u64-native-set! . g$5896$1POZIn)
        (bytevector-u64-native-ref . g$5892$1POZIn)
        (bytevector-u32-set! . g$5886$1POZIn)
        (bytevector-u32-ref . g$5882$1POZIn)
        (bytevector-u32-native-set! . g$5888$1POZIn)
        (bytevector-u32-native-ref . g$5884$1POZIn)
        (bytevector-u16-set! . g$5878$1POZIn)
        (bytevector-u16-ref . g$5874$1POZIn)
        (bytevector-u16-native-set! . g$5880$1POZIn)
        (bytevector-u16-native-ref . g$5876$1POZIn)
        (bytevector-sint-set! . g$13533$1POZIn)
        (bytevector-sint-ref . g$13532$1POZIn)
        (bytevector-s8-set! . g$5855$1POZIn)
        (bytevector-s8-ref . g$5854$1POZIn)
        (bytevector-s64-set! . g$5895$1POZIn)
        (bytevector-s64-ref . g$5891$1POZIn)
        (bytevector-s64-native-set! . g$5897$1POZIn)
        (bytevector-s64-native-ref . g$5893$1POZIn)
        (bytevector-s32-set! . g$5887$1POZIn)
        (bytevector-s32-ref . g$5883$1POZIn)
        (bytevector-s32-native-set! . g$5889$1POZIn)
        (bytevector-s32-native-ref . g$5885$1POZIn)
        (bytevector-s16-set! . g$5879$1POZIn)
        (bytevector-s16-ref . g$5875$1POZIn)
        (bytevector-s16-native-set! . g$5881$1POZIn)
        (bytevector-s16-native-ref . g$5877$1POZIn)
        (bytevector-length . g$5847$1POZIn)
        (bytevector-ieee-single-set! . g$5872$1POZIn)
        (bytevector-ieee-single-ref . g$5870$1POZIn)
        (bytevector-ieee-single-native-set! . g$5900$1POZIn)
        (bytevector-ieee-single-native-ref . g$5898$1POZIn)
        (bytevector-ieee-double-set! . g$5873$1POZIn)
        (bytevector-ieee-double-ref . g$5871$1POZIn)
        (bytevector-ieee-double-native-set! . g$5901$1POZIn)
        (bytevector-ieee-double-native-ref . g$5899$1POZIn)
        (bytevector-fill! . g$5849$1POZIn)
        (bytevector-copy! . g$5850$1POZIn)
        (bytevector-copy . g$5851$1POZIn)
        (bytevector->uint-list . g$5867$1POZIn)
        (bytevector->u8-list . g$5856$1POZIn)
        (bytevector->sint-list . g$5868$1POZIn)
        (endianness . g$13349$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13721$1POZIn
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13659$1POZIn)
        (string-titlecase . g$13658$1POZIn)
        (string-normalize-nfkd . g$6937$1POZIn)
        (string-normalize-nfkc . g$6936$1POZIn)
        (string-normalize-nfd . g$6935$1POZIn)
        (string-normalize-nfc . g$6934$1POZIn)
        (string-foldcase . g$13657$1POZIn)
        (string-downcase . g$13656$1POZIn)
        (string-ci>? . g$6921$1POZIn)
        (string-ci>=? . g$6923$1POZIn)
        (string-ci=? . g$6919$1POZIn)
        (string-ci<? . g$6920$1POZIn)
        (string-ci<=? . g$6922$1POZIn)
        (char-whitespace? . g$13655$1POZIn)
        (char-upper-case? . g$13654$1POZIn)
        (char-title-case? . g$13653$1POZIn)
        (char-numeric? . g$13652$1POZIn)
        (char-lower-case? . g$13651$1POZIn)
        (char-general-category . g$13650$1POZIn)
        (char-upcase . g$13649$1POZIn)
        (char-titlecase . g$13648$1POZIn)
        (char-foldcase . g$13647$1POZIn)
        (char-downcase . g$13646$1POZIn)
        (char-ci>? . g$6931$1POZIn)
        (char-ci>=? . g$6933$1POZIn)
        (char-ci=? . g$6929$1POZIn)
        (char-ci<? . g$6930$1POZIn)
        (char-ci<=? . g$6932$1POZIn)
        (char-alphabetic? . g$13645$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13722$1POZIn
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13543$1POZIn)
        (raise-continuable . g$13542$1POZIn)
        (raise . g$13541$1POZIn)
        (guard . g$13364$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13723$1POZIn
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7011$1POZIn)
        (bitwise-reverse-bit-field . g$13531$1POZIn)
        (bitwise-length . g$7002$1POZIn)
        (bitwise-if . g$7005$1POZIn)
        (bitwise-first-bit-set . g$7003$1POZIn)
        (bitwise-copy-bit-field . g$7008$1POZIn)
        (bitwise-copy-bit . g$7006$1POZIn)
        (bitwise-bit-set? . g$7004$1POZIn)
        (bitwise-bit-field . g$7007$1POZIn)
        (bitwise-bit-count . g$7001$1POZIn)
        (bitwise-xor . g$7000$1POZIn)
        (bitwise-ior . g$6999$1POZIn)
        (bitwise-and . g$6998$1POZIn)
        (bitwise-not . g$6997$1POZIn)
        (bitwise-arithmetic-shift-right . g$7010$1POZIn)
        (bitwise-arithmetic-shift-left . g$7009$1POZIn)
        (bitwise-arithmetic-shift . g$13530$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13724$1POZIn
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$7179$1POZIn)
        (fxxor . g$7142$1POZIn)
        (fxrotate-bit-field . g$7217$1POZIn)
        (fxreverse-bit-field . g$7218$1POZIn)
        (fxpositive? . g$7169$1POZIn)
        (fxodd? . g$7189$1POZIn)
        (fxnot . g$7123$1POZIn)
        (fxnegative? . g$7174$1POZIn)
        (fxmod0 . g$7153$1POZIn)
        (fxmod . g$7152$1POZIn)
        (fxmin . g$7191$1POZIn)
        (fxmax . g$7190$1POZIn)
        (fxlength . g$7120$1POZIn)
        (fxior . g$7141$1POZIn)
        (fxif . g$7199$1POZIn)
        (fxfirst-bit-set . g$7121$1POZIn)
        (fxeven? . g$7184$1POZIn)
        (fxdiv0-and-mod0 . g$7164$1POZIn)
        (fxdiv0 . g$7159$1POZIn)
        (fxdiv-and-mod . g$7154$1POZIn)
        (fxdiv . g$7147$1POZIn)
        (fxcopy-bit-field . g$7214$1POZIn)
        (fxcopy-bit . g$7204$1POZIn)
        (fxbit-set? . g$7122$1POZIn)
        (fxbit-field . g$7209$1POZIn)
        (fxbit-count . g$7115$1POZIn)
        (fxarithmetic-shift-right . g$7216$1POZIn)
        (fxarithmetic-shift-left . g$7215$1POZIn)
        (fxarithmetic-shift . g$7110$1POZIn)
        (fxand . g$7140$1POZIn)
        (fx>? . g$7132$1POZIn)
        (fx>=? . g$7133$1POZIn)
        (fx=? . g$7129$1POZIn)
        (fx<? . g$7130$1POZIn)
        (fx<=? . g$7131$1POZIn)
        (fx-/carry . g$7193$1POZIn)
        (fx- . g$7104$1POZIn)
        (fx+/carry . g$7194$1POZIn)
        (fx+ . g$7102$1POZIn)
        (fx*/carry . g$7192$1POZIn)
        (fx* . g$7103$1POZIn)
        (greatest-fixnum . g$7073$1POZIn)
        (least-fixnum . g$7074$1POZIn)
        (fixnum-width . g$5528$1POZIn)
        (fixnum? . g$5526$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13725$1POZIn
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$6852$1POZIn)
        (no-infinities-violation? . g$6839$1POZIn)
        (make-no-nans-violation . g$6851$1POZIn)
        (make-no-infinities-violation . g$6838$1POZIn)
        (real->flonum . g$6140$1POZIn)
        (flzero? . g$8137$1POZIn)
        (fltruncate . g$8132$1POZIn)
        (fltan . g$8118$1POZIn)
        (flsqrt . g$8123$1POZIn)
        (flsin . g$8116$1POZIn)
        (flround . g$8133$1POZIn)
        (flpositive? . g$8135$1POZIn)
        (flonum? . g$5527$1POZIn)
        (flodd? . g$8139$1POZIn)
        (flnumerator . g$8082$1POZIn)
        (flnegative? . g$8136$1POZIn)
        (flnan? . g$8115$1POZIn)
        (flmod0 . g$8100$1POZIn)
        (flmod . g$8099$1POZIn)
        (flmin . g$8141$1POZIn)
        (flmax . g$8140$1POZIn)
        (fllog . g$8122$1POZIn)
        (flinteger? . g$8108$1POZIn)
        (flinfinite? . g$8114$1POZIn)
        (flfloor . g$8131$1POZIn)
        (flfinite? . g$8109$1POZIn)
        (flexpt . g$8125$1POZIn)
        (flexp . g$8124$1POZIn)
        (fleven? . g$8138$1POZIn)
        (fldiv0-and-mod0 . g$8107$1POZIn)
        (fldiv0 . g$8094$1POZIn)
        (fldiv-and-mod . g$8101$1POZIn)
        (fldiv . g$8106$1POZIn)
        (fldenominator . g$8081$1POZIn)
        (flcos . g$8117$1POZIn)
        (flceiling . g$8126$1POZIn)
        (flatan . g$8121$1POZIn)
        (flasin . g$8119$1POZIn)
        (flacos . g$8120$1POZIn)
        (flabs . g$8134$1POZIn)
        (fl>? . g$8088$1POZIn)
        (fl>=? . g$8089$1POZIn)
        (fl=? . g$8085$1POZIn)
        (fl<? . g$8086$1POZIn)
        (fl<=? . g$8087$1POZIn)
        (fl/ . g$8084$1POZIn)
        (fl- . g$8083$1POZIn)
        (fl+ . g$8079$1POZIn)
        (fl* . g$8080$1POZIn)
        (fixnum->flonum . g$6141$1POZIn)
        (&no-nans . g$13408$1POZIn)
        (&no-infinities . g$13407$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13726$1POZIn
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$13625$1POZIn)
        (string-ci-hash . g$13624$1POZIn)
        (string-hash . g$13623$1POZIn)
        (equal-hash . g$13622$1POZIn)
        (hashtable-equivalence-function . g$13621$1POZIn)
        (make-hashtable . g$13620$1POZIn)
        (hashtable-hash-function . g$13619$1POZIn)
        (make-eqv-hashtable . g$5793$1POZIn)
        (make-eq-hashtable . g$5792$1POZIn)
        (hashtable? . g$13618$1POZIn)
        (hashtable-update! . g$5799$1POZIn)
        (hashtable-size . g$5794$1POZIn)
        (hashtable-set! . g$5796$1POZIn)
        (hashtable-ref . g$5795$1POZIn)
        (hashtable-mutable? . g$13617$1POZIn)
        (hashtable-keys . g$13616$1POZIn)
        (hashtable-entries . g$13615$1POZIn)
        (hashtable-delete! . g$5797$1POZIn)
        (hashtable-copy . g$13614$1POZIn)
        (hashtable-contains? . g$5798$1POZIn)
        (hashtable-clear! . g$5800$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13727$1POZIn
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13606$1POZIn)
        (eof-object . g$13605$1POZIn)
        (current-error-port . g$13604$1POZIn)
        (current-output-port . g$13603$1POZIn)
        (current-input-port . g$13602$1POZIn)
        (output-port? . g$13601$1POZIn)
        (input-port? . g$13600$1POZIn)
        (utf-8-codec . g$13599$1POZIn)
        (utf-16-codec . g$13598$1POZIn)
        (transcoder-error-handling-mode . g$13597$1POZIn)
        (transcoder-eol-style . g$13596$1POZIn)
        (transcoder-codec . g$13595$1POZIn)
        (transcoded-port . g$13594$1POZIn)
        (textual-port? . g$13593$1POZIn)
        (string->bytevector . g$13592$1POZIn)
        (standard-output-port . g$8697$1POZIn)
        (standard-input-port . g$8696$1POZIn)
        (standard-error-port . g$8695$1POZIn)
        (set-port-position! . g$13591$1POZIn)
        (put-u8 . g$13590$1POZIn)
        (put-string . g$13589$1POZIn)
        (put-datum . g$8700$1POZIn)
        (put-char . g$13588$1POZIn)
        (put-bytevector . g$13587$1POZIn)
        (port? . g$8705$1POZIn)
        (port-transcoder . g$13586$1POZIn)
        (port-position . g$13585$1POZIn)
        (port-has-set-port-position!? . g$13584$1POZIn)
        (port-has-port-position? . g$13583$1POZIn)
        (port-eof? . g$13582$1POZIn)
        (output-port-buffer-mode . g$13581$1POZIn)
        (open-string-output-port . g$8704$1POZIn)
        (open-string-input-port . g$13580$1POZIn)
        (open-file-output-port . g$13579$1POZIn)
        (open-file-input/output-port . g$13578$1POZIn)
        (open-file-input-port . g$13577$1POZIn)
        (open-bytevector-output-port . g$13576$1POZIn)
        (open-bytevector-input-port . g$13575$1POZIn)
        (native-transcoder . g$13574$1POZIn)
        (native-eol-style . g$8698$1POZIn)
        (make-transcoder . g$13573$1POZIn)
        (latin-1-codec . g$13572$1POZIn)
        (make-i/o-write-error . g$6700$1POZIn)
        (make-i/o-read-error . g$6687$1POZIn)
        (make-i/o-port-error . g$6795$1POZIn)
        (make-i/o-invalid-position-error . g$6713$1POZIn)
        (make-i/o-filename-error . g$6728$1POZIn)
        (make-i/o-file-protection-error . g$6743$1POZIn)
        (make-i/o-file-is-read-only-error . g$6756$1POZIn)
        (make-i/o-file-does-not-exist-error . g$6782$1POZIn)
        (make-i/o-file-already-exists-error . g$6769$1POZIn)
        (make-i/o-error . g$6674$1POZIn)
        (make-i/o-encoding-error . g$6823$1POZIn)
        (make-i/o-decoding-error . g$6810$1POZIn)
        (make-custom-textual-output-port . g$13571$1POZIn)
        (make-custom-textual-input/output-port . g$13570$1POZIn)
        (make-custom-textual-input-port . g$13569$1POZIn)
        (make-custom-binary-output-port . g$13568$1POZIn)
        (make-custom-binary-input/output-port . g$13567$1POZIn)
        (make-custom-binary-input-port . g$13566$1POZIn)
        (lookahead-u8 . g$13565$1POZIn)
        (lookahead-char . g$13564$1POZIn)
        (i/o-write-error? . g$6701$1POZIn)
        (i/o-read-error? . g$6688$1POZIn)
        (i/o-port-error? . g$6797$1POZIn)
        (i/o-invalid-position-error? . g$6715$1POZIn)
        (i/o-error-position . g$6716$1POZIn)
        (i/o-filename-error? . g$6730$1POZIn)
        (i/o-file-protection-error? . g$6744$1POZIn)
        (i/o-file-is-read-only-error? . g$6757$1POZIn)
        (i/o-file-does-not-exist-error? . g$6783$1POZIn)
        (i/o-file-already-exists-error? . g$6770$1POZIn)
        (i/o-error? . g$6675$1POZIn)
        (i/o-error-port . g$6798$1POZIn)
        (i/o-error-filename . g$6731$1POZIn)
        (i/o-encoding-error? . g$6825$1POZIn)
        (i/o-encoding-error-char . g$6826$1POZIn)
        (i/o-decoding-error? . g$6811$1POZIn)
        (get-u8 . g$13563$1POZIn)
        (get-string-n! . g$13562$1POZIn)
        (get-string-n . g$13561$1POZIn)
        (get-string-all . g$13560$1POZIn)
        (get-line . g$13559$1POZIn)
        (get-datum . g$8701$1POZIn)
        (get-char . g$13558$1POZIn)
        (get-bytevector-some . g$13557$1POZIn)
        (get-bytevector-n! . g$13556$1POZIn)
        (get-bytevector-n . g$13555$1POZIn)
        (get-bytevector-all . g$13554$1POZIn)
        (flush-output-port . g$13553$1POZIn)
        (close-port . g$13552$1POZIn)
        (call-with-string-output-port . g$8706$1POZIn)
        (call-with-port . g$8707$1POZIn)
        (call-with-bytevector-output-port . g$13551$1POZIn)
        (bytevector->string . g$13550$1POZIn)
        (buffer-mode? . g$8699$1POZIn)
        (binary-port? . g$13549$1POZIn)
        (&i/o-encoding . g$13406$1POZIn)
        (&i/o-decoding . g$13405$1POZIn)
        (&i/o-port . g$13404$1POZIn)
        (&i/o-file-does-not-exist . g$13403$1POZIn)
        (&i/o-file-already-exists . g$13402$1POZIn)
        (&i/o-file-is-read-only . g$13401$1POZIn)
        (&i/o-file-protection . g$13400$1POZIn)
        (&i/o-filename . g$13399$1POZIn)
        (&i/o-invalid-position . g$13398$1POZIn)
        (&i/o-write . g$13397$1POZIn)
        (&i/o-read . g$13396$1POZIn)
        (&i/o . g$13395$1POZIn)
        (error-handling-mode . g$13368$1POZIn)
        (file-options . g$13367$1POZIn)
        (buffer-mode . g$13366$1POZIn)
        (eol-style . g$13365$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13728$1POZIn
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$8793$1POZIn)
        (enum-set=? . g$8800$1POZIn)
        (enum-set-universe . g$8794$1POZIn)
        (enum-set-union . g$8801$1POZIn)
        (enum-set-subset? . g$8799$1POZIn)
        (enum-set-projection . g$8805$1POZIn)
        (enum-set-member? . g$8798$1POZIn)
        (enum-set-intersection . g$8802$1POZIn)
        (enum-set-indexer . g$8795$1POZIn)
        (enum-set-difference . g$8803$1POZIn)
        (enum-set-constructor . g$8796$1POZIn)
        (enum-set-complement . g$8804$1POZIn)
        (enum-set->list . g$8797$1POZIn)
        (define-enumeration . g$13379$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13729$1POZIn
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6562$1POZIn)
        (warning? . g$6481$1POZIn)
        (violation? . g$6520$1POZIn)
        (undefined-violation? . g$6662$1POZIn)
        (syntax-violation? . g$6647$1POZIn)
        (syntax-violation-subform . g$6649$1POZIn)
        (syntax-violation-form . g$6648$1POZIn)
        (simple-conditions . g$13540$1POZIn)
        (serious-condition? . g$6494$1POZIn)
        (non-continuable-violation? . g$6606$1POZIn)
        (message-condition? . g$6467$1POZIn)
        (make-who-condition . g$6560$1POZIn)
        (make-warning . g$6480$1POZIn)
        (make-violation . g$6519$1POZIn)
        (make-undefined-violation . g$6661$1POZIn)
        (make-syntax-violation . g$6644$1POZIn)
        (make-serious-condition . g$6493$1POZIn)
        (make-non-continuable-violation . g$6605$1POZIn)
        (make-message-condition . g$6465$1POZIn)
        (make-lexical-violation . g$6631$1POZIn)
        (make-irritants-condition . g$6545$1POZIn)
        (make-implementation-restriction-violation . g$6618$1POZIn)
        (make-error . g$6506$1POZIn)
        (make-assertion-violation . g$6532$1POZIn)
        (lexical-violation? . g$6632$1POZIn)
        (irritants-condition? . g$6547$1POZIn)
        (implementation-restriction-violation? . g$6619$1POZIn)
        (error? . g$6507$1POZIn)
        (condition-who . g$6563$1POZIn)
        (condition-predicate . g$13539$1POZIn)
        (condition-message . g$6468$1POZIn)
        (condition-irritants . g$6548$1POZIn)
        (condition-accessor . g$13538$1POZIn)
        (condition . g$13537$1POZIn)
        (assertion-violation? . g$6533$1POZIn)
        (condition? . g$13536$1POZIn)
        (&non-continuable . g$13394$1POZIn)
        (&undefined . g$13393$1POZIn)
        (&syntax . g$13392$1POZIn)
        (&lexical . g$13391$1POZIn)
        (&implementation-restriction . g$13390$1POZIn)
        (&who . g$13389$1POZIn)
        (&irritants . g$13388$1POZIn)
        (&assertion . g$13387$1POZIn)
        (&violation . g$13386$1POZIn)
        (&error . g$13385$1POZIn)
        (&serious . g$13384$1POZIn)
        (&warning . g$13383$1POZIn)
        (&message . g$13382$1POZIn)
        (&condition . g$13381$1POZIn)
        (define-condition-type . g$13380$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13730$1POZIn
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13637$1POZIn)
        (record-type-uid . g$13636$1POZIn)
        (record-type-sealed? . g$13635$1POZIn)
        (record-type-parent . g$13634$1POZIn)
        (record-type-opaque? . g$13633$1POZIn)
        (record-type-name . g$13632$1POZIn)
        (record-type-generative? . g$13631$1POZIn)
        (record-type-field-names . g$13630$1POZIn)
        (record-rtd . g$13629$1POZIn)
        (record-field-mutable? . g$13628$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13731$1POZIn
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13644$1POZIn)
        (record-predicate . g$13643$1POZIn)
        (record-mutator . g$13642$1POZIn)
        (record-constructor . g$13641$1POZIn)
        (record-accessor . g$13640$1POZIn)
        (make-record-type-descriptor . g$13639$1POZIn)
        (make-record-constructor-descriptor . g$13638$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13732$1POZIn
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13378$1POZIn)
        (parent-rtd . g$13377$1POZIn)
        (nongenerative . g$13376$1POZIn)
        (opaque . g$13375$1POZIn)
        (sealed . g$13374$1POZIn)
        (protocol . g$13373$1POZIn)
        (parent . g$13372$1POZIn)
        (immutable . g$13371$1POZIn)
        (mutable . g$13370$1POZIn)
        (fields . g$13369$1POZIn)
        (record-constructor-descriptor . g$13330$1POZIn)
        (record-type-descriptor . g$13329$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$19819$1POZIn
      'g$13733$1POZIn
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$10104$1POZIn)
        (&stacktrace-rcd . g$6595$1POZIn)
        (&stacktrace-rtd . g$6594$1POZIn)
        (&where-rcd . g$6580$1POZIn)
        (&where-rtd . g$6579$1POZIn)
        (&no-nans-rcd . g$6854$1POZIn)
        (&no-nans-rtd . g$6853$1POZIn)
        (&no-infinities-rcd . g$6841$1POZIn)
        (&no-infinities-rtd . g$6840$1POZIn)
        (&i/o-encoding-rcd . g$6828$1POZIn)
        (&i/o-encoding-rtd . g$6827$1POZIn)
        (&i/o-decoding-rcd . g$6813$1POZIn)
        (&i/o-decoding-rtd . g$6812$1POZIn)
        (&i/o-port-rcd . g$6800$1POZIn)
        (&i/o-port-rtd . g$6799$1POZIn)
        (&i/o-file-does-not-exist-rcd . g$6785$1POZIn)
        (&i/o-file-does-not-exist-rtd . g$6784$1POZIn)
        (&i/o-file-already-exists-rcd . g$6772$1POZIn)
        (&i/o-file-already-exists-rtd . g$6771$1POZIn)
        (&i/o-file-is-read-only-rcd . g$6759$1POZIn)
        (&i/o-file-is-read-only-rtd . g$6758$1POZIn)
        (&i/o-file-protection-rcd . g$6746$1POZIn)
        (&i/o-file-protection-rtd . g$6745$1POZIn)
        (&i/o-filename-rcd . g$6733$1POZIn)
        (&i/o-filename-rtd . g$6732$1POZIn)
        (&i/o-invalid-position-rcd . g$6718$1POZIn)
        (&i/o-invalid-position-rtd . g$6717$1POZIn)
        (&i/o-write-rcd . g$6703$1POZIn)
        (&i/o-write-rtd . g$6702$1POZIn)
        (&i/o-read-rcd . g$6690$1POZIn)
        (&i/o-read-rtd . g$6689$1POZIn)
        (&i/o-rcd . g$6677$1POZIn)
        (&i/o-rtd . g$6676$1POZIn)
        (&undefined-rcd . g$6664$1POZIn)
        (&undefined-rtd . g$6663$1POZIn)
        (&syntax-rcd . g$6651$1POZIn)
        (&syntax-rtd . g$6650$1POZIn)
        (&lexical-rcd . g$6634$1POZIn)
        (&lexical-rtd . g$6633$1POZIn)
        (&implementation-restriction-rcd . g$6621$1POZIn)
        (&implementation-restriction-rtd . g$6620$1POZIn)
        (&non-continuable-rcd . g$6608$1POZIn)
        (&non-continuable-rtd . g$6607$1POZIn)
        (&who-rcd . g$6565$1POZIn)
        (&who-rtd . g$6564$1POZIn)
        (&irritants-rcd . g$6550$1POZIn)
        (&irritants-rtd . g$6549$1POZIn)
        (&assertion-rcd . g$6535$1POZIn)
        (&assertion-rtd . g$6534$1POZIn)
        (&violation-rcd . g$6522$1POZIn)
        (&violation-rtd . g$6521$1POZIn)
        (&error-rcd . g$6509$1POZIn)
        (&error-rtd . g$6508$1POZIn)
        (&serious-rcd . g$6496$1POZIn)
        (&serious-rtd . g$6495$1POZIn)
        (&warning-rcd . g$6483$1POZIn)
        (&warning-rtd . g$6482$1POZIn)
        (&message-rcd . g$6470$1POZIn)
        (&message-rtd . g$6469$1POZIn)
        (&condition-rcd . g$6430$1POZIn)
        (&condition-rtd . g$6429$1POZIn)
        (library-letrec* . g$13696$1POZIn)
        (annotation-stripped . g$13695$1POZIn)
        (annotation-source . g$13694$1POZIn)
        (annotation-expression . g$13693$1POZIn)
        (annotation? . g$13692$1POZIn)
        (read-annotated . g$13691$1POZIn)
        (tanh . g$6196$1POZIn)
        (cosh . g$6194$1POZIn)
        (sinh . g$6191$1POZIn)
        (make-guid . g$13690$1POZIn)
        (unspecified? . g$13689$1POZIn)
        (make-list . g$5166$1POZIn)
        (last-pair . g$5165$1POZIn)
        (load-r5rs . g$13688$1POZIn)
        (license . g$13687$1POZIn)
        (stacktrace . g$13686$1POZIn)
        (ironscheme-test . g$13251$1POZIn)
        (ironscheme-build . g$13252$1POZIn)
        (pinvoke-call-internal . g$13685$1POZIn)
        (ffi-callback-internal . g$13684$1POZIn)
        (ffi-callout-internal . g$13683$1POZIn)
        (define-clr-class-internal . g$13682$1POZIn)
        (clr-field-set!-internal . g$13681$1POZIn)
        (clr-field-get-internal . g$13680$1POZIn)
        (clr-cast-internal . g$13679$1POZIn)
        (clr-call-internal . g$13678$1POZIn)
        (clr-new-internal . g$13677$1POZIn)
        (clr-new-array-internal . g$13676$1POZIn)
        (clr-is-internal . g$13675$1POZIn)
        (clr-reference-internal . g$13674$1POZIn)
        (clr-using-internal . g$13673$1POZIn)
        (syntax-error . g$10224$1POZIn)
        (syntax-dispatch . g$10099$1POZIn)
        (compile-core . g$13672$1POZIn)
        (eval-core . g$13671$1POZIn)
        (remove-location . g$13670$1POZIn)
        (set-symbol-value! . g$13669$1POZIn)
        (symbol-value . g$13668$1POZIn)
        (symbol-bound? . g$13667$1POZIn)
        (ungensym . g$13666$1POZIn)
        (gensym . g$13665$1POZIn)
        (void . g$13664$1POZIn)
        (load-serialized-library . g$13663$1POZIn)
        (serialize-library . g$13662$1POZIn)
        (compile-system-libraries . g$13256$1POZIn)
        (compile->closure . g$13258$1POZIn)
        (compile . g$13257$1POZIn)
        (load . g$13250$1POZIn)
        (string-normalize . g$13661$1POZIn)
        (new-interaction-environment . g$10233$1POZIn)
        (interaction-environment . g$10234$1POZIn)
        (char-ready? . g$13660$1POZIn)
        (string-upcase . g$13659$1POZIn)
        (string-titlecase . g$13658$1POZIn)
        (string-normalize-nfkd . g$6937$1POZIn)
        (string-normalize-nfkc . g$6936$1POZIn)
        (string-normalize-nfd . g$6935$1POZIn)
        (string-normalize-nfc . g$6934$1POZIn)
        (string-foldcase . g$13657$1POZIn)
        (string-downcase . g$13656$1POZIn)
        (string-ci>? . g$6921$1POZIn)
        (string-ci>=? . g$6923$1POZIn)
        (string-ci=? . g$6919$1POZIn)
        (string-ci<? . g$6920$1POZIn)
        (string-ci<=? . g$6922$1POZIn)
        (char-whitespace? . g$13655$1POZIn)
        (char-upper-case? . g$13654$1POZIn)
        (char-title-case? . g$13653$1POZIn)
        (char-numeric? . g$13652$1POZIn)
        (char-lower-case? . g$13651$1POZIn)
        (char-general-category . g$13650$1POZIn)
        (char-upcase . g$13649$1POZIn)
        (char-titlecase . g$13648$1POZIn)
        (char-foldcase . g$13647$1POZIn)
        (char-downcase . g$13646$1POZIn)
        (char-ci>? . g$6931$1POZIn)
        (char-ci>=? . g$6933$1POZIn)
        (char-ci=? . g$6929$1POZIn)
        (char-ci<? . g$6930$1POZIn)
        (char-ci<=? . g$6932$1POZIn)
        (char-alphabetic? . g$13645$1POZIn)
        (variable-transformer-procedure . g$9911$1POZIn)
        (variable-transformer? . g$9910$1POZIn)
        (make-variable-transformer . g$9908$1POZIn)
        (identifier? . g$10228$1POZIn)
        (generate-temporaries . g$10217$1POZIn)
        (free-identifier=? . g$10218$1POZIn)
        (syntax->datum . g$10230$1POZIn)
        (datum->syntax . g$10229$1POZIn)
        (bound-identifier=? . g$10219$1POZIn)
        (record-type-descriptor? . g$13644$1POZIn)
        (record-predicate . g$13643$1POZIn)
        (record-mutator . g$13642$1POZIn)
        (record-constructor . g$13641$1POZIn)
        (record-accessor . g$13640$1POZIn)
        (make-record-type-descriptor . g$13639$1POZIn)
        (make-record-constructor-descriptor . g$13638$1POZIn)
        (record? . g$13637$1POZIn)
        (record-type-uid . g$13636$1POZIn)
        (record-type-sealed? . g$13635$1POZIn)
        (record-type-parent . g$13634$1POZIn)
        (record-type-opaque? . g$13633$1POZIn)
        (record-type-name . g$13632$1POZIn)
        (record-type-generative? . g$13631$1POZIn)
        (record-type-field-names . g$13630$1POZIn)
        (record-rtd . g$13629$1POZIn)
        (record-field-mutable? . g$13628$1POZIn)
        (delete-file . g$5826$1POZIn)
        (file-exists? . g$5825$1POZIn)
        (vector-sort! . g$13627$1POZIn)
        (vector-sort . g$13626$1POZIn)
        (list-sort . g$6890$1POZIn)
        (symbol-hash . g$13625$1POZIn)
        (string-ci-hash . g$13624$1POZIn)
        (string-hash . g$13623$1POZIn)
        (equal-hash . g$13622$1POZIn)
        (hashtable-equivalence-function . g$13621$1POZIn)
        (make-hashtable . g$13620$1POZIn)
        (hashtable-hash-function . g$13619$1POZIn)
        (make-eqv-hashtable . g$5793$1POZIn)
        (make-eq-hashtable . g$5792$1POZIn)
        (hashtable? . g$13618$1POZIn)
        (hashtable-update! . g$5799$1POZIn)
        (hashtable-size . g$5794$1POZIn)
        (hashtable-set! . g$5796$1POZIn)
        (hashtable-ref . g$5795$1POZIn)
        (hashtable-mutable? . g$13617$1POZIn)
        (hashtable-keys . g$13616$1POZIn)
        (hashtable-entries . g$13615$1POZIn)
        (hashtable-delete! . g$5797$1POZIn)
        (hashtable-copy . g$13614$1POZIn)
        (hashtable-contains? . g$5798$1POZIn)
        (hashtable-clear! . g$5800$1POZIn)
        (call-with-output-file . g$8732$1POZIn)
        (call-with-input-file . g$8731$1POZIn)
        (write-char . g$8723$1POZIn)
        (write . g$13613$1POZIn)
        (with-output-to-file . g$8730$1POZIn)
        (with-input-from-file . g$8729$1POZIn)
        (read-char . g$8722$1POZIn)
        (read . g$13612$1POZIn)
        (peek-char . g$8721$1POZIn)
        (open-output-file . g$13611$1POZIn)
        (open-input-file . g$13610$1POZIn)
        (newline . g$8733$1POZIn)
        (display . g$13609$1POZIn)
        (close-output-port . g$13608$1POZIn)
        (close-input-port . g$13607$1POZIn)
        (eof-object? . g$13606$1POZIn)
        (eof-object . g$13605$1POZIn)
        (current-error-port . g$13604$1POZIn)
        (current-output-port . g$13603$1POZIn)
        (current-input-port . g$13602$1POZIn)
        (output-port? . g$13601$1POZIn)
        (input-port? . g$13600$1POZIn)
        (utf-8-codec . g$13599$1POZIn)
        (utf-16-codec . g$13598$1POZIn)
        (transcoder-error-handling-mode . g$13597$1POZIn)
        (transcoder-eol-style . g$13596$1POZIn)
        (transcoder-codec . g$13595$1POZIn)
        (transcoded-port . g$13594$1POZIn)
        (textual-port? . g$13593$1POZIn)
        (string->bytevector . g$13592$1POZIn)
        (standard-output-port . g$8697$1POZIn)
        (standard-input-port . g$8696$1POZIn)
        (standard-error-port . g$8695$1POZIn)
        (set-port-position! . g$13591$1POZIn)
        (put-u8 . g$13590$1POZIn)
        (put-string . g$13589$1POZIn)
        (put-datum . g$8700$1POZIn)
        (put-char . g$13588$1POZIn)
        (put-bytevector . g$13587$1POZIn)
        (port? . g$8705$1POZIn)
        (port-transcoder . g$13586$1POZIn)
        (port-position . g$13585$1POZIn)
        (port-has-set-port-position!? . g$13584$1POZIn)
        (port-has-port-position? . g$13583$1POZIn)
        (port-eof? . g$13582$1POZIn)
        (output-port-buffer-mode . g$13581$1POZIn)
        (open-string-output-port . g$8704$1POZIn)
        (open-string-input-port . g$13580$1POZIn)
        (open-file-output-port . g$13579$1POZIn)
        (open-file-input/output-port . g$13578$1POZIn)
        (open-file-input-port . g$13577$1POZIn)
        (open-bytevector-output-port . g$13576$1POZIn)
        (open-bytevector-input-port . g$13575$1POZIn)
        (native-transcoder . g$13574$1POZIn)
        (native-eol-style . g$8698$1POZIn)
        (make-transcoder . g$13573$1POZIn)
        (latin-1-codec . g$13572$1POZIn)
        (make-i/o-write-error . g$6700$1POZIn)
        (make-i/o-read-error . g$6687$1POZIn)
        (make-i/o-port-error . g$6795$1POZIn)
        (make-i/o-invalid-position-error . g$6713$1POZIn)
        (make-i/o-filename-error . g$6728$1POZIn)
        (make-i/o-file-protection-error . g$6743$1POZIn)
        (make-i/o-file-is-read-only-error . g$6756$1POZIn)
        (make-i/o-file-does-not-exist-error . g$6782$1POZIn)
        (make-i/o-file-already-exists-error . g$6769$1POZIn)
        (make-i/o-error . g$6674$1POZIn)
        (make-i/o-encoding-error . g$6823$1POZIn)
        (make-i/o-decoding-error . g$6810$1POZIn)
        (make-custom-textual-output-port . g$13571$1POZIn)
        (make-custom-textual-input/output-port . g$13570$1POZIn)
        (make-custom-textual-input-port . g$13569$1POZIn)
        (make-custom-binary-output-port . g$13568$1POZIn)
        (make-custom-binary-input/output-port . g$13567$1POZIn)
        (make-custom-binary-input-port . g$13566$1POZIn)
        (make-bytevector . g$5846$1POZIn)
        (lookahead-u8 . g$13565$1POZIn)
        (lookahead-char . g$13564$1POZIn)
        (i/o-write-error? . g$6701$1POZIn)
        (i/o-read-error? . g$6688$1POZIn)
        (i/o-port-error? . g$6797$1POZIn)
        (i/o-invalid-position-error? . g$6715$1POZIn)
        (i/o-error-position . g$6716$1POZIn)
        (i/o-filename-error? . g$6730$1POZIn)
        (i/o-file-protection-error? . g$6744$1POZIn)
        (i/o-file-is-read-only-error? . g$6757$1POZIn)
        (i/o-file-does-not-exist-error? . g$6783$1POZIn)
        (i/o-file-already-exists-error? . g$6770$1POZIn)
        (i/o-error? . g$6675$1POZIn)
        (i/o-error-port . g$6798$1POZIn)
        (i/o-error-filename . g$6731$1POZIn)
        (i/o-encoding-error? . g$6825$1POZIn)
        (i/o-encoding-error-char . g$6826$1POZIn)
        (i/o-decoding-error? . g$6811$1POZIn)
        (get-u8 . g$13563$1POZIn)
        (get-string-n! . g$13562$1POZIn)
        (get-string-n . g$13561$1POZIn)
        (get-string-all . g$13560$1POZIn)
        (get-line . g$13559$1POZIn)
        (get-datum . g$8701$1POZIn)
        (get-char . g$13558$1POZIn)
        (get-bytevector-some . g$13557$1POZIn)
        (get-bytevector-n! . g$13556$1POZIn)
        (get-bytevector-n . g$13555$1POZIn)
        (get-bytevector-all . g$13554$1POZIn)
        (flush-output-port . g$13553$1POZIn)
        (close-port . g$13552$1POZIn)
        (call-with-string-output-port . g$8706$1POZIn)
        (call-with-port . g$8707$1POZIn)
        (call-with-bytevector-output-port . g$13551$1POZIn)
        (bytevector->string . g$13550$1POZIn)
        (buffer-mode? . g$8699$1POZIn)
        (binary-port? . g$13549$1POZIn)
        (scheme-report-environment . g$10207$1POZIn)
        (quotient . g$6869$1POZIn)
        (null-environment . g$10206$1POZIn)
        (remainder . g$6870$1POZIn)
        (modulo . g$6871$1POZIn)
        (inexact->exact . g$6866$1POZIn)
        (force . g$6873$1POZIn)
        (exact->inexact . g$6867$1POZIn)
        (exit . g$13548$1POZIn)
        (command-line . g$13245$1POZIn)
        (string-fill! . g$13547$1POZIn)
        (string-set! . g$13546$1POZIn)
        (set-cdr! . g$13545$1POZIn)
        (set-car! . g$13544$1POZIn)
        (remove . g$5188$1POZIn)
        (remv . g$5189$1POZIn)
        (remp . g$5169$1POZIn)
        (remq . g$5190$1POZIn)
        (partition . g$5168$1POZIn)
        (memv . g$5176$1POZIn)
        (memq . g$5175$1POZIn)
        (memp . g$5178$1POZIn)
        (member . g$5177$1POZIn)
        (exists . g$5182$1POZIn)
        (for-all . g$5181$1POZIn)
        (fold-right . g$5187$1POZIn)
        (fold-left . g$5186$1POZIn)
        (find . g$5167$1POZIn)
        (filter . g$5170$1POZIn)
        (cons* . g$5185$1POZIn)
        (assv . g$5172$1POZIn)
        (assq . g$5171$1POZIn)
        (assp . g$5174$1POZIn)
        (assoc . g$5173$1POZIn)
        (with-exception-handler . g$13543$1POZIn)
        (raise-continuable . g$13542$1POZIn)
        (raise . g$13541$1POZIn)
        (eval . g$10209$1POZIn)
        (environment . g$10205$1POZIn)
        (make-enumeration . g$8793$1POZIn)
        (enum-set=? . g$8800$1POZIn)
        (enum-set-universe . g$8794$1POZIn)
        (enum-set-union . g$8801$1POZIn)
        (enum-set-subset? . g$8799$1POZIn)
        (enum-set-projection . g$8805$1POZIn)
        (enum-set-member? . g$8798$1POZIn)
        (enum-set-intersection . g$8802$1POZIn)
        (enum-set-indexer . g$8795$1POZIn)
        (enum-set-difference . g$8803$1POZIn)
        (enum-set-constructor . g$8796$1POZIn)
        (enum-set-complement . g$8804$1POZIn)
        (enum-set->list . g$8797$1POZIn)
        (who-condition? . g$6562$1POZIn)
        (warning? . g$6481$1POZIn)
        (violation? . g$6520$1POZIn)
        (undefined-violation? . g$6662$1POZIn)
        (syntax-violation? . g$6647$1POZIn)
        (syntax-violation-subform . g$6649$1POZIn)
        (syntax-violation-form . g$6648$1POZIn)
        (syntax-violation . g$10227$1POZIn)
        (simple-conditions . g$13540$1POZIn)
        (serious-condition? . g$6494$1POZIn)
        (non-continuable-violation? . g$6606$1POZIn)
        (message-condition? . g$6467$1POZIn)
        (make-who-condition . g$6560$1POZIn)
        (make-warning . g$6480$1POZIn)
        (make-violation . g$6519$1POZIn)
        (make-undefined-violation . g$6661$1POZIn)
        (make-syntax-violation . g$6644$1POZIn)
        (make-serious-condition . g$6493$1POZIn)
        (make-non-continuable-violation . g$6605$1POZIn)
        (make-message-condition . g$6465$1POZIn)
        (make-lexical-violation . g$6631$1POZIn)
        (make-irritants-condition . g$6545$1POZIn)
        (make-implementation-restriction-violation . g$6618$1POZIn)
        (make-error . g$6506$1POZIn)
        (make-assertion-violation . g$6532$1POZIn)
        (lexical-violation? . g$6632$1POZIn)
        (irritants-condition? . g$6547$1POZIn)
        (implementation-restriction-violation? . g$6619$1POZIn)
        (error? . g$6507$1POZIn)
        (condition-who . g$6563$1POZIn)
        (condition-predicate . g$13539$1POZIn)
        (condition-message . g$6468$1POZIn)
        (condition-irritants . g$6548$1POZIn)
        (condition-accessor . g$13538$1POZIn)
        (condition . g$13537$1POZIn)
        (assertion-violation? . g$6533$1POZIn)
        (condition? . g$13536$1POZIn)
        (utf32->string . g$5864$1POZIn)
        (utf16->string . g$5863$1POZIn)
        (utf8->string . g$5861$1POZIn)
        (uint-list->bytevector . g$5865$1POZIn)
        (u8-list->bytevector . g$5857$1POZIn)
        (string->utf8 . g$5858$1POZIn)
        (string->utf32 . g$5860$1POZIn)
        (string->utf16 . g$5859$1POZIn)
        (sint-list->bytevector . g$5866$1POZIn)
        (native-endianness . g$5832$1POZIn)
        (bytevector? . g$5522$1POZIn)
        (bytevector=? . g$5848$1POZIn)
        (bytevector-uint-set! . g$13535$1POZIn)
        (bytevector-uint-ref . g$13534$1POZIn)
        (bytevector-u8-set! . g$5853$1POZIn)
        (bytevector-u8-ref . g$5852$1POZIn)
        (bytevector-u64-set! . g$5894$1POZIn)
        (bytevector-u64-ref . g$5890$1POZIn)
        (bytevector-u64-native-set! . g$5896$1POZIn)
        (bytevector-u64-native-ref . g$5892$1POZIn)
        (bytevector-u32-set! . g$5886$1POZIn)
        (bytevector-u32-ref . g$5882$1POZIn)
        (bytevector-u32-native-set! . g$5888$1POZIn)
        (bytevector-u32-native-ref . g$5884$1POZIn)
        (bytevector-u16-set! . g$5878$1POZIn)
        (bytevector-u16-ref . g$5874$1POZIn)
        (bytevector-u16-native-set! . g$5880$1POZIn)
        (bytevector-u16-native-ref . g$5876$1POZIn)
        (bytevector-sint-set! . g$13533$1POZIn)
        (bytevector-sint-ref . g$13532$1POZIn)
        (bytevector-s8-set! . g$5855$1POZIn)
        (bytevector-s8-ref . g$5854$1POZIn)
        (bytevector-s64-set! . g$5895$1POZIn)
        (bytevector-s64-ref . g$5891$1POZIn)
        (bytevector-s64-native-set! . g$5897$1POZIn)
        (bytevector-s64-native-ref . g$5893$1POZIn)
        (bytevector-s32-set! . g$5887$1POZIn)
        (bytevector-s32-ref . g$5883$1POZIn)
        (bytevector-s32-native-set! . g$5889$1POZIn)
        (bytevector-s32-native-ref . g$5885$1POZIn)
        (bytevector-s16-set! . g$5879$1POZIn)
        (bytevector-s16-ref . g$5875$1POZIn)
        (bytevector-s16-native-set! . g$5881$1POZIn)
        (bytevector-s16-native-ref . g$5877$1POZIn)
        (bytevector-length . g$5847$1POZIn)
        (bytevector-ieee-single-set! . g$5872$1POZIn)
        (bytevector-ieee-single-ref . g$5870$1POZIn)
        (bytevector-ieee-single-native-set! . g$5900$1POZIn)
        (bytevector-ieee-single-native-ref . g$5898$1POZIn)
        (bytevector-ieee-double-set! . g$5873$1POZIn)
        (bytevector-ieee-double-ref . g$5871$1POZIn)
        (bytevector-ieee-double-native-set! . g$5901$1POZIn)
        (bytevector-ieee-double-native-ref . g$5899$1POZIn)
        (bytevector-fill! . g$5849$1POZIn)
        (bytevector-copy! . g$5850$1POZIn)
        (bytevector-copy . g$5851$1POZIn)
        (bytevector->uint-list . g$5867$1POZIn)
        (bytevector->u8-list . g$5856$1POZIn)
        (bytevector->sint-list . g$5868$1POZIn)
        (no-nans-violation? . g$6852$1POZIn)
        (no-infinities-violation? . g$6839$1POZIn)
        (make-no-nans-violation . g$6851$1POZIn)
        (make-no-infinities-violation . g$6838$1POZIn)
        (real->flonum . g$6140$1POZIn)
        (flzero? . g$8137$1POZIn)
        (fltruncate . g$8132$1POZIn)
        (fltan . g$8118$1POZIn)
        (flsqrt . g$8123$1POZIn)
        (flsin . g$8116$1POZIn)
        (flround . g$8133$1POZIn)
        (flpositive? . g$8135$1POZIn)
        (flonum? . g$5527$1POZIn)
        (flodd? . g$8139$1POZIn)
        (flnumerator . g$8082$1POZIn)
        (flnegative? . g$8136$1POZIn)
        (flnan? . g$8115$1POZIn)
        (flmod0 . g$8100$1POZIn)
        (flmod . g$8099$1POZIn)
        (flmin . g$8141$1POZIn)
        (flmax . g$8140$1POZIn)
        (fllog . g$8122$1POZIn)
        (flinteger? . g$8108$1POZIn)
        (flinfinite? . g$8114$1POZIn)
        (flfloor . g$8131$1POZIn)
        (flfinite? . g$8109$1POZIn)
        (flexpt . g$8125$1POZIn)
        (flexp . g$8124$1POZIn)
        (fleven? . g$8138$1POZIn)
        (fldiv0-and-mod0 . g$8107$1POZIn)
        (fldiv0 . g$8094$1POZIn)
        (fldiv-and-mod . g$8101$1POZIn)
        (fldiv . g$8106$1POZIn)
        (fldenominator . g$8081$1POZIn)
        (flcos . g$8117$1POZIn)
        (flceiling . g$8126$1POZIn)
        (flatan . g$8121$1POZIn)
        (flasin . g$8119$1POZIn)
        (flacos . g$8120$1POZIn)
        (flabs . g$8134$1POZIn)
        (fl>? . g$8088$1POZIn)
        (fl>=? . g$8089$1POZIn)
        (fl=? . g$8085$1POZIn)
        (fl<? . g$8086$1POZIn)
        (fl<=? . g$8087$1POZIn)
        (fl/ . g$8084$1POZIn)
        (fl- . g$8083$1POZIn)
        (fl+ . g$8079$1POZIn)
        (fl* . g$8080$1POZIn)
        (fixnum->flonum . g$6141$1POZIn)
        (fxzero? . g$7179$1POZIn)
        (fxxor . g$7142$1POZIn)
        (fxrotate-bit-field . g$7217$1POZIn)
        (fxreverse-bit-field . g$7218$1POZIn)
        (fxpositive? . g$7169$1POZIn)
        (fxodd? . g$7189$1POZIn)
        (fxnot . g$7123$1POZIn)
        (fxnegative? . g$7174$1POZIn)
        (fxmod0 . g$7153$1POZIn)
        (fxmod . g$7152$1POZIn)
        (fxmin . g$7191$1POZIn)
        (fxmax . g$7190$1POZIn)
        (fxlength . g$7120$1POZIn)
        (fxior . g$7141$1POZIn)
        (fxif . g$7199$1POZIn)
        (fxfirst-bit-set . g$7121$1POZIn)
        (fxeven? . g$7184$1POZIn)
        (fxdiv0-and-mod0 . g$7164$1POZIn)
        (fxdiv0 . g$7159$1POZIn)
        (fxdiv-and-mod . g$7154$1POZIn)
        (fxdiv . g$7147$1POZIn)
        (fxcopy-bit-field . g$7214$1POZIn)
        (fxcopy-bit . g$7204$1POZIn)
        (fxbit-set? . g$7122$1POZIn)
        (fxbit-field . g$7209$1POZIn)
        (fxbit-count . g$7115$1POZIn)
        (fxarithmetic-shift-right . g$7216$1POZIn)
        (fxarithmetic-shift-left . g$7215$1POZIn)
        (fxarithmetic-shift . g$7110$1POZIn)
        (fxand . g$7140$1POZIn)
        (fx>? . g$7132$1POZIn)
        (fx>=? . g$7133$1POZIn)
        (fx=? . g$7129$1POZIn)
        (fx<? . g$7130$1POZIn)
        (fx<=? . g$7131$1POZIn)
        (fx-/carry . g$7193$1POZIn)
        (fx- . g$7104$1POZIn)
        (fx+/carry . g$7194$1POZIn)
        (fx+ . g$7102$1POZIn)
        (fx*/carry . g$7192$1POZIn)
        (fx* . g$7103$1POZIn)
        (greatest-fixnum . g$7073$1POZIn)
        (least-fixnum . g$7074$1POZIn)
        (fixnum-width . g$5528$1POZIn)
        (fixnum? . g$5526$1POZIn)
        (bitwise-rotate-bit-field . g$7011$1POZIn)
        (bitwise-reverse-bit-field . g$13531$1POZIn)
        (bitwise-length . g$7002$1POZIn)
        (bitwise-if . g$7005$1POZIn)
        (bitwise-first-bit-set . g$7003$1POZIn)
        (bitwise-copy-bit-field . g$7008$1POZIn)
        (bitwise-copy-bit . g$7006$1POZIn)
        (bitwise-bit-set? . g$7004$1POZIn)
        (bitwise-bit-field . g$7007$1POZIn)
        (bitwise-bit-count . g$7001$1POZIn)
        (bitwise-xor . g$7000$1POZIn)
        (bitwise-ior . g$6999$1POZIn)
        (bitwise-and . g$6998$1POZIn)
        (bitwise-not . g$6997$1POZIn)
        (bitwise-arithmetic-shift-right . g$7010$1POZIn)
        (bitwise-arithmetic-shift-left . g$7009$1POZIn)
        (bitwise-arithmetic-shift . g$13530$1POZIn)
        (zero? . g$6155$1POZIn)
        (vector? . g$5521$1POZIn)
        (vector-set! . g$5537$1POZIn)
        (vector-ref . g$5536$1POZIn)
        (vector-map . g$5600$1POZIn)
        (vector-length . g$13529$1POZIn)
        (vector-for-each . g$5601$1POZIn)
        (vector-fill! . g$5538$1POZIn)
        (vector->list . g$13528$1POZIn)
        (vector . g$13527$1POZIn)
        (values . g$13526$1POZIn)
        (truncate . g$6203$1POZIn)
        (tan . g$6195$1POZIn)
        (symbol? . g$5523$1POZIn)
        (symbol=? . g$5585$1POZIn)
        (symbol->string . g$13525$1POZIn)
        (substring . g$13524$1POZIn)
        (string? . g$13523$1POZIn)
        (string>? . g$5582$1POZIn)
        (string>=? . g$5584$1POZIn)
        (string=? . g$5580$1POZIn)
        (string<? . g$5581$1POZIn)
        (string<=? . g$5583$1POZIn)
        (string-ref . g$13522$1POZIn)
        (string-length . g$13521$1POZIn)
        (string-for-each . g$5602$1POZIn)
        (string-copy . g$13520$1POZIn)
        (string-append . g$13519$1POZIn)
        (string->symbol . g$13518$1POZIn)
        (string->number . g$13517$1POZIn)
        (string->list . g$13516$1POZIn)
        (string . g$13515$1POZIn)
        (sqrt . g$6205$1POZIn)
        (sin . g$6189$1POZIn)
        (round . g$6204$1POZIn)
        (reverse . g$5540$1POZIn)
        (real? . g$6149$1POZIn)
        (real-valued? . g$6152$1POZIn)
        (real-part . g$6182$1POZIn)
        (rationalize . g$5597$1POZIn)
        (rational? . g$6150$1POZIn)
        (rational-valued? . g$6153$1POZIn)
        (procedure? . g$5525$1POZIn)
        (positive? . g$6156$1POZIn)
        (pair? . g$13514$1POZIn)
        (odd? . g$5570$1POZIn)
        (numerator . g$6180$1POZIn)
        (number? . g$6142$1POZIn)
        (number->string . g$13513$1POZIn)
        (null? . g$13512$1POZIn)
        (not . g$13511$1POZIn)
        (negative? . g$6157$1POZIn)
        (nan? . g$6143$1POZIn)
        (min . g$5572$1POZIn)
        (max . g$5571$1POZIn)
        (map . g$5183$1POZIn)
        (make-vector . g$13510$1POZIn)
        (make-string . g$13509$1POZIn)
        (make-rectangular . g$6175$1POZIn)
        (make-polar . g$6176$1POZIn)
        (magnitude . g$6178$1POZIn)
        (log . g$6198$1POZIn)
        (list? . g$13508$1POZIn)
        (list-tail . g$5163$1POZIn)
        (list-ref . g$5164$1POZIn)
        (list->vector . g$5534$1POZIn)
        (list->string . g$5535$1POZIn)
        (list . g$13507$1POZIn)
        (length . g$13506$1POZIn)
        (lcm . g$5574$1POZIn)
        (integer? . g$6151$1POZIn)
        (integer-valued? . g$6154$1POZIn)
        (integer->char . g$13505$1POZIn)
        (infinite? . g$6145$1POZIn)
        (inexact? . g$6147$1POZIn)
        (inexact . g$6158$1POZIn)
        (imag-part . g$6183$1POZIn)
        (gcd . g$5573$1POZIn)
        (for-each . g$5184$1POZIn)
        (floor . g$6201$1POZIn)
        (finite? . g$6144$1POZIn)
        (expt . g$6207$1POZIn)
        (exp . g$6188$1POZIn)
        (exact? . g$6146$1POZIn)
        (exact-integer-sqrt . g$6206$1POZIn)
        (exact . g$6159$1POZIn)
        (even? . g$5569$1POZIn)
        (error . g$13504$1POZIn)
        (eqv? . g$13503$1POZIn)
        (equal? . g$13502$1POZIn)
        (eq? . g$13501$1POZIn)
        (dynamic-wind . g$13500$1POZIn)
        (div0-and-mod0 . g$5533$1POZIn)
        (mod0 . g$5531$1POZIn)
        (div0 . g$5529$1POZIn)
        (div-and-mod . g$5532$1POZIn)
        (mod . g$5530$1POZIn)
        (div . g$6199$1POZIn)
        (denominator . g$6181$1POZIn)
        (cos . g$6192$1POZIn)
        (cons . g$13499$1POZIn)
        (complex? . g$6148$1POZIn)
        (char? . g$5520$1POZIn)
        (char>? . g$5594$1POZIn)
        (char>=? . g$5596$1POZIn)
        (char=? . g$5592$1POZIn)
        (char<? . g$5593$1POZIn)
        (char<=? . g$5595$1POZIn)
        (char->integer . g$13498$1POZIn)
        (ceiling . g$6202$1POZIn)
        (call-with-values . g$13497$1POZIn)
        (call/cc . g$13496$1POZIn)
        (call-with-current-continuation . g$13495$1POZIn)
        (cddddr . g$5568$1POZIn)
        (cdddar . g$5567$1POZIn)
        (cddadr . g$5566$1POZIn)
        (cddaar . g$5565$1POZIn)
        (cdaddr . g$5564$1POZIn)
        (cdadar . g$5563$1POZIn)
        (cdaadr . g$5562$1POZIn)
        (cdaaar . g$5561$1POZIn)
        (cadddr . g$5560$1POZIn)
        (caddar . g$5559$1POZIn)
        (cadadr . g$5558$1POZIn)
        (cadaar . g$5557$1POZIn)
        (caaddr . g$5556$1POZIn)
        (caadar . g$5555$1POZIn)
        (caaadr . g$5554$1POZIn)
        (caaaar . g$5553$1POZIn)
        (cdddr . g$5552$1POZIn)
        (cddar . g$5551$1POZIn)
        (cdadr . g$5550$1POZIn)
        (cdaar . g$5549$1POZIn)
        (caddr . g$5548$1POZIn)
        (cadar . g$5547$1POZIn)
        (caadr . g$5546$1POZIn)
        (caaar . g$5545$1POZIn)
        (cddr . g$5544$1POZIn)
        (cdar . g$5543$1POZIn)
        (cadr . g$5542$1POZIn)
        (caar . g$5541$1POZIn)
        (cdr . g$13494$1POZIn)
        (car . g$13493$1POZIn)
        (boolean? . g$5524$1POZIn)
        (boolean=? . g$5586$1POZIn)
        (atan . g$6197$1POZIn)
        (assertion-violation . g$13492$1POZIn)
        (asin . g$6190$1POZIn)
        (apply . g$13491$1POZIn)
        (append . g$13490$1POZIn)
        (angle . g$6177$1POZIn)
        (acos . g$6193$1POZIn)
        (abs . g$6200$1POZIn)
        (/ . g$13489$1POZIn)
        (* . g$13488$1POZIn)
        (- . g$13487$1POZIn)
        (+ . g$13486$1POZIn)
        (>= . g$6174$1POZIn)
        (> . g$6173$1POZIn)
        (= . g$6170$1POZIn)
        (<= . g$6172$1POZIn)
        (< . g$6171$1POZIn)
        ($bytevector-set! . g$13485$1POZIn)
        ($bytevector-ref . g$13484$1POZIn)
        ($fl>=? . g$13483$1POZIn)
        ($fl>? . g$13482$1POZIn)
        ($fl<=? . g$13481$1POZIn)
        ($fl<? . g$13480$1POZIn)
        ($fl- . g$13479$1POZIn)
        ($fl/ . g$13478$1POZIn)
        ($fl* . g$13477$1POZIn)
        ($fl+ . g$13476$1POZIn)
        ($fl=? . g$13475$1POZIn)
        ($try . g$13474$1POZIn)
        ($fxarithmetic-shift-right . g$13473$1POZIn)
        ($fxarithmetic-shift-left . g$13472$1POZIn)
        ($$fx- . g$13471$1POZIn)
        ($$fx* . g$13470$1POZIn)
        ($$fx+ . g$13469$1POZIn)
        ($fxnot . g$13468$1POZIn)
        ($fxxor . g$13467$1POZIn)
        ($fxior . g$13466$1POZIn)
        ($fxand . g$13465$1POZIn)
        ($fx>=? . g$13464$1POZIn)
        ($fx>? . g$13463$1POZIn)
        ($fx<=? . g$13462$1POZIn)
        ($fx<? . g$13461$1POZIn)
        ($fx- . g$13460$1POZIn)
        ($fxmod0 . g$13459$1POZIn)
        ($fxdiv0 . g$13458$1POZIn)
        ($fx* . g$13457$1POZIn)
        ($fx+ . g$13456$1POZIn)
        ($fx=? . g$13455$1POZIn)
        ($vector-set! . g$13454$1POZIn)
        ($vector-ref . g$13453$1POZIn)
        ($cdr . g$13452$1POZIn)
        ($car . g$13451$1POZIn)
        (make-record-printer . g$13450$1POZIn)
        (eqv-hash . g$13449$1POZIn)
        (reverse! . g$13448$1POZIn)
        (deserialize-port . g$13447$1POZIn)
        (serialize-port . g$13446$1POZIn)
        (enum-set? . g$8770$1POZIn)
        (make-promise . g$6872$1POZIn)
        (load/unload . g$13249$1POZIn)
        (load/args . g$13248$1POZIn)
        (printf . g$8879$1POZIn)
        (fprintf . g$8880$1POZIn)
        (format . g$8881$1POZIn)
        (procedure-form . g$13445$1POZIn)
        (procedure-environment . g$13444$1POZIn)
        (procedure-name . g$13443$1POZIn)
        (procedure-arity . g$13442$1POZIn)
        (gc-collect . g$13441$1POZIn)
        (typeof . g$13440$1POZIn)
        (clr-type? . g$13439$1POZIn)
        (get-clr-type . g$13438$1POZIn)
        (get-command-line . g$13437$1POZIn)
        (vector-append . g$13436$1POZIn)
        (vector-filter . g$13435$1POZIn)
        (vector-reverse! . g$13434$1POZIn)
        (vector-contains? . g$13433$1POZIn)
        (vector-index-of . g$13432$1POZIn)
        (vector-copy . g$13431$1POZIn)
        (vector-binary-search . g$13430$1POZIn)
        (string-ci-compare . g$13429$1POZIn)
        (string-compare . g$13428$1POZIn)
        (string-format . g$13427$1POZIn)
        (trace-printer . g$13244$1POZIn)
        (make-traced-procedure . g$13426$1POZIn)
        (make-traced-macro . g$8901$1POZIn)
        (assertion-error . g$10223$1POZIn)
        (time-it . g$13425$1POZIn)
        (make-parameter . g$8908$1POZIn)
        (library-locator . g$13424$1POZIn)
        (get-library-paths . g$13423$1POZIn)
        (open-tcp-input/output-port . g$13422$1POZIn)
        (hashtable-for-each . g$13421$1POZIn)
        (hashtable-map . g$13420$1POZIn)
        (environment-bindings . g$10201$1POZIn)
        (environment-symbols . g$10204$1POZIn)
        (interaction-environment-symbols . g$10200$1POZIn)
        (optimization-level . g$13419$1POZIn)
        (library-path . g$9530$1POZIn)
        (make-compile-time-value . g$9909$1POZIn)
        (expand->core . g$10210$1POZIn)
        (expand . g$10208$1POZIn)
        (emacs-mode? . g$13246$1POZIn)
        (syntax-transpose . g$10147$1POZIn)
        (convert->cps . g$9227$1POZIn)
        (inexact=? . g$13418$1POZIn)
        (bignum-sqrt-exact . g$13417$1POZIn)
        (bignum-sqrt . g$13416$1POZIn)
        (inexact-compare . g$13415$1POZIn)
        (exact-compare . g$13414$1POZIn)
        (condition-stacktrace . g$13413$1POZIn)
        (stacktrace-condition? . g$6592$1POZIn)
        (make-stacktrace-condition . g$6590$1POZIn)
        (condition-where . g$13412$1POZIn)
        (where-condition? . g$6577$1POZIn)
        (make-where-condition . g$6575$1POZIn)
        (installed-libraries . g$9551$1POZIn)
        (uninstall-library . g$9542$1POZIn)
        (pretty-gensyms . g$8991$1POZIn)
        (pretty-width . g$8988$1POZIn)
        (pretty-print . g$8993$1POZIn)
        (pointer+ . g$13411$1POZIn)
        (&stacktrace . g$13410$1POZIn)
        (&where . g$13409$1POZIn)
        (&no-nans . g$13408$1POZIn)
        (&no-infinities . g$13407$1POZIn)
        (&i/o-encoding . g$13406$1POZIn)
        (&i/o-decoding . g$13405$1POZIn)
        (&i/o-port . g$13404$1POZIn)
        (&i/o-file-does-not-exist . g$13403$1POZIn)
        (&i/o-file-already-exists . g$13402$1POZIn)
        (&i/o-file-is-read-only . g$13401$1POZIn)
        (&i/o-file-protection . g$13400$1POZIn)
        (&i/o-filename . g$13399$1POZIn)
        (&i/o-invalid-position . g$13398$1POZIn)
        (&i/o-write . g$13397$1POZIn)
        (&i/o-read . g$13396$1POZIn)
        (&i/o . g$13395$1POZIn)
        (&non-continuable . g$13394$1POZIn)
        (&undefined . g$13393$1POZIn)
        (&syntax . g$13392$1POZIn)
        (&lexical . g$13391$1POZIn)
        (&implementation-restriction . g$13390$1POZIn)
        (&who . g$13389$1POZIn)
        (&irritants . g$13388$1POZIn)
        (&assertion . g$13387$1POZIn)
        (&violation . g$13386$1POZIn)
        (&error . g$13385$1POZIn)
        (&serious . g$13384$1POZIn)
        (&warning . g$13383$1POZIn)
        (&message . g$13382$1POZIn)
        (&condition . g$13381$1POZIn)
        (define-condition-type . g$13380$1POZIn)
        (define-enumeration . g$13379$1POZIn)
        (define-record-type . g$13378$1POZIn)
        (parent-rtd . g$13377$1POZIn)
        (nongenerative . g$13376$1POZIn)
        (opaque . g$13375$1POZIn)
        (sealed . g$13374$1POZIn)
        (protocol . g$13373$1POZIn)
        (parent . g$13372$1POZIn)
        (immutable . g$13371$1POZIn)
        (mutable . g$13370$1POZIn)
        (fields . g$13369$1POZIn)
        (error-handling-mode . g$13368$1POZIn)
        (file-options . g$13367$1POZIn)
        (buffer-mode . g$13366$1POZIn)
        (eol-style . g$13365$1POZIn)
        (guard . g$13364$1POZIn)
        (trace-letrec-syntax . g$13363$1POZIn)
        (trace-let-syntax . g$13362$1POZIn)
        (trace-define-syntax . g$13361$1POZIn)
        (trace-define . g$13360$1POZIn)
        (trace-lambda . g$13359$1POZIn)
        (unsyntax-splicing . g$13358$1POZIn)
        (unsyntax . g$13357$1POZIn)
        (unquote-splicing . g$13356$1POZIn)
        (unquote . g$13355$1POZIn)
        (_ . g$13354$1POZIn)
        (else . g$13353$1POZIn)
        (=> . g$13352$1POZIn)
        (... . g$13351$1POZIn)
        (assert . g$13350$1POZIn)
        (endianness . g$13349$1POZIn)
        (delay . g$13348$1POZIn)
        (time . g$13347$1POZIn)
        (or . g$13346$1POZIn)
        (and . g$13345$1POZIn)
        (do . g$13344$1POZIn)
        (cond . g$13343$1POZIn)
        (let* . g$13342$1POZIn)
        (let . g$13341$1POZIn)
        (identifier-syntax . g$13340$1POZIn)
        (with-syntax . g$13339$1POZIn)
        (quasisyntax . g$13338$1POZIn)
        (quasiquote . g$13337$1POZIn)
        (syntax-rules . g$13336$1POZIn)
        (include-into . g$13335$1POZIn)
        (include . g$13334$1POZIn)
        (define-struct . g$13333$1POZIn)
        (let-values . g$13332$1POZIn)
        (let*-values . g$13331$1POZIn)
        (record-constructor-descriptor . g$13330$1POZIn)
        (record-type-descriptor . g$13329$1POZIn)
        (fluid-let-syntax . g$13328$1POZIn)
        (case . g$13327$1POZIn)
        (parameterize . g$13326$1POZIn)
        (unless . g$13325$1POZIn)
        (when . g$13324$1POZIn)
        (if . g$13323$1POZIn)
        (letrec* . g$13322$1POZIn)
        (letrec . g$13321$1POZIn)
        (type-descriptor . g$13320$1POZIn)
        (case-lambda . g$13319$1POZIn)
        (lambda . g$13318$1POZIn)
        (syntax . g$13317$1POZIn)
        (syntax-case . g$13316$1POZIn)
        (quote . g$13315$1POZIn)
        (foreign-call . g$13314$1POZIn)
        (letrec-syntax . g$13313$1POZIn)
        (let-syntax . g$13312$1POZIn)
        (set! . g$13311$1POZIn)
        (export . g$13310$1POZIn)
        (import . g$13309$1POZIn)
        (library . g$13308$1POZIn)
        (begin . g$13307$1POZIn)
        (module . g$13306$1POZIn)
        (define-syntax . g$13305$1POZIn)
        (define . g$13304$1POZIn))
      '((g$10104$1POZIn core-prim . ellipsis-map)
        (g$6595$1POZIn core-prim . &stacktrace-rcd)
        (g$6594$1POZIn core-prim . &stacktrace-rtd)
        (g$6580$1POZIn core-prim . &where-rcd)
        (g$6579$1POZIn core-prim . &where-rtd)
        (g$6854$1POZIn core-prim . &no-nans-rcd)
        (g$6853$1POZIn core-prim . &no-nans-rtd)
        (g$6841$1POZIn core-prim . &no-infinities-rcd)
        (g$6840$1POZIn core-prim . &no-infinities-rtd)
        (g$6828$1POZIn core-prim . &i/o-encoding-rcd)
        (g$6827$1POZIn core-prim . &i/o-encoding-rtd)
        (g$6813$1POZIn core-prim . &i/o-decoding-rcd)
        (g$6812$1POZIn core-prim . &i/o-decoding-rtd)
        (g$6800$1POZIn core-prim . &i/o-port-rcd)
        (g$6799$1POZIn core-prim . &i/o-port-rtd)
        (g$6785$1POZIn core-prim . &i/o-file-does-not-exist-rcd)
        (g$6784$1POZIn core-prim . &i/o-file-does-not-exist-rtd)
        (g$6772$1POZIn core-prim . &i/o-file-already-exists-rcd)
        (g$6771$1POZIn core-prim . &i/o-file-already-exists-rtd)
        (g$6759$1POZIn core-prim . &i/o-file-is-read-only-rcd)
        (g$6758$1POZIn core-prim . &i/o-file-is-read-only-rtd)
        (g$6746$1POZIn core-prim . &i/o-file-protection-rcd)
        (g$6745$1POZIn core-prim . &i/o-file-protection-rtd)
        (g$6733$1POZIn core-prim . &i/o-filename-rcd)
        (g$6732$1POZIn core-prim . &i/o-filename-rtd)
        (g$6718$1POZIn core-prim . &i/o-invalid-position-rcd)
        (g$6717$1POZIn core-prim . &i/o-invalid-position-rtd)
        (g$6703$1POZIn core-prim . &i/o-write-rcd)
        (g$6702$1POZIn core-prim . &i/o-write-rtd)
        (g$6690$1POZIn core-prim . &i/o-read-rcd)
        (g$6689$1POZIn core-prim . &i/o-read-rtd)
        (g$6677$1POZIn core-prim . &i/o-rcd)
        (g$6676$1POZIn core-prim . &i/o-rtd)
        (g$6664$1POZIn core-prim . &undefined-rcd)
        (g$6663$1POZIn core-prim . &undefined-rtd)
        (g$6651$1POZIn core-prim . &syntax-rcd)
        (g$6650$1POZIn core-prim . &syntax-rtd)
        (g$6634$1POZIn core-prim . &lexical-rcd)
        (g$6633$1POZIn core-prim . &lexical-rtd)
        (g$6621$1POZIn core-prim . &implementation-restriction-rcd)
        (g$6620$1POZIn core-prim . &implementation-restriction-rtd)
        (g$6608$1POZIn core-prim . &non-continuable-rcd)
        (g$6607$1POZIn core-prim . &non-continuable-rtd)
        (g$6565$1POZIn core-prim . &who-rcd)
        (g$6564$1POZIn core-prim . &who-rtd)
        (g$6550$1POZIn core-prim . &irritants-rcd)
        (g$6549$1POZIn core-prim . &irritants-rtd)
        (g$6535$1POZIn core-prim . &assertion-rcd)
        (g$6534$1POZIn core-prim . &assertion-rtd)
        (g$6522$1POZIn core-prim . &violation-rcd)
        (g$6521$1POZIn core-prim . &violation-rtd)
        (g$6509$1POZIn core-prim . &error-rcd)
        (g$6508$1POZIn core-prim . &error-rtd)
        (g$6496$1POZIn core-prim . &serious-rcd)
        (g$6495$1POZIn core-prim . &serious-rtd)
        (g$6483$1POZIn core-prim . &warning-rcd)
        (g$6482$1POZIn core-prim . &warning-rtd)
        (g$6470$1POZIn core-prim . &message-rcd)
        (g$6469$1POZIn core-prim . &message-rtd)
        (g$6430$1POZIn core-prim . &condition-rcd)
        (g$6429$1POZIn core-prim . &condition-rtd)
        (g$13696$1POZIn core-prim . library-letrec*)
        (g$13695$1POZIn core-prim . annotation-stripped)
        (g$13694$1POZIn core-prim . annotation-source)
        (g$13693$1POZIn core-prim . annotation-expression)
        (g$13692$1POZIn core-prim . annotation?)
        (g$13691$1POZIn core-prim . read-annotated)
        (g$6196$1POZIn core-prim . tanh)
        (g$6194$1POZIn core-prim . cosh)
        (g$6191$1POZIn core-prim . sinh)
        (g$13690$1POZIn core-prim . make-guid)
        (g$13689$1POZIn core-prim . unspecified?)
        (g$5166$1POZIn core-prim . make-list)
        (g$5165$1POZIn core-prim . last-pair)
        (g$13688$1POZIn core-prim . load-r5rs)
        (g$13687$1POZIn core-prim . license)
        (g$13686$1POZIn core-prim . stacktrace)
        (g$13251$1POZIn core-prim . ironscheme-test)
        (g$13252$1POZIn core-prim . ironscheme-build)
        (g$13685$1POZIn core-prim . pinvoke-call-internal)
        (g$13684$1POZIn core-prim . ffi-callback-internal)
        (g$13683$1POZIn core-prim . ffi-callout-internal)
        (g$13682$1POZIn core-prim . define-clr-class-internal)
        (g$13681$1POZIn core-prim . clr-field-set!-internal)
        (g$13680$1POZIn core-prim . clr-field-get-internal)
        (g$13679$1POZIn core-prim . clr-cast-internal)
        (g$13678$1POZIn core-prim . clr-call-internal)
        (g$13677$1POZIn core-prim . clr-new-internal)
        (g$13676$1POZIn core-prim . clr-new-array-internal)
        (g$13675$1POZIn core-prim . clr-is-internal)
        (g$13674$1POZIn core-prim . clr-reference-internal)
        (g$13673$1POZIn core-prim . clr-using-internal)
        (g$10224$1POZIn core-prim . syntax-error)
        (g$10099$1POZIn core-prim . syntax-dispatch)
        (g$13672$1POZIn core-prim . compile-core)
        (g$13671$1POZIn core-prim . eval-core)
        (g$13670$1POZIn core-prim . remove-location)
        (g$13669$1POZIn core-prim . set-symbol-value!)
        (g$13668$1POZIn core-prim . symbol-value)
        (g$13667$1POZIn core-prim . symbol-bound?)
        (g$13666$1POZIn core-prim . ungensym)
        (g$13665$1POZIn core-prim . gensym)
        (g$13664$1POZIn core-prim . void)
        (g$13663$1POZIn core-prim . load-serialized-library)
        (g$13662$1POZIn core-prim . serialize-library)
        (g$13256$1POZIn core-prim . compile-system-libraries)
        (g$13258$1POZIn core-prim . compile->closure)
        (g$13257$1POZIn core-prim . compile)
        (g$13250$1POZIn core-prim . load)
        (g$13661$1POZIn core-prim . string-normalize)
        (g$10233$1POZIn core-prim . new-interaction-environment)
        (g$10234$1POZIn core-prim . interaction-environment)
        (g$13660$1POZIn core-prim . char-ready?)
        (g$13659$1POZIn core-prim . string-upcase)
        (g$13658$1POZIn core-prim . string-titlecase)
        (g$6937$1POZIn core-prim . string-normalize-nfkd)
        (g$6936$1POZIn core-prim . string-normalize-nfkc)
        (g$6935$1POZIn core-prim . string-normalize-nfd)
        (g$6934$1POZIn core-prim . string-normalize-nfc)
        (g$13657$1POZIn core-prim . string-foldcase)
        (g$13656$1POZIn core-prim . string-downcase)
        (g$6921$1POZIn core-prim . string-ci>?)
        (g$6923$1POZIn core-prim . string-ci>=?)
        (g$6919$1POZIn core-prim . string-ci=?)
        (g$6920$1POZIn core-prim . string-ci<?)
        (g$6922$1POZIn core-prim . string-ci<=?)
        (g$13655$1POZIn core-prim . char-whitespace?)
        (g$13654$1POZIn core-prim . char-upper-case?)
        (g$13653$1POZIn core-prim . char-title-case?)
        (g$13652$1POZIn core-prim . char-numeric?)
        (g$13651$1POZIn core-prim . char-lower-case?)
        (g$13650$1POZIn core-prim . char-general-category)
        (g$13649$1POZIn core-prim . char-upcase)
        (g$13648$1POZIn core-prim . char-titlecase)
        (g$13647$1POZIn core-prim . char-foldcase)
        (g$13646$1POZIn core-prim . char-downcase)
        (g$6931$1POZIn core-prim . char-ci>?)
        (g$6933$1POZIn core-prim . char-ci>=?)
        (g$6929$1POZIn core-prim . char-ci=?)
        (g$6930$1POZIn core-prim . char-ci<?)
        (g$6932$1POZIn core-prim . char-ci<=?)
        (g$13645$1POZIn core-prim . char-alphabetic?)
        (g$9911$1POZIn core-prim . variable-transformer-procedure)
        (g$9910$1POZIn core-prim . variable-transformer?)
        (g$9908$1POZIn core-prim . make-variable-transformer)
        (g$10228$1POZIn core-prim . identifier?)
        (g$10217$1POZIn core-prim . generate-temporaries)
        (g$10218$1POZIn core-prim . free-identifier=?)
        (g$10230$1POZIn core-prim . syntax->datum)
        (g$10229$1POZIn core-prim . datum->syntax)
        (g$10219$1POZIn core-prim . bound-identifier=?)
        (g$13644$1POZIn core-prim . record-type-descriptor?)
        (g$13643$1POZIn core-prim . record-predicate)
        (g$13642$1POZIn core-prim . record-mutator)
        (g$13641$1POZIn core-prim . record-constructor)
        (g$13640$1POZIn core-prim . record-accessor)
        (g$13639$1POZIn core-prim . make-record-type-descriptor)
        (g$13638$1POZIn core-prim . make-record-constructor-descriptor)
        (g$13637$1POZIn core-prim . record?)
        (g$13636$1POZIn core-prim . record-type-uid)
        (g$13635$1POZIn core-prim . record-type-sealed?)
        (g$13634$1POZIn core-prim . record-type-parent)
        (g$13633$1POZIn core-prim . record-type-opaque?)
        (g$13632$1POZIn core-prim . record-type-name)
        (g$13631$1POZIn core-prim . record-type-generative?)
        (g$13630$1POZIn core-prim . record-type-field-names)
        (g$13629$1POZIn core-prim . record-rtd)
        (g$13628$1POZIn core-prim . record-field-mutable?)
        (g$5826$1POZIn core-prim . delete-file)
        (g$5825$1POZIn core-prim . file-exists?)
        (g$13627$1POZIn core-prim . vector-sort!)
        (g$13626$1POZIn core-prim . vector-sort)
        (g$6890$1POZIn core-prim . list-sort)
        (g$13625$1POZIn core-prim . symbol-hash)
        (g$13624$1POZIn core-prim . string-ci-hash)
        (g$13623$1POZIn core-prim . string-hash)
        (g$13622$1POZIn core-prim . equal-hash)
        (g$13621$1POZIn core-prim . hashtable-equivalence-function)
        (g$13620$1POZIn core-prim . make-hashtable)
        (g$13619$1POZIn core-prim . hashtable-hash-function)
        (g$5793$1POZIn core-prim . make-eqv-hashtable)
        (g$5792$1POZIn core-prim . make-eq-hashtable)
        (g$13618$1POZIn core-prim . hashtable?)
        (g$5799$1POZIn core-prim . hashtable-update!)
        (g$5794$1POZIn core-prim . hashtable-size)
        (g$5796$1POZIn core-prim . hashtable-set!)
        (g$5795$1POZIn core-prim . hashtable-ref)
        (g$13617$1POZIn core-prim . hashtable-mutable?)
        (g$13616$1POZIn core-prim . hashtable-keys)
        (g$13615$1POZIn core-prim . hashtable-entries)
        (g$5797$1POZIn core-prim . hashtable-delete!)
        (g$13614$1POZIn core-prim . hashtable-copy)
        (g$5798$1POZIn core-prim . hashtable-contains?)
        (g$5800$1POZIn core-prim . hashtable-clear!)
        (g$8732$1POZIn core-prim . call-with-output-file)
        (g$8731$1POZIn core-prim . call-with-input-file)
        (g$8723$1POZIn core-prim . write-char)
        (g$13613$1POZIn core-prim . write)
        (g$8730$1POZIn core-prim . with-output-to-file)
        (g$8729$1POZIn core-prim . with-input-from-file)
        (g$8722$1POZIn core-prim . read-char)
        (g$13612$1POZIn core-prim . read)
        (g$8721$1POZIn core-prim . peek-char)
        (g$13611$1POZIn core-prim . open-output-file)
        (g$13610$1POZIn core-prim . open-input-file)
        (g$8733$1POZIn core-prim . newline)
        (g$13609$1POZIn core-prim . display)
        (g$13608$1POZIn core-prim . close-output-port)
        (g$13607$1POZIn core-prim . close-input-port)
        (g$13606$1POZIn core-prim . eof-object?)
        (g$13605$1POZIn core-prim . eof-object)
        (g$13604$1POZIn core-prim . current-error-port)
        (g$13603$1POZIn core-prim . current-output-port)
        (g$13602$1POZIn core-prim . current-input-port)
        (g$13601$1POZIn core-prim . output-port?)
        (g$13600$1POZIn core-prim . input-port?)
        (g$13599$1POZIn core-prim . utf-8-codec)
        (g$13598$1POZIn core-prim . utf-16-codec)
        (g$13597$1POZIn core-prim . transcoder-error-handling-mode)
        (g$13596$1POZIn core-prim . transcoder-eol-style)
        (g$13595$1POZIn core-prim . transcoder-codec)
        (g$13594$1POZIn core-prim . transcoded-port)
        (g$13593$1POZIn core-prim . textual-port?)
        (g$13592$1POZIn core-prim . string->bytevector)
        (g$8697$1POZIn core-prim . standard-output-port)
        (g$8696$1POZIn core-prim . standard-input-port)
        (g$8695$1POZIn core-prim . standard-error-port)
        (g$13591$1POZIn core-prim . set-port-position!)
        (g$13590$1POZIn core-prim . put-u8)
        (g$13589$1POZIn core-prim . put-string)
        (g$8700$1POZIn core-prim . put-datum)
        (g$13588$1POZIn core-prim . put-char)
        (g$13587$1POZIn core-prim . put-bytevector)
        (g$8705$1POZIn core-prim . port?)
        (g$13586$1POZIn core-prim . port-transcoder)
        (g$13585$1POZIn core-prim . port-position)
        (g$13584$1POZIn core-prim . port-has-set-port-position!?)
        (g$13583$1POZIn core-prim . port-has-port-position?)
        (g$13582$1POZIn core-prim . port-eof?)
        (g$13581$1POZIn core-prim . output-port-buffer-mode)
        (g$8704$1POZIn core-prim . open-string-output-port)
        (g$13580$1POZIn core-prim . open-string-input-port)
        (g$13579$1POZIn core-prim . open-file-output-port)
        (g$13578$1POZIn core-prim . open-file-input/output-port)
        (g$13577$1POZIn core-prim . open-file-input-port)
        (g$13576$1POZIn core-prim . open-bytevector-output-port)
        (g$13575$1POZIn core-prim . open-bytevector-input-port)
        (g$13574$1POZIn core-prim . native-transcoder)
        (g$8698$1POZIn core-prim . native-eol-style)
        (g$13573$1POZIn core-prim . make-transcoder)
        (g$13572$1POZIn core-prim . latin-1-codec)
        (g$6700$1POZIn core-prim . make-i/o-write-error)
        (g$6687$1POZIn core-prim . make-i/o-read-error)
        (g$6795$1POZIn core-prim . make-i/o-port-error)
        (g$6713$1POZIn core-prim . make-i/o-invalid-position-error)
        (g$6728$1POZIn core-prim . make-i/o-filename-error)
        (g$6743$1POZIn core-prim . make-i/o-file-protection-error)
        (g$6756$1POZIn core-prim . make-i/o-file-is-read-only-error)
        (g$6782$1POZIn core-prim . make-i/o-file-does-not-exist-error)
        (g$6769$1POZIn core-prim . make-i/o-file-already-exists-error)
        (g$6674$1POZIn core-prim . make-i/o-error)
        (g$6823$1POZIn core-prim . make-i/o-encoding-error)
        (g$6810$1POZIn core-prim . make-i/o-decoding-error)
        (g$13571$1POZIn core-prim . make-custom-textual-output-port)
        (g$13570$1POZIn
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13569$1POZIn core-prim . make-custom-textual-input-port)
        (g$13568$1POZIn core-prim . make-custom-binary-output-port)
        (g$13567$1POZIn
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$13566$1POZIn core-prim . make-custom-binary-input-port)
        (g$5846$1POZIn core-prim . make-bytevector)
        (g$13565$1POZIn core-prim . lookahead-u8)
        (g$13564$1POZIn core-prim . lookahead-char)
        (g$6701$1POZIn core-prim . i/o-write-error?)
        (g$6688$1POZIn core-prim . i/o-read-error?)
        (g$6797$1POZIn core-prim . i/o-port-error?)
        (g$6715$1POZIn core-prim . i/o-invalid-position-error?)
        (g$6716$1POZIn core-prim . i/o-error-position)
        (g$6730$1POZIn core-prim . i/o-filename-error?)
        (g$6744$1POZIn core-prim . i/o-file-protection-error?)
        (g$6757$1POZIn core-prim . i/o-file-is-read-only-error?)
        (g$6783$1POZIn core-prim . i/o-file-does-not-exist-error?)
        (g$6770$1POZIn core-prim . i/o-file-already-exists-error?)
        (g$6675$1POZIn core-prim . i/o-error?)
        (g$6798$1POZIn core-prim . i/o-error-port)
        (g$6731$1POZIn core-prim . i/o-error-filename)
        (g$6825$1POZIn core-prim . i/o-encoding-error?)
        (g$6826$1POZIn core-prim . i/o-encoding-error-char)
        (g$6811$1POZIn core-prim . i/o-decoding-error?)
        (g$13563$1POZIn core-prim . get-u8)
        (g$13562$1POZIn core-prim . get-string-n!)
        (g$13561$1POZIn core-prim . get-string-n)
        (g$13560$1POZIn core-prim . get-string-all)
        (g$13559$1POZIn core-prim . get-line)
        (g$8701$1POZIn core-prim . get-datum)
        (g$13558$1POZIn core-prim . get-char)
        (g$13557$1POZIn core-prim . get-bytevector-some)
        (g$13556$1POZIn core-prim . get-bytevector-n!)
        (g$13555$1POZIn core-prim . get-bytevector-n)
        (g$13554$1POZIn core-prim . get-bytevector-all)
        (g$13553$1POZIn core-prim . flush-output-port)
        (g$13552$1POZIn core-prim . close-port)
        (g$8706$1POZIn core-prim . call-with-string-output-port)
        (g$8707$1POZIn core-prim . call-with-port)
        (g$13551$1POZIn core-prim . call-with-bytevector-output-port)
        (g$13550$1POZIn core-prim . bytevector->string)
        (g$8699$1POZIn core-prim . buffer-mode?)
        (g$13549$1POZIn core-prim . binary-port?)
        (g$10207$1POZIn core-prim . scheme-report-environment)
        (g$6869$1POZIn core-prim . quotient)
        (g$10206$1POZIn core-prim . null-environment)
        (g$6870$1POZIn core-prim . remainder)
        (g$6871$1POZIn core-prim . modulo)
        (g$6866$1POZIn core-prim . inexact->exact)
        (g$6873$1POZIn core-prim . force)
        (g$6867$1POZIn core-prim . exact->inexact)
        (g$13548$1POZIn core-prim . exit)
        (g$13245$1POZIn core-prim . command-line)
        (g$13547$1POZIn core-prim . string-fill!)
        (g$13546$1POZIn core-prim . string-set!)
        (g$13545$1POZIn core-prim . set-cdr!)
        (g$13544$1POZIn core-prim . set-car!)
        (g$5188$1POZIn core-prim . remove)
        (g$5189$1POZIn core-prim . remv)
        (g$5169$1POZIn core-prim . remp)
        (g$5190$1POZIn core-prim . remq)
        (g$5168$1POZIn core-prim . partition)
        (g$5176$1POZIn core-prim . memv)
        (g$5175$1POZIn core-prim . memq)
        (g$5178$1POZIn core-prim . memp)
        (g$5177$1POZIn core-prim . member)
        (g$5182$1POZIn core-prim . exists)
        (g$5181$1POZIn core-prim . for-all)
        (g$5187$1POZIn core-prim . fold-right)
        (g$5186$1POZIn core-prim . fold-left)
        (g$5167$1POZIn core-prim . find)
        (g$5170$1POZIn core-prim . filter)
        (g$5185$1POZIn core-prim . cons*)
        (g$5172$1POZIn core-prim . assv)
        (g$5171$1POZIn core-prim . assq)
        (g$5174$1POZIn core-prim . assp)
        (g$5173$1POZIn core-prim . assoc)
        (g$13543$1POZIn core-prim . with-exception-handler)
        (g$13542$1POZIn core-prim . raise-continuable)
        (g$13541$1POZIn core-prim . raise)
        (g$10209$1POZIn core-prim . eval)
        (g$10205$1POZIn core-prim . environment)
        (g$8793$1POZIn core-prim . make-enumeration)
        (g$8800$1POZIn core-prim . enum-set=?)
        (g$8794$1POZIn core-prim . enum-set-universe)
        (g$8801$1POZIn core-prim . enum-set-union)
        (g$8799$1POZIn core-prim . enum-set-subset?)
        (g$8805$1POZIn core-prim . enum-set-projection)
        (g$8798$1POZIn core-prim . enum-set-member?)
        (g$8802$1POZIn core-prim . enum-set-intersection)
        (g$8795$1POZIn core-prim . enum-set-indexer)
        (g$8803$1POZIn core-prim . enum-set-difference)
        (g$8796$1POZIn core-prim . enum-set-constructor)
        (g$8804$1POZIn core-prim . enum-set-complement)
        (g$8797$1POZIn core-prim . enum-set->list)
        (g$6562$1POZIn core-prim . who-condition?)
        (g$6481$1POZIn core-prim . warning?)
        (g$6520$1POZIn core-prim . violation?)
        (g$6662$1POZIn core-prim . undefined-violation?)
        (g$6647$1POZIn core-prim . syntax-violation?)
        (g$6649$1POZIn core-prim . syntax-violation-subform)
        (g$6648$1POZIn core-prim . syntax-violation-form)
        (g$10227$1POZIn core-prim . syntax-violation)
        (g$13540$1POZIn core-prim . simple-conditions)
        (g$6494$1POZIn core-prim . serious-condition?)
        (g$6606$1POZIn core-prim . non-continuable-violation?)
        (g$6467$1POZIn core-prim . message-condition?)
        (g$6560$1POZIn core-prim . make-who-condition)
        (g$6480$1POZIn core-prim . make-warning)
        (g$6519$1POZIn core-prim . make-violation)
        (g$6661$1POZIn core-prim . make-undefined-violation)
        (g$6644$1POZIn core-prim . make-syntax-violation)
        (g$6493$1POZIn core-prim . make-serious-condition)
        (g$6605$1POZIn core-prim . make-non-continuable-violation)
        (g$6465$1POZIn core-prim . make-message-condition)
        (g$6631$1POZIn core-prim . make-lexical-violation)
        (g$6545$1POZIn core-prim . make-irritants-condition)
        (g$6618$1POZIn
          core-prim
          .
          make-implementation-restriction-violation)
        (g$6506$1POZIn core-prim . make-error)
        (g$6532$1POZIn core-prim . make-assertion-violation)
        (g$6632$1POZIn core-prim . lexical-violation?)
        (g$6547$1POZIn core-prim . irritants-condition?)
        (g$6619$1POZIn
          core-prim
          .
          implementation-restriction-violation?)
        (g$6507$1POZIn core-prim . error?)
        (g$6563$1POZIn core-prim . condition-who)
        (g$13539$1POZIn core-prim . condition-predicate)
        (g$6468$1POZIn core-prim . condition-message)
        (g$6548$1POZIn core-prim . condition-irritants)
        (g$13538$1POZIn core-prim . condition-accessor)
        (g$13537$1POZIn core-prim . condition)
        (g$6533$1POZIn core-prim . assertion-violation?)
        (g$13536$1POZIn core-prim . condition?)
        (g$5864$1POZIn core-prim . utf32->string)
        (g$5863$1POZIn core-prim . utf16->string)
        (g$5861$1POZIn core-prim . utf8->string)
        (g$5865$1POZIn core-prim . uint-list->bytevector)
        (g$5857$1POZIn core-prim . u8-list->bytevector)
        (g$5858$1POZIn core-prim . string->utf8)
        (g$5860$1POZIn core-prim . string->utf32)
        (g$5859$1POZIn core-prim . string->utf16)
        (g$5866$1POZIn core-prim . sint-list->bytevector)
        (g$5832$1POZIn core-prim . native-endianness)
        (g$5522$1POZIn core-prim . bytevector?)
        (g$5848$1POZIn core-prim . bytevector=?)
        (g$13535$1POZIn core-prim . bytevector-uint-set!)
        (g$13534$1POZIn core-prim . bytevector-uint-ref)
        (g$5853$1POZIn core-prim . bytevector-u8-set!)
        (g$5852$1POZIn core-prim . bytevector-u8-ref)
        (g$5894$1POZIn core-prim . bytevector-u64-set!)
        (g$5890$1POZIn core-prim . bytevector-u64-ref)
        (g$5896$1POZIn core-prim . bytevector-u64-native-set!)
        (g$5892$1POZIn core-prim . bytevector-u64-native-ref)
        (g$5886$1POZIn core-prim . bytevector-u32-set!)
        (g$5882$1POZIn core-prim . bytevector-u32-ref)
        (g$5888$1POZIn core-prim . bytevector-u32-native-set!)
        (g$5884$1POZIn core-prim . bytevector-u32-native-ref)
        (g$5878$1POZIn core-prim . bytevector-u16-set!)
        (g$5874$1POZIn core-prim . bytevector-u16-ref)
        (g$5880$1POZIn core-prim . bytevector-u16-native-set!)
        (g$5876$1POZIn core-prim . bytevector-u16-native-ref)
        (g$13533$1POZIn core-prim . bytevector-sint-set!)
        (g$13532$1POZIn core-prim . bytevector-sint-ref)
        (g$5855$1POZIn core-prim . bytevector-s8-set!)
        (g$5854$1POZIn core-prim . bytevector-s8-ref)
        (g$5895$1POZIn core-prim . bytevector-s64-set!)
        (g$5891$1POZIn core-prim . bytevector-s64-ref)
        (g$5897$1POZIn core-prim . bytevector-s64-native-set!)
        (g$5893$1POZIn core-prim . bytevector-s64-native-ref)
        (g$5887$1POZIn core-prim . bytevector-s32-set!)
        (g$5883$1POZIn core-prim . bytevector-s32-ref)
        (g$5889$1POZIn core-prim . bytevector-s32-native-set!)
        (g$5885$1POZIn core-prim . bytevector-s32-native-ref)
        (g$5879$1POZIn core-prim . bytevector-s16-set!)
        (g$5875$1POZIn core-prim . bytevector-s16-ref)
        (g$5881$1POZIn core-prim . bytevector-s16-native-set!)
        (g$5877$1POZIn core-prim . bytevector-s16-native-ref)
        (g$5847$1POZIn core-prim . bytevector-length)
        (g$5872$1POZIn core-prim . bytevector-ieee-single-set!)
        (g$5870$1POZIn core-prim . bytevector-ieee-single-ref)
        (g$5900$1POZIn core-prim . bytevector-ieee-single-native-set!)
        (g$5898$1POZIn core-prim . bytevector-ieee-single-native-ref)
        (g$5873$1POZIn core-prim . bytevector-ieee-double-set!)
        (g$5871$1POZIn core-prim . bytevector-ieee-double-ref)
        (g$5901$1POZIn core-prim . bytevector-ieee-double-native-set!)
        (g$5899$1POZIn core-prim . bytevector-ieee-double-native-ref)
        (g$5849$1POZIn core-prim . bytevector-fill!)
        (g$5850$1POZIn core-prim . bytevector-copy!)
        (g$5851$1POZIn core-prim . bytevector-copy)
        (g$5867$1POZIn core-prim . bytevector->uint-list)
        (g$5856$1POZIn core-prim . bytevector->u8-list)
        (g$5868$1POZIn core-prim . bytevector->sint-list)
        (g$6852$1POZIn core-prim . no-nans-violation?)
        (g$6839$1POZIn core-prim . no-infinities-violation?)
        (g$6851$1POZIn core-prim . make-no-nans-violation)
        (g$6838$1POZIn core-prim . make-no-infinities-violation)
        (g$6140$1POZIn core-prim . real->flonum)
        (g$8137$1POZIn core-prim . flzero?)
        (g$8132$1POZIn core-prim . fltruncate)
        (g$8118$1POZIn core-prim . fltan)
        (g$8123$1POZIn core-prim . flsqrt)
        (g$8116$1POZIn core-prim . flsin)
        (g$8133$1POZIn core-prim . flround)
        (g$8135$1POZIn core-prim . flpositive?)
        (g$5527$1POZIn core-prim . flonum?)
        (g$8139$1POZIn core-prim . flodd?)
        (g$8082$1POZIn core-prim . flnumerator)
        (g$8136$1POZIn core-prim . flnegative?)
        (g$8115$1POZIn core-prim . flnan?)
        (g$8100$1POZIn core-prim . flmod0)
        (g$8099$1POZIn core-prim . flmod)
        (g$8141$1POZIn core-prim . flmin)
        (g$8140$1POZIn core-prim . flmax)
        (g$8122$1POZIn core-prim . fllog)
        (g$8108$1POZIn core-prim . flinteger?)
        (g$8114$1POZIn core-prim . flinfinite?)
        (g$8131$1POZIn core-prim . flfloor)
        (g$8109$1POZIn core-prim . flfinite?)
        (g$8125$1POZIn core-prim . flexpt)
        (g$8124$1POZIn core-prim . flexp)
        (g$8138$1POZIn core-prim . fleven?)
        (g$8107$1POZIn core-prim . fldiv0-and-mod0)
        (g$8094$1POZIn core-prim . fldiv0)
        (g$8101$1POZIn core-prim . fldiv-and-mod)
        (g$8106$1POZIn core-prim . fldiv)
        (g$8081$1POZIn core-prim . fldenominator)
        (g$8117$1POZIn core-prim . flcos)
        (g$8126$1POZIn core-prim . flceiling)
        (g$8121$1POZIn core-prim . flatan)
        (g$8119$1POZIn core-prim . flasin)
        (g$8120$1POZIn core-prim . flacos)
        (g$8134$1POZIn core-prim . flabs)
        (g$8088$1POZIn core-prim . fl>?)
        (g$8089$1POZIn core-prim . fl>=?)
        (g$8085$1POZIn core-prim . fl=?)
        (g$8086$1POZIn core-prim . fl<?)
        (g$8087$1POZIn core-prim . fl<=?)
        (g$8084$1POZIn core-prim . fl/)
        (g$8083$1POZIn core-prim . fl-)
        (g$8079$1POZIn core-prim . fl+)
        (g$8080$1POZIn core-prim . fl*)
        (g$6141$1POZIn core-prim . fixnum->flonum)
        (g$7179$1POZIn core-prim . fxzero?)
        (g$7142$1POZIn core-prim . fxxor)
        (g$7217$1POZIn core-prim . fxrotate-bit-field)
        (g$7218$1POZIn core-prim . fxreverse-bit-field)
        (g$7169$1POZIn core-prim . fxpositive?)
        (g$7189$1POZIn core-prim . fxodd?)
        (g$7123$1POZIn core-prim . fxnot)
        (g$7174$1POZIn core-prim . fxnegative?)
        (g$7153$1POZIn core-prim . fxmod0)
        (g$7152$1POZIn core-prim . fxmod)
        (g$7191$1POZIn core-prim . fxmin)
        (g$7190$1POZIn core-prim . fxmax)
        (g$7120$1POZIn core-prim . fxlength)
        (g$7141$1POZIn core-prim . fxior)
        (g$7199$1POZIn core-prim . fxif)
        (g$7121$1POZIn core-prim . fxfirst-bit-set)
        (g$7184$1POZIn core-prim . fxeven?)
        (g$7164$1POZIn core-prim . fxdiv0-and-mod0)
        (g$7159$1POZIn core-prim . fxdiv0)
        (g$7154$1POZIn core-prim . fxdiv-and-mod)
        (g$7147$1POZIn core-prim . fxdiv)
        (g$7214$1POZIn core-prim . fxcopy-bit-field)
        (g$7204$1POZIn core-prim . fxcopy-bit)
        (g$7122$1POZIn core-prim . fxbit-set?)
        (g$7209$1POZIn core-prim . fxbit-field)
        (g$7115$1POZIn core-prim . fxbit-count)
        (g$7216$1POZIn core-prim . fxarithmetic-shift-right)
        (g$7215$1POZIn core-prim . fxarithmetic-shift-left)
        (g$7110$1POZIn core-prim . fxarithmetic-shift)
        (g$7140$1POZIn core-prim . fxand)
        (g$7132$1POZIn core-prim . fx>?)
        (g$7133$1POZIn core-prim . fx>=?)
        (g$7129$1POZIn core-prim . fx=?)
        (g$7130$1POZIn core-prim . fx<?)
        (g$7131$1POZIn core-prim . fx<=?)
        (g$7193$1POZIn core-prim . fx-/carry)
        (g$7104$1POZIn core-prim . fx-)
        (g$7194$1POZIn core-prim . fx+/carry)
        (g$7102$1POZIn core-prim . fx+)
        (g$7192$1POZIn core-prim . fx*/carry)
        (g$7103$1POZIn core-prim . fx*)
        (g$7073$1POZIn core-prim . greatest-fixnum)
        (g$7074$1POZIn core-prim . least-fixnum)
        (g$5528$1POZIn core-prim . fixnum-width)
        (g$5526$1POZIn core-prim . fixnum?)
        (g$7011$1POZIn core-prim . bitwise-rotate-bit-field)
        (g$13531$1POZIn core-prim . bitwise-reverse-bit-field)
        (g$7002$1POZIn core-prim . bitwise-length)
        (g$7005$1POZIn core-prim . bitwise-if)
        (g$7003$1POZIn core-prim . bitwise-first-bit-set)
        (g$7008$1POZIn core-prim . bitwise-copy-bit-field)
        (g$7006$1POZIn core-prim . bitwise-copy-bit)
        (g$7004$1POZIn core-prim . bitwise-bit-set?)
        (g$7007$1POZIn core-prim . bitwise-bit-field)
        (g$7001$1POZIn core-prim . bitwise-bit-count)
        (g$7000$1POZIn core-prim . bitwise-xor)
        (g$6999$1POZIn core-prim . bitwise-ior)
        (g$6998$1POZIn core-prim . bitwise-and)
        (g$6997$1POZIn core-prim . bitwise-not)
        (g$7010$1POZIn core-prim . bitwise-arithmetic-shift-right)
        (g$7009$1POZIn core-prim . bitwise-arithmetic-shift-left)
        (g$13530$1POZIn core-prim . bitwise-arithmetic-shift)
        (g$6155$1POZIn core-prim . zero?)
        (g$5521$1POZIn core-prim . vector?)
        (g$5537$1POZIn core-prim . vector-set!)
        (g$5536$1POZIn core-prim . vector-ref)
        (g$5600$1POZIn core-prim . vector-map)
        (g$13529$1POZIn core-prim . vector-length)
        (g$5601$1POZIn core-prim . vector-for-each)
        (g$5538$1POZIn core-prim . vector-fill!)
        (g$13528$1POZIn core-prim . vector->list)
        (g$13527$1POZIn core-prim . vector)
        (g$13526$1POZIn core-prim . values)
        (g$6203$1POZIn core-prim . truncate)
        (g$6195$1POZIn core-prim . tan)
        (g$5523$1POZIn core-prim . symbol?)
        (g$5585$1POZIn core-prim . symbol=?)
        (g$13525$1POZIn core-prim . symbol->string)
        (g$13524$1POZIn core-prim . substring)
        (g$13523$1POZIn core-prim . string?)
        (g$5582$1POZIn core-prim . string>?)
        (g$5584$1POZIn core-prim . string>=?)
        (g$5580$1POZIn core-prim . string=?)
        (g$5581$1POZIn core-prim . string<?)
        (g$5583$1POZIn core-prim . string<=?)
        (g$13522$1POZIn core-prim . string-ref)
        (g$13521$1POZIn core-prim . string-length)
        (g$5602$1POZIn core-prim . string-for-each)
        (g$13520$1POZIn core-prim . string-copy)
        (g$13519$1POZIn core-prim . string-append)
        (g$13518$1POZIn core-prim . string->symbol)
        (g$13517$1POZIn core-prim . string->number)
        (g$13516$1POZIn core-prim . string->list)
        (g$13515$1POZIn core-prim . string)
        (g$6205$1POZIn core-prim . sqrt)
        (g$6189$1POZIn core-prim . sin)
        (g$6204$1POZIn core-prim . round)
        (g$5540$1POZIn core-prim . reverse)
        (g$6149$1POZIn core-prim . real?)
        (g$6152$1POZIn core-prim . real-valued?)
        (g$6182$1POZIn core-prim . real-part)
        (g$5597$1POZIn core-prim . rationalize)
        (g$6150$1POZIn core-prim . rational?)
        (g$6153$1POZIn core-prim . rational-valued?)
        (g$5525$1POZIn core-prim . procedure?)
        (g$6156$1POZIn core-prim . positive?)
        (g$13514$1POZIn core-prim . pair?)
        (g$5570$1POZIn core-prim . odd?)
        (g$6180$1POZIn core-prim . numerator)
        (g$6142$1POZIn core-prim . number?)
        (g$13513$1POZIn core-prim . number->string)
        (g$13512$1POZIn core-prim . null?)
        (g$13511$1POZIn core-prim . not)
        (g$6157$1POZIn core-prim . negative?)
        (g$6143$1POZIn core-prim . nan?)
        (g$5572$1POZIn core-prim . min)
        (g$5571$1POZIn core-prim . max)
        (g$5183$1POZIn core-prim . map)
        (g$13510$1POZIn core-prim . make-vector)
        (g$13509$1POZIn core-prim . make-string)
        (g$6175$1POZIn core-prim . make-rectangular)
        (g$6176$1POZIn core-prim . make-polar)
        (g$6178$1POZIn core-prim . magnitude)
        (g$6198$1POZIn core-prim . log)
        (g$13508$1POZIn core-prim . list?)
        (g$5163$1POZIn core-prim . list-tail)
        (g$5164$1POZIn core-prim . list-ref)
        (g$5534$1POZIn core-prim . list->vector)
        (g$5535$1POZIn core-prim . list->string)
        (g$13507$1POZIn core-prim . list)
        (g$13506$1POZIn core-prim . length)
        (g$5574$1POZIn core-prim . lcm)
        (g$6151$1POZIn core-prim . integer?)
        (g$6154$1POZIn core-prim . integer-valued?)
        (g$13505$1POZIn core-prim . integer->char)
        (g$6145$1POZIn core-prim . infinite?)
        (g$6147$1POZIn core-prim . inexact?)
        (g$6158$1POZIn core-prim . inexact)
        (g$6183$1POZIn core-prim . imag-part)
        (g$5573$1POZIn core-prim . gcd)
        (g$5184$1POZIn core-prim . for-each)
        (g$6201$1POZIn core-prim . floor)
        (g$6144$1POZIn core-prim . finite?)
        (g$6207$1POZIn core-prim . expt)
        (g$6188$1POZIn core-prim . exp)
        (g$6146$1POZIn core-prim . exact?)
        (g$6206$1POZIn core-prim . exact-integer-sqrt)
        (g$6159$1POZIn core-prim . exact)
        (g$5569$1POZIn core-prim . even?)
        (g$13504$1POZIn core-prim . error)
        (g$13503$1POZIn core-prim . eqv?)
        (g$13502$1POZIn core-prim . equal?)
        (g$13501$1POZIn core-prim . eq?)
        (g$13500$1POZIn core-prim . dynamic-wind)
        (g$5533$1POZIn core-prim . div0-and-mod0)
        (g$5531$1POZIn core-prim . mod0)
        (g$5529$1POZIn core-prim . div0)
        (g$5532$1POZIn core-prim . div-and-mod)
        (g$5530$1POZIn core-prim . mod)
        (g$6199$1POZIn core-prim . div)
        (g$6181$1POZIn core-prim . denominator)
        (g$6192$1POZIn core-prim . cos)
        (g$13499$1POZIn core-prim . cons)
        (g$6148$1POZIn core-prim . complex?)
        (g$5520$1POZIn core-prim . char?)
        (g$5594$1POZIn core-prim . char>?)
        (g$5596$1POZIn core-prim . char>=?)
        (g$5592$1POZIn core-prim . char=?)
        (g$5593$1POZIn core-prim . char<?)
        (g$5595$1POZIn core-prim . char<=?)
        (g$13498$1POZIn core-prim . char->integer)
        (g$6202$1POZIn core-prim . ceiling)
        (g$13497$1POZIn core-prim . call-with-values)
        (g$13496$1POZIn core-prim . call/cc)
        (g$13495$1POZIn core-prim . call-with-current-continuation)
        (g$5568$1POZIn core-prim . cddddr)
        (g$5567$1POZIn core-prim . cdddar)
        (g$5566$1POZIn core-prim . cddadr)
        (g$5565$1POZIn core-prim . cddaar)
        (g$5564$1POZIn core-prim . cdaddr)
        (g$5563$1POZIn core-prim . cdadar)
        (g$5562$1POZIn core-prim . cdaadr)
        (g$5561$1POZIn core-prim . cdaaar)
        (g$5560$1POZIn core-prim . cadddr)
        (g$5559$1POZIn core-prim . caddar)
        (g$5558$1POZIn core-prim . cadadr)
        (g$5557$1POZIn core-prim . cadaar)
        (g$5556$1POZIn core-prim . caaddr)
        (g$5555$1POZIn core-prim . caadar)
        (g$5554$1POZIn core-prim . caaadr)
        (g$5553$1POZIn core-prim . caaaar)
        (g$5552$1POZIn core-prim . cdddr)
        (g$5551$1POZIn core-prim . cddar)
        (g$5550$1POZIn core-prim . cdadr)
        (g$5549$1POZIn core-prim . cdaar)
        (g$5548$1POZIn core-prim . caddr)
        (g$5547$1POZIn core-prim . cadar)
        (g$5546$1POZIn core-prim . caadr)
        (g$5545$1POZIn core-prim . caaar)
        (g$5544$1POZIn core-prim . cddr)
        (g$5543$1POZIn core-prim . cdar)
        (g$5542$1POZIn core-prim . cadr)
        (g$5541$1POZIn core-prim . caar)
        (g$13494$1POZIn core-prim . cdr)
        (g$13493$1POZIn core-prim . car)
        (g$5524$1POZIn core-prim . boolean?)
        (g$5586$1POZIn core-prim . boolean=?)
        (g$6197$1POZIn core-prim . atan)
        (g$13492$1POZIn core-prim . assertion-violation)
        (g$6190$1POZIn core-prim . asin)
        (g$13491$1POZIn core-prim . apply)
        (g$13490$1POZIn core-prim . append)
        (g$6177$1POZIn core-prim . angle)
        (g$6193$1POZIn core-prim . acos)
        (g$6200$1POZIn core-prim . abs)
        (g$13489$1POZIn core-prim . /)
        (g$13488$1POZIn core-prim . *)
        (g$13487$1POZIn core-prim . -)
        (g$13486$1POZIn core-prim . +)
        (g$6174$1POZIn core-prim . >=)
        (g$6173$1POZIn core-prim . >)
        (g$6170$1POZIn core-prim . =)
        (g$6172$1POZIn core-prim . <=)
        (g$6171$1POZIn core-prim . <)
        (g$13485$1POZIn core-prim . $bytevector-set!)
        (g$13484$1POZIn core-prim . $bytevector-ref)
        (g$13483$1POZIn core-prim . $fl>=?)
        (g$13482$1POZIn core-prim . $fl>?)
        (g$13481$1POZIn core-prim . $fl<=?)
        (g$13480$1POZIn core-prim . $fl<?)
        (g$13479$1POZIn core-prim . $fl-)
        (g$13478$1POZIn core-prim . $fl/)
        (g$13477$1POZIn core-prim . $fl*)
        (g$13476$1POZIn core-prim . $fl+)
        (g$13475$1POZIn core-prim . $fl=?)
        (g$13474$1POZIn core-prim . $try)
        (g$13473$1POZIn core-prim . $fxarithmetic-shift-right)
        (g$13472$1POZIn core-prim . $fxarithmetic-shift-left)
        (g$13471$1POZIn core-prim . $$fx-)
        (g$13470$1POZIn core-prim . $$fx*)
        (g$13469$1POZIn core-prim . $$fx+)
        (g$13468$1POZIn core-prim . $fxnot)
        (g$13467$1POZIn core-prim . $fxxor)
        (g$13466$1POZIn core-prim . $fxior)
        (g$13465$1POZIn core-prim . $fxand)
        (g$13464$1POZIn core-prim . $fx>=?)
        (g$13463$1POZIn core-prim . $fx>?)
        (g$13462$1POZIn core-prim . $fx<=?)
        (g$13461$1POZIn core-prim . $fx<?)
        (g$13460$1POZIn core-prim . $fx-)
        (g$13459$1POZIn core-prim . $fxmod0)
        (g$13458$1POZIn core-prim . $fxdiv0)
        (g$13457$1POZIn core-prim . $fx*)
        (g$13456$1POZIn core-prim . $fx+)
        (g$13455$1POZIn core-prim . $fx=?)
        (g$13454$1POZIn core-prim . $vector-set!)
        (g$13453$1POZIn core-prim . $vector-ref)
        (g$13452$1POZIn core-prim . $cdr)
        (g$13451$1POZIn core-prim . $car)
        (g$13450$1POZIn core-prim . make-record-printer)
        (g$13449$1POZIn core-prim . eqv-hash)
        (g$13448$1POZIn core-prim . reverse!)
        (g$13447$1POZIn core-prim . deserialize-port)
        (g$13446$1POZIn core-prim . serialize-port)
        (g$8770$1POZIn core-prim . enum-set?)
        (g$6872$1POZIn core-prim . make-promise)
        (g$13249$1POZIn core-prim . load/unload)
        (g$13248$1POZIn core-prim . load/args)
        (g$8879$1POZIn core-prim . printf)
        (g$8880$1POZIn core-prim . fprintf)
        (g$8881$1POZIn core-prim . format)
        (g$13445$1POZIn core-prim . procedure-form)
        (g$13444$1POZIn core-prim . procedure-environment)
        (g$13443$1POZIn core-prim . procedure-name)
        (g$13442$1POZIn core-prim . procedure-arity)
        (g$13441$1POZIn core-prim . gc-collect)
        (g$13440$1POZIn core-prim . typeof)
        (g$13439$1POZIn core-prim . clr-type?)
        (g$13438$1POZIn core-prim . get-clr-type)
        (g$13437$1POZIn core-prim . get-command-line)
        (g$13436$1POZIn core-prim . vector-append)
        (g$13435$1POZIn core-prim . vector-filter)
        (g$13434$1POZIn core-prim . vector-reverse!)
        (g$13433$1POZIn core-prim . vector-contains?)
        (g$13432$1POZIn core-prim . vector-index-of)
        (g$13431$1POZIn core-prim . vector-copy)
        (g$13430$1POZIn core-prim . vector-binary-search)
        (g$13429$1POZIn core-prim . string-ci-compare)
        (g$13428$1POZIn core-prim . string-compare)
        (g$13427$1POZIn core-prim . string-format)
        (g$13244$1POZIn core-prim . trace-printer)
        (g$13426$1POZIn core-prim . make-traced-procedure)
        (g$8901$1POZIn core-prim . make-traced-macro)
        (g$10223$1POZIn core-prim . assertion-error)
        (g$13425$1POZIn core-prim . time-it)
        (g$8908$1POZIn core-prim . make-parameter)
        (g$13424$1POZIn core-prim . library-locator)
        (g$13423$1POZIn core-prim . get-library-paths)
        (g$13422$1POZIn core-prim . open-tcp-input/output-port)
        (g$13421$1POZIn core-prim . hashtable-for-each)
        (g$13420$1POZIn core-prim . hashtable-map)
        (g$10201$1POZIn core-prim . environment-bindings)
        (g$10204$1POZIn core-prim . environment-symbols)
        (g$10200$1POZIn core-prim . interaction-environment-symbols)
        (g$13419$1POZIn core-prim . optimization-level)
        (g$9530$1POZIn core-prim . library-path)
        (g$9909$1POZIn core-prim . make-compile-time-value)
        (g$10210$1POZIn core-prim . expand->core)
        (g$10208$1POZIn core-prim . expand)
        (g$13246$1POZIn core-prim . emacs-mode?)
        (g$10147$1POZIn core-prim . syntax-transpose)
        (g$9227$1POZIn core-prim . convert->cps)
        (g$13418$1POZIn core-prim . inexact=?)
        (g$13417$1POZIn core-prim . bignum-sqrt-exact)
        (g$13416$1POZIn core-prim . bignum-sqrt)
        (g$13415$1POZIn core-prim . inexact-compare)
        (g$13414$1POZIn core-prim . exact-compare)
        (g$13413$1POZIn core-prim . condition-stacktrace)
        (g$6592$1POZIn core-prim . stacktrace-condition?)
        (g$6590$1POZIn core-prim . make-stacktrace-condition)
        (g$13412$1POZIn core-prim . condition-where)
        (g$6577$1POZIn core-prim . where-condition?)
        (g$6575$1POZIn core-prim . make-where-condition)
        (g$9551$1POZIn core-prim . installed-libraries)
        (g$9542$1POZIn core-prim . uninstall-library)
        (g$8991$1POZIn core-prim . pretty-gensyms)
        (g$8988$1POZIn core-prim . pretty-width)
        (g$8993$1POZIn core-prim . pretty-print)
        (g$13411$1POZIn core-prim . pointer+)
        (g$13410$1POZIn $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$13409$1POZIn $core-rtd &where-rtd &where-rcd)
        (g$13408$1POZIn $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13407$1POZIn $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13406$1POZIn $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13405$1POZIn $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13404$1POZIn $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13403$1POZIn
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13402$1POZIn
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13401$1POZIn
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13400$1POZIn
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13399$1POZIn $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13398$1POZIn
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13397$1POZIn $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13396$1POZIn $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13395$1POZIn $core-rtd &i/o-rtd &i/o-rcd)
        (g$13394$1POZIn
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13393$1POZIn $core-rtd &undefined-rtd &undefined-rcd)
        (g$13392$1POZIn $core-rtd &syntax-rtd &syntax-rcd)
        (g$13391$1POZIn $core-rtd &lexical-rtd &lexical-rcd)
        (g$13390$1POZIn
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13389$1POZIn $core-rtd &who-rtd &who-rcd)
        (g$13388$1POZIn $core-rtd &irritants-rtd &irritants-rcd)
        (g$13387$1POZIn $core-rtd &assertion-rtd &assertion-rcd)
        (g$13386$1POZIn $core-rtd &violation-rtd &violation-rcd)
        (g$13385$1POZIn $core-rtd &error-rtd &error-rcd)
        (g$13384$1POZIn $core-rtd &serious-rtd &serious-rcd)
        (g$13383$1POZIn $core-rtd &warning-rtd &warning-rcd)
        (g$13382$1POZIn $core-rtd &message-rtd &message-rcd)
        (g$13381$1POZIn $core-rtd &condition-rtd &condition-rcd)
        (g$13380$1POZIn macro . define-condition-type)
        (g$13379$1POZIn macro . define-enumeration)
        (g$13378$1POZIn macro . define-record-type)
        (g$13377$1POZIn macro . parent-rtd)
        (g$13376$1POZIn macro . nongenerative)
        (g$13375$1POZIn macro . opaque)
        (g$13374$1POZIn macro . sealed)
        (g$13373$1POZIn macro . protocol)
        (g$13372$1POZIn macro . parent)
        (g$13371$1POZIn macro . immutable)
        (g$13370$1POZIn macro . mutable)
        (g$13369$1POZIn macro . fields)
        (g$13368$1POZIn macro . error-handling-mode)
        (g$13367$1POZIn macro . file-options)
        (g$13366$1POZIn macro . buffer-mode)
        (g$13365$1POZIn macro . eol-style)
        (g$13364$1POZIn macro . guard)
        (g$13363$1POZIn macro . trace-letrec-syntax)
        (g$13362$1POZIn macro . trace-let-syntax)
        (g$13361$1POZIn macro . trace-define-syntax)
        (g$13360$1POZIn macro . trace-define)
        (g$13359$1POZIn macro . trace-lambda)
        (g$13358$1POZIn macro . unsyntax-splicing)
        (g$13357$1POZIn macro . unsyntax)
        (g$13356$1POZIn macro . unquote-splicing)
        (g$13355$1POZIn macro . unquote)
        (g$13354$1POZIn macro . _)
        (g$13353$1POZIn macro . else)
        (g$13352$1POZIn macro . =>)
        (g$13351$1POZIn macro . ...)
        (g$13350$1POZIn macro . assert)
        (g$13349$1POZIn macro . endianness)
        (g$13348$1POZIn macro . delay)
        (g$13347$1POZIn macro . time)
        (g$13346$1POZIn macro . or)
        (g$13345$1POZIn macro . and)
        (g$13344$1POZIn macro . do)
        (g$13343$1POZIn macro . cond)
        (g$13342$1POZIn macro . let*)
        (g$13341$1POZIn macro . let)
        (g$13340$1POZIn macro . identifier-syntax)
        (g$13339$1POZIn macro . with-syntax)
        (g$13338$1POZIn macro . quasisyntax)
        (g$13337$1POZIn macro . quasiquote)
        (g$13336$1POZIn macro . syntax-rules)
        (g$13335$1POZIn macro . include-into)
        (g$13334$1POZIn macro . include)
        (g$13333$1POZIn macro . define-struct)
        (g$13332$1POZIn macro . let-values)
        (g$13331$1POZIn macro . let*-values)
        (g$13330$1POZIn core-macro . record-constructor-descriptor)
        (g$13329$1POZIn core-macro . record-type-descriptor)
        (g$13328$1POZIn core-macro . fluid-let-syntax)
        (g$13327$1POZIn macro . case)
        (g$13326$1POZIn macro . parameterize)
        (g$13325$1POZIn macro . unless)
        (g$13324$1POZIn macro . when)
        (g$13323$1POZIn core-macro . if)
        (g$13322$1POZIn core-macro . letrec*)
        (g$13321$1POZIn core-macro . letrec)
        (g$13320$1POZIn core-macro . type-descriptor)
        (g$13319$1POZIn core-macro . case-lambda)
        (g$13318$1POZIn core-macro . lambda)
        (g$13317$1POZIn core-macro . syntax)
        (g$13316$1POZIn core-macro . syntax-case)
        (g$13315$1POZIn core-macro . quote)
        (g$13314$1POZIn core-macro . foreign-call)
        (g$13313$1POZIn letrec-syntax)
        (g$13312$1POZIn let-syntax)
        (g$13311$1POZIn set!)
        (g$13310$1POZIn export)
        (g$13309$1POZIn import)
        (g$13308$1POZIn library)
        (g$13307$1POZIn begin)
        (g$13306$1POZIn module)
        (g$13305$1POZIn define-syntax)
        (g$13304$1POZIn define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$19819$1POZIn
      'g$13734$1POZIn
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13672$1POZIn)
        (eval-core . g$13671$1POZIn)
        (set-symbol-value! . g$13669$1POZIn)
        (symbol-value . g$13668$1POZIn)
        (gensym . g$13665$1POZIn)
        (void . g$13664$1POZIn))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$24330$1POZIn
     g$trace-printer$24397$1POZIn
     (g$make-parameter$18976$1POZIn g$pretty-print$19186$1POZIn))
   (g$command-line$24331$1POZIn
     g$command-line$24398$1POZIn
     (g$make-parameter$18976$1POZIn (get-command-line)))
   (g$emacs-mode?$24332$1POZIn
     g$emacs-mode?$24399$1POZIn
     (g$make-parameter$18976$1POZIn '#f))
   (g$local-library-path$24333$1POZIn
     g$local-library-path$24400$1POZIn
     (case-lambda
       ((g$filename$24348$1POZIn)
        (cons
          (g$get-directory-name$12792$1POZIn g$filename$24348$1POZIn)
          (g$library-path$19803$1POZIn)))))
   (g$load/args$24334$1POZIn
     g$load/args$24401$1POZIn
     (case-lambda
       ((g$filename$24349$1POZIn . g$args$24350$1POZIn)
        (begin
          (apply
            g$load-r6rs-top-level$24345$1POZIn
            g$filename$24349$1POZIn
            'load
            g$args$24350$1POZIn)
          (void)))))
   (g$load/unload$24335$1POZIn
     g$load/unload$24402$1POZIn
     (case-lambda
       ((g$filename$24351$1POZIn)
        ((case-lambda
           ((g$libs$24352$1POZIn)
            (begin
              (g$load$24336$1POZIn g$filename$24351$1POZIn)
              (g$for-each$11834$1POZIn
                (case-lambda
                  ((g$lib$24353$1POZIn)
                   (if (not (g$memq$11825$1POZIn
                              g$lib$24353$1POZIn
                              g$libs$24352$1POZIn))
                     (g$uninstall-library$19815$1POZIn
                       g$lib$24353$1POZIn)
                     (void))))
                (g$installed-libraries$19824$1POZIn)))))
         (g$installed-libraries$19824$1POZIn)))))
   (g$load$24336$1POZIn
     g$load$24403$1POZIn
     (case-lambda
       ((g$filename$24354$1POZIn)
        (begin
          (apply
            g$load-r6rs-top-level$24345$1POZIn
            g$filename$24354$1POZIn
            'load
            (cdr (g$command-line$24331$1POZIn)))
          (void)))))
   (g$ironscheme-test$24337$1POZIn
     g$ironscheme-test$24404$1POZIn
     (case-lambda (() (g$load$24336$1POZIn '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$24338$1POZIn
     g$ironscheme-build$24405$1POZIn
     (case-lambda
       (() (g$ironscheme-build$24338$1POZIn '#f))
       ((g$cps?$24355$1POZIn)
        (begin
          (g$call-with-output-file$18592$1POZIn
            '"build-options.ss"
            (case-lambda
              ((g$p$24356$1POZIn)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$24355$1POZIn)
                   g$p$24356$1POZIn)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$24355$1POZIn))
                   g$p$24356$1POZIn)
                 (g$newline$18593$1POZIn g$p$24356$1POZIn)))))
          (g$load$24336$1POZIn '"ironscheme-buildscript.ss")))))
   (g$foreground-color$24339$1POZIn
     g$foreground-color$24406$1POZIn
     (case-lambda
       (()
        (if (not (g$emacs-mode?$24332$1POZIn))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$24357$1POZIn)
        (if (not (g$emacs-mode?$24332$1POZIn))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$24357$1POZIn))
          '#f))))
   (g$system-exception?$24340$1POZIn
     g$system-exception?$24407$1POZIn
     (case-lambda
       ((g$e$24358$1POZIn)
        (clr-is-internal 'SystemException g$e$24358$1POZIn))))
   (g$eval-top-level$24341$1POZIn
     g$eval-top-level$24408$1POZIn
     (case-lambda
       ((g$x$24359$1POZIn)
        (call/cc
          (case-lambda
            ((g$k$24360$1POZIn)
             (with-exception-handler
               (case-lambda
                 ((g$e$24361$1POZIn)
                  ((case-lambda
                     ((g$serious?$24362$1POZIn)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$24367$1POZIn
                              g$current-output-port$24368$1POZIn
                              g$foreground-color$24369$1POZIn
                              g$current-output-port$24370$1POZIn)
                            ((case-lambda
                               ((g$swap$24371$1POZIn)
                                (dynamic-wind
                                  g$swap$24371$1POZIn
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$24362$1POZIn
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$24361$1POZIn)
                                       (g$newline$18593$1POZIn))))
                                  g$swap$24371$1POZIn)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$24372$1POZIn)
                                      (begin
                                        (g$foreground-color$24367$1POZIn
                                          g$foreground-color$24369$1POZIn)
                                        (set! g$foreground-color$24369$1POZIn
                                          g$t$24372$1POZIn))))
                                   (g$foreground-color$24367$1POZIn))
                                  ((case-lambda
                                     ((g$t$24373$1POZIn)
                                      (begin
                                        (g$current-output-port$24368$1POZIn
                                          g$current-output-port$24370$1POZIn)
                                        (set! g$current-output-port$24370$1POZIn
                                          g$t$24373$1POZIn))))
                                   (g$current-output-port$24368$1POZIn))))))))
                         g$foreground-color$24339$1POZIn
                         current-output-port
                         (if g$serious?$24362$1POZIn 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$24362$1POZIn
                          (g$k$24360$1POZIn)
                          (void)))))
                   ((case-lambda
                      ((g$t$24374$1POZIn)
                       (if g$t$24374$1POZIn
                         g$t$24374$1POZIn
                         (begin
                           '#f
                           (g$system-exception?$24340$1POZIn
                             g$e$24361$1POZIn)))))
                    (g$serious-condition?$14110$1POZIn
                      g$e$24361$1POZIn)))))
               (case-lambda
                 (()
                  (g$eval$24303$1POZIn
                    g$x$24359$1POZIn
                    (g$interaction-environment$24328$1POZIn)))))))))))
   (g$compile-system-libraries$24342$1POZIn
     g$compile-system-libraries$24409$1POZIn
     (case-lambda
       (()
        (g$eval-top-level$24341$1POZIn
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$24343$1POZIn
     g$compile$24410$1POZIn
     (case-lambda
       ((g$filename$24375$1POZIn)
        (g$load-r6rs-top-level$24345$1POZIn
          g$filename$24375$1POZIn
          'compile))))
   (g$compile->closure$24344$1POZIn
     g$compile->closure$24411$1POZIn
     (case-lambda
       ((g$filename$24376$1POZIn)
        (g$load-r6rs-top-level$24345$1POZIn
          g$filename$24376$1POZIn
          'closure))))
   (g$load-r6rs-top-level$24345$1POZIn
     g$load-r6rs-top-level$24412$1POZIn
     (case-lambda
       ((g$filename$24377$1POZIn
          g$how$24378$1POZIn
          .
          g$args$24379$1POZIn)
        ((case-lambda
           ((g$library-path$24382$1POZIn g$library-path$24383$1POZIn)
            ((case-lambda
               ((g$swap$24384$1POZIn)
                (dynamic-wind
                  g$swap$24384$1POZIn
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$24385$1POZIn)
                         ((case-lambda
                            ((g$t$24386$1POZIn)
                             (if (eqv? g$t$24386$1POZIn 'closure)
                               (g$pre-compile-r6rs-top-level$24326$1POZIn
                                 g$x*$24385$1POZIn)
                               (if (eqv? g$t$24386$1POZIn 'load)
                                 ((case-lambda
                                    ((g$command-line$24389$1POZIn
                                       g$command-line$24390$1POZIn)
                                     ((case-lambda
                                        ((g$swap$24391$1POZIn)
                                         (dynamic-wind
                                           g$swap$24391$1POZIn
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$24325$1POZIn
                                                 g$x*$24385$1POZIn))))
                                           g$swap$24391$1POZIn)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$24392$1POZIn)
                                             (begin
                                               (g$command-line$24389$1POZIn
                                                 g$command-line$24390$1POZIn)
                                               (set! g$command-line$24390$1POZIn
                                                 g$t$24392$1POZIn))))
                                          (g$command-line$24389$1POZIn)))))))
                                  g$command-line$24331$1POZIn
                                  (cons
                                    g$filename$24377$1POZIn
                                    (g$map$11833$1POZIn
                                      (case-lambda
                                        ((g$x$24393$1POZIn)
                                         (g$format$18767$1POZIn
                                           '"~a"
                                           g$x$24393$1POZIn)))
                                      g$args$24379$1POZIn)))
                                 (if (eqv? g$t$24386$1POZIn 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$24325$1POZIn
                                       g$x*$24385$1POZIn)
                                     (g$serialize-all$19807$1POZIn
                                       serialize-library
                                       g$compile-core-expr$19554$1POZIn))
                                   (if '#f '#f (void)))))))
                          g$how$24378$1POZIn)))
                      (g$with-input-from-file$18589$1POZIn
                        g$filename$24377$1POZIn
                        (case-lambda
                          (()
                           ((letrec ((g$f$24394$1POZIn
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$24395$1POZIn)
                                              (if (eof-object?
                                                    g$x$24395$1POZIn)
                                                '()
                                                (cons
                                                  g$x$24395$1POZIn
                                                  (g$f$24394$1POZIn)))))
                                           (read-annotated))))))
                              g$f$24394$1POZIn))))))))
                  g$swap$24384$1POZIn)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$24396$1POZIn)
                    (begin
                      (g$library-path$24382$1POZIn
                        g$library-path$24383$1POZIn)
                      (set! g$library-path$24383$1POZIn
                        g$t$24396$1POZIn))))
                 (g$library-path$24382$1POZIn)))))))
         g$library-path$19803$1POZIn
         (g$local-library-path$24333$1POZIn g$filename$24377$1POZIn)))))
   (g$fo$24346$1POZIn
     g$fo$24413$1POZIn
     (g$make-enumeration$18729$1POZIn
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$19808$1POZIn
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$24347$1POZIn)
         (if (g$serious-condition?$14110$1POZIn g$ex$24347$1POZIn)
           (raise g$ex$24347$1POZIn)
           (begin
             '#f
             (display g$ex$24347$1POZIn)
             (g$newline$18593$1POZIn))))))
    (set-symbol-value! 'load g$load$24336$1POZIn)
    (set-symbol-value! 'compile g$compile$24343$1POZIn)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$24344$1POZIn)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$24341$1POZIn)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$24294$1POZIn)
    (set-symbol-value! 'expanded2core g$expanded->core$19553$1POZIn)
    (set-symbol-value! 'trace-printer g$trace-printer$24330$1POZIn)
    (set-symbol-value! 'convert->cps g$convert->cps$19504$1POZIn)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$24332$1POZIn)
    (g$file-options-constructor$18977$1POZIn
      (g$enum-set-constructor$18732$1POZIn g$fo$24346$1POZIn))
    (g$library-path$19803$1POZIn (get-library-paths))
    (g$library-extensions$19804$1POZIn
      (cons '".ironscheme.sls" (g$library-extensions$19804$1POZIn)))
    (g$interaction-environment$24328$1POZIn
      (g$new-interaction-environment$24327$1POZIn))))

