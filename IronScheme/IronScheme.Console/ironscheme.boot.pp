;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$19985$1a@gJ
     g$list-tail$20175$1a@gJ
     (case-lambda
       ((g$lst$20016$1a@gJ g$index$20017$1a@gJ)
        (if ((case-lambda
               ((g$t$20018$1a@gJ)
                (if g$t$20018$1a@gJ
                  g$t$20018$1a@gJ
                  (begin
                    '#f
                    (g$negative?$21662$1a@gJ g$index$20017$1a@gJ)))))
             (null? g$lst$20016$1a@gJ))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$20016$1a@gJ
            g$index$20017$1a@gJ)
          (if (g$zero?$21660$1a@gJ g$index$20017$1a@gJ)
            g$lst$20016$1a@gJ
            (begin
              '#f
              (g$list-tail$19985$1a@gJ
                (cdr g$lst$20016$1a@gJ)
                (- g$index$20017$1a@gJ '1))))))))
   (g$list-ref$19986$1a@gJ
     g$list-ref$20176$1a@gJ
     (case-lambda
       ((g$lst$20019$1a@gJ g$index$20020$1a@gJ)
        (car (g$list-tail$19985$1a@gJ
               g$lst$20019$1a@gJ
               g$index$20020$1a@gJ)))))
   (g$last-pair$19987$1a@gJ
     g$last-pair$20177$1a@gJ
     (case-lambda
       ((g$lst$20021$1a@gJ)
        (if (null? g$lst$20021$1a@gJ)
          g$lst$20021$1a@gJ
          (if (null? (cdr g$lst$20021$1a@gJ))
            g$lst$20021$1a@gJ
            (begin
              '#f
              (g$last-pair$19987$1a@gJ (cdr g$lst$20021$1a@gJ))))))))
   (g$make-list$19988$1a@gJ
     g$make-list$20178$1a@gJ
     (case-lambda
       ((g$n$20022$1a@gJ)
        (g$vector->list$20654$1a@gJ
          (g$make-vector$20651$1a@gJ g$n$20022$1a@gJ)))
       ((g$n$20023$1a@gJ g$fill$20024$1a@gJ)
        (g$vector->list$20654$1a@gJ
          (g$make-vector$20651$1a@gJ
            g$n$20023$1a@gJ
            g$fill$20024$1a@gJ)))))
   (g$find$19989$1a@gJ
     g$find$20179$1a@gJ
     (case-lambda
       ((g$proc$20025$1a@gJ g$l$20026$1a@gJ)
        (if (null? g$l$20026$1a@gJ)
          '#f
          ((case-lambda
             ((g$e$20027$1a@gJ g$r$20028$1a@gJ g$proc$20029$1a@gJ)
              (if (g$proc$20029$1a@gJ g$e$20027$1a@gJ)
                g$e$20027$1a@gJ
                (g$find$19989$1a@gJ
                  g$proc$20029$1a@gJ
                  g$r$20028$1a@gJ))))
           (car g$l$20026$1a@gJ)
           (cdr g$l$20026$1a@gJ)
           g$proc$20025$1a@gJ)))))
   (g$partition$19990$1a@gJ
     g$partition$20180$1a@gJ
     (case-lambda
       ((g$proc$20030$1a@gJ g$l$20031$1a@gJ)
        ((letrec ((g$f$20032$1a@gJ
                    (case-lambda
                      ((g$l$20033$1a@gJ g$a$20034$1a@gJ g$b$20035$1a@gJ)
                       (if (null? g$l$20033$1a@gJ)
                         (values
                           (reverse! g$a$20034$1a@gJ)
                           (reverse! g$b$20035$1a@gJ))
                         ((case-lambda
                            ((g$e$20036$1a@gJ)
                             (if (g$proc$20030$1a@gJ g$e$20036$1a@gJ)
                               (g$f$20032$1a@gJ
                                 (cdr g$l$20033$1a@gJ)
                                 (cons g$e$20036$1a@gJ g$a$20034$1a@gJ)
                                 g$b$20035$1a@gJ)
                               (g$f$20032$1a@gJ
                                 (cdr g$l$20033$1a@gJ)
                                 g$a$20034$1a@gJ
                                 (cons
                                   g$e$20036$1a@gJ
                                   g$b$20035$1a@gJ)))))
                          (car g$l$20033$1a@gJ)))))))
           g$f$20032$1a@gJ)
         g$l$20031$1a@gJ
         '()
         '()))))
   (g$remp$19991$1a@gJ
     g$remp$20181$1a@gJ
     (case-lambda
       ((g$proc$20037$1a@gJ g$l$20038$1a@gJ)
        ((letrec ((g$f$20039$1a@gJ
                    (case-lambda
                      ((g$l$20040$1a@gJ g$a$20041$1a@gJ)
                       (if (null? g$l$20040$1a@gJ)
                         (reverse! g$a$20041$1a@gJ)
                         ((case-lambda
                            ((g$e$20042$1a@gJ)
                             (if (g$proc$20037$1a@gJ g$e$20042$1a@gJ)
                               (g$f$20039$1a@gJ
                                 (cdr g$l$20040$1a@gJ)
                                 g$a$20041$1a@gJ)
                               (g$f$20039$1a@gJ
                                 (cdr g$l$20040$1a@gJ)
                                 (cons
                                   g$e$20042$1a@gJ
                                   g$a$20041$1a@gJ)))))
                          (car g$l$20040$1a@gJ)))))))
           g$f$20039$1a@gJ)
         g$l$20038$1a@gJ
         '()))))
   (g$filter$19992$1a@gJ
     g$filter$20182$1a@gJ
     (case-lambda
       ((g$proc$20043$1a@gJ g$l$20044$1a@gJ)
        ((letrec ((g$f$20045$1a@gJ
                    (case-lambda
                      ((g$l$20046$1a@gJ g$a$20047$1a@gJ)
                       (if (null? g$l$20046$1a@gJ)
                         (reverse! g$a$20047$1a@gJ)
                         ((case-lambda
                            ((g$e$20048$1a@gJ)
                             (if (g$proc$20043$1a@gJ g$e$20048$1a@gJ)
                               (g$f$20045$1a@gJ
                                 (cdr g$l$20046$1a@gJ)
                                 (cons g$e$20048$1a@gJ g$a$20047$1a@gJ))
                               (g$f$20045$1a@gJ
                                 (cdr g$l$20046$1a@gJ)
                                 g$a$20047$1a@gJ))))
                          (car g$l$20046$1a@gJ)))))))
           g$f$20045$1a@gJ)
         g$l$20044$1a@gJ
         '()))))
   (g$assq$19993$1a@gJ
     g$assq$20183$1a@gJ
     (case-lambda
       ((g$obj$20049$1a@gJ g$lst$20050$1a@gJ)
        (if (null? g$lst$20050$1a@gJ)
          '#f
          ((case-lambda
             ((g$obj$20051$1a@gJ g$t$20052$1a@gJ g$r$20053$1a@gJ)
              (if (eq? g$obj$20051$1a@gJ (car g$t$20052$1a@gJ))
                g$t$20052$1a@gJ
                (g$assq$19993$1a@gJ
                  g$obj$20051$1a@gJ
                  g$r$20053$1a@gJ))))
           g$obj$20049$1a@gJ
           (car g$lst$20050$1a@gJ)
           (cdr g$lst$20050$1a@gJ))))))
   (g$assv$19994$1a@gJ
     g$assv$20184$1a@gJ
     (case-lambda
       ((g$obj$20054$1a@gJ g$lst$20055$1a@gJ)
        (if (null? g$lst$20055$1a@gJ)
          '#f
          ((case-lambda
             ((g$obj$20056$1a@gJ g$t$20057$1a@gJ g$r$20058$1a@gJ)
              (if (eqv? g$obj$20056$1a@gJ (car g$t$20057$1a@gJ))
                g$t$20057$1a@gJ
                (g$assv$19994$1a@gJ
                  g$obj$20056$1a@gJ
                  g$r$20058$1a@gJ))))
           g$obj$20054$1a@gJ
           (car g$lst$20055$1a@gJ)
           (cdr g$lst$20055$1a@gJ))))))
   (g$assoc$19995$1a@gJ
     g$assoc$20185$1a@gJ
     (case-lambda
       ((g$obj$20059$1a@gJ g$lst$20060$1a@gJ)
        (if (null? g$lst$20060$1a@gJ)
          '#f
          ((case-lambda
             ((g$obj$20061$1a@gJ g$t$20062$1a@gJ g$r$20063$1a@gJ)
              (if (g$equal?$27047$1a@gJ
                    g$obj$20061$1a@gJ
                    (car g$t$20062$1a@gJ))
                g$t$20062$1a@gJ
                (g$assoc$19995$1a@gJ
                  g$obj$20061$1a@gJ
                  g$r$20063$1a@gJ))))
           g$obj$20059$1a@gJ
           (car g$lst$20060$1a@gJ)
           (cdr g$lst$20060$1a@gJ))))))
   (g$assp$19996$1a@gJ
     g$assp$20186$1a@gJ
     (case-lambda
       ((g$p?$20064$1a@gJ g$lst$20065$1a@gJ)
        (if (null? g$lst$20065$1a@gJ)
          '#f
          ((case-lambda
             ((g$p?$20066$1a@gJ g$t$20067$1a@gJ g$r$20068$1a@gJ)
              (if (g$p?$20066$1a@gJ (car g$t$20067$1a@gJ))
                g$t$20067$1a@gJ
                (g$assp$19996$1a@gJ g$p?$20066$1a@gJ g$r$20068$1a@gJ))))
           g$p?$20064$1a@gJ
           (car g$lst$20065$1a@gJ)
           (cdr g$lst$20065$1a@gJ))))))
   (g$memq$19997$1a@gJ
     g$memq$20187$1a@gJ
     (case-lambda
       ((g$obj$20069$1a@gJ g$lst$20070$1a@gJ)
        (if (null? g$lst$20070$1a@gJ)
          '#f
          (if (eq? g$obj$20069$1a@gJ (car g$lst$20070$1a@gJ))
            g$lst$20070$1a@gJ
            (g$memq$19997$1a@gJ
              g$obj$20069$1a@gJ
              (cdr g$lst$20070$1a@gJ)))))))
   (g$memv$19998$1a@gJ
     g$memv$20188$1a@gJ
     (case-lambda
       ((g$obj$20071$1a@gJ g$lst$20072$1a@gJ)
        (if (null? g$lst$20072$1a@gJ)
          '#f
          (if (eqv? g$obj$20071$1a@gJ (car g$lst$20072$1a@gJ))
            g$lst$20072$1a@gJ
            (g$memv$19998$1a@gJ
              g$obj$20071$1a@gJ
              (cdr g$lst$20072$1a@gJ)))))))
   (g$member$19999$1a@gJ
     g$member$20189$1a@gJ
     (case-lambda
       ((g$obj$20073$1a@gJ g$lst$20074$1a@gJ)
        (if (null? g$lst$20074$1a@gJ)
          '#f
          (if (g$equal?$27047$1a@gJ
                g$obj$20073$1a@gJ
                (car g$lst$20074$1a@gJ))
            g$lst$20074$1a@gJ
            (g$member$19999$1a@gJ
              g$obj$20073$1a@gJ
              (cdr g$lst$20074$1a@gJ)))))))
   (g$memp$20000$1a@gJ
     g$memp$20190$1a@gJ
     (case-lambda
       ((g$p?$20075$1a@gJ g$lst$20076$1a@gJ)
        (if (null? g$lst$20076$1a@gJ)
          '#f
          (if (g$p?$20075$1a@gJ (car g$lst$20076$1a@gJ))
            g$lst$20076$1a@gJ
            (g$memp$20000$1a@gJ
              g$p?$20075$1a@gJ
              (cdr g$lst$20076$1a@gJ)))))))
   (g$all-empty?$20001$1a@gJ
     g$all-empty?$20191$1a@gJ
     (case-lambda
       ((g$ls$20077$1a@gJ)
        ((case-lambda
           ((g$t$20078$1a@gJ)
            (if g$t$20078$1a@gJ
              g$t$20078$1a@gJ
              (begin
                '#f
                (if (null? (car g$ls$20077$1a@gJ))
                  (begin
                    '#f
                    (g$all-empty?$20001$1a@gJ (cdr g$ls$20077$1a@gJ)))
                  '#f)))))
         (null? g$ls$20077$1a@gJ)))))
   (g$split$20002$1a@gJ
     g$split$20192$1a@gJ
     (case-lambda
       ((g$ls$20079$1a@gJ)
        (if (null? g$ls$20079$1a@gJ)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (() (g$split$20002$1a@gJ (cdr g$ls$20079$1a@gJ))))
              (case-lambda
                ((g$cars$20080$1a@gJ g$cdrs$20081$1a@gJ)
                 ((case-lambda
                    ((g$a$20082$1a@gJ)
                     (values
                       (cons (car g$a$20082$1a@gJ) g$cars$20080$1a@gJ)
                       (cons
                         (cdr g$a$20082$1a@gJ)
                         g$cdrs$20081$1a@gJ))))
                  (car g$ls$20079$1a@gJ))))))))))
   (g$for-all$20003$1a@gJ
     g$for-all$20193$1a@gJ
     (case-lambda
       ((g$f$20083$1a@gJ g$arg1$20084$1a@gJ)
        (if (null? g$arg1$20084$1a@gJ)
          '#t
          (if (null? (cdr g$arg1$20084$1a@gJ))
            (g$f$20083$1a@gJ (car g$arg1$20084$1a@gJ))
            (if (g$f$20083$1a@gJ (car g$arg1$20084$1a@gJ))
              (begin
                '#f
                (g$for-all$20003$1a@gJ
                  g$f$20083$1a@gJ
                  (cdr g$arg1$20084$1a@gJ)))
              '#f))))
       ((g$f$20085$1a@gJ g$arg1$20086$1a@gJ . g$args$20087$1a@gJ)
        ((case-lambda
           ((g$args$20088$1a@gJ)
            (if (g$all-empty?$20001$1a@gJ g$args$20088$1a@gJ)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$20002$1a@gJ g$args$20088$1a@gJ)))
                (case-lambda
                  ((g$cars$20089$1a@gJ g$cdrs$20090$1a@gJ)
                   (if (g$all-empty?$20001$1a@gJ g$cdrs$20090$1a@gJ)
                     (apply g$f$20085$1a@gJ g$cars$20089$1a@gJ)
                     (if (apply g$f$20085$1a@gJ g$cars$20089$1a@gJ)
                       (begin
                         '#f
                         (apply
                           g$for-all$20003$1a@gJ
                           g$f$20085$1a@gJ
                           g$cdrs$20090$1a@gJ))
                       '#f))))))))
         (cons g$arg1$20086$1a@gJ g$args$20087$1a@gJ)))))
   (g$exists$20004$1a@gJ
     g$exists$20194$1a@gJ
     (case-lambda
       ((g$f$20091$1a@gJ g$arg1$20092$1a@gJ)
        (if (null? g$arg1$20092$1a@gJ)
          '#f
          ((case-lambda
             ((g$t$20093$1a@gJ)
              (if g$t$20093$1a@gJ
                g$t$20093$1a@gJ
                (begin
                  '#f
                  (g$exists$20004$1a@gJ
                    g$f$20091$1a@gJ
                    (cdr g$arg1$20092$1a@gJ))))))
           (g$f$20091$1a@gJ (car g$arg1$20092$1a@gJ)))))
       ((g$f$20094$1a@gJ g$arg1$20095$1a@gJ . g$args$20096$1a@gJ)
        ((case-lambda
           ((g$args$20097$1a@gJ)
            (if (g$all-empty?$20001$1a@gJ g$args$20097$1a@gJ)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$20002$1a@gJ g$args$20097$1a@gJ)))
                (case-lambda
                  ((g$cars$20098$1a@gJ g$cdrs$20099$1a@gJ)
                   ((case-lambda
                      ((g$t$20100$1a@gJ)
                       (if g$t$20100$1a@gJ
                         g$t$20100$1a@gJ
                         (begin
                           '#f
                           (apply
                             g$exists$20004$1a@gJ
                             g$f$20094$1a@gJ
                             g$cdrs$20099$1a@gJ)))))
                    (apply g$f$20094$1a@gJ g$cars$20098$1a@gJ))))))))
         (cons g$arg1$20095$1a@gJ g$args$20096$1a@gJ)))))
   (g$map$20005$1a@gJ
     g$map$20195$1a@gJ
     (case-lambda
       ((g$proc$20101$1a@gJ g$list1$20102$1a@gJ)
        ((letrec ((g$f$20103$1a@gJ
                    (case-lambda
                      ((g$lst$20104$1a@gJ g$a$20105$1a@gJ)
                       (if (null? g$lst$20104$1a@gJ)
                         (reverse! g$a$20105$1a@gJ)
                         (g$f$20103$1a@gJ
                           (cdr g$lst$20104$1a@gJ)
                           (cons
                             (g$proc$20101$1a@gJ
                               (car g$lst$20104$1a@gJ))
                             g$a$20105$1a@gJ)))))))
           g$f$20103$1a@gJ)
         g$list1$20102$1a@gJ
         '()))
       ((g$proc$20106$1a@gJ g$list1$20107$1a@gJ . g$lists$20108$1a@gJ)
        ((letrec ((g$f$20109$1a@gJ
                    (case-lambda
                      ((g$lists$20110$1a@gJ g$a$20111$1a@gJ)
                       (if (g$all-empty?$20001$1a@gJ
                             g$lists$20110$1a@gJ)
                         (reverse! g$a$20111$1a@gJ)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$20002$1a@gJ
                                g$lists$20110$1a@gJ)))
                           (case-lambda
                             ((g$cars$20112$1a@gJ g$cdrs$20113$1a@gJ)
                              (g$f$20109$1a@gJ
                                g$cdrs$20113$1a@gJ
                                (cons
                                  (apply
                                    g$proc$20106$1a@gJ
                                    g$cars$20112$1a@gJ)
                                  g$a$20111$1a@gJ))))))))))
           g$f$20109$1a@gJ)
         (cons g$list1$20107$1a@gJ g$lists$20108$1a@gJ)
         '()))))
   (g$for-each$20006$1a@gJ
     g$for-each$20196$1a@gJ
     (case-lambda
       ((g$f$20114$1a@gJ g$arg1$20115$1a@gJ)
        (if (not (null? g$arg1$20115$1a@gJ))
          (begin
            (g$f$20114$1a@gJ (car g$arg1$20115$1a@gJ))
            (g$for-each$20006$1a@gJ
              g$f$20114$1a@gJ
              (cdr g$arg1$20115$1a@gJ)))
          (void)))
       ((g$f$20116$1a@gJ g$arg1$20117$1a@gJ . g$args$20118$1a@gJ)
        ((case-lambda
           ((g$args$20119$1a@gJ)
            (if (not (g$all-empty?$20001$1a@gJ g$args$20119$1a@gJ))
              (call-with-values
                (case-lambda
                  (() (g$split$20002$1a@gJ g$args$20119$1a@gJ)))
                (case-lambda
                  ((g$cars$20120$1a@gJ g$cdrs$20121$1a@gJ)
                   (begin
                     (apply g$f$20116$1a@gJ g$cars$20120$1a@gJ)
                     (apply
                       g$for-each$20006$1a@gJ
                       g$f$20116$1a@gJ
                       g$cdrs$20121$1a@gJ)))))
              (void))))
         (cons g$arg1$20117$1a@gJ g$args$20118$1a@gJ)))))
   (g$cons*$20007$1a@gJ
     g$cons*$20197$1a@gJ
     (case-lambda
       ((g$a$20122$1a@gJ . g$rest$20123$1a@gJ)
        ((letrec ((g$f$20124$1a@gJ
                    (case-lambda
                      ((g$a$20125$1a@gJ g$rest$20126$1a@gJ)
                       (if (null? g$rest$20126$1a@gJ)
                         g$a$20125$1a@gJ
                         (cons
                           g$a$20125$1a@gJ
                           (g$f$20124$1a@gJ
                             (car g$rest$20126$1a@gJ)
                             (cdr g$rest$20126$1a@gJ))))))))
           g$f$20124$1a@gJ)
         g$a$20122$1a@gJ
         g$rest$20123$1a@gJ))))
   (g$append-fast!$20008$1a@gJ
     g$append-fast!$20198$1a@gJ
     (case-lambda
       ((g$a$20127$1a@gJ g$b$20128$1a@gJ)
        ((case-lambda
           ((g$c$20129$1a@gJ)
            (if (null? g$c$20129$1a@gJ)
              (clr-field-set!-internal
                'IronScheme.Runtime.Cons
                'cdr
                g$a$20127$1a@gJ
                g$b$20128$1a@gJ)
              (g$append-fast!$20008$1a@gJ
                g$c$20129$1a@gJ
                g$b$20128$1a@gJ))))
         ($cdr g$a$20127$1a@gJ)))))
   (g$append!$20009$1a@gJ
     g$append!$20199$1a@gJ
     (case-lambda
       ((g$a$20130$1a@gJ g$b$20131$1a@gJ)
        (if (null? g$a$20130$1a@gJ)
          g$b$20131$1a@gJ
          (if (null? g$b$20131$1a@gJ)
            g$a$20130$1a@gJ
            (begin
              '#f
              (g$append-fast!$20008$1a@gJ
                g$a$20130$1a@gJ
                g$b$20131$1a@gJ)
              g$a$20130$1a@gJ))))))
   (g$append$20010$1a@gJ
     g$append$20200$1a@gJ
     (case-lambda
       (() '())
       ((g$obj$20132$1a@gJ) g$obj$20132$1a@gJ)
       ((g$obj1$20133$1a@gJ g$obj2$20134$1a@gJ)
        (begin
          (if (not (list? g$obj1$20133$1a@gJ))
            (assertion-violation
              'append
              '"not a list"
              g$obj1$20133$1a@gJ)
            (void))
          (g$append!$20009$1a@gJ
            (g$map$20005$1a@gJ values g$obj1$20133$1a@gJ)
            g$obj2$20134$1a@gJ)))
       ((g$obj$20135$1a@gJ g$i1$20136$1a@gJ . g$il$20137$1a@gJ)
        (begin
          (if (not (list? g$obj$20135$1a@gJ))
            (assertion-violation
              'append
              '"not a list"
              g$obj$20135$1a@gJ)
            (void))
          (if (null? g$i1$20136$1a@gJ)
            (if (null? g$il$20137$1a@gJ)
              (clr-call-internal
                'IronScheme.Runtime.Cons
                'FromList
                '()
                g$obj$20135$1a@gJ)
              (apply
                g$append$20010$1a@gJ
                (cons g$obj$20135$1a@gJ g$il$20137$1a@gJ)))
            (if (pair? g$i1$20136$1a@gJ)
              (if (null? g$il$20137$1a@gJ)
                (g$append!$20009$1a@gJ
                  (clr-call-internal
                    'IronScheme.Runtime.Cons
                    'FromList
                    '()
                    g$obj$20135$1a@gJ)
                  g$i1$20136$1a@gJ)
                (g$append!$20009$1a@gJ
                  (clr-call-internal
                    'IronScheme.Runtime.Cons
                    'FromList
                    '()
                    g$obj$20135$1a@gJ)
                  (apply
                    g$append$20010$1a@gJ
                    (cons g$i1$20136$1a@gJ g$il$20137$1a@gJ))))
              (begin
                '#f
                (g$append!$20009$1a@gJ
                  (clr-call-internal
                    'IronScheme.Runtime.Cons
                    'FromList
                    '()
                    g$obj$20135$1a@gJ)
                  g$i1$20136$1a@gJ))))))))
   (g$fold-left$20011$1a@gJ
     g$fold-left$20201$1a@gJ
     (case-lambda
       ((g$combine$20158$1a@gJ
          g$nil$20159$1a@gJ
          g$list1$20160$1a@gJ
          .
          g$lists$20161$1a@gJ)
        (if (null? g$list1$20160$1a@gJ)
          g$nil$20159$1a@gJ
          (if (null? g$lists$20161$1a@gJ)
            (g$fold-left$20011$1a@gJ
              g$combine$20158$1a@gJ
              (g$combine$20158$1a@gJ
                g$nil$20159$1a@gJ
                (car g$list1$20160$1a@gJ))
              (cdr g$list1$20160$1a@gJ))
            (begin
              '#f
              (apply
                g$fold-left$20011$1a@gJ
                (g$cons*$20007$1a@gJ
                  g$combine$20158$1a@gJ
                  (apply
                    g$combine$20158$1a@gJ
                    (g$cons*$20007$1a@gJ
                      g$nil$20159$1a@gJ
                      (car g$list1$20160$1a@gJ)
                      (g$map$20005$1a@gJ car g$lists$20161$1a@gJ)))
                  (cdr g$list1$20160$1a@gJ)
                  (g$map$20005$1a@gJ cdr g$lists$20161$1a@gJ)))))))))
   (g$fold-right$20012$1a@gJ
     g$fold-right$20202$1a@gJ
     (case-lambda
       ((g$combine$20162$1a@gJ
          g$nil$20163$1a@gJ
          g$list1$20164$1a@gJ
          .
          g$lists$20165$1a@gJ)
        (if (null? g$list1$20164$1a@gJ)
          g$nil$20163$1a@gJ
          (if (null? g$lists$20165$1a@gJ)
            (g$combine$20162$1a@gJ
              (car g$list1$20164$1a@gJ)
              (g$fold-right$20012$1a@gJ
                g$combine$20162$1a@gJ
                g$nil$20163$1a@gJ
                (cdr g$list1$20164$1a@gJ)))
            (begin
              '#f
              (apply
                g$combine$20162$1a@gJ
                (g$append$20010$1a@gJ
                  (list (car g$list1$20164$1a@gJ))
                  (g$map$20005$1a@gJ car g$lists$20165$1a@gJ)
                  (list
                    (apply
                      g$fold-right$20012$1a@gJ
                      (g$cons*$20007$1a@gJ
                        g$combine$20162$1a@gJ
                        g$nil$20163$1a@gJ
                        (cdr g$list1$20164$1a@gJ)
                        (g$map$20005$1a@gJ
                          cdr
                          g$lists$20165$1a@gJ))))))))))))
   (g$remove$20013$1a@gJ
     g$remove$20203$1a@gJ
     (case-lambda
       ((g$obj$20166$1a@gJ g$list$20167$1a@gJ)
        (g$remp$19991$1a@gJ
          (case-lambda
            ((g$x$20168$1a@gJ)
             (g$equal?$27047$1a@gJ g$obj$20166$1a@gJ g$x$20168$1a@gJ)))
          g$list$20167$1a@gJ))))
   (g$remv$20014$1a@gJ
     g$remv$20204$1a@gJ
     (case-lambda
       ((g$obj$20169$1a@gJ g$list$20170$1a@gJ)
        (g$remp$19991$1a@gJ
          (case-lambda
            ((g$x$20171$1a@gJ)
             (eqv? g$obj$20169$1a@gJ g$x$20171$1a@gJ)))
          g$list$20170$1a@gJ))))
   (g$remq$20015$1a@gJ
     g$remq$20205$1a@gJ
     (case-lambda
       ((g$obj$20172$1a@gJ g$list$20173$1a@gJ)
        (g$remp$19991$1a@gJ
          (case-lambda
            ((g$x$20174$1a@gJ) (eq? g$obj$20172$1a@gJ g$x$20174$1a@gJ)))
          g$list$20173$1a@gJ)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$clr-string?$20206$1a@gJ
     g$clr-string?$20614$1a@gJ
     (case-lambda
       ((g$obj$20382$1a@gJ)
        (clr-is-internal 'System.String g$obj$20382$1a@gJ))))
   (g$stringbuilder?$20207$1a@gJ
     g$stringbuilder?$20615$1a@gJ
     (case-lambda
       ((g$obj$20383$1a@gJ)
        (clr-is-internal
          'System.Text.StringBuilder
          g$obj$20383$1a@gJ))))
   (g$string?$20208$1a@gJ
     g$string?$20616$1a@gJ
     (case-lambda
       ((g$obj$20384$1a@gJ)
        ((case-lambda
           ((g$t$20385$1a@gJ)
            (if g$t$20385$1a@gJ
              g$t$20385$1a@gJ
              (begin
                '#f
                (g$stringbuilder?$20207$1a@gJ g$obj$20384$1a@gJ)))))
         (g$clr-string?$20206$1a@gJ g$obj$20384$1a@gJ)))))
   (g$char?$20209$1a@gJ
     g$char?$20617$1a@gJ
     (case-lambda
       ((g$obj$20386$1a@gJ)
        (clr-is-internal 'system.char g$obj$20386$1a@gJ))))
   (g$vector?$20210$1a@gJ
     g$vector?$20618$1a@gJ
     (case-lambda
       ((g$obj$20387$1a@gJ)
        (clr-is-internal 'system.object[] g$obj$20387$1a@gJ))))
   (g$bytevector?$20211$1a@gJ
     g$bytevector?$20619$1a@gJ
     (case-lambda
       ((g$obj$20388$1a@gJ)
        (clr-is-internal 'system.byte[] g$obj$20388$1a@gJ))))
   (g$symbol?$20212$1a@gJ
     g$symbol?$20620$1a@gJ
     (case-lambda
       ((g$obj$20389$1a@gJ)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$20389$1a@gJ))))
   (g$boolean?$20213$1a@gJ
     g$boolean?$20621$1a@gJ
     (case-lambda
       ((g$obj$20390$1a@gJ)
        (clr-is-internal 'system.boolean g$obj$20390$1a@gJ))))
   (g$procedure?$20214$1a@gJ
     g$procedure?$20622$1a@gJ
     (case-lambda
       ((g$obj$20391$1a@gJ)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$20391$1a@gJ))))
   (g$fixnum?$20215$1a@gJ
     g$fixnum?$20623$1a@gJ
     (case-lambda
       ((g$obj$20392$1a@gJ)
        (clr-is-internal 'system.int32 g$obj$20392$1a@gJ))))
   (g$flonum?$20216$1a@gJ
     g$flonum?$20624$1a@gJ
     (case-lambda
       ((g$obj$20393$1a@gJ)
        (clr-is-internal 'system.double g$obj$20393$1a@gJ))))
   (g$fixnum-width$20217$1a@gJ
     g$fixnum-width$20625$1a@gJ
     (case-lambda (() '32)))
   (g$char->integer$20218$1a@gJ
     g$char->integer$20626$1a@gJ
     (case-lambda
       ((g$chr$20394$1a@gJ)
        (begin
          (if (not (g$char?$20209$1a@gJ g$chr$20394$1a@gJ))
            (assertion-violation
              'char->integer
              '"not a character"
              g$chr$20394$1a@gJ)
            (void))
          (clr-cast-internal
            'System.Int32
            (clr-cast-internal 'System.Char g$chr$20394$1a@gJ))))))
   (g$integer->char$20219$1a@gJ
     g$integer->char$20627$1a@gJ
     (case-lambda
       ((g$num$20395$1a@gJ)
        (begin
          (if (not (g$fixnum?$20215$1a@gJ g$num$20395$1a@gJ))
            (assertion-violation
              'integer->char
              '"not a integer"
              g$num$20395$1a@gJ)
            (void))
          (if ((case-lambda
                 ((g$t$20396$1a@gJ)
                  (if g$t$20396$1a@gJ
                    g$t$20396$1a@gJ
                    ((case-lambda
                       ((g$t$20397$1a@gJ)
                        (if g$t$20397$1a@gJ
                          g$t$20397$1a@gJ
                          (begin
                            '#f
                            (if (g$fx>?$25075$1a@gJ
                                  g$num$20395$1a@gJ
                                  '55295)
                              (begin
                                '#f
                                (g$fx<?$25073$1a@gJ
                                  g$num$20395$1a@gJ
                                  '57344))
                              '#f)))))
                     (g$fx>?$25075$1a@gJ g$num$20395$1a@gJ '1114111)))))
               (g$fxnegative?$25093$1a@gJ g$num$20395$1a@gJ))
            (assertion-violation
              'integer->char
              '"not a valid unicode value"
              g$num$20395$1a@gJ)
            (void))
          (g$string-ref$20221$1a@gJ
            (clr-call-internal
              'System.Char
              'ConvertFromUtf32
              '()
              g$num$20395$1a@gJ)
            '0)))))
   (g$make-string$20220$1a@gJ
     g$make-string$20628$1a@gJ
     (case-lambda
       ((g$k$20398$1a@gJ)
        (g$make-string$20220$1a@gJ g$k$20398$1a@gJ '#\nul))
       ((g$k$20399$1a@gJ g$fill$20400$1a@gJ)
        (begin
          (if (not (g$fixnum?$20215$1a@gJ g$k$20399$1a@gJ))
            (assertion-violation
              'make-string
              '"not a fixnum"
              g$k$20399$1a@gJ)
            (void))
          (if (g$negative?$21662$1a@gJ g$k$20399$1a@gJ)
            (assertion-violation
              'make-string
              '"cannot be negative"
              g$k$20399$1a@gJ)
            (void))
          (if (not (g$char?$20209$1a@gJ g$fill$20400$1a@gJ))
            (assertion-violation
              'make-string
              '"not a character"
              g$fill$20400$1a@gJ)
            (void))
          ((case-lambda
             ((g$str$20401$1a@gJ)
              ((letrec ((g$f$20402$1a@gJ
                          (case-lambda
                            ((g$i$20403$1a@gJ)
                             (if (g$fx=?$25072$1a@gJ
                                   g$i$20403$1a@gJ
                                   g$k$20399$1a@gJ)
                               g$str$20401$1a@gJ
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$20401$1a@gJ
                                   g$fill$20400$1a@gJ)
                                 (g$f$20402$1a@gJ
                                   (g$fx+$25059$1a@gJ
                                     g$i$20403$1a@gJ
                                     '1))))))))
                 g$f$20402$1a@gJ)
               '0)))
           (clr-new-internal
             'System.Text.StringBuilder
             (clr-cast-internal 'System.Int32 g$k$20399$1a@gJ)))))))
   (g$string-ref$20221$1a@gJ
     g$string-ref$20629$1a@gJ
     (case-lambda
       ((g$str$20404$1a@gJ g$k$20405$1a@gJ)
        (begin
          (if (not (if (g$fixnum?$20215$1a@gJ g$k$20405$1a@gJ)
                     (begin
                       '#f
                       (g$fx>=?$25076$1a@gJ g$k$20405$1a@gJ '0))
                     '#f))
            (assertion-violation
              'string-ref
              '"not a non-negative integer"
              g$k$20405$1a@gJ)
            (void))
          (if (g$clr-string?$20206$1a@gJ g$str$20404$1a@gJ)
            (clr-call-internal
              'System.String
              'get_Chars
              g$str$20404$1a@gJ
              g$k$20405$1a@gJ)
            (if (g$stringbuilder?$20207$1a@gJ g$str$20404$1a@gJ)
              (clr-call-internal
                'System.Text.StringBuilder
                'get_Chars
                g$str$20404$1a@gJ
                g$k$20405$1a@gJ)
              (begin
                '#f
                (assertion-violation
                  'string-set!
                  '"not a string"
                  g$str$20404$1a@gJ))))))))
   (g$string-set!$20222$1a@gJ
     g$string-set!$20630$1a@gJ
     (case-lambda
       ((g$str$20406$1a@gJ g$k$20407$1a@gJ g$val$20408$1a@gJ)
        (begin
          (if (not (g$stringbuilder?$20207$1a@gJ g$str$20406$1a@gJ))
            (assertion-violation
              'string-set!
              '"not a mutable string"
              g$str$20406$1a@gJ)
            (void))
          (if (not (if (g$fixnum?$20215$1a@gJ g$k$20407$1a@gJ)
                     (begin
                       '#f
                       (g$fx>=?$25076$1a@gJ g$k$20407$1a@gJ '0))
                     '#f))
            (assertion-violation
              'string-set!
              '"not a non-negative integer"
              g$k$20407$1a@gJ)
            (void))
          (clr-call-internal
            'System.Text.StringBuilder
            'set_Chars
            g$str$20406$1a@gJ
            g$k$20407$1a@gJ
            g$val$20408$1a@gJ)))))
   (g$string-fill!$20223$1a@gJ
     g$string-fill!$20631$1a@gJ
     (case-lambda
       ((g$str$20409$1a@gJ g$k$20410$1a@gJ g$fill$20411$1a@gJ)
        (begin
          (if (not (g$stringbuilder?$20207$1a@gJ g$str$20409$1a@gJ))
            (assertion-violation
              'string-fill!
              '"not a mutable string"
              g$str$20409$1a@gJ)
            (void))
          (if (not (if (g$fixnum?$20215$1a@gJ g$k$20410$1a@gJ)
                     (begin
                       '#f
                       (g$fx>=?$25076$1a@gJ g$k$20410$1a@gJ '0))
                     '#f))
            (assertion-violation
              'string-fill!
              '"not a non-negative integer"
              g$k$20410$1a@gJ)
            (void))
          (if (not (g$char?$20209$1a@gJ g$fill$20411$1a@gJ))
            (assertion-violation
              'string-fill!
              '"not a character"
              g$fill$20411$1a@gJ)
            (void))
          ((letrec ((g$f$20412$1a@gJ
                      (case-lambda
                        ((g$i$20413$1a@gJ)
                         (if (not (g$fx=?$25072$1a@gJ
                                    g$i$20413$1a@gJ
                                    g$k$20410$1a@gJ))
                           (begin
                             (clr-call-internal
                               'System.Text.StringBuilder
                               'set_Chars
                               g$str$20409$1a@gJ
                               g$i$20413$1a@gJ
                               g$fill$20411$1a@gJ)
                             (g$f$20412$1a@gJ
                               (g$fx+$25059$1a@gJ g$i$20413$1a@gJ '1)))
                           (void))))))
             g$f$20412$1a@gJ)
           '0)))))
   (g$string-length$20224$1a@gJ
     g$string-length$20632$1a@gJ
     (case-lambda
       ((g$str$20414$1a@gJ)
        (if (g$clr-string?$20206$1a@gJ g$str$20414$1a@gJ)
          (clr-call-internal
            'System.String
            'get_Length
            g$str$20414$1a@gJ)
          (if (g$stringbuilder?$20207$1a@gJ g$str$20414$1a@gJ)
            (clr-call-internal
              'System.Text.StringBuilder
              'get_Length
              g$str$20414$1a@gJ)
            (begin
              '#f
              (assertion-violation
                'string-length
                '"not a string"
                g$str$20414$1a@gJ)))))))
   (g$->string$20225$1a@gJ
     g$->string$20633$1a@gJ
     (case-lambda
       ((g$str$20415$1a@gJ)
        (if (g$clr-string?$20206$1a@gJ g$str$20415$1a@gJ)
          g$str$20415$1a@gJ
          (clr-call-internal 'Object 'ToString g$str$20415$1a@gJ)))))
   (g$string$20226$1a@gJ
     g$string$20634$1a@gJ
     (case-lambda
       (g$args$20416$1a@gJ
        (begin
          (if (not (g$for-all$20193$1a@gJ
                     g$char?$20209$1a@gJ
                     g$args$20416$1a@gJ))
            (assertion-violation
              'string
              '"not all char"
              g$args$20416$1a@gJ)
            (void))
          ((case-lambda
             ((g$str$20417$1a@gJ)
              ((letrec ((g$f$20418$1a@gJ
                          (case-lambda
                            ((g$args$20419$1a@gJ)
                             (if (null? g$args$20419$1a@gJ)
                               g$str$20417$1a@gJ
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$20417$1a@gJ
                                   (car g$args$20419$1a@gJ))
                                 (g$f$20418$1a@gJ
                                   (cdr g$args$20419$1a@gJ))))))))
                 g$f$20418$1a@gJ)
               g$args$20416$1a@gJ)))
           (clr-new-internal 'System.Text.StringBuilder))))))
   (g$string->list$20227$1a@gJ
     g$string->list$20635$1a@gJ
     (case-lambda
       ((g$str$20420$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$str$20420$1a@gJ))
            (assertion-violation
              'string->list
              '"not a string"
              g$str$20420$1a@gJ)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            (g$->string$20225$1a@gJ g$str$20420$1a@gJ))))))
   (g$string-copy$20228$1a@gJ
     g$string-copy$20636$1a@gJ
     (case-lambda
       ((g$str$20421$1a@gJ)
        (if (g$clr-string?$20206$1a@gJ g$str$20421$1a@gJ)
          (clr-call-internal 'System.String 'Copy '() g$str$20421$1a@gJ)
          (if (g$stringbuilder?$20207$1a@gJ g$str$20421$1a@gJ)
            (clr-call-internal
              'System.Text.StringBuilder
              'ToString
              g$str$20421$1a@gJ)
            (begin
              '#f
              (assertion-violation
                'string-copy
                '"not a string"
                g$str$20421$1a@gJ)))))))
   (g$substring$20229$1a@gJ
     g$substring$20637$1a@gJ
     (case-lambda
       ((g$str$20422$1a@gJ g$start$20423$1a@gJ g$end$20424$1a@gJ)
        (begin
          (if (not (if (g$fixnum?$20215$1a@gJ g$start$20423$1a@gJ)
                     (begin
                       '#f
                       (g$fx>=?$25076$1a@gJ g$start$20423$1a@gJ '0))
                     '#f))
            (assertion-violation
              'substring
              '"not a non-negative integer"
              g$start$20423$1a@gJ)
            (void))
          (if (not (if (g$fixnum?$20215$1a@gJ g$end$20424$1a@gJ)
                     (begin
                       '#f
                       (g$fx>=?$25076$1a@gJ g$end$20424$1a@gJ '0))
                     '#f))
            (assertion-violation
              'substring
              '"not a non-negative integer"
              g$end$20424$1a@gJ)
            (void))
          (if (g$clr-string?$20206$1a@gJ g$str$20422$1a@gJ)
            (clr-call-internal
              'System.String
              'Substring
              g$str$20422$1a@gJ
              g$start$20423$1a@gJ
              (g$fx-$25061$1a@gJ g$end$20424$1a@gJ g$start$20423$1a@gJ))
            (if (g$stringbuilder?$20207$1a@gJ g$str$20422$1a@gJ)
              (clr-call-internal
                'System.Text.StringBuilder
                'ToString
                g$str$20422$1a@gJ
                g$start$20423$1a@gJ
                (g$fx-$25061$1a@gJ
                  g$end$20424$1a@gJ
                  g$start$20423$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'substring
                  '"not a string"
                  g$str$20422$1a@gJ))))))))
   (g$string-append$20230$1a@gJ
     g$string-append$20638$1a@gJ
     (case-lambda
       (g$args$20425$1a@gJ
        (begin
          (if (not (g$for-all$20193$1a@gJ
                     g$string?$20208$1a@gJ
                     g$args$20425$1a@gJ))
            (assertion-violation
              'string-append
              '"not strings"
              g$args$20425$1a@gJ)
            (void))
          (clr-call-internal
            'System.String
            '"Concat(String[])"
            '()
            (g$list->vector$20239$1a@gJ
              (g$map$20195$1a@gJ
                g$->string$20225$1a@gJ
                g$args$20425$1a@gJ)))))))
   (g$string-format$20231$1a@gJ
     g$string-format$20639$1a@gJ
     (case-lambda
       ((g$fmt$20426$1a@gJ . g$args$20427$1a@gJ)
        (clr-call-internal
          'System.String
          '"Format(String,Object[])"
          '()
          g$fmt$20426$1a@gJ
          (g$list->vector$20239$1a@gJ g$args$20427$1a@gJ)))))
   (g$symbol->string$20232$1a@gJ
     g$symbol->string$20640$1a@gJ
     (case-lambda
       ((g$sym$20428$1a@gJ)
        (begin
          (if (not (g$symbol?$20212$1a@gJ g$sym$20428$1a@gJ))
            (assertion-violation
              'symbol->string
              '"not a symbol"
              g$sym$20428$1a@gJ)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'IdToString
            '()
            g$sym$20428$1a@gJ)))))
   (g$string->symbol$20233$1a@gJ
     g$string->symbol$20641$1a@gJ
     (case-lambda
       ((g$str$20429$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$str$20429$1a@gJ))
            (assertion-violation
              'string->symbol
              '"not a string"
              g$str$20429$1a@gJ)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'StringToObject
            '()
            g$str$20429$1a@gJ)))))
   (g$div0$20234$1a@gJ
     g$div0$20642$1a@gJ
     (case-lambda
       ((g$x1$20430$1a@gJ g$x2$20431$1a@gJ)
        ((case-lambda
           ((g$d$20432$1a@gJ)
            ((case-lambda
               ((g$m$20433$1a@gJ)
                (if (g$<$21670$1a@gJ
                      g$m$20433$1a@gJ
                      (g$magnitude$21677$1a@gJ (/ g$x2$20431$1a@gJ '2)))
                  g$d$20432$1a@gJ
                  (if (g$positive?$21661$1a@gJ g$x2$20431$1a@gJ)
                    (+ g$d$20432$1a@gJ '1)
                    (begin '#f (- g$d$20432$1a@gJ '1))))))
             (- g$x1$20430$1a@gJ
                (* g$d$20432$1a@gJ g$x2$20431$1a@gJ)))))
         (g$div$21694$1a@gJ g$x1$20430$1a@gJ g$x2$20431$1a@gJ)))))
   (g$mod$20235$1a@gJ
     g$mod$20643$1a@gJ
     (case-lambda
       ((g$x1$20434$1a@gJ g$x2$20435$1a@gJ)
        (- g$x1$20434$1a@gJ
           (* (g$div$21694$1a@gJ g$x1$20434$1a@gJ g$x2$20435$1a@gJ)
              g$x2$20435$1a@gJ)))))
   (g$mod0$20236$1a@gJ
     g$mod0$20644$1a@gJ
     (case-lambda
       ((g$x1$20436$1a@gJ g$x2$20437$1a@gJ)
        (- g$x1$20436$1a@gJ
           (* (g$div0$20234$1a@gJ g$x1$20436$1a@gJ g$x2$20437$1a@gJ)
              g$x2$20437$1a@gJ)))))
   (g$div-and-mod$20237$1a@gJ
     g$div-and-mod$20645$1a@gJ
     (case-lambda
       ((g$x1$20438$1a@gJ g$x2$20439$1a@gJ)
        ((case-lambda
           ((g$d$20440$1a@gJ)
            (values
              g$d$20440$1a@gJ
              (- g$x1$20438$1a@gJ
                 (* g$d$20440$1a@gJ g$x2$20439$1a@gJ)))))
         (g$div$21694$1a@gJ g$x1$20438$1a@gJ g$x2$20439$1a@gJ)))))
   (g$div0-and-mod0$20238$1a@gJ
     g$div0-and-mod0$20646$1a@gJ
     (case-lambda
       ((g$x1$20441$1a@gJ g$x2$20442$1a@gJ)
        ((case-lambda
           ((g$d$20443$1a@gJ)
            (values
              g$d$20443$1a@gJ
              (- g$x1$20441$1a@gJ
                 (* g$d$20443$1a@gJ g$x2$20442$1a@gJ)))))
         (g$div0$20234$1a@gJ g$x1$20441$1a@gJ g$x2$20442$1a@gJ)))))
   (g$list->vector$20239$1a@gJ
     g$list->vector$20647$1a@gJ
     (case-lambda
       ((g$lst$20444$1a@gJ) (apply vector g$lst$20444$1a@gJ))))
   (g$list->string$20240$1a@gJ
     g$list->string$20648$1a@gJ
     (case-lambda
       ((g$lst$20445$1a@gJ)
        (apply g$string$20226$1a@gJ g$lst$20445$1a@gJ))))
   (g$vector-ref$20241$1a@gJ
     g$vector-ref$20649$1a@gJ
     (case-lambda
       ((g$x$20446$1a@gJ g$n$20447$1a@gJ)
        (begin
          (if (not (g$vector?$20210$1a@gJ g$x$20446$1a@gJ))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$20446$1a@gJ)
            (void))
          (if (not (g$integer?$21656$1a@gJ g$n$20447$1a@gJ))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$20447$1a@gJ)
            (void))
          (if (g$negative?$21662$1a@gJ g$n$20447$1a@gJ)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$20447$1a@gJ)
            (void))
          ($vector-ref g$x$20446$1a@gJ g$n$20447$1a@gJ)))))
   (g$vector-set!$20242$1a@gJ
     g$vector-set!$20650$1a@gJ
     (case-lambda
       ((g$x$20448$1a@gJ g$n$20449$1a@gJ g$value$20450$1a@gJ)
        (begin
          (if (not (g$vector?$20210$1a@gJ g$x$20448$1a@gJ))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$20448$1a@gJ)
            (void))
          (if (not (g$integer?$21656$1a@gJ g$n$20449$1a@gJ))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$20449$1a@gJ)
            (void))
          (if (g$negative?$21662$1a@gJ g$n$20449$1a@gJ)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$20449$1a@gJ)
            (void))
          ($vector-set!
            g$x$20448$1a@gJ
            g$n$20449$1a@gJ
            g$value$20450$1a@gJ)
          (void)))))
   (g$make-vector$20243$1a@gJ
     g$make-vector$20651$1a@gJ
     (case-lambda
       ((g$k$20451$1a@gJ)
        (begin
          (if (not (g$fixnum?$20215$1a@gJ g$k$20451$1a@gJ))
            (assertion-violation
              'make-vector
              '"not a fixnum"
              g$k$20451$1a@gJ)
            (void))
          (if (g$negative?$21662$1a@gJ g$k$20451$1a@gJ)
            (assertion-violation
              'make-vector
              '"cannot be negative"
              g$k$20451$1a@gJ)
            (void))
          (clr-new-array-internal 'System.Object g$k$20451$1a@gJ)))
       ((g$k$20452$1a@gJ g$fill$20453$1a@gJ)
        ((case-lambda
           ((g$vec$20454$1a@gJ)
            (begin
              (g$vector-fill!$20245$1a@gJ
                g$vec$20454$1a@gJ
                g$fill$20453$1a@gJ)
              g$vec$20454$1a@gJ)))
         (g$make-vector$20243$1a@gJ g$k$20452$1a@gJ)))))
   (g$vector-length$20244$1a@gJ
     g$vector-length$20652$1a@gJ
     (case-lambda
       ((g$vec$20455$1a@gJ)
        (begin
          (if (not (g$vector?$20210$1a@gJ g$vec$20455$1a@gJ))
            (assertion-violation
              'vector-length
              '"not a vector"
              g$vec$20455$1a@gJ)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$vec$20455$1a@gJ)))))
   (g$vector-fill!$20245$1a@gJ
     g$vector-fill!$20653$1a@gJ
     (case-lambda
       ((g$vec$20456$1a@gJ g$val$20457$1a@gJ)
        ((case-lambda
           ((g$len$20458$1a@gJ)
            (letrec ((g$loop$20459$1a@gJ
                       (case-lambda
                         ((g$i$20460$1a@gJ)
                          (if (g$fx=?$25072$1a@gJ
                                g$i$20460$1a@gJ
                                g$len$20458$1a@gJ)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$20242$1a@gJ
                                g$vec$20456$1a@gJ
                                g$i$20460$1a@gJ
                                g$val$20457$1a@gJ)
                              (g$loop$20459$1a@gJ
                                (g$fx+$25059$1a@gJ
                                  g$i$20460$1a@gJ
                                  '1))))))))
              (g$loop$20459$1a@gJ '0))))
         (g$vector-length$20244$1a@gJ g$vec$20456$1a@gJ)))))
   (g$vector->list$20246$1a@gJ
     g$vector->list$20654$1a@gJ
     (case-lambda
       ((g$vec$20461$1a@gJ)
        (begin
          (if (not (g$vector?$20210$1a@gJ g$vec$20461$1a@gJ))
            (assertion-violation
              'vector->list
              '"not a vector"
              g$vec$20461$1a@gJ)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            g$vec$20461$1a@gJ)))))
   (g$xcons$20247$1a@gJ
     g$xcons$20655$1a@gJ
     (case-lambda
       ((g$x$20462$1a@gJ g$y$20463$1a@gJ)
        (cons g$y$20463$1a@gJ g$x$20462$1a@gJ))))
   (g$reverse$20248$1a@gJ
     g$reverse$20656$1a@gJ
     (case-lambda
       ((g$lst$20464$1a@gJ)
        (g$fold-left$20201$1a@gJ
          g$xcons$20247$1a@gJ
          '()
          g$lst$20464$1a@gJ))))
   (g$caar$20249$1a@gJ
     g$caar$20657$1a@gJ
     (case-lambda ((g$x$20465$1a@gJ) (car (car g$x$20465$1a@gJ)))))
   (g$cadr$20250$1a@gJ
     g$cadr$20658$1a@gJ
     (case-lambda ((g$x$20466$1a@gJ) (car (cdr g$x$20466$1a@gJ)))))
   (g$cdar$20251$1a@gJ
     g$cdar$20659$1a@gJ
     (case-lambda ((g$x$20467$1a@gJ) (cdr (car g$x$20467$1a@gJ)))))
   (g$cddr$20252$1a@gJ
     g$cddr$20660$1a@gJ
     (case-lambda ((g$x$20468$1a@gJ) (cdr (cdr g$x$20468$1a@gJ)))))
   (g$caaar$20253$1a@gJ
     g$caaar$20661$1a@gJ
     (case-lambda
       ((g$x$20469$1a@gJ) (g$caar$20249$1a@gJ (car g$x$20469$1a@gJ)))))
   (g$caadr$20254$1a@gJ
     g$caadr$20662$1a@gJ
     (case-lambda
       ((g$x$20470$1a@gJ) (g$caar$20249$1a@gJ (cdr g$x$20470$1a@gJ)))))
   (g$cadar$20255$1a@gJ
     g$cadar$20663$1a@gJ
     (case-lambda
       ((g$x$20471$1a@gJ) (g$cadr$20250$1a@gJ (car g$x$20471$1a@gJ)))))
   (g$caddr$20256$1a@gJ
     g$caddr$20664$1a@gJ
     (case-lambda
       ((g$x$20472$1a@gJ) (g$cadr$20250$1a@gJ (cdr g$x$20472$1a@gJ)))))
   (g$cdaar$20257$1a@gJ
     g$cdaar$20665$1a@gJ
     (case-lambda
       ((g$x$20473$1a@gJ) (g$cdar$20251$1a@gJ (car g$x$20473$1a@gJ)))))
   (g$cdadr$20258$1a@gJ
     g$cdadr$20666$1a@gJ
     (case-lambda
       ((g$x$20474$1a@gJ) (g$cdar$20251$1a@gJ (cdr g$x$20474$1a@gJ)))))
   (g$cddar$20259$1a@gJ
     g$cddar$20667$1a@gJ
     (case-lambda
       ((g$x$20475$1a@gJ) (g$cddr$20252$1a@gJ (car g$x$20475$1a@gJ)))))
   (g$cdddr$20260$1a@gJ
     g$cdddr$20668$1a@gJ
     (case-lambda
       ((g$x$20476$1a@gJ) (g$cddr$20252$1a@gJ (cdr g$x$20476$1a@gJ)))))
   (g$caaaar$20261$1a@gJ
     g$caaaar$20669$1a@gJ
     (case-lambda
       ((g$x$20477$1a@gJ) (g$caaar$20253$1a@gJ (car g$x$20477$1a@gJ)))))
   (g$caaadr$20262$1a@gJ
     g$caaadr$20670$1a@gJ
     (case-lambda
       ((g$x$20478$1a@gJ) (g$caaar$20253$1a@gJ (cdr g$x$20478$1a@gJ)))))
   (g$caadar$20263$1a@gJ
     g$caadar$20671$1a@gJ
     (case-lambda
       ((g$x$20479$1a@gJ) (g$caadr$20254$1a@gJ (car g$x$20479$1a@gJ)))))
   (g$caaddr$20264$1a@gJ
     g$caaddr$20672$1a@gJ
     (case-lambda
       ((g$x$20480$1a@gJ) (g$caadr$20254$1a@gJ (cdr g$x$20480$1a@gJ)))))
   (g$cadaar$20265$1a@gJ
     g$cadaar$20673$1a@gJ
     (case-lambda
       ((g$x$20481$1a@gJ) (g$cadar$20255$1a@gJ (car g$x$20481$1a@gJ)))))
   (g$cadadr$20266$1a@gJ
     g$cadadr$20674$1a@gJ
     (case-lambda
       ((g$x$20482$1a@gJ) (g$cadar$20255$1a@gJ (cdr g$x$20482$1a@gJ)))))
   (g$caddar$20267$1a@gJ
     g$caddar$20675$1a@gJ
     (case-lambda
       ((g$x$20483$1a@gJ) (g$caddr$20256$1a@gJ (car g$x$20483$1a@gJ)))))
   (g$cadddr$20268$1a@gJ
     g$cadddr$20676$1a@gJ
     (case-lambda
       ((g$x$20484$1a@gJ) (g$caddr$20256$1a@gJ (cdr g$x$20484$1a@gJ)))))
   (g$cdaaar$20269$1a@gJ
     g$cdaaar$20677$1a@gJ
     (case-lambda
       ((g$x$20485$1a@gJ) (g$cdaar$20257$1a@gJ (car g$x$20485$1a@gJ)))))
   (g$cdaadr$20270$1a@gJ
     g$cdaadr$20678$1a@gJ
     (case-lambda
       ((g$x$20486$1a@gJ) (g$cdaar$20257$1a@gJ (cdr g$x$20486$1a@gJ)))))
   (g$cdadar$20271$1a@gJ
     g$cdadar$20679$1a@gJ
     (case-lambda
       ((g$x$20487$1a@gJ) (g$cdadr$20258$1a@gJ (car g$x$20487$1a@gJ)))))
   (g$cdaddr$20272$1a@gJ
     g$cdaddr$20680$1a@gJ
     (case-lambda
       ((g$x$20488$1a@gJ) (g$cdadr$20258$1a@gJ (cdr g$x$20488$1a@gJ)))))
   (g$cddaar$20273$1a@gJ
     g$cddaar$20681$1a@gJ
     (case-lambda
       ((g$x$20489$1a@gJ) (g$cddar$20259$1a@gJ (car g$x$20489$1a@gJ)))))
   (g$cddadr$20274$1a@gJ
     g$cddadr$20682$1a@gJ
     (case-lambda
       ((g$x$20490$1a@gJ) (g$cddar$20259$1a@gJ (cdr g$x$20490$1a@gJ)))))
   (g$cdddar$20275$1a@gJ
     g$cdddar$20683$1a@gJ
     (case-lambda
       ((g$x$20491$1a@gJ) (g$cdddr$20260$1a@gJ (car g$x$20491$1a@gJ)))))
   (g$cddddr$20276$1a@gJ
     g$cddddr$20684$1a@gJ
     (case-lambda
       ((g$x$20492$1a@gJ) (g$cdddr$20260$1a@gJ (cdr g$x$20492$1a@gJ)))))
   (g$even?$20277$1a@gJ
     g$even?$20685$1a@gJ
     (case-lambda
       ((g$n$20493$1a@gJ)
        (begin
          (if (not (g$integer?$21656$1a@gJ g$n$20493$1a@gJ))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$20493$1a@gJ)
            (void))
          (g$=$21669$1a@gJ
            '0
            (g$mod$20235$1a@gJ g$n$20493$1a@gJ '2))))))
   (g$odd?$20278$1a@gJ
     g$odd?$20686$1a@gJ
     (case-lambda
       ((g$n$20494$1a@gJ)
        (begin
          (if (not (g$integer?$21656$1a@gJ g$n$20494$1a@gJ))
            (assertion-violation 'odd? '"not a integer" g$n$20494$1a@gJ)
            (void))
          (g$=$21669$1a@gJ
            '1
            (g$mod$20235$1a@gJ g$n$20494$1a@gJ '2))))))
   (g$max$20279$1a@gJ
     g$max$20687$1a@gJ
     (case-lambda
       ((g$a$20495$1a@gJ . g$rest$20496$1a@gJ)
        (begin
          (if (not (g$real?$21654$1a@gJ g$a$20495$1a@gJ))
            (assertion-violation 'max '"not a real" g$a$20495$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            (case-lambda
              ((g$a$20497$1a@gJ g$b$20498$1a@gJ)
               ((case-lambda
                  ((g$r$20499$1a@gJ)
                   (if ((case-lambda
                          ((g$t$20500$1a@gJ)
                           (if g$t$20500$1a@gJ
                             g$t$20500$1a@gJ
                             (begin
                               '#f
                               (g$inexact?$21652$1a@gJ
                                 g$b$20498$1a@gJ)))))
                        (g$inexact?$21652$1a@gJ g$a$20497$1a@gJ))
                     (g$inexact$21663$1a@gJ g$r$20499$1a@gJ)
                     g$r$20499$1a@gJ)))
                (if (g$<$21670$1a@gJ g$a$20497$1a@gJ g$b$20498$1a@gJ)
                  g$b$20498$1a@gJ
                  g$a$20497$1a@gJ))))
            g$a$20495$1a@gJ
            g$rest$20496$1a@gJ)))))
   (g$min$20280$1a@gJ
     g$min$20688$1a@gJ
     (case-lambda
       ((g$a$20501$1a@gJ . g$rest$20502$1a@gJ)
        (begin
          (if (not (g$real?$21654$1a@gJ g$a$20501$1a@gJ))
            (assertion-violation 'min '"not a real" g$a$20501$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            (case-lambda
              ((g$a$20503$1a@gJ g$b$20504$1a@gJ)
               ((case-lambda
                  ((g$r$20505$1a@gJ)
                   (if ((case-lambda
                          ((g$t$20506$1a@gJ)
                           (if g$t$20506$1a@gJ
                             g$t$20506$1a@gJ
                             (begin
                               '#f
                               (g$inexact?$21652$1a@gJ
                                 g$b$20504$1a@gJ)))))
                        (g$inexact?$21652$1a@gJ g$a$20503$1a@gJ))
                     (g$inexact$21663$1a@gJ g$r$20505$1a@gJ)
                     g$r$20505$1a@gJ)))
                (if (g$>$21672$1a@gJ g$a$20503$1a@gJ g$b$20504$1a@gJ)
                  g$b$20504$1a@gJ
                  g$a$20503$1a@gJ))))
            g$a$20501$1a@gJ
            g$rest$20502$1a@gJ)))))
   (g$gcd$20281$1a@gJ
     g$gcd$20689$1a@gJ
     (case-lambda
       (g$nums$20507$1a@gJ
        ((case-lambda
           ((g$t$20508$1a@gJ)
            (if (eqv? g$t$20508$1a@gJ '0)
              '0
              (if (eqv? g$t$20508$1a@gJ '1)
                ((case-lambda
                   ((g$n$20509$1a@gJ)
                    (begin
                      (if (not (g$integer?$21656$1a@gJ g$n$20509$1a@gJ))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$20509$1a@gJ)
                        (void))
                      (g$abs$21695$1a@gJ g$n$20509$1a@gJ))))
                 (car g$nums$20507$1a@gJ))
                (if (eqv? g$t$20508$1a@gJ '2)
                  ((case-lambda
                     ((g$a$20510$1a@gJ g$b$20511$1a@gJ)
                      (begin
                        (if (not (g$integer?$21656$1a@gJ
                                   g$a$20510$1a@gJ))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$20510$1a@gJ)
                          (void))
                        (if (not (g$integer?$21656$1a@gJ
                                   g$b$20511$1a@gJ))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$20511$1a@gJ)
                          (void))
                        (if (g$zero?$21660$1a@gJ g$b$20511$1a@gJ)
                          (g$abs$21695$1a@gJ g$a$20510$1a@gJ)
                          (g$abs$21695$1a@gJ
                            (g$gcd$20281$1a@gJ
                              g$b$20511$1a@gJ
                              (g$mod$20235$1a@gJ
                                g$a$20510$1a@gJ
                                g$b$20511$1a@gJ)))))))
                   (car g$nums$20507$1a@gJ)
                   (g$cadr$20250$1a@gJ g$nums$20507$1a@gJ))
                  (begin
                    '#f
                    (g$fold-left$20201$1a@gJ
                      g$gcd$20281$1a@gJ
                      (g$abs$21695$1a@gJ (car g$nums$20507$1a@gJ))
                      (cdr g$nums$20507$1a@gJ))))))))
         (length g$nums$20507$1a@gJ)))))
   (g$lcm$20282$1a@gJ
     g$lcm$20690$1a@gJ
     (case-lambda
       (g$nums$20512$1a@gJ
        ((case-lambda
           ((g$t$20513$1a@gJ)
            (if (eqv? g$t$20513$1a@gJ '0)
              '1
              (if (eqv? g$t$20513$1a@gJ '1)
                ((case-lambda
                   ((g$n$20514$1a@gJ)
                    (begin
                      (if (not (g$integer?$21656$1a@gJ g$n$20514$1a@gJ))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$20514$1a@gJ)
                        (void))
                      (g$abs$21695$1a@gJ g$n$20514$1a@gJ))))
                 (car g$nums$20512$1a@gJ))
                (if (eqv? g$t$20513$1a@gJ '2)
                  ((case-lambda
                     ((g$a$20515$1a@gJ g$b$20516$1a@gJ)
                      (begin
                        (if (not (g$integer?$21656$1a@gJ
                                   g$a$20515$1a@gJ))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$20515$1a@gJ)
                          (void))
                        (if (not (g$integer?$21656$1a@gJ
                                   g$b$20516$1a@gJ))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$20516$1a@gJ)
                          (void))
                        (if ((case-lambda
                               ((g$t$20517$1a@gJ)
                                (if g$t$20517$1a@gJ
                                  g$t$20517$1a@gJ
                                  (begin
                                    '#f
                                    (g$zero?$21660$1a@gJ
                                      g$b$20516$1a@gJ)))))
                             (g$zero?$21660$1a@gJ g$a$20515$1a@gJ))
                          '0
                          (g$abs$21695$1a@gJ
                            (* (/ g$a$20515$1a@gJ
                                  (g$gcd$20281$1a@gJ
                                    g$a$20515$1a@gJ
                                    g$b$20516$1a@gJ))
                               g$b$20516$1a@gJ))))))
                   (car g$nums$20512$1a@gJ)
                   (g$cadr$20250$1a@gJ g$nums$20512$1a@gJ))
                  (begin
                    '#f
                    (g$fold-left$20201$1a@gJ
                      g$lcm$20282$1a@gJ
                      (g$abs$21695$1a@gJ (car g$nums$20512$1a@gJ))
                      (cdr g$nums$20512$1a@gJ))))))))
         (length g$nums$20512$1a@gJ)))))
   (g$string-compare$20283$1a@gJ
     g$string-compare$20691$1a@gJ
     (case-lambda
       ((g$a$20518$1a@gJ g$b$20519$1a@gJ)
        (clr-call-internal
          'System.String
          '"Compare(String,String,StringComparison)"
          '()
          (g$->string$20225$1a@gJ g$a$20518$1a@gJ)
          (g$->string$20225$1a@gJ g$b$20519$1a@gJ)
          'ordinal))))
   (g$string=?$20324$1a@gJ
     g$string=?$20692$1a@gJ
     (case-lambda
       ((g$a$20520$1a@gJ g$b$20521$1a@gJ . g$rest$20522$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$a$20520$1a@gJ))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$20520$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20523$1a@gJ)
               (begin
                 (if (not (g$string?$20208$1a@gJ g$x$20523$1a@gJ))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$20523$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20524$1a@gJ)
                     (begin
                       (set! g$a$20520$1a@gJ g$x$20523$1a@gJ)
                       g$r$20524$1a@gJ)))
                  (g$fx=?$25072$1a@gJ
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$20225$1a@gJ g$a$20520$1a@gJ)
                      (g$->string$20225$1a@gJ g$x$20523$1a@gJ)
                      'ordinal)
                    '0)))))
            (cons g$b$20521$1a@gJ g$rest$20522$1a@gJ))))))
   (g$string<?$20325$1a@gJ
     g$string<?$20693$1a@gJ
     (case-lambda
       ((g$a$20525$1a@gJ g$b$20526$1a@gJ . g$rest$20527$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$a$20525$1a@gJ))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$20525$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20528$1a@gJ)
               (begin
                 (if (not (g$string?$20208$1a@gJ g$x$20528$1a@gJ))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$20528$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20529$1a@gJ)
                     (begin
                       (set! g$a$20525$1a@gJ g$x$20528$1a@gJ)
                       g$r$20529$1a@gJ)))
                  (g$fx<?$25073$1a@gJ
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$20225$1a@gJ g$a$20525$1a@gJ)
                      (g$->string$20225$1a@gJ g$x$20528$1a@gJ)
                      'ordinal)
                    '0)))))
            (cons g$b$20526$1a@gJ g$rest$20527$1a@gJ))))))
   (g$string>?$20326$1a@gJ
     g$string>?$20694$1a@gJ
     (case-lambda
       ((g$a$20530$1a@gJ g$b$20531$1a@gJ . g$rest$20532$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$a$20530$1a@gJ))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$20530$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20533$1a@gJ)
               (begin
                 (if (not (g$string?$20208$1a@gJ g$x$20533$1a@gJ))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$20533$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20534$1a@gJ)
                     (begin
                       (set! g$a$20530$1a@gJ g$x$20533$1a@gJ)
                       g$r$20534$1a@gJ)))
                  (g$fx>?$25075$1a@gJ
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$20225$1a@gJ g$a$20530$1a@gJ)
                      (g$->string$20225$1a@gJ g$x$20533$1a@gJ)
                      'ordinal)
                    '0)))))
            (cons g$b$20531$1a@gJ g$rest$20532$1a@gJ))))))
   (g$string<=?$20327$1a@gJ
     g$string<=?$20695$1a@gJ
     (case-lambda
       ((g$a$20535$1a@gJ g$b$20536$1a@gJ . g$rest$20537$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$a$20535$1a@gJ))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$20535$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20538$1a@gJ)
               (begin
                 (if (not (g$string?$20208$1a@gJ g$x$20538$1a@gJ))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$20538$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20539$1a@gJ)
                     (begin
                       (set! g$a$20535$1a@gJ g$x$20538$1a@gJ)
                       g$r$20539$1a@gJ)))
                  (g$fx<=?$25074$1a@gJ
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$20225$1a@gJ g$a$20535$1a@gJ)
                      (g$->string$20225$1a@gJ g$x$20538$1a@gJ)
                      'ordinal)
                    '0)))))
            (cons g$b$20536$1a@gJ g$rest$20537$1a@gJ))))))
   (g$string>=?$20328$1a@gJ
     g$string>=?$20696$1a@gJ
     (case-lambda
       ((g$a$20540$1a@gJ g$b$20541$1a@gJ . g$rest$20542$1a@gJ)
        (begin
          (if (not (g$string?$20208$1a@gJ g$a$20540$1a@gJ))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$20540$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20543$1a@gJ)
               (begin
                 (if (not (g$string?$20208$1a@gJ g$x$20543$1a@gJ))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$20543$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20544$1a@gJ)
                     (begin
                       (set! g$a$20540$1a@gJ g$x$20543$1a@gJ)
                       g$r$20544$1a@gJ)))
                  (g$fx>=?$25076$1a@gJ
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$20225$1a@gJ g$a$20540$1a@gJ)
                      (g$->string$20225$1a@gJ g$x$20543$1a@gJ)
                      'ordinal)
                    '0)))))
            (cons g$b$20541$1a@gJ g$rest$20542$1a@gJ))))))
   (g$symbol=?$20329$1a@gJ
     g$symbol=?$20697$1a@gJ
     (case-lambda
       ((g$a$20545$1a@gJ g$b$20546$1a@gJ . g$rest$20547$1a@gJ)
        (begin
          (if (not (g$symbol?$20212$1a@gJ g$a$20545$1a@gJ))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$20545$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20548$1a@gJ)
               (begin
                 (if (not (g$symbol?$20212$1a@gJ g$x$20548$1a@gJ))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$20548$1a@gJ)
                   (void))
                 (eq? g$a$20545$1a@gJ g$x$20548$1a@gJ))))
            (cons g$b$20546$1a@gJ g$rest$20547$1a@gJ))))))
   (g$boolean=?$20330$1a@gJ
     g$boolean=?$20698$1a@gJ
     (case-lambda
       ((g$a$20549$1a@gJ g$b$20550$1a@gJ . g$rest$20551$1a@gJ)
        (begin
          (if (not (g$boolean?$20213$1a@gJ g$a$20549$1a@gJ))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$20549$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20552$1a@gJ)
               (begin
                 (if (not (g$boolean?$20213$1a@gJ g$x$20552$1a@gJ))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$20552$1a@gJ)
                   (void))
                 (eq? g$a$20549$1a@gJ g$x$20552$1a@gJ))))
            (cons g$b$20550$1a@gJ g$rest$20551$1a@gJ))))))
   (g$char=?$20371$1a@gJ
     g$char=?$20699$1a@gJ
     (case-lambda
       ((g$a$20553$1a@gJ g$b$20554$1a@gJ . g$rest$20555$1a@gJ)
        (begin
          (if (not (g$char?$20209$1a@gJ g$a$20553$1a@gJ))
            (assertion-violation 'char=? '"not a char" g$a$20553$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20556$1a@gJ)
               (begin
                 (if (not (g$char?$20209$1a@gJ g$x$20556$1a@gJ))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$20556$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20557$1a@gJ)
                     (begin
                       (set! g$a$20553$1a@gJ g$x$20556$1a@gJ)
                       g$r$20557$1a@gJ)))
                  (g$fx=?$25072$1a@gJ
                    (g$char->integer$20218$1a@gJ g$a$20553$1a@gJ)
                    (g$char->integer$20218$1a@gJ g$x$20556$1a@gJ))))))
            (cons g$b$20554$1a@gJ g$rest$20555$1a@gJ))))))
   (g$char<?$20372$1a@gJ
     g$char<?$20700$1a@gJ
     (case-lambda
       ((g$a$20558$1a@gJ g$b$20559$1a@gJ . g$rest$20560$1a@gJ)
        (begin
          (if (not (g$char?$20209$1a@gJ g$a$20558$1a@gJ))
            (assertion-violation 'char<? '"not a char" g$a$20558$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20561$1a@gJ)
               (begin
                 (if (not (g$char?$20209$1a@gJ g$x$20561$1a@gJ))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$20561$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20562$1a@gJ)
                     (begin
                       (set! g$a$20558$1a@gJ g$x$20561$1a@gJ)
                       g$r$20562$1a@gJ)))
                  (g$fx<?$25073$1a@gJ
                    (g$char->integer$20218$1a@gJ g$a$20558$1a@gJ)
                    (g$char->integer$20218$1a@gJ g$x$20561$1a@gJ))))))
            (cons g$b$20559$1a@gJ g$rest$20560$1a@gJ))))))
   (g$char>?$20373$1a@gJ
     g$char>?$20701$1a@gJ
     (case-lambda
       ((g$a$20563$1a@gJ g$b$20564$1a@gJ . g$rest$20565$1a@gJ)
        (begin
          (if (not (g$char?$20209$1a@gJ g$a$20563$1a@gJ))
            (assertion-violation 'char>? '"not a char" g$a$20563$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20566$1a@gJ)
               (begin
                 (if (not (g$char?$20209$1a@gJ g$x$20566$1a@gJ))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$20566$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20567$1a@gJ)
                     (begin
                       (set! g$a$20563$1a@gJ g$x$20566$1a@gJ)
                       g$r$20567$1a@gJ)))
                  (g$fx>?$25075$1a@gJ
                    (g$char->integer$20218$1a@gJ g$a$20563$1a@gJ)
                    (g$char->integer$20218$1a@gJ g$x$20566$1a@gJ))))))
            (cons g$b$20564$1a@gJ g$rest$20565$1a@gJ))))))
   (g$char<=?$20374$1a@gJ
     g$char<=?$20702$1a@gJ
     (case-lambda
       ((g$a$20568$1a@gJ g$b$20569$1a@gJ . g$rest$20570$1a@gJ)
        (begin
          (if (not (g$char?$20209$1a@gJ g$a$20568$1a@gJ))
            (assertion-violation 'char<=? '"not a char" g$a$20568$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20571$1a@gJ)
               (begin
                 (if (not (g$char?$20209$1a@gJ g$x$20571$1a@gJ))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$20571$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20572$1a@gJ)
                     (begin
                       (set! g$a$20568$1a@gJ g$x$20571$1a@gJ)
                       g$r$20572$1a@gJ)))
                  (g$fx<=?$25074$1a@gJ
                    (g$char->integer$20218$1a@gJ g$a$20568$1a@gJ)
                    (g$char->integer$20218$1a@gJ g$x$20571$1a@gJ))))))
            (cons g$b$20569$1a@gJ g$rest$20570$1a@gJ))))))
   (g$char>=?$20375$1a@gJ
     g$char>=?$20703$1a@gJ
     (case-lambda
       ((g$a$20573$1a@gJ g$b$20574$1a@gJ . g$rest$20575$1a@gJ)
        (begin
          (if (not (g$char?$20209$1a@gJ g$a$20573$1a@gJ))
            (assertion-violation 'char>=? '"not a char" g$a$20573$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$20576$1a@gJ)
               (begin
                 (if (not (g$char?$20209$1a@gJ g$x$20576$1a@gJ))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$20576$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$20577$1a@gJ)
                     (begin
                       (set! g$a$20573$1a@gJ g$x$20576$1a@gJ)
                       g$r$20577$1a@gJ)))
                  (g$fx>=?$25076$1a@gJ
                    (g$char->integer$20218$1a@gJ g$a$20573$1a@gJ)
                    (g$char->integer$20218$1a@gJ g$x$20576$1a@gJ))))))
            (cons g$b$20574$1a@gJ g$rest$20575$1a@gJ))))))
   (g$rationalize$20376$1a@gJ
     g$rationalize$20704$1a@gJ
     (case-lambda
       ((g$x$20578$1a@gJ g$e$20579$1a@gJ)
        (if (if (g$infinite?$21650$1a@gJ g$x$20578$1a@gJ)
              (begin '#f (g$infinite?$21650$1a@gJ g$e$20579$1a@gJ))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$20580$1a@gJ)
              (if (if (g$exact?$21651$1a@gJ g$x$20578$1a@gJ)
                    (begin '#f (g$exact?$21651$1a@gJ g$e$20579$1a@gJ))
                    '#f)
                g$r$20580$1a@gJ
                (g$inexact$21663$1a@gJ g$r$20580$1a@gJ))))
           (apply
             /
             (g$find-ratio$20377$1a@gJ
               g$x$20578$1a@gJ
               g$e$20579$1a@gJ)))))))
   (g$find-ratio$20377$1a@gJ
     g$find-ratio$20705$1a@gJ
     (case-lambda
       ((g$x$20581$1a@gJ g$e$20582$1a@gJ)
        (g$find-ratio-between$20378$1a@gJ
          (- g$x$20581$1a@gJ g$e$20582$1a@gJ)
          (+ g$x$20581$1a@gJ g$e$20582$1a@gJ)))))
   (g$find-ratio-between$20378$1a@gJ
     g$find-ratio-between$20706$1a@gJ
     (case-lambda
       ((g$x$20583$1a@gJ g$y$20584$1a@gJ)
        (letrec* ((g$sr$20585$1a@gJ
                    (case-lambda
                      ((g$x$20587$1a@gJ g$y$20588$1a@gJ)
                       ((case-lambda
                          ((g$fx$20589$1a@gJ g$fy$20590$1a@gJ)
                           (if (g$>=$21673$1a@gJ
                                 g$fx$20589$1a@gJ
                                 g$x$20587$1a@gJ)
                             (list g$fx$20589$1a@gJ '1)
                             (if (g$=$21669$1a@gJ
                                   g$fx$20589$1a@gJ
                                   g$fy$20590$1a@gJ)
                               ((case-lambda
                                  ((g$rat$20591$1a@gJ)
                                   (list
                                     (+ (g$cadr$20250$1a@gJ
                                          g$rat$20591$1a@gJ)
                                        (* g$fx$20589$1a@gJ
                                           (car g$rat$20591$1a@gJ)))
                                     (car g$rat$20591$1a@gJ))))
                                (g$sr$20585$1a@gJ
                                  (/ (- g$y$20588$1a@gJ
                                        g$fy$20590$1a@gJ))
                                  (/ (- g$x$20587$1a@gJ
                                        g$fx$20589$1a@gJ))))
                               (begin
                                 '#f
                                 (list (+ '1 g$fx$20589$1a@gJ) '1))))))
                        (g$exact$21664$1a@gJ
                          (g$floor$21696$1a@gJ g$x$20587$1a@gJ))
                        (g$exact$21664$1a@gJ
                          (g$floor$21696$1a@gJ g$y$20588$1a@gJ)))))))
          (if (g$<$21670$1a@gJ g$y$20584$1a@gJ g$x$20583$1a@gJ)
            (g$find-ratio-between$20378$1a@gJ
              g$y$20584$1a@gJ
              g$x$20583$1a@gJ)
            (if (g$>=$21673$1a@gJ g$x$20583$1a@gJ g$y$20584$1a@gJ)
              (list g$x$20583$1a@gJ '1)
              (if (g$positive?$21661$1a@gJ g$x$20583$1a@gJ)
                (g$sr$20585$1a@gJ g$x$20583$1a@gJ g$y$20584$1a@gJ)
                (if (g$negative?$21662$1a@gJ g$y$20584$1a@gJ)
                  ((case-lambda
                     ((g$rat$20586$1a@gJ)
                      (list
                        (- (car g$rat$20586$1a@gJ))
                        (g$cadr$20250$1a@gJ g$rat$20586$1a@gJ))))
                   (g$sr$20585$1a@gJ
                     (- g$y$20584$1a@gJ)
                     (- g$x$20583$1a@gJ)))
                  (begin '#f '(0 1))))))))))
   (g$vector-map$20379$1a@gJ
     g$vector-map$20707$1a@gJ
     (case-lambda
       ((g$p$20592$1a@gJ g$vec1$20593$1a@gJ . g$vecs$20594$1a@gJ)
        ((case-lambda
           ((g$len$20595$1a@gJ)
            ((case-lambda
               ((g$res$20596$1a@gJ)
                (letrec ((g$loop$20597$1a@gJ
                           (case-lambda
                             ((g$i$20598$1a@gJ)
                              (if (g$fx=?$25072$1a@gJ
                                    g$i$20598$1a@gJ
                                    g$len$20595$1a@gJ)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$20596$1a@gJ)
                                (begin
                                  (g$vector-set!$20242$1a@gJ
                                    g$res$20596$1a@gJ
                                    g$i$20598$1a@gJ
                                    (if (null? g$vecs$20594$1a@gJ)
                                      (g$p$20592$1a@gJ
                                        (g$vector-ref$20241$1a@gJ
                                          g$vec1$20593$1a@gJ
                                          g$i$20598$1a@gJ))
                                      (apply
                                        g$p$20592$1a@gJ
                                        (g$map$20195$1a@gJ
                                          (case-lambda
                                            ((g$x$20599$1a@gJ)
                                             (g$vector-ref$20241$1a@gJ
                                               g$x$20599$1a@gJ
                                               g$i$20598$1a@gJ)))
                                          (cons
                                            g$vec1$20593$1a@gJ
                                            g$vecs$20594$1a@gJ)))))
                                  (g$loop$20597$1a@gJ
                                    (g$fx+$25059$1a@gJ
                                      g$i$20598$1a@gJ
                                      '1))))))))
                  (g$loop$20597$1a@gJ '0))))
             (g$make-vector$20243$1a@gJ g$len$20595$1a@gJ '()))))
         (g$vector-length$20244$1a@gJ g$vec1$20593$1a@gJ)))))
   (g$vector-for-each$20380$1a@gJ
     g$vector-for-each$20708$1a@gJ
     (case-lambda
       ((g$p$20600$1a@gJ g$vec1$20601$1a@gJ . g$vecs$20602$1a@gJ)
        ((case-lambda
           ((g$len$20603$1a@gJ)
            (letrec ((g$loop$20604$1a@gJ
                       (case-lambda
                         ((g$i$20605$1a@gJ)
                          (if (g$fx=?$25072$1a@gJ
                                g$i$20605$1a@gJ
                                g$len$20603$1a@gJ)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$20602$1a@gJ)
                                (g$p$20600$1a@gJ
                                  (g$vector-ref$20241$1a@gJ
                                    g$vec1$20601$1a@gJ
                                    g$i$20605$1a@gJ))
                                (apply
                                  g$p$20600$1a@gJ
                                  (g$map$20195$1a@gJ
                                    (case-lambda
                                      ((g$x$20606$1a@gJ)
                                       (g$vector-ref$20241$1a@gJ
                                         g$x$20606$1a@gJ
                                         g$i$20605$1a@gJ)))
                                    (cons
                                      g$vec1$20601$1a@gJ
                                      g$vecs$20602$1a@gJ))))
                              (g$loop$20604$1a@gJ
                                (g$fx+$25059$1a@gJ
                                  g$i$20605$1a@gJ
                                  '1))))))))
              (g$loop$20604$1a@gJ '0))))
         (g$vector-length$20244$1a@gJ g$vec1$20601$1a@gJ)))))
   (g$string-for-each$20381$1a@gJ
     g$string-for-each$20709$1a@gJ
     (case-lambda
       ((g$p$20607$1a@gJ g$str1$20608$1a@gJ . g$strs$20609$1a@gJ)
        ((case-lambda
           ((g$len$20610$1a@gJ)
            (letrec ((g$loop$20611$1a@gJ
                       (case-lambda
                         ((g$i$20612$1a@gJ)
                          (if (g$fx=?$25072$1a@gJ
                                g$i$20612$1a@gJ
                                g$len$20610$1a@gJ)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$20609$1a@gJ)
                                (g$p$20607$1a@gJ
                                  (g$string-ref$20221$1a@gJ
                                    g$str1$20608$1a@gJ
                                    g$i$20612$1a@gJ))
                                (apply
                                  g$p$20607$1a@gJ
                                  (g$map$20195$1a@gJ
                                    (case-lambda
                                      ((g$x$20613$1a@gJ)
                                       (g$string-ref$20221$1a@gJ
                                         g$x$20613$1a@gJ
                                         g$i$20612$1a@gJ)))
                                    (cons
                                      g$str1$20608$1a@gJ
                                      g$strs$20609$1a@gJ))))
                              (g$loop$20611$1a@gJ
                                (g$fx+$25059$1a@gJ
                                  g$i$20612$1a@gJ
                                  '1))))))))
              (g$loop$20611$1a@gJ '0))))
         (g$string-length$20224$1a@gJ g$str1$20608$1a@gJ))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$20711$1a@gJ
     g$using$20753$1a@gJ
     (clr-using-internal 'system))
   (g$using$20713$1a@gJ
     g$using$20754$1a@gJ
     (clr-using-internal 'system.collections))
   (g$hashtable?$20714$1a@gJ
     g$hashtable?$20755$1a@gJ
     (case-lambda
       ((g$obj$20727$1a@gJ)
        (clr-is-internal 'Hashtable g$obj$20727$1a@gJ))))
   (g$make-eq-hashtable$20715$1a@gJ
     g$make-eq-hashtable$20756$1a@gJ
     (case-lambda
       (() (g$make-eq-hashtable$20715$1a@gJ '32))
       ((g$k$20728$1a@gJ)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$20728$1a@gJ)))))
   (g$make-eqv-hashtable$20716$1a@gJ
     g$make-eqv-hashtable$20757$1a@gJ
     (case-lambda
       (() (g$make-eqv-hashtable$20716$1a@gJ '32))
       ((g$k$20729$1a@gJ)
        (make-hashtable eqv-hash eqv? g$k$20729$1a@gJ))))
   (g$hashtable-size$20717$1a@gJ
     g$hashtable-size$20758$1a@gJ
     (case-lambda
       ((g$ht$20730$1a@gJ)
        (clr-call-internal 'hashtable 'get_count g$ht$20730$1a@gJ))))
   (g$hashtable-ref$20718$1a@gJ
     g$hashtable-ref$20759$1a@gJ
     (case-lambda
       ((g$ht$20731$1a@gJ g$key$20732$1a@gJ g$default$20733$1a@gJ)
        ((case-lambda
           ((g$r$20734$1a@gJ)
            (if ((case-lambda
                   ((g$t$20735$1a@gJ)
                    (if g$t$20735$1a@gJ
                      g$t$20735$1a@gJ
                      (begin
                        '#f
                        (g$hashtable-contains?$20721$1a@gJ
                          g$ht$20731$1a@gJ
                          g$key$20732$1a@gJ)))))
                 (not (null? g$r$20734$1a@gJ)))
              g$r$20734$1a@gJ
              g$default$20733$1a@gJ)))
         (clr-call-internal
           'hashtable
           'get_item
           g$ht$20731$1a@gJ
           g$key$20732$1a@gJ)))))
   (g$hashtable-set!$20719$1a@gJ
     g$hashtable-set!$20760$1a@gJ
     (case-lambda
       ((g$ht$20736$1a@gJ g$key$20737$1a@gJ g$obj$20738$1a@gJ)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$20736$1a@gJ
          g$key$20737$1a@gJ
          g$obj$20738$1a@gJ))))
   (g$hashtable-delete!$20720$1a@gJ
     g$hashtable-delete!$20761$1a@gJ
     (case-lambda
       ((g$ht$20739$1a@gJ g$key$20740$1a@gJ)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$20739$1a@gJ
          g$key$20740$1a@gJ))))
   (g$hashtable-contains?$20721$1a@gJ
     g$hashtable-contains?$20762$1a@gJ
     (case-lambda
       ((g$ht$20741$1a@gJ g$key$20742$1a@gJ)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$20741$1a@gJ
          g$key$20742$1a@gJ))))
   (g$hashtable-update!$20722$1a@gJ
     g$hashtable-update!$20763$1a@gJ
     (case-lambda
       ((g$ht$20743$1a@gJ
          g$key$20744$1a@gJ
          g$proc$20745$1a@gJ
          g$default$20746$1a@gJ)
        (g$hashtable-set!$20719$1a@gJ
          g$ht$20743$1a@gJ
          g$key$20744$1a@gJ
          (g$proc$20745$1a@gJ
            (g$hashtable-ref$20718$1a@gJ
              g$ht$20743$1a@gJ
              g$key$20744$1a@gJ
              g$default$20746$1a@gJ))))))
   (g$hashtable-clear!$20723$1a@gJ
     g$hashtable-clear!$20764$1a@gJ
     (case-lambda
       ((g$ht$20747$1a@gJ)
        (g$hashtable-clear!$20723$1a@gJ g$ht$20747$1a@gJ '32))
       ((g$ht$20748$1a@gJ g$k$20749$1a@gJ)
        (clr-call-internal 'hashtable 'clear g$ht$20748$1a@gJ))))
   (g$string-hash$20724$1a@gJ
     g$string-hash$20765$1a@gJ
     (case-lambda
       ((g$str$20750$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$str$20750$1a@gJ))
            (assertion-violation
              'string-hash
              '"not a string"
              g$str$20750$1a@gJ)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal 'StringComparer 'get_Ordinal '())
            (clr-call-internal 'Object 'ToString g$str$20750$1a@gJ))))))
   (g$string-ci-hash$20725$1a@gJ
     g$string-ci-hash$20766$1a@gJ
     (case-lambda
       ((g$str$20751$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$str$20751$1a@gJ))
            (assertion-violation
              'string-ci-hash
              '"not a string"
              g$str$20751$1a@gJ)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal
              'StringComparer
              'get_InvariantCultureIgnoreCase
              '())
            (clr-call-internal 'Object 'ToString g$str$20751$1a@gJ))))))
   (g$symbol-hash$20726$1a@gJ
     g$symbol-hash$20767$1a@gJ
     (case-lambda
       ((g$sym$20752$1a@gJ)
        (begin
          (if (not (g$symbol?$20620$1a@gJ g$sym$20752$1a@gJ))
            (assertion-violation
              'symbol-hash
              '"not a symbol"
              g$sym$20752$1a@gJ)
            (void))
          (clr-call-internal
            'Object
            'GetHashCode
            g$sym$20752$1a@gJ))))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$20769$1a@gJ
     g$using$20776$1a@gJ
     (clr-using-internal 'system.io))
   (g$file-exists?$20770$1a@gJ
     g$file-exists?$20777$1a@gJ
     (case-lambda
       ((g$fn$20773$1a@gJ)
        (clr-call-internal 'file 'exists '() g$fn$20773$1a@gJ))))
   (g$delete-file$20771$1a@gJ
     g$delete-file$20778$1a@gJ
     (case-lambda
       ((g$fn$20774$1a@gJ)
        (clr-call-internal 'file 'delete '() g$fn$20774$1a@gJ))))
   (g$get-directory-name$20772$1a@gJ
     g$get-directory-name$20779$1a@gJ
     (case-lambda
       ((g$path$20775$1a@gJ)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$20775$1a@gJ)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$20780$1a@gJ
     g$native-endianness$21092$1a@gJ
     (case-lambda (() 'little)))
   (g$utf8$20781$1a@gJ
     g$utf8$21093$1a@gJ
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$20782$1a@gJ
     g$utf16le$21094$1a@gJ
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$20783$1a@gJ
     g$utf16be$21095$1a@gJ
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$20784$1a@gJ
     g$utf32le$21096$1a@gJ
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$20785$1a@gJ
     g$utf32be$21097$1a@gJ
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$get-bytes$20786$1a@gJ
     g$get-bytes$21098$1a@gJ
     (case-lambda
       ((g$enc$20862$1a@gJ g$str$20863$1a@gJ)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$20862$1a@gJ
          g$str$20863$1a@gJ))))
   (g$get-string$20787$1a@gJ
     g$get-string$21099$1a@gJ
     (case-lambda
       ((g$enc$20864$1a@gJ g$bv$20865$1a@gJ)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$20864$1a@gJ
          g$bv$20865$1a@gJ))))
   (g$byte->sbyte$20788$1a@gJ
     g$byte->sbyte$21100$1a@gJ
     (case-lambda
       ((g$b$20866$1a@gJ)
        (clr-cast-internal
          'System.SByte
          (clr-cast-internal 'System.Byte g$b$20866$1a@gJ)))))
   (g$->byte$20789$1a@gJ
     g$->byte$21101$1a@gJ
     (case-lambda
       ((g$k$20867$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$k$20867$1a@gJ))
            (assertion-violation '#f '"not a fixnum" g$k$20867$1a@gJ)
            (void))
          (if ((case-lambda
                 ((g$t$20868$1a@gJ)
                  (if g$t$20868$1a@gJ
                    g$t$20868$1a@gJ
                    (begin
                      '#f
                      (g$fx>?$25075$1a@gJ g$k$20867$1a@gJ '255)))))
               (g$fx<?$25073$1a@gJ g$k$20867$1a@gJ '-128))
            (assertion-violation
              '#f
              '"too big or small for octect or byte"
              g$k$20867$1a@gJ)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$20867$1a@gJ))))))
   (g$residual-->fixnum$20805$1a@gJ
     g$residual-->fixnum$21102$1a@gJ
     (case-lambda
       ((g$b$20889$1a@gJ)
        (clr-cast-internal
          'System.Int32
          (clr-cast-internal 'System.Byte g$b$20889$1a@gJ)))))
   (g$make-bytevector$20806$1a@gJ
     g$make-bytevector$21103$1a@gJ
     (case-lambda
       ((g$k$20890$1a@gJ)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$20890$1a@gJ)))
       ((g$k$20891$1a@gJ g$fill$20892$1a@gJ)
        ((case-lambda
           ((g$bv$20893$1a@gJ)
            (begin
              (g$bytevector-fill!$20809$1a@gJ
                g$bv$20893$1a@gJ
                g$fill$20892$1a@gJ)
              g$bv$20893$1a@gJ)))
         (g$make-bytevector$20806$1a@gJ g$k$20891$1a@gJ)))))
   (g$bytevector-length$20807$1a@gJ
     g$bytevector-length$21104$1a@gJ
     (case-lambda
       ((g$bv$20894$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20894$1a@gJ))
            (assertion-violation
              'bytevector-length
              '"not a bytevector"
              g$bv$20894$1a@gJ)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$20894$1a@gJ)))))
   (g$bytevector=?$20808$1a@gJ
     g$bytevector=?$21105$1a@gJ
     (case-lambda
       ((g$bv1$20895$1a@gJ g$bv2$20896$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv1$20895$1a@gJ))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv1$20895$1a@gJ)
            (void))
          (if (not (g$bytevector?$20619$1a@gJ g$bv2$20896$1a@gJ))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv2$20896$1a@gJ)
            (void))
          (if (eq? g$bv1$20895$1a@gJ g$bv2$20896$1a@gJ)
            '#t
            ((case-lambda
               ((g$t$20897$1a@gJ)
                (if g$t$20897$1a@gJ
                  g$t$20897$1a@gJ
                  (begin '#f (begin '#f '#f)))))
             ((case-lambda
                ((g$bl$20898$1a@gJ)
                 (if (g$=$21669$1a@gJ
                       g$bl$20898$1a@gJ
                       (g$bytevector-length$20807$1a@gJ
                         g$bv2$20896$1a@gJ))
                   ((letrec ((g$f$20899$1a@gJ
                               (case-lambda
                                 ((g$i$20900$1a@gJ)
                                  (if (g$=$21669$1a@gJ
                                        g$i$20900$1a@gJ
                                        g$bl$20898$1a@gJ)
                                    '#t
                                    (if (g$=$21669$1a@gJ
                                          (g$bytevector-u8-ref$20812$1a@gJ
                                            g$bv1$20895$1a@gJ
                                            g$i$20900$1a@gJ)
                                          (g$bytevector-u8-ref$20812$1a@gJ
                                            g$bv2$20896$1a@gJ
                                            g$i$20900$1a@gJ))
                                      (g$f$20899$1a@gJ
                                        (+ g$i$20900$1a@gJ '1))
                                      (begin '#f '#f)))))))
                      g$f$20899$1a@gJ)
                    '0)
                   '#f)))
              (g$bytevector-length$20807$1a@gJ g$bv1$20895$1a@gJ))))))))
   (g$bytevector-fill!$20809$1a@gJ
     g$bytevector-fill!$21106$1a@gJ
     (case-lambda
       ((g$bv$20901$1a@gJ g$fill$20902$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20901$1a@gJ))
            (assertion-violation
              'bytevector-fill!
              '"not a bytevector"
              g$bv$20901$1a@gJ)
            (void))
          ((case-lambda
             ((g$fill$20903$1a@gJ g$k$20904$1a@gJ)
              ((letrec ((g$f$20905$1a@gJ
                          (case-lambda
                            ((g$i$20906$1a@gJ)
                             (if (not (g$=$21669$1a@gJ
                                        g$i$20906$1a@gJ
                                        g$k$20904$1a@gJ))
                               (begin
                                 (g$bytevector-u8-set!$20813$1a@gJ
                                   g$bv$20901$1a@gJ
                                   g$i$20906$1a@gJ
                                   g$fill$20903$1a@gJ)
                                 (g$f$20905$1a@gJ
                                   (+ g$i$20906$1a@gJ '1)))
                               (void))))))
                 g$f$20905$1a@gJ)
               '0)))
           (g$->byte$20789$1a@gJ g$fill$20902$1a@gJ)
           (g$bytevector-length$20807$1a@gJ g$bv$20901$1a@gJ))))))
   (g$bytevector-copy!$20810$1a@gJ
     g$bytevector-copy!$21107$1a@gJ
     (case-lambda
       ((g$bv1$20907$1a@gJ
          g$s1$20908$1a@gJ
          g$bv2$20909$1a@gJ
          g$s2$20910$1a@gJ
          g$len$20911$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv1$20907$1a@gJ))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$20907$1a@gJ)
            (void))
          (if (not (g$bytevector?$20619$1a@gJ g$bv2$20909$1a@gJ))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$20909$1a@gJ)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$20907$1a@gJ
            g$s1$20908$1a@gJ
            g$bv2$20909$1a@gJ
            g$s2$20910$1a@gJ
            g$len$20911$1a@gJ)))))
   (g$bytevector-copy$20811$1a@gJ
     g$bytevector-copy$21108$1a@gJ
     (case-lambda
       ((g$bv$20912$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20912$1a@gJ))
            (assertion-violation
              'bytevector-copy
              '"not a bytevector"
              g$bv$20912$1a@gJ)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$20912$1a@gJ)))))
   (g$bytevector-u8-ref$20812$1a@gJ
     g$bytevector-u8-ref$21109$1a@gJ
     (case-lambda
       ((g$bv$20913$1a@gJ g$k$20914$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20913$1a@gJ))
            (assertion-violation
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$20913$1a@gJ)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$20913$1a@gJ g$k$20914$1a@gJ))))))
   (g$bytevector-u8-set!$20813$1a@gJ
     g$bytevector-u8-set!$21110$1a@gJ
     (case-lambda
       ((g$bv$20915$1a@gJ g$k$20916$1a@gJ g$value$20917$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20915$1a@gJ))
            (assertion-violation
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$20915$1a@gJ)
            (void))
          ($bytevector-set!
            g$bv$20915$1a@gJ
            g$k$20916$1a@gJ
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$20917$1a@gJ))))))
   (g$bytevector-s8-ref$20814$1a@gJ
     g$bytevector-s8-ref$21111$1a@gJ
     (case-lambda
       ((g$bv$20918$1a@gJ g$k$20919$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20918$1a@gJ))
            (assertion-violation
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$20918$1a@gJ)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(SByte)"
            '()
            (g$byte->sbyte$20788$1a@gJ
              ($bytevector-ref g$bv$20918$1a@gJ g$k$20919$1a@gJ)))))))
   (g$bytevector-s8-set!$20815$1a@gJ
     g$bytevector-s8-set!$21112$1a@gJ
     (case-lambda
       ((g$bv$20920$1a@gJ g$k$20921$1a@gJ g$value$20922$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20920$1a@gJ))
            (assertion-violation
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$20920$1a@gJ)
            (void))
          ($bytevector-set!
            g$bv$20920$1a@gJ
            g$k$20921$1a@gJ
            (g$->byte$20789$1a@gJ g$value$20922$1a@gJ))))))
   (g$bytevector->u8-list$20816$1a@gJ
     g$bytevector->u8-list$21113$1a@gJ
     (case-lambda
       ((g$bv$20923$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20923$1a@gJ))
            (assertion-violation
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$20923$1a@gJ)
            (void))
          ((case-lambda
             ((g$l$20924$1a@gJ)
              ((letrec ((g$f$20925$1a@gJ
                          (case-lambda
                            ((g$i$20926$1a@gJ g$a$20927$1a@gJ)
                             (if (g$negative?$21662$1a@gJ
                                   g$i$20926$1a@gJ)
                               g$a$20927$1a@gJ
                               (g$f$20925$1a@gJ
                                 (- g$i$20926$1a@gJ '1)
                                 (cons
                                   (g$bytevector-u8-ref$20812$1a@gJ
                                     g$bv$20923$1a@gJ
                                     g$i$20926$1a@gJ)
                                   g$a$20927$1a@gJ)))))))
                 g$f$20925$1a@gJ)
               (- g$l$20924$1a@gJ '1)
               '())))
           (g$bytevector-length$20807$1a@gJ g$bv$20923$1a@gJ))))))
   (g$u8-list->bytevector$20817$1a@gJ
     g$u8-list->bytevector$21114$1a@gJ
     (case-lambda
       ((g$lst$20928$1a@gJ)
        (begin
          (if (not (list? g$lst$20928$1a@gJ))
            (assertion-violation
              'u8-list->bytevector
              '"not a list"
              g$lst$20928$1a@gJ)
            (void))
          ((case-lambda
             ((g$l$20929$1a@gJ)
              ((case-lambda
                 ((g$bv$20930$1a@gJ)
                  ((letrec ((g$f$20931$1a@gJ
                              (case-lambda
                                ((g$i$20932$1a@gJ g$lst$20933$1a@gJ)
                                 (if (g$=$21669$1a@gJ
                                       g$i$20932$1a@gJ
                                       g$l$20929$1a@gJ)
                                   g$bv$20930$1a@gJ
                                   (begin
                                     (g$bytevector-u8-set!$20813$1a@gJ
                                       g$bv$20930$1a@gJ
                                       g$i$20932$1a@gJ
                                       (car g$lst$20933$1a@gJ))
                                     (g$f$20931$1a@gJ
                                       (+ g$i$20932$1a@gJ '1)
                                       (cdr g$lst$20933$1a@gJ))))))))
                     g$f$20931$1a@gJ)
                   '0
                   g$lst$20928$1a@gJ)))
               (g$make-bytevector$20806$1a@gJ g$l$20929$1a@gJ))))
           (length g$lst$20928$1a@gJ))))))
   (g$string->utf8$20818$1a@gJ
     g$string->utf8$21115$1a@gJ
     (case-lambda
       ((g$s$20934$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$s$20934$1a@gJ))
            (assertion-violation
              'string->utf8
              '"not a string"
              g$s$20934$1a@gJ)
            (void))
          (g$get-bytes$20786$1a@gJ
            g$utf8$20781$1a@gJ
            g$s$20934$1a@gJ)))))
   (g$string->utf16$20819$1a@gJ
     g$string->utf16$21116$1a@gJ
     (case-lambda
       ((g$s$20935$1a@gJ)
        (g$string->utf16$20819$1a@gJ g$s$20935$1a@gJ 'big))
       ((g$s$20936$1a@gJ g$end$20937$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$s$20936$1a@gJ))
            (assertion-violation
              'string->utf16
              '"not a string"
              g$s$20936$1a@gJ)
            (void))
          ((case-lambda
             ((g$t$20938$1a@gJ)
              (if (eqv? g$t$20938$1a@gJ 'big)
                (g$get-bytes$20786$1a@gJ
                  g$utf16be$20783$1a@gJ
                  g$s$20936$1a@gJ)
                (if (eqv? g$t$20938$1a@gJ 'little)
                  (g$get-bytes$20786$1a@gJ
                    g$utf16le$20782$1a@gJ
                    g$s$20936$1a@gJ)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf16
                      '"unknown endianness"
                      g$end$20937$1a@gJ))))))
           g$end$20937$1a@gJ)))))
   (g$string->utf32$20820$1a@gJ
     g$string->utf32$21117$1a@gJ
     (case-lambda
       ((g$s$20939$1a@gJ)
        (g$string->utf32$20820$1a@gJ g$s$20939$1a@gJ 'big))
       ((g$s$20940$1a@gJ g$end$20941$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$s$20940$1a@gJ))
            (assertion-violation
              'string->utf32
              '"not a string"
              g$s$20940$1a@gJ)
            (void))
          ((case-lambda
             ((g$t$20942$1a@gJ)
              (if (eqv? g$t$20942$1a@gJ 'big)
                (g$get-bytes$20786$1a@gJ
                  g$utf32be$20785$1a@gJ
                  g$s$20940$1a@gJ)
                (if (eqv? g$t$20942$1a@gJ 'little)
                  (g$get-bytes$20786$1a@gJ
                    g$utf32le$20784$1a@gJ
                    g$s$20940$1a@gJ)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf32
                      '"unknown endianness"
                      g$end$20941$1a@gJ))))))
           g$end$20941$1a@gJ)))))
   (g$utf8->string$20821$1a@gJ
     g$utf8->string$21118$1a@gJ
     (case-lambda
       ((g$bv$20943$1a@gJ)
        (begin
          (if (not (g$bytevector?$20619$1a@gJ g$bv$20943$1a@gJ))
            (assertion-violation
              'utf8->string
              '"not a bytevector"
              g$bv$20943$1a@gJ)
            (void))
          (g$get-string$20787$1a@gJ
            g$utf8$20781$1a@gJ
            g$bv$20943$1a@gJ)))))
   (g$trim-front$20822$1a@gJ
     g$trim-front$21119$1a@gJ
     (case-lambda
       ((g$bv$20944$1a@gJ g$k$20945$1a@gJ)
        ((case-lambda
           ((g$d$20946$1a@gJ)
            (begin
              (g$bytevector-copy!$20810$1a@gJ
                g$bv$20944$1a@gJ
                g$k$20945$1a@gJ
                g$d$20946$1a@gJ
                '0
                (g$bytevector-length$20807$1a@gJ g$d$20946$1a@gJ))
              g$d$20946$1a@gJ)))
         (g$make-bytevector$20806$1a@gJ
           (- (g$bytevector-length$20807$1a@gJ g$bv$20944$1a@gJ)
              g$k$20945$1a@gJ))))))
   (g$utf16->string$20823$1a@gJ
     g$utf16->string$21120$1a@gJ
     (case-lambda
       ((g$bv$20947$1a@gJ g$end$20948$1a@gJ)
        (g$utf16->string$20823$1a@gJ
          g$bv$20947$1a@gJ
          g$end$20948$1a@gJ
          '#f))
       ((g$bv$20949$1a@gJ g$end$20950$1a@gJ g$endman?$20951$1a@gJ)
        (if g$endman?$20951$1a@gJ
          (if (eq? g$end$20950$1a@gJ 'big)
            (g$get-string$20787$1a@gJ
              g$utf16be$20783$1a@gJ
              g$bv$20949$1a@gJ)
            (g$get-string$20787$1a@gJ
              g$utf16le$20782$1a@gJ
              g$bv$20949$1a@gJ))
          ((case-lambda
             ((g$b0$20952$1a@gJ g$b1$20953$1a@gJ)
              (if (if (g$=$21669$1a@gJ '255 g$b0$20952$1a@gJ)
                    (begin '#f (g$=$21669$1a@gJ g$b1$20953$1a@gJ '254))
                    '#f)
                (g$utf16->string$20823$1a@gJ
                  (g$trim-front$20822$1a@gJ g$bv$20949$1a@gJ '2)
                  'little
                  '#t)
                (if (if (g$=$21669$1a@gJ '254 g$b0$20952$1a@gJ)
                      (begin
                        '#f
                        (g$=$21669$1a@gJ g$b1$20953$1a@gJ '255))
                      '#f)
                  (g$utf16->string$20823$1a@gJ
                    (g$trim-front$20822$1a@gJ g$bv$20949$1a@gJ '2)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf16->string$20823$1a@gJ
                      g$bv$20949$1a@gJ
                      g$end$20950$1a@gJ
                      '#t))))))
           (g$bytevector-u8-ref$20812$1a@gJ g$bv$20949$1a@gJ '0)
           (g$bytevector-u8-ref$20812$1a@gJ g$bv$20949$1a@gJ '1))))))
   (g$utf32->string$20824$1a@gJ
     g$utf32->string$21121$1a@gJ
     (case-lambda
       ((g$bv$20954$1a@gJ g$end$20955$1a@gJ)
        (g$utf32->string$20824$1a@gJ
          g$bv$20954$1a@gJ
          g$end$20955$1a@gJ
          '#f))
       ((g$bv$20956$1a@gJ g$end$20957$1a@gJ g$endman?$20958$1a@gJ)
        (if g$endman?$20958$1a@gJ
          (if (eq? g$end$20957$1a@gJ 'big)
            (g$get-string$20787$1a@gJ
              g$utf32be$20785$1a@gJ
              g$bv$20956$1a@gJ)
            (g$get-string$20787$1a@gJ
              g$utf32le$20784$1a@gJ
              g$bv$20956$1a@gJ))
          ((case-lambda
             ((g$b0$20959$1a@gJ
                g$b1$20960$1a@gJ
                g$b2$20961$1a@gJ
                g$b3$20962$1a@gJ)
              (if (if (g$=$21669$1a@gJ '255 g$b0$20959$1a@gJ)
                    (if (g$=$21669$1a@gJ g$b1$20960$1a@gJ '254)
                      (if (g$zero?$21660$1a@gJ g$b2$20961$1a@gJ)
                        (begin
                          '#f
                          (g$zero?$21660$1a@gJ g$b3$20962$1a@gJ))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$20824$1a@gJ
                  (g$trim-front$20822$1a@gJ g$bv$20956$1a@gJ '4)
                  'little
                  '#t)
                (if (if (g$zero?$21660$1a@gJ g$b0$20959$1a@gJ)
                      (if (g$zero?$21660$1a@gJ g$b1$20960$1a@gJ)
                        (if (g$=$21669$1a@gJ '254 g$b2$20961$1a@gJ)
                          (begin
                            '#f
                            (g$=$21669$1a@gJ g$b3$20962$1a@gJ '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$20824$1a@gJ
                    (g$trim-front$20822$1a@gJ g$bv$20956$1a@gJ '4)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf32->string$20824$1a@gJ
                      g$bv$20956$1a@gJ
                      g$end$20957$1a@gJ
                      '#t))))))
           (g$bytevector-u8-ref$20812$1a@gJ g$bv$20956$1a@gJ '0)
           (g$bytevector-u8-ref$20812$1a@gJ g$bv$20956$1a@gJ '1)
           (g$bytevector-u8-ref$20812$1a@gJ g$bv$20956$1a@gJ '2)
           (g$bytevector-u8-ref$20812$1a@gJ g$bv$20956$1a@gJ '3))))))
   (g$uint-list->bytevector$20825$1a@gJ
     g$uint-list->bytevector$21122$1a@gJ
     (case-lambda
       ((g$lst$20963$1a@gJ g$end$20964$1a@gJ g$size$20965$1a@gJ)
        (begin
          (if (g$negative?$21662$1a@gJ g$size$20965$1a@gJ)
            (assertion-violation
              'uint-list->bytevector
              '"invalid size"
              g$size$20965$1a@gJ)
            (void))
          ((case-lambda
             ((g$bv$20966$1a@gJ)
              ((letrec ((g$f$20967$1a@gJ
                          (case-lambda
                            ((g$i$20968$1a@gJ g$lst$20969$1a@gJ)
                             (if (null? g$lst$20969$1a@gJ)
                               g$bv$20966$1a@gJ
                               (begin
                                 (bytevector-uint-set!
                                   g$bv$20966$1a@gJ
                                   g$i$20968$1a@gJ
                                   (car g$lst$20969$1a@gJ)
                                   g$end$20964$1a@gJ
                                   g$size$20965$1a@gJ)
                                 (g$f$20967$1a@gJ
                                   (+ g$i$20968$1a@gJ
                                      g$size$20965$1a@gJ)
                                   (cdr g$lst$20969$1a@gJ))))))))
                 g$f$20967$1a@gJ)
               '0
               g$lst$20963$1a@gJ)))
           (g$make-bytevector$20806$1a@gJ
             (* (length g$lst$20963$1a@gJ) g$size$20965$1a@gJ)))))))
   (g$sint-list->bytevector$20826$1a@gJ
     g$sint-list->bytevector$21123$1a@gJ
     (case-lambda
       ((g$lst$20970$1a@gJ g$end$20971$1a@gJ g$size$20972$1a@gJ)
        (begin
          (if (g$negative?$21662$1a@gJ g$size$20972$1a@gJ)
            (assertion-violation
              'sint-list->bytevector
              '"invalid size"
              g$size$20972$1a@gJ)
            (void))
          ((case-lambda
             ((g$bv$20973$1a@gJ)
              ((letrec ((g$f$20974$1a@gJ
                          (case-lambda
                            ((g$i$20975$1a@gJ g$lst$20976$1a@gJ)
                             (if (null? g$lst$20976$1a@gJ)
                               g$bv$20973$1a@gJ
                               (begin
                                 (bytevector-sint-set!
                                   g$bv$20973$1a@gJ
                                   g$i$20975$1a@gJ
                                   (car g$lst$20976$1a@gJ)
                                   g$end$20971$1a@gJ
                                   g$size$20972$1a@gJ)
                                 (g$f$20974$1a@gJ
                                   (+ g$i$20975$1a@gJ
                                      g$size$20972$1a@gJ)
                                   (cdr g$lst$20976$1a@gJ))))))))
                 g$f$20974$1a@gJ)
               '0
               g$lst$20970$1a@gJ)))
           (g$make-bytevector$20806$1a@gJ
             (* (length g$lst$20970$1a@gJ) g$size$20972$1a@gJ)))))))
   (g$bytevector->uint-list$20827$1a@gJ
     g$bytevector->uint-list$21124$1a@gJ
     (case-lambda
       ((g$bv$20977$1a@gJ g$end$20978$1a@gJ g$size$20979$1a@gJ)
        (begin
          (if (g$negative?$21662$1a@gJ g$size$20979$1a@gJ)
            (assertion-violation
              'bytevector->uint-list
              '"invalid size"
              g$size$20979$1a@gJ)
            (void))
          ((letrec ((g$f$20980$1a@gJ
                      (case-lambda
                        ((g$l$20981$1a@gJ g$a$20982$1a@gJ)
                         (if (g$zero?$21660$1a@gJ g$l$20981$1a@gJ)
                           g$a$20982$1a@gJ
                           (g$f$20980$1a@gJ
                             (- g$l$20981$1a@gJ g$size$20979$1a@gJ)
                             (cons
                               (bytevector-uint-ref
                                 g$bv$20977$1a@gJ
                                 (- g$l$20981$1a@gJ g$size$20979$1a@gJ)
                                 g$end$20978$1a@gJ
                                 g$size$20979$1a@gJ)
                               g$a$20982$1a@gJ)))))))
             g$f$20980$1a@gJ)
           (g$bytevector-length$20807$1a@gJ g$bv$20977$1a@gJ)
           '())))))
   (g$bytevector->sint-list$20828$1a@gJ
     g$bytevector->sint-list$21125$1a@gJ
     (case-lambda
       ((g$bv$20983$1a@gJ g$end$20984$1a@gJ g$size$20985$1a@gJ)
        (begin
          (if (g$negative?$21662$1a@gJ g$size$20985$1a@gJ)
            (assertion-violation
              'bytevector->sint-list
              '"invalid size"
              g$size$20985$1a@gJ)
            (void))
          ((letrec ((g$f$20986$1a@gJ
                      (case-lambda
                        ((g$l$20987$1a@gJ g$a$20988$1a@gJ)
                         (if (g$zero?$21660$1a@gJ g$l$20987$1a@gJ)
                           g$a$20988$1a@gJ
                           (g$f$20986$1a@gJ
                             (- g$l$20987$1a@gJ g$size$20985$1a@gJ)
                             (cons
                               (bytevector-sint-ref
                                 g$bv$20983$1a@gJ
                                 (- g$l$20987$1a@gJ g$size$20985$1a@gJ)
                                 g$end$20984$1a@gJ
                                 g$size$20985$1a@gJ)
                               g$a$20988$1a@gJ)))))))
             g$f$20986$1a@gJ)
           (g$bytevector-length$20807$1a@gJ g$bv$20983$1a@gJ)
           '())))))
   (g$single->double$20829$1a@gJ
     g$single->double$21126$1a@gJ
     (case-lambda
       ((g$s$20989$1a@gJ)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$20989$1a@gJ))))
   (g$bytevector-ieee-single-ref$20830$1a@gJ
     g$bytevector-ieee-single-ref$21127$1a@gJ
     (case-lambda
       ((g$bv$20990$1a@gJ g$k$20991$1a@gJ g$end$20992$1a@gJ)
        ((case-lambda
           ((g$d$20993$1a@gJ)
            (begin
              (g$bytevector-copy!$20810$1a@gJ
                g$bv$20990$1a@gJ
                g$k$20991$1a@gJ
                g$d$20993$1a@gJ
                '0
                '4)
              (if (eq? g$end$20992$1a@gJ 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$20993$1a@gJ)
                (void))
              (g$single->double$20829$1a@gJ
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$20993$1a@gJ
                  '0)))))
         (g$make-bytevector$20806$1a@gJ '4)))))
   (g$bytevector-ieee-double-ref$20831$1a@gJ
     g$bytevector-ieee-double-ref$21128$1a@gJ
     (case-lambda
       ((g$bv$20994$1a@gJ g$k$20995$1a@gJ g$end$20996$1a@gJ)
        ((case-lambda
           ((g$d$20997$1a@gJ)
            (begin
              (g$bytevector-copy!$20810$1a@gJ
                g$bv$20994$1a@gJ
                g$k$20995$1a@gJ
                g$d$20997$1a@gJ
                '0
                '8)
              (if (eq? g$end$20996$1a@gJ 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$20997$1a@gJ)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$20997$1a@gJ
                '0))))
         (g$make-bytevector$20806$1a@gJ '8)))))
   (g$bytevector-ieee-single-set!$20832$1a@gJ
     g$bytevector-ieee-single-set!$21129$1a@gJ
     (case-lambda
       ((g$bv$20998$1a@gJ
          g$k$20999$1a@gJ
          g$value$21000$1a@gJ
          g$end$21001$1a@gJ)
        ((case-lambda
           ((g$value$21002$1a@gJ)
            ((case-lambda
               ((g$data$21003$1a@gJ)
                (begin
                  (if (eq? g$end$21001$1a@gJ 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$21003$1a@gJ)
                    (void))
                  (g$bytevector-copy!$20810$1a@gJ
                    g$data$21003$1a@gJ
                    '0
                    g$bv$20998$1a@gJ
                    g$k$20999$1a@gJ
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$21002$1a@gJ))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$21000$1a@gJ)))))
   (g$bytevector-ieee-double-set!$20833$1a@gJ
     g$bytevector-ieee-double-set!$21130$1a@gJ
     (case-lambda
       ((g$bv$21004$1a@gJ
          g$k$21005$1a@gJ
          g$value$21006$1a@gJ
          g$end$21007$1a@gJ)
        ((case-lambda
           ((g$value$21008$1a@gJ)
            ((case-lambda
               ((g$data$21009$1a@gJ)
                (begin
                  (if (eq? g$end$21007$1a@gJ 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$21009$1a@gJ)
                    (void))
                  (g$bytevector-copy!$20810$1a@gJ
                    g$data$21009$1a@gJ
                    '0
                    g$bv$21004$1a@gJ
                    g$k$21005$1a@gJ
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$21008$1a@gJ))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$21006$1a@gJ)))))
   (g$bytevector-u16-ref$20834$1a@gJ
     g$bytevector-u16-ref$21131$1a@gJ
     (case-lambda
       ((g$bytevector$21010$1a@gJ
          g$k$21011$1a@gJ
          g$endianness$21012$1a@gJ)
        (bytevector-uint-ref
          g$bytevector$21010$1a@gJ
          g$k$21011$1a@gJ
          g$endianness$21012$1a@gJ
          '2))))
   (g$bytevector-s16-ref$20835$1a@gJ
     g$bytevector-s16-ref$21132$1a@gJ
     (case-lambda
       ((g$bytevector$21013$1a@gJ
          g$k$21014$1a@gJ
          g$endianness$21015$1a@gJ)
        (bytevector-sint-ref
          g$bytevector$21013$1a@gJ
          g$k$21014$1a@gJ
          g$endianness$21015$1a@gJ
          '2))))
   (g$bytevector-u16-native-ref$20836$1a@gJ
     g$bytevector-u16-native-ref$21133$1a@gJ
     (case-lambda
       ((g$bytevector$21016$1a@gJ g$k$21017$1a@gJ)
        (bytevector-uint-ref
          g$bytevector$21016$1a@gJ
          g$k$21017$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '2))))
   (g$bytevector-s16-native-ref$20837$1a@gJ
     g$bytevector-s16-native-ref$21134$1a@gJ
     (case-lambda
       ((g$bytevector$21018$1a@gJ g$k$21019$1a@gJ)
        (bytevector-sint-ref
          g$bytevector$21018$1a@gJ
          g$k$21019$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '2))))
   (g$bytevector-u16-set!$20838$1a@gJ
     g$bytevector-u16-set!$21135$1a@gJ
     (case-lambda
       ((g$bytevector$21020$1a@gJ
          g$k$21021$1a@gJ
          g$n$21022$1a@gJ
          g$endianness$21023$1a@gJ)
        (bytevector-uint-set!
          g$bytevector$21020$1a@gJ
          g$k$21021$1a@gJ
          g$n$21022$1a@gJ
          g$endianness$21023$1a@gJ
          '2))))
   (g$bytevector-s16-set!$20839$1a@gJ
     g$bytevector-s16-set!$21136$1a@gJ
     (case-lambda
       ((g$bytevector$21024$1a@gJ
          g$k$21025$1a@gJ
          g$n$21026$1a@gJ
          g$endianness$21027$1a@gJ)
        (bytevector-sint-set!
          g$bytevector$21024$1a@gJ
          g$k$21025$1a@gJ
          g$n$21026$1a@gJ
          g$endianness$21027$1a@gJ
          '2))))
   (g$bytevector-u16-native-set!$20840$1a@gJ
     g$bytevector-u16-native-set!$21137$1a@gJ
     (case-lambda
       ((g$bytevector$21028$1a@gJ g$k$21029$1a@gJ g$n$21030$1a@gJ)
        (bytevector-uint-set!
          g$bytevector$21028$1a@gJ
          g$k$21029$1a@gJ
          g$n$21030$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '2))))
   (g$bytevector-s16-native-set!$20841$1a@gJ
     g$bytevector-s16-native-set!$21138$1a@gJ
     (case-lambda
       ((g$bytevector$21031$1a@gJ g$k$21032$1a@gJ g$n$21033$1a@gJ)
        (bytevector-sint-set!
          g$bytevector$21031$1a@gJ
          g$k$21032$1a@gJ
          g$n$21033$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '2))))
   (g$bytevector-u32-ref$20842$1a@gJ
     g$bytevector-u32-ref$21139$1a@gJ
     (case-lambda
       ((g$bytevector$21034$1a@gJ
          g$k$21035$1a@gJ
          g$endianness$21036$1a@gJ)
        (bytevector-uint-ref
          g$bytevector$21034$1a@gJ
          g$k$21035$1a@gJ
          g$endianness$21036$1a@gJ
          '4))))
   (g$bytevector-s32-ref$20843$1a@gJ
     g$bytevector-s32-ref$21140$1a@gJ
     (case-lambda
       ((g$bytevector$21037$1a@gJ
          g$k$21038$1a@gJ
          g$endianness$21039$1a@gJ)
        (bytevector-sint-ref
          g$bytevector$21037$1a@gJ
          g$k$21038$1a@gJ
          g$endianness$21039$1a@gJ
          '4))))
   (g$bytevector-u32-native-ref$20844$1a@gJ
     g$bytevector-u32-native-ref$21141$1a@gJ
     (case-lambda
       ((g$bytevector$21040$1a@gJ g$k$21041$1a@gJ)
        (bytevector-uint-ref
          g$bytevector$21040$1a@gJ
          g$k$21041$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '4))))
   (g$bytevector-s32-native-ref$20845$1a@gJ
     g$bytevector-s32-native-ref$21142$1a@gJ
     (case-lambda
       ((g$bytevector$21042$1a@gJ g$k$21043$1a@gJ)
        (bytevector-sint-ref
          g$bytevector$21042$1a@gJ
          g$k$21043$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '4))))
   (g$bytevector-u32-set!$20846$1a@gJ
     g$bytevector-u32-set!$21143$1a@gJ
     (case-lambda
       ((g$bytevector$21044$1a@gJ
          g$k$21045$1a@gJ
          g$n$21046$1a@gJ
          g$endianness$21047$1a@gJ)
        (bytevector-uint-set!
          g$bytevector$21044$1a@gJ
          g$k$21045$1a@gJ
          g$n$21046$1a@gJ
          g$endianness$21047$1a@gJ
          '4))))
   (g$bytevector-s32-set!$20847$1a@gJ
     g$bytevector-s32-set!$21144$1a@gJ
     (case-lambda
       ((g$bytevector$21048$1a@gJ
          g$k$21049$1a@gJ
          g$n$21050$1a@gJ
          g$endianness$21051$1a@gJ)
        (bytevector-sint-set!
          g$bytevector$21048$1a@gJ
          g$k$21049$1a@gJ
          g$n$21050$1a@gJ
          g$endianness$21051$1a@gJ
          '4))))
   (g$bytevector-u32-native-set!$20848$1a@gJ
     g$bytevector-u32-native-set!$21145$1a@gJ
     (case-lambda
       ((g$bytevector$21052$1a@gJ g$k$21053$1a@gJ g$n$21054$1a@gJ)
        (bytevector-uint-set!
          g$bytevector$21052$1a@gJ
          g$k$21053$1a@gJ
          g$n$21054$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '4))))
   (g$bytevector-s32-native-set!$20849$1a@gJ
     g$bytevector-s32-native-set!$21146$1a@gJ
     (case-lambda
       ((g$bytevector$21055$1a@gJ g$k$21056$1a@gJ g$n$21057$1a@gJ)
        (bytevector-sint-set!
          g$bytevector$21055$1a@gJ
          g$k$21056$1a@gJ
          g$n$21057$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '4))))
   (g$bytevector-u64-ref$20850$1a@gJ
     g$bytevector-u64-ref$21147$1a@gJ
     (case-lambda
       ((g$bytevector$21058$1a@gJ
          g$k$21059$1a@gJ
          g$endianness$21060$1a@gJ)
        (bytevector-uint-ref
          g$bytevector$21058$1a@gJ
          g$k$21059$1a@gJ
          g$endianness$21060$1a@gJ
          '8))))
   (g$bytevector-s64-ref$20851$1a@gJ
     g$bytevector-s64-ref$21148$1a@gJ
     (case-lambda
       ((g$bytevector$21061$1a@gJ
          g$k$21062$1a@gJ
          g$endianness$21063$1a@gJ)
        (bytevector-sint-ref
          g$bytevector$21061$1a@gJ
          g$k$21062$1a@gJ
          g$endianness$21063$1a@gJ
          '8))))
   (g$bytevector-u64-native-ref$20852$1a@gJ
     g$bytevector-u64-native-ref$21149$1a@gJ
     (case-lambda
       ((g$bytevector$21064$1a@gJ g$k$21065$1a@gJ)
        (bytevector-uint-ref
          g$bytevector$21064$1a@gJ
          g$k$21065$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '8))))
   (g$bytevector-s64-native-ref$20853$1a@gJ
     g$bytevector-s64-native-ref$21150$1a@gJ
     (case-lambda
       ((g$bytevector$21066$1a@gJ g$k$21067$1a@gJ)
        (bytevector-sint-ref
          g$bytevector$21066$1a@gJ
          g$k$21067$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '8))))
   (g$bytevector-u64-set!$20854$1a@gJ
     g$bytevector-u64-set!$21151$1a@gJ
     (case-lambda
       ((g$bytevector$21068$1a@gJ
          g$k$21069$1a@gJ
          g$n$21070$1a@gJ
          g$endianness$21071$1a@gJ)
        (bytevector-uint-set!
          g$bytevector$21068$1a@gJ
          g$k$21069$1a@gJ
          g$n$21070$1a@gJ
          g$endianness$21071$1a@gJ
          '8))))
   (g$bytevector-s64-set!$20855$1a@gJ
     g$bytevector-s64-set!$21152$1a@gJ
     (case-lambda
       ((g$bytevector$21072$1a@gJ
          g$k$21073$1a@gJ
          g$n$21074$1a@gJ
          g$endianness$21075$1a@gJ)
        (bytevector-sint-set!
          g$bytevector$21072$1a@gJ
          g$k$21073$1a@gJ
          g$n$21074$1a@gJ
          g$endianness$21075$1a@gJ
          '8))))
   (g$bytevector-u64-native-set!$20856$1a@gJ
     g$bytevector-u64-native-set!$21153$1a@gJ
     (case-lambda
       ((g$bytevector$21076$1a@gJ g$k$21077$1a@gJ g$n$21078$1a@gJ)
        (bytevector-uint-set!
          g$bytevector$21076$1a@gJ
          g$k$21077$1a@gJ
          g$n$21078$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '8))))
   (g$bytevector-s64-native-set!$20857$1a@gJ
     g$bytevector-s64-native-set!$21154$1a@gJ
     (case-lambda
       ((g$bytevector$21079$1a@gJ g$k$21080$1a@gJ g$n$21081$1a@gJ)
        (bytevector-sint-set!
          g$bytevector$21079$1a@gJ
          g$k$21080$1a@gJ
          g$n$21081$1a@gJ
          (g$native-endianness$20780$1a@gJ)
          '8))))
   (g$bytevector-ieee-single-native-ref$20858$1a@gJ
     g$bytevector-ieee-single-native-ref$21155$1a@gJ
     (case-lambda
       ((g$bytevector$21082$1a@gJ g$k$21083$1a@gJ)
        (if (not (g$zero?$21660$1a@gJ
                   (g$mod$20643$1a@gJ g$k$21083$1a@gJ '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$21083$1a@gJ)
          (g$bytevector-ieee-single-ref$20830$1a@gJ
            g$bytevector$21082$1a@gJ
            g$k$21083$1a@gJ
            (g$native-endianness$20780$1a@gJ))))))
   (g$bytevector-ieee-double-native-ref$20859$1a@gJ
     g$bytevector-ieee-double-native-ref$21156$1a@gJ
     (case-lambda
       ((g$bytevector$21084$1a@gJ g$k$21085$1a@gJ)
        (if (not (g$zero?$21660$1a@gJ
                   (g$mod$20643$1a@gJ g$k$21085$1a@gJ '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$21085$1a@gJ)
          (g$bytevector-ieee-double-ref$20831$1a@gJ
            g$bytevector$21084$1a@gJ
            g$k$21085$1a@gJ
            (g$native-endianness$20780$1a@gJ))))))
   (g$bytevector-ieee-single-native-set!$20860$1a@gJ
     g$bytevector-ieee-single-native-set!$21157$1a@gJ
     (case-lambda
       ((g$bytevector$21086$1a@gJ g$k$21087$1a@gJ g$x$21088$1a@gJ)
        (if (not (g$zero?$21660$1a@gJ
                   (g$mod$20643$1a@gJ g$k$21087$1a@gJ '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$21087$1a@gJ)
          (g$bytevector-ieee-single-set!$20832$1a@gJ
            g$bytevector$21086$1a@gJ
            g$k$21087$1a@gJ
            g$x$21088$1a@gJ
            (g$native-endianness$20780$1a@gJ))))))
   (g$bytevector-ieee-double-native-set!$20861$1a@gJ
     g$bytevector-ieee-double-native-set!$21158$1a@gJ
     (case-lambda
       ((g$bytevector$21089$1a@gJ g$k$21090$1a@gJ g$x$21091$1a@gJ)
        (if (not (g$zero?$21660$1a@gJ
                   (g$mod$20643$1a@gJ g$k$21090$1a@gJ '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$21090$1a@gJ)
          (g$bytevector-ieee-double-set!$20833$1a@gJ
            g$bytevector$21089$1a@gJ
            g$k$21090$1a@gJ
            g$x$21091$1a@gJ
            (g$native-endianness$20780$1a@gJ)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$21159$1a@gJ
     g$bignum?$21621$1a@gJ
     (case-lambda
       ((g$obj$21372$1a@gJ)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$21372$1a@gJ))))
   (g$rectnum?$21160$1a@gJ
     g$rectnum?$21622$1a@gJ
     (case-lambda
       ((g$obj$21373$1a@gJ)
        (clr-is-internal
          'IronScheme.Runtime.ComplexFraction
          g$obj$21373$1a@gJ))))
   (g$make-rectnum$21161$1a@gJ
     g$make-rectnum$21623$1a@gJ
     (case-lambda
       ((g$r1$21374$1a@gJ g$r2$21375$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'Make
          '()
          g$r1$21374$1a@gJ
          g$r2$21375$1a@gJ))))
   (g$rectnum-imag-part$21162$1a@gJ
     g$rectnum-imag-part$21624$1a@gJ
     (case-lambda
       ((g$c$21376$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Imag
          g$c$21376$1a@gJ))))
   (g$rectnum-real-part$21163$1a@gJ
     g$rectnum-real-part$21625$1a@gJ
     (case-lambda
       ((g$c$21377$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Real
          g$c$21377$1a@gJ))))
   (g$ratnum?$21164$1a@gJ
     g$ratnum?$21626$1a@gJ
     (case-lambda
       ((g$obj$21378$1a@gJ)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$21378$1a@gJ))))
   (g$ratnum-denominator$21165$1a@gJ
     g$ratnum-denominator$21627$1a@gJ
     (case-lambda
       ((g$rat$21379$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$21379$1a@gJ))))
   (g$ratnum-numerator$21166$1a@gJ
     g$ratnum-numerator$21628$1a@gJ
     (case-lambda
       ((g$rat$21380$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$21380$1a@gJ))))
   (g$complexnum?$21167$1a@gJ
     g$complexnum?$21629$1a@gJ
     (case-lambda
       ((g$obj$21381$1a@gJ)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$21381$1a@gJ))))
   (g$make-complexnum$21168$1a@gJ
     g$make-complexnum$21630$1a@gJ
     (case-lambda
       ((g$r1$21382$1a@gJ g$r2$21383$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$21382$1a@gJ
          g$r2$21383$1a@gJ))))
   (g$complexnum-imag-part$21169$1a@gJ
     g$complexnum-imag-part$21631$1a@gJ
     (case-lambda
       ((g$c$21384$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$21384$1a@gJ))))
   (g$complexnum-real-part$21170$1a@gJ
     g$complexnum-real-part$21632$1a@gJ
     (case-lambda
       ((g$c$21385$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$21385$1a@gJ))))
   (g$bignum/$21171$1a@gJ
     g$bignum/$21633$1a@gJ
     (case-lambda
       ((g$a$21386$1a@gJ g$b$21387$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$21386$1a@gJ
          g$b$21387$1a@gJ))))
   (g$bignum%$21172$1a@gJ
     g$bignum%$21634$1a@gJ
     (case-lambda
       ((g$a$21388$1a@gJ g$b$21389$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$21388$1a@gJ
          g$b$21389$1a@gJ))))
   (g$bignum->fixnum$21173$1a@gJ
     g$bignum->fixnum$21635$1a@gJ
     (case-lambda
       ((g$b$21390$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$21390$1a@gJ))))
   (g$flonum->ratnum$21174$1a@gJ
     g$flonum->ratnum$21636$1a@gJ
     (case-lambda
       ((g$f$21391$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$21391$1a@gJ))))
   (g$ratnum->flonum$21175$1a@gJ
     g$ratnum->flonum$21637$1a@gJ
     (case-lambda
       ((g$r$21392$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$21392$1a@gJ
          '()))))
   (g$fixnum->bignum$21176$1a@gJ
     g$fixnum->bignum$21638$1a@gJ
     (case-lambda
       ((g$f$21393$1a@gJ)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$21393$1a@gJ))))
   (g$real->complexnum$21177$1a@gJ
     g$real->complexnum$21639$1a@gJ
     (case-lambda
       ((g$num$21394$1a@gJ)
        (if (g$complexnum?$21167$1a@gJ g$num$21394$1a@gJ)
          g$num$21394$1a@gJ
          (g$make-complexnum$21168$1a@gJ
            (g$inexact$21201$1a@gJ g$num$21394$1a@gJ)
            '0.0)))))
   (g$complexnum->rectnum$21178$1a@gJ
     g$complexnum->rectnum$21640$1a@gJ
     (case-lambda
       ((g$num$21395$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          '"op_Implicit(Microsoft.Scripting.Math.Complex64)"
          '()
          g$num$21395$1a@gJ))))
   (g$rectnum->complexnum$21179$1a@gJ
     g$rectnum->complexnum$21641$1a@gJ
     (case-lambda
       ((g$num$21396$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'ToComplex64
          g$num$21396$1a@gJ))))
   (g$->fixnum$21180$1a@gJ
     g$->fixnum$21642$1a@gJ
     (case-lambda
       ((g$num$21397$1a@gJ)
        (if (g$fixnum?$20623$1a@gJ g$num$21397$1a@gJ)
          g$num$21397$1a@gJ
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$21397$1a@gJ)))))
   (g$->ratnum$21181$1a@gJ
     g$->ratnum$21643$1a@gJ
     (case-lambda
       ((g$num$21398$1a@gJ)
        (if (g$ratnum?$21164$1a@gJ g$num$21398$1a@gJ)
          g$num$21398$1a@gJ
          (if (g$real?$21192$1a@gJ g$num$21398$1a@gJ)
            (g$flonum->ratnum$21174$1a@gJ
              (g$real->flonum$21183$1a@gJ g$num$21398$1a@gJ))
            (begin
              '#f
              (assertion-violation
                '->ratnum
                '"not a real"
                g$num$21398$1a@gJ)))))))
   (g$->bignum$21182$1a@gJ
     g$->bignum$21644$1a@gJ
     (case-lambda
       ((g$num$21399$1a@gJ)
        (if (g$bignum?$21159$1a@gJ g$num$21399$1a@gJ)
          g$num$21399$1a@gJ
          (if (g$fixnum?$20623$1a@gJ g$num$21399$1a@gJ)
            (g$fixnum->bignum$21176$1a@gJ g$num$21399$1a@gJ)
            (begin
              '#f
              (assertion-violation
                '->bignum
                '"not an integer"
                g$num$21399$1a@gJ)))))))
   (g$real->flonum$21183$1a@gJ
     g$real->flonum$21645$1a@gJ
     (case-lambda
       ((g$x$21400$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x$21400$1a@gJ))
            (assertion-violation
              'real->flonum
              '"not a real"
              g$x$21400$1a@gJ)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$21400$1a@gJ)))))
   (g$fixnum->flonum$21184$1a@gJ
     g$fixnum->flonum$21646$1a@gJ
     (case-lambda
       ((g$x$21401$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x$21401$1a@gJ))
            (assertion-violation
              'fixnum->flonum
              '"not a fixnum"
              g$x$21401$1a@gJ)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$21401$1a@gJ))))))
   (g$number?$21185$1a@gJ
     g$number?$21647$1a@gJ
     (case-lambda
       ((g$obj$21402$1a@gJ)
        ((case-lambda
           ((g$t$21403$1a@gJ)
            (if g$t$21403$1a@gJ
              g$t$21403$1a@gJ
              ((case-lambda
                 ((g$t$21404$1a@gJ)
                  (if g$t$21404$1a@gJ
                    g$t$21404$1a@gJ
                    ((case-lambda
                       ((g$t$21405$1a@gJ)
                        (if g$t$21405$1a@gJ
                          g$t$21405$1a@gJ
                          ((case-lambda
                             ((g$t$21406$1a@gJ)
                              (if g$t$21406$1a@gJ
                                g$t$21406$1a@gJ
                                ((case-lambda
                                   ((g$t$21407$1a@gJ)
                                    (if g$t$21407$1a@gJ
                                      g$t$21407$1a@gJ
                                      (begin
                                        '#f
                                        (g$rectnum?$21160$1a@gJ
                                          g$obj$21402$1a@gJ)))))
                                 (g$complexnum?$21167$1a@gJ
                                   g$obj$21402$1a@gJ)))))
                           (g$ratnum?$21164$1a@gJ g$obj$21402$1a@gJ)))))
                     (g$bignum?$21159$1a@gJ g$obj$21402$1a@gJ)))))
               (g$flonum?$20624$1a@gJ g$obj$21402$1a@gJ)))))
         (g$fixnum?$20623$1a@gJ g$obj$21402$1a@gJ)))))
   (g$nan?$21186$1a@gJ
     g$nan?$21648$1a@gJ
     (case-lambda
       ((g$num$21408$1a@gJ)
        (if ((case-lambda
               ((g$t$21409$1a@gJ)
                (if g$t$21409$1a@gJ
                  g$t$21409$1a@gJ
                  ((case-lambda
                     ((g$t$21410$1a@gJ)
                      (if g$t$21410$1a@gJ
                        g$t$21410$1a@gJ
                        ((case-lambda
                           ((g$t$21411$1a@gJ)
                            (if g$t$21411$1a@gJ
                              g$t$21411$1a@gJ
                              (begin
                                '#f
                                (g$rectnum?$21160$1a@gJ
                                  g$num$21408$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$num$21408$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$num$21408$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$num$21408$1a@gJ))
          '#f
          (if (g$flonum?$20624$1a@gJ g$num$21408$1a@gJ)
            (g$flnan?$26634$1a@gJ g$num$21408$1a@gJ)
            (if (g$complexnum?$21167$1a@gJ g$num$21408$1a@gJ)
              ((case-lambda
                 ((g$t$21412$1a@gJ)
                  (if g$t$21412$1a@gJ
                    g$t$21412$1a@gJ
                    (begin
                      '#f
                      (g$flnan?$26634$1a@gJ
                        (g$complexnum-imag-part$21169$1a@gJ
                          g$num$21408$1a@gJ))))))
               (g$flnan?$26634$1a@gJ
                 (g$complexnum-real-part$21170$1a@gJ
                   g$num$21408$1a@gJ)))
              (begin
                '#f
                (assertion-violation
                  'nan?
                  '"not a number"
                  g$num$21408$1a@gJ))))))))
   (g$finite?$21187$1a@gJ
     g$finite?$21649$1a@gJ
     (case-lambda
       ((g$num$21413$1a@gJ)
        (if ((case-lambda
               ((g$t$21414$1a@gJ)
                (if g$t$21414$1a@gJ
                  g$t$21414$1a@gJ
                  ((case-lambda
                     ((g$t$21415$1a@gJ)
                      (if g$t$21415$1a@gJ
                        g$t$21415$1a@gJ
                        ((case-lambda
                           ((g$t$21416$1a@gJ)
                            (if g$t$21416$1a@gJ
                              g$t$21416$1a@gJ
                              (begin
                                '#f
                                (g$rectnum?$21160$1a@gJ
                                  g$num$21413$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$num$21413$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$num$21413$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$num$21413$1a@gJ))
          '#t
          (if (g$flonum?$20624$1a@gJ g$num$21413$1a@gJ)
            (g$flfinite?$26631$1a@gJ g$num$21413$1a@gJ)
            (if (g$complexnum?$21167$1a@gJ g$num$21413$1a@gJ)
              (if (g$flfinite?$26631$1a@gJ
                    (g$complexnum-real-part$21170$1a@gJ
                      g$num$21413$1a@gJ))
                (begin
                  '#f
                  (g$flfinite?$26631$1a@gJ
                    (g$complexnum-imag-part$21169$1a@gJ
                      g$num$21413$1a@gJ)))
                '#f)
              (begin
                '#f
                (assertion-violation
                  'finite?
                  '"not a number"
                  g$num$21413$1a@gJ))))))))
   (g$infinite?$21188$1a@gJ
     g$infinite?$21650$1a@gJ
     (case-lambda
       ((g$num$21417$1a@gJ)
        (if ((case-lambda
               ((g$t$21418$1a@gJ)
                (if g$t$21418$1a@gJ
                  g$t$21418$1a@gJ
                  ((case-lambda
                     ((g$t$21419$1a@gJ)
                      (if g$t$21419$1a@gJ
                        g$t$21419$1a@gJ
                        ((case-lambda
                           ((g$t$21420$1a@gJ)
                            (if g$t$21420$1a@gJ
                              g$t$21420$1a@gJ
                              (begin
                                '#f
                                (g$rectnum?$21160$1a@gJ
                                  g$num$21417$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$num$21417$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$num$21417$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$num$21417$1a@gJ))
          '#f
          (if (g$flonum?$20624$1a@gJ g$num$21417$1a@gJ)
            (g$flinfinite?$26633$1a@gJ g$num$21417$1a@gJ)
            (if (g$complexnum?$21167$1a@gJ g$num$21417$1a@gJ)
              ((case-lambda
                 ((g$t$21421$1a@gJ)
                  (if g$t$21421$1a@gJ
                    g$t$21421$1a@gJ
                    (begin
                      '#f
                      (g$flinfinite?$26633$1a@gJ
                        (g$complexnum-imag-part$21169$1a@gJ
                          g$num$21417$1a@gJ))))))
               (g$flinfinite?$26633$1a@gJ
                 (g$complexnum-real-part$21170$1a@gJ
                   g$num$21417$1a@gJ)))
              (begin
                '#f
                (assertion-violation
                  'infinite?
                  '"not a number"
                  g$num$21417$1a@gJ))))))))
   (g$exact?$21189$1a@gJ
     g$exact?$21651$1a@gJ
     (case-lambda
       ((g$obj$21422$1a@gJ)
        (if ((case-lambda
               ((g$t$21423$1a@gJ)
                (if g$t$21423$1a@gJ
                  g$t$21423$1a@gJ
                  ((case-lambda
                     ((g$t$21424$1a@gJ)
                      (if g$t$21424$1a@gJ
                        g$t$21424$1a@gJ
                        ((case-lambda
                           ((g$t$21425$1a@gJ)
                            (if g$t$21425$1a@gJ
                              g$t$21425$1a@gJ
                              (begin
                                '#f
                                (g$rectnum?$21160$1a@gJ
                                  g$obj$21422$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$obj$21422$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$obj$21422$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21422$1a@gJ))
          '#t
          (if ((case-lambda
                 ((g$t$21426$1a@gJ)
                  (if g$t$21426$1a@gJ
                    g$t$21426$1a@gJ
                    (begin
                      '#f
                      (g$complexnum?$21167$1a@gJ g$obj$21422$1a@gJ)))))
               (g$flonum?$20624$1a@gJ g$obj$21422$1a@gJ))
            '#f
            (begin
              '#f
              (assertion-violation
                'exact
                '"not a number"
                g$obj$21422$1a@gJ)))))))
   (g$inexact?$21190$1a@gJ
     g$inexact?$21652$1a@gJ
     (case-lambda
       ((g$obj$21427$1a@gJ)
        (if ((case-lambda
               ((g$t$21428$1a@gJ)
                (if g$t$21428$1a@gJ
                  g$t$21428$1a@gJ
                  ((case-lambda
                     ((g$t$21429$1a@gJ)
                      (if g$t$21429$1a@gJ
                        g$t$21429$1a@gJ
                        ((case-lambda
                           ((g$t$21430$1a@gJ)
                            (if g$t$21430$1a@gJ
                              g$t$21430$1a@gJ
                              (begin
                                '#f
                                (g$rectnum?$21160$1a@gJ
                                  g$obj$21427$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$obj$21427$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$obj$21427$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21427$1a@gJ))
          '#f
          (if ((case-lambda
                 ((g$t$21431$1a@gJ)
                  (if g$t$21431$1a@gJ
                    g$t$21431$1a@gJ
                    (begin
                      '#f
                      (g$complexnum?$21167$1a@gJ g$obj$21427$1a@gJ)))))
               (g$flonum?$20624$1a@gJ g$obj$21427$1a@gJ))
            '#t
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$obj$21427$1a@gJ)))))))
   (g$complex?$21191$1a@gJ
     g$complex?$21653$1a@gJ
     (case-lambda
       ((g$obj$21432$1a@gJ) (g$number?$21185$1a@gJ g$obj$21432$1a@gJ))))
   (g$real?$21192$1a@gJ
     g$real?$21654$1a@gJ
     (case-lambda
       ((g$obj$21433$1a@gJ)
        (if ((case-lambda
               ((g$t$21434$1a@gJ)
                (if g$t$21434$1a@gJ
                  g$t$21434$1a@gJ
                  ((case-lambda
                     ((g$t$21435$1a@gJ)
                      (if g$t$21435$1a@gJ
                        g$t$21435$1a@gJ
                        ((case-lambda
                           ((g$t$21436$1a@gJ)
                            (if g$t$21436$1a@gJ
                              g$t$21436$1a@gJ
                              (begin
                                '#f
                                (g$flonum?$20624$1a@gJ
                                  g$obj$21433$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$obj$21433$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$obj$21433$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21433$1a@gJ))
          '#t
          (if ((case-lambda
                 ((g$t$21437$1a@gJ)
                  (if g$t$21437$1a@gJ
                    g$t$21437$1a@gJ
                    (begin
                      '#f
                      (g$rectnum?$21160$1a@gJ g$obj$21433$1a@gJ)))))
               (g$complexnum?$21167$1a@gJ g$obj$21433$1a@gJ))
            ((case-lambda
               ((g$i$21438$1a@gJ)
                (if (g$zero?$21198$1a@gJ g$i$21438$1a@gJ)
                  (begin '#f (g$exact?$21189$1a@gJ g$i$21438$1a@gJ))
                  '#f)))
             (g$imag-part$21318$1a@gJ g$obj$21433$1a@gJ))
            (begin '#f '#f))))))
   (g$rational?$21193$1a@gJ
     g$rational?$21655$1a@gJ
     (case-lambda
       ((g$obj$21439$1a@gJ)
        (if ((case-lambda
               ((g$t$21440$1a@gJ)
                (if g$t$21440$1a@gJ
                  g$t$21440$1a@gJ
                  ((case-lambda
                     ((g$t$21441$1a@gJ)
                      (if g$t$21441$1a@gJ
                        g$t$21441$1a@gJ
                        (begin
                          '#f
                          (g$ratnum?$21164$1a@gJ g$obj$21439$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$obj$21439$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21439$1a@gJ))
          '#t
          (if (if ((case-lambda
                     ((g$t$21442$1a@gJ)
                      (if g$t$21442$1a@gJ
                        g$t$21442$1a@gJ
                        ((case-lambda
                           ((g$t$21443$1a@gJ)
                            (if g$t$21443$1a@gJ
                              g$t$21443$1a@gJ
                              (begin
                                '#f
                                (g$flonum?$20624$1a@gJ
                                  g$obj$21439$1a@gJ)))))
                         (g$rectnum?$21160$1a@gJ g$obj$21439$1a@gJ)))))
                   (g$complexnum?$21167$1a@gJ g$obj$21439$1a@gJ))
                (if (g$finite?$21187$1a@gJ g$obj$21439$1a@gJ)
                  (begin
                    '#f
                    (not (g$nan?$21186$1a@gJ g$obj$21439$1a@gJ)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21444$1a@gJ)
                (if (g$exact?$21189$1a@gJ g$i$21444$1a@gJ)
                  (begin '#f (g$zero?$21198$1a@gJ g$i$21444$1a@gJ))
                  '#f)))
             (g$imag-part$21318$1a@gJ g$obj$21439$1a@gJ))
            (begin '#f '#f))))))
   (g$integer?$21194$1a@gJ
     g$integer?$21656$1a@gJ
     (case-lambda
       ((g$obj$21445$1a@gJ)
        (if ((case-lambda
               ((g$t$21446$1a@gJ)
                (if g$t$21446$1a@gJ
                  g$t$21446$1a@gJ
                  (begin
                    '#f
                    (g$bignum?$21159$1a@gJ g$obj$21445$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21445$1a@gJ))
          '#t
          (if (if ((case-lambda
                     ((g$t$21447$1a@gJ)
                      (if g$t$21447$1a@gJ
                        g$t$21447$1a@gJ
                        ((case-lambda
                           ((g$t$21448$1a@gJ)
                            (if g$t$21448$1a@gJ
                              g$t$21448$1a@gJ
                              ((case-lambda
                                 ((g$t$21449$1a@gJ)
                                  (if g$t$21449$1a@gJ
                                    g$t$21449$1a@gJ
                                    (begin
                                      '#f
                                      (g$flonum?$20624$1a@gJ
                                        g$obj$21445$1a@gJ)))))
                               (g$rectnum?$21160$1a@gJ
                                 g$obj$21445$1a@gJ)))))
                         (g$complexnum?$21167$1a@gJ
                           g$obj$21445$1a@gJ)))))
                   (g$ratnum?$21164$1a@gJ g$obj$21445$1a@gJ))
                (if (g$finite?$21187$1a@gJ g$obj$21445$1a@gJ)
                  (begin
                    '#f
                    (not (g$nan?$21186$1a@gJ g$obj$21445$1a@gJ)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21450$1a@gJ)
                (if (g$exact?$21189$1a@gJ g$i$21450$1a@gJ)
                  (if (g$zero?$21198$1a@gJ g$i$21450$1a@gJ)
                    (begin
                      '#f
                      (g$=$21305$1a@gJ
                        (g$denominator$21316$1a@gJ
                          (g$real-part$21317$1a@gJ g$obj$21445$1a@gJ))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$21318$1a@gJ g$obj$21445$1a@gJ))
            (begin '#f '#f))))))
   (g$real-valued?$21195$1a@gJ
     g$real-valued?$21657$1a@gJ
     (case-lambda
       ((g$obj$21451$1a@gJ)
        (if ((case-lambda
               ((g$t$21452$1a@gJ)
                (if g$t$21452$1a@gJ
                  g$t$21452$1a@gJ
                  ((case-lambda
                     ((g$t$21453$1a@gJ)
                      (if g$t$21453$1a@gJ
                        g$t$21453$1a@gJ
                        ((case-lambda
                           ((g$t$21454$1a@gJ)
                            (if g$t$21454$1a@gJ
                              g$t$21454$1a@gJ
                              (begin
                                '#f
                                (g$flonum?$20624$1a@gJ
                                  g$obj$21451$1a@gJ)))))
                         (g$ratnum?$21164$1a@gJ g$obj$21451$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$obj$21451$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21451$1a@gJ))
          '#t
          (if ((case-lambda
                 ((g$t$21455$1a@gJ)
                  (if g$t$21455$1a@gJ
                    g$t$21455$1a@gJ
                    (begin
                      '#f
                      (g$rectnum?$21160$1a@gJ g$obj$21451$1a@gJ)))))
               (g$complexnum?$21167$1a@gJ g$obj$21451$1a@gJ))
            ((case-lambda
               ((g$i$21456$1a@gJ)
                (g$zero?$21198$1a@gJ g$i$21456$1a@gJ)))
             (g$imag-part$21318$1a@gJ g$obj$21451$1a@gJ))
            (begin '#f '#f))))))
   (g$rational-valued?$21196$1a@gJ
     g$rational-valued?$21658$1a@gJ
     (case-lambda
       ((g$obj$21457$1a@gJ)
        (if ((case-lambda
               ((g$t$21458$1a@gJ)
                (if g$t$21458$1a@gJ
                  g$t$21458$1a@gJ
                  ((case-lambda
                     ((g$t$21459$1a@gJ)
                      (if g$t$21459$1a@gJ
                        g$t$21459$1a@gJ
                        (begin
                          '#f
                          (g$ratnum?$21164$1a@gJ g$obj$21457$1a@gJ)))))
                   (g$bignum?$21159$1a@gJ g$obj$21457$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21457$1a@gJ))
          '#t
          (if (if ((case-lambda
                     ((g$t$21460$1a@gJ)
                      (if g$t$21460$1a@gJ
                        g$t$21460$1a@gJ
                        ((case-lambda
                           ((g$t$21461$1a@gJ)
                            (if g$t$21461$1a@gJ
                              g$t$21461$1a@gJ
                              (begin
                                '#f
                                (g$flonum?$20624$1a@gJ
                                  g$obj$21457$1a@gJ)))))
                         (g$rectnum?$21160$1a@gJ g$obj$21457$1a@gJ)))))
                   (g$complexnum?$21167$1a@gJ g$obj$21457$1a@gJ))
                (if (g$finite?$21187$1a@gJ g$obj$21457$1a@gJ)
                  (begin
                    '#f
                    (not (g$nan?$21186$1a@gJ g$obj$21457$1a@gJ)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21462$1a@gJ)
                (g$zero?$21198$1a@gJ g$i$21462$1a@gJ)))
             (g$imag-part$21318$1a@gJ g$obj$21457$1a@gJ))
            (begin '#f '#f))))))
   (g$integer-valued?$21197$1a@gJ
     g$integer-valued?$21659$1a@gJ
     (case-lambda
       ((g$obj$21463$1a@gJ)
        (if ((case-lambda
               ((g$t$21464$1a@gJ)
                (if g$t$21464$1a@gJ
                  g$t$21464$1a@gJ
                  (begin
                    '#f
                    (g$bignum?$21159$1a@gJ g$obj$21463$1a@gJ)))))
             (g$fixnum?$20623$1a@gJ g$obj$21463$1a@gJ))
          '#t
          (if (if ((case-lambda
                     ((g$t$21465$1a@gJ)
                      (if g$t$21465$1a@gJ
                        g$t$21465$1a@gJ
                        ((case-lambda
                           ((g$t$21466$1a@gJ)
                            (if g$t$21466$1a@gJ
                              g$t$21466$1a@gJ
                              ((case-lambda
                                 ((g$t$21467$1a@gJ)
                                  (if g$t$21467$1a@gJ
                                    g$t$21467$1a@gJ
                                    (begin
                                      '#f
                                      (g$flonum?$20624$1a@gJ
                                        g$obj$21463$1a@gJ)))))
                               (g$rectnum?$21160$1a@gJ
                                 g$obj$21463$1a@gJ)))))
                         (g$complexnum?$21167$1a@gJ
                           g$obj$21463$1a@gJ)))))
                   (g$ratnum?$21164$1a@gJ g$obj$21463$1a@gJ))
                (if (g$finite?$21187$1a@gJ g$obj$21463$1a@gJ)
                  (begin
                    '#f
                    (not (g$nan?$21186$1a@gJ g$obj$21463$1a@gJ)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21468$1a@gJ)
                (if (g$zero?$21198$1a@gJ g$i$21468$1a@gJ)
                  (begin
                    '#f
                    (g$=$21305$1a@gJ
                      (g$denominator$21316$1a@gJ
                        (g$real-part$21317$1a@gJ g$obj$21463$1a@gJ))
                      '1))
                  '#f)))
             (g$imag-part$21318$1a@gJ g$obj$21463$1a@gJ))
            (begin '#f '#f))))))
   (g$zero?$21198$1a@gJ
     g$zero?$21660$1a@gJ
     (case-lambda
       ((g$num$21469$1a@gJ)
        (begin
          (if (not (g$number?$21185$1a@gJ g$num$21469$1a@gJ))
            (assertion-violation
              'zero?
              '"not a number"
              g$num$21469$1a@gJ)
            (void))
          (g$=$21305$1a@gJ g$num$21469$1a@gJ '0)))))
   (g$positive?$21199$1a@gJ
     g$positive?$21661$1a@gJ
     (case-lambda
       ((g$num$21470$1a@gJ)
        (begin
          (if (not (g$number?$21185$1a@gJ g$num$21470$1a@gJ))
            (assertion-violation
              'positive?
              '"not a number"
              g$num$21470$1a@gJ)
            (void))
          (g$>$21308$1a@gJ g$num$21470$1a@gJ '0)))))
   (g$negative?$21200$1a@gJ
     g$negative?$21662$1a@gJ
     (case-lambda
       ((g$num$21471$1a@gJ)
        (begin
          (if (not (g$number?$21185$1a@gJ g$num$21471$1a@gJ))
            (assertion-violation
              'negative?
              '"not a number"
              g$num$21471$1a@gJ)
            (void))
          (g$<$21306$1a@gJ g$num$21471$1a@gJ '0)))))
   (g$inexact$21201$1a@gJ
     g$inexact$21663$1a@gJ
     (case-lambda
       ((g$num$21472$1a@gJ)
        (if ((case-lambda
               ((g$t$21473$1a@gJ)
                (if g$t$21473$1a@gJ
                  g$t$21473$1a@gJ
                  (begin
                    '#f
                    (g$flonum?$20624$1a@gJ g$num$21472$1a@gJ)))))
             (g$complexnum?$21167$1a@gJ g$num$21472$1a@gJ))
          g$num$21472$1a@gJ
          (if ((case-lambda
                 ((g$t$21474$1a@gJ)
                  (if g$t$21474$1a@gJ
                    g$t$21474$1a@gJ
                    (begin
                      '#f
                      (g$ratnum?$21164$1a@gJ g$num$21472$1a@gJ)))))
               (g$exact-integer?$21314$1a@gJ g$num$21472$1a@gJ))
            (g$real->flonum$21183$1a@gJ g$num$21472$1a@gJ)
            (if (g$rectnum?$21160$1a@gJ g$num$21472$1a@gJ)
              (g$rectnum->complexnum$21179$1a@gJ g$num$21472$1a@gJ)
              (begin
                '#f
                (assertion-violation
                  'inexact
                  '"not a number"
                  g$num$21472$1a@gJ))))))))
   (g$exact$21202$1a@gJ
     g$exact$21664$1a@gJ
     (case-lambda
       ((g$num$21475$1a@gJ)
        (if (g$complexnum?$21167$1a@gJ g$num$21475$1a@gJ)
          (if (g$zero?$21198$1a@gJ
                (g$complexnum-imag-part$21169$1a@gJ g$num$21475$1a@gJ))
            (g$exact$21202$1a@gJ
              (g$complexnum-real-part$21170$1a@gJ g$num$21475$1a@gJ))
            ((case-lambda
               ((g$t$21476$1a@gJ)
                (if g$t$21476$1a@gJ
                  g$t$21476$1a@gJ
                  (begin
                    '#f
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"no exact equivalent"
                        g$num$21475$1a@gJ))))))
             ((case-lambda
                ((g$i$21477$1a@gJ g$r$21478$1a@gJ)
                 (if (g$rational?$21193$1a@gJ g$r$21478$1a@gJ)
                   (if (g$rational?$21193$1a@gJ g$i$21477$1a@gJ)
                     (begin
                       '#f
                       (g$make-rectnum$21161$1a@gJ
                         (g$flonum->ratnum$21174$1a@gJ g$r$21478$1a@gJ)
                         (g$flonum->ratnum$21174$1a@gJ
                           g$i$21477$1a@gJ)))
                     '#f)
                   '#f)))
              (g$complexnum-imag-part$21169$1a@gJ g$num$21475$1a@gJ)
              (g$complexnum-real-part$21170$1a@gJ g$num$21475$1a@gJ))))
          (if (g$flonum?$20624$1a@gJ g$num$21475$1a@gJ)
            (if ((case-lambda
                   ((g$t$21479$1a@gJ)
                    (if g$t$21479$1a@gJ
                      g$t$21479$1a@gJ
                      (begin
                        '#f
                        (g$flinfinite?$26633$1a@gJ
                          g$num$21475$1a@gJ)))))
                 (g$flnan?$26634$1a@gJ g$num$21475$1a@gJ))
              (assertion-violation
                'exact
                '"no exact equivalent"
                g$num$21475$1a@gJ)
              (g$flonum->ratnum$21174$1a@gJ g$num$21475$1a@gJ))
            (if (g$bignum?$21159$1a@gJ g$num$21475$1a@gJ)
              (if (g$fx<=?$25074$1a@gJ
                    (g$fixnum-width$20625$1a@gJ)
                    (g$bitwise-length$22817$1a@gJ g$num$21475$1a@gJ))
                g$num$21475$1a@gJ
                (g$bignum->fixnum$21173$1a@gJ g$num$21475$1a@gJ))
              (if (g$ratnum?$21164$1a@gJ g$num$21475$1a@gJ)
                (if (g$=$21305$1a@gJ
                      (g$ratnum-denominator$21165$1a@gJ
                        g$num$21475$1a@gJ)
                      '1)
                  (g$exact$21202$1a@gJ
                    (g$ratnum-numerator$21166$1a@gJ g$num$21475$1a@gJ))
                  g$num$21475$1a@gJ)
                (if (g$rectnum?$21160$1a@gJ g$num$21475$1a@gJ)
                  (if (g$zero?$21198$1a@gJ
                        (g$rectnum-imag-part$21162$1a@gJ
                          g$num$21475$1a@gJ))
                    (g$exact$21202$1a@gJ
                      (g$rectnum-real-part$21163$1a@gJ
                        g$num$21475$1a@gJ))
                    g$num$21475$1a@gJ)
                  (if (g$fixnum?$20623$1a@gJ g$num$21475$1a@gJ)
                    g$num$21475$1a@gJ
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"not a number"
                        g$num$21475$1a@gJ)))))))))))
   (g$hex-char$21203$1a@gJ
     g$hex-char$21665$1a@gJ
     (case-lambda
       ((g$num$21480$1a@gJ)
        (g$integer->char$20627$1a@gJ
          (+ g$num$21480$1a@gJ
             (g$char->integer$20626$1a@gJ
               (if (g$fx<?$25073$1a@gJ g$num$21480$1a@gJ '10)
                 '#\0
                 '#\W)))))))
   (g$fixnum->string$21204$1a@gJ
     g$fixnum->string$21666$1a@gJ
     (case-lambda
       ((g$num$21481$1a@gJ g$radix$21482$1a@gJ)
        (if (g$fxnegative?$25093$1a@gJ g$num$21481$1a@gJ)
          (g$string-append$20638$1a@gJ
            '"-"
            (g$number->string$21206$1a@gJ
              (g$abs$21364$1a@gJ g$num$21481$1a@gJ)
              g$radix$21482$1a@gJ))
          (clr-call-internal
            'System.Convert
            '"ToString(Int32,Int32)"
            '()
            g$num$21481$1a@gJ
            g$radix$21482$1a@gJ)))))
   (g$bignum->string$21205$1a@gJ
     g$bignum->string$21667$1a@gJ
     (case-lambda
       ((g$num$21483$1a@gJ g$radix$21484$1a@gJ)
        ((case-lambda
           ((g$neg?$21485$1a@gJ)
            ((case-lambda
               ((g$num$21486$1a@gJ)
                ((case-lambda
                   ((g$out$21487$1a@gJ)
                    (if g$neg?$21485$1a@gJ
                      (g$string-append$20638$1a@gJ
                        '"-"
                        g$out$21487$1a@gJ)
                      g$out$21487$1a@gJ)))
                 ((letrec ((g$f$21488$1a@gJ
                             (case-lambda
                               ((g$num$21489$1a@gJ g$a$21490$1a@gJ)
                                (if (g$zero?$21198$1a@gJ
                                      g$num$21489$1a@gJ)
                                  (apply
                                    g$string$20634$1a@gJ
                                    g$a$21490$1a@gJ)
                                  (g$f$21488$1a@gJ
                                    (g$div$21363$1a@gJ
                                      g$num$21489$1a@gJ
                                      g$radix$21484$1a@gJ)
                                    (cons
                                      (g$hex-char$21203$1a@gJ
                                        (g$mod$20643$1a@gJ
                                          g$num$21489$1a@gJ
                                          g$radix$21484$1a@gJ))
                                      g$a$21490$1a@gJ)))))))
                    g$f$21488$1a@gJ)
                  g$num$21486$1a@gJ
                  '()))))
             (g$abs$21364$1a@gJ g$num$21483$1a@gJ))))
         (g$negative?$21200$1a@gJ g$num$21483$1a@gJ)))))
   (g$number->string$21206$1a@gJ
     g$number->string$21668$1a@gJ
     (case-lambda
       ((g$num$21491$1a@gJ)
        (g$number->string$21206$1a@gJ g$num$21491$1a@gJ '10))
       ((g$num$21492$1a@gJ g$radix$21493$1a@gJ g$prec$21494$1a@gJ)
        (g$number->string$21206$1a@gJ
          g$num$21492$1a@gJ
          g$radix$21493$1a@gJ))
       ((g$num$21495$1a@gJ g$radix$21496$1a@gJ)
        (if (g$fixnum?$20623$1a@gJ g$num$21495$1a@gJ)
          (g$fixnum->string$21204$1a@gJ
            g$num$21495$1a@gJ
            g$radix$21496$1a@gJ)
          (if (g$flonum?$20624$1a@gJ g$num$21495$1a@gJ)
            (begin
              (if (not (g$=$21305$1a@gJ g$radix$21496$1a@gJ '10))
                (assertion-violation
                  'number->string
                  '"invalid radix"
                  g$radix$21496$1a@gJ)
                (void))
              (flonum->string g$num$21495$1a@gJ))
            (if (g$ratnum?$21164$1a@gJ g$num$21495$1a@gJ)
              (g$string-append$20638$1a@gJ
                (if (g$negative?$21200$1a@gJ g$num$21495$1a@gJ)
                  '"-"
                  '"")
                (g$number->string$21206$1a@gJ
                  (g$abs$21364$1a@gJ
                    (g$ratnum-numerator$21166$1a@gJ g$num$21495$1a@gJ))
                  g$radix$21496$1a@gJ)
                '"/"
                (g$number->string$21206$1a@gJ
                  (g$abs$21364$1a@gJ
                    (g$ratnum-denominator$21165$1a@gJ
                      g$num$21495$1a@gJ))
                  g$radix$21496$1a@gJ))
              (if (g$bignum?$21159$1a@gJ g$num$21495$1a@gJ)
                (g$bignum->string$21205$1a@gJ
                  g$num$21495$1a@gJ
                  g$radix$21496$1a@gJ)
                (if (g$complexnum?$21167$1a@gJ g$num$21495$1a@gJ)
                  (begin
                    (if (not (g$=$21305$1a@gJ g$radix$21496$1a@gJ '10))
                      (assertion-violation
                        'number->string
                        '"invalid radix"
                        g$radix$21496$1a@gJ)
                      (void))
                    (g$string-append$20638$1a@gJ
                      (if (g$zero?$21198$1a@gJ
                            (g$real-part$21317$1a@gJ g$num$21495$1a@gJ))
                        '""
                        (g$number->string$21206$1a@gJ
                          (g$real-part$21317$1a@gJ g$num$21495$1a@gJ)
                          g$radix$21496$1a@gJ))
                      (if ((case-lambda
                             ((g$i$21497$1a@gJ)
                              ((case-lambda
                                 ((g$t$21498$1a@gJ)
                                  (if g$t$21498$1a@gJ
                                    g$t$21498$1a@gJ
                                    ((case-lambda
                                       ((g$t$21499$1a@gJ)
                                        (if g$t$21499$1a@gJ
                                          g$t$21499$1a@gJ
                                          (begin
                                            '#f
                                            (g$infinite?$21188$1a@gJ
                                              g$i$21497$1a@gJ)))))
                                     (g$nan?$21186$1a@gJ
                                       g$i$21497$1a@gJ)))))
                               (g$negative?$21200$1a@gJ
                                 g$i$21497$1a@gJ))))
                           (g$imag-part$21318$1a@gJ g$num$21495$1a@gJ))
                        '""
                        '"+")
                      (if (g$=$21305$1a@gJ
                            '1.0
                            (g$imag-part$21318$1a@gJ g$num$21495$1a@gJ))
                        '""
                        (g$number->string$21206$1a@gJ
                          (g$imag-part$21318$1a@gJ g$num$21495$1a@gJ)
                          g$radix$21496$1a@gJ))
                      '"i"))
                  (if (g$rectnum?$21160$1a@gJ g$num$21495$1a@gJ)
                    (g$string-append$20638$1a@gJ
                      (if (g$zero?$21198$1a@gJ
                            (g$real-part$21317$1a@gJ g$num$21495$1a@gJ))
                        '""
                        (g$number->string$21206$1a@gJ
                          (g$real-part$21317$1a@gJ g$num$21495$1a@gJ)
                          g$radix$21496$1a@gJ))
                      (if (g$negative?$21200$1a@gJ
                            (g$imag-part$21318$1a@gJ g$num$21495$1a@gJ))
                        '""
                        '"+")
                      (if (g$=$21305$1a@gJ
                            '1
                            (g$imag-part$21318$1a@gJ g$num$21495$1a@gJ))
                        '""
                        (g$number->string$21206$1a@gJ
                          (g$imag-part$21318$1a@gJ g$num$21495$1a@gJ)
                          g$radix$21496$1a@gJ))
                      '"i")
                    (begin
                      '#f
                      (assertion-violation
                        'number->string
                        '"not a number"
                        g$num$21495$1a@gJ)))))))))))
   (g$=$21305$1a@gJ
     g$=$21669$1a@gJ
     (case-lambda
       ((g$a$21500$1a@gJ g$b$21501$1a@gJ)
        (if (if (g$real?$21192$1a@gJ g$a$21500$1a@gJ)
              (if (g$real?$21192$1a@gJ g$b$21501$1a@gJ)
                (if (g$finite?$21187$1a@gJ g$a$21500$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$b$21501$1a@gJ)
                    (if (not (g$nan?$21186$1a@gJ g$a$21500$1a@gJ))
                      (begin
                        '#f
                        (not (g$nan?$21186$1a@gJ g$b$21501$1a@gJ)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$21202$1a@gJ g$a$21500$1a@gJ)
              (g$exact$21202$1a@gJ g$b$21501$1a@gJ))
            '0)
          (if ((case-lambda
                 ((g$t$21502$1a@gJ)
                  (if g$t$21502$1a@gJ
                    g$t$21502$1a@gJ
                    (begin
                      '#f
                      (if (g$real?$21192$1a@gJ g$b$21501$1a@gJ)
                        (begin '#f (g$nan?$21186$1a@gJ g$b$21501$1a@gJ))
                        '#f)))))
               (if (g$real?$21192$1a@gJ g$a$21500$1a@gJ)
                 (begin '#f (g$nan?$21186$1a@gJ g$a$21500$1a@gJ))
                 '#f))
            '#f
            (if (if (g$number?$21185$1a@gJ g$a$21500$1a@gJ)
                  (begin '#f (g$number?$21185$1a@gJ g$b$21501$1a@gJ))
                  '#f)
              (inexact=?
                (g$inexact$21201$1a@gJ g$a$21500$1a@gJ)
                (g$inexact$21201$1a@gJ g$b$21501$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  '=
                  '"not number arguments"
                  g$a$21500$1a@gJ
                  g$b$21501$1a@gJ))))))
       ((g$x1$21503$1a@gJ g$x2$21504$1a@gJ . g$rest$21505$1a@gJ)
        ((letrec ((g$f$21506$1a@gJ
                    (case-lambda
                      ((g$a$21507$1a@gJ g$b$21508$1a@gJ)
                       (if (null? g$b$21508$1a@gJ)
                         '#t
                         (if (g$=$21305$1a@gJ
                               g$a$21507$1a@gJ
                               ($car g$b$21508$1a@gJ))
                           (g$f$21506$1a@gJ
                             ($car g$b$21508$1a@gJ)
                             ($cdr g$b$21508$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$21506$1a@gJ)
         g$x1$21503$1a@gJ
         (cons g$x2$21504$1a@gJ g$rest$21505$1a@gJ)))))
   (g$<$21306$1a@gJ
     g$<$21670$1a@gJ
     (case-lambda
       ((g$a$21509$1a@gJ g$b$21510$1a@gJ)
        (if (if (g$real?$21192$1a@gJ g$a$21509$1a@gJ)
              (if (g$real?$21192$1a@gJ g$b$21510$1a@gJ)
                (if (g$finite?$21187$1a@gJ g$a$21509$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$b$21510$1a@gJ)
                    (if (not (g$nan?$21186$1a@gJ g$a$21509$1a@gJ))
                      (begin
                        '#f
                        (not (g$nan?$21186$1a@gJ g$b$21510$1a@gJ)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$21202$1a@gJ g$a$21509$1a@gJ)
              (g$exact$21202$1a@gJ g$b$21510$1a@gJ))
            '0)
          (if ((case-lambda
                 ((g$t$21511$1a@gJ)
                  (if g$t$21511$1a@gJ
                    g$t$21511$1a@gJ
                    (begin
                      '#f
                      (if (g$real?$21192$1a@gJ g$b$21510$1a@gJ)
                        (begin '#f (g$nan?$21186$1a@gJ g$b$21510$1a@gJ))
                        '#f)))))
               (if (g$real?$21192$1a@gJ g$a$21509$1a@gJ)
                 (begin '#f (g$nan?$21186$1a@gJ g$a$21509$1a@gJ))
                 '#f))
            '#f
            (if (if (g$real?$21192$1a@gJ g$a$21509$1a@gJ)
                  (begin '#f (g$real?$21192$1a@gJ g$b$21510$1a@gJ))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$21201$1a@gJ g$a$21509$1a@gJ)
                  (g$inexact$21201$1a@gJ g$b$21510$1a@gJ))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<
                  '"not real arguments"
                  g$a$21509$1a@gJ
                  g$b$21510$1a@gJ))))))
       ((g$x1$21512$1a@gJ g$x2$21513$1a@gJ . g$rest$21514$1a@gJ)
        ((letrec ((g$f$21515$1a@gJ
                    (case-lambda
                      ((g$a$21516$1a@gJ g$b$21517$1a@gJ)
                       (if (null? g$b$21517$1a@gJ)
                         '#t
                         (if (g$<$21306$1a@gJ
                               g$a$21516$1a@gJ
                               ($car g$b$21517$1a@gJ))
                           (g$f$21515$1a@gJ
                             ($car g$b$21517$1a@gJ)
                             ($cdr g$b$21517$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$21515$1a@gJ)
         g$x1$21512$1a@gJ
         (cons g$x2$21513$1a@gJ g$rest$21514$1a@gJ)))))
   (g$<=$21307$1a@gJ
     g$<=$21671$1a@gJ
     (case-lambda
       ((g$a$21518$1a@gJ g$b$21519$1a@gJ)
        (if (if (g$real?$21192$1a@gJ g$a$21518$1a@gJ)
              (if (g$real?$21192$1a@gJ g$b$21519$1a@gJ)
                (if (g$finite?$21187$1a@gJ g$a$21518$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$b$21519$1a@gJ)
                    (if (not (g$nan?$21186$1a@gJ g$a$21518$1a@gJ))
                      (begin
                        '#f
                        (not (g$nan?$21186$1a@gJ g$b$21519$1a@gJ)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$21202$1a@gJ g$a$21518$1a@gJ)
              (g$exact$21202$1a@gJ g$b$21519$1a@gJ))
            '0)
          (if ((case-lambda
                 ((g$t$21520$1a@gJ)
                  (if g$t$21520$1a@gJ
                    g$t$21520$1a@gJ
                    (begin
                      '#f
                      (if (g$real?$21192$1a@gJ g$b$21519$1a@gJ)
                        (begin '#f (g$nan?$21186$1a@gJ g$b$21519$1a@gJ))
                        '#f)))))
               (if (g$real?$21192$1a@gJ g$a$21518$1a@gJ)
                 (begin '#f (g$nan?$21186$1a@gJ g$a$21518$1a@gJ))
                 '#f))
            '#f
            (if (if (g$real?$21192$1a@gJ g$a$21518$1a@gJ)
                  (begin '#f (g$real?$21192$1a@gJ g$b$21519$1a@gJ))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$21201$1a@gJ g$a$21518$1a@gJ)
                  (g$inexact$21201$1a@gJ g$b$21519$1a@gJ))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<=
                  '"not real arguments"
                  g$a$21518$1a@gJ
                  g$b$21519$1a@gJ))))))
       ((g$x1$21521$1a@gJ g$x2$21522$1a@gJ . g$rest$21523$1a@gJ)
        ((letrec ((g$f$21524$1a@gJ
                    (case-lambda
                      ((g$a$21525$1a@gJ g$b$21526$1a@gJ)
                       (if (null? g$b$21526$1a@gJ)
                         '#t
                         (if (g$<=$21307$1a@gJ
                               g$a$21525$1a@gJ
                               ($car g$b$21526$1a@gJ))
                           (g$f$21524$1a@gJ
                             ($car g$b$21526$1a@gJ)
                             ($cdr g$b$21526$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$21524$1a@gJ)
         g$x1$21521$1a@gJ
         (cons g$x2$21522$1a@gJ g$rest$21523$1a@gJ)))))
   (g$>$21308$1a@gJ
     g$>$21672$1a@gJ
     (case-lambda
       ((g$a$21527$1a@gJ g$b$21528$1a@gJ)
        (if (if (g$real?$21192$1a@gJ g$a$21527$1a@gJ)
              (if (g$real?$21192$1a@gJ g$b$21528$1a@gJ)
                (if (g$finite?$21187$1a@gJ g$a$21527$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$b$21528$1a@gJ)
                    (if (not (g$nan?$21186$1a@gJ g$a$21527$1a@gJ))
                      (begin
                        '#f
                        (not (g$nan?$21186$1a@gJ g$b$21528$1a@gJ)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$21202$1a@gJ g$a$21527$1a@gJ)
              (g$exact$21202$1a@gJ g$b$21528$1a@gJ))
            '0)
          (if ((case-lambda
                 ((g$t$21529$1a@gJ)
                  (if g$t$21529$1a@gJ
                    g$t$21529$1a@gJ
                    (begin
                      '#f
                      (if (g$real?$21192$1a@gJ g$b$21528$1a@gJ)
                        (begin '#f (g$nan?$21186$1a@gJ g$b$21528$1a@gJ))
                        '#f)))))
               (if (g$real?$21192$1a@gJ g$a$21527$1a@gJ)
                 (begin '#f (g$nan?$21186$1a@gJ g$a$21527$1a@gJ))
                 '#f))
            '#f
            (if (if (g$real?$21192$1a@gJ g$a$21527$1a@gJ)
                  (begin '#f (g$real?$21192$1a@gJ g$b$21528$1a@gJ))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$21201$1a@gJ g$a$21527$1a@gJ)
                  (g$inexact$21201$1a@gJ g$b$21528$1a@gJ))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>
                  '"not real arguments"
                  g$a$21527$1a@gJ
                  g$b$21528$1a@gJ))))))
       ((g$x1$21530$1a@gJ g$x2$21531$1a@gJ . g$rest$21532$1a@gJ)
        ((letrec ((g$f$21533$1a@gJ
                    (case-lambda
                      ((g$a$21534$1a@gJ g$b$21535$1a@gJ)
                       (if (null? g$b$21535$1a@gJ)
                         '#t
                         (if (g$>$21308$1a@gJ
                               g$a$21534$1a@gJ
                               ($car g$b$21535$1a@gJ))
                           (g$f$21533$1a@gJ
                             ($car g$b$21535$1a@gJ)
                             ($cdr g$b$21535$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$21533$1a@gJ)
         g$x1$21530$1a@gJ
         (cons g$x2$21531$1a@gJ g$rest$21532$1a@gJ)))))
   (g$>=$21309$1a@gJ
     g$>=$21673$1a@gJ
     (case-lambda
       ((g$a$21536$1a@gJ g$b$21537$1a@gJ)
        (if (if (g$real?$21192$1a@gJ g$a$21536$1a@gJ)
              (if (g$real?$21192$1a@gJ g$b$21537$1a@gJ)
                (if (g$finite?$21187$1a@gJ g$a$21536$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$b$21537$1a@gJ)
                    (if (not (g$nan?$21186$1a@gJ g$a$21536$1a@gJ))
                      (begin
                        '#f
                        (not (g$nan?$21186$1a@gJ g$b$21537$1a@gJ)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$21202$1a@gJ g$a$21536$1a@gJ)
              (g$exact$21202$1a@gJ g$b$21537$1a@gJ))
            '0)
          (if ((case-lambda
                 ((g$t$21538$1a@gJ)
                  (if g$t$21538$1a@gJ
                    g$t$21538$1a@gJ
                    (begin
                      '#f
                      (if (g$real?$21192$1a@gJ g$b$21537$1a@gJ)
                        (begin '#f (g$nan?$21186$1a@gJ g$b$21537$1a@gJ))
                        '#f)))))
               (if (g$real?$21192$1a@gJ g$a$21536$1a@gJ)
                 (begin '#f (g$nan?$21186$1a@gJ g$a$21536$1a@gJ))
                 '#f))
            '#f
            (if (if (g$real?$21192$1a@gJ g$a$21536$1a@gJ)
                  (begin '#f (g$real?$21192$1a@gJ g$b$21537$1a@gJ))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$21201$1a@gJ g$a$21536$1a@gJ)
                  (g$inexact$21201$1a@gJ g$b$21537$1a@gJ))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>=
                  '"not real arguments"
                  g$a$21536$1a@gJ
                  g$b$21537$1a@gJ))))))
       ((g$x1$21539$1a@gJ g$x2$21540$1a@gJ . g$rest$21541$1a@gJ)
        ((letrec ((g$f$21542$1a@gJ
                    (case-lambda
                      ((g$a$21543$1a@gJ g$b$21544$1a@gJ)
                       (if (null? g$b$21544$1a@gJ)
                         '#t
                         (if (g$>=$21309$1a@gJ
                               g$a$21543$1a@gJ
                               ($car g$b$21544$1a@gJ))
                           (g$f$21542$1a@gJ
                             ($car g$b$21544$1a@gJ)
                             ($cdr g$b$21544$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$21542$1a@gJ)
         g$x1$21539$1a@gJ
         (cons g$x2$21540$1a@gJ g$rest$21541$1a@gJ)))))
   (g$make-rectangular$21310$1a@gJ
     g$make-rectangular$21674$1a@gJ
     (case-lambda
       ((g$r1$21545$1a@gJ g$r2$21546$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$r1$21545$1a@gJ))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r1$21545$1a@gJ)
            (void))
          (if (not (g$real?$21192$1a@gJ g$r2$21546$1a@gJ))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r2$21546$1a@gJ)
            (void))
          (if (if (g$exact?$21189$1a@gJ g$r1$21545$1a@gJ)
                (begin '#f (g$exact?$21189$1a@gJ g$r2$21546$1a@gJ))
                '#f)
            (g$make-rectnum$21161$1a@gJ
              (g$->ratnum$21181$1a@gJ g$r1$21545$1a@gJ)
              (g$->ratnum$21181$1a@gJ g$r2$21546$1a@gJ))
            (if (if (g$exact?$21189$1a@gJ g$r2$21546$1a@gJ)
                  (begin '#f (g$zero?$21198$1a@gJ g$r2$21546$1a@gJ))
                  '#f)
              g$r1$21545$1a@gJ
              (begin
                '#f
                (g$make-complexnum$21168$1a@gJ
                  (g$inexact$21201$1a@gJ g$r1$21545$1a@gJ)
                  (g$inexact$21201$1a@gJ g$r2$21546$1a@gJ)))))))))
   (g$make-polar$21311$1a@gJ
     g$make-polar$21675$1a@gJ
     (case-lambda
       ((g$r1$21547$1a@gJ g$r2$21548$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$r1$21547$1a@gJ))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r1$21547$1a@gJ)
            (void))
          (if (not (g$real?$21192$1a@gJ g$r2$21548$1a@gJ))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r2$21548$1a@gJ)
            (void))
          (if (if (g$exact?$21189$1a@gJ g$r2$21548$1a@gJ)
                (begin '#f (g$zero?$21198$1a@gJ g$r2$21548$1a@gJ))
                '#f)
            g$r1$21547$1a@gJ
            (* g$r1$21547$1a@gJ
               (g$make-rectangular$21310$1a@gJ
                 (g$cos$21356$1a@gJ g$r2$21548$1a@gJ)
                 (g$sin$21353$1a@gJ g$r2$21548$1a@gJ))))))))
   (g$angle$21312$1a@gJ
     g$angle$21676$1a@gJ
     (case-lambda
       ((g$num$21549$1a@gJ)
        (begin
          (if (not (g$number?$21185$1a@gJ g$num$21549$1a@gJ))
            (assertion-violation
              'angle
              '"not a number"
              g$num$21549$1a@gJ)
            (void))
          (if (g$rectnum?$21160$1a@gJ g$num$21549$1a@gJ)
            (g$angle$21312$1a@gJ
              (g$inexact$21201$1a@gJ g$num$21549$1a@gJ))
            (g$atan$21361$1a@gJ
              (g$imag-part$21318$1a@gJ g$num$21549$1a@gJ)
              (g$real-part$21317$1a@gJ g$num$21549$1a@gJ)))))))
   (g$magnitude$21313$1a@gJ
     g$magnitude$21677$1a@gJ
     (case-lambda
       ((g$num$21550$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21550$1a@gJ)
          (g$magnitude$21313$1a@gJ
            (g$inexact$21201$1a@gJ g$num$21550$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21550$1a@gJ)
            ((case-lambda
               ((g$i$21551$1a@gJ g$r$21552$1a@gJ)
                (g$sqrt$21369$1a@gJ
                  (+ (* g$i$21551$1a@gJ g$i$21551$1a@gJ)
                     (* g$r$21552$1a@gJ g$r$21552$1a@gJ)))))
             (g$imag-part$21318$1a@gJ g$num$21550$1a@gJ)
             (g$real-part$21317$1a@gJ g$num$21550$1a@gJ))
            (if (g$real?$21192$1a@gJ g$num$21550$1a@gJ)
              (g$abs$21364$1a@gJ g$num$21550$1a@gJ)
              (begin
                '#f
                (assertion-violation
                  'magnitude
                  '"not a number"
                  g$num$21550$1a@gJ))))))))
   (g$exact-integer?$21314$1a@gJ
     g$exact-integer?$21678$1a@gJ
     (case-lambda
       ((g$obj$21553$1a@gJ)
        ((case-lambda
           ((g$t$21554$1a@gJ)
            (if g$t$21554$1a@gJ
              g$t$21554$1a@gJ
              (begin '#f (g$bignum?$21159$1a@gJ g$obj$21553$1a@gJ)))))
         (g$fixnum?$20623$1a@gJ g$obj$21553$1a@gJ)))))
   (g$numerator$21315$1a@gJ
     g$numerator$21679$1a@gJ
     (case-lambda
       ((g$num$21555$1a@gJ)
        (if (g$exact-integer?$21314$1a@gJ g$num$21555$1a@gJ)
          g$num$21555$1a@gJ
          (if (g$ratnum?$21164$1a@gJ g$num$21555$1a@gJ)
            (g$exact$21202$1a@gJ
              (g$ratnum-numerator$21166$1a@gJ g$num$21555$1a@gJ))
            (if (if (g$real?$21192$1a@gJ g$num$21555$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$num$21555$1a@gJ)
                    (begin
                      '#f
                      (not (g$nan?$21186$1a@gJ g$num$21555$1a@gJ)))
                    '#f)
                  '#f)
              (g$inexact$21201$1a@gJ
                (g$numerator$21315$1a@gJ
                  (g$exact$21202$1a@gJ g$num$21555$1a@gJ)))
              (begin
                '#f
                (assertion-violation
                  'numerator
                  '"not a real"
                  g$num$21555$1a@gJ))))))))
   (g$denominator$21316$1a@gJ
     g$denominator$21680$1a@gJ
     (case-lambda
       ((g$num$21556$1a@gJ)
        (if (g$exact-integer?$21314$1a@gJ g$num$21556$1a@gJ)
          '1
          (if (g$ratnum?$21164$1a@gJ g$num$21556$1a@gJ)
            (g$exact$21202$1a@gJ
              (g$ratnum-denominator$21165$1a@gJ g$num$21556$1a@gJ))
            (if (if (g$real?$21192$1a@gJ g$num$21556$1a@gJ)
                  (if (g$finite?$21187$1a@gJ g$num$21556$1a@gJ)
                    (begin
                      '#f
                      (not (g$nan?$21186$1a@gJ g$num$21556$1a@gJ)))
                    '#f)
                  '#f)
              (g$inexact$21201$1a@gJ
                (g$denominator$21316$1a@gJ
                  (g$exact$21202$1a@gJ g$num$21556$1a@gJ)))
              (begin
                '#f
                (assertion-violation
                  'denominator
                  '"not a real"
                  g$num$21556$1a@gJ))))))))
   (g$real-part$21317$1a@gJ
     g$real-part$21681$1a@gJ
     (case-lambda
       ((g$num$21557$1a@gJ)
        (if (g$complexnum?$21167$1a@gJ g$num$21557$1a@gJ)
          (g$complexnum-real-part$21170$1a@gJ g$num$21557$1a@gJ)
          (if (g$rectnum?$21160$1a@gJ g$num$21557$1a@gJ)
            (g$exact$21202$1a@gJ
              (g$rectnum-real-part$21163$1a@gJ g$num$21557$1a@gJ))
            (if (g$real?$21192$1a@gJ g$num$21557$1a@gJ)
              g$num$21557$1a@gJ
              (begin
                '#f
                (assertion-violation
                  'real-part
                  '"not a number"
                  g$num$21557$1a@gJ))))))))
   (g$imag-part$21318$1a@gJ
     g$imag-part$21682$1a@gJ
     (case-lambda
       ((g$num$21558$1a@gJ)
        (if (g$complexnum?$21167$1a@gJ g$num$21558$1a@gJ)
          (g$complexnum-imag-part$21169$1a@gJ g$num$21558$1a@gJ)
          (if (g$rectnum?$21160$1a@gJ g$num$21558$1a@gJ)
            (g$exact$21202$1a@gJ
              (g$rectnum-imag-part$21162$1a@gJ g$num$21558$1a@gJ))
            (if (g$real?$21192$1a@gJ g$num$21558$1a@gJ)
              '0
              (begin
                '#f
                (assertion-violation
                  'imag-part
                  '"not a number"
                  g$num$21558$1a@gJ))))))))
   (g$exp$21352$1a@gJ
     g$exp$21683$1a@gJ
     (case-lambda
       ((g$num$21559$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21559$1a@gJ)
          (g$exp$21352$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21559$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21559$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'exp
              '()
              g$num$21559$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21559$1a@gJ)
              (clr-call-internal
                'System.Math
                'exp
                '()
                (g$inexact$21201$1a@gJ g$num$21559$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'exp
                  '"not a number"
                  g$num$21559$1a@gJ))))))))
   (g$sin$21353$1a@gJ
     g$sin$21684$1a@gJ
     (case-lambda
       ((g$num$21560$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21560$1a@gJ)
          (g$sin$21353$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21560$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21560$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sin
              '()
              g$num$21560$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21560$1a@gJ)
              (clr-call-internal
                'System.Math
                'sin
                '()
                (g$inexact$21201$1a@gJ g$num$21560$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'sin
                  '"not a number"
                  g$num$21560$1a@gJ))))))))
   (g$asin$21354$1a@gJ
     g$asin$21685$1a@gJ
     (case-lambda
       ((g$num$21561$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21561$1a@gJ)
          (g$asin$21354$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21561$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21561$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'asin
              '()
              g$num$21561$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21561$1a@gJ)
              (clr-call-internal
                'System.Math
                'asin
                '()
                (g$inexact$21201$1a@gJ g$num$21561$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'asin
                  '"not a number"
                  g$num$21561$1a@gJ))))))))
   (g$sinh$21355$1a@gJ
     g$sinh$21686$1a@gJ
     (case-lambda
       ((g$num$21562$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21562$1a@gJ)
          (g$sinh$21355$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21562$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21562$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sinh
              '()
              g$num$21562$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21562$1a@gJ)
              (clr-call-internal
                'System.Math
                'sinh
                '()
                (g$inexact$21201$1a@gJ g$num$21562$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'sinh
                  '"not a number"
                  g$num$21562$1a@gJ))))))))
   (g$cos$21356$1a@gJ
     g$cos$21687$1a@gJ
     (case-lambda
       ((g$num$21563$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21563$1a@gJ)
          (g$cos$21356$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21563$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21563$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cos
              '()
              g$num$21563$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21563$1a@gJ)
              (clr-call-internal
                'System.Math
                'cos
                '()
                (g$inexact$21201$1a@gJ g$num$21563$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'cos
                  '"not a number"
                  g$num$21563$1a@gJ))))))))
   (g$acos$21357$1a@gJ
     g$acos$21688$1a@gJ
     (case-lambda
       ((g$num$21564$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21564$1a@gJ)
          (g$acos$21357$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21564$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21564$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'acos
              '()
              g$num$21564$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21564$1a@gJ)
              (clr-call-internal
                'System.Math
                'acos
                '()
                (g$inexact$21201$1a@gJ g$num$21564$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'acos
                  '"not a number"
                  g$num$21564$1a@gJ))))))))
   (g$cosh$21358$1a@gJ
     g$cosh$21689$1a@gJ
     (case-lambda
       ((g$num$21565$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21565$1a@gJ)
          (g$cosh$21358$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21565$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21565$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cosh
              '()
              g$num$21565$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21565$1a@gJ)
              (clr-call-internal
                'System.Math
                'cosh
                '()
                (g$inexact$21201$1a@gJ g$num$21565$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'cosh
                  '"not a number"
                  g$num$21565$1a@gJ))))))))
   (g$tan$21359$1a@gJ
     g$tan$21690$1a@gJ
     (case-lambda
       ((g$num$21566$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21566$1a@gJ)
          (g$tan$21359$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21566$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21566$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tan
              '()
              g$num$21566$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21566$1a@gJ)
              (clr-call-internal
                'System.Math
                'tan
                '()
                (g$inexact$21201$1a@gJ g$num$21566$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'tan
                  '"not a number"
                  g$num$21566$1a@gJ))))))))
   (g$tanh$21360$1a@gJ
     g$tanh$21691$1a@gJ
     (case-lambda
       ((g$num$21567$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21567$1a@gJ)
          (g$tanh$21360$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21567$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21567$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tanh
              '()
              g$num$21567$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21567$1a@gJ)
              (clr-call-internal
                'System.Math
                'tanh
                '()
                (g$inexact$21201$1a@gJ g$num$21567$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'tanh
                  '"not a number"
                  g$num$21567$1a@gJ))))))))
   (g$atan$21361$1a@gJ
     g$atan$21692$1a@gJ
     (case-lambda
       ((g$num$21568$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21568$1a@gJ)
          (g$atan$21361$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21568$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21568$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Atan
              '()
              g$num$21568$1a@gJ)
            (if (g$real?$21192$1a@gJ g$num$21568$1a@gJ)
              (clr-call-internal
                'System.Math
                'Atan
                '()
                (g$inexact$21201$1a@gJ g$num$21568$1a@gJ))
              (begin
                '#f
                (assertion-violation
                  'atan
                  '"not a number"
                  g$num$21568$1a@gJ))))))
       ((g$num1$21569$1a@gJ g$num2$21570$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$num1$21569$1a@gJ))
            (assertion-violation 'atan '"not a real" g$num1$21569$1a@gJ)
            (void))
          (if (not (g$real?$21192$1a@gJ g$num2$21570$1a@gJ))
            (assertion-violation 'atan '"not a real" g$num2$21570$1a@gJ)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$21201$1a@gJ g$num1$21569$1a@gJ)
            (g$inexact$21201$1a@gJ g$num2$21570$1a@gJ))))))
   (g$log$21362$1a@gJ
     g$log$21693$1a@gJ
     (case-lambda
       ((g$num$21571$1a@gJ)
        (begin
          (if (not (g$number?$21185$1a@gJ g$num$21571$1a@gJ))
            (assertion-violation
              'atan
              '"not a number"
              g$num$21571$1a@gJ)
            (void))
          (if (g$rectnum?$21160$1a@gJ g$num$21571$1a@gJ)
            (g$log$21362$1a@gJ
              (g$rectnum->complexnum$21179$1a@gJ g$num$21571$1a@gJ))
            (if (g$complexnum?$21167$1a@gJ g$num$21571$1a@gJ)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                g$num$21571$1a@gJ)
              (if (g$negative?$21200$1a@gJ g$num$21571$1a@gJ)
                (clr-call-internal
                  'Microsoft.Scripting.Math.Complex64
                  'Log
                  '()
                  (g$make-complexnum$21168$1a@gJ
                    (g$inexact$21201$1a@gJ g$num$21571$1a@gJ)
                    '0.0))
                (if (g$zero?$21198$1a@gJ g$num$21571$1a@gJ)
                  (if (g$exact?$21189$1a@gJ g$num$21571$1a@gJ)
                    (assertion-violation
                      'log
                      '"not possible"
                      g$num$21571$1a@gJ)
                    '-inf.0)
                  (if (g$infinite?$21188$1a@gJ g$num$21571$1a@gJ)
                    (if (g$negative?$21200$1a@gJ g$num$21571$1a@gJ)
                      (g$make-complexnum$21168$1a@gJ
                        (g$inexact$21201$1a@gJ
                          (g$abs$21364$1a@gJ g$num$21571$1a@gJ))
                        '0)
                      g$num$21571$1a@gJ)
                    (begin
                      '#f
                      (clr-call-internal
                        'System.Math
                        'Log
                        '()
                        (g$inexact$21201$1a@gJ
                          g$num$21571$1a@gJ))))))))))
       ((g$num1$21572$1a@gJ g$num2$21573$1a@gJ)
        (/ (g$log$21362$1a@gJ g$num1$21572$1a@gJ)
           (g$log$21362$1a@gJ g$num2$21573$1a@gJ)))))
   (g$div$21363$1a@gJ
     g$div$21694$1a@gJ
     (case-lambda
       ((g$x1$21574$1a@gJ g$x2$21575$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x1$21574$1a@gJ))
            (assertion-violation 'div '"not a real" g$x1$21574$1a@gJ)
            (void))
          (if (not (g$real?$21192$1a@gJ g$x2$21575$1a@gJ))
            (assertion-violation 'div '"not a real" g$x2$21575$1a@gJ)
            (void))
          (if (g$zero?$21198$1a@gJ g$x2$21575$1a@gJ)
            (assertion-violation
              'div
              '"divide by zero"
              g$x1$21574$1a@gJ
              g$x2$21575$1a@gJ)
            (void))
          (if ((case-lambda
                 ((g$t$21576$1a@gJ)
                  (if g$t$21576$1a@gJ
                    g$t$21576$1a@gJ
                    (begin
                      '#f
                      (g$infinite?$21188$1a@gJ g$x1$21574$1a@gJ)))))
               (g$nan?$21186$1a@gJ g$x1$21574$1a@gJ))
            (assertion-violation
              'div
              '"cannot be nan or infinite"
              g$x1$21574$1a@gJ
              g$x2$21575$1a@gJ)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$21189$1a@gJ g$x1$21574$1a@gJ)
                     (begin '#f (g$exact?$21189$1a@gJ g$x2$21575$1a@gJ))
                     '#f)
                 ((case-lambda
                    ((g$scale$21580$1a@gJ)
                     (values
                       (* g$x1$21574$1a@gJ g$scale$21580$1a@gJ)
                       (* g$x2$21575$1a@gJ g$scale$21580$1a@gJ)
                       '#t)))
                  (* (g$denominator$21316$1a@gJ g$x1$21574$1a@gJ)
                     (g$denominator$21316$1a@gJ g$x2$21575$1a@gJ)))
                 (values g$x1$21574$1a@gJ g$x2$21575$1a@gJ '#f))))
            (case-lambda
              ((g$x1$21581$1a@gJ
                 g$x2$21582$1a@gJ
                 g$exact-args?$21583$1a@gJ)
               ((case-lambda
                  ((g$exact-args?$21584$1a@gJ
                     g$x2$21585$1a@gJ
                     g$x1$21586$1a@gJ)
                   ((case-lambda
                      ((g$d$21587$1a@gJ)
                       (if (if g$exact-args?$21584$1a@gJ
                             (begin
                               '#f
                               (g$rational-valued?$21196$1a@gJ
                                 g$d$21587$1a@gJ))
                             '#f)
                         (g$exact$21202$1a@gJ g$d$21587$1a@gJ)
                         g$d$21587$1a@gJ)))
                    (if (g$positive?$21199$1a@gJ g$x2$21585$1a@gJ)
                      (g$floor$21365$1a@gJ
                        (/ g$x1$21586$1a@gJ g$x2$21585$1a@gJ))
                      (- (g$floor$21365$1a@gJ
                           (/ g$x1$21586$1a@gJ
                              (- g$x2$21585$1a@gJ))))))))
                g$exact-args?$21583$1a@gJ
                g$x2$21582$1a@gJ
                g$x1$21581$1a@gJ))))))))
   (g$abs$21364$1a@gJ
     g$abs$21695$1a@gJ
     (case-lambda
       ((g$x1$21588$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x1$21588$1a@gJ))
            (assertion-violation 'abs '"not a real" g$x1$21588$1a@gJ)
            (void))
          (if (g$negative?$21200$1a@gJ g$x1$21588$1a@gJ)
            (- g$x1$21588$1a@gJ)
            g$x1$21588$1a@gJ)))))
   (g$floor$21365$1a@gJ
     g$floor$21696$1a@gJ
     (case-lambda
       ((g$x$21589$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x$21589$1a@gJ))
            (assertion-violation 'floor '"not a real" g$x$21589$1a@gJ)
            (void))
          (if (g$exact-integer?$21314$1a@gJ g$x$21589$1a@gJ)
            g$x$21589$1a@gJ
            (if (g$ratnum?$21164$1a@gJ g$x$21589$1a@gJ)
              ((case-lambda
                 ((g$r$21590$1a@gJ)
                  (g$exact$21202$1a@gJ
                    (if (g$negative?$21200$1a@gJ g$x$21589$1a@gJ)
                      (- g$r$21590$1a@gJ '1)
                      g$r$21590$1a@gJ))))
               (g$bignum/$21171$1a@gJ
                 (g$ratnum-numerator$21166$1a@gJ g$x$21589$1a@gJ)
                 (g$ratnum-denominator$21165$1a@gJ g$x$21589$1a@gJ)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Floor(System.Double)"
                  '()
                  (g$inexact$21201$1a@gJ g$x$21589$1a@gJ)))))))))
   (g$ceiling$21366$1a@gJ
     g$ceiling$21697$1a@gJ
     (case-lambda
       ((g$x$21591$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x$21591$1a@gJ))
            (assertion-violation 'ceiling '"not a real" g$x$21591$1a@gJ)
            (void))
          (if (g$exact-integer?$21314$1a@gJ g$x$21591$1a@gJ)
            g$x$21591$1a@gJ
            (if (g$ratnum?$21164$1a@gJ g$x$21591$1a@gJ)
              ((case-lambda
                 ((g$r$21592$1a@gJ)
                  (g$exact$21202$1a@gJ
                    (if (g$positive?$21199$1a@gJ g$r$21592$1a@gJ)
                      (+ g$r$21592$1a@gJ '1)
                      g$r$21592$1a@gJ))))
               (g$bignum/$21171$1a@gJ
                 (g$ratnum-numerator$21166$1a@gJ g$x$21591$1a@gJ)
                 (g$ratnum-denominator$21165$1a@gJ g$x$21591$1a@gJ)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Ceiling(System.Double)"
                  '()
                  (g$inexact$21201$1a@gJ g$x$21591$1a@gJ)))))))))
   (g$truncate$21367$1a@gJ
     g$truncate$21698$1a@gJ
     (case-lambda
       ((g$x$21593$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x$21593$1a@gJ))
            (assertion-violation
              'truncate
              '"not a real"
              g$x$21593$1a@gJ)
            (void))
          (if (g$exact-integer?$21314$1a@gJ g$x$21593$1a@gJ)
            g$x$21593$1a@gJ
            (begin
              '#f
              ((case-lambda
                 ((g$r$21594$1a@gJ)
                  (if (g$exact?$21189$1a@gJ g$x$21593$1a@gJ)
                    (g$exact$21202$1a@gJ g$r$21594$1a@gJ)
                    g$r$21594$1a@gJ)))
               (clr-call-internal
                 'System.Math
                 '"Truncate(System.Double)"
                 '()
                 (g$inexact$21201$1a@gJ g$x$21593$1a@gJ)))))))))
   (g$round$21368$1a@gJ
     g$round$21699$1a@gJ
     (case-lambda
       ((g$x$21595$1a@gJ)
        (begin
          (if (not (g$real?$21192$1a@gJ g$x$21595$1a@gJ))
            (assertion-violation 'round '"not a real" g$x$21595$1a@gJ)
            (void))
          (if (g$exact-integer?$21314$1a@gJ g$x$21595$1a@gJ)
            g$x$21595$1a@gJ
            (if (g$ratnum?$21164$1a@gJ g$x$21595$1a@gJ)
              ((case-lambda
                 ((g$num$21596$1a@gJ)
                  ((case-lambda
                     ((g$den$21597$1a@gJ)
                      ((case-lambda
                         ((g$d$21598$1a@gJ)
                          ((case-lambda
                             ((g$r$21599$1a@gJ)
                              ((case-lambda
                                 ((g$hd$21600$1a@gJ)
                                  (if (g$negative?$21200$1a@gJ
                                        g$r$21599$1a@gJ)
                                    (g$exact$21202$1a@gJ
                                      (if (g$>$21308$1a@gJ
                                            (- g$r$21599$1a@gJ)
                                            g$hd$21600$1a@gJ)
                                        (- g$d$21598$1a@gJ '1)
                                        (if (g$<$21306$1a@gJ
                                              (- g$r$21599$1a@gJ)
                                              g$hd$21600$1a@gJ)
                                          g$d$21598$1a@gJ
                                          (if (g$even?$20685$1a@gJ
                                                g$d$21598$1a@gJ)
                                            g$d$21598$1a@gJ
                                            (begin
                                              '#f
                                              (+ g$d$21598$1a@gJ
                                                 '1))))))
                                    (if (g$positive?$21199$1a@gJ
                                          g$r$21599$1a@gJ)
                                      (g$exact$21202$1a@gJ
                                        (if (g$>$21308$1a@gJ
                                              g$r$21599$1a@gJ
                                              g$hd$21600$1a@gJ)
                                          (+ g$d$21598$1a@gJ '1)
                                          (if (g$<$21306$1a@gJ
                                                g$r$21599$1a@gJ
                                                g$hd$21600$1a@gJ)
                                            g$d$21598$1a@gJ
                                            (if (g$even?$20685$1a@gJ
                                                  g$d$21598$1a@gJ)
                                              g$d$21598$1a@gJ
                                              (begin
                                                '#f
                                                (+ g$d$21598$1a@gJ
                                                   '1))))))
                                      (begin '#f g$d$21598$1a@gJ)))))
                               (g$div$21363$1a@gJ g$d$21598$1a@gJ '2))))
                           (g$bignum%$21172$1a@gJ
                             g$num$21596$1a@gJ
                             g$den$21597$1a@gJ))))
                       (g$bignum/$21171$1a@gJ
                         g$num$21596$1a@gJ
                         g$den$21597$1a@gJ))))
                   (g$ratnum-denominator$21165$1a@gJ g$x$21595$1a@gJ))))
               (g$ratnum-numerator$21166$1a@gJ g$x$21595$1a@gJ))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Round(System.Double)"
                  '()
                  (g$inexact$21201$1a@gJ g$x$21595$1a@gJ)))))))))
   (g$sqrt$21369$1a@gJ
     g$sqrt$21700$1a@gJ
     (case-lambda
       ((g$num$21601$1a@gJ)
        (if (g$rectnum?$21160$1a@gJ g$num$21601$1a@gJ)
          (g$sqrt$21369$1a@gJ
            (g$rectnum->complexnum$21179$1a@gJ g$num$21601$1a@gJ))
          (if (g$complexnum?$21167$1a@gJ g$num$21601$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Sqrt
              '()
              g$num$21601$1a@gJ)
            (if (g$negative?$21200$1a@gJ g$num$21601$1a@gJ)
              (g$make-rectangular$21310$1a@gJ
                '0
                (g$sqrt$21369$1a@gJ (- g$num$21601$1a@gJ)))
              (if (g$bignum?$21159$1a@gJ g$num$21601$1a@gJ)
                (bignum-sqrt g$num$21601$1a@gJ)
                (if (g$infinite?$21188$1a@gJ g$num$21601$1a@gJ)
                  g$num$21601$1a@gJ
                  (begin
                    '#f
                    ((case-lambda
                       ((g$r$21602$1a@gJ)
                        (if (g$exact?$21189$1a@gJ g$num$21601$1a@gJ)
                          (g$exact$21202$1a@gJ g$r$21602$1a@gJ)
                          g$r$21602$1a@gJ)))
                     (clr-call-internal
                       'System.Math
                       'Sqrt
                       '()
                       (g$inexact$21201$1a@gJ
                         g$num$21601$1a@gJ))))))))))))
   (g$exact-integer-sqrt$21370$1a@gJ
     g$exact-integer-sqrt$21701$1a@gJ
     (case-lambda
       ((g$num$21603$1a@gJ)
        (if (g$bignum?$21159$1a@gJ g$num$21603$1a@gJ)
          (bignum-sqrt-exact g$num$21603$1a@gJ)
          ((case-lambda
             ((g$r$21604$1a@gJ)
              ((case-lambda
                 ((g$rf$21605$1a@gJ)
                  ((case-lambda
                     ((g$rest$21606$1a@gJ)
                      (values g$rf$21605$1a@gJ g$rest$21606$1a@gJ)))
                   (- g$num$21603$1a@gJ
                      (* g$rf$21605$1a@gJ g$rf$21605$1a@gJ)))))
               (g$exact$21202$1a@gJ
                 (g$floor$21365$1a@gJ g$r$21604$1a@gJ)))))
           (g$sqrt$21369$1a@gJ g$num$21603$1a@gJ))))))
   (g$expt$21371$1a@gJ
     g$expt$21702$1a@gJ
     (case-lambda
       ((g$obj1$21607$1a@gJ g$obj2$21608$1a@gJ)
        (letrec* ((g$make-restriction-violation$21609$1a@gJ
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$22240$1a@gJ)
                         (g$make-who-condition$22202$1a@gJ 'expt)
                         (g$make-message-condition$22142$1a@gJ
                           '"not supported")
                         (g$make-irritants-condition$22192$1a@gJ
                           g$obj1$21607$1a@gJ
                           g$obj2$21608$1a@gJ))))))
          (if (g$rectnum?$21160$1a@gJ g$obj1$21607$1a@gJ)
            (g$expt$21371$1a@gJ
              (g$rectnum->complexnum$21179$1a@gJ g$obj1$21607$1a@gJ)
              g$obj2$21608$1a@gJ)
            (if ((case-lambda
                   ((g$t$21610$1a@gJ)
                    (if g$t$21610$1a@gJ
                      g$t$21610$1a@gJ
                      (begin
                        '#f
                        (g$negative?$21200$1a@gJ g$obj1$21607$1a@gJ)))))
                 (g$complexnum?$21167$1a@gJ g$obj1$21607$1a@gJ))
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Pow
                '()
                (g$real->complexnum$21177$1a@gJ g$obj1$21607$1a@gJ)
                (g$real->complexnum$21177$1a@gJ g$obj2$21608$1a@gJ))
              (begin
                '#f
                ((case-lambda
                   ((g$e$21611$1a@gJ g$z1$21612$1a@gJ g$z2$21613$1a@gJ)
                    (if (if g$z1$21612$1a@gJ
                          (begin '#f (not g$z2$21613$1a@gJ))
                          '#f)
                      (if g$e$21611$1a@gJ '0 '0.0)
                      (if ((case-lambda
                             ((g$t$21614$1a@gJ)
                              (if g$t$21614$1a@gJ
                                g$t$21614$1a@gJ
                                (begin
                                  '#f
                                  (g$=$21305$1a@gJ
                                    g$obj1$21607$1a@gJ
                                    '1)))))
                           g$z2$21613$1a@gJ)
                        (if g$e$21611$1a@gJ '1 '1.0)
                        (if (g$=$21305$1a@gJ g$obj2$21608$1a@gJ '1)
                          (if g$e$21611$1a@gJ
                            g$obj1$21607$1a@gJ
                            (g$inexact$21201$1a@gJ g$obj1$21607$1a@gJ))
                          (begin
                            '#f
                            ((case-lambda
                               ((g$neg?$21615$1a@gJ)
                                ((case-lambda
                                   ((g$obj2$21616$1a@gJ)
                                    (if (if (g$integer?$21194$1a@gJ
                                              g$obj1$21607$1a@gJ)
                                          (begin
                                            '#f
                                            (g$integer?$21194$1a@gJ
                                              g$obj2$21616$1a@gJ))
                                          '#f)
                                      ((case-lambda
                                         ((g$a$21617$1a@gJ)
                                          ((case-lambda
                                             ((g$r$21618$1a@gJ)
                                              (if g$neg?$21615$1a@gJ
                                                (if (g$zero?$21198$1a@gJ
                                                      g$r$21618$1a@gJ)
                                                  (raise
                                                    (g$make-restriction-violation$21609$1a@gJ))
                                                  (/ '1
                                                     g$r$21618$1a@gJ))
                                                (g$exact$21202$1a@gJ
                                                  g$r$21618$1a@gJ))))
                                           (clr-call-internal
                                             'Microsoft.Scripting.Math.BigInteger
                                             'Power
                                             g$a$21617$1a@gJ
                                             (g$->fixnum$21180$1a@gJ
                                               g$obj2$21616$1a@gJ)))))
                                       (g$->bignum$21182$1a@gJ
                                         g$obj1$21607$1a@gJ))
                                      (if (if (g$rational?$21193$1a@gJ
                                                g$obj1$21607$1a@gJ)
                                            (begin
                                              '#f
                                              (g$integer?$21194$1a@gJ
                                                g$obj2$21616$1a@gJ))
                                            '#f)
                                        ((case-lambda
                                           ((g$f$21619$1a@gJ)
                                            (if g$neg?$21615$1a@gJ
                                              (/ (g$expt$21371$1a@gJ
                                                   (g$denominator$21316$1a@gJ
                                                     g$f$21619$1a@gJ)
                                                   g$obj2$21616$1a@gJ)
                                                 (g$expt$21371$1a@gJ
                                                   (g$numerator$21315$1a@gJ
                                                     g$f$21619$1a@gJ)
                                                   g$obj2$21616$1a@gJ))
                                              (/ (g$expt$21371$1a@gJ
                                                   (g$numerator$21315$1a@gJ
                                                     g$f$21619$1a@gJ)
                                                   g$obj2$21616$1a@gJ)
                                                 (g$expt$21371$1a@gJ
                                                   (g$denominator$21316$1a@gJ
                                                     g$f$21619$1a@gJ)
                                                   g$obj2$21616$1a@gJ)))))
                                         (g$->ratnum$21181$1a@gJ
                                           g$obj1$21607$1a@gJ))
                                        (if (if (g$real?$21192$1a@gJ
                                                  g$obj1$21607$1a@gJ)
                                              (begin
                                                '#f
                                                (g$real?$21192$1a@gJ
                                                  g$obj2$21616$1a@gJ))
                                              '#f)
                                          ((case-lambda
                                             ((g$r$21620$1a@gJ)
                                              (if g$neg?$21615$1a@gJ
                                                (/ '1 g$r$21620$1a@gJ)
                                                g$r$21620$1a@gJ)))
                                           (clr-call-internal
                                             'System.Math
                                             'Pow
                                             '()
                                             (g$inexact$21201$1a@gJ
                                               g$obj1$21607$1a@gJ)
                                             (g$inexact$21201$1a@gJ
                                               g$obj2$21616$1a@gJ)))
                                          (begin
                                            '#f
                                            (raise
                                              (g$make-restriction-violation$21609$1a@gJ))))))))
                                 (if g$neg?$21615$1a@gJ
                                   (g$abs$21364$1a@gJ
                                     g$obj2$21608$1a@gJ)
                                   g$obj2$21608$1a@gJ))))
                             (g$negative?$21200$1a@gJ
                               g$obj2$21608$1a@gJ))))))))
                 (if (g$exact?$21189$1a@gJ g$obj1$21607$1a@gJ)
                   (begin '#f (g$exact?$21189$1a@gJ g$obj2$21608$1a@gJ))
                   '#f)
                 (g$zero?$21198$1a@gJ g$obj1$21607$1a@gJ)
                 (g$zero?$21198$1a@gJ g$obj2$21608$1a@gJ))))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6579$21703$1a@gJ
     g$6579$22131$1a@gJ
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6582$1a@gJ
       '#f
       '#f
       '#()))
   (g$6581$21704$1a@gJ g$6581$22132$1a@gJ '#f)
   (g$6580$21705$1a@gJ
     g$6580$22133$1a@gJ
     (make-record-constructor-descriptor
       g$6579$21703$1a@gJ
       '#f
       g$6581$21704$1a@gJ))
   (g$&condition?$21708$1a@gJ
     g$&condition?$22134$1a@gJ
     (record-predicate g$6579$21703$1a@gJ))
   (g$make-&condition$21709$1a@gJ
     g$make-&condition$22135$1a@gJ
     (record-constructor g$6580$21705$1a@gJ))
   (g$&condition-rtd$21710$1a@gJ
     g$&condition-rtd$22136$1a@gJ
     g$6579$21703$1a@gJ)
   (g$&condition-rcd$21711$1a@gJ
     g$&condition-rcd$22137$1a@gJ
     g$6580$21705$1a@gJ)
   (g$6616$21809$1a@gJ
     g$6616$22138$1a@gJ
     (make-record-type-descriptor
       '&message
       g$6579$21703$1a@gJ
       'g$6619$1a@gJ
       '#f
       '#f
       '#((immutable message))))
   (g$6618$21810$1a@gJ g$6618$22139$1a@gJ '#f)
   (g$6617$21811$1a@gJ
     g$6617$22140$1a@gJ
     (make-record-constructor-descriptor
       g$6616$21809$1a@gJ
       g$6580$21705$1a@gJ
       g$6618$21810$1a@gJ))
   (g$p?$21814$1a@gJ
     g$p?$22141$1a@gJ
     (record-predicate g$6616$21809$1a@gJ))
   (g$make-message-condition$21815$1a@gJ
     g$make-message-condition$22142$1a@gJ
     (record-constructor g$6617$21811$1a@gJ))
   (g$condition-message$21816$1a@gJ
     g$condition-message$22143$1a@gJ
     (record-accessor g$6616$21809$1a@gJ '0))
   (g$message-condition?$21817$1a@gJ
     g$message-condition?$22144$1a@gJ
     (condition-predicate g$6616$21809$1a@gJ))
   (g$condition-message$21818$1a@gJ
     g$condition-message$22145$1a@gJ
     (condition-accessor
       g$6616$21809$1a@gJ
       g$condition-message$21816$1a@gJ))
   (g$&message-rtd$21819$1a@gJ
     g$&message-rtd$22146$1a@gJ
     g$6616$21809$1a@gJ)
   (g$&message-rcd$21820$1a@gJ
     g$&message-rcd$22147$1a@gJ
     g$6617$21811$1a@gJ)
   (g$6631$21821$1a@gJ
     g$6631$22148$1a@gJ
     (make-record-type-descriptor
       '&warning
       g$6579$21703$1a@gJ
       'g$6634$1a@gJ
       '#f
       '#f
       '#()))
   (g$6633$21822$1a@gJ g$6633$22149$1a@gJ '#f)
   (g$6632$21823$1a@gJ
     g$6632$22150$1a@gJ
     (make-record-constructor-descriptor
       g$6631$21821$1a@gJ
       g$6580$21705$1a@gJ
       g$6633$21822$1a@gJ))
   (g$p?$21826$1a@gJ
     g$p?$22151$1a@gJ
     (record-predicate g$6631$21821$1a@gJ))
   (g$make-warning$21827$1a@gJ
     g$make-warning$22152$1a@gJ
     (record-constructor g$6632$21823$1a@gJ))
   (g$warning?$21828$1a@gJ
     g$warning?$22153$1a@gJ
     (condition-predicate g$6631$21821$1a@gJ))
   (g$&warning-rtd$21829$1a@gJ
     g$&warning-rtd$22154$1a@gJ
     g$6631$21821$1a@gJ)
   (g$&warning-rcd$21830$1a@gJ
     g$&warning-rcd$22155$1a@gJ
     g$6632$21823$1a@gJ)
   (g$6644$21831$1a@gJ
     g$6644$22156$1a@gJ
     (make-record-type-descriptor
       '&serious
       g$6579$21703$1a@gJ
       'g$6647$1a@gJ
       '#f
       '#f
       '#()))
   (g$6646$21832$1a@gJ g$6646$22157$1a@gJ '#f)
   (g$6645$21833$1a@gJ
     g$6645$22158$1a@gJ
     (make-record-constructor-descriptor
       g$6644$21831$1a@gJ
       g$6580$21705$1a@gJ
       g$6646$21832$1a@gJ))
   (g$p?$21836$1a@gJ
     g$p?$22159$1a@gJ
     (record-predicate g$6644$21831$1a@gJ))
   (g$make-serious-condition$21837$1a@gJ
     g$make-serious-condition$22160$1a@gJ
     (record-constructor g$6645$21833$1a@gJ))
   (g$serious-condition?$21838$1a@gJ
     g$serious-condition?$22161$1a@gJ
     (condition-predicate g$6644$21831$1a@gJ))
   (g$&serious-rtd$21839$1a@gJ
     g$&serious-rtd$22162$1a@gJ
     g$6644$21831$1a@gJ)
   (g$&serious-rcd$21840$1a@gJ
     g$&serious-rcd$22163$1a@gJ
     g$6645$21833$1a@gJ)
   (g$6657$21841$1a@gJ
     g$6657$22164$1a@gJ
     (make-record-type-descriptor
       '&error
       g$6644$21831$1a@gJ
       'g$6660$1a@gJ
       '#f
       '#f
       '#()))
   (g$6659$21842$1a@gJ g$6659$22165$1a@gJ '#f)
   (g$6658$21843$1a@gJ
     g$6658$22166$1a@gJ
     (make-record-constructor-descriptor
       g$6657$21841$1a@gJ
       g$6645$21833$1a@gJ
       g$6659$21842$1a@gJ))
   (g$p?$21846$1a@gJ
     g$p?$22167$1a@gJ
     (record-predicate g$6657$21841$1a@gJ))
   (g$make-error$21847$1a@gJ
     g$make-error$22168$1a@gJ
     (record-constructor g$6658$21843$1a@gJ))
   (g$error?$21848$1a@gJ
     g$error?$22169$1a@gJ
     (condition-predicate g$6657$21841$1a@gJ))
   (g$&error-rtd$21849$1a@gJ
     g$&error-rtd$22170$1a@gJ
     g$6657$21841$1a@gJ)
   (g$&error-rcd$21850$1a@gJ
     g$&error-rcd$22171$1a@gJ
     g$6658$21843$1a@gJ)
   (g$6670$21851$1a@gJ
     g$6670$22172$1a@gJ
     (make-record-type-descriptor
       '&violation
       g$6644$21831$1a@gJ
       'g$6673$1a@gJ
       '#f
       '#f
       '#()))
   (g$6672$21852$1a@gJ g$6672$22173$1a@gJ '#f)
   (g$6671$21853$1a@gJ
     g$6671$22174$1a@gJ
     (make-record-constructor-descriptor
       g$6670$21851$1a@gJ
       g$6645$21833$1a@gJ
       g$6672$21852$1a@gJ))
   (g$p?$21856$1a@gJ
     g$p?$22175$1a@gJ
     (record-predicate g$6670$21851$1a@gJ))
   (g$make-violation$21857$1a@gJ
     g$make-violation$22176$1a@gJ
     (record-constructor g$6671$21853$1a@gJ))
   (g$violation?$21858$1a@gJ
     g$violation?$22177$1a@gJ
     (condition-predicate g$6670$21851$1a@gJ))
   (g$&violation-rtd$21859$1a@gJ
     g$&violation-rtd$22178$1a@gJ
     g$6670$21851$1a@gJ)
   (g$&violation-rcd$21860$1a@gJ
     g$&violation-rcd$22179$1a@gJ
     g$6671$21853$1a@gJ)
   (g$6683$21861$1a@gJ
     g$6683$22180$1a@gJ
     (make-record-type-descriptor
       '&assertion
       g$6670$21851$1a@gJ
       'g$6686$1a@gJ
       '#f
       '#f
       '#()))
   (g$6685$21862$1a@gJ g$6685$22181$1a@gJ '#f)
   (g$6684$21863$1a@gJ
     g$6684$22182$1a@gJ
     (make-record-constructor-descriptor
       g$6683$21861$1a@gJ
       g$6671$21853$1a@gJ
       g$6685$21862$1a@gJ))
   (g$p?$21866$1a@gJ
     g$p?$22183$1a@gJ
     (record-predicate g$6683$21861$1a@gJ))
   (g$make-assertion-violation$21867$1a@gJ
     g$make-assertion-violation$22184$1a@gJ
     (record-constructor g$6684$21863$1a@gJ))
   (g$assertion-violation?$21868$1a@gJ
     g$assertion-violation?$22185$1a@gJ
     (condition-predicate g$6683$21861$1a@gJ))
   (g$&assertion-rtd$21869$1a@gJ
     g$&assertion-rtd$22186$1a@gJ
     g$6683$21861$1a@gJ)
   (g$&assertion-rcd$21870$1a@gJ
     g$&assertion-rcd$22187$1a@gJ
     g$6684$21863$1a@gJ)
   (g$6696$21872$1a@gJ
     g$6696$22188$1a@gJ
     (make-record-type-descriptor
       '&irritants
       g$6579$21703$1a@gJ
       'g$6699$1a@gJ
       '#f
       '#f
       '#((immutable irritants))))
   (g$6698$21873$1a@gJ g$6698$22189$1a@gJ '#f)
   (g$6697$21874$1a@gJ
     g$6697$22190$1a@gJ
     (make-record-constructor-descriptor
       g$6696$21872$1a@gJ
       g$6580$21705$1a@gJ
       g$6698$21873$1a@gJ))
   (g$p?$21877$1a@gJ
     g$p?$22191$1a@gJ
     (record-predicate g$6696$21872$1a@gJ))
   (g$make-irritants-condition$21878$1a@gJ
     g$make-irritants-condition$22192$1a@gJ
     (record-constructor g$6697$21874$1a@gJ))
   (g$condition-irritants$21879$1a@gJ
     g$condition-irritants$22193$1a@gJ
     (record-accessor g$6696$21872$1a@gJ '0))
   (g$irritants-condition?$21880$1a@gJ
     g$irritants-condition?$22194$1a@gJ
     (condition-predicate g$6696$21872$1a@gJ))
   (g$condition-irritants$21881$1a@gJ
     g$condition-irritants$22195$1a@gJ
     (condition-accessor
       g$6696$21872$1a@gJ
       g$condition-irritants$21879$1a@gJ))
   (g$&irritants-rtd$21882$1a@gJ
     g$&irritants-rtd$22196$1a@gJ
     g$6696$21872$1a@gJ)
   (g$&irritants-rcd$21883$1a@gJ
     g$&irritants-rcd$22197$1a@gJ
     g$6697$21874$1a@gJ)
   (g$6711$21885$1a@gJ
     g$6711$22198$1a@gJ
     (make-record-type-descriptor
       '&who
       g$6579$21703$1a@gJ
       'g$6714$1a@gJ
       '#f
       '#f
       '#((immutable who))))
   (g$6713$21886$1a@gJ g$6713$22199$1a@gJ '#f)
   (g$6712$21887$1a@gJ
     g$6712$22200$1a@gJ
     (make-record-constructor-descriptor
       g$6711$21885$1a@gJ
       g$6580$21705$1a@gJ
       g$6713$21886$1a@gJ))
   (g$p?$21890$1a@gJ
     g$p?$22201$1a@gJ
     (record-predicate g$6711$21885$1a@gJ))
   (g$make-who-condition$21891$1a@gJ
     g$make-who-condition$22202$1a@gJ
     (record-constructor g$6712$21887$1a@gJ))
   (g$condition-who$21892$1a@gJ
     g$condition-who$22203$1a@gJ
     (record-accessor g$6711$21885$1a@gJ '0))
   (g$who-condition?$21893$1a@gJ
     g$who-condition?$22204$1a@gJ
     (condition-predicate g$6711$21885$1a@gJ))
   (g$condition-who$21894$1a@gJ
     g$condition-who$22205$1a@gJ
     (condition-accessor
       g$6711$21885$1a@gJ
       g$condition-who$21892$1a@gJ))
   (g$&who-rtd$21895$1a@gJ g$&who-rtd$22206$1a@gJ g$6711$21885$1a@gJ)
   (g$&who-rcd$21896$1a@gJ g$&who-rcd$22207$1a@gJ g$6712$21887$1a@gJ)
   (g$6726$21898$1a@gJ
     g$6726$22208$1a@gJ
     (make-record-type-descriptor
       '&where
       g$6579$21703$1a@gJ
       'g$6729$1a@gJ
       '#f
       '#f
       '#((immutable where))))
   (g$6728$21899$1a@gJ g$6728$22209$1a@gJ '#f)
   (g$6727$21900$1a@gJ
     g$6727$22210$1a@gJ
     (make-record-constructor-descriptor
       g$6726$21898$1a@gJ
       g$6580$21705$1a@gJ
       g$6728$21899$1a@gJ))
   (g$p?$21903$1a@gJ
     g$p?$22211$1a@gJ
     (record-predicate g$6726$21898$1a@gJ))
   (g$make-where-condition$21904$1a@gJ
     g$make-where-condition$22212$1a@gJ
     (record-constructor g$6727$21900$1a@gJ))
   (g$condition-where$21905$1a@gJ
     g$condition-where$22213$1a@gJ
     (record-accessor g$6726$21898$1a@gJ '0))
   (g$where-condition?$21906$1a@gJ
     g$where-condition?$22214$1a@gJ
     (condition-predicate g$6726$21898$1a@gJ))
   (g$condition-where$21907$1a@gJ
     g$condition-where$22215$1a@gJ
     (condition-accessor
       g$6726$21898$1a@gJ
       g$condition-where$21905$1a@gJ))
   (g$&where-rtd$21908$1a@gJ
     g$&where-rtd$22216$1a@gJ
     g$6726$21898$1a@gJ)
   (g$&where-rcd$21909$1a@gJ
     g$&where-rcd$22217$1a@gJ
     g$6727$21900$1a@gJ)
   (g$6741$21911$1a@gJ
     g$6741$22218$1a@gJ
     (make-record-type-descriptor
       '&stacktrace
       g$6579$21703$1a@gJ
       'g$6744$1a@gJ
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$6743$21912$1a@gJ g$6743$22219$1a@gJ '#f)
   (g$6742$21913$1a@gJ
     g$6742$22220$1a@gJ
     (make-record-constructor-descriptor
       g$6741$21911$1a@gJ
       g$6580$21705$1a@gJ
       g$6743$21912$1a@gJ))
   (g$p?$21916$1a@gJ
     g$p?$22221$1a@gJ
     (record-predicate g$6741$21911$1a@gJ))
   (g$make-stacktrace-condition$21917$1a@gJ
     g$make-stacktrace-condition$22222$1a@gJ
     (record-constructor g$6742$21913$1a@gJ))
   (g$condition-stacktrace$21918$1a@gJ
     g$condition-stacktrace$22223$1a@gJ
     (record-accessor g$6741$21911$1a@gJ '0))
   (g$stacktrace-condition?$21919$1a@gJ
     g$stacktrace-condition?$22224$1a@gJ
     (condition-predicate g$6741$21911$1a@gJ))
   (g$condition-stacktrace$21920$1a@gJ
     g$condition-stacktrace$22225$1a@gJ
     (condition-accessor
       g$6741$21911$1a@gJ
       g$condition-stacktrace$21918$1a@gJ))
   (g$&stacktrace-rtd$21921$1a@gJ
     g$&stacktrace-rtd$22226$1a@gJ
     g$6741$21911$1a@gJ)
   (g$&stacktrace-rcd$21922$1a@gJ
     g$&stacktrace-rcd$22227$1a@gJ
     g$6742$21913$1a@gJ)
   (g$6756$21923$1a@gJ
     g$6756$22228$1a@gJ
     (make-record-type-descriptor
       '&non-continuable
       g$6670$21851$1a@gJ
       'g$6759$1a@gJ
       '#f
       '#f
       '#()))
   (g$6758$21924$1a@gJ g$6758$22229$1a@gJ '#f)
   (g$6757$21925$1a@gJ
     g$6757$22230$1a@gJ
     (make-record-constructor-descriptor
       g$6756$21923$1a@gJ
       g$6671$21853$1a@gJ
       g$6758$21924$1a@gJ))
   (g$p?$21928$1a@gJ
     g$p?$22231$1a@gJ
     (record-predicate g$6756$21923$1a@gJ))
   (g$make-non-continuable-violation$21929$1a@gJ
     g$make-non-continuable-violation$22232$1a@gJ
     (record-constructor g$6757$21925$1a@gJ))
   (g$non-continuable-violation?$21930$1a@gJ
     g$non-continuable-violation?$22233$1a@gJ
     (condition-predicate g$6756$21923$1a@gJ))
   (g$&non-continuable-rtd$21931$1a@gJ
     g$&non-continuable-rtd$22234$1a@gJ
     g$6756$21923$1a@gJ)
   (g$&non-continuable-rcd$21932$1a@gJ
     g$&non-continuable-rcd$22235$1a@gJ
     g$6757$21925$1a@gJ)
   (g$6769$21933$1a@gJ
     g$6769$22236$1a@gJ
     (make-record-type-descriptor
       '&implementation-restriction
       g$6670$21851$1a@gJ
       'g$6772$1a@gJ
       '#f
       '#f
       '#()))
   (g$6771$21934$1a@gJ g$6771$22237$1a@gJ '#f)
   (g$6770$21935$1a@gJ
     g$6770$22238$1a@gJ
     (make-record-constructor-descriptor
       g$6769$21933$1a@gJ
       g$6671$21853$1a@gJ
       g$6771$21934$1a@gJ))
   (g$p?$21938$1a@gJ
     g$p?$22239$1a@gJ
     (record-predicate g$6769$21933$1a@gJ))
   (g$make-implementation-restriction-violation$21939$1a@gJ
     g$make-implementation-restriction-violation$22240$1a@gJ
     (record-constructor g$6770$21935$1a@gJ))
   (g$implementation-restriction-violation?$21940$1a@gJ
     g$implementation-restriction-violation?$22241$1a@gJ
     (condition-predicate g$6769$21933$1a@gJ))
   (g$&implementation-restriction-rtd$21941$1a@gJ
     g$&implementation-restriction-rtd$22242$1a@gJ
     g$6769$21933$1a@gJ)
   (g$&implementation-restriction-rcd$21942$1a@gJ
     g$&implementation-restriction-rcd$22243$1a@gJ
     g$6770$21935$1a@gJ)
   (g$6782$21943$1a@gJ
     g$6782$22244$1a@gJ
     (make-record-type-descriptor
       '&lexical
       g$6670$21851$1a@gJ
       'g$6785$1a@gJ
       '#f
       '#f
       '#()))
   (g$6784$21944$1a@gJ g$6784$22245$1a@gJ '#f)
   (g$6783$21945$1a@gJ
     g$6783$22246$1a@gJ
     (make-record-constructor-descriptor
       g$6782$21943$1a@gJ
       g$6671$21853$1a@gJ
       g$6784$21944$1a@gJ))
   (g$p?$21948$1a@gJ
     g$p?$22247$1a@gJ
     (record-predicate g$6782$21943$1a@gJ))
   (g$make-lexical-violation$21949$1a@gJ
     g$make-lexical-violation$22248$1a@gJ
     (record-constructor g$6783$21945$1a@gJ))
   (g$lexical-violation?$21950$1a@gJ
     g$lexical-violation?$22249$1a@gJ
     (condition-predicate g$6782$21943$1a@gJ))
   (g$&lexical-rtd$21951$1a@gJ
     g$&lexical-rtd$22250$1a@gJ
     g$6782$21943$1a@gJ)
   (g$&lexical-rcd$21952$1a@gJ
     g$&lexical-rcd$22251$1a@gJ
     g$6783$21945$1a@gJ)
   (g$6795$21955$1a@gJ
     g$6795$22252$1a@gJ
     (make-record-type-descriptor
       '&syntax
       g$6670$21851$1a@gJ
       'g$6798$1a@gJ
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6797$21956$1a@gJ g$6797$22253$1a@gJ '#f)
   (g$6796$21957$1a@gJ
     g$6796$22254$1a@gJ
     (make-record-constructor-descriptor
       g$6795$21955$1a@gJ
       g$6671$21853$1a@gJ
       g$6797$21956$1a@gJ))
   (g$p?$21960$1a@gJ
     g$p?$22255$1a@gJ
     (record-predicate g$6795$21955$1a@gJ))
   (g$make-syntax-violation$21961$1a@gJ
     g$make-syntax-violation$22256$1a@gJ
     (record-constructor g$6796$21957$1a@gJ))
   (g$syntax-violation-form$21962$1a@gJ
     g$syntax-violation-form$22257$1a@gJ
     (record-accessor g$6795$21955$1a@gJ '0))
   (g$syntax-violation-subform$21963$1a@gJ
     g$syntax-violation-subform$22258$1a@gJ
     (record-accessor g$6795$21955$1a@gJ '1))
   (g$syntax-violation?$21964$1a@gJ
     g$syntax-violation?$22259$1a@gJ
     (condition-predicate g$6795$21955$1a@gJ))
   (g$syntax-violation-form$21965$1a@gJ
     g$syntax-violation-form$22260$1a@gJ
     (condition-accessor
       g$6795$21955$1a@gJ
       g$syntax-violation-form$21962$1a@gJ))
   (g$syntax-violation-subform$21966$1a@gJ
     g$syntax-violation-subform$22261$1a@gJ
     (condition-accessor
       g$6795$21955$1a@gJ
       g$syntax-violation-subform$21963$1a@gJ))
   (g$&syntax-rtd$21967$1a@gJ
     g$&syntax-rtd$22262$1a@gJ
     g$6795$21955$1a@gJ)
   (g$&syntax-rcd$21968$1a@gJ
     g$&syntax-rcd$22263$1a@gJ
     g$6796$21957$1a@gJ)
   (g$6812$21969$1a@gJ
     g$6812$22264$1a@gJ
     (make-record-type-descriptor
       '&undefined
       g$6670$21851$1a@gJ
       'g$6815$1a@gJ
       '#f
       '#f
       '#()))
   (g$6814$21970$1a@gJ g$6814$22265$1a@gJ '#f)
   (g$6813$21971$1a@gJ
     g$6813$22266$1a@gJ
     (make-record-constructor-descriptor
       g$6812$21969$1a@gJ
       g$6671$21853$1a@gJ
       g$6814$21970$1a@gJ))
   (g$p?$21974$1a@gJ
     g$p?$22267$1a@gJ
     (record-predicate g$6812$21969$1a@gJ))
   (g$make-undefined-violation$21975$1a@gJ
     g$make-undefined-violation$22268$1a@gJ
     (record-constructor g$6813$21971$1a@gJ))
   (g$undefined-violation?$21976$1a@gJ
     g$undefined-violation?$22269$1a@gJ
     (condition-predicate g$6812$21969$1a@gJ))
   (g$&undefined-rtd$21977$1a@gJ
     g$&undefined-rtd$22270$1a@gJ
     g$6812$21969$1a@gJ)
   (g$&undefined-rcd$21978$1a@gJ
     g$&undefined-rcd$22271$1a@gJ
     g$6813$21971$1a@gJ)
   (g$6825$21979$1a@gJ
     g$6825$22272$1a@gJ
     (make-record-type-descriptor
       '&i/o
       g$6657$21841$1a@gJ
       'g$6828$1a@gJ
       '#f
       '#f
       '#()))
   (g$6827$21980$1a@gJ g$6827$22273$1a@gJ '#f)
   (g$6826$21981$1a@gJ
     g$6826$22274$1a@gJ
     (make-record-constructor-descriptor
       g$6825$21979$1a@gJ
       g$6658$21843$1a@gJ
       g$6827$21980$1a@gJ))
   (g$p?$21984$1a@gJ
     g$p?$22275$1a@gJ
     (record-predicate g$6825$21979$1a@gJ))
   (g$make-i/o-error$21985$1a@gJ
     g$make-i/o-error$22276$1a@gJ
     (record-constructor g$6826$21981$1a@gJ))
   (g$i/o-error?$21986$1a@gJ
     g$i/o-error?$22277$1a@gJ
     (condition-predicate g$6825$21979$1a@gJ))
   (g$&i/o-rtd$21987$1a@gJ g$&i/o-rtd$22278$1a@gJ g$6825$21979$1a@gJ)
   (g$&i/o-rcd$21988$1a@gJ g$&i/o-rcd$22279$1a@gJ g$6826$21981$1a@gJ)
   (g$6838$21989$1a@gJ
     g$6838$22280$1a@gJ
     (make-record-type-descriptor
       '&i/o-read
       g$6825$21979$1a@gJ
       'g$6841$1a@gJ
       '#f
       '#f
       '#()))
   (g$6840$21990$1a@gJ g$6840$22281$1a@gJ '#f)
   (g$6839$21991$1a@gJ
     g$6839$22282$1a@gJ
     (make-record-constructor-descriptor
       g$6838$21989$1a@gJ
       g$6826$21981$1a@gJ
       g$6840$21990$1a@gJ))
   (g$p?$21994$1a@gJ
     g$p?$22283$1a@gJ
     (record-predicate g$6838$21989$1a@gJ))
   (g$make-i/o-read-error$21995$1a@gJ
     g$make-i/o-read-error$22284$1a@gJ
     (record-constructor g$6839$21991$1a@gJ))
   (g$i/o-read-error?$21996$1a@gJ
     g$i/o-read-error?$22285$1a@gJ
     (condition-predicate g$6838$21989$1a@gJ))
   (g$&i/o-read-rtd$21997$1a@gJ
     g$&i/o-read-rtd$22286$1a@gJ
     g$6838$21989$1a@gJ)
   (g$&i/o-read-rcd$21998$1a@gJ
     g$&i/o-read-rcd$22287$1a@gJ
     g$6839$21991$1a@gJ)
   (g$6851$21999$1a@gJ
     g$6851$22288$1a@gJ
     (make-record-type-descriptor
       '&i/o-write
       g$6825$21979$1a@gJ
       'g$6854$1a@gJ
       '#f
       '#f
       '#()))
   (g$6853$22000$1a@gJ g$6853$22289$1a@gJ '#f)
   (g$6852$22001$1a@gJ
     g$6852$22290$1a@gJ
     (make-record-constructor-descriptor
       g$6851$21999$1a@gJ
       g$6826$21981$1a@gJ
       g$6853$22000$1a@gJ))
   (g$p?$22004$1a@gJ
     g$p?$22291$1a@gJ
     (record-predicate g$6851$21999$1a@gJ))
   (g$make-i/o-write-error$22005$1a@gJ
     g$make-i/o-write-error$22292$1a@gJ
     (record-constructor g$6852$22001$1a@gJ))
   (g$i/o-write-error?$22006$1a@gJ
     g$i/o-write-error?$22293$1a@gJ
     (condition-predicate g$6851$21999$1a@gJ))
   (g$&i/o-write-rtd$22007$1a@gJ
     g$&i/o-write-rtd$22294$1a@gJ
     g$6851$21999$1a@gJ)
   (g$&i/o-write-rcd$22008$1a@gJ
     g$&i/o-write-rcd$22295$1a@gJ
     g$6852$22001$1a@gJ)
   (g$6864$22010$1a@gJ
     g$6864$22296$1a@gJ
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$6825$21979$1a@gJ
       'g$6867$1a@gJ
       '#f
       '#f
       '#((immutable position))))
   (g$6866$22011$1a@gJ g$6866$22297$1a@gJ '#f)
   (g$6865$22012$1a@gJ
     g$6865$22298$1a@gJ
     (make-record-constructor-descriptor
       g$6864$22010$1a@gJ
       g$6826$21981$1a@gJ
       g$6866$22011$1a@gJ))
   (g$p?$22015$1a@gJ
     g$p?$22299$1a@gJ
     (record-predicate g$6864$22010$1a@gJ))
   (g$make-i/o-invalid-position-error$22016$1a@gJ
     g$make-i/o-invalid-position-error$22300$1a@gJ
     (record-constructor g$6865$22012$1a@gJ))
   (g$i/o-error-position$22017$1a@gJ
     g$i/o-error-position$22301$1a@gJ
     (record-accessor g$6864$22010$1a@gJ '0))
   (g$i/o-invalid-position-error?$22018$1a@gJ
     g$i/o-invalid-position-error?$22302$1a@gJ
     (condition-predicate g$6864$22010$1a@gJ))
   (g$i/o-error-position$22019$1a@gJ
     g$i/o-error-position$22303$1a@gJ
     (condition-accessor
       g$6864$22010$1a@gJ
       g$i/o-error-position$22017$1a@gJ))
   (g$&i/o-invalid-position-rtd$22020$1a@gJ
     g$&i/o-invalid-position-rtd$22304$1a@gJ
     g$6864$22010$1a@gJ)
   (g$&i/o-invalid-position-rcd$22021$1a@gJ
     g$&i/o-invalid-position-rcd$22305$1a@gJ
     g$6865$22012$1a@gJ)
   (g$6879$22023$1a@gJ
     g$6879$22306$1a@gJ
     (make-record-type-descriptor
       '&i/o-filename
       g$6825$21979$1a@gJ
       'g$6882$1a@gJ
       '#f
       '#f
       '#((immutable filename))))
   (g$6881$22024$1a@gJ g$6881$22307$1a@gJ '#f)
   (g$6880$22025$1a@gJ
     g$6880$22308$1a@gJ
     (make-record-constructor-descriptor
       g$6879$22023$1a@gJ
       g$6826$21981$1a@gJ
       g$6881$22024$1a@gJ))
   (g$p?$22028$1a@gJ
     g$p?$22309$1a@gJ
     (record-predicate g$6879$22023$1a@gJ))
   (g$make-i/o-filename-error$22029$1a@gJ
     g$make-i/o-filename-error$22310$1a@gJ
     (record-constructor g$6880$22025$1a@gJ))
   (g$i/o-error-filename$22030$1a@gJ
     g$i/o-error-filename$22311$1a@gJ
     (record-accessor g$6879$22023$1a@gJ '0))
   (g$i/o-filename-error?$22031$1a@gJ
     g$i/o-filename-error?$22312$1a@gJ
     (condition-predicate g$6879$22023$1a@gJ))
   (g$i/o-error-filename$22032$1a@gJ
     g$i/o-error-filename$22313$1a@gJ
     (condition-accessor
       g$6879$22023$1a@gJ
       g$i/o-error-filename$22030$1a@gJ))
   (g$&i/o-filename-rtd$22033$1a@gJ
     g$&i/o-filename-rtd$22314$1a@gJ
     g$6879$22023$1a@gJ)
   (g$&i/o-filename-rcd$22034$1a@gJ
     g$&i/o-filename-rcd$22315$1a@gJ
     g$6880$22025$1a@gJ)
   (g$6894$22035$1a@gJ
     g$6894$22316$1a@gJ
     (make-record-type-descriptor
       '&i/o-file-protection
       g$6879$22023$1a@gJ
       'g$6897$1a@gJ
       '#f
       '#f
       '#()))
   (g$6896$22036$1a@gJ g$6896$22317$1a@gJ '#f)
   (g$6895$22037$1a@gJ
     g$6895$22318$1a@gJ
     (make-record-constructor-descriptor
       g$6894$22035$1a@gJ
       g$6880$22025$1a@gJ
       g$6896$22036$1a@gJ))
   (g$p?$22040$1a@gJ
     g$p?$22319$1a@gJ
     (record-predicate g$6894$22035$1a@gJ))
   (g$make-i/o-file-protection-error$22041$1a@gJ
     g$make-i/o-file-protection-error$22320$1a@gJ
     (record-constructor g$6895$22037$1a@gJ))
   (g$i/o-file-protection-error?$22042$1a@gJ
     g$i/o-file-protection-error?$22321$1a@gJ
     (condition-predicate g$6894$22035$1a@gJ))
   (g$&i/o-file-protection-rtd$22043$1a@gJ
     g$&i/o-file-protection-rtd$22322$1a@gJ
     g$6894$22035$1a@gJ)
   (g$&i/o-file-protection-rcd$22044$1a@gJ
     g$&i/o-file-protection-rcd$22323$1a@gJ
     g$6895$22037$1a@gJ)
   (g$6907$22045$1a@gJ
     g$6907$22324$1a@gJ
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$6894$22035$1a@gJ
       'g$6910$1a@gJ
       '#f
       '#f
       '#()))
   (g$6909$22046$1a@gJ g$6909$22325$1a@gJ '#f)
   (g$6908$22047$1a@gJ
     g$6908$22326$1a@gJ
     (make-record-constructor-descriptor
       g$6907$22045$1a@gJ
       g$6895$22037$1a@gJ
       g$6909$22046$1a@gJ))
   (g$p?$22050$1a@gJ
     g$p?$22327$1a@gJ
     (record-predicate g$6907$22045$1a@gJ))
   (g$make-i/o-file-is-read-only-error$22051$1a@gJ
     g$make-i/o-file-is-read-only-error$22328$1a@gJ
     (record-constructor g$6908$22047$1a@gJ))
   (g$i/o-file-is-read-only-error?$22052$1a@gJ
     g$i/o-file-is-read-only-error?$22329$1a@gJ
     (condition-predicate g$6907$22045$1a@gJ))
   (g$&i/o-file-is-read-only-rtd$22053$1a@gJ
     g$&i/o-file-is-read-only-rtd$22330$1a@gJ
     g$6907$22045$1a@gJ)
   (g$&i/o-file-is-read-only-rcd$22054$1a@gJ
     g$&i/o-file-is-read-only-rcd$22331$1a@gJ
     g$6908$22047$1a@gJ)
   (g$6920$22055$1a@gJ
     g$6920$22332$1a@gJ
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$6879$22023$1a@gJ
       'g$6923$1a@gJ
       '#f
       '#f
       '#()))
   (g$6922$22056$1a@gJ g$6922$22333$1a@gJ '#f)
   (g$6921$22057$1a@gJ
     g$6921$22334$1a@gJ
     (make-record-constructor-descriptor
       g$6920$22055$1a@gJ
       g$6880$22025$1a@gJ
       g$6922$22056$1a@gJ))
   (g$p?$22060$1a@gJ
     g$p?$22335$1a@gJ
     (record-predicate g$6920$22055$1a@gJ))
   (g$make-i/o-file-already-exists-error$22061$1a@gJ
     g$make-i/o-file-already-exists-error$22336$1a@gJ
     (record-constructor g$6921$22057$1a@gJ))
   (g$i/o-file-already-exists-error?$22062$1a@gJ
     g$i/o-file-already-exists-error?$22337$1a@gJ
     (condition-predicate g$6920$22055$1a@gJ))
   (g$&i/o-file-already-exists-rtd$22063$1a@gJ
     g$&i/o-file-already-exists-rtd$22338$1a@gJ
     g$6920$22055$1a@gJ)
   (g$&i/o-file-already-exists-rcd$22064$1a@gJ
     g$&i/o-file-already-exists-rcd$22339$1a@gJ
     g$6921$22057$1a@gJ)
   (g$6933$22065$1a@gJ
     g$6933$22340$1a@gJ
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$6879$22023$1a@gJ
       'g$6936$1a@gJ
       '#f
       '#f
       '#()))
   (g$6935$22066$1a@gJ g$6935$22341$1a@gJ '#f)
   (g$6934$22067$1a@gJ
     g$6934$22342$1a@gJ
     (make-record-constructor-descriptor
       g$6933$22065$1a@gJ
       g$6880$22025$1a@gJ
       g$6935$22066$1a@gJ))
   (g$p?$22070$1a@gJ
     g$p?$22343$1a@gJ
     (record-predicate g$6933$22065$1a@gJ))
   (g$make-i/o-file-does-not-exist-error$22071$1a@gJ
     g$make-i/o-file-does-not-exist-error$22344$1a@gJ
     (record-constructor g$6934$22067$1a@gJ))
   (g$i/o-file-does-not-exist-error?$22072$1a@gJ
     g$i/o-file-does-not-exist-error?$22345$1a@gJ
     (condition-predicate g$6933$22065$1a@gJ))
   (g$&i/o-file-does-not-exist-rtd$22073$1a@gJ
     g$&i/o-file-does-not-exist-rtd$22346$1a@gJ
     g$6933$22065$1a@gJ)
   (g$&i/o-file-does-not-exist-rcd$22074$1a@gJ
     g$&i/o-file-does-not-exist-rcd$22347$1a@gJ
     g$6934$22067$1a@gJ)
   (g$6946$22076$1a@gJ
     g$6946$22348$1a@gJ
     (make-record-type-descriptor
       '&i/o-port
       g$6825$21979$1a@gJ
       'g$6949$1a@gJ
       '#f
       '#f
       '#((immutable port))))
   (g$6948$22077$1a@gJ g$6948$22349$1a@gJ '#f)
   (g$6947$22078$1a@gJ
     g$6947$22350$1a@gJ
     (make-record-constructor-descriptor
       g$6946$22076$1a@gJ
       g$6826$21981$1a@gJ
       g$6948$22077$1a@gJ))
   (g$p?$22081$1a@gJ
     g$p?$22351$1a@gJ
     (record-predicate g$6946$22076$1a@gJ))
   (g$make-i/o-port-error$22082$1a@gJ
     g$make-i/o-port-error$22352$1a@gJ
     (record-constructor g$6947$22078$1a@gJ))
   (g$i/o-error-port$22083$1a@gJ
     g$i/o-error-port$22353$1a@gJ
     (record-accessor g$6946$22076$1a@gJ '0))
   (g$i/o-port-error?$22084$1a@gJ
     g$i/o-port-error?$22354$1a@gJ
     (condition-predicate g$6946$22076$1a@gJ))
   (g$i/o-error-port$22085$1a@gJ
     g$i/o-error-port$22355$1a@gJ
     (condition-accessor
       g$6946$22076$1a@gJ
       g$i/o-error-port$22083$1a@gJ))
   (g$&i/o-port-rtd$22086$1a@gJ
     g$&i/o-port-rtd$22356$1a@gJ
     g$6946$22076$1a@gJ)
   (g$&i/o-port-rcd$22087$1a@gJ
     g$&i/o-port-rcd$22357$1a@gJ
     g$6947$22078$1a@gJ)
   (g$6961$22088$1a@gJ
     g$6961$22358$1a@gJ
     (make-record-type-descriptor
       '&i/o-decoding
       g$6946$22076$1a@gJ
       'g$6964$1a@gJ
       '#f
       '#f
       '#()))
   (g$6963$22089$1a@gJ g$6963$22359$1a@gJ '#f)
   (g$6962$22090$1a@gJ
     g$6962$22360$1a@gJ
     (make-record-constructor-descriptor
       g$6961$22088$1a@gJ
       g$6947$22078$1a@gJ
       g$6963$22089$1a@gJ))
   (g$p?$22093$1a@gJ
     g$p?$22361$1a@gJ
     (record-predicate g$6961$22088$1a@gJ))
   (g$make-i/o-decoding-error$22094$1a@gJ
     g$make-i/o-decoding-error$22362$1a@gJ
     (record-constructor g$6962$22090$1a@gJ))
   (g$i/o-decoding-error?$22095$1a@gJ
     g$i/o-decoding-error?$22363$1a@gJ
     (condition-predicate g$6961$22088$1a@gJ))
   (g$&i/o-decoding-rtd$22096$1a@gJ
     g$&i/o-decoding-rtd$22364$1a@gJ
     g$6961$22088$1a@gJ)
   (g$&i/o-decoding-rcd$22097$1a@gJ
     g$&i/o-decoding-rcd$22365$1a@gJ
     g$6962$22090$1a@gJ)
   (g$6974$22099$1a@gJ
     g$6974$22366$1a@gJ
     (make-record-type-descriptor
       '&i/o-encoding
       g$6946$22076$1a@gJ
       'g$6977$1a@gJ
       '#f
       '#f
       '#((immutable char))))
   (g$6976$22100$1a@gJ g$6976$22367$1a@gJ '#f)
   (g$6975$22101$1a@gJ
     g$6975$22368$1a@gJ
     (make-record-constructor-descriptor
       g$6974$22099$1a@gJ
       g$6947$22078$1a@gJ
       g$6976$22100$1a@gJ))
   (g$p?$22104$1a@gJ
     g$p?$22369$1a@gJ
     (record-predicate g$6974$22099$1a@gJ))
   (g$make-i/o-encoding-error$22105$1a@gJ
     g$make-i/o-encoding-error$22370$1a@gJ
     (record-constructor g$6975$22101$1a@gJ))
   (g$i/o-encoding-error-char$22106$1a@gJ
     g$i/o-encoding-error-char$22371$1a@gJ
     (record-accessor g$6974$22099$1a@gJ '0))
   (g$i/o-encoding-error?$22107$1a@gJ
     g$i/o-encoding-error?$22372$1a@gJ
     (condition-predicate g$6974$22099$1a@gJ))
   (g$i/o-encoding-error-char$22108$1a@gJ
     g$i/o-encoding-error-char$22373$1a@gJ
     (condition-accessor
       g$6974$22099$1a@gJ
       g$i/o-encoding-error-char$22106$1a@gJ))
   (g$&i/o-encoding-rtd$22109$1a@gJ
     g$&i/o-encoding-rtd$22374$1a@gJ
     g$6974$22099$1a@gJ)
   (g$&i/o-encoding-rcd$22110$1a@gJ
     g$&i/o-encoding-rcd$22375$1a@gJ
     g$6975$22101$1a@gJ)
   (g$6989$22111$1a@gJ
     g$6989$22376$1a@gJ
     (make-record-type-descriptor
       '&no-infinities
       g$6769$21933$1a@gJ
       'g$6992$1a@gJ
       '#f
       '#f
       '#()))
   (g$6991$22112$1a@gJ g$6991$22377$1a@gJ '#f)
   (g$6990$22113$1a@gJ
     g$6990$22378$1a@gJ
     (make-record-constructor-descriptor
       g$6989$22111$1a@gJ
       g$6770$21935$1a@gJ
       g$6991$22112$1a@gJ))
   (g$p?$22116$1a@gJ
     g$p?$22379$1a@gJ
     (record-predicate g$6989$22111$1a@gJ))
   (g$make-no-infinities-violation$22117$1a@gJ
     g$make-no-infinities-violation$22380$1a@gJ
     (record-constructor g$6990$22113$1a@gJ))
   (g$no-infinities-violation?$22118$1a@gJ
     g$no-infinities-violation?$22381$1a@gJ
     (condition-predicate g$6989$22111$1a@gJ))
   (g$&no-infinities-rtd$22119$1a@gJ
     g$&no-infinities-rtd$22382$1a@gJ
     g$6989$22111$1a@gJ)
   (g$&no-infinities-rcd$22120$1a@gJ
     g$&no-infinities-rcd$22383$1a@gJ
     g$6990$22113$1a@gJ)
   (g$7002$22121$1a@gJ
     g$7002$22384$1a@gJ
     (make-record-type-descriptor
       '&no-nans
       g$6769$21933$1a@gJ
       'g$7005$1a@gJ
       '#f
       '#f
       '#()))
   (g$7004$22122$1a@gJ g$7004$22385$1a@gJ '#f)
   (g$7003$22123$1a@gJ
     g$7003$22386$1a@gJ
     (make-record-constructor-descriptor
       g$7002$22121$1a@gJ
       g$6770$21935$1a@gJ
       g$7004$22122$1a@gJ))
   (g$p?$22126$1a@gJ
     g$p?$22387$1a@gJ
     (record-predicate g$7002$22121$1a@gJ))
   (g$make-no-nans-violation$22127$1a@gJ
     g$make-no-nans-violation$22388$1a@gJ
     (record-constructor g$7003$22123$1a@gJ))
   (g$no-nans-violation?$22128$1a@gJ
     g$no-nans-violation?$22389$1a@gJ
     (condition-predicate g$7002$22121$1a@gJ))
   (g$&no-nans-rtd$22129$1a@gJ
     g$&no-nans-rtd$22390$1a@gJ
     g$7002$22121$1a@gJ)
   (g$&no-nans-rcd$22130$1a@gJ
     g$&no-nans-rcd$22391$1a@gJ
     g$7003$22123$1a@gJ))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$set-car!$22392$1a@gJ
     g$set-car!$22404$1a@gJ
     (case-lambda
       ((g$lst$22395$1a@gJ g$val$22396$1a@gJ)
        (begin
          (if (not (pair? g$lst$22395$1a@gJ))
            (assertion-violation
              'set-car!
              '"not a pair"
              g$val$22396$1a@gJ)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'car
            g$lst$22395$1a@gJ
            g$val$22396$1a@gJ)))))
   (g$set-cdr!$22393$1a@gJ
     g$set-cdr!$22405$1a@gJ
     (case-lambda
       ((g$lst$22397$1a@gJ g$val$22398$1a@gJ)
        (begin
          (if (not (pair? g$lst$22397$1a@gJ))
            (assertion-violation
              'set-cdr!
              '"not a pair"
              g$val$22398$1a@gJ)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'cdr
            g$lst$22397$1a@gJ
            g$val$22398$1a@gJ)))))
   (g$append!$22394$1a@gJ
     g$append!$22406$1a@gJ
     (case-lambda
       ((g$a$22399$1a@gJ g$b$22400$1a@gJ)
        (if (null? g$a$22399$1a@gJ)
          g$b$22400$1a@gJ
          (if (null? g$b$22400$1a@gJ)
            g$a$22399$1a@gJ
            (begin
              '#f
              ((letrec ((g$f$22401$1a@gJ
                          (case-lambda
                            ((g$a$22402$1a@gJ)
                             ((case-lambda
                                ((g$n$22403$1a@gJ)
                                 (if (null? g$n$22403$1a@gJ)
                                   (g$set-cdr!$22393$1a@gJ
                                     g$a$22402$1a@gJ
                                     g$b$22400$1a@gJ)
                                   (g$f$22401$1a@gJ g$n$22403$1a@gJ))))
                              (cdr g$a$22402$1a@gJ))))))
                 g$f$22401$1a@gJ)
               g$a$22399$1a@gJ)
              g$a$22399$1a@gJ)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$22407$1a@gJ
     g$inexact->exact$22427$1a@gJ
     g$exact$21664$1a@gJ)
   (g$exact->inexact$22408$1a@gJ
     g$exact->inexact$22428$1a@gJ
     g$inexact$21663$1a@gJ)
   (g$sign$22409$1a@gJ
     g$sign$22429$1a@gJ
     (case-lambda
       ((g$n$22415$1a@gJ)
        (if (g$>$21672$1a@gJ g$n$22415$1a@gJ '0)
          '1
          (if (g$<$21670$1a@gJ g$n$22415$1a@gJ '0)
            '-1
            (begin '#f '0))))))
   (g$quotient$22410$1a@gJ
     g$quotient$22430$1a@gJ
     (case-lambda
       ((g$n1$22416$1a@gJ g$n2$22417$1a@gJ)
        (begin
          (if (not (g$integer-valued?$21659$1a@gJ g$n1$22416$1a@gJ))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$22416$1a@gJ)
            (void))
          (if (not (g$integer-valued?$21659$1a@gJ g$n2$22417$1a@gJ))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$22417$1a@gJ)
            (void))
          (* (g$sign$22409$1a@gJ g$n1$22416$1a@gJ)
             (g$sign$22409$1a@gJ g$n2$22417$1a@gJ)
             (g$div$21694$1a@gJ
               (g$abs$21695$1a@gJ g$n1$22416$1a@gJ)
               (g$abs$21695$1a@gJ g$n2$22417$1a@gJ)))))))
   (g$remainder$22411$1a@gJ
     g$remainder$22431$1a@gJ
     (case-lambda
       ((g$n1$22418$1a@gJ g$n2$22419$1a@gJ)
        (begin
          (if (not (g$integer-valued?$21659$1a@gJ g$n1$22418$1a@gJ))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$22418$1a@gJ)
            (void))
          (if (not (g$integer-valued?$21659$1a@gJ g$n2$22419$1a@gJ))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$22419$1a@gJ)
            (void))
          (* (g$sign$22409$1a@gJ g$n1$22418$1a@gJ)
             (g$mod$20643$1a@gJ
               (g$abs$21695$1a@gJ g$n1$22418$1a@gJ)
               (g$abs$21695$1a@gJ g$n2$22419$1a@gJ)))))))
   (g$modulo$22412$1a@gJ
     g$modulo$22432$1a@gJ
     (case-lambda
       ((g$n1$22420$1a@gJ g$n2$22421$1a@gJ)
        (begin
          (if (not (g$integer-valued?$21659$1a@gJ g$n1$22420$1a@gJ))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$22420$1a@gJ)
            (void))
          (if (not (g$integer-valued?$21659$1a@gJ g$n2$22421$1a@gJ))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$22421$1a@gJ)
            (void))
          (* (g$sign$22409$1a@gJ g$n2$22421$1a@gJ)
             (g$mod$20643$1a@gJ
               (* (g$sign$22409$1a@gJ g$n2$22421$1a@gJ)
                  g$n1$22420$1a@gJ)
               (g$abs$21695$1a@gJ g$n2$22421$1a@gJ)))))))
   (g$make-promise$22413$1a@gJ
     g$make-promise$22433$1a@gJ
     (case-lambda
       ((g$proc$22422$1a@gJ)
        ((case-lambda
           ((g$result-ready?$22423$1a@gJ g$result$22424$1a@gJ)
            (case-lambda
              (()
               (if g$result-ready?$22423$1a@gJ
                 g$result$22424$1a@gJ
                 ((case-lambda
                    ((g$x$22425$1a@gJ)
                     (if g$result-ready?$22423$1a@gJ
                       g$result$22424$1a@gJ
                       (begin
                         (set! g$result-ready?$22423$1a@gJ '#t)
                         (set! g$result$22424$1a@gJ g$x$22425$1a@gJ)
                         g$result$22424$1a@gJ))))
                  (g$proc$22422$1a@gJ)))))))
         '#f
         '#f))))
   (g$force$22414$1a@gJ
     g$force$22434$1a@gJ
     (case-lambda ((g$object$22426$1a@gJ) (g$object$22426$1a@gJ)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$22435$1a@gJ
     g$split$22460$1a@gJ
     (case-lambda
       ((g$ls$22439$1a@gJ)
        ((letrec ((g$loop$22440$1a@gJ
                    (case-lambda
                      ((g$rest$22441$1a@gJ
                         g$left$22442$1a@gJ
                         g$right$22443$1a@gJ)
                       (if (null? g$rest$22441$1a@gJ)
                         (cons g$left$22442$1a@gJ g$right$22443$1a@gJ)
                         (if (null? (cdr g$rest$22441$1a@gJ))
                           (cons
                             (cons
                               (car g$rest$22441$1a@gJ)
                               g$left$22442$1a@gJ)
                             g$right$22443$1a@gJ)
                           (begin
                             '#f
                             (g$loop$22440$1a@gJ
                               (g$cddr$20660$1a@gJ g$rest$22441$1a@gJ)
                               (cons
                                 (car g$rest$22441$1a@gJ)
                                 g$left$22442$1a@gJ)
                               (cons
                                 (g$cadr$20658$1a@gJ g$rest$22441$1a@gJ)
                                 g$right$22443$1a@gJ)))))))))
           g$loop$22440$1a@gJ)
         g$ls$22439$1a@gJ
         '()
         '()))))
   (g$reverse-it$22436$1a@gJ
     g$reverse-it$22461$1a@gJ
     (case-lambda
       ((g$head$22444$1a@gJ g$tail$22445$1a@gJ)
        (if (null? g$head$22444$1a@gJ)
          g$tail$22445$1a@gJ
          (g$reverse-it$22436$1a@gJ
            (cdr g$head$22444$1a@gJ)
            (cons (car g$head$22444$1a@gJ) g$tail$22445$1a@gJ))))))
   (g$merge$22437$1a@gJ
     g$merge$22462$1a@gJ
     (case-lambda
       ((g$list-1$22446$1a@gJ
          g$list-2$22447$1a@gJ
          g$precedes?$22448$1a@gJ)
        ((letrec ((g$loop$22449$1a@gJ
                    (case-lambda
                      ((g$source-1$22450$1a@gJ
                         g$source-2$22451$1a@gJ
                         g$so-far$22452$1a@gJ)
                       (if (null? g$source-1$22450$1a@gJ)
                         (g$reverse-it$22436$1a@gJ
                           g$so-far$22452$1a@gJ
                           g$source-2$22451$1a@gJ)
                         (if (null? g$source-2$22451$1a@gJ)
                           (g$reverse-it$22436$1a@gJ
                             g$so-far$22452$1a@gJ
                             g$source-1$22450$1a@gJ)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$car-1$22453$1a@gJ
                                   g$car-2$22454$1a@gJ)
                                 (if (g$precedes?$22448$1a@gJ
                                       g$car-2$22454$1a@gJ
                                       g$car-1$22453$1a@gJ)
                                   (g$loop$22449$1a@gJ
                                     g$source-1$22450$1a@gJ
                                     (cdr g$source-2$22451$1a@gJ)
                                     (cons
                                       g$car-2$22454$1a@gJ
                                       g$so-far$22452$1a@gJ))
                                   (g$loop$22449$1a@gJ
                                     g$source-2$22451$1a@gJ
                                     (cdr g$source-1$22450$1a@gJ)
                                     (cons
                                       g$car-1$22453$1a@gJ
                                       g$so-far$22452$1a@gJ)))))
                              (car g$source-1$22450$1a@gJ)
                              (car g$source-2$22451$1a@gJ)))))))))
           g$loop$22449$1a@gJ)
         g$list-1$22446$1a@gJ
         g$list-2$22447$1a@gJ
         '()))))
   (g$list-sort$22438$1a@gJ
     g$list-sort$22463$1a@gJ
     (case-lambda
       ((g$precedes?$22455$1a@gJ g$ls$22456$1a@gJ)
        (if (null? g$ls$22456$1a@gJ)
          '()
          ((letrec ((g$helper$22457$1a@gJ
                      (case-lambda
                        ((g$piece$22458$1a@gJ)
                         (if (null? (cdr g$piece$22458$1a@gJ))
                           g$piece$22458$1a@gJ
                           ((case-lambda
                              ((g$parts$22459$1a@gJ)
                               (g$merge$22437$1a@gJ
                                 (g$helper$22457$1a@gJ
                                   (car g$parts$22459$1a@gJ))
                                 (g$helper$22457$1a@gJ
                                   (cdr g$parts$22459$1a@gJ))
                                 g$precedes?$22455$1a@gJ)))
                            (g$split$22435$1a@gJ
                              g$piece$22458$1a@gJ)))))))
             g$helper$22457$1a@gJ)
           g$ls$22456$1a@gJ))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$using$22465$1a@gJ
     g$using$22692$1a@gJ
     (clr-using-internal 'System.Globalization))
   (g$compare-info$22466$1a@gJ
     g$compare-info$22693$1a@gJ
     (clr-call-internal
       'CultureInfo
       'get_CompareInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$text-info$22467$1a@gJ
     g$text-info$22694$1a@gJ
     (clr-call-internal
       'CultureInfo
       'get_TextInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$char-upcase$22468$1a@gJ
     g$char-upcase$22695$1a@gJ
     (case-lambda
       ((g$chr$22619$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22619$1a@gJ))
            (assertion-violation
              'char-upcase
              '"not a character"
              g$chr$22619$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            'ToUpper
            '()
            g$chr$22619$1a@gJ)))))
   (g$char-downcase$22469$1a@gJ
     g$char-downcase$22696$1a@gJ
     (case-lambda
       ((g$chr$22620$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22620$1a@gJ))
            (assertion-violation
              'char-downcase
              '"not a character"
              g$chr$22620$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            'ToLower
            '()
            g$chr$22620$1a@gJ)))))
   (g$char-titlecase$22470$1a@gJ
     g$char-titlecase$22697$1a@gJ
     (case-lambda
       ((g$chr$22621$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22621$1a@gJ))
            (assertion-violation
              'char-titlecase
              '"not a character"
              g$chr$22621$1a@gJ)
            (void))
          (g$string-ref$20629$1a@gJ
            (clr-call-internal
              'TextInfo
              'ToTitleCase
              g$text-info$22467$1a@gJ
              (g$->string$22480$1a@gJ
                (g$string$20634$1a@gJ g$chr$22621$1a@gJ)))
            '0)))))
   (g$char-foldcase$22471$1a@gJ
     g$char-foldcase$22698$1a@gJ
     (case-lambda
       ((g$chr$22622$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22622$1a@gJ))
            (assertion-violation
              'char-foldcase
              '"not a character"
              g$chr$22622$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            'ToLowerInvariant
            '()
            (clr-call-internal
              'System.Char
              'ToUpperInvariant
              '()
              g$chr$22622$1a@gJ))))))
   (g$char-alphabetic?$22472$1a@gJ
     g$char-alphabetic?$22699$1a@gJ
     (case-lambda
       ((g$chr$22623$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22623$1a@gJ))
            (assertion-violation
              'char-alphabetic?
              '"not a character"
              g$chr$22623$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLetter(Char)"
            '()
            g$chr$22623$1a@gJ)))))
   (g$char-numeric?$22473$1a@gJ
     g$char-numeric?$22700$1a@gJ
     (case-lambda
       ((g$chr$22624$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22624$1a@gJ))
            (assertion-violation
              'char-numeric?
              '"not a character"
              g$chr$22624$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            '"IsDigit(Char)"
            '()
            g$chr$22624$1a@gJ)))))
   (g$char-whitespace?$22474$1a@gJ
     g$char-whitespace?$22701$1a@gJ
     (case-lambda
       ((g$chr$22625$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22625$1a@gJ))
            (assertion-violation
              'char-whitespace?
              '"not a character"
              g$chr$22625$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            '"IsWhiteSpace(Char)"
            '()
            g$chr$22625$1a@gJ)))))
   (g$char-upper-case?$22475$1a@gJ
     g$char-upper-case?$22702$1a@gJ
     (case-lambda
       ((g$chr$22626$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22626$1a@gJ))
            (assertion-violation
              'char-upper-case?
              '"not a character"
              g$chr$22626$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            '"IsUpper(Char)"
            '()
            g$chr$22626$1a@gJ)))))
   (g$char-lower-case?$22476$1a@gJ
     g$char-lower-case?$22703$1a@gJ
     (case-lambda
       ((g$chr$22627$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22627$1a@gJ))
            (assertion-violation
              'char-lower-case?
              '"not a character"
              g$chr$22627$1a@gJ)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLower(Char)"
            '()
            g$chr$22627$1a@gJ)))))
   (g$char-title-case?$22477$1a@gJ
     g$char-title-case?$22704$1a@gJ
     (case-lambda
       ((g$chr$22628$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22628$1a@gJ))
            (assertion-violation
              'char-title-case?
              '"not a character"
              g$chr$22628$1a@gJ)
            (void))
          ((case-lambda
             ((g$t$22629$1a@gJ)
              (if (g$memv$20188$1a@gJ g$t$22629$1a@gJ '(#\I #\A))
                '#f
                (begin
                  '#f
                  (eqv?
                    g$chr$22628$1a@gJ
                    (g$char-titlecase$22470$1a@gJ
                      g$chr$22628$1a@gJ))))))
           g$chr$22628$1a@gJ)))))
   (g$char-general-category$22478$1a@gJ
     g$char-general-category$22705$1a@gJ
     (case-lambda
       ((g$chr$22630$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$chr$22630$1a@gJ))
            (assertion-violation
              'char-general-category
              '"not a character"
              g$chr$22630$1a@gJ)
            (void))
          ((case-lambda
             ((g$t$22631$1a@gJ)
              (if (eqv? g$t$22631$1a@gJ 'closepunctuation)
                'Pe
                (if (eqv? g$t$22631$1a@gJ 'connectorpunctuation)
                  'Pc
                  (if (eqv? g$t$22631$1a@gJ 'control)
                    'Cc
                    (if (eqv? g$t$22631$1a@gJ 'currencysymbol)
                      'Sc
                      (if (eqv? g$t$22631$1a@gJ 'dashpunctuation)
                        'Pd
                        (if (eqv? g$t$22631$1a@gJ 'decimaldigitnumber)
                          'Nd
                          (if (eqv? g$t$22631$1a@gJ 'enclosingmark)
                            'Me
                            (if (eqv?
                                  g$t$22631$1a@gJ
                                  'finalquotepunctuation)
                              'Pf
                              (if (eqv? g$t$22631$1a@gJ 'format)
                                'Cf
                                (if (eqv?
                                      g$t$22631$1a@gJ
                                      'initialquotepunctuation)
                                  'Pi
                                  (if (eqv?
                                        g$t$22631$1a@gJ
                                        'letternumber)
                                    'Nl
                                    (if (eqv?
                                          g$t$22631$1a@gJ
                                          'lineseparator)
                                      'Zl
                                      (if (eqv?
                                            g$t$22631$1a@gJ
                                            'lowercaseletter)
                                        'Ll
                                        (if (eqv?
                                              g$t$22631$1a@gJ
                                              'mathsymbol)
                                          'Sm
                                          (if (eqv?
                                                g$t$22631$1a@gJ
                                                'modifierletter)
                                            'Lm
                                            (if (eqv?
                                                  g$t$22631$1a@gJ
                                                  'modifiersymbol)
                                              'Sk
                                              (if (eqv?
                                                    g$t$22631$1a@gJ
                                                    'nonspacingmark)
                                                'Mn
                                                (if (eqv?
                                                      g$t$22631$1a@gJ
                                                      'openpunctuation)
                                                  'Ps
                                                  (if (eqv?
                                                        g$t$22631$1a@gJ
                                                        'otherletter)
                                                    'Lo
                                                    (if (eqv?
                                                          g$t$22631$1a@gJ
                                                          'othernotassigned)
                                                      'Cn
                                                      (if (eqv?
                                                            g$t$22631$1a@gJ
                                                            'othernumber)
                                                        'No
                                                        (if (eqv?
                                                              g$t$22631$1a@gJ
                                                              'otherpunctuation)
                                                          'Po
                                                          (if (eqv?
                                                                g$t$22631$1a@gJ
                                                                'othersymbol)
                                                            'So
                                                            (if (eqv?
                                                                  g$t$22631$1a@gJ
                                                                  'paragraphseparator)
                                                              'Zp
                                                              (if (eqv?
                                                                    g$t$22631$1a@gJ
                                                                    'privateuse)
                                                                'Co
                                                                (if (eqv?
                                                                      g$t$22631$1a@gJ
                                                                      'spaceseparator)
                                                                  'Zs
                                                                  (if (eqv?
                                                                        g$t$22631$1a@gJ
                                                                        'spacingcombiningmark)
                                                                    'Mc
                                                                    (if (eqv?
                                                                          g$t$22631$1a@gJ
                                                                          'surrogate)
                                                                      'Cs
                                                                      (if (eqv?
                                                                            g$t$22631$1a@gJ
                                                                            'titlecaseletter)
                                                                        'Lt
                                                                        (if (eqv?
                                                                              g$t$22631$1a@gJ
                                                                              'uppercaseletter)
                                                                          'Lu
                                                                          (begin
                                                                            '#f
                                                                            '#f)))))))))))))))))))))))))))))))))
           (clr-call-internal
             'System.Char
             '"GetUnicodeCategory(Char)"
             '()
             g$chr$22630$1a@gJ))))))
   (g$clr-string?$22479$1a@gJ
     g$clr-string?$22706$1a@gJ
     (case-lambda
       ((g$obj$22632$1a@gJ)
        (clr-is-internal 'System.String g$obj$22632$1a@gJ))))
   (g$->string$22480$1a@gJ
     g$->string$22707$1a@gJ
     (case-lambda
       ((g$str$22633$1a@gJ)
        (if (g$clr-string?$22479$1a@gJ g$str$22633$1a@gJ)
          g$str$22633$1a@gJ
          (clr-call-internal 'Object 'ToString g$str$22633$1a@gJ)))))
   (g$string-ci-compare$22500$1a@gJ
     g$string-ci-compare$22708$1a@gJ
     (case-lambda
       ((g$a$22634$1a@gJ g$b$22635$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$a$22634$1a@gJ))
            (assertion-violation
              'string-ci-compare
              '"not a string"
              g$a$22634$1a@gJ)
            (void))
          (if (not (g$string?$20616$1a@gJ g$b$22635$1a@gJ))
            (assertion-violation
              'string-ci-compare
              '"not a string"
              g$b$22635$1a@gJ)
            (void))
          (clr-call-internal
            'CompareInfo
            '"Compare(String,String,CompareOptions)"
            g$compare-info$22466$1a@gJ
            (g$->string$22480$1a@gJ g$a$22634$1a@gJ)
            (g$->string$22480$1a@gJ g$b$22635$1a@gJ)
            'IgnoreCase)))))
   (g$string-ci=?$22539$1a@gJ
     g$string-ci=?$22709$1a@gJ
     (case-lambda
       ((g$a$22636$1a@gJ g$b$22637$1a@gJ . g$rest$22638$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$a$22636$1a@gJ))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$22636$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22639$1a@gJ)
               (begin
                 (if (not (g$string?$20616$1a@gJ g$x$22639$1a@gJ))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$22639$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22640$1a@gJ)
                     (begin
                       (set! g$a$22636$1a@gJ g$x$22639$1a@gJ)
                       g$r$22640$1a@gJ)))
                  (g$fx=?$25072$1a@gJ
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22466$1a@gJ
                      (g$->string$22480$1a@gJ g$a$22636$1a@gJ)
                      (g$->string$22480$1a@gJ g$x$22639$1a@gJ)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22637$1a@gJ g$rest$22638$1a@gJ))))))
   (g$string-ci<?$22540$1a@gJ
     g$string-ci<?$22710$1a@gJ
     (case-lambda
       ((g$a$22641$1a@gJ g$b$22642$1a@gJ . g$rest$22643$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$a$22641$1a@gJ))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$22641$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22644$1a@gJ)
               (begin
                 (if (not (g$string?$20616$1a@gJ g$x$22644$1a@gJ))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$22644$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22645$1a@gJ)
                     (begin
                       (set! g$a$22641$1a@gJ g$x$22644$1a@gJ)
                       g$r$22645$1a@gJ)))
                  (g$fx<?$25073$1a@gJ
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22466$1a@gJ
                      (g$->string$22480$1a@gJ g$a$22641$1a@gJ)
                      (g$->string$22480$1a@gJ g$x$22644$1a@gJ)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22642$1a@gJ g$rest$22643$1a@gJ))))))
   (g$string-ci>?$22541$1a@gJ
     g$string-ci>?$22711$1a@gJ
     (case-lambda
       ((g$a$22646$1a@gJ g$b$22647$1a@gJ . g$rest$22648$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$a$22646$1a@gJ))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$22646$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22649$1a@gJ)
               (begin
                 (if (not (g$string?$20616$1a@gJ g$x$22649$1a@gJ))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$22649$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22650$1a@gJ)
                     (begin
                       (set! g$a$22646$1a@gJ g$x$22649$1a@gJ)
                       g$r$22650$1a@gJ)))
                  (g$fx>?$25075$1a@gJ
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22466$1a@gJ
                      (g$->string$22480$1a@gJ g$a$22646$1a@gJ)
                      (g$->string$22480$1a@gJ g$x$22649$1a@gJ)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22647$1a@gJ g$rest$22648$1a@gJ))))))
   (g$string-ci<=?$22542$1a@gJ
     g$string-ci<=?$22712$1a@gJ
     (case-lambda
       ((g$a$22651$1a@gJ g$b$22652$1a@gJ . g$rest$22653$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$a$22651$1a@gJ))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$22651$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22654$1a@gJ)
               (begin
                 (if (not (g$string?$20616$1a@gJ g$x$22654$1a@gJ))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$22654$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22655$1a@gJ)
                     (begin
                       (set! g$a$22651$1a@gJ g$x$22654$1a@gJ)
                       g$r$22655$1a@gJ)))
                  (g$fx<=?$25074$1a@gJ
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22466$1a@gJ
                      (g$->string$22480$1a@gJ g$a$22651$1a@gJ)
                      (g$->string$22480$1a@gJ g$x$22654$1a@gJ)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22652$1a@gJ g$rest$22653$1a@gJ))))))
   (g$string-ci>=?$22543$1a@gJ
     g$string-ci>=?$22713$1a@gJ
     (case-lambda
       ((g$a$22656$1a@gJ g$b$22657$1a@gJ . g$rest$22658$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$a$22656$1a@gJ))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$22656$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22659$1a@gJ)
               (begin
                 (if (not (g$string?$20616$1a@gJ g$x$22659$1a@gJ))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$22659$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22660$1a@gJ)
                     (begin
                       (set! g$a$22656$1a@gJ g$x$22659$1a@gJ)
                       g$r$22660$1a@gJ)))
                  (g$fx>=?$25076$1a@gJ
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$22466$1a@gJ
                      (g$->string$22480$1a@gJ g$a$22656$1a@gJ)
                      (g$->string$22480$1a@gJ g$x$22659$1a@gJ)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$22657$1a@gJ g$rest$22658$1a@gJ))))))
   (g$string-titlecase$22544$1a@gJ
     g$string-titlecase$22714$1a@gJ
     (case-lambda
       ((g$str$22661$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$str$22661$1a@gJ))
            (assertion-violation
              'string-titlecase
              '"not a string"
              g$str$22661$1a@gJ)
            (void))
          (clr-call-internal
            'TextInfo
            'ToTitleCase
            g$text-info$22467$1a@gJ
            (string-downcase g$str$22661$1a@gJ))))))
   (g$string-foldcase$22545$1a@gJ
     g$string-foldcase$22715$1a@gJ
     (case-lambda
       ((g$str$22662$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$str$22662$1a@gJ))
            (assertion-violation
              'string-foldcase
              '"not a string"
              g$str$22662$1a@gJ)
            (void))
          (clr-call-internal
            'System.String
            'ToLowerInvariant
            (string-upcase g$str$22662$1a@gJ))))))
   (g$char-ci=?$22584$1a@gJ
     g$char-ci=?$22716$1a@gJ
     (case-lambda
       ((g$a$22663$1a@gJ g$b$22664$1a@gJ . g$rest$22665$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$a$22663$1a@gJ))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$22663$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22666$1a@gJ)
               (begin
                 (if (not (g$char?$20617$1a@gJ g$x$22666$1a@gJ))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$22666$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22667$1a@gJ)
                     (begin
                       (set! g$a$22663$1a@gJ g$x$22666$1a@gJ)
                       g$r$22667$1a@gJ)))
                  (g$fx=?$25072$1a@gJ
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$a$22663$1a@gJ))
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$x$22666$1a@gJ)))))))
            (cons g$b$22664$1a@gJ g$rest$22665$1a@gJ))))))
   (g$char-ci<?$22585$1a@gJ
     g$char-ci<?$22717$1a@gJ
     (case-lambda
       ((g$a$22668$1a@gJ g$b$22669$1a@gJ . g$rest$22670$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$a$22668$1a@gJ))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$22668$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22671$1a@gJ)
               (begin
                 (if (not (g$char?$20617$1a@gJ g$x$22671$1a@gJ))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$22671$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22672$1a@gJ)
                     (begin
                       (set! g$a$22668$1a@gJ g$x$22671$1a@gJ)
                       g$r$22672$1a@gJ)))
                  (g$fx<?$25073$1a@gJ
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$a$22668$1a@gJ))
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$x$22671$1a@gJ)))))))
            (cons g$b$22669$1a@gJ g$rest$22670$1a@gJ))))))
   (g$char-ci>?$22586$1a@gJ
     g$char-ci>?$22718$1a@gJ
     (case-lambda
       ((g$a$22673$1a@gJ g$b$22674$1a@gJ . g$rest$22675$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$a$22673$1a@gJ))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$22673$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22676$1a@gJ)
               (begin
                 (if (not (g$char?$20617$1a@gJ g$x$22676$1a@gJ))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$22676$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22677$1a@gJ)
                     (begin
                       (set! g$a$22673$1a@gJ g$x$22676$1a@gJ)
                       g$r$22677$1a@gJ)))
                  (g$fx>?$25075$1a@gJ
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$a$22673$1a@gJ))
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$x$22676$1a@gJ)))))))
            (cons g$b$22674$1a@gJ g$rest$22675$1a@gJ))))))
   (g$char-ci<=?$22587$1a@gJ
     g$char-ci<=?$22719$1a@gJ
     (case-lambda
       ((g$a$22678$1a@gJ g$b$22679$1a@gJ . g$rest$22680$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$a$22678$1a@gJ))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$22678$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22681$1a@gJ)
               (begin
                 (if (not (g$char?$20617$1a@gJ g$x$22681$1a@gJ))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$22681$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22682$1a@gJ)
                     (begin
                       (set! g$a$22678$1a@gJ g$x$22681$1a@gJ)
                       g$r$22682$1a@gJ)))
                  (g$fx<=?$25074$1a@gJ
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$a$22678$1a@gJ))
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$x$22681$1a@gJ)))))))
            (cons g$b$22679$1a@gJ g$rest$22680$1a@gJ))))))
   (g$char-ci>=?$22588$1a@gJ
     g$char-ci>=?$22720$1a@gJ
     (case-lambda
       ((g$a$22683$1a@gJ g$b$22684$1a@gJ . g$rest$22685$1a@gJ)
        (begin
          (if (not (g$char?$20617$1a@gJ g$a$22683$1a@gJ))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$22683$1a@gJ)
            (void))
          (g$for-all$20193$1a@gJ
            (case-lambda
              ((g$x$22686$1a@gJ)
               (begin
                 (if (not (g$char?$20617$1a@gJ g$x$22686$1a@gJ))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$22686$1a@gJ)
                   (void))
                 ((case-lambda
                    ((g$r$22687$1a@gJ)
                     (begin
                       (set! g$a$22683$1a@gJ g$x$22686$1a@gJ)
                       g$r$22687$1a@gJ)))
                  (g$fx>=?$25076$1a@gJ
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$a$22683$1a@gJ))
                    (g$char->integer$20626$1a@gJ
                      (g$char-upcase$22468$1a@gJ g$x$22686$1a@gJ)))))))
            (cons g$b$22684$1a@gJ g$rest$22685$1a@gJ))))))
   (g$string-normalize-nfc$22615$1a@gJ
     g$string-normalize-nfc$22721$1a@gJ
     (case-lambda
       ((g$s$22688$1a@gJ)
        (if (g$string?$20616$1a@gJ g$s$22688$1a@gJ)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22480$1a@gJ g$s$22688$1a@gJ)
            'formc)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22688$1a@gJ)))))
   (g$string-normalize-nfd$22616$1a@gJ
     g$string-normalize-nfd$22722$1a@gJ
     (case-lambda
       ((g$s$22689$1a@gJ)
        (if (g$string?$20616$1a@gJ g$s$22689$1a@gJ)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22480$1a@gJ g$s$22689$1a@gJ)
            'formd)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22689$1a@gJ)))))
   (g$string-normalize-nfkc$22617$1a@gJ
     g$string-normalize-nfkc$22723$1a@gJ
     (case-lambda
       ((g$s$22690$1a@gJ)
        (if (g$string?$20616$1a@gJ g$s$22690$1a@gJ)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22480$1a@gJ g$s$22690$1a@gJ)
            'formkc)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22690$1a@gJ)))))
   (g$string-normalize-nfkd$22618$1a@gJ
     g$string-normalize-nfkd$22724$1a@gJ
     (case-lambda
       ((g$s$22691$1a@gJ)
        (if (g$string?$20616$1a@gJ g$s$22691$1a@gJ)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$22480$1a@gJ g$s$22691$1a@gJ)
            'formkd)
          (assertion-violation
            'string-normalize
            '"not a string"
            g$s$22691$1a@gJ))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$22725$1a@gJ
     g$bignum?$22810$1a@gJ
     (case-lambda
       ((g$obj$22743$1a@gJ)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$22743$1a@gJ))))
   (g$->bignum$22726$1a@gJ
     g$->bignum$22811$1a@gJ
     (case-lambda
       ((g$ei$22744$1a@gJ)
        (if (g$bignum?$22725$1a@gJ g$ei$22744$1a@gJ)
          g$ei$22744$1a@gJ
          (if (g$fixnum?$20623$1a@gJ g$ei$22744$1a@gJ)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$22744$1a@gJ)
            (begin
              '#f
              (assertion-violation
                '#f
                '"not a exact integer"
                g$ei$22744$1a@gJ)))))))
   (g$bitwise-not$22727$1a@gJ
     g$bitwise-not$22812$1a@gJ
     (case-lambda
       ((g$ei$22745$1a@gJ)
        (g$exact$21664$1a@gJ
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$22726$1a@gJ g$ei$22745$1a@gJ))))))
   (g$bitwise-and$22728$1a@gJ
     g$bitwise-and$22813$1a@gJ
     (case-lambda
       (() '-1)
       ((g$ei$22746$1a@gJ) (g$->bignum$22726$1a@gJ g$ei$22746$1a@gJ))
       ((g$ei1$22747$1a@gJ g$ei2$22748$1a@gJ)
        (g$exact$21664$1a@gJ
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$22726$1a@gJ g$ei1$22747$1a@gJ)
            (g$->bignum$22726$1a@gJ g$ei2$22748$1a@gJ))))
       ((g$ei1$22749$1a@gJ g$ei2$22750$1a@gJ . g$rest$22751$1a@gJ)
        (g$fold-left$20201$1a@gJ
          g$bitwise-and$22728$1a@gJ
          (g$->bignum$22726$1a@gJ g$ei1$22749$1a@gJ)
          (cons g$ei2$22750$1a@gJ g$rest$22751$1a@gJ)))))
   (g$bitwise-ior$22729$1a@gJ
     g$bitwise-ior$22814$1a@gJ
     (case-lambda
       (() '0)
       ((g$ei$22752$1a@gJ) (g$->bignum$22726$1a@gJ g$ei$22752$1a@gJ))
       ((g$ei1$22753$1a@gJ g$ei2$22754$1a@gJ)
        (g$exact$21664$1a@gJ
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$22726$1a@gJ g$ei1$22753$1a@gJ)
            (g$->bignum$22726$1a@gJ g$ei2$22754$1a@gJ))))
       ((g$ei1$22755$1a@gJ g$ei2$22756$1a@gJ . g$rest$22757$1a@gJ)
        (g$fold-left$20201$1a@gJ
          g$bitwise-ior$22729$1a@gJ
          (g$->bignum$22726$1a@gJ g$ei1$22755$1a@gJ)
          (cons g$ei2$22756$1a@gJ g$rest$22757$1a@gJ)))))
   (g$bitwise-xor$22730$1a@gJ
     g$bitwise-xor$22815$1a@gJ
     (case-lambda
       (() '0)
       ((g$ei$22758$1a@gJ) (g$->bignum$22726$1a@gJ g$ei$22758$1a@gJ))
       ((g$ei1$22759$1a@gJ g$ei2$22760$1a@gJ)
        (g$exact$21664$1a@gJ
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$22726$1a@gJ g$ei1$22759$1a@gJ)
            (g$->bignum$22726$1a@gJ g$ei2$22760$1a@gJ))))
       ((g$ei1$22761$1a@gJ g$ei2$22762$1a@gJ . g$rest$22763$1a@gJ)
        (g$fold-left$20201$1a@gJ
          g$bitwise-xor$22730$1a@gJ
          (g$->bignum$22726$1a@gJ g$ei1$22761$1a@gJ)
          (cons g$ei2$22762$1a@gJ g$rest$22763$1a@gJ)))))
   (g$bitwise-bit-count$22731$1a@gJ
     g$bitwise-bit-count$22816$1a@gJ
     (case-lambda
       ((g$ei$22764$1a@gJ)
        (if (g$positive?$21661$1a@gJ g$ei$22764$1a@gJ)
          ((letrec ((g$f$22765$1a@gJ
                      (case-lambda
                        ((g$c$22766$1a@gJ g$ei$22767$1a@gJ)
                         (if (g$positive?$21661$1a@gJ g$ei$22767$1a@gJ)
                           (g$f$22765$1a@gJ
                             (+ g$c$22766$1a@gJ
                                (g$bitwise-and$22728$1a@gJ
                                  g$ei$22767$1a@gJ
                                  '1))
                             (g$bitwise-arithmetic-shift-right$22740$1a@gJ
                               g$ei$22767$1a@gJ
                               '1))
                           g$c$22766$1a@gJ)))))
             g$f$22765$1a@gJ)
           '0
           (g$->bignum$22726$1a@gJ g$ei$22764$1a@gJ))
          (g$bitwise-not$22727$1a@gJ
            (g$bitwise-bit-count$22731$1a@gJ
              (g$bitwise-not$22727$1a@gJ g$ei$22764$1a@gJ)))))))
   (g$bitwise-length$22732$1a@gJ
     g$bitwise-length$22817$1a@gJ
     (case-lambda
       ((g$ei$22768$1a@gJ)
        ((case-lambda
           ((g$ei$22769$1a@gJ)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$22769$1a@gJ
                  (g$->bignum$22726$1a@gJ '0))
              (g$bitwise-length$22732$1a@gJ
                (g$bitwise-not$22727$1a@gJ g$ei$22769$1a@gJ))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$22769$1a@gJ))))
         (g$->bignum$22726$1a@gJ g$ei$22768$1a@gJ)))))
   (g$bitwise-first-bit-set$22733$1a@gJ
     g$bitwise-first-bit-set$22818$1a@gJ
     (case-lambda
       ((g$ei$22770$1a@gJ)
        ((case-lambda
           ((g$ei$22771$1a@gJ)
            (if (g$zero?$21660$1a@gJ g$ei$22771$1a@gJ)
              '-1
              ((letrec ((g$f$22772$1a@gJ
                          (case-lambda
                            ((g$c$22773$1a@gJ g$ei$22774$1a@gJ)
                             (if (g$=$21669$1a@gJ
                                   '1
                                   (g$bitwise-and$22728$1a@gJ
                                     g$ei$22774$1a@gJ
                                     '1))
                               g$c$22773$1a@gJ
                               (g$f$22772$1a@gJ
                                 (+ g$c$22773$1a@gJ '1)
                                 (g$bitwise-arithmetic-shift-right$22740$1a@gJ
                                   g$ei$22774$1a@gJ
                                   '1)))))))
                 g$f$22772$1a@gJ)
               '0
               g$ei$22771$1a@gJ))))
         (g$->bignum$22726$1a@gJ g$ei$22770$1a@gJ)))))
   (g$bitwise-bit-set?$22734$1a@gJ
     g$bitwise-bit-set?$22819$1a@gJ
     (case-lambda
       ((g$ei$22775$1a@gJ g$k$22776$1a@gJ)
        ((case-lambda
           ((g$ei$22777$1a@gJ g$k$22778$1a@gJ)
            (begin
              (if (g$negative?$21662$1a@gJ g$k$22778$1a@gJ)
                (assertion-violation
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$22778$1a@gJ)
                (void))
              (if (g$=$21669$1a@gJ '-1 g$ei$22777$1a@gJ)
                '#t
                (begin
                  '#f
                  (g$=$21669$1a@gJ
                    '1
                    (g$bitwise-and$22728$1a@gJ
                      '1
                      (g$bitwise-arithmetic-shift-right$22740$1a@gJ
                        g$ei$22777$1a@gJ
                        g$k$22778$1a@gJ))))))))
         (g$->bignum$22726$1a@gJ g$ei$22775$1a@gJ)
         (g$->bignum$22726$1a@gJ g$k$22776$1a@gJ)))))
   (g$bitwise-if$22735$1a@gJ
     g$bitwise-if$22820$1a@gJ
     (case-lambda
       ((g$ei1$22779$1a@gJ g$ei2$22780$1a@gJ g$ei3$22781$1a@gJ)
        (g$bitwise-ior$22729$1a@gJ
          (g$bitwise-and$22728$1a@gJ
            g$ei1$22779$1a@gJ
            g$ei2$22780$1a@gJ)
          (g$bitwise-and$22728$1a@gJ
            (g$bitwise-not$22727$1a@gJ g$ei1$22779$1a@gJ)
            g$ei3$22781$1a@gJ)))))
   (g$bitwise-copy-bit$22736$1a@gJ
     g$bitwise-copy-bit$22821$1a@gJ
     (case-lambda
       ((g$ei1$22782$1a@gJ g$ei2$22783$1a@gJ g$ei3$22784$1a@gJ)
        (g$bitwise-if$22735$1a@gJ
          (g$bitwise-arithmetic-shift-left$22739$1a@gJ
            '1
            g$ei2$22783$1a@gJ)
          (g$bitwise-arithmetic-shift-left$22739$1a@gJ
            g$ei3$22784$1a@gJ
            g$ei2$22783$1a@gJ)
          g$ei1$22782$1a@gJ))))
   (g$bitwise-bit-field$22737$1a@gJ
     g$bitwise-bit-field$22822$1a@gJ
     (case-lambda
       ((g$ei1$22785$1a@gJ g$ei2$22786$1a@gJ g$ei3$22787$1a@gJ)
        (g$bitwise-arithmetic-shift-right$22740$1a@gJ
          (g$bitwise-and$22728$1a@gJ
            g$ei1$22785$1a@gJ
            (g$bitwise-not$22727$1a@gJ
              (g$bitwise-arithmetic-shift-left$22739$1a@gJ
                '-1
                g$ei3$22787$1a@gJ)))
          g$ei2$22786$1a@gJ))))
   (g$bitwise-copy-bit-field$22738$1a@gJ
     g$bitwise-copy-bit-field$22823$1a@gJ
     (case-lambda
       ((g$to$22788$1a@gJ
          g$start$22789$1a@gJ
          g$end$22790$1a@gJ
          g$from$22791$1a@gJ)
        (g$bitwise-if$22735$1a@gJ
          (g$bitwise-and$22728$1a@gJ
            (g$bitwise-arithmetic-shift-left$22739$1a@gJ
              '-1
              g$start$22789$1a@gJ)
            (g$bitwise-not$22727$1a@gJ
              (g$bitwise-arithmetic-shift-left$22739$1a@gJ
                '-1
                g$end$22790$1a@gJ)))
          (g$bitwise-arithmetic-shift-left$22739$1a@gJ
            g$from$22791$1a@gJ
            g$start$22789$1a@gJ)
          g$to$22788$1a@gJ))))
   (g$bitwise-arithmetic-shift-left$22739$1a@gJ
     g$bitwise-arithmetic-shift-left$22824$1a@gJ
     (case-lambda
       ((g$ei1$22792$1a@gJ g$ei2$22793$1a@gJ)
        (bitwise-arithmetic-shift
          g$ei1$22792$1a@gJ
          g$ei2$22793$1a@gJ))))
   (g$bitwise-arithmetic-shift-right$22740$1a@gJ
     g$bitwise-arithmetic-shift-right$22825$1a@gJ
     (case-lambda
       ((g$ei1$22794$1a@gJ g$ei2$22795$1a@gJ)
        (bitwise-arithmetic-shift
          g$ei1$22794$1a@gJ
          (- g$ei2$22795$1a@gJ)))))
   (g$bitwise-rotate-bit-field$22741$1a@gJ
     g$bitwise-rotate-bit-field$22826$1a@gJ
     (case-lambda
       ((g$n$22796$1a@gJ
          g$start$22797$1a@gJ
          g$end$22798$1a@gJ
          g$count$22799$1a@gJ)
        ((case-lambda
           ((g$width$22800$1a@gJ)
            (if (g$positive?$21661$1a@gJ g$width$22800$1a@gJ)
              ((case-lambda
                 ((g$count$22801$1a@gJ g$field$22802$1a@gJ)
                  (g$bitwise-copy-bit-field$22738$1a@gJ
                    g$n$22796$1a@gJ
                    g$start$22797$1a@gJ
                    g$end$22798$1a@gJ
                    (g$bitwise-ior$22729$1a@gJ
                      (g$bitwise-arithmetic-shift-left$22739$1a@gJ
                        g$field$22802$1a@gJ
                        g$count$22801$1a@gJ)
                      (g$bitwise-arithmetic-shift-right$22740$1a@gJ
                        g$field$22802$1a@gJ
                        (- g$width$22800$1a@gJ g$count$22801$1a@gJ))))))
               (g$mod$20643$1a@gJ
                 g$count$22799$1a@gJ
                 g$width$22800$1a@gJ)
               (g$bitwise-bit-field$22737$1a@gJ
                 g$n$22796$1a@gJ
                 g$start$22797$1a@gJ
                 g$end$22798$1a@gJ))
              g$n$22796$1a@gJ)))
         (- g$end$22798$1a@gJ g$start$22797$1a@gJ)))))
   (g$bitwise-reverse-bit-field$22742$1a@gJ
     g$bitwise-reverse-bit-field$22827$1a@gJ
     (case-lambda
       ((g$x1$22803$1a@gJ g$start$22804$1a@gJ g$end$22805$1a@gJ)
        (begin
          (if (not (g$<$21670$1a@gJ
                     g$start$22804$1a@gJ
                     g$end$22805$1a@gJ))
            (assertion-violation
              'bitwise-reverse-bit-field
              '"start must be less than end"
              g$start$22804$1a@gJ
              g$end$22805$1a@gJ)
            (void))
          (letrec ((g$loop$22806$1a@gJ
                     (case-lambda
                       ((g$width$22807$1a@gJ
                          g$bits$22808$1a@gJ
                          g$rbits$22809$1a@gJ)
                        (if (g$=$21669$1a@gJ g$width$22807$1a@gJ '0)
                          (begin
                            (if '#f '#f (void))
                            (g$bitwise-copy-bit-field$22738$1a@gJ
                              g$x1$22803$1a@gJ
                              g$start$22804$1a@gJ
                              g$end$22805$1a@gJ
                              g$rbits$22809$1a@gJ))
                          (g$loop$22806$1a@gJ
                            (- g$width$22807$1a@gJ '1)
                            (g$bitwise-arithmetic-shift-right$22740$1a@gJ
                              g$bits$22808$1a@gJ
                              '1)
                            (g$bitwise-ior$22729$1a@gJ
                              (g$bitwise-arithmetic-shift-left$22739$1a@gJ
                                g$rbits$22809$1a@gJ
                                '1)
                              (g$bitwise-and$22728$1a@gJ
                                g$bits$22808$1a@gJ
                                '1))))))))
            (g$loop$22806$1a@gJ
              (- g$end$22805$1a@gJ g$start$22804$1a@gJ)
              (g$bitwise-bit-field$22737$1a@gJ
                g$x1$22803$1a@gJ
                g$start$22804$1a@gJ
                g$end$22805$1a@gJ)
              '0)))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$22828$1a@gJ
     g$greatest-fixnum$25057$1a@gJ
     (case-lambda (() '2147483647)))
   (g$least-fixnum$22829$1a@gJ
     g$least-fixnum$25058$1a@gJ
     (case-lambda (() '-2147483648)))
   (g$fx+$22935$1a@gJ
     g$fx+$25059$1a@gJ
     (case-lambda
       ((g$x1$23330$1a@gJ g$x2$23331$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23330$1a@gJ))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$23330$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23331$1a@gJ))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$23331$1a@gJ)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$23330$1a@gJ g$x2$23331$1a@gJ)
                (g$overflow-error$22938$1a@gJ '#f)))))))))
   (g$fx*$22936$1a@gJ
     g$fx*$25060$1a@gJ
     (case-lambda
       ((g$x1$23332$1a@gJ g$x2$23333$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23332$1a@gJ))
            (assertion-violation 'fx* '"not a fixnum" g$x1$23332$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23333$1a@gJ))
            (assertion-violation 'fx* '"not a fixnum" g$x2$23333$1a@gJ)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$23332$1a@gJ g$x2$23333$1a@gJ)
                (g$overflow-error$22938$1a@gJ '#f)))))))))
   (g$fx-$22937$1a@gJ
     g$fx-$25061$1a@gJ
     (case-lambda
       ((g$x1$23334$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23334$1a@gJ))
            (assertion-violation 'fx- '"not a fixnum" g$x1$23334$1a@gJ)
            (void))
          (if ($fx=? (g$least-fixnum$22829$1a@gJ) g$x1$23334$1a@gJ)
            (g$overflow-error$22938$1a@gJ 'fx- g$x1$23334$1a@gJ)
            (void))
          ($$fx- g$x1$23334$1a@gJ)))
       ((g$x1$23335$1a@gJ g$x2$23336$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23335$1a@gJ))
            (assertion-violation 'fx- '"not a fixnum" g$x1$23335$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23336$1a@gJ))
            (assertion-violation 'fx- '"not a fixnum" g$x2$23336$1a@gJ)
            (void))
          ($try
            ($fx- g$x1$23335$1a@gJ g$x2$23336$1a@gJ)
            (g$overflow-error$22938$1a@gJ '#f))))))
   (g$overflow-error$22938$1a@gJ
     g$overflow-error$25062$1a@gJ
     (case-lambda
       ((g$name$23337$1a@gJ . g$irritants$23338$1a@gJ)
        (raise
          (condition
            (g$make-implementation-restriction-violation$22240$1a@gJ)
            (g$make-who-condition$22202$1a@gJ g$name$23337$1a@gJ)
            (g$make-message-condition$22142$1a@gJ
              '"arithmetic overflow")
            (g$make-irritants-condition$22192$1a@gJ
              g$irritants$23338$1a@gJ))))))
   (g$residual-fxarithmetic-shift*$22954$1a@gJ
     g$residual-fxarithmetic-shift*$25063$1a@gJ
     (case-lambda
       ((g$x$23359$1a@gJ g$k$23360$1a@gJ)
        (if ($fx=? g$k$23360$1a@gJ '0)
          g$x$23359$1a@gJ
          (if ($fx<? g$k$23360$1a@gJ '0)
            ($fxarithmetic-shift-right
              g$x$23359$1a@gJ
              ($$fx- g$k$23360$1a@gJ))
            (begin
              '#f
              ((case-lambda
                 ((g$i$23361$1a@gJ)
                  (begin
                    (if ($fx>?
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$x$23359$1a@gJ)
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$i$23361$1a@gJ))
                      (g$overflow-error$22938$1a@gJ
                        'fxarithmetic-shift
                        g$x$23359$1a@gJ
                        g$k$23360$1a@gJ)
                      (void))
                    g$i$23361$1a@gJ)))
               ($fxarithmetic-shift-left
                 g$x$23359$1a@gJ
                 g$k$23360$1a@gJ))))))))
   (g$fxarithmetic-shift$22955$1a@gJ
     g$fxarithmetic-shift$25064$1a@gJ
     (case-lambda
       ((g$x$23362$1a@gJ g$k$23363$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x$23362$1a@gJ))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$23362$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$k$23363$1a@gJ))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$23363$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23384$1a@gJ g$k$23385$1a@gJ)
                  (if ($fx=? g$k$23385$1a@gJ '0)
                    g$x$23384$1a@gJ
                    (if ($fx<? g$k$23385$1a@gJ '0)
                      ($fxarithmetic-shift-right
                        g$x$23384$1a@gJ
                        ($$fx- g$k$23385$1a@gJ))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$23386$1a@gJ)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$23384$1a@gJ)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$23386$1a@gJ))
                                (g$overflow-error$22938$1a@gJ
                                  'fxarithmetic-shift
                                  g$x$23384$1a@gJ
                                  g$k$23385$1a@gJ)
                                (void))
                              g$i$23386$1a@gJ)))
                         ($fxarithmetic-shift-left
                           g$x$23384$1a@gJ
                           g$k$23385$1a@gJ)))))))
               g$x$23362$1a@gJ
               g$k$23363$1a@gJ))))))))
   (g$residual-fxbit-count*$22971$1a@gJ
     g$residual-fxbit-count*$25065$1a@gJ
     (case-lambda
       ((g$x$23407$1a@gJ)
        (if ($fx<=? g$x$23407$1a@gJ '0)
          ($fxnot
            (g$residual-fxbit-count*$22971$1a@gJ
              ($fxnot g$x$23407$1a@gJ)))
          ((letrec ((g$f$23408$1a@gJ
                      (case-lambda
                        ((g$count$23409$1a@gJ g$x$23410$1a@gJ)
                         (if ($fx<? '0 g$x$23410$1a@gJ)
                           (g$f$23408$1a@gJ
                             ($$fx+
                               g$count$23409$1a@gJ
                               ($fxand g$x$23410$1a@gJ '1))
                             ($fxarithmetic-shift-right
                               g$x$23410$1a@gJ
                               '1))
                           g$count$23409$1a@gJ)))))
             g$f$23408$1a@gJ)
           '0
           g$x$23407$1a@gJ)))))
   (g$fxbit-count$22972$1a@gJ
     g$fxbit-count$25066$1a@gJ
     (case-lambda
       ((g$x$23411$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x$23411$1a@gJ))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$23411$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23432$1a@gJ)
                  (if ($fx<=? g$x$23432$1a@gJ '0)
                    ($fxnot
                      (g$residual-fxbit-count*$22971$1a@gJ
                        ($fxnot g$x$23432$1a@gJ)))
                    ((letrec ((g$f$23433$1a@gJ
                                (case-lambda
                                  ((g$count$23434$1a@gJ g$x$23435$1a@gJ)
                                   (if ($fx<? '0 g$x$23435$1a@gJ)
                                     (g$f$23433$1a@gJ
                                       ($$fx+
                                         g$count$23434$1a@gJ
                                         ($fxand g$x$23435$1a@gJ '1))
                                       ($fxarithmetic-shift-right
                                         g$x$23435$1a@gJ
                                         '1))
                                     g$count$23434$1a@gJ)))))
                       g$f$23433$1a@gJ)
                     '0
                     g$x$23432$1a@gJ))))
               g$x$23411$1a@gJ))))))))
   (g$residual-fxlength*$22988$1a@gJ
     g$residual-fxlength*$25067$1a@gJ
     (case-lambda
       ((g$x$23456$1a@gJ)
        (if ($fx<? g$x$23456$1a@gJ '0)
          (g$residual-fxlength*$22988$1a@gJ ($fxnot g$x$23456$1a@gJ))
          ((letrec ((g$f$23457$1a@gJ
                      (case-lambda
                        ((g$count$23458$1a@gJ g$x$23459$1a@gJ)
                         (if ($fx<? '0 g$x$23459$1a@gJ)
                           (g$f$23457$1a@gJ
                             ($$fx+ g$count$23458$1a@gJ '1)
                             ($fxarithmetic-shift-right
                               g$x$23459$1a@gJ
                               '1))
                           g$count$23458$1a@gJ)))))
             g$f$23457$1a@gJ)
           '0
           g$x$23456$1a@gJ)))))
   (g$fxlength$22989$1a@gJ
     g$fxlength$25068$1a@gJ
     (case-lambda
       ((g$x$23460$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x$23460$1a@gJ))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$23460$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23481$1a@gJ)
                  (if ($fx<? g$x$23481$1a@gJ '0)
                    (g$residual-fxlength*$22988$1a@gJ
                      ($fxnot g$x$23481$1a@gJ))
                    ((letrec ((g$f$23482$1a@gJ
                                (case-lambda
                                  ((g$count$23483$1a@gJ g$x$23484$1a@gJ)
                                   (if ($fx<? '0 g$x$23484$1a@gJ)
                                     (g$f$23482$1a@gJ
                                       ($$fx+ g$count$23483$1a@gJ '1)
                                       ($fxarithmetic-shift-right
                                         g$x$23484$1a@gJ
                                         '1))
                                     g$count$23483$1a@gJ)))))
                       g$f$23482$1a@gJ)
                     '0
                     g$x$23481$1a@gJ))))
               g$x$23460$1a@gJ))))))))
   (g$fxfirst-bit-set$22990$1a@gJ
     g$fxfirst-bit-set$25069$1a@gJ
     (case-lambda
       ((g$x$23485$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x$23485$1a@gJ))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$23485$1a@gJ)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$23485$1a@gJ '0)
                '-1
                ((letrec ((g$f$23486$1a@gJ
                            (case-lambda
                              ((g$count$23487$1a@gJ g$x$23488$1a@gJ)
                               (if (not ($fx=? '0 g$x$23488$1a@gJ))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$23488$1a@gJ))
                                   g$count$23487$1a@gJ
                                   (g$f$23486$1a@gJ
                                     ($$fx+ g$count$23487$1a@gJ '1)
                                     ($fxarithmetic-shift-right
                                       g$x$23488$1a@gJ
                                       '1)))
                                 g$count$23487$1a@gJ)))))
                   g$f$23486$1a@gJ)
                 '0
                 g$x$23485$1a@gJ)))))))))
   (g$fxbit-set?$22991$1a@gJ
     g$fxbit-set?$25070$1a@gJ
     (case-lambda
       ((g$x$23489$1a@gJ g$k$23490$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x$23489$1a@gJ))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$23489$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$k$23490$1a@gJ))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$23490$1a@gJ)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$23490$1a@gJ '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$23490$1a@gJ)
                  (void))
                (if ($fx>=? g$k$23490$1a@gJ '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$23490$1a@gJ)
                  (void))
                (if ($fx=? '0 g$x$23489$1a@gJ)
                  '#f
                  ($fx=?
                    '1
                    ($fxand
                      '1
                      ($fxarithmetic-shift-right
                        g$x$23489$1a@gJ
                        g$k$23490$1a@gJ))))))))))))
   (g$fxnot$22992$1a@gJ
     g$fxnot$25071$1a@gJ
     (case-lambda
       ((g$x1$23491$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23491$1a@gJ))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$23491$1a@gJ)
            (void))
          ((case-lambda (() ($fxnot g$x1$23491$1a@gJ))))))))
   (g$fx=?$23043$1a@gJ
     g$fx=?$25072$1a@gJ
     (case-lambda
       ((g$x1$23492$1a@gJ g$x2$23493$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23492$1a@gJ))
            (assertion-violation 'fx=? '"not a fixnum" g$x1$23492$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23493$1a@gJ))
            (assertion-violation 'fx=? '"not a fixnum" g$x2$23493$1a@gJ)
            (void))
          ($fx=? g$x1$23492$1a@gJ g$x2$23493$1a@gJ)))
       ((g$x1$23494$1a@gJ g$x2$23495$1a@gJ . g$rest$23496$1a@gJ)
        ((letrec ((g$f$23497$1a@gJ
                    (case-lambda
                      ((g$a$23498$1a@gJ g$b$23499$1a@gJ)
                       (if (null? g$b$23499$1a@gJ)
                         '#t
                         (if (g$fx=?$23043$1a@gJ
                               g$a$23498$1a@gJ
                               ($car g$b$23499$1a@gJ))
                           (g$f$23497$1a@gJ
                             ($car g$b$23499$1a@gJ)
                             ($cdr g$b$23499$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$23497$1a@gJ)
         g$x1$23494$1a@gJ
         (cons g$x2$23495$1a@gJ g$rest$23496$1a@gJ)))))
   (g$fx<?$23044$1a@gJ
     g$fx<?$25073$1a@gJ
     (case-lambda
       ((g$x1$23500$1a@gJ g$x2$23501$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23500$1a@gJ))
            (assertion-violation 'fx<? '"not a fixnum" g$x1$23500$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23501$1a@gJ))
            (assertion-violation 'fx<? '"not a fixnum" g$x2$23501$1a@gJ)
            (void))
          ($fx<? g$x1$23500$1a@gJ g$x2$23501$1a@gJ)))
       ((g$x1$23502$1a@gJ g$x2$23503$1a@gJ . g$rest$23504$1a@gJ)
        ((letrec ((g$f$23505$1a@gJ
                    (case-lambda
                      ((g$a$23506$1a@gJ g$b$23507$1a@gJ)
                       (if (null? g$b$23507$1a@gJ)
                         '#t
                         (if (g$fx<?$23044$1a@gJ
                               g$a$23506$1a@gJ
                               ($car g$b$23507$1a@gJ))
                           (g$f$23505$1a@gJ
                             ($car g$b$23507$1a@gJ)
                             ($cdr g$b$23507$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$23505$1a@gJ)
         g$x1$23502$1a@gJ
         (cons g$x2$23503$1a@gJ g$rest$23504$1a@gJ)))))
   (g$fx<=?$23045$1a@gJ
     g$fx<=?$25074$1a@gJ
     (case-lambda
       ((g$x1$23508$1a@gJ g$x2$23509$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23508$1a@gJ))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$23508$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23509$1a@gJ))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$23509$1a@gJ)
            (void))
          ($fx<=? g$x1$23508$1a@gJ g$x2$23509$1a@gJ)))
       ((g$x1$23510$1a@gJ g$x2$23511$1a@gJ . g$rest$23512$1a@gJ)
        ((letrec ((g$f$23513$1a@gJ
                    (case-lambda
                      ((g$a$23514$1a@gJ g$b$23515$1a@gJ)
                       (if (null? g$b$23515$1a@gJ)
                         '#t
                         (if (g$fx<=?$23045$1a@gJ
                               g$a$23514$1a@gJ
                               ($car g$b$23515$1a@gJ))
                           (g$f$23513$1a@gJ
                             ($car g$b$23515$1a@gJ)
                             ($cdr g$b$23515$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$23513$1a@gJ)
         g$x1$23510$1a@gJ
         (cons g$x2$23511$1a@gJ g$rest$23512$1a@gJ)))))
   (g$fx>?$23046$1a@gJ
     g$fx>?$25075$1a@gJ
     (case-lambda
       ((g$x1$23516$1a@gJ g$x2$23517$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23516$1a@gJ))
            (assertion-violation 'fx>? '"not a fixnum" g$x1$23516$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23517$1a@gJ))
            (assertion-violation 'fx>? '"not a fixnum" g$x2$23517$1a@gJ)
            (void))
          ($fx>? g$x1$23516$1a@gJ g$x2$23517$1a@gJ)))
       ((g$x1$23518$1a@gJ g$x2$23519$1a@gJ . g$rest$23520$1a@gJ)
        ((letrec ((g$f$23521$1a@gJ
                    (case-lambda
                      ((g$a$23522$1a@gJ g$b$23523$1a@gJ)
                       (if (null? g$b$23523$1a@gJ)
                         '#t
                         (if (g$fx>?$23046$1a@gJ
                               g$a$23522$1a@gJ
                               ($car g$b$23523$1a@gJ))
                           (g$f$23521$1a@gJ
                             ($car g$b$23523$1a@gJ)
                             ($cdr g$b$23523$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$23521$1a@gJ)
         g$x1$23518$1a@gJ
         (cons g$x2$23519$1a@gJ g$rest$23520$1a@gJ)))))
   (g$fx>=?$23047$1a@gJ
     g$fx>=?$25076$1a@gJ
     (case-lambda
       ((g$x1$23524$1a@gJ g$x2$23525$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23524$1a@gJ))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$23524$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23525$1a@gJ))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$23525$1a@gJ)
            (void))
          ($fx>=? g$x1$23524$1a@gJ g$x2$23525$1a@gJ)))
       ((g$x1$23526$1a@gJ g$x2$23527$1a@gJ . g$rest$23528$1a@gJ)
        ((letrec ((g$f$23529$1a@gJ
                    (case-lambda
                      ((g$a$23530$1a@gJ g$b$23531$1a@gJ)
                       (if (null? g$b$23531$1a@gJ)
                         '#t
                         (if (g$fx>=?$23047$1a@gJ
                               g$a$23530$1a@gJ
                               ($car g$b$23531$1a@gJ))
                           (g$f$23529$1a@gJ
                             ($car g$b$23531$1a@gJ)
                             ($cdr g$b$23531$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$23529$1a@gJ)
         g$x1$23526$1a@gJ
         (cons g$x2$23527$1a@gJ g$rest$23528$1a@gJ)))))
   (g$fxand$23095$1a@gJ
     g$fxand$25077$1a@gJ
     (case-lambda
       (() '-1)
       ((g$x1$23532$1a@gJ g$x2$23533$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23532$1a@gJ))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$23532$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23533$1a@gJ))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$23533$1a@gJ)
            (void))
          ($fxand g$x1$23532$1a@gJ g$x2$23533$1a@gJ)))
       (g$args$23534$1a@gJ
        (g$fold-left$20201$1a@gJ
          g$fxand$23095$1a@gJ
          (g$fxand$23095$1a@gJ)
          g$args$23534$1a@gJ))))
   (g$fxior$23096$1a@gJ
     g$fxior$25078$1a@gJ
     (case-lambda
       (() '0)
       ((g$x1$23535$1a@gJ g$x2$23536$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23535$1a@gJ))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$23535$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23536$1a@gJ))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$23536$1a@gJ)
            (void))
          ($fxior g$x1$23535$1a@gJ g$x2$23536$1a@gJ)))
       (g$args$23537$1a@gJ
        (g$fold-left$20201$1a@gJ
          g$fxior$23096$1a@gJ
          (g$fxior$23096$1a@gJ)
          g$args$23537$1a@gJ))))
   (g$fxxor$23097$1a@gJ
     g$fxxor$25079$1a@gJ
     (case-lambda
       (() '0)
       ((g$x1$23538$1a@gJ g$x2$23539$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23538$1a@gJ))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$23538$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23539$1a@gJ))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$23539$1a@gJ)
            (void))
          ($fxxor g$x1$23538$1a@gJ g$x2$23539$1a@gJ)))
       (g$args$23540$1a@gJ
        (g$fold-left$20201$1a@gJ
          g$fxxor$23097$1a@gJ
          (g$fxxor$23097$1a@gJ)
          g$args$23540$1a@gJ))))
   (g$residual-fxdiv*$23113$1a@gJ
     g$residual-fxdiv*$25080$1a@gJ
     (case-lambda
       ((g$x1$23561$1a@gJ g$x2$23562$1a@gJ)
        (begin
          (if ($fx=? '0 g$x2$23562$1a@gJ)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$23561$1a@gJ
              g$x2$23562$1a@gJ)
            (void))
          (if (if ($fx=? '-1 g$x2$23562$1a@gJ)
                (begin
                  '#f
                  ($fx=? (g$least-fixnum$22829$1a@gJ) g$x1$23561$1a@gJ))
                '#f)
            (g$overflow-error$22938$1a@gJ
              'fxdiv
              g$x1$23561$1a@gJ
              g$x2$23562$1a@gJ)
            (void))
          (if ($fx=? '0 g$x1$23561$1a@gJ)
            '0
            (if ($fx<? '0 g$x1$23561$1a@gJ)
              ((case-lambda
                 ((g$x1$23583$1a@gJ g$x2$23584$1a@gJ)
                  ($fxdiv0 g$x1$23583$1a@gJ g$x2$23584$1a@gJ)))
               g$x1$23561$1a@gJ
               g$x2$23562$1a@gJ)
              (if ($fx<? '0 g$x2$23562$1a@gJ)
                ((case-lambda
                   ((g$x1$23605$1a@gJ g$x2$23606$1a@gJ)
                    ($fxdiv0 g$x1$23605$1a@gJ g$x2$23606$1a@gJ)))
                 ($$fx- g$x1$23561$1a@gJ ($$fx- g$x2$23562$1a@gJ '1))
                 g$x2$23562$1a@gJ)
                (begin
                  '#f
                  ((case-lambda
                     ((g$x1$23627$1a@gJ g$x2$23628$1a@gJ)
                      ($fxdiv0 g$x1$23627$1a@gJ g$x2$23628$1a@gJ)))
                   ($$fx+ g$x1$23561$1a@gJ ($$fx+ g$x2$23562$1a@gJ '1))
                   g$x2$23562$1a@gJ)))))))))
   (g$fxdiv$23114$1a@gJ
     g$fxdiv$25081$1a@gJ
     (case-lambda
       ((g$x1$23629$1a@gJ g$x2$23630$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23629$1a@gJ))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$23629$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23630$1a@gJ))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$23630$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$23651$1a@gJ g$x2$23652$1a@gJ)
                  (begin
                    (if ($fx=? '0 g$x2$23652$1a@gJ)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$23651$1a@gJ
                        g$x2$23652$1a@gJ)
                      (void))
                    (if (if ($fx=? '-1 g$x2$23652$1a@gJ)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$22829$1a@gJ)
                              g$x1$23651$1a@gJ))
                          '#f)
                      (g$overflow-error$22938$1a@gJ
                        'fxdiv
                        g$x1$23651$1a@gJ
                        g$x2$23652$1a@gJ)
                      (void))
                    (if ($fx=? '0 g$x1$23651$1a@gJ)
                      '0
                      (if ($fx<? '0 g$x1$23651$1a@gJ)
                        ((case-lambda
                           ((g$x1$23673$1a@gJ g$x2$23674$1a@gJ)
                            ($fxdiv0
                              g$x1$23673$1a@gJ
                              g$x2$23674$1a@gJ)))
                         g$x1$23651$1a@gJ
                         g$x2$23652$1a@gJ)
                        (if ($fx<? '0 g$x2$23652$1a@gJ)
                          ((case-lambda
                             ((g$x1$23695$1a@gJ g$x2$23696$1a@gJ)
                              ($fxdiv0
                                g$x1$23695$1a@gJ
                                g$x2$23696$1a@gJ)))
                           ($$fx-
                             g$x1$23651$1a@gJ
                             ($$fx- g$x2$23652$1a@gJ '1))
                           g$x2$23652$1a@gJ)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$x1$23717$1a@gJ g$x2$23718$1a@gJ)
                                ($fxdiv0
                                  g$x1$23717$1a@gJ
                                  g$x2$23718$1a@gJ)))
                             ($$fx+
                               g$x1$23651$1a@gJ
                               ($$fx+ g$x2$23652$1a@gJ '1))
                             g$x2$23652$1a@gJ))))))))
               g$x1$23629$1a@gJ
               g$x2$23630$1a@gJ))))))))
   (g$residual-fxmod*$23130$1a@gJ
     g$residual-fxmod*$25082$1a@gJ
     (case-lambda
       ((g$x1$23739$1a@gJ g$x2$23740$1a@gJ)
        ($$fx-
          g$x1$23739$1a@gJ
          ($$fx*
            ((case-lambda
               ((g$x1$23761$1a@gJ g$x2$23762$1a@gJ)
                (begin
                  (if ($fx=? '0 g$x2$23762$1a@gJ)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$23761$1a@gJ
                      g$x2$23762$1a@gJ)
                    (void))
                  (if (if ($fx=? '-1 g$x2$23762$1a@gJ)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$22829$1a@gJ)
                            g$x1$23761$1a@gJ))
                        '#f)
                    (g$overflow-error$22938$1a@gJ
                      'fxdiv
                      g$x1$23761$1a@gJ
                      g$x2$23762$1a@gJ)
                    (void))
                  (if ($fx=? '0 g$x1$23761$1a@gJ)
                    '0
                    (if ($fx<? '0 g$x1$23761$1a@gJ)
                      ((case-lambda
                         ((g$x1$23783$1a@gJ g$x2$23784$1a@gJ)
                          ($fxdiv0 g$x1$23783$1a@gJ g$x2$23784$1a@gJ)))
                       g$x1$23761$1a@gJ
                       g$x2$23762$1a@gJ)
                      (if ($fx<? '0 g$x2$23762$1a@gJ)
                        ((case-lambda
                           ((g$x1$23805$1a@gJ g$x2$23806$1a@gJ)
                            ($fxdiv0
                              g$x1$23805$1a@gJ
                              g$x2$23806$1a@gJ)))
                         ($$fx-
                           g$x1$23761$1a@gJ
                           ($$fx- g$x2$23762$1a@gJ '1))
                         g$x2$23762$1a@gJ)
                        (begin
                          '#f
                          ((case-lambda
                             ((g$x1$23827$1a@gJ g$x2$23828$1a@gJ)
                              ($fxdiv0
                                g$x1$23827$1a@gJ
                                g$x2$23828$1a@gJ)))
                           ($$fx+
                             g$x1$23761$1a@gJ
                             ($$fx+ g$x2$23762$1a@gJ '1))
                           g$x2$23762$1a@gJ))))))))
             g$x1$23739$1a@gJ
             g$x2$23740$1a@gJ)
            g$x2$23740$1a@gJ)))))
   (g$fxmod$23131$1a@gJ
     g$fxmod$25083$1a@gJ
     (case-lambda
       ((g$x1$23829$1a@gJ g$x2$23830$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23829$1a@gJ))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$23829$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23830$1a@gJ))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$23830$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$23851$1a@gJ g$x2$23852$1a@gJ)
                  ($$fx-
                    g$x1$23851$1a@gJ
                    ($$fx*
                      ((case-lambda
                         ((g$x1$23873$1a@gJ g$x2$23874$1a@gJ)
                          (begin
                            (if ($fx=? '0 g$x2$23874$1a@gJ)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$23873$1a@gJ
                                g$x2$23874$1a@gJ)
                              (void))
                            (if (if ($fx=? '-1 g$x2$23874$1a@gJ)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$22829$1a@gJ)
                                      g$x1$23873$1a@gJ))
                                  '#f)
                              (g$overflow-error$22938$1a@gJ
                                'fxdiv
                                g$x1$23873$1a@gJ
                                g$x2$23874$1a@gJ)
                              (void))
                            (if ($fx=? '0 g$x1$23873$1a@gJ)
                              '0
                              (if ($fx<? '0 g$x1$23873$1a@gJ)
                                ((case-lambda
                                   ((g$x1$23895$1a@gJ g$x2$23896$1a@gJ)
                                    ($fxdiv0
                                      g$x1$23895$1a@gJ
                                      g$x2$23896$1a@gJ)))
                                 g$x1$23873$1a@gJ
                                 g$x2$23874$1a@gJ)
                                (if ($fx<? '0 g$x2$23874$1a@gJ)
                                  ((case-lambda
                                     ((g$x1$23917$1a@gJ
                                        g$x2$23918$1a@gJ)
                                      ($fxdiv0
                                        g$x1$23917$1a@gJ
                                        g$x2$23918$1a@gJ)))
                                   ($$fx-
                                     g$x1$23873$1a@gJ
                                     ($$fx- g$x2$23874$1a@gJ '1))
                                   g$x2$23874$1a@gJ)
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$x1$23939$1a@gJ
                                          g$x2$23940$1a@gJ)
                                        ($fxdiv0
                                          g$x1$23939$1a@gJ
                                          g$x2$23940$1a@gJ)))
                                     ($$fx+
                                       g$x1$23873$1a@gJ
                                       ($$fx+ g$x2$23874$1a@gJ '1))
                                     g$x2$23874$1a@gJ))))))))
                       g$x1$23851$1a@gJ
                       g$x2$23852$1a@gJ)
                      g$x2$23852$1a@gJ))))
               g$x1$23829$1a@gJ
               g$x2$23830$1a@gJ))))))))
   (g$fxmod0$23132$1a@gJ
     g$fxmod0$25084$1a@gJ
     (case-lambda
       ((g$x1$23941$1a@gJ g$x2$23942$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23941$1a@gJ))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$23941$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23942$1a@gJ))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$23942$1a@gJ)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$23942$1a@gJ)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$23941$1a@gJ
                    g$x2$23942$1a@gJ)
                  (void))
                (if (if ($fx=? '-1 g$x2$23942$1a@gJ)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$22829$1a@gJ)
                          g$x1$23941$1a@gJ))
                      '#f)
                  (g$overflow-error$22938$1a@gJ
                    'fxmod0
                    g$x1$23941$1a@gJ
                    g$x2$23942$1a@gJ)
                  (void))
                ($fxmod0 g$x1$23941$1a@gJ g$x2$23942$1a@gJ)))))))))
   (g$fxdiv-and-mod$23133$1a@gJ
     g$fxdiv-and-mod$25085$1a@gJ
     (case-lambda
       ((g$x1$23943$1a@gJ g$x2$23944$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$23943$1a@gJ))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$23943$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$23944$1a@gJ))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$23944$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$23945$1a@gJ)
                  (values
                    g$d$23945$1a@gJ
                    ($$fx-
                      g$x1$23943$1a@gJ
                      ($$fx* g$d$23945$1a@gJ g$x2$23944$1a@gJ)))))
               ((case-lambda
                  ((g$x1$23966$1a@gJ g$x2$23967$1a@gJ)
                   (begin
                     (if ($fx=? '0 g$x2$23967$1a@gJ)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$23966$1a@gJ
                         g$x2$23967$1a@gJ)
                       (void))
                     (if (if ($fx=? '-1 g$x2$23967$1a@gJ)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$22829$1a@gJ)
                               g$x1$23966$1a@gJ))
                           '#f)
                       (g$overflow-error$22938$1a@gJ
                         'fxdiv
                         g$x1$23966$1a@gJ
                         g$x2$23967$1a@gJ)
                       (void))
                     (if ($fx=? '0 g$x1$23966$1a@gJ)
                       '0
                       (if ($fx<? '0 g$x1$23966$1a@gJ)
                         ((case-lambda
                            ((g$x1$23988$1a@gJ g$x2$23989$1a@gJ)
                             ($fxdiv0
                               g$x1$23988$1a@gJ
                               g$x2$23989$1a@gJ)))
                          g$x1$23966$1a@gJ
                          g$x2$23967$1a@gJ)
                         (if ($fx<? '0 g$x2$23967$1a@gJ)
                           ((case-lambda
                              ((g$x1$24010$1a@gJ g$x2$24011$1a@gJ)
                               ($fxdiv0
                                 g$x1$24010$1a@gJ
                                 g$x2$24011$1a@gJ)))
                            ($$fx-
                              g$x1$23966$1a@gJ
                              ($$fx- g$x2$23967$1a@gJ '1))
                            g$x2$23967$1a@gJ)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x1$24032$1a@gJ g$x2$24033$1a@gJ)
                                 ($fxdiv0
                                   g$x1$24032$1a@gJ
                                   g$x2$24033$1a@gJ)))
                              ($$fx+
                                g$x1$23966$1a@gJ
                                ($$fx+ g$x2$23967$1a@gJ '1))
                              g$x2$23967$1a@gJ))))))))
                g$x1$23943$1a@gJ
                g$x2$23944$1a@gJ)))))))))
   (g$residual-fxdiv0*$23149$1a@gJ
     g$residual-fxdiv0*$25086$1a@gJ
     (case-lambda
       ((g$x1$24054$1a@gJ g$x2$24055$1a@gJ)
        (begin
          (if ($fx=? '0 g$x2$24055$1a@gJ)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$24054$1a@gJ
              g$x2$24055$1a@gJ)
            (void))
          (if (if ($fx=? '-1 g$x2$24055$1a@gJ)
                (begin
                  '#f
                  ($fx=? (g$least-fixnum$22829$1a@gJ) g$x1$24054$1a@gJ))
                '#f)
            (g$overflow-error$22938$1a@gJ
              'fxdiv0
              g$x1$24054$1a@gJ
              g$x2$24055$1a@gJ)
            (void))
          ((case-lambda
             ((g$x1$24076$1a@gJ g$x2$24077$1a@gJ)
              ($fxdiv0 g$x1$24076$1a@gJ g$x2$24077$1a@gJ)))
           g$x1$24054$1a@gJ
           g$x2$24055$1a@gJ)))))
   (g$fxdiv0$23150$1a@gJ
     g$fxdiv0$25087$1a@gJ
     (case-lambda
       ((g$x1$24078$1a@gJ g$x2$24079$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$24078$1a@gJ))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$24078$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$24079$1a@gJ))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$24079$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$24100$1a@gJ g$x2$24101$1a@gJ)
                  (begin
                    (if ($fx=? '0 g$x2$24101$1a@gJ)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$24100$1a@gJ
                        g$x2$24101$1a@gJ)
                      (void))
                    (if (if ($fx=? '-1 g$x2$24101$1a@gJ)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$22829$1a@gJ)
                              g$x1$24100$1a@gJ))
                          '#f)
                      (g$overflow-error$22938$1a@gJ
                        'fxdiv0
                        g$x1$24100$1a@gJ
                        g$x2$24101$1a@gJ)
                      (void))
                    ((case-lambda
                       ((g$x1$24122$1a@gJ g$x2$24123$1a@gJ)
                        ($fxdiv0 g$x1$24122$1a@gJ g$x2$24123$1a@gJ)))
                     g$x1$24100$1a@gJ
                     g$x2$24101$1a@gJ))))
               g$x1$24078$1a@gJ
               g$x2$24079$1a@gJ))))))))
   (g$residual-%%fxdiv0$23166$1a@gJ
     g$residual-%%fxdiv0$25088$1a@gJ
     (case-lambda
       ((g$x1$24144$1a@gJ g$x2$24145$1a@gJ)
        ($fxdiv0 g$x1$24144$1a@gJ g$x2$24145$1a@gJ))))
   (g$fxdiv0-and-mod0$23167$1a@gJ
     g$fxdiv0-and-mod0$25089$1a@gJ
     (case-lambda
       ((g$x1$24146$1a@gJ g$x2$24147$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$24146$1a@gJ))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$24146$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$x2$24147$1a@gJ))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$24147$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$24148$1a@gJ)
                  (values
                    g$d$24148$1a@gJ
                    ($$fx-
                      g$x1$24146$1a@gJ
                      ($$fx* g$d$24148$1a@gJ g$x2$24147$1a@gJ)))))
               ((case-lambda
                  ((g$x1$24169$1a@gJ g$x2$24170$1a@gJ)
                   (begin
                     (if ($fx=? '0 g$x2$24170$1a@gJ)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$24169$1a@gJ
                         g$x2$24170$1a@gJ)
                       (void))
                     (if (if ($fx=? '-1 g$x2$24170$1a@gJ)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$22829$1a@gJ)
                               g$x1$24169$1a@gJ))
                           '#f)
                       (g$overflow-error$22938$1a@gJ
                         'fxdiv0
                         g$x1$24169$1a@gJ
                         g$x2$24170$1a@gJ)
                       (void))
                     ((case-lambda
                        ((g$x1$24191$1a@gJ g$x2$24192$1a@gJ)
                         ($fxdiv0 g$x1$24191$1a@gJ g$x2$24192$1a@gJ)))
                      g$x1$24169$1a@gJ
                      g$x2$24170$1a@gJ))))
                g$x1$24146$1a@gJ
                g$x2$24147$1a@gJ)))))))))
   (g$residual-fxpositive?*$23183$1a@gJ
     g$residual-fxpositive?*$25090$1a@gJ
     (case-lambda ((g$r$24213$1a@gJ) ($fx<? '0 g$r$24213$1a@gJ))))
   (g$fxpositive?$23184$1a@gJ
     g$fxpositive?$25091$1a@gJ
     (case-lambda
       ((g$r$24214$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$r$24214$1a@gJ))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$24214$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24235$1a@gJ) ($fx<? '0 g$r$24235$1a@gJ)))
               g$r$24214$1a@gJ))))))))
   (g$residual-fxnegative?*$23200$1a@gJ
     g$residual-fxnegative?*$25092$1a@gJ
     (case-lambda ((g$r$24256$1a@gJ) ($fx>? '0 g$r$24256$1a@gJ))))
   (g$fxnegative?$23201$1a@gJ
     g$fxnegative?$25093$1a@gJ
     (case-lambda
       ((g$r$24257$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$r$24257$1a@gJ))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$24257$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24278$1a@gJ) ($fx>? '0 g$r$24278$1a@gJ)))
               g$r$24257$1a@gJ))))))))
   (g$residual-fxzero?*$23217$1a@gJ
     g$residual-fxzero?*$25094$1a@gJ
     (case-lambda ((g$r$24299$1a@gJ) ($fx=? '0 g$r$24299$1a@gJ))))
   (g$fxzero?$23218$1a@gJ
     g$fxzero?$25095$1a@gJ
     (case-lambda
       ((g$r$24300$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$r$24300$1a@gJ))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$24300$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24321$1a@gJ) ($fx=? '0 g$r$24321$1a@gJ)))
               g$r$24300$1a@gJ))))))))
   (g$residual-fxeven?*$23234$1a@gJ
     g$residual-fxeven?*$25096$1a@gJ
     (case-lambda
       ((g$n$24342$1a@gJ) ($fx=? '0 ($fxand g$n$24342$1a@gJ '1)))))
   (g$fxeven?$23235$1a@gJ
     g$fxeven?$25097$1a@gJ
     (case-lambda
       ((g$n$24343$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$n$24343$1a@gJ))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$24343$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$24364$1a@gJ)
                  ($fx=? '0 ($fxand g$n$24364$1a@gJ '1))))
               g$n$24343$1a@gJ))))))))
   (g$residual-fxodd?*$23251$1a@gJ
     g$residual-fxodd?*$25098$1a@gJ
     (case-lambda
       ((g$n$24385$1a@gJ) ($fx=? '1 ($fxand g$n$24385$1a@gJ '1)))))
   (g$fxodd?$23252$1a@gJ
     g$fxodd?$25099$1a@gJ
     (case-lambda
       ((g$n$24386$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$n$24386$1a@gJ))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$24386$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$24407$1a@gJ)
                  ($fx=? '1 ($fxand g$n$24407$1a@gJ '1))))
               g$n$24386$1a@gJ))))))))
   (g$fxmax$23253$1a@gJ
     g$fxmax$25100$1a@gJ
     (case-lambda
       ((g$a$24408$1a@gJ . g$rest$24409$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$a$24408$1a@gJ))
            (assertion-violation 'fxmax '"not a fixnum" g$a$24408$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            (case-lambda
              ((g$a$24410$1a@gJ g$b$24411$1a@gJ)
               (if (g$fx<?$23044$1a@gJ g$a$24410$1a@gJ g$b$24411$1a@gJ)
                 g$b$24411$1a@gJ
                 g$a$24410$1a@gJ)))
            g$a$24408$1a@gJ
            g$rest$24409$1a@gJ)))))
   (g$fxmin$23254$1a@gJ
     g$fxmin$25101$1a@gJ
     (case-lambda
       ((g$a$24412$1a@gJ . g$rest$24413$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$a$24412$1a@gJ))
            (assertion-violation 'fxmin '"not a fixnum" g$a$24412$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            (case-lambda
              ((g$a$24414$1a@gJ g$b$24415$1a@gJ)
               (if (g$fx>?$23046$1a@gJ g$a$24414$1a@gJ g$b$24415$1a@gJ)
                 g$b$24415$1a@gJ
                 g$a$24414$1a@gJ)))
            g$a$24412$1a@gJ
            g$rest$24413$1a@gJ)))))
   (g$fx*/carry$23255$1a@gJ
     g$fx*/carry$25102$1a@gJ
     (case-lambda
       ((g$fx1$24416$1a@gJ g$fx2$24417$1a@gJ g$fx3$24418$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24416$1a@gJ))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$24416$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24417$1a@gJ))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$24417$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx3$24418$1a@gJ))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$24418$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24419$1a@gJ g$e$24420$1a@gJ)
                  (values
                    (g$mod0$20644$1a@gJ g$s$24419$1a@gJ g$e$24420$1a@gJ)
                    (g$div0$20642$1a@gJ
                      g$s$24419$1a@gJ
                      g$e$24420$1a@gJ))))
               (+ (* g$fx1$24416$1a@gJ g$fx2$24417$1a@gJ)
                  g$fx3$24418$1a@gJ)
               (g$expt$21702$1a@gJ
                 '2
                 (g$fixnum-width$20625$1a@gJ))))))))))
   (g$fx-/carry$23256$1a@gJ
     g$fx-/carry$25103$1a@gJ
     (case-lambda
       ((g$fx1$24421$1a@gJ g$fx2$24422$1a@gJ g$fx3$24423$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24421$1a@gJ))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$24421$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24422$1a@gJ))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$24422$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx3$24423$1a@gJ))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$24423$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24424$1a@gJ g$e$24425$1a@gJ)
                  (values
                    (g$mod0$20644$1a@gJ g$s$24424$1a@gJ g$e$24425$1a@gJ)
                    (g$div0$20642$1a@gJ
                      g$s$24424$1a@gJ
                      g$e$24425$1a@gJ))))
               (- g$fx1$24421$1a@gJ g$fx2$24422$1a@gJ g$fx3$24423$1a@gJ)
               (g$expt$21702$1a@gJ
                 '2
                 (g$fixnum-width$20625$1a@gJ))))))))))
   (g$fx+/carry$23257$1a@gJ
     g$fx+/carry$25104$1a@gJ
     (case-lambda
       ((g$fx1$24426$1a@gJ g$fx2$24427$1a@gJ g$fx3$24428$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24426$1a@gJ))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$24426$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24427$1a@gJ))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$24427$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx3$24428$1a@gJ))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$24428$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24429$1a@gJ g$e$24430$1a@gJ)
                  (values
                    (g$mod0$20644$1a@gJ g$s$24429$1a@gJ g$e$24430$1a@gJ)
                    (g$div0$20642$1a@gJ
                      g$s$24429$1a@gJ
                      g$e$24430$1a@gJ))))
               (+ g$fx1$24426$1a@gJ g$fx2$24427$1a@gJ g$fx3$24428$1a@gJ)
               (g$expt$21702$1a@gJ
                 '2
                 (g$fixnum-width$20625$1a@gJ))))))))))
   (g$residual-fxif*$23273$1a@gJ
     g$residual-fxif*$25105$1a@gJ
     (case-lambda
       ((g$fx1$24451$1a@gJ g$fx2$24452$1a@gJ g$fx3$24453$1a@gJ)
        ($fxior
          ($fxand g$fx1$24451$1a@gJ g$fx2$24452$1a@gJ)
          ($fxand ($fxnot g$fx1$24451$1a@gJ) g$fx3$24453$1a@gJ)))))
   (g$fxif$23274$1a@gJ
     g$fxif$25106$1a@gJ
     (case-lambda
       ((g$fx1$24454$1a@gJ g$fx2$24455$1a@gJ g$fx3$24456$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24454$1a@gJ))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$24454$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24455$1a@gJ))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$24455$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx3$24456$1a@gJ))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$24456$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24477$1a@gJ
                    g$fx2$24478$1a@gJ
                    g$fx3$24479$1a@gJ)
                  ($fxior
                    ($fxand g$fx1$24477$1a@gJ g$fx2$24478$1a@gJ)
                    ($fxand
                      ($fxnot g$fx1$24477$1a@gJ)
                      g$fx3$24479$1a@gJ))))
               g$fx1$24454$1a@gJ
               g$fx2$24455$1a@gJ
               g$fx3$24456$1a@gJ))))))))
   (g$residual-fxcopy-bit*$23290$1a@gJ
     g$residual-fxcopy-bit*$25107$1a@gJ
     (case-lambda
       ((g$fx1$24500$1a@gJ g$fx2$24501$1a@gJ g$fx3$24502$1a@gJ)
        ((case-lambda
           ((g$fx1$24523$1a@gJ g$fx2$24524$1a@gJ g$fx3$24525$1a@gJ)
            ($fxior
              ($fxand g$fx1$24523$1a@gJ g$fx2$24524$1a@gJ)
              ($fxand ($fxnot g$fx1$24523$1a@gJ) g$fx3$24525$1a@gJ))))
         ($fxarithmetic-shift-left '1 g$fx2$24501$1a@gJ)
         ($fxarithmetic-shift-left g$fx3$24502$1a@gJ g$fx2$24501$1a@gJ)
         g$fx1$24500$1a@gJ))))
   (g$fxcopy-bit$23291$1a@gJ
     g$fxcopy-bit$25108$1a@gJ
     (case-lambda
       ((g$fx1$24526$1a@gJ g$fx2$24527$1a@gJ g$fx3$24528$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24526$1a@gJ))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$24526$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24527$1a@gJ))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$24527$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx3$24528$1a@gJ))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$24528$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24549$1a@gJ
                    g$fx2$24550$1a@gJ
                    g$fx3$24551$1a@gJ)
                  ((case-lambda
                     ((g$fx1$24572$1a@gJ
                        g$fx2$24573$1a@gJ
                        g$fx3$24574$1a@gJ)
                      ($fxior
                        ($fxand g$fx1$24572$1a@gJ g$fx2$24573$1a@gJ)
                        ($fxand
                          ($fxnot g$fx1$24572$1a@gJ)
                          g$fx3$24574$1a@gJ))))
                   ($fxarithmetic-shift-left '1 g$fx2$24550$1a@gJ)
                   ($fxarithmetic-shift-left
                     g$fx3$24551$1a@gJ
                     g$fx2$24550$1a@gJ)
                   g$fx1$24549$1a@gJ)))
               g$fx1$24526$1a@gJ
               g$fx2$24527$1a@gJ
               g$fx3$24528$1a@gJ))))))))
   (g$residual-fxbit-field*$23307$1a@gJ
     g$residual-fxbit-field*$25109$1a@gJ
     (case-lambda
       ((g$fx1$24595$1a@gJ g$fx2$24596$1a@gJ g$fx3$24597$1a@gJ)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$24595$1a@gJ
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$24597$1a@gJ)))
          g$fx2$24596$1a@gJ))))
   (g$fxbit-field$23308$1a@gJ
     g$fxbit-field$25110$1a@gJ
     (case-lambda
       ((g$fx1$24598$1a@gJ g$fx2$24599$1a@gJ g$fx3$24600$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24598$1a@gJ))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$24598$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24599$1a@gJ))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$24599$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx3$24600$1a@gJ))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$24600$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24621$1a@gJ
                    g$fx2$24622$1a@gJ
                    g$fx3$24623$1a@gJ)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$24621$1a@gJ
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$24623$1a@gJ)))
                    g$fx2$24622$1a@gJ)))
               g$fx1$24598$1a@gJ
               g$fx2$24599$1a@gJ
               g$fx3$24600$1a@gJ))))))))
   (g$residual-fxcopy-bit-field*$23324$1a@gJ
     g$residual-fxcopy-bit-field*$25111$1a@gJ
     (case-lambda
       ((g$to$24644$1a@gJ
          g$start$24645$1a@gJ
          g$end$24646$1a@gJ
          g$from$24647$1a@gJ)
        ((case-lambda
           ((g$fx1$24668$1a@gJ g$fx2$24669$1a@gJ g$fx3$24670$1a@gJ)
            ($fxior
              ($fxand g$fx1$24668$1a@gJ g$fx2$24669$1a@gJ)
              ($fxand ($fxnot g$fx1$24668$1a@gJ) g$fx3$24670$1a@gJ))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$24645$1a@gJ)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$24646$1a@gJ)))
         ($fxarithmetic-shift-left
           g$from$24647$1a@gJ
           g$start$24645$1a@gJ)
         g$to$24644$1a@gJ))))
   (g$fxcopy-bit-field$23325$1a@gJ
     g$fxcopy-bit-field$25112$1a@gJ
     (case-lambda
       ((g$to$24671$1a@gJ
          g$start$24672$1a@gJ
          g$end$24673$1a@gJ
          g$from$24674$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$to$24671$1a@gJ))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$24671$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$start$24672$1a@gJ))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$24672$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$end$24673$1a@gJ))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$24673$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$from$24674$1a@gJ))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$24674$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$24695$1a@gJ
                    g$start$24696$1a@gJ
                    g$end$24697$1a@gJ
                    g$from$24698$1a@gJ)
                  ((case-lambda
                     ((g$fx1$24719$1a@gJ
                        g$fx2$24720$1a@gJ
                        g$fx3$24721$1a@gJ)
                      ($fxior
                        ($fxand g$fx1$24719$1a@gJ g$fx2$24720$1a@gJ)
                        ($fxand
                          ($fxnot g$fx1$24719$1a@gJ)
                          g$fx3$24721$1a@gJ))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$24696$1a@gJ)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$24697$1a@gJ)))
                   ($fxarithmetic-shift-left
                     g$from$24698$1a@gJ
                     g$start$24696$1a@gJ)
                   g$to$24695$1a@gJ)))
               g$to$24671$1a@gJ
               g$start$24672$1a@gJ
               g$end$24673$1a@gJ
               g$from$24674$1a@gJ))))))))
   (g$fxarithmetic-shift-left$23326$1a@gJ
     g$fxarithmetic-shift-left$25113$1a@gJ
     (case-lambda
       ((g$fx1$24722$1a@gJ g$fx2$24723$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24722$1a@gJ))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$24722$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24723$1a@gJ))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$24723$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$24744$1a@gJ g$k$24745$1a@gJ)
                  (if ($fx=? g$k$24745$1a@gJ '0)
                    g$x$24744$1a@gJ
                    (if ($fx<? g$k$24745$1a@gJ '0)
                      ($fxarithmetic-shift-right
                        g$x$24744$1a@gJ
                        ($$fx- g$k$24745$1a@gJ))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$24746$1a@gJ)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$24744$1a@gJ)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$24746$1a@gJ))
                                (g$overflow-error$22938$1a@gJ
                                  'fxarithmetic-shift
                                  g$x$24744$1a@gJ
                                  g$k$24745$1a@gJ)
                                (void))
                              g$i$24746$1a@gJ)))
                         ($fxarithmetic-shift-left
                           g$x$24744$1a@gJ
                           g$k$24745$1a@gJ)))))))
               g$fx1$24722$1a@gJ
               g$fx2$24723$1a@gJ))))))))
   (g$fxarithmetic-shift-right$23327$1a@gJ
     g$fxarithmetic-shift-right$25114$1a@gJ
     (case-lambda
       ((g$fx1$24747$1a@gJ g$fx2$24748$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$fx1$24747$1a@gJ))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$24747$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$fx2$24748$1a@gJ))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$24748$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$24769$1a@gJ g$k$24770$1a@gJ)
                  (if ($fx=? g$k$24770$1a@gJ '0)
                    g$x$24769$1a@gJ
                    (if ($fx<? g$k$24770$1a@gJ '0)
                      ($fxarithmetic-shift-right
                        g$x$24769$1a@gJ
                        ($$fx- g$k$24770$1a@gJ))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$24771$1a@gJ)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$24769$1a@gJ)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$24771$1a@gJ))
                                (g$overflow-error$22938$1a@gJ
                                  'fxarithmetic-shift
                                  g$x$24769$1a@gJ
                                  g$k$24770$1a@gJ)
                                (void))
                              g$i$24771$1a@gJ)))
                         ($fxarithmetic-shift-left
                           g$x$24769$1a@gJ
                           g$k$24770$1a@gJ)))))))
               g$fx1$24747$1a@gJ
               ($$fx- g$fx2$24748$1a@gJ)))))))))
   (g$fxrotate-bit-field$23328$1a@gJ
     g$fxrotate-bit-field$25115$1a@gJ
     (case-lambda
       ((g$n$24772$1a@gJ
          g$start$24773$1a@gJ
          g$end$24774$1a@gJ
          g$count$24775$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$n$24772$1a@gJ))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$24772$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$start$24773$1a@gJ))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$24773$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$end$24774$1a@gJ))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$24774$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$count$24775$1a@gJ))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$24775$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$24776$1a@gJ)
                  (if ((case-lambda
                         ((g$r$24797$1a@gJ) ($fx<? '0 g$r$24797$1a@gJ)))
                       g$width$24776$1a@gJ)
                    ((case-lambda
                       ((g$count$24798$1a@gJ g$field$24799$1a@gJ)
                        ((case-lambda
                           ((g$to$24820$1a@gJ
                              g$start$24821$1a@gJ
                              g$end$24822$1a@gJ
                              g$from$24823$1a@gJ)
                            ((case-lambda
                               ((g$fx1$24844$1a@gJ
                                  g$fx2$24845$1a@gJ
                                  g$fx3$24846$1a@gJ)
                                ($fxior
                                  ($fxand
                                    g$fx1$24844$1a@gJ
                                    g$fx2$24845$1a@gJ)
                                  ($fxand
                                    ($fxnot g$fx1$24844$1a@gJ)
                                    g$fx3$24846$1a@gJ))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$24821$1a@gJ)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$24822$1a@gJ)))
                             ($fxarithmetic-shift-left
                               g$from$24823$1a@gJ
                               g$start$24821$1a@gJ)
                             g$to$24820$1a@gJ)))
                         g$n$24772$1a@gJ
                         g$start$24773$1a@gJ
                         g$end$24774$1a@gJ
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$24799$1a@gJ
                             g$count$24798$1a@gJ)
                           ($fxarithmetic-shift-right
                             g$field$24799$1a@gJ
                             ($$fx-
                               g$width$24776$1a@gJ
                               g$count$24798$1a@gJ))))))
                     ((case-lambda
                        ((g$x1$24867$1a@gJ g$x2$24868$1a@gJ)
                         ($$fx-
                           g$x1$24867$1a@gJ
                           ($$fx*
                             ((case-lambda
                                ((g$x1$24889$1a@gJ g$x2$24890$1a@gJ)
                                 (begin
                                   (if ($fx=? '0 g$x2$24890$1a@gJ)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$24889$1a@gJ
                                       g$x2$24890$1a@gJ)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$24890$1a@gJ)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$22829$1a@gJ)
                                             g$x1$24889$1a@gJ))
                                         '#f)
                                     (g$overflow-error$22938$1a@gJ
                                       'fxdiv
                                       g$x1$24889$1a@gJ
                                       g$x2$24890$1a@gJ)
                                     (void))
                                   (if ($fx=? '0 g$x1$24889$1a@gJ)
                                     '0
                                     (if ($fx<? '0 g$x1$24889$1a@gJ)
                                       ((case-lambda
                                          ((g$x1$24911$1a@gJ
                                             g$x2$24912$1a@gJ)
                                           ($fxdiv0
                                             g$x1$24911$1a@gJ
                                             g$x2$24912$1a@gJ)))
                                        g$x1$24889$1a@gJ
                                        g$x2$24890$1a@gJ)
                                       (if ($fx<? '0 g$x2$24890$1a@gJ)
                                         ((case-lambda
                                            ((g$x1$24933$1a@gJ
                                               g$x2$24934$1a@gJ)
                                             ($fxdiv0
                                               g$x1$24933$1a@gJ
                                               g$x2$24934$1a@gJ)))
                                          ($$fx-
                                            g$x1$24889$1a@gJ
                                            ($$fx- g$x2$24890$1a@gJ '1))
                                          g$x2$24890$1a@gJ)
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$x1$24955$1a@gJ
                                                 g$x2$24956$1a@gJ)
                                               ($fxdiv0
                                                 g$x1$24955$1a@gJ
                                                 g$x2$24956$1a@gJ)))
                                            ($$fx+
                                              g$x1$24889$1a@gJ
                                              ($$fx+
                                                g$x2$24890$1a@gJ
                                                '1))
                                            g$x2$24890$1a@gJ))))))))
                              g$x1$24867$1a@gJ
                              g$x2$24868$1a@gJ)
                             g$x2$24868$1a@gJ))))
                      g$count$24775$1a@gJ
                      g$width$24776$1a@gJ)
                     ((case-lambda
                        ((g$fx1$24977$1a@gJ
                           g$fx2$24978$1a@gJ
                           g$fx3$24979$1a@gJ)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$24977$1a@gJ
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$24979$1a@gJ)))
                           g$fx2$24978$1a@gJ)))
                      g$n$24772$1a@gJ
                      g$start$24773$1a@gJ
                      g$end$24774$1a@gJ))
                    g$n$24772$1a@gJ)))
               ($$fx- g$end$24774$1a@gJ g$start$24773$1a@gJ)))))))))
   (g$fxreverse-bit-field$23329$1a@gJ
     g$fxreverse-bit-field$25116$1a@gJ
     (case-lambda
       ((g$x1$24980$1a@gJ g$start$24981$1a@gJ g$end$24982$1a@gJ)
        (begin
          (if (not (g$fixnum?$20623$1a@gJ g$x1$24980$1a@gJ))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$24980$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$start$24981$1a@gJ))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$24981$1a@gJ)
            (void))
          (if (not (g$fixnum?$20623$1a@gJ g$end$24982$1a@gJ))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$24982$1a@gJ)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=? g$start$24981$1a@gJ g$end$24982$1a@gJ))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$24981$1a@gJ
                    g$end$24982$1a@gJ)
                  (void))
                (letrec ((g$loop$24983$1a@gJ
                           (case-lambda
                             ((g$width$25007$1a@gJ
                                g$bits$25008$1a@gJ
                                g$rbits$25009$1a@gJ)
                              (if ($fx=? g$width$25007$1a@gJ '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$25030$1a@gJ
                                        g$start$25031$1a@gJ
                                        g$end$25032$1a@gJ
                                        g$from$25033$1a@gJ)
                                      ((case-lambda
                                         ((g$fx1$25054$1a@gJ
                                            g$fx2$25055$1a@gJ
                                            g$fx3$25056$1a@gJ)
                                          ($fxior
                                            ($fxand
                                              g$fx1$25054$1a@gJ
                                              g$fx2$25055$1a@gJ)
                                            ($fxand
                                              ($fxnot g$fx1$25054$1a@gJ)
                                              g$fx3$25056$1a@gJ))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$25031$1a@gJ)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$25032$1a@gJ)))
                                       ($fxarithmetic-shift-left
                                         g$from$25033$1a@gJ
                                         g$start$25031$1a@gJ)
                                       g$to$25030$1a@gJ)))
                                   g$x1$24980$1a@gJ
                                   g$start$24981$1a@gJ
                                   g$end$24982$1a@gJ
                                   g$rbits$25009$1a@gJ))
                                (g$loop$24983$1a@gJ
                                  ($$fx- g$width$25007$1a@gJ '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$25008$1a@gJ
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$25009$1a@gJ
                                      '1)
                                    ($fxand
                                      g$bits$25008$1a@gJ
                                      '1))))))))
                  (g$loop$24983$1a@gJ
                    ($$fx- g$end$24982$1a@gJ g$start$24981$1a@gJ)
                    ((case-lambda
                       ((g$fx1$25004$1a@gJ
                          g$fx2$25005$1a@gJ
                          g$fx3$25006$1a@gJ)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$25004$1a@gJ
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$25006$1a@gJ)))
                          g$fx2$25005$1a@gJ)))
                     g$x1$24980$1a@gJ
                     g$start$24981$1a@gJ
                     g$end$24982$1a@gJ)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$25295$1a@gJ
     g$fl+$26610$1a@gJ
     (case-lambda
       (() '0.0)
       ((g$x1$25418$1a@gJ g$x2$25419$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25418$1a@gJ))
            (assertion-violation 'fl+ '"not a flonum" g$x1$25418$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25419$1a@gJ))
            (assertion-violation 'fl+ '"not a flonum" g$x2$25419$1a@gJ)
            (void))
          ($fl+ g$x1$25418$1a@gJ g$x2$25419$1a@gJ)))
       (g$args$25420$1a@gJ
        (g$fold-left$20201$1a@gJ
          g$fl+$25295$1a@gJ
          (g$fl+$25295$1a@gJ)
          g$args$25420$1a@gJ))))
   (g$fl*$25296$1a@gJ
     g$fl*$26611$1a@gJ
     (case-lambda
       (() '1.0)
       ((g$x1$25421$1a@gJ g$x2$25422$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25421$1a@gJ))
            (assertion-violation 'fl* '"not a flonum" g$x1$25421$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25422$1a@gJ))
            (assertion-violation 'fl* '"not a flonum" g$x2$25422$1a@gJ)
            (void))
          ($fl* g$x1$25421$1a@gJ g$x2$25422$1a@gJ)))
       (g$args$25423$1a@gJ
        (g$fold-left$20201$1a@gJ
          g$fl*$25296$1a@gJ
          (g$fl*$25296$1a@gJ)
          g$args$25423$1a@gJ))))
   (g$fldenominator$25297$1a@gJ
     g$fldenominator$26612$1a@gJ
     (case-lambda
       ((g$fl$25424$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$25424$1a@gJ))
            (assertion-violation
              'fldenominator
              '"not a flonum"
              g$fl$25424$1a@gJ)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25425$1a@gJ)
                      (if g$t$25425$1a@gJ
                        g$t$25425$1a@gJ
                        (begin
                          '#f
                          (g$flinfinite?$25378$1a@gJ
                            g$fl$25424$1a@gJ)))))
                   (g$flnan?$25379$1a@gJ g$fl$25424$1a@gJ))
                '1.0
                (g$real->flonum$21645$1a@gJ
                  (g$denominator$21680$1a@gJ g$fl$25424$1a@gJ))))))))))
   (g$flnumerator$25298$1a@gJ
     g$flnumerator$26613$1a@gJ
     (case-lambda
       ((g$fl$25426$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$25426$1a@gJ))
            (assertion-violation
              'flnumerator
              '"not a flonum"
              g$fl$25426$1a@gJ)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25427$1a@gJ)
                      (if g$t$25427$1a@gJ
                        g$t$25427$1a@gJ
                        (begin
                          '#f
                          (g$flinfinite?$25378$1a@gJ
                            g$fl$25426$1a@gJ)))))
                   (g$flnan?$25379$1a@gJ g$fl$25426$1a@gJ))
                g$fl$25426$1a@gJ
                (g$real->flonum$21645$1a@gJ
                  (g$numerator$21679$1a@gJ g$fl$25426$1a@gJ))))))))))
   (g$fl-$25299$1a@gJ
     g$fl-$26614$1a@gJ
     (case-lambda
       ((g$x1$25428$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25428$1a@gJ))
            (assertion-violation 'fl- '"not a flonum" g$x1$25428$1a@gJ)
            (void))
          ($fl- g$x1$25428$1a@gJ)))
       ((g$x1$25429$1a@gJ g$x2$25430$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25429$1a@gJ))
            (assertion-violation 'fl- '"not a flonum" g$x1$25429$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25430$1a@gJ))
            (assertion-violation 'fl- '"not a flonum" g$x2$25430$1a@gJ)
            (void))
          ($fl- g$x1$25429$1a@gJ g$x2$25430$1a@gJ)))
       ((g$x1$25431$1a@gJ g$x2$25432$1a@gJ . g$rest$25433$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25431$1a@gJ))
            (assertion-violation 'fl- '"not a flonum" g$x1$25431$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            g$fl-$25299$1a@gJ
            g$x1$25431$1a@gJ
            (cons g$x2$25432$1a@gJ g$rest$25433$1a@gJ))))))
   (g$fl/$25300$1a@gJ
     g$fl/$26615$1a@gJ
     (case-lambda
       ((g$x1$25434$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25434$1a@gJ))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25434$1a@gJ)
            (void))
          ($fl/ '1.0 g$x1$25434$1a@gJ)))
       ((g$x1$25435$1a@gJ g$x2$25436$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25435$1a@gJ))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25435$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25436$1a@gJ))
            (assertion-violation 'fl/ '"not a flonum" g$x2$25436$1a@gJ)
            (void))
          ($fl/ g$x1$25435$1a@gJ g$x2$25436$1a@gJ)))
       ((g$x1$25437$1a@gJ g$x2$25438$1a@gJ . g$rest$25439$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25437$1a@gJ))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25437$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            g$fl/$25300$1a@gJ
            g$x1$25437$1a@gJ
            (cons g$x2$25438$1a@gJ g$rest$25439$1a@gJ))))))
   (g$fl=?$25301$1a@gJ
     g$fl=?$26616$1a@gJ
     (case-lambda
       ((g$x1$25440$1a@gJ g$x2$25441$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25440$1a@gJ))
            (assertion-violation 'fl=? '"not a flonum" g$x1$25440$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25441$1a@gJ))
            (assertion-violation 'fl=? '"not a flonum" g$x2$25441$1a@gJ)
            (void))
          ($fl=? g$x1$25440$1a@gJ g$x2$25441$1a@gJ)))
       ((g$x1$25442$1a@gJ g$x2$25443$1a@gJ . g$rest$25444$1a@gJ)
        ((letrec ((g$f$25445$1a@gJ
                    (case-lambda
                      ((g$a$25446$1a@gJ g$b$25447$1a@gJ)
                       (if (null? g$b$25447$1a@gJ)
                         '#t
                         (if (g$fl=?$25301$1a@gJ
                               g$a$25446$1a@gJ
                               ($car g$b$25447$1a@gJ))
                           (g$f$25445$1a@gJ
                             ($car g$b$25447$1a@gJ)
                             ($cdr g$b$25447$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$25445$1a@gJ)
         g$x1$25442$1a@gJ
         (cons g$x2$25443$1a@gJ g$rest$25444$1a@gJ)))))
   (g$fl<?$25302$1a@gJ
     g$fl<?$26617$1a@gJ
     (case-lambda
       ((g$x1$25448$1a@gJ g$x2$25449$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25448$1a@gJ))
            (assertion-violation 'fl<? '"not a flonum" g$x1$25448$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25449$1a@gJ))
            (assertion-violation 'fl<? '"not a flonum" g$x2$25449$1a@gJ)
            (void))
          ($fl<? g$x1$25448$1a@gJ g$x2$25449$1a@gJ)))
       ((g$x1$25450$1a@gJ g$x2$25451$1a@gJ . g$rest$25452$1a@gJ)
        ((letrec ((g$f$25453$1a@gJ
                    (case-lambda
                      ((g$a$25454$1a@gJ g$b$25455$1a@gJ)
                       (if (null? g$b$25455$1a@gJ)
                         '#t
                         (if (g$fl<?$25302$1a@gJ
                               g$a$25454$1a@gJ
                               ($car g$b$25455$1a@gJ))
                           (g$f$25453$1a@gJ
                             ($car g$b$25455$1a@gJ)
                             ($cdr g$b$25455$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$25453$1a@gJ)
         g$x1$25450$1a@gJ
         (cons g$x2$25451$1a@gJ g$rest$25452$1a@gJ)))))
   (g$fl<=?$25303$1a@gJ
     g$fl<=?$26618$1a@gJ
     (case-lambda
       ((g$x1$25456$1a@gJ g$x2$25457$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25456$1a@gJ))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$25456$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25457$1a@gJ))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$25457$1a@gJ)
            (void))
          ($fl<=? g$x1$25456$1a@gJ g$x2$25457$1a@gJ)))
       ((g$x1$25458$1a@gJ g$x2$25459$1a@gJ . g$rest$25460$1a@gJ)
        ((letrec ((g$f$25461$1a@gJ
                    (case-lambda
                      ((g$a$25462$1a@gJ g$b$25463$1a@gJ)
                       (if (null? g$b$25463$1a@gJ)
                         '#t
                         (if (g$fl<=?$25303$1a@gJ
                               g$a$25462$1a@gJ
                               ($car g$b$25463$1a@gJ))
                           (g$f$25461$1a@gJ
                             ($car g$b$25463$1a@gJ)
                             ($cdr g$b$25463$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$25461$1a@gJ)
         g$x1$25458$1a@gJ
         (cons g$x2$25459$1a@gJ g$rest$25460$1a@gJ)))))
   (g$fl>?$25304$1a@gJ
     g$fl>?$26619$1a@gJ
     (case-lambda
       ((g$x1$25464$1a@gJ g$x2$25465$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25464$1a@gJ))
            (assertion-violation 'fl>? '"not a flonum" g$x1$25464$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25465$1a@gJ))
            (assertion-violation 'fl>? '"not a flonum" g$x2$25465$1a@gJ)
            (void))
          ($fl>? g$x1$25464$1a@gJ g$x2$25465$1a@gJ)))
       ((g$x1$25466$1a@gJ g$x2$25467$1a@gJ . g$rest$25468$1a@gJ)
        ((letrec ((g$f$25469$1a@gJ
                    (case-lambda
                      ((g$a$25470$1a@gJ g$b$25471$1a@gJ)
                       (if (null? g$b$25471$1a@gJ)
                         '#t
                         (if (g$fl>?$25304$1a@gJ
                               g$a$25470$1a@gJ
                               ($car g$b$25471$1a@gJ))
                           (g$f$25469$1a@gJ
                             ($car g$b$25471$1a@gJ)
                             ($cdr g$b$25471$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$25469$1a@gJ)
         g$x1$25466$1a@gJ
         (cons g$x2$25467$1a@gJ g$rest$25468$1a@gJ)))))
   (g$fl>=?$25305$1a@gJ
     g$fl>=?$26620$1a@gJ
     (case-lambda
       ((g$x1$25472$1a@gJ g$x2$25473$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25472$1a@gJ))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$25472$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25473$1a@gJ))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$25473$1a@gJ)
            (void))
          ($fl>=? g$x1$25472$1a@gJ g$x2$25473$1a@gJ)))
       ((g$x1$25474$1a@gJ g$x2$25475$1a@gJ . g$rest$25476$1a@gJ)
        ((letrec ((g$f$25477$1a@gJ
                    (case-lambda
                      ((g$a$25478$1a@gJ g$b$25479$1a@gJ)
                       (if (null? g$b$25479$1a@gJ)
                         '#t
                         (if (g$fl>=?$25305$1a@gJ
                               g$a$25478$1a@gJ
                               ($car g$b$25479$1a@gJ))
                           (g$f$25477$1a@gJ
                             ($car g$b$25479$1a@gJ)
                             ($cdr g$b$25479$1a@gJ))
                           (begin '#f '#f)))))))
           g$f$25477$1a@gJ)
         g$x1$25474$1a@gJ
         (cons g$x2$25475$1a@gJ g$rest$25476$1a@gJ)))))
   (g$residual-fldiv0*$25321$1a@gJ
     g$residual-fldiv0*$26621$1a@gJ
     (case-lambda
       ((g$x1$25500$1a@gJ g$x2$25501$1a@gJ)
        ((case-lambda
           ((g$d$25502$1a@gJ)
            ((case-lambda
               ((g$m$25503$1a@gJ)
                (if ($fl<?
                      g$m$25503$1a@gJ
                      (g$magnitude$21677$1a@gJ
                        ($fl/ g$x2$25501$1a@gJ '2.0)))
                  g$d$25502$1a@gJ
                  (if ($fl<? '0.0 g$x2$25501$1a@gJ)
                    ($fl+ g$d$25502$1a@gJ '1.0)
                    (begin '#f ($fl- g$d$25502$1a@gJ '1.0))))))
             ($fl-
               g$x1$25500$1a@gJ
               ($fl* g$d$25502$1a@gJ g$x2$25501$1a@gJ)))))
         ((case-lambda
            ((g$x1$25524$1a@gJ g$x2$25525$1a@gJ)
             (if ($fl<? '0.0 g$x2$25525$1a@gJ)
               ((case-lambda
                  ((g$fl$25546$1a@gJ)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$25546$1a@gJ)))
                ($fl/ g$x1$25524$1a@gJ g$x2$25525$1a@gJ))
               ($fl-
                 ((case-lambda
                    ((g$fl$25567$1a@gJ)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$25567$1a@gJ)))
                  ($fl/ g$x1$25524$1a@gJ ($fl- g$x2$25525$1a@gJ)))))))
          g$x1$25500$1a@gJ
          g$x2$25501$1a@gJ)))))
   (g$fldiv0$25322$1a@gJ
     g$fldiv0$26622$1a@gJ
     (case-lambda
       ((g$x1$25568$1a@gJ g$x2$25569$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25568$1a@gJ))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$25568$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25569$1a@gJ))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$25569$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$25590$1a@gJ g$x2$25591$1a@gJ)
                  ((case-lambda
                     ((g$d$25592$1a@gJ)
                      ((case-lambda
                         ((g$m$25593$1a@gJ)
                          (if ($fl<?
                                g$m$25593$1a@gJ
                                (g$magnitude$21677$1a@gJ
                                  ($fl/ g$x2$25591$1a@gJ '2.0)))
                            g$d$25592$1a@gJ
                            (if ($fl<? '0.0 g$x2$25591$1a@gJ)
                              ($fl+ g$d$25592$1a@gJ '1.0)
                              (begin
                                '#f
                                ($fl- g$d$25592$1a@gJ '1.0))))))
                       ($fl-
                         g$x1$25590$1a@gJ
                         ($fl* g$d$25592$1a@gJ g$x2$25591$1a@gJ)))))
                   ((case-lambda
                      ((g$x1$25614$1a@gJ g$x2$25615$1a@gJ)
                       (if ($fl<? '0.0 g$x2$25615$1a@gJ)
                         ((case-lambda
                            ((g$fl$25636$1a@gJ)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$25636$1a@gJ)))
                          ($fl/ g$x1$25614$1a@gJ g$x2$25615$1a@gJ))
                         ($fl-
                           ((case-lambda
                              ((g$fl$25657$1a@gJ)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$25657$1a@gJ)))
                            ($fl/
                              g$x1$25614$1a@gJ
                              ($fl- g$x2$25615$1a@gJ)))))))
                    g$x1$25590$1a@gJ
                    g$x2$25591$1a@gJ))))
               g$x1$25568$1a@gJ
               g$x2$25569$1a@gJ))))))))
   (g$residual-flmod*$25338$1a@gJ
     g$residual-flmod*$26623$1a@gJ
     (case-lambda
       ((g$x1$25678$1a@gJ g$x2$25679$1a@gJ)
        ($fl-
          g$x1$25678$1a@gJ
          ($fl*
            ((case-lambda
               ((g$x1$25700$1a@gJ g$x2$25701$1a@gJ)
                (if ($fl<? '0.0 g$x2$25701$1a@gJ)
                  ((case-lambda
                     ((g$fl$25722$1a@gJ)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$25722$1a@gJ)))
                   ($fl/ g$x1$25700$1a@gJ g$x2$25701$1a@gJ))
                  ($fl-
                    ((case-lambda
                       ((g$fl$25743$1a@gJ)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$25743$1a@gJ)))
                     ($fl/
                       g$x1$25700$1a@gJ
                       ($fl- g$x2$25701$1a@gJ)))))))
             g$x1$25678$1a@gJ
             g$x2$25679$1a@gJ)
            g$x2$25679$1a@gJ)))))
   (g$flmod$25339$1a@gJ
     g$flmod$26624$1a@gJ
     (case-lambda
       ((g$x1$25744$1a@gJ g$x2$25745$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25744$1a@gJ))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$25744$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25745$1a@gJ))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$25745$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$25766$1a@gJ g$x2$25767$1a@gJ)
                  ($fl-
                    g$x1$25766$1a@gJ
                    ($fl*
                      ((case-lambda
                         ((g$x1$25788$1a@gJ g$x2$25789$1a@gJ)
                          (if ($fl<? '0.0 g$x2$25789$1a@gJ)
                            ((case-lambda
                               ((g$fl$25810$1a@gJ)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$25810$1a@gJ)))
                             ($fl/ g$x1$25788$1a@gJ g$x2$25789$1a@gJ))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$25831$1a@gJ)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$25831$1a@gJ)))
                               ($fl/
                                 g$x1$25788$1a@gJ
                                 ($fl- g$x2$25789$1a@gJ)))))))
                       g$x1$25766$1a@gJ
                       g$x2$25767$1a@gJ)
                      g$x2$25767$1a@gJ))))
               g$x1$25744$1a@gJ
               g$x2$25745$1a@gJ))))))))
   (g$flmod0$25340$1a@gJ
     g$flmod0$26625$1a@gJ
     (case-lambda
       ((g$x1$25832$1a@gJ g$x2$25833$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25832$1a@gJ))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$25832$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25833$1a@gJ))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$25833$1a@gJ)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$25832$1a@gJ
                ($fl*
                  ((case-lambda
                     ((g$x1$25854$1a@gJ g$x2$25855$1a@gJ)
                      ((case-lambda
                         ((g$d$25856$1a@gJ)
                          ((case-lambda
                             ((g$m$25857$1a@gJ)
                              (if ($fl<?
                                    g$m$25857$1a@gJ
                                    (g$magnitude$21677$1a@gJ
                                      ($fl/ g$x2$25855$1a@gJ '2.0)))
                                g$d$25856$1a@gJ
                                (if ($fl<? '0.0 g$x2$25855$1a@gJ)
                                  ($fl+ g$d$25856$1a@gJ '1.0)
                                  (begin
                                    '#f
                                    ($fl- g$d$25856$1a@gJ '1.0))))))
                           ($fl-
                             g$x1$25854$1a@gJ
                             ($fl* g$d$25856$1a@gJ g$x2$25855$1a@gJ)))))
                       ((case-lambda
                          ((g$x1$25878$1a@gJ g$x2$25879$1a@gJ)
                           (if ($fl<? '0.0 g$x2$25879$1a@gJ)
                             ((case-lambda
                                ((g$fl$25900$1a@gJ)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$25900$1a@gJ)))
                              ($fl/ g$x1$25878$1a@gJ g$x2$25879$1a@gJ))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$25921$1a@gJ)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$25921$1a@gJ)))
                                ($fl/
                                  g$x1$25878$1a@gJ
                                  ($fl- g$x2$25879$1a@gJ)))))))
                        g$x1$25854$1a@gJ
                        g$x2$25855$1a@gJ))))
                   g$x1$25832$1a@gJ
                   g$x2$25833$1a@gJ)
                  g$x2$25833$1a@gJ)))))))))
   (g$fldiv-and-mod$25341$1a@gJ
     g$fldiv-and-mod$26626$1a@gJ
     (case-lambda
       ((g$x1$25922$1a@gJ g$x2$25923$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$25922$1a@gJ))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$25922$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$25923$1a@gJ))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$25923$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$25924$1a@gJ)
                  (values
                    g$d$25924$1a@gJ
                    ($fl-
                      g$x1$25922$1a@gJ
                      ($fl* g$d$25924$1a@gJ g$x2$25923$1a@gJ)))))
               ((case-lambda
                  ((g$x1$25945$1a@gJ g$x2$25946$1a@gJ)
                   (if ($fl<? '0.0 g$x2$25946$1a@gJ)
                     ((case-lambda
                        ((g$fl$25967$1a@gJ)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$25967$1a@gJ)))
                      ($fl/ g$x1$25945$1a@gJ g$x2$25946$1a@gJ))
                     ($fl-
                       ((case-lambda
                          ((g$fl$25988$1a@gJ)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$25988$1a@gJ)))
                        ($fl/
                          g$x1$25945$1a@gJ
                          ($fl- g$x2$25946$1a@gJ)))))))
                g$x1$25922$1a@gJ
                g$x2$25923$1a@gJ)))))))))
   (g$residual-fldiv*$25357$1a@gJ
     g$residual-fldiv*$26627$1a@gJ
     (case-lambda
       ((g$x1$26009$1a@gJ g$x2$26010$1a@gJ)
        (if ($fl<? '0.0 g$x2$26010$1a@gJ)
          ((case-lambda
             ((g$fl$26031$1a@gJ)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$26031$1a@gJ)))
           ($fl/ g$x1$26009$1a@gJ g$x2$26010$1a@gJ))
          ($fl-
            ((case-lambda
               ((g$fl$26052$1a@gJ)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$26052$1a@gJ)))
             ($fl/ g$x1$26009$1a@gJ ($fl- g$x2$26010$1a@gJ))))))))
   (g$fldiv$25358$1a@gJ
     g$fldiv$26628$1a@gJ
     (case-lambda
       ((g$x1$26053$1a@gJ g$x2$26054$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$26053$1a@gJ))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$26053$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$26054$1a@gJ))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$26054$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26075$1a@gJ g$x2$26076$1a@gJ)
                  (if ($fl<? '0.0 g$x2$26076$1a@gJ)
                    ((case-lambda
                       ((g$fl$26097$1a@gJ)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$26097$1a@gJ)))
                     ($fl/ g$x1$26075$1a@gJ g$x2$26076$1a@gJ))
                    ($fl-
                      ((case-lambda
                         ((g$fl$26118$1a@gJ)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$26118$1a@gJ)))
                       ($fl/
                         g$x1$26075$1a@gJ
                         ($fl- g$x2$26076$1a@gJ)))))))
               g$x1$26053$1a@gJ
               g$x2$26054$1a@gJ))))))))
   (g$fldiv0-and-mod0$25359$1a@gJ
     g$fldiv0-and-mod0$26629$1a@gJ
     (case-lambda
       ((g$x1$26119$1a@gJ g$x2$26120$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$x1$26119$1a@gJ))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$26119$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$x2$26120$1a@gJ))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$26120$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$26121$1a@gJ)
                  (values
                    g$d$26121$1a@gJ
                    ($fl-
                      g$x1$26119$1a@gJ
                      ($fl* g$d$26121$1a@gJ g$x2$26120$1a@gJ)))))
               ((case-lambda
                  ((g$x1$26142$1a@gJ g$x2$26143$1a@gJ)
                   ((case-lambda
                      ((g$d$26144$1a@gJ)
                       ((case-lambda
                          ((g$m$26145$1a@gJ)
                           (if ($fl<?
                                 g$m$26145$1a@gJ
                                 (g$magnitude$21677$1a@gJ
                                   ($fl/ g$x2$26143$1a@gJ '2.0)))
                             g$d$26144$1a@gJ
                             (if ($fl<? '0.0 g$x2$26143$1a@gJ)
                               ($fl+ g$d$26144$1a@gJ '1.0)
                               (begin
                                 '#f
                                 ($fl- g$d$26144$1a@gJ '1.0))))))
                        ($fl-
                          g$x1$26142$1a@gJ
                          ($fl* g$d$26144$1a@gJ g$x2$26143$1a@gJ)))))
                    ((case-lambda
                       ((g$x1$26166$1a@gJ g$x2$26167$1a@gJ)
                        (if ($fl<? '0.0 g$x2$26167$1a@gJ)
                          ((case-lambda
                             ((g$fl$26188$1a@gJ)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$26188$1a@gJ)))
                           ($fl/ g$x1$26166$1a@gJ g$x2$26167$1a@gJ))
                          ($fl-
                            ((case-lambda
                               ((g$fl$26209$1a@gJ)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$26209$1a@gJ)))
                             ($fl/
                               g$x1$26166$1a@gJ
                               ($fl- g$x2$26167$1a@gJ)))))))
                     g$x1$26142$1a@gJ
                     g$x2$26143$1a@gJ))))
                g$x1$26119$1a@gJ
                g$x2$26120$1a@gJ)))))))))
   (g$flinteger?$25360$1a@gJ
     g$flinteger?$26630$1a@gJ
     (case-lambda
       ((g$fl$26210$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26210$1a@gJ))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$26210$1a@gJ)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$26231$1a@gJ g$x2$26232$1a@gJ)
                    ($fl-
                      g$x1$26231$1a@gJ
                      ($fl*
                        ((case-lambda
                           ((g$x1$26253$1a@gJ g$x2$26254$1a@gJ)
                            (if ($fl<? '0.0 g$x2$26254$1a@gJ)
                              ((case-lambda
                                 ((g$fl$26275$1a@gJ)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$26275$1a@gJ)))
                               ($fl/ g$x1$26253$1a@gJ g$x2$26254$1a@gJ))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$26296$1a@gJ)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26296$1a@gJ)))
                                 ($fl/
                                   g$x1$26253$1a@gJ
                                   ($fl- g$x2$26254$1a@gJ)))))))
                         g$x1$26231$1a@gJ
                         g$x2$26232$1a@gJ)
                        g$x2$26232$1a@gJ))))
                 g$fl$26210$1a@gJ
                 '1.0)))))))))
   (g$flfinite?$25361$1a@gJ
     g$flfinite?$26631$1a@gJ
     (case-lambda
       ((g$fl$26297$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26297$1a@gJ))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$26297$1a@gJ)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$26318$1a@gJ)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$26318$1a@gJ)))
                    g$fl$26297$1a@gJ)))))))))
   (g$residual-flinfinite?*$25377$1a@gJ
     g$residual-flinfinite?*$26632$1a@gJ
     (case-lambda
       ((g$fl$26339$1a@gJ)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$26339$1a@gJ))))
   (g$flinfinite?$25378$1a@gJ
     g$flinfinite?$26633$1a@gJ
     (case-lambda
       ((g$fl$26340$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26340$1a@gJ))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$26340$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26361$1a@gJ)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$26361$1a@gJ)))
               g$fl$26340$1a@gJ))))))))
   (g$flnan?$25379$1a@gJ
     g$flnan?$26634$1a@gJ
     (case-lambda
       ((g$fl$26362$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26362$1a@gJ))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$26362$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$26362$1a@gJ))))))))
   (g$flsin$25380$1a@gJ
     g$flsin$26635$1a@gJ
     (case-lambda
       ((g$fl$26363$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26363$1a@gJ))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$26363$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$26363$1a@gJ))))))))
   (g$flcos$25381$1a@gJ
     g$flcos$26636$1a@gJ
     (case-lambda
       ((g$fl$26364$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26364$1a@gJ))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$26364$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$26364$1a@gJ))))))))
   (g$fltan$25382$1a@gJ
     g$fltan$26637$1a@gJ
     (case-lambda
       ((g$fl$26365$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26365$1a@gJ))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$26365$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$26365$1a@gJ))))))))
   (g$flasin$25383$1a@gJ
     g$flasin$26638$1a@gJ
     (case-lambda
       ((g$fl$26366$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26366$1a@gJ))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$26366$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$26366$1a@gJ))))))))
   (g$flacos$25384$1a@gJ
     g$flacos$26639$1a@gJ
     (case-lambda
       ((g$fl$26367$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26367$1a@gJ))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$26367$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$26367$1a@gJ))))))))
   (g$flatan$25385$1a@gJ
     g$flatan$26640$1a@gJ
     (case-lambda
       ((g$fl$26368$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26368$1a@gJ))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$26368$1a@gJ)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$26368$1a@gJ)))
       ((g$fl1$26369$1a@gJ g$fl2$26370$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl1$26369$1a@gJ))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$26369$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$fl2$26370$1a@gJ))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$26370$1a@gJ)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$26369$1a@gJ
            g$fl2$26370$1a@gJ)))))
   (g$fllog$25386$1a@gJ
     g$fllog$26641$1a@gJ
     (case-lambda
       ((g$fl$26371$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26371$1a@gJ))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$26371$1a@gJ)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$26371$1a@gJ)))
       ((g$fl1$26372$1a@gJ g$fl2$26373$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl1$26372$1a@gJ))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$26372$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$fl2$26373$1a@gJ))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$26373$1a@gJ)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$26372$1a@gJ
            g$fl2$26373$1a@gJ)))))
   (g$flsqrt$25387$1a@gJ
     g$flsqrt$26642$1a@gJ
     (case-lambda
       ((g$fl$26374$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26374$1a@gJ))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$26374$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$26374$1a@gJ))))))))
   (g$flexp$25388$1a@gJ
     g$flexp$26643$1a@gJ
     (case-lambda
       ((g$fl$26375$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26375$1a@gJ))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$26375$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$26375$1a@gJ))))))))
   (g$flexpt$25389$1a@gJ
     g$flexpt$26644$1a@gJ
     (case-lambda
       ((g$fl$26376$1a@gJ g$n$26377$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26376$1a@gJ))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$26376$1a@gJ)
            (void))
          (if (not (g$flonum?$20624$1a@gJ g$n$26377$1a@gJ))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$26377$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$26376$1a@gJ
                g$n$26377$1a@gJ))))))))
   (g$flceiling$25390$1a@gJ
     g$flceiling$26645$1a@gJ
     (case-lambda
       ((g$fl$26378$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26378$1a@gJ))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$26378$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$26378$1a@gJ))))))))
   (g$residual-flfloor*$25406$1a@gJ
     g$residual-flfloor*$26646$1a@gJ
     (case-lambda
       ((g$fl$26399$1a@gJ)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$26399$1a@gJ))))
   (g$flfloor$25407$1a@gJ
     g$flfloor$26647$1a@gJ
     (case-lambda
       ((g$fl$26400$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26400$1a@gJ))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$26400$1a@gJ)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26421$1a@gJ)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$26421$1a@gJ)))
               g$fl$26400$1a@gJ))))))))
   (g$fltruncate$25408$1a@gJ
     g$fltruncate$26648$1a@gJ
     (case-lambda
       ((g$fl$26422$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26422$1a@gJ))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$26422$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$26422$1a@gJ))))))))
   (g$flround$25409$1a@gJ
     g$flround$26649$1a@gJ
     (case-lambda
       ((g$fl$26423$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26423$1a@gJ))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$26423$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$26423$1a@gJ))))))))
   (g$flabs$25410$1a@gJ
     g$flabs$26650$1a@gJ
     (case-lambda
       ((g$fl$26424$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$fl$26424$1a@gJ))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$26424$1a@gJ)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$26424$1a@gJ))))))))
   (g$flpositive?$25411$1a@gJ
     g$flpositive?$26651$1a@gJ
     (case-lambda
       ((g$r$26425$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$r$26425$1a@gJ))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$26425$1a@gJ)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$26425$1a@gJ))))))))
   (g$flnegative?$25412$1a@gJ
     g$flnegative?$26652$1a@gJ
     (case-lambda
       ((g$r$26426$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$r$26426$1a@gJ))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$26426$1a@gJ)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$26426$1a@gJ))))))))
   (g$flzero?$25413$1a@gJ
     g$flzero?$26653$1a@gJ
     (case-lambda
       ((g$r$26427$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$r$26427$1a@gJ))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$26427$1a@gJ)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$26427$1a@gJ))))))))
   (g$fleven?$25414$1a@gJ
     g$fleven?$26654$1a@gJ
     (case-lambda
       ((g$n$26428$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$n$26428$1a@gJ))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$26428$1a@gJ)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$21659$1a@gJ
                           g$n$26428$1a@gJ))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$26428$1a@gJ)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$26449$1a@gJ g$x2$26450$1a@gJ)
                      ($fl-
                        g$x1$26449$1a@gJ
                        ($fl*
                          ((case-lambda
                             ((g$x1$26471$1a@gJ g$x2$26472$1a@gJ)
                              (if ($fl<? '0.0 g$x2$26472$1a@gJ)
                                ((case-lambda
                                   ((g$fl$26493$1a@gJ)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26493$1a@gJ)))
                                 ($fl/
                                   g$x1$26471$1a@gJ
                                   g$x2$26472$1a@gJ))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$26514$1a@gJ)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$26514$1a@gJ)))
                                   ($fl/
                                     g$x1$26471$1a@gJ
                                     ($fl- g$x2$26472$1a@gJ)))))))
                           g$x1$26449$1a@gJ
                           g$x2$26450$1a@gJ)
                          g$x2$26450$1a@gJ))))
                   g$n$26428$1a@gJ
                   '2.0))))))))))
   (g$flodd?$25415$1a@gJ
     g$flodd?$26655$1a@gJ
     (case-lambda
       ((g$n$26515$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$n$26515$1a@gJ))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$26515$1a@gJ)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$21659$1a@gJ
                           g$n$26515$1a@gJ))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$26515$1a@gJ)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$26536$1a@gJ g$x2$26537$1a@gJ)
                      ($fl-
                        g$x1$26536$1a@gJ
                        ($fl*
                          ((case-lambda
                             ((g$x1$26558$1a@gJ g$x2$26559$1a@gJ)
                              (if ($fl<? '0.0 g$x2$26559$1a@gJ)
                                ((case-lambda
                                   ((g$fl$26580$1a@gJ)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26580$1a@gJ)))
                                 ($fl/
                                   g$x1$26558$1a@gJ
                                   g$x2$26559$1a@gJ))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$26601$1a@gJ)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$26601$1a@gJ)))
                                   ($fl/
                                     g$x1$26558$1a@gJ
                                     ($fl- g$x2$26559$1a@gJ)))))))
                           g$x1$26536$1a@gJ
                           g$x2$26537$1a@gJ)
                          g$x2$26537$1a@gJ))))
                   g$n$26515$1a@gJ
                   '2.0))))))))))
   (g$flmax$25416$1a@gJ
     g$flmax$26656$1a@gJ
     (case-lambda
       ((g$a$26602$1a@gJ . g$rest$26603$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$a$26602$1a@gJ))
            (assertion-violation 'flmax '"not a flonum" g$a$26602$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            (case-lambda
              ((g$a$26604$1a@gJ g$b$26605$1a@gJ)
               (if (g$fl<?$25302$1a@gJ g$a$26604$1a@gJ g$b$26605$1a@gJ)
                 g$b$26605$1a@gJ
                 g$a$26604$1a@gJ)))
            g$a$26602$1a@gJ
            g$rest$26603$1a@gJ)))))
   (g$flmin$25417$1a@gJ
     g$flmin$26657$1a@gJ
     (case-lambda
       ((g$a$26606$1a@gJ . g$rest$26607$1a@gJ)
        (begin
          (if (not (g$flonum?$20624$1a@gJ g$a$26606$1a@gJ))
            (assertion-violation 'flmin '"not a flonum" g$a$26606$1a@gJ)
            (void))
          (g$fold-left$20201$1a@gJ
            (case-lambda
              ((g$a$26608$1a@gJ g$b$26609$1a@gJ)
               (if (g$fl>?$25304$1a@gJ g$a$26608$1a@gJ g$b$26609$1a@gJ)
                 g$b$26609$1a@gJ
                 g$a$26608$1a@gJ)))
            g$a$26606$1a@gJ
            g$rest$26607$1a@gJ))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$26659$1a@gJ
     g$using$26685$1a@gJ
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$26660$1a@gJ
     g$standard-error-port$26686$1a@gJ
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$26661$1a@gJ
     g$standard-input-port$26687$1a@gJ
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$26662$1a@gJ
     g$standard-output-port$26688$1a@gJ
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$26663$1a@gJ
     g$native-eol-style$26689$1a@gJ
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$26664$1a@gJ
     g$buffer-mode?$26690$1a@gJ
     (case-lambda
       ((g$obj$26673$1a@gJ)
        (if (g$symbol?$20620$1a@gJ g$obj$26673$1a@gJ)
          (if (g$memq$20187$1a@gJ g$obj$26673$1a@gJ '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$26665$1a@gJ
     g$put-datum$26691$1a@gJ
     (case-lambda
       ((g$p$26674$1a@gJ g$datum$26675$1a@gJ)
        (write g$datum$26675$1a@gJ g$p$26674$1a@gJ))))
   (g$get-datum$26666$1a@gJ g$get-datum$26692$1a@gJ read)
   (g$get-output-string$26667$1a@gJ
     g$get-output-string$26693$1a@gJ
     (case-lambda
       ((g$port$26676$1a@gJ)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$26676$1a@gJ))))
   (g$open-output-string$26668$1a@gJ
     g$open-output-string$26694$1a@gJ
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$26669$1a@gJ
     g$open-string-output-port$26695$1a@gJ
     (case-lambda
       (()
        ((case-lambda
           ((g$p$26677$1a@gJ)
            (values
              g$p$26677$1a@gJ
              (case-lambda
                (()
                 (g$get-output-string$26667$1a@gJ g$p$26677$1a@gJ))))))
         (g$open-output-string$26668$1a@gJ)))))
   (g$port?$26670$1a@gJ
     g$port?$26696$1a@gJ
     (case-lambda
       ((g$obj$26678$1a@gJ)
        ((case-lambda
           ((g$t$26679$1a@gJ)
            (if g$t$26679$1a@gJ
              g$t$26679$1a@gJ
              (begin '#f (binary-port? g$obj$26678$1a@gJ)))))
         (textual-port? g$obj$26678$1a@gJ)))))
   (g$call-with-string-output-port$26671$1a@gJ
     g$call-with-string-output-port$26697$1a@gJ
     (case-lambda
       ((g$proc$26680$1a@gJ)
        ((case-lambda
           ((g$p$26681$1a@gJ)
            (begin
              (g$call-with-port$26672$1a@gJ
                g$p$26681$1a@gJ
                g$proc$26680$1a@gJ)
              (g$get-output-string$26667$1a@gJ g$p$26681$1a@gJ))))
         (g$open-output-string$26668$1a@gJ)))))
   (g$call-with-port$26672$1a@gJ
     g$call-with-port$26698$1a@gJ
     (case-lambda
       ((g$port$26682$1a@gJ g$proc$26683$1a@gJ)
        ((case-lambda
           ((g$r$26684$1a@gJ)
            (begin (close-port g$port$26682$1a@gJ) g$r$26684$1a@gJ)))
         (g$proc$26683$1a@gJ g$port$26682$1a@gJ))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$26699$1a@gJ
     g$peek-char$26754$1a@gJ
     (case-lambda
       (() (g$peek-char$26699$1a@gJ (current-input-port)))
       ((g$port$26726$1a@gJ) (lookahead-char g$port$26726$1a@gJ))))
   (g$read-char$26700$1a@gJ
     g$read-char$26755$1a@gJ
     (case-lambda
       (() (g$read-char$26700$1a@gJ (current-input-port)))
       ((g$port$26727$1a@gJ) (get-char g$port$26727$1a@gJ))))
   (g$write-char$26701$1a@gJ
     g$write-char$26756$1a@gJ
     (case-lambda
       ((g$chr$26728$1a@gJ)
        (g$write-char$26701$1a@gJ
          g$chr$26728$1a@gJ
          (current-output-port)))
       ((g$chr$26729$1a@gJ g$port$26730$1a@gJ)
        (put-char g$port$26730$1a@gJ g$chr$26729$1a@gJ))))
   (g$with-input-from-file$26721$1a@gJ
     g$with-input-from-file$26757$1a@gJ
     (case-lambda
       ((g$filename$26731$1a@gJ g$thunk$26732$1a@gJ)
        ((case-lambda
           ((g$current-input-port$26735$1a@gJ g$t$26736$1a@gJ)
            ((case-lambda
               ((g$swap$26737$1a@gJ)
                (dynamic-wind
                  g$swap$26737$1a@gJ
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$26732$1a@gJ)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$26737$1a@gJ)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$26738$1a@gJ)
                    (begin
                      (g$current-input-port$26735$1a@gJ g$t$26736$1a@gJ)
                      (set! g$t$26736$1a@gJ g$t$26738$1a@gJ))))
                 (g$current-input-port$26735$1a@gJ)))))))
         current-input-port
         (open-input-file g$filename$26731$1a@gJ)))))
   (g$with-output-to-file$26722$1a@gJ
     g$with-output-to-file$26758$1a@gJ
     (case-lambda
       ((g$filename$26739$1a@gJ g$thunk$26740$1a@gJ)
        ((case-lambda
           ((g$current-output-port$26743$1a@gJ g$t$26744$1a@gJ)
            ((case-lambda
               ((g$swap$26745$1a@gJ)
                (dynamic-wind
                  g$swap$26745$1a@gJ
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$26740$1a@gJ)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$26745$1a@gJ)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$26746$1a@gJ)
                    (begin
                      (g$current-output-port$26743$1a@gJ
                        g$t$26744$1a@gJ)
                      (set! g$t$26744$1a@gJ g$t$26746$1a@gJ))))
                 (g$current-output-port$26743$1a@gJ)))))))
         current-output-port
         (open-output-file g$filename$26739$1a@gJ)))))
   (g$call-with-input-file$26723$1a@gJ
     g$call-with-input-file$26759$1a@gJ
     (case-lambda
       ((g$filename$26747$1a@gJ g$proc$26748$1a@gJ)
        ((case-lambda
           ((g$p$26749$1a@gJ)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$26748$1a@gJ g$p$26749$1a@gJ)))
              (case-lambda (() (close-input-port g$p$26749$1a@gJ))))))
         (open-input-file g$filename$26747$1a@gJ)))))
   (g$call-with-output-file$26724$1a@gJ
     g$call-with-output-file$26760$1a@gJ
     (case-lambda
       ((g$filename$26750$1a@gJ g$proc$26751$1a@gJ)
        ((case-lambda
           ((g$p$26752$1a@gJ)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$26751$1a@gJ g$p$26752$1a@gJ)))
              (case-lambda (() (close-output-port g$p$26752$1a@gJ))))))
         (open-output-file g$filename$26750$1a@gJ)))))
   (g$newline$26725$1a@gJ
     g$newline$26761$1a@gJ
     (case-lambda
       (() (g$newline$26725$1a@gJ (current-output-port)))
       ((g$port$26753$1a@gJ) (display '"
" g$port$26753$1a@gJ)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$8984$26762$1a@gJ
     g$8984$26875$1a@gJ
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$8986$26763$1a@gJ g$8986$26876$1a@gJ '#f)
   (g$8985$26764$1a@gJ
     g$8985$26877$1a@gJ
     (make-record-constructor-descriptor
       g$8984$26762$1a@gJ
       '#f
       g$8986$26763$1a@gJ))
   (g$enum?$26767$1a@gJ
     g$enum?$26878$1a@gJ
     (record-predicate g$8984$26762$1a@gJ))
   (g$make-enum$26768$1a@gJ
     g$make-enum$26879$1a@gJ
     (record-constructor g$8985$26764$1a@gJ))
   (g$enum-value$26769$1a@gJ
     g$enum-value$26880$1a@gJ
     (record-accessor g$8984$26762$1a@gJ '0))
   (g$enum-info$26770$1a@gJ
     g$enum-info$26881$1a@gJ
     (record-accessor g$8984$26762$1a@gJ '1))
   (g$8995$26771$1a@gJ
     g$8995$26882$1a@gJ
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$8997$26772$1a@gJ g$8997$26883$1a@gJ '#f)
   (g$8996$26773$1a@gJ
     g$8996$26884$1a@gJ
     (make-record-constructor-descriptor
       g$8995$26771$1a@gJ
       '#f
       g$8997$26772$1a@gJ))
   (g$enum-universe?$26776$1a@gJ
     g$enum-universe?$26885$1a@gJ
     (record-predicate g$8995$26771$1a@gJ))
   (g$make-enum-universe$26777$1a@gJ
     g$make-enum-universe$26886$1a@gJ
     (record-constructor g$8996$26773$1a@gJ))
   (g$enum-universe-id$26778$1a@gJ
     g$enum-universe-id$26887$1a@gJ
     (record-accessor g$8995$26771$1a@gJ '0))
   (g$enum-universe-symbols$26779$1a@gJ
     g$enum-universe-symbols$26888$1a@gJ
     (record-accessor g$8995$26771$1a@gJ '1))
   (g$enum-universe-mapping$26780$1a@gJ
     g$enum-universe-mapping$26889$1a@gJ
     (record-accessor g$8995$26771$1a@gJ '2))
   (g$enum-universe-value$26781$1a@gJ
     g$enum-universe-value$26890$1a@gJ
     (record-accessor g$8995$26771$1a@gJ '3))
   (g$enum-type=?$26782$1a@gJ
     g$enum-type=?$26891$1a@gJ
     (case-lambda
       ((g$enumset1$26804$1a@gJ g$enumset2$26805$1a@gJ)
        (eq? (g$enum-universe-id$26778$1a@gJ
               (g$enum-info$26770$1a@gJ g$enumset1$26804$1a@gJ))
             (g$enum-universe-id$26778$1a@gJ
               (g$enum-info$26770$1a@gJ g$enumset2$26805$1a@gJ))))))
   (g$get-symbols$26783$1a@gJ
     g$get-symbols$26892$1a@gJ
     (case-lambda
       ((g$enumset$26806$1a@gJ)
        (g$enum-universe-symbols$26779$1a@gJ
          (g$enum-info$26770$1a@gJ g$enumset$26806$1a@gJ)))))
   (g$get-value$26784$1a@gJ
     g$get-value$26893$1a@gJ
     (case-lambda
       ((g$enumset$26807$1a@gJ g$s$26808$1a@gJ)
        (g$hashtable-ref$20759$1a@gJ
          (g$enum-universe-mapping$26780$1a@gJ
            (g$enum-info$26770$1a@gJ g$enumset$26807$1a@gJ))
          g$s$26808$1a@gJ
          '#f))))
   (g$assert-enum$26785$1a@gJ
     g$assert-enum$26894$1a@gJ
     (case-lambda
       ((g$who$26809$1a@gJ g$enumset$26810$1a@gJ)
        (if (not (g$enum?$26767$1a@gJ g$enumset$26810$1a@gJ))
          (assertion-violation
            g$who$26809$1a@gJ
            '"not an enumeration"
            g$enumset$26810$1a@gJ)
          (void)))))
   (g$make-info$26786$1a@gJ
     g$make-info$26895$1a@gJ
     (case-lambda
       ((g$symbols$26811$1a@gJ)
        ((case-lambda
           ((g$ht$26812$1a@gJ)
            ((letrec ((g$f$26813$1a@gJ
                        (case-lambda
                          ((g$s$26814$1a@gJ
                             g$a$26815$1a@gJ
                             g$mask$26816$1a@gJ)
                           (if (null? g$s$26814$1a@gJ)
                             (values
                               (reverse! g$a$26815$1a@gJ)
                               g$ht$26812$1a@gJ
                               (- g$mask$26816$1a@gJ '1))
                             ((case-lambda
                                ((g$n$26817$1a@gJ)
                                 (if (g$symbol?$20620$1a@gJ
                                       g$n$26817$1a@gJ)
                                   (if (g$hashtable-contains?$20762$1a@gJ
                                         g$ht$26812$1a@gJ
                                         g$n$26817$1a@gJ)
                                     (g$f$26813$1a@gJ
                                       (cdr g$s$26814$1a@gJ)
                                       g$a$26815$1a@gJ
                                       g$mask$26816$1a@gJ)
                                     (begin
                                       (g$hashtable-set!$20760$1a@gJ
                                         g$ht$26812$1a@gJ
                                         g$n$26817$1a@gJ
                                         g$mask$26816$1a@gJ)
                                       (g$f$26813$1a@gJ
                                         (cdr g$s$26814$1a@gJ)
                                         (cons
                                           g$n$26817$1a@gJ
                                           g$a$26815$1a@gJ)
                                         (g$bitwise-arithmetic-shift-left$22824$1a@gJ
                                           g$mask$26816$1a@gJ
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$26817$1a@gJ))))
                              (car g$s$26814$1a@gJ)))))))
               g$f$26813$1a@gJ)
             g$symbols$26811$1a@gJ
             '()
             '1)))
         (g$make-eq-hashtable$20756$1a@gJ)))))
   (g$make-name$26787$1a@gJ
     g$make-name$26896$1a@gJ
     (case-lambda
       ((g$symbols$26818$1a@gJ)
        (g$string->symbol$20641$1a@gJ
          (g$format$26935$1a@gJ '"~a" g$symbols$26818$1a@gJ)))))
   (g$make-enumeration$26788$1a@gJ
     g$make-enumeration$26897$1a@gJ
     (case-lambda
       ((g$symbols$26819$1a@gJ)
        (call-with-values
          (case-lambda
            (() (g$make-info$26786$1a@gJ g$symbols$26819$1a@gJ)))
          (case-lambda
            ((g$s$26823$1a@gJ g$mapping$26824$1a@gJ g$mask$26825$1a@gJ)
             ((case-lambda
                ((g$mask$26826$1a@gJ
                   g$mapping$26827$1a@gJ
                   g$s$26828$1a@gJ)
                 (g$make-enum$26768$1a@gJ
                   g$mask$26826$1a@gJ
                   (g$make-enum-universe$26777$1a@gJ
                     (g$make-name$26787$1a@gJ g$s$26828$1a@gJ)
                     g$s$26828$1a@gJ
                     g$mapping$26827$1a@gJ
                     g$mask$26826$1a@gJ))))
              g$mask$26825$1a@gJ
              g$mapping$26824$1a@gJ
              g$s$26823$1a@gJ)))))))
   (g$enum-set-universe$26789$1a@gJ
     g$enum-set-universe$26898$1a@gJ
     (case-lambda
       ((g$enumset$26829$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-universe
            g$enumset$26829$1a@gJ)
          ((case-lambda
             ((g$ei$26830$1a@gJ)
              (g$make-enum$26768$1a@gJ
                (g$enum-universe-value$26781$1a@gJ g$ei$26830$1a@gJ)
                g$ei$26830$1a@gJ)))
           (g$enum-info$26770$1a@gJ g$enumset$26829$1a@gJ))))))
   (g$enum-set-indexer$26790$1a@gJ
     g$enum-set-indexer$26899$1a@gJ
     (case-lambda
       ((g$enumset$26831$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-indexer
            g$enumset$26831$1a@gJ)
          (case-lambda
            ((g$symbol$26832$1a@gJ)
             (begin
               (if (not (g$symbol?$20620$1a@gJ g$symbol$26832$1a@gJ))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$26832$1a@gJ)
                 (void))
               ((case-lambda
                  ((g$v$26833$1a@gJ)
                   (if g$v$26833$1a@gJ
                     (- (g$bitwise-length$22817$1a@gJ g$v$26833$1a@gJ)
                        '1)
                     '#f)))
                (g$get-value$26784$1a@gJ
                  g$enumset$26831$1a@gJ
                  g$symbol$26832$1a@gJ)))))))))
   (g$enum-set-constructor$26791$1a@gJ
     g$enum-set-constructor$26900$1a@gJ
     (case-lambda
       ((g$enumset$26834$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-constructor
            g$enumset$26834$1a@gJ)
          (case-lambda
            ((g$symbols$26835$1a@gJ)
             ((letrec ((g$f$26836$1a@gJ
                         (case-lambda
                           ((g$v$26837$1a@gJ g$s$26838$1a@gJ)
                            (if (null? g$s$26838$1a@gJ)
                              (g$make-enum$26768$1a@gJ
                                g$v$26837$1a@gJ
                                (g$enum-info$26770$1a@gJ
                                  g$enumset$26834$1a@gJ))
                              ((case-lambda
                                 ((g$n$26839$1a@gJ)
                                  (if (g$symbol?$20620$1a@gJ
                                        g$n$26839$1a@gJ)
                                    ((case-lambda
                                       ((g$v*$26840$1a@gJ)
                                        (if g$v*$26840$1a@gJ
                                          (g$f$26836$1a@gJ
                                            (g$bitwise-ior$22814$1a@gJ
                                              g$v$26837$1a@gJ
                                              g$v*$26840$1a@gJ)
                                            (cdr g$s$26838$1a@gJ))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$26839$1a@gJ))))
                                     (g$get-value$26784$1a@gJ
                                       g$enumset$26834$1a@gJ
                                       g$n$26839$1a@gJ))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$26839$1a@gJ))))
                               (car g$s$26838$1a@gJ)))))))
                g$f$26836$1a@gJ)
              '0
              g$symbols$26835$1a@gJ)))))))
   (g$enum-set->list$26792$1a@gJ
     g$enum-set->list$26901$1a@gJ
     (case-lambda
       ((g$enumset$26841$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set->list
            g$enumset$26841$1a@gJ)
          ((case-lambda
             ((g$value$26842$1a@gJ)
              ((letrec ((g$f$26843$1a@gJ
                          (case-lambda
                            ((g$s$26844$1a@gJ g$l$26845$1a@gJ)
                             (if (null? g$s$26844$1a@gJ)
                               (reverse! g$l$26845$1a@gJ)
                               (if (g$zero?$21660$1a@gJ
                                     (g$bitwise-and$22813$1a@gJ
                                       (g$get-value$26784$1a@gJ
                                         g$enumset$26841$1a@gJ
                                         (car g$s$26844$1a@gJ))
                                       g$value$26842$1a@gJ))
                                 (g$f$26843$1a@gJ
                                   (cdr g$s$26844$1a@gJ)
                                   g$l$26845$1a@gJ)
                                 (g$f$26843$1a@gJ
                                   (cdr g$s$26844$1a@gJ)
                                   (cons
                                     (car g$s$26844$1a@gJ)
                                     g$l$26845$1a@gJ))))))))
                 g$f$26843$1a@gJ)
               (g$get-symbols$26783$1a@gJ g$enumset$26841$1a@gJ)
               '())))
           (g$enum-value$26769$1a@gJ g$enumset$26841$1a@gJ))))))
   (g$enum-set-member?$26793$1a@gJ
     g$enum-set-member?$26902$1a@gJ
     (case-lambda
       ((g$symbol$26846$1a@gJ g$enumset$26847$1a@gJ)
        (begin
          (if (not (g$symbol?$20620$1a@gJ g$symbol$26846$1a@gJ))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$26846$1a@gJ)
            (void))
          (g$assert-enum$26785$1a@gJ
            'enum-set-member?
            g$enumset$26847$1a@gJ)
          ((case-lambda
             ((g$v$26848$1a@gJ)
              (if g$v$26848$1a@gJ
                (not (g$zero?$21660$1a@gJ
                       (g$bitwise-and$22813$1a@gJ
                         g$v$26848$1a@gJ
                         (g$enum-value$26769$1a@gJ
                           g$enumset$26847$1a@gJ))))
                '#f)))
           (g$get-value$26784$1a@gJ
             g$enumset$26847$1a@gJ
             g$symbol$26846$1a@gJ))))))
   (g$enum-set-subset?$26794$1a@gJ
     g$enum-set-subset?$26903$1a@gJ
     (case-lambda
       ((g$enumset1$26849$1a@gJ g$enumset2$26850$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-subset?
            g$enumset1$26849$1a@gJ)
          (g$assert-enum$26785$1a@gJ
            'enum-set-subset?
            g$enumset2$26850$1a@gJ)
          ((case-lambda
             ((g$v1$26851$1a@gJ g$v2$26852$1a@gJ)
              (if (g$enum-type=?$26782$1a@gJ
                    g$enumset1$26849$1a@gJ
                    g$enumset2$26850$1a@gJ)
                (g$=$21669$1a@gJ
                  (g$bitwise-and$22813$1a@gJ
                    g$v1$26851$1a@gJ
                    g$v2$26852$1a@gJ)
                  g$v1$26851$1a@gJ)
                ((letrec ((g$f$26853$1a@gJ
                            (case-lambda
                              ((g$s$26854$1a@gJ)
                               (if (null? g$s$26854$1a@gJ)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$26855$1a@gJ
                                       g$v2*$26856$1a@gJ)
                                     (if g$v2*$26856$1a@gJ
                                       ((case-lambda
                                          ((g$has1$26857$1a@gJ
                                             g$has2$26858$1a@gJ)
                                           (if (if g$has1$26857$1a@gJ
                                                 (begin
                                                   '#f
                                                   (not g$has2$26858$1a@gJ))
                                                 '#f)
                                             '#f
                                             (g$f$26853$1a@gJ
                                               (cdr g$s$26854$1a@gJ)))))
                                        (not (g$zero?$21660$1a@gJ
                                               (g$bitwise-and$22813$1a@gJ
                                                 g$v1$26851$1a@gJ
                                                 g$v1*$26855$1a@gJ)))
                                        (not (g$zero?$21660$1a@gJ
                                               (g$bitwise-and$22813$1a@gJ
                                                 g$v2$26852$1a@gJ
                                                 g$v2*$26856$1a@gJ))))
                                       '#f)))
                                  (g$get-value$26784$1a@gJ
                                    g$enumset1$26849$1a@gJ
                                    (car g$s$26854$1a@gJ))
                                  (g$get-value$26784$1a@gJ
                                    g$enumset2$26850$1a@gJ
                                    (car g$s$26854$1a@gJ))))))))
                   g$f$26853$1a@gJ)
                 (g$get-symbols$26783$1a@gJ g$enumset1$26849$1a@gJ)))))
           (g$enum-value$26769$1a@gJ g$enumset1$26849$1a@gJ)
           (g$enum-value$26769$1a@gJ g$enumset2$26850$1a@gJ))))))
   (g$enum-set=?$26795$1a@gJ
     g$enum-set=?$26904$1a@gJ
     (case-lambda
       ((g$enumset1$26859$1a@gJ g$enumset2$26860$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ 'enum-set=? g$enumset1$26859$1a@gJ)
          (g$assert-enum$26785$1a@gJ 'enum-set=? g$enumset2$26860$1a@gJ)
          (if (g$enum-set-subset?$26794$1a@gJ
                g$enumset1$26859$1a@gJ
                g$enumset2$26860$1a@gJ)
            (begin
              '#f
              (g$enum-set-subset?$26794$1a@gJ
                g$enumset2$26860$1a@gJ
                g$enumset1$26859$1a@gJ))
            '#f)))))
   (g$enum-set-union$26796$1a@gJ
     g$enum-set-union$26905$1a@gJ
     (case-lambda
       ((g$enumset1$26861$1a@gJ g$enumset2$26862$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-union
            g$enumset1$26861$1a@gJ)
          (g$assert-enum$26785$1a@gJ
            'enum-set-union
            g$enumset2$26862$1a@gJ)
          (if (g$enum-type=?$26782$1a@gJ
                g$enumset1$26861$1a@gJ
                g$enumset2$26862$1a@gJ)
            (g$make-enum$26768$1a@gJ
              (g$bitwise-ior$22814$1a@gJ
                (g$enum-value$26769$1a@gJ g$enumset1$26861$1a@gJ)
                (g$enum-value$26769$1a@gJ g$enumset2$26862$1a@gJ))
              (g$enum-info$26770$1a@gJ g$enumset1$26861$1a@gJ))
            '#f)))))
   (g$enum-set-intersection$26797$1a@gJ
     g$enum-set-intersection$26906$1a@gJ
     (case-lambda
       ((g$enumset1$26863$1a@gJ g$enumset2$26864$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-intersection
            g$enumset1$26863$1a@gJ)
          (g$assert-enum$26785$1a@gJ
            'enum-set-intersection
            g$enumset2$26864$1a@gJ)
          (if (g$enum-type=?$26782$1a@gJ
                g$enumset1$26863$1a@gJ
                g$enumset2$26864$1a@gJ)
            (g$make-enum$26768$1a@gJ
              (g$bitwise-and$22813$1a@gJ
                (g$enum-value$26769$1a@gJ g$enumset1$26863$1a@gJ)
                (g$enum-value$26769$1a@gJ g$enumset2$26864$1a@gJ))
              (g$enum-info$26770$1a@gJ g$enumset1$26863$1a@gJ))
            '#f)))))
   (g$enum-set-difference$26798$1a@gJ
     g$enum-set-difference$26907$1a@gJ
     (case-lambda
       ((g$enumset1$26865$1a@gJ g$enumset2$26866$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-difference
            g$enumset1$26865$1a@gJ)
          (g$assert-enum$26785$1a@gJ
            'enum-set-difference
            g$enumset2$26866$1a@gJ)
          (if (g$enum-type=?$26782$1a@gJ
                g$enumset1$26865$1a@gJ
                g$enumset2$26866$1a@gJ)
            (g$make-enum$26768$1a@gJ
              (g$bitwise-and$22813$1a@gJ
                (g$enum-value$26769$1a@gJ g$enumset1$26865$1a@gJ)
                (g$bitwise-not$22812$1a@gJ
                  (g$enum-value$26769$1a@gJ g$enumset2$26866$1a@gJ)))
              (g$enum-info$26770$1a@gJ g$enumset1$26865$1a@gJ))
            '#f)))))
   (g$enum-set-complement$26799$1a@gJ
     g$enum-set-complement$26908$1a@gJ
     (case-lambda
       ((g$enumset$26867$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-complement
            g$enumset$26867$1a@gJ)
          (g$make-enum$26768$1a@gJ
            (g$bitwise-not$22812$1a@gJ
              (g$enum-value$26769$1a@gJ g$enumset$26867$1a@gJ))
            (g$enum-info$26770$1a@gJ g$enumset$26867$1a@gJ))))))
   (g$enum-set-projection$26800$1a@gJ
     g$enum-set-projection$26909$1a@gJ
     (case-lambda
       ((g$enumset1$26868$1a@gJ g$enumset2$26869$1a@gJ)
        (begin
          (g$assert-enum$26785$1a@gJ
            'enum-set-projection
            g$enumset1$26868$1a@gJ)
          (g$assert-enum$26785$1a@gJ
            'enum-set-projection
            g$enumset2$26869$1a@gJ)
          ((case-lambda
             ((g$v1$26870$1a@gJ)
              ((letrec ((g$f$26871$1a@gJ
                          (case-lambda
                            ((g$s$26872$1a@gJ g$v$26873$1a@gJ)
                             (if (null? g$s$26872$1a@gJ)
                               (g$make-enum$26768$1a@gJ
                                 g$v$26873$1a@gJ
                                 (g$enum-info$26770$1a@gJ
                                   g$enumset2$26869$1a@gJ))
                               (if (g$zero?$21660$1a@gJ
                                     (g$bitwise-and$22813$1a@gJ
                                       g$v1$26870$1a@gJ
                                       (g$get-value$26784$1a@gJ
                                         g$enumset1$26868$1a@gJ
                                         (car g$s$26872$1a@gJ))))
                                 (g$f$26871$1a@gJ
                                   (cdr g$s$26872$1a@gJ)
                                   g$v$26873$1a@gJ)
                                 ((case-lambda
                                    ((g$v2$26874$1a@gJ)
                                     (if g$v2$26874$1a@gJ
                                       (g$f$26871$1a@gJ
                                         (cdr g$s$26872$1a@gJ)
                                         (g$bitwise-ior$22814$1a@gJ
                                           g$v$26873$1a@gJ
                                           g$v2$26874$1a@gJ))
                                       (g$f$26871$1a@gJ
                                         (cdr g$s$26872$1a@gJ)
                                         g$v$26873$1a@gJ))))
                                  (g$get-value$26784$1a@gJ
                                    g$enumset2$26869$1a@gJ
                                    (car g$s$26872$1a@gJ)))))))))
                 g$f$26871$1a@gJ)
               (g$get-symbols$26783$1a@gJ g$enumset1$26868$1a@gJ)
               '0)))
           (g$enum-value$26769$1a@gJ g$enumset1$26868$1a@gJ)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$26801$1a@gJ g$p$26802$1a@gJ g$wr$26803$1a@gJ)
       (g$fprintf$26934$1a@gJ
         g$p$26802$1a@gJ
         '"#[enum-set ~a]"
         (g$enum-set->list$26792$1a@gJ g$x$26801$1a@gJ))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$26910$1a@gJ
     g$dofmt$26932$1a@gJ
     (case-lambda
       ((g$p$26914$1a@gJ g$cntl$26915$1a@gJ g$args$26916$1a@gJ)
        ((case-lambda
           ((g$nmax$26917$1a@gJ)
            ((letrec ((g$loop$26918$1a@gJ
                        (case-lambda
                          ((g$n$26919$1a@gJ g$a$26920$1a@gJ)
                           (if (g$fx<=?$25074$1a@gJ
                                 g$n$26919$1a@gJ
                                 g$nmax$26917$1a@gJ)
                             ((case-lambda
                                ((g$c$26921$1a@gJ)
                                 (if (if (g$char=?$20699$1a@gJ
                                           g$c$26921$1a@gJ
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$25073$1a@gJ
                                           g$n$26919$1a@gJ
                                           g$nmax$26917$1a@gJ))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$26922$1a@gJ)
                                       (if (eqv? g$t$26922$1a@gJ '#\a)
                                         (begin
                                           (display
                                             (car g$a$26920$1a@gJ)
                                             g$p$26914$1a@gJ)
                                           (g$loop$26918$1a@gJ
                                             (g$fx+$25059$1a@gJ
                                               g$n$26919$1a@gJ
                                               '2)
                                             (cdr g$a$26920$1a@gJ)))
                                         (if (eqv? g$t$26922$1a@gJ '#\s)
                                           (begin
                                             (write
                                               (car g$a$26920$1a@gJ)
                                               g$p$26914$1a@gJ)
                                             (g$loop$26918$1a@gJ
                                               (g$fx+$25059$1a@gJ
                                                 g$n$26919$1a@gJ
                                                 '2)
                                               (cdr g$a$26920$1a@gJ)))
                                           (if (eqv?
                                                 g$t$26922$1a@gJ
                                                 '#\b)
                                             (begin
                                               (write
                                                 (g$number->string$21668$1a@gJ
                                                   (car g$a$26920$1a@gJ)
                                                   '2)
                                                 g$p$26914$1a@gJ)
                                               (g$loop$26918$1a@gJ
                                                 (g$fx+$25059$1a@gJ
                                                   g$n$26919$1a@gJ
                                                   '2)
                                                 (cdr g$a$26920$1a@gJ)))
                                             (if (eqv?
                                                   g$t$26922$1a@gJ
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (g$number->string$21668$1a@gJ
                                                     (car g$a$26920$1a@gJ)
                                                     '8)
                                                   g$p$26914$1a@gJ)
                                                 (g$loop$26918$1a@gJ
                                                   (g$fx+$25059$1a@gJ
                                                     g$n$26919$1a@gJ
                                                     '2)
                                                   (cdr g$a$26920$1a@gJ)))
                                               (if (eqv?
                                                     g$t$26922$1a@gJ
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (g$number->string$21668$1a@gJ
                                                       (car g$a$26920$1a@gJ)
                                                       '16)
                                                     g$p$26914$1a@gJ)
                                                   (g$loop$26918$1a@gJ
                                                     (g$fx+$25059$1a@gJ
                                                       g$n$26919$1a@gJ
                                                       '2)
                                                     (cdr g$a$26920$1a@gJ)))
                                                 (if (eqv?
                                                       g$t$26922$1a@gJ
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (g$number->string$21668$1a@gJ
                                                         (car g$a$26920$1a@gJ)
                                                         '10)
                                                       g$p$26914$1a@gJ)
                                                     (g$loop$26918$1a@gJ
                                                       (g$fx+$25059$1a@gJ
                                                         g$n$26919$1a@gJ
                                                         '2)
                                                       (cdr g$a$26920$1a@gJ)))
                                                   (if (eqv?
                                                         g$t$26922$1a@gJ
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$26756$1a@gJ
                                                         '#\~
                                                         g$p$26914$1a@gJ)
                                                       (g$loop$26918$1a@gJ
                                                         (g$fx+$25059$1a@gJ
                                                           g$n$26919$1a@gJ
                                                           '2)
                                                         g$a$26920$1a@gJ))
                                                     (begin
                                                       '#f
                                                       (g$write-char$26756$1a@gJ
                                                         g$c$26921$1a@gJ
                                                         g$p$26914$1a@gJ)
                                                       (g$loop$26918$1a@gJ
                                                         (g$fx+$25059$1a@gJ
                                                           g$n$26919$1a@gJ
                                                           '1)
                                                         g$a$26920$1a@gJ)))))))))))
                                    (g$string-ref$20629$1a@gJ
                                      g$cntl$26915$1a@gJ
                                      (g$fx+$25059$1a@gJ
                                        g$n$26919$1a@gJ
                                        '1)))
                                   (begin
                                     (g$write-char$26756$1a@gJ
                                       g$c$26921$1a@gJ
                                       g$p$26914$1a@gJ)
                                     (g$loop$26918$1a@gJ
                                       (g$fx+$25059$1a@gJ
                                         g$n$26919$1a@gJ
                                         '1)
                                       g$a$26920$1a@gJ)))))
                              (g$string-ref$20629$1a@gJ
                                g$cntl$26915$1a@gJ
                                g$n$26919$1a@gJ))
                             (void))))))
               g$loop$26918$1a@gJ)
             '0
             g$args$26916$1a@gJ)))
         (g$fx-$25061$1a@gJ
           (g$string-length$20632$1a@gJ g$cntl$26915$1a@gJ)
           '1)))))
   (g$printf$26911$1a@gJ
     g$printf$26933$1a@gJ
     (case-lambda
       ((g$control$26923$1a@gJ . g$args$26924$1a@gJ)
        (g$dofmt$26910$1a@gJ
          (current-output-port)
          g$control$26923$1a@gJ
          g$args$26924$1a@gJ))))
   (g$fprintf$26912$1a@gJ
     g$fprintf$26934$1a@gJ
     (case-lambda
       ((g$p$26925$1a@gJ g$control$26926$1a@gJ . g$args$26927$1a@gJ)
        (g$dofmt$26910$1a@gJ
          g$p$26925$1a@gJ
          g$control$26926$1a@gJ
          g$args$26927$1a@gJ))))
   (g$format$26913$1a@gJ
     g$format$26935$1a@gJ
     (case-lambda
       ((g$control$26928$1a@gJ . g$args$26929$1a@gJ)
        (call-with-values
          g$open-string-output-port$26695$1a@gJ
          (case-lambda
            ((g$p$26930$1a@gJ g$c$26931$1a@gJ)
             (begin
               (g$dofmt$26910$1a@gJ
                 g$p$26930$1a@gJ
                 g$control$26928$1a@gJ
                 g$args$26929$1a@gJ)
               (g$c$26931$1a@gJ)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$26936$1a@gJ
     g$make-traced-macro$26939$1a@gJ
     (case-lambda
       ((g$name$26937$1a@gJ g$x$26938$1a@gJ)
        (if (g$procedure?$20622$1a@gJ g$x$26938$1a@gJ)
          (make-traced-procedure
            g$name$26937$1a@gJ
            g$x$26938$1a@gJ
            g$syntax->datum$32625$1a@gJ)
          (if (g$variable-transformer?$32445$1a@gJ g$x$26938$1a@gJ)
            (g$make-variable-transformer$32443$1a@gJ
              (make-traced-procedure
                g$name$26937$1a@gJ
                (g$variable-transformer-procedure$32446$1a@gJ
                  g$x$26938$1a@gJ)
                g$syntax->datum$32625$1a@gJ))
            (begin '#f g$x$26938$1a@gJ)))))))
  (void))

(library-letrec* (ironscheme equal)
  ((g$9127$26940$1a@gJ
     g$9127$27032$1a@gJ
     (make-record-type-descriptor
       'box
       '#f
       '#f
       '#f
       '#f
       '#((mutable content))))
   (g$9129$26941$1a@gJ g$9129$27033$1a@gJ '#f)
   (g$9128$26942$1a@gJ
     g$9128$27034$1a@gJ
     (make-record-constructor-descriptor
       g$9127$26940$1a@gJ
       '#f
       g$9129$26941$1a@gJ))
   (g$box?$26945$1a@gJ
     g$box?$27035$1a@gJ
     (record-predicate g$9127$26940$1a@gJ))
   (g$make-box$26946$1a@gJ
     g$make-box$27036$1a@gJ
     (record-constructor g$9128$26942$1a@gJ))
   (g$box-content$26947$1a@gJ
     g$box-content$27037$1a@gJ
     (record-accessor g$9127$26940$1a@gJ '0))
   (g$set-box-content!$26948$1a@gJ
     g$set-box-content!$27038$1a@gJ
     (record-mutator g$9127$26940$1a@gJ '0))
   (g$random$26949$1a@gJ
     g$random$27039$1a@gJ
     ((case-lambda
        ((g$rg$26958$1a@gJ)
         (case-lambda
           ((g$k$26959$1a@gJ)
            (clr-call-internal
              'System.Random
              'Next
              g$rg$26958$1a@gJ
              g$k$26959$1a@gJ)))))
      (clr-new-internal 'System.Random)))
   (g$union-find$26950$1a@gJ
     g$union-find$27040$1a@gJ
     (case-lambda
       ((g$ht$26960$1a@gJ g$x$26961$1a@gJ g$y$26962$1a@gJ)
        (letrec* ((g$eq-hashtable-ref$26963$1a@gJ
                    g$hashtable-ref$20759$1a@gJ)
                  (g$eq-hashtable-set!$26964$1a@gJ
                    g$hashtable-set!$20760$1a@gJ)
                  (g$find$26965$1a@gJ
                    (case-lambda
                      ((g$b$26976$1a@gJ)
                       ((case-lambda
                          ((g$n$26977$1a@gJ)
                           (if (g$box?$26945$1a@gJ g$n$26977$1a@gJ)
                             ((letrec ((g$loop$26978$1a@gJ
                                         (case-lambda
                                           ((g$b$26979$1a@gJ
                                              g$n$26980$1a@gJ)
                                            ((case-lambda
                                               ((g$nn$26981$1a@gJ)
                                                (if (g$box?$26945$1a@gJ
                                                      g$nn$26981$1a@gJ)
                                                  (begin
                                                    (g$set-box-content!$26948$1a@gJ
                                                      g$b$26979$1a@gJ
                                                      g$nn$26981$1a@gJ)
                                                    (g$loop$26978$1a@gJ
                                                      g$n$26980$1a@gJ
                                                      g$nn$26981$1a@gJ))
                                                  g$n$26980$1a@gJ)))
                                             (g$box-content$26947$1a@gJ
                                               g$n$26980$1a@gJ))))))
                                g$loop$26978$1a@gJ)
                              g$b$26976$1a@gJ
                              g$n$26977$1a@gJ)
                             g$b$26976$1a@gJ)))
                        (g$box-content$26947$1a@gJ g$b$26976$1a@gJ))))))
          ((case-lambda
             ((g$bx$26966$1a@gJ g$by$26967$1a@gJ)
              (if (not g$bx$26966$1a@gJ)
                (if (not g$by$26967$1a@gJ)
                  ((case-lambda
                     ((g$b$26968$1a@gJ)
                      (begin
                        (g$eq-hashtable-set!$26964$1a@gJ
                          g$ht$26960$1a@gJ
                          g$x$26961$1a@gJ
                          g$b$26968$1a@gJ)
                        (g$eq-hashtable-set!$26964$1a@gJ
                          g$ht$26960$1a@gJ
                          g$y$26962$1a@gJ
                          g$b$26968$1a@gJ)
                        '#f)))
                   (g$make-box$26946$1a@gJ '1))
                  ((case-lambda
                     ((g$ry$26969$1a@gJ)
                      (begin
                        (g$eq-hashtable-set!$26964$1a@gJ
                          g$ht$26960$1a@gJ
                          g$x$26961$1a@gJ
                          g$ry$26969$1a@gJ)
                        '#f)))
                   (g$find$26965$1a@gJ g$by$26967$1a@gJ)))
                (if (not g$by$26967$1a@gJ)
                  ((case-lambda
                     ((g$rx$26970$1a@gJ)
                      (begin
                        (g$eq-hashtable-set!$26964$1a@gJ
                          g$ht$26960$1a@gJ
                          g$y$26962$1a@gJ
                          g$rx$26970$1a@gJ)
                        '#f)))
                   (g$find$26965$1a@gJ g$bx$26966$1a@gJ))
                  ((case-lambda
                     ((g$rx$26971$1a@gJ g$ry$26972$1a@gJ)
                      ((case-lambda
                         ((g$t$26973$1a@gJ)
                          (if g$t$26973$1a@gJ
                            g$t$26973$1a@gJ
                            (begin
                              '#f
                              ((case-lambda
                                 ((g$nx$26974$1a@gJ g$ny$26975$1a@gJ)
                                  (if ($fx>?
                                        g$nx$26974$1a@gJ
                                        g$ny$26975$1a@gJ)
                                    (begin
                                      (g$set-box-content!$26948$1a@gJ
                                        g$ry$26972$1a@gJ
                                        g$rx$26971$1a@gJ)
                                      (g$set-box-content!$26948$1a@gJ
                                        g$rx$26971$1a@gJ
                                        ($fx+
                                          g$nx$26974$1a@gJ
                                          g$ny$26975$1a@gJ))
                                      '#f)
                                    (begin
                                      (g$set-box-content!$26948$1a@gJ
                                        g$rx$26971$1a@gJ
                                        g$ry$26972$1a@gJ)
                                      (g$set-box-content!$26948$1a@gJ
                                        g$ry$26972$1a@gJ
                                        ($fx+
                                          g$ny$26975$1a@gJ
                                          g$nx$26974$1a@gJ))
                                      '#f))))
                               (g$box-content$26947$1a@gJ
                                 g$rx$26971$1a@gJ)
                               (g$box-content$26947$1a@gJ
                                 g$ry$26972$1a@gJ))))))
                       (eq? g$rx$26971$1a@gJ g$ry$26972$1a@gJ))))
                   (g$find$26965$1a@gJ g$bx$26966$1a@gJ)
                   (g$find$26965$1a@gJ g$by$26967$1a@gJ))))))
           (g$eq-hashtable-ref$26963$1a@gJ
             g$ht$26960$1a@gJ
             g$x$26961$1a@gJ
             '#f)
           (g$eq-hashtable-ref$26963$1a@gJ
             g$ht$26960$1a@gJ
             g$y$26962$1a@gJ
             '#f))))))
   (g$pre?$26951$1a@gJ
     g$pre?$27041$1a@gJ
     (case-lambda
       ((g$x$26982$1a@gJ g$y$26983$1a@gJ g$k$26984$1a@gJ)
        (if (eq? g$x$26982$1a@gJ g$y$26983$1a@gJ)
          g$k$26984$1a@gJ
          (if (pair? g$x$26982$1a@gJ)
            (if (pair? g$y$26983$1a@gJ)
              (begin
                '#f
                (if ($fx<=? g$k$26984$1a@gJ '0)
                  g$k$26984$1a@gJ
                  ((case-lambda
                     ((g$k$26985$1a@gJ)
                      (if g$k$26985$1a@gJ
                        (begin
                          '#f
                          (g$pre?$26951$1a@gJ
                            ($cdr g$x$26982$1a@gJ)
                            ($cdr g$y$26983$1a@gJ)
                            g$k$26985$1a@gJ))
                        '#f)))
                   (g$pre?$26951$1a@gJ
                     ($car g$x$26982$1a@gJ)
                     ($car g$y$26983$1a@gJ)
                     ($fx- g$k$26984$1a@gJ '1)))))
              '#f)
            (if (g$vector?$20618$1a@gJ g$x$26982$1a@gJ)
              (if (g$vector?$20618$1a@gJ g$y$26983$1a@gJ)
                (begin
                  '#f
                  ((case-lambda
                     ((g$n$26986$1a@gJ)
                      (if ($fx=?
                            (g$vector-length$20652$1a@gJ
                              g$y$26983$1a@gJ)
                            g$n$26986$1a@gJ)
                        (begin
                          '#f
                          ((letrec ((g$f$26987$1a@gJ
                                      (case-lambda
                                        ((g$i$26988$1a@gJ
                                           g$k$26989$1a@gJ)
                                         (if ((case-lambda
                                                ((g$t$26990$1a@gJ)
                                                 (if g$t$26990$1a@gJ
                                                   g$t$26990$1a@gJ
                                                   (begin
                                                     '#f
                                                     ($fx<=?
                                                       g$k$26989$1a@gJ
                                                       '0)))))
                                              ($fx=?
                                                g$i$26988$1a@gJ
                                                g$n$26986$1a@gJ))
                                           g$k$26989$1a@gJ
                                           ((case-lambda
                                              ((g$k$26991$1a@gJ)
                                               (if g$k$26991$1a@gJ
                                                 (begin
                                                   '#f
                                                   (g$f$26987$1a@gJ
                                                     ($fx+
                                                       g$i$26988$1a@gJ
                                                       '1)
                                                     g$k$26991$1a@gJ))
                                                 '#f)))
                                            (g$pre?$26951$1a@gJ
                                              ($vector-ref
                                                g$x$26982$1a@gJ
                                                g$i$26988$1a@gJ)
                                              ($vector-ref
                                                g$y$26983$1a@gJ
                                                g$i$26988$1a@gJ)
                                              ($fx-
                                                g$k$26989$1a@gJ
                                                '1))))))))
                             g$f$26987$1a@gJ)
                           '0
                           g$k$26984$1a@gJ))
                        '#f)))
                   (g$vector-length$20652$1a@gJ g$x$26982$1a@gJ)))
                '#f)
              (if (g$string?$20616$1a@gJ g$x$26982$1a@gJ)
                (if (g$string?$20616$1a@gJ g$y$26983$1a@gJ)
                  (if (g$string=?$20692$1a@gJ
                        g$x$26982$1a@gJ
                        g$y$26983$1a@gJ)
                    (begin '#f g$k$26984$1a@gJ)
                    '#f)
                  '#f)
                (if (g$bytevector?$20619$1a@gJ g$x$26982$1a@gJ)
                  (if (g$bytevector?$20619$1a@gJ g$y$26983$1a@gJ)
                    (if (g$bytevector=?$21105$1a@gJ
                          g$x$26982$1a@gJ
                          g$y$26983$1a@gJ)
                      (begin '#f g$k$26984$1a@gJ)
                      '#f)
                    '#f)
                  (begin
                    '#f
                    (if (eqv? g$x$26982$1a@gJ g$y$26983$1a@gJ)
                      (begin '#f g$k$26984$1a@gJ)
                      '#f))))))))))
   (g$interleave?$26952$1a@gJ
     g$interleave?$27042$1a@gJ
     (case-lambda
       ((g$x$26992$1a@gJ g$y$26993$1a@gJ g$k$26994$1a@gJ)
        ((case-lambda
           ((g$ht$26995$1a@gJ)
            (letrec* ((g$call-union-find$26996$1a@gJ
                        (case-lambda
                          ((g$x$27022$1a@gJ g$y$27023$1a@gJ)
                           (begin
                             (if (not g$ht$26995$1a@gJ)
                               (set! g$ht$26995$1a@gJ
                                 (g$make-eq-hashtable$20756$1a@gJ))
                               (void))
                             (g$union-find$26950$1a@gJ
                               g$ht$26995$1a@gJ
                               g$x$27022$1a@gJ
                               g$y$27023$1a@gJ)))))
                      (g$e?$26997$1a@gJ
                        (case-lambda
                          ((g$x$27019$1a@gJ
                             g$y$27020$1a@gJ
                             g$k$27021$1a@gJ)
                           (if ($fx<=? g$k$27021$1a@gJ '0)
                             (if ($fx=?
                                   g$k$27021$1a@gJ
                                   g$kb$26954$1a@gJ)
                               (g$fast?$26999$1a@gJ
                                 g$x$27019$1a@gJ
                                 g$y$27020$1a@gJ
                                 (g$random$26949$1a@gJ
                                   (* '2 g$k0$26953$1a@gJ)))
                               (g$slow?$26998$1a@gJ
                                 g$x$27019$1a@gJ
                                 g$y$27020$1a@gJ
                                 g$k$27021$1a@gJ))
                             (g$fast?$26999$1a@gJ
                               g$x$27019$1a@gJ
                               g$y$27020$1a@gJ
                               g$k$27021$1a@gJ)))))
                      (g$slow?$26998$1a@gJ
                        (case-lambda
                          ((g$x$27010$1a@gJ
                             g$y$27011$1a@gJ
                             g$k$27012$1a@gJ)
                           (if (eq? g$x$27010$1a@gJ g$y$27011$1a@gJ)
                             g$k$27012$1a@gJ
                             (if (pair? g$x$27010$1a@gJ)
                               (if (pair? g$y$27011$1a@gJ)
                                 (begin
                                   '#f
                                   (if (g$call-union-find$26996$1a@gJ
                                         g$x$27010$1a@gJ
                                         g$y$27011$1a@gJ)
                                     '0
                                     ((case-lambda
                                        ((g$k$27013$1a@gJ)
                                         (if g$k$27013$1a@gJ
                                           (begin
                                             '#f
                                             (g$e?$26997$1a@gJ
                                               ($cdr g$x$27010$1a@gJ)
                                               ($cdr g$y$27011$1a@gJ)
                                               g$k$27013$1a@gJ))
                                           '#f)))
                                      (g$e?$26997$1a@gJ
                                        ($car g$x$27010$1a@gJ)
                                        ($car g$y$27011$1a@gJ)
                                        ($fx- g$k$27012$1a@gJ '1)))))
                                 '#f)
                               (if (g$vector?$20618$1a@gJ
                                     g$x$27010$1a@gJ)
                                 (if (g$vector?$20618$1a@gJ
                                       g$y$27011$1a@gJ)
                                   (begin
                                     '#f
                                     ((case-lambda
                                        ((g$n$27014$1a@gJ)
                                         (if ($fx=?
                                               (g$vector-length$20652$1a@gJ
                                                 g$y$27011$1a@gJ)
                                               g$n$27014$1a@gJ)
                                           (begin
                                             '#f
                                             (if (g$call-union-find$26996$1a@gJ
                                                   g$x$27010$1a@gJ
                                                   g$y$27011$1a@gJ)
                                               '0
                                               ((letrec ((g$f$27015$1a@gJ
                                                           (case-lambda
                                                             ((g$i$27016$1a@gJ
                                                                g$k$27017$1a@gJ)
                                                              (if ($fx=?
                                                                    g$i$27016$1a@gJ
                                                                    g$n$27014$1a@gJ)
                                                                g$k$27017$1a@gJ
                                                                ((case-lambda
                                                                   ((g$k$27018$1a@gJ)
                                                                    (if g$k$27018$1a@gJ
                                                                      (begin
                                                                        '#f
                                                                        (g$f$27015$1a@gJ
                                                                          ($fx+
                                                                            g$i$27016$1a@gJ
                                                                            '1)
                                                                          g$k$27018$1a@gJ))
                                                                      '#f)))
                                                                 (g$e?$26997$1a@gJ
                                                                   ($vector-ref
                                                                     g$x$27010$1a@gJ
                                                                     g$i$27016$1a@gJ)
                                                                   ($vector-ref
                                                                     g$y$27011$1a@gJ
                                                                     g$i$27016$1a@gJ)
                                                                   g$k$27017$1a@gJ)))))))
                                                  g$f$27015$1a@gJ)
                                                '0
                                                ($fx-
                                                  g$k$27012$1a@gJ
                                                  '1))))
                                           '#f)))
                                      (g$vector-length$20652$1a@gJ
                                        g$x$27010$1a@gJ)))
                                   '#f)
                                 (if (g$string?$20616$1a@gJ
                                       g$x$27010$1a@gJ)
                                   (if (g$string?$20616$1a@gJ
                                         g$y$27011$1a@gJ)
                                     (if (g$string=?$20692$1a@gJ
                                           g$x$27010$1a@gJ
                                           g$y$27011$1a@gJ)
                                       (begin '#f g$k$27012$1a@gJ)
                                       '#f)
                                     '#f)
                                   (if (g$bytevector?$20619$1a@gJ
                                         g$x$27010$1a@gJ)
                                     (if (g$bytevector?$20619$1a@gJ
                                           g$y$27011$1a@gJ)
                                       (if (g$bytevector=?$21105$1a@gJ
                                             g$x$27010$1a@gJ
                                             g$y$27011$1a@gJ)
                                         (begin '#f g$k$27012$1a@gJ)
                                         '#f)
                                       '#f)
                                     (begin
                                       '#f
                                       (if (eqv?
                                             g$x$27010$1a@gJ
                                             g$y$27011$1a@gJ)
                                         (begin '#f g$k$27012$1a@gJ)
                                         '#f))))))))))
                      (g$fast?$26999$1a@gJ
                        (case-lambda
                          ((g$x$27000$1a@gJ
                             g$y$27001$1a@gJ
                             g$k$27002$1a@gJ)
                           ((case-lambda
                              ((g$k$27003$1a@gJ)
                               (if (eq? g$x$27000$1a@gJ g$y$27001$1a@gJ)
                                 g$k$27003$1a@gJ
                                 (if (pair? g$x$27000$1a@gJ)
                                   (if (pair? g$y$27001$1a@gJ)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$k$27004$1a@gJ)
                                           (if g$k$27004$1a@gJ
                                             (begin
                                               '#f
                                               (g$e?$26997$1a@gJ
                                                 ($cdr g$x$27000$1a@gJ)
                                                 ($cdr g$y$27001$1a@gJ)
                                                 g$k$27004$1a@gJ))
                                             '#f)))
                                        (g$e?$26997$1a@gJ
                                          ($car g$x$27000$1a@gJ)
                                          ($car g$y$27001$1a@gJ)
                                          g$k$27003$1a@gJ)))
                                     '#f)
                                   (if (g$vector?$20618$1a@gJ
                                         g$x$27000$1a@gJ)
                                     (if (g$vector?$20618$1a@gJ
                                           g$y$27001$1a@gJ)
                                       (begin
                                         '#f
                                         ((case-lambda
                                            ((g$n$27005$1a@gJ)
                                             (if ($fx=?
                                                   (g$vector-length$20652$1a@gJ
                                                     g$y$27001$1a@gJ)
                                                   g$n$27005$1a@gJ)
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$27006$1a@gJ
                                                             (case-lambda
                                                               ((g$i$27007$1a@gJ
                                                                  g$k$27008$1a@gJ)
                                                                (if ($fx=?
                                                                      g$i$27007$1a@gJ
                                                                      g$n$27005$1a@gJ)
                                                                  g$k$27008$1a@gJ
                                                                  ((case-lambda
                                                                     ((g$k$27009$1a@gJ)
                                                                      (if g$k$27009$1a@gJ
                                                                        (begin
                                                                          '#f
                                                                          (g$f$27006$1a@gJ
                                                                            ($fx+
                                                                              g$i$27007$1a@gJ
                                                                              '1)
                                                                            g$k$27009$1a@gJ))
                                                                        '#f)))
                                                                   (g$e?$26997$1a@gJ
                                                                     ($vector-ref
                                                                       g$x$27000$1a@gJ
                                                                       g$i$27007$1a@gJ)
                                                                     ($vector-ref
                                                                       g$y$27001$1a@gJ
                                                                       g$i$27007$1a@gJ)
                                                                     g$k$27008$1a@gJ)))))))
                                                    g$f$27006$1a@gJ)
                                                  '0
                                                  g$k$27003$1a@gJ))
                                               '#f)))
                                          (g$vector-length$20652$1a@gJ
                                            g$x$27000$1a@gJ)))
                                       '#f)
                                     (if (g$string?$20616$1a@gJ
                                           g$x$27000$1a@gJ)
                                       (if (g$string?$20616$1a@gJ
                                             g$y$27001$1a@gJ)
                                         (if (g$string=?$20692$1a@gJ
                                               g$x$27000$1a@gJ
                                               g$y$27001$1a@gJ)
                                           (begin '#f g$k$27003$1a@gJ)
                                           '#f)
                                         '#f)
                                       (if (g$bytevector?$20619$1a@gJ
                                             g$x$27000$1a@gJ)
                                         (if (g$bytevector?$20619$1a@gJ
                                               g$y$27001$1a@gJ)
                                           (if (g$bytevector=?$21105$1a@gJ
                                                 g$x$27000$1a@gJ
                                                 g$y$27001$1a@gJ)
                                             (begin '#f g$k$27003$1a@gJ)
                                             '#f)
                                           '#f)
                                         (begin
                                           '#f
                                           (if (eqv?
                                                 g$x$27000$1a@gJ
                                                 g$y$27001$1a@gJ)
                                             (begin '#f g$k$27003$1a@gJ)
                                             '#f)))))))))
                            ($fx- g$k$27002$1a@gJ '1))))))
              (if (g$e?$26997$1a@gJ
                    g$x$26992$1a@gJ
                    g$y$26993$1a@gJ
                    g$k$26994$1a@gJ)
                (begin '#f '#t)
                '#f))))
         '#f))))
   (g$k0$26953$1a@gJ g$k0$27043$1a@gJ '400)
   (g$kb$26954$1a@gJ g$kb$27044$1a@gJ '-40)
   (g$interleave-equal?$26955$1a@gJ
     g$interleave-equal?$27045$1a@gJ
     (case-lambda
       ((g$x$27024$1a@gJ g$y$27025$1a@gJ)
        (g$interleave?$26952$1a@gJ
          g$x$27024$1a@gJ
          g$y$27025$1a@gJ
          g$k0$26953$1a@gJ))))
   (g$precheck/interleave-equal?$26956$1a@gJ
     g$precheck/interleave-equal?$27046$1a@gJ
     (case-lambda
       ((g$x$27026$1a@gJ g$y$27027$1a@gJ)
        ((case-lambda
           ((g$k$27028$1a@gJ)
            (if g$k$27028$1a@gJ
              (begin
                '#f
                ((case-lambda
                   ((g$t$27029$1a@gJ)
                    (if g$t$27029$1a@gJ
                      g$t$27029$1a@gJ
                      (begin
                        '#f
                        (g$interleave?$26952$1a@gJ
                          g$x$27026$1a@gJ
                          g$y$27027$1a@gJ
                          '0)))))
                 (g$>$21672$1a@gJ g$k$27028$1a@gJ '0)))
              '#f)))
         (g$pre?$26951$1a@gJ
           g$x$27026$1a@gJ
           g$y$27027$1a@gJ
           g$k0$26953$1a@gJ)))))
   (g$equal?$26957$1a@gJ
     g$equal?$27047$1a@gJ
     (case-lambda
       ((g$x$27030$1a@gJ g$y$27031$1a@gJ)
        (g$precheck/interleave-equal?$26956$1a@gJ
          g$x$27030$1a@gJ
          g$y$27031$1a@gJ)))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$27048$1a@gJ
     g$library-version-mismatch-warning$27249$1a@gJ
     (case-lambda
       ((g$name$27221$1a@gJ
          g$depname$27222$1a@gJ
          g$filename$27223$1a@gJ)
        (g$fprintf$26934$1a@gJ
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$27221$1a@gJ
          g$depname$27222$1a@gJ
          g$filename$27223$1a@gJ))))
   (g$file-locator-resolution-error$27049$1a@gJ
     g$file-locator-resolution-error$27250$1a@gJ
     (case-lambda
       ((g$libname$27224$1a@gJ g$failed-list$27225$1a@gJ)
        (letrec* ((g$9269$27226$1a@gJ
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$22136$1a@gJ
                      'g$9272$1a@gJ
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$9271$27227$1a@gJ '#f)
                  (g$9270$27228$1a@gJ
                    (make-record-constructor-descriptor
                      g$9269$27226$1a@gJ
                      g$&condition-rcd$22137$1a@gJ
                      g$9271$27227$1a@gJ))
                  (g$9268$27231$1a@gJ
                    (record-predicate g$9269$27226$1a@gJ))
                  (g$make-library-resolution-condition$27232$1a@gJ
                    (record-constructor g$9270$27228$1a@gJ))
                  (g$9266$27233$1a@gJ
                    (record-accessor g$9269$27226$1a@gJ '0))
                  (g$9267$27234$1a@gJ
                    (record-accessor g$9269$27226$1a@gJ '1))
                  (g$library-resolution-condition?$27235$1a@gJ
                    (condition-predicate g$9269$27226$1a@gJ))
                  (g$condition-library$27236$1a@gJ
                    (condition-accessor
                      g$9269$27226$1a@gJ
                      g$9266$27233$1a@gJ))
                  (g$condition-files$27237$1a@gJ
                    (condition-accessor
                      g$9269$27226$1a@gJ
                      g$9267$27234$1a@gJ)))
          (raise
            (condition
              (g$make-error$22168$1a@gJ)
              (g$make-who-condition$22202$1a@gJ 'expander)
              (g$make-message-condition$22142$1a@gJ
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$27232$1a@gJ
                g$libname$27224$1a@gJ
                g$failed-list$27225$1a@gJ)))))))
   (g$read-library-source-file$27050$1a@gJ
     g$read-library-source-file$27251$1a@gJ
     (case-lambda
       ((g$file-name$27238$1a@gJ)
        (g$with-input-from-file$26757$1a@gJ
          g$file-name$27238$1a@gJ
          read-annotated))))
   (g$make-parameter$27051$1a@gJ
     g$make-parameter$27252$1a@gJ
     (case-lambda
       ((g$x$27239$1a@gJ)
        (g$make-parameter$27051$1a@gJ
          g$x$27239$1a@gJ
          (case-lambda ((g$x$27240$1a@gJ) g$x$27240$1a@gJ))))
       ((g$x$27241$1a@gJ g$fender$27242$1a@gJ)
        (begin
          (if (not (g$procedure?$20622$1a@gJ g$fender$27242$1a@gJ))
            (g$assertion-error$32618$1a@gJ
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$27243$1a@gJ)
              (case-lambda
                (() g$x$27243$1a@gJ)
                ((g$v$27244$1a@gJ)
                 (set! g$x$27243$1a@gJ
                   (g$fender$27242$1a@gJ g$v$27244$1a@gJ))))))
           (g$fender$27242$1a@gJ g$x$27241$1a@gJ))))))
   (g$file-options-constructor$27217$1a@gJ
     g$file-options-constructor$27253$1a@gJ
     (g$make-parameter$27051$1a@gJ '#f))
   (g$file-options-spec$27218$1a@gJ
     g$file-options-spec$27254$1a@gJ
     (case-lambda
       ((g$x$27245$1a@gJ)
        ((g$file-options-constructor$27217$1a@gJ) g$x$27245$1a@gJ))))
   (g$set-label-binding!$27219$1a@gJ
     g$set-label-binding!$27255$1a@gJ
     (case-lambda
       ((g$label$27246$1a@gJ g$binding$27247$1a@gJ)
        (set-symbol-value! g$label$27246$1a@gJ g$binding$27247$1a@gJ))))
   (g$label-binding$27220$1a@gJ
     g$label-binding$27256$1a@gJ
     (case-lambda
       ((g$label$27248$1a@gJ)
        (if (symbol-bound? g$label$27248$1a@gJ)
          (begin '#f (symbol-value g$label$27248$1a@gJ))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$27257$1a@gJ
     g$genwrite:newline-str$27450$1a@gJ
     (g$make-string$20628$1a@gJ '1 '#\newline))
   (g$symbol->string$27258$1a@gJ
     g$symbol->string$27451$1a@gJ
     (case-lambda
       ((g$s$27270$1a@gJ)
        (g$symbol->string$20640$1a@gJ
          (if (g$pretty-gensyms$27267$1a@gJ)
            (ungensym g$s$27270$1a@gJ)
            g$s$27270$1a@gJ)))))
   (g$read-macro-body$27259$1a@gJ
     g$read-macro-body$27452$1a@gJ
     (case-lambda
       ((g$l$27271$1a@gJ) (g$cadr$20658$1a@gJ g$l$27271$1a@gJ))))
   (g$read-macro-prefix$27260$1a@gJ
     g$read-macro-prefix$27453$1a@gJ
     (case-lambda
       ((g$l$27272$1a@gJ)
        ((case-lambda
           ((g$head$27273$1a@gJ g$tail$27274$1a@gJ)
            ((case-lambda
               ((g$t$27275$1a@gJ)
                (if (eqv? g$t$27275$1a@gJ 'syntax)
                  '"#'"
                  (if (eqv? g$t$27275$1a@gJ 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$27275$1a@gJ 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$27275$1a@gJ 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$27275$1a@gJ 'quote)
                          '"'"
                          (if (eqv? g$t$27275$1a@gJ 'quasiquote)
                            '"`"
                            (if (eqv? g$t$27275$1a@gJ 'unquote)
                              '","
                              (if (eqv?
                                    g$t$27275$1a@gJ
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$27273$1a@gJ)))
         (car g$l$27272$1a@gJ)
         (cdr g$l$27272$1a@gJ)))))
   (g$length1?$27261$1a@gJ
     g$length1?$27454$1a@gJ
     (case-lambda
       ((g$l$27276$1a@gJ)
        (if (pair? g$l$27276$1a@gJ)
          (begin '#f (null? (cdr g$l$27276$1a@gJ)))
          '#f))))
   (g$read-macro?$27262$1a@gJ
     g$read-macro?$27455$1a@gJ
     (case-lambda
       ((g$l$27277$1a@gJ)
        ((case-lambda
           ((g$head$27278$1a@gJ g$tail$27279$1a@gJ)
            ((case-lambda
               ((g$t$27280$1a@gJ)
                (if (g$memv$20188$1a@gJ
                      g$t$27280$1a@gJ
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$27261$1a@gJ g$tail$27279$1a@gJ)
                  (begin '#f '#f))))
             g$head$27278$1a@gJ)))
         (car g$l$27277$1a@gJ)
         (cdr g$l$27277$1a@gJ)))))
   (g$generic-write$27263$1a@gJ
     g$generic-write$27456$1a@gJ
     (case-lambda
       ((g$obj$27281$1a@gJ
          g$display?$27282$1a@gJ
          g$width$27283$1a@gJ
          g$output$27284$1a@gJ)
        (letrec* ((g$out$27285$1a@gJ
                    (case-lambda
                      ((g$str$27434$1a@gJ g$col$27435$1a@gJ)
                       (if g$col$27435$1a@gJ
                         (if (g$output$27284$1a@gJ g$str$27434$1a@gJ)
                           (begin
                             '#f
                             (g$fx+$25059$1a@gJ
                               g$col$27435$1a@gJ
                               (g$string-length$20632$1a@gJ
                                 g$str$27434$1a@gJ)))
                           '#f)
                         '#f))))
                  (g$wr$27286$1a@gJ
                    (case-lambda
                      ((g$obj$27417$1a@gJ g$col$27418$1a@gJ)
                       (letrec* ((g$wr-expr$27419$1a@gJ
                                   (case-lambda
                                     ((g$expr$27432$1a@gJ
                                        g$col$27433$1a@gJ)
                                      (if (g$read-macro?$27262$1a@gJ
                                            g$expr$27432$1a@gJ)
                                        (g$wr$27286$1a@gJ
                                          (g$read-macro-body$27259$1a@gJ
                                            g$expr$27432$1a@gJ)
                                          (g$out$27285$1a@gJ
                                            (g$read-macro-prefix$27260$1a@gJ
                                              g$expr$27432$1a@gJ)
                                            g$col$27433$1a@gJ))
                                        (g$wr-lst$27420$1a@gJ
                                          g$expr$27432$1a@gJ
                                          g$col$27433$1a@gJ)))))
                                 (g$wr-lst$27420$1a@gJ
                                   (case-lambda
                                     ((g$l$27427$1a@gJ
                                        g$col$27428$1a@gJ)
                                      (if (pair? g$l$27427$1a@gJ)
                                        ((letrec ((g$loop$27429$1a@gJ
                                                    (case-lambda
                                                      ((g$l$27430$1a@gJ
                                                         g$col$27431$1a@gJ)
                                                       (if (not g$col$27431$1a@gJ)
                                                         g$col$27431$1a@gJ
                                                         (if (pair?
                                                               g$l$27430$1a@gJ)
                                                           (g$loop$27429$1a@gJ
                                                             (cdr g$l$27430$1a@gJ)
                                                             (g$wr$27286$1a@gJ
                                                               (car g$l$27430$1a@gJ)
                                                               (g$out$27285$1a@gJ
                                                                 '" "
                                                                 g$col$27431$1a@gJ)))
                                                           (if (null?
                                                                 g$l$27430$1a@gJ)
                                                             (g$out$27285$1a@gJ
                                                               '")"
                                                               g$col$27431$1a@gJ)
                                                             (begin
                                                               '#f
                                                               (g$out$27285$1a@gJ
                                                                 '")"
                                                                 (g$wr$27286$1a@gJ
                                                                   g$l$27430$1a@gJ
                                                                   (g$out$27285$1a@gJ
                                                                     '" . "
                                                                     g$col$27431$1a@gJ)))))))))))
                                           g$loop$27429$1a@gJ)
                                         (cdr g$l$27427$1a@gJ)
                                         (if g$col$27428$1a@gJ
                                           (begin
                                             '#f
                                             (g$wr$27286$1a@gJ
                                               (car g$l$27427$1a@gJ)
                                               (g$out$27285$1a@gJ
                                                 '"("
                                                 g$col$27428$1a@gJ)))
                                           '#f))
                                        (g$out$27285$1a@gJ
                                          '"()"
                                          g$col$27428$1a@gJ))))))
                         (if (pair? g$obj$27417$1a@gJ)
                           (g$wr-expr$27419$1a@gJ
                             g$obj$27417$1a@gJ
                             g$col$27418$1a@gJ)
                           (if (null? g$obj$27417$1a@gJ)
                             (g$wr-lst$27420$1a@gJ
                               g$obj$27417$1a@gJ
                               g$col$27418$1a@gJ)
                             (if (g$vector?$20618$1a@gJ
                                   g$obj$27417$1a@gJ)
                               (g$wr-lst$27420$1a@gJ
                                 (g$vector->list$20654$1a@gJ
                                   g$obj$27417$1a@gJ)
                                 (g$out$27285$1a@gJ
                                   '"#"
                                   g$col$27418$1a@gJ))
                               (if (g$boolean?$20621$1a@gJ
                                     g$obj$27417$1a@gJ)
                                 (g$out$27285$1a@gJ
                                   (if g$obj$27417$1a@gJ '"#t" '"#f")
                                   g$col$27418$1a@gJ)
                                 (if (g$number?$21647$1a@gJ
                                       g$obj$27417$1a@gJ)
                                   (g$out$27285$1a@gJ
                                     (g$number->string$21668$1a@gJ
                                       g$obj$27417$1a@gJ)
                                     g$col$27418$1a@gJ)
                                   (if (g$symbol?$20620$1a@gJ
                                         g$obj$27417$1a@gJ)
                                     (g$out$27285$1a@gJ
                                       (g$symbol->string$27258$1a@gJ
                                         g$obj$27417$1a@gJ)
                                       g$col$27418$1a@gJ)
                                     (if (g$string?$20616$1a@gJ
                                           g$obj$27417$1a@gJ)
                                       (if g$display?$27282$1a@gJ
                                         (g$out$27285$1a@gJ
                                           g$obj$27417$1a@gJ
                                           g$col$27418$1a@gJ)
                                         ((letrec ((g$loop$27421$1a@gJ
                                                     (case-lambda
                                                       ((g$i$27422$1a@gJ
                                                          g$j$27423$1a@gJ
                                                          g$col$27424$1a@gJ)
                                                        (if (if g$col$27424$1a@gJ
                                                              (begin
                                                                '#f
                                                                (g$fx<?$25073$1a@gJ
                                                                  g$j$27423$1a@gJ
                                                                  (g$string-length$20632$1a@gJ
                                                                    g$obj$27417$1a@gJ)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$27425$1a@gJ)
                                                              (if ((case-lambda
                                                                     ((g$t$27426$1a@gJ)
                                                                      (if g$t$27426$1a@gJ
                                                                        g$t$27426$1a@gJ
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$20699$1a@gJ
                                                                            g$c$27425$1a@gJ
                                                                            '#\")))))
                                                                   (g$char=?$20699$1a@gJ
                                                                     g$c$27425$1a@gJ
                                                                     '#\\))
                                                                (g$loop$27421$1a@gJ
                                                                  g$j$27423$1a@gJ
                                                                  (g$fx+$25059$1a@gJ
                                                                    g$j$27423$1a@gJ
                                                                    '1)
                                                                  (g$out$27285$1a@gJ
                                                                    '"\\"
                                                                    (g$out$27285$1a@gJ
                                                                      (g$substring$20637$1a@gJ
                                                                        g$obj$27417$1a@gJ
                                                                        g$i$27422$1a@gJ
                                                                        g$j$27423$1a@gJ)
                                                                      g$col$27424$1a@gJ)))
                                                                (g$loop$27421$1a@gJ
                                                                  g$i$27422$1a@gJ
                                                                  (g$fx+$25059$1a@gJ
                                                                    g$j$27423$1a@gJ
                                                                    '1)
                                                                  g$col$27424$1a@gJ))))
                                                           (g$string-ref$20629$1a@gJ
                                                             g$obj$27417$1a@gJ
                                                             g$j$27423$1a@gJ))
                                                          (g$out$27285$1a@gJ
                                                            '"\""
                                                            (g$out$27285$1a@gJ
                                                              (g$substring$20637$1a@gJ
                                                                g$obj$27417$1a@gJ
                                                                g$i$27422$1a@gJ
                                                                g$j$27423$1a@gJ)
                                                              g$col$27424$1a@gJ)))))))
                                            g$loop$27421$1a@gJ)
                                          '0
                                          '0
                                          (g$out$27285$1a@gJ
                                            '"\""
                                            g$col$27418$1a@gJ)))
                                       (begin
                                         '#f
                                         (g$out$27285$1a@gJ
                                           (g$format$26935$1a@gJ
                                             (if g$display?$27282$1a@gJ
                                               '"~a"
                                               '"~s")
                                             g$obj$27417$1a@gJ)
                                           g$col$27418$1a@gJ)))))))))))))
                  (g$pp$27287$1a@gJ
                    (case-lambda
                      ((g$obj$27288$1a@gJ g$col$27289$1a@gJ)
                       (letrec* ((g$spaces$27290$1a@gJ
                                   (case-lambda
                                     ((g$n$27415$1a@gJ
                                        g$col$27416$1a@gJ)
                                      (if (g$fx>?$25075$1a@gJ
                                            g$n$27415$1a@gJ
                                            '0)
                                        (if (g$fx>?$25075$1a@gJ
                                              g$n$27415$1a@gJ
                                              '7)
                                          (g$spaces$27290$1a@gJ
                                            (g$fx-$25061$1a@gJ
                                              g$n$27415$1a@gJ
                                              '8)
                                            (g$out$27285$1a@gJ
                                              '"        "
                                              g$col$27416$1a@gJ))
                                          (g$out$27285$1a@gJ
                                            (g$substring$20637$1a@gJ
                                              '"        "
                                              '0
                                              g$n$27415$1a@gJ)
                                            g$col$27416$1a@gJ))
                                        g$col$27416$1a@gJ))))
                                 (g$indent$27291$1a@gJ
                                   (case-lambda
                                     ((g$to$27413$1a@gJ
                                        g$col$27414$1a@gJ)
                                      (if g$col$27414$1a@gJ
                                        (begin
                                          '#f
                                          (if (g$fx<?$25073$1a@gJ
                                                g$to$27413$1a@gJ
                                                g$col$27414$1a@gJ)
                                            (if (g$out$27285$1a@gJ
                                                  g$genwrite:newline-str$27257$1a@gJ
                                                  g$col$27414$1a@gJ)
                                              (begin
                                                '#f
                                                (g$spaces$27290$1a@gJ
                                                  g$to$27413$1a@gJ
                                                  '0))
                                              '#f)
                                            (g$spaces$27290$1a@gJ
                                              (g$fx-$25061$1a@gJ
                                                g$to$27413$1a@gJ
                                                g$col$27414$1a@gJ)
                                              g$col$27414$1a@gJ)))
                                        '#f))))
                                 (g$pr$27292$1a@gJ
                                   (case-lambda
                                     ((g$obj$27405$1a@gJ
                                        g$col$27406$1a@gJ
                                        g$extra$27407$1a@gJ
                                        g$pp-pair$27408$1a@gJ)
                                      (if ((case-lambda
                                             ((g$t$27409$1a@gJ)
                                              (if g$t$27409$1a@gJ
                                                g$t$27409$1a@gJ
                                                (begin
                                                  '#f
                                                  (g$vector?$20618$1a@gJ
                                                    g$obj$27405$1a@gJ)))))
                                           (pair? g$obj$27405$1a@gJ))
                                        ((case-lambda
                                           ((g$result$27410$1a@gJ
                                              g$left$27411$1a@gJ)
                                            (begin
                                              (g$generic-write$27263$1a@gJ
                                                g$obj$27405$1a@gJ
                                                g$display?$27282$1a@gJ
                                                '#f
                                                (case-lambda
                                                  ((g$str$27412$1a@gJ)
                                                   (begin
                                                     (set! g$result$27410$1a@gJ
                                                       (cons
                                                         g$str$27412$1a@gJ
                                                         g$result$27410$1a@gJ))
                                                     (set! g$left$27411$1a@gJ
                                                       (g$fx-$25061$1a@gJ
                                                         g$left$27411$1a@gJ
                                                         (g$string-length$20632$1a@gJ
                                                           g$str$27412$1a@gJ)))
                                                     (g$fx>?$25075$1a@gJ
                                                       g$left$27411$1a@gJ
                                                       '0)))))
                                              (if (g$fx>?$25075$1a@gJ
                                                    g$left$27411$1a@gJ
                                                    '0)
                                                (g$out$27285$1a@gJ
                                                  (g$reverse-string-append$27268$1a@gJ
                                                    g$result$27410$1a@gJ)
                                                  g$col$27406$1a@gJ)
                                                (if (pair?
                                                      g$obj$27405$1a@gJ)
                                                  (g$pp-pair$27408$1a@gJ
                                                    g$obj$27405$1a@gJ
                                                    g$col$27406$1a@gJ
                                                    g$extra$27407$1a@gJ)
                                                  (g$pp-list$27295$1a@gJ
                                                    (g$vector->list$20654$1a@gJ
                                                      g$obj$27405$1a@gJ)
                                                    (g$out$27285$1a@gJ
                                                      '"#"
                                                      g$col$27406$1a@gJ)
                                                    g$extra$27407$1a@gJ
                                                    g$pp-expr$27293$1a@gJ))))))
                                         '()
                                         (g$min$20688$1a@gJ
                                           (g$fx+$25059$1a@gJ
                                             (g$fx-$25061$1a@gJ
                                               (g$fx-$25061$1a@gJ
                                                 g$width$27283$1a@gJ
                                                 g$col$27406$1a@gJ)
                                               g$extra$27407$1a@gJ)
                                             '1)
                                           (g$pretty-width$27264$1a@gJ)))
                                        (g$wr$27286$1a@gJ
                                          g$obj$27405$1a@gJ
                                          g$col$27406$1a@gJ)))))
                                 (g$pp-expr$27293$1a@gJ
                                   (case-lambda
                                     ((g$expr$27400$1a@gJ
                                        g$col$27401$1a@gJ
                                        g$extra$27402$1a@gJ)
                                      (if (g$read-macro?$27262$1a@gJ
                                            g$expr$27400$1a@gJ)
                                        (g$pr$27292$1a@gJ
                                          (g$read-macro-body$27259$1a@gJ
                                            g$expr$27400$1a@gJ)
                                          (g$out$27285$1a@gJ
                                            (g$read-macro-prefix$27260$1a@gJ
                                              g$expr$27400$1a@gJ)
                                            g$col$27401$1a@gJ)
                                          g$extra$27402$1a@gJ
                                          g$pp-expr$27293$1a@gJ)
                                        ((case-lambda
                                           ((g$head$27403$1a@gJ)
                                            (if (g$symbol?$20620$1a@gJ
                                                  g$head$27403$1a@gJ)
                                              ((case-lambda
                                                 ((g$proc$27404$1a@gJ)
                                                  (if g$proc$27404$1a@gJ
                                                    (g$proc$27404$1a@gJ
                                                      g$expr$27400$1a@gJ
                                                      g$col$27401$1a@gJ
                                                      g$extra$27402$1a@gJ)
                                                    (if (g$fx>?$25075$1a@gJ
                                                          (g$string-length$20632$1a@gJ
                                                            (g$symbol->string$27258$1a@gJ
                                                              g$head$27403$1a@gJ))
                                                          (g$max-call-head-width$27266$1a@gJ))
                                                      (g$pp-general$27297$1a@gJ
                                                        g$expr$27400$1a@gJ
                                                        g$col$27401$1a@gJ
                                                        g$extra$27402$1a@gJ
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$27293$1a@gJ)
                                                      (g$pp-call$27294$1a@gJ
                                                        g$expr$27400$1a@gJ
                                                        g$col$27401$1a@gJ
                                                        g$extra$27402$1a@gJ
                                                        g$pp-expr$27293$1a@gJ)))))
                                               (g$style$27309$1a@gJ
                                                 g$head$27403$1a@gJ))
                                              (g$pp-list$27295$1a@gJ
                                                g$expr$27400$1a@gJ
                                                g$col$27401$1a@gJ
                                                g$extra$27402$1a@gJ
                                                g$pp-expr$27293$1a@gJ))))
                                         (car g$expr$27400$1a@gJ))))))
                                 (g$pp-call$27294$1a@gJ
                                   (case-lambda
                                     ((g$expr$27395$1a@gJ
                                        g$col$27396$1a@gJ
                                        g$extra$27397$1a@gJ
                                        g$pp-item$27398$1a@gJ)
                                      ((case-lambda
                                         ((g$col*$27399$1a@gJ)
                                          (if g$col$27396$1a@gJ
                                            (begin
                                              '#f
                                              (g$pp-down$27296$1a@gJ
                                                (cdr g$expr$27395$1a@gJ)
                                                g$col*$27399$1a@gJ
                                                (g$fx+$25059$1a@gJ
                                                  g$col*$27399$1a@gJ
                                                  '1)
                                                g$extra$27397$1a@gJ
                                                g$pp-item$27398$1a@gJ))
                                            '#f)))
                                       (g$wr$27286$1a@gJ
                                         (car g$expr$27395$1a@gJ)
                                         (g$out$27285$1a@gJ
                                           '"("
                                           g$col$27396$1a@gJ))))))
                                 (g$pp-list$27295$1a@gJ
                                   (case-lambda
                                     ((g$l$27390$1a@gJ
                                        g$col$27391$1a@gJ
                                        g$extra$27392$1a@gJ
                                        g$pp-item$27393$1a@gJ)
                                      ((case-lambda
                                         ((g$col$27394$1a@gJ)
                                          (g$pp-down$27296$1a@gJ
                                            g$l$27390$1a@gJ
                                            g$col$27394$1a@gJ
                                            g$col$27394$1a@gJ
                                            g$extra$27392$1a@gJ
                                            g$pp-item$27393$1a@gJ)))
                                       (g$out$27285$1a@gJ
                                         '"("
                                         g$col$27391$1a@gJ)))))
                                 (g$pp-down$27296$1a@gJ
                                   (case-lambda
                                     ((g$l$27380$1a@gJ
                                        g$col1$27381$1a@gJ
                                        g$col2$27382$1a@gJ
                                        g$extra$27383$1a@gJ
                                        g$pp-item$27384$1a@gJ)
                                      ((letrec ((g$loop$27385$1a@gJ
                                                  (case-lambda
                                                    ((g$l$27386$1a@gJ
                                                       g$col$27387$1a@gJ)
                                                     (if g$col$27387$1a@gJ
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$27386$1a@gJ)
                                                           ((case-lambda
                                                              ((g$rest$27388$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$extra$27389$1a@gJ)
                                                                   (g$loop$27385$1a@gJ
                                                                     g$rest$27388$1a@gJ
                                                                     (g$pr$27292$1a@gJ
                                                                       (car g$l$27386$1a@gJ)
                                                                       (g$indent$27291$1a@gJ
                                                                         g$col2$27382$1a@gJ
                                                                         g$col$27387$1a@gJ)
                                                                       g$extra$27389$1a@gJ
                                                                       g$pp-item$27384$1a@gJ))))
                                                                (if (null?
                                                                      g$rest$27388$1a@gJ)
                                                                  (g$fx+$25059$1a@gJ
                                                                    g$extra$27383$1a@gJ
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$27386$1a@gJ))
                                                           (if (null?
                                                                 g$l$27386$1a@gJ)
                                                             (g$out$27285$1a@gJ
                                                               '")"
                                                               g$col$27387$1a@gJ)
                                                             (begin
                                                               '#f
                                                               (g$out$27285$1a@gJ
                                                                 '")"
                                                                 (g$pr$27292$1a@gJ
                                                                   g$l$27386$1a@gJ
                                                                   (g$indent$27291$1a@gJ
                                                                     g$col2$27382$1a@gJ
                                                                     (g$out$27285$1a@gJ
                                                                       '"."
                                                                       (g$indent$27291$1a@gJ
                                                                         g$col2$27382$1a@gJ
                                                                         g$col$27387$1a@gJ)))
                                                                   (g$fx+$25059$1a@gJ
                                                                     g$extra$27383$1a@gJ
                                                                     '1)
                                                                   g$pp-item$27384$1a@gJ))))))
                                                       '#f)))))
                                         g$loop$27385$1a@gJ)
                                       g$l$27380$1a@gJ
                                       g$col1$27381$1a@gJ))))
                                 (g$pp-general$27297$1a@gJ
                                   (case-lambda
                                     ((g$expr$27347$1a@gJ
                                        g$col$27348$1a@gJ
                                        g$extra$27349$1a@gJ
                                        g$named?$27350$1a@gJ
                                        g$pp-1$27351$1a@gJ
                                        g$pp-2$27352$1a@gJ
                                        g$pp-3$27353$1a@gJ)
                                      (letrec* ((g$tail1$27354$1a@gJ
                                                  (case-lambda
                                                    ((g$rest$27373$1a@gJ
                                                       g$col1$27374$1a@gJ
                                                       g$col2$27375$1a@gJ
                                                       g$col3$27376$1a@gJ)
                                                     (if (if g$pp-1$27351$1a@gJ
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27373$1a@gJ))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27377$1a@gJ)
                                                           ((case-lambda
                                                              ((g$rest$27378$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$extra$27379$1a@gJ)
                                                                   (g$tail2$27355$1a@gJ
                                                                     g$rest$27378$1a@gJ
                                                                     g$col1$27374$1a@gJ
                                                                     (g$pr$27292$1a@gJ
                                                                       g$val1$27377$1a@gJ
                                                                       (g$indent$27291$1a@gJ
                                                                         g$col3$27376$1a@gJ
                                                                         g$col2$27375$1a@gJ)
                                                                       g$extra$27379$1a@gJ
                                                                       g$pp-1$27351$1a@gJ)
                                                                     g$col3$27376$1a@gJ)))
                                                                (if (null?
                                                                      g$rest$27378$1a@gJ)
                                                                  (g$fx+$25059$1a@gJ
                                                                    g$extra$27349$1a@gJ
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27373$1a@gJ))))
                                                        (car g$rest$27373$1a@gJ))
                                                       (g$tail2$27355$1a@gJ
                                                         g$rest$27373$1a@gJ
                                                         g$col1$27374$1a@gJ
                                                         g$col2$27375$1a@gJ
                                                         g$col3$27376$1a@gJ)))))
                                                (g$tail2$27355$1a@gJ
                                                  (case-lambda
                                                    ((g$rest$27366$1a@gJ
                                                       g$col1$27367$1a@gJ
                                                       g$col2$27368$1a@gJ
                                                       g$col3$27369$1a@gJ)
                                                     (if (if g$pp-2$27352$1a@gJ
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27366$1a@gJ))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27370$1a@gJ)
                                                           ((case-lambda
                                                              ((g$rest$27371$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$extra$27372$1a@gJ)
                                                                   (g$tail3$27356$1a@gJ
                                                                     g$rest$27371$1a@gJ
                                                                     g$col1$27367$1a@gJ
                                                                     (g$pr$27292$1a@gJ
                                                                       g$val1$27370$1a@gJ
                                                                       (g$indent$27291$1a@gJ
                                                                         g$col3$27369$1a@gJ
                                                                         g$col2$27368$1a@gJ)
                                                                       g$extra$27372$1a@gJ
                                                                       g$pp-2$27352$1a@gJ))))
                                                                (if (null?
                                                                      g$rest$27371$1a@gJ)
                                                                  (g$fx+$25059$1a@gJ
                                                                    g$extra$27349$1a@gJ
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27366$1a@gJ))))
                                                        (car g$rest$27366$1a@gJ))
                                                       (g$tail3$27356$1a@gJ
                                                         g$rest$27366$1a@gJ
                                                         g$col1$27367$1a@gJ
                                                         g$col2$27368$1a@gJ)))))
                                                (g$tail3$27356$1a@gJ
                                                  (case-lambda
                                                    ((g$rest$27363$1a@gJ
                                                       g$col1$27364$1a@gJ
                                                       g$col2$27365$1a@gJ)
                                                     (g$pp-down$27296$1a@gJ
                                                       g$rest$27363$1a@gJ
                                                       g$col2$27365$1a@gJ
                                                       g$col1$27364$1a@gJ
                                                       g$extra$27349$1a@gJ
                                                       g$pp-3$27353$1a@gJ)))))
                                        ((case-lambda
                                           ((g$head$27357$1a@gJ)
                                            ((case-lambda
                                               ((g$rest$27358$1a@gJ)
                                                ((case-lambda
                                                   ((g$col*$27359$1a@gJ)
                                                    (if (if g$named?$27350$1a@gJ
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$27358$1a@gJ))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$27360$1a@gJ)
                                                          ((case-lambda
                                                             ((g$rest$27361$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$col**$27362$1a@gJ)
                                                                  (g$tail1$27354$1a@gJ
                                                                    g$rest$27361$1a@gJ
                                                                    (g$fx+$25059$1a@gJ
                                                                      g$col$27348$1a@gJ
                                                                      (g$indent-general$27265$1a@gJ))
                                                                    g$col**$27362$1a@gJ
                                                                    (g$fx+$25059$1a@gJ
                                                                      g$col**$27362$1a@gJ
                                                                      '1))))
                                                               (g$wr$27286$1a@gJ
                                                                 g$name$27360$1a@gJ
                                                                 (g$out$27285$1a@gJ
                                                                   '" "
                                                                   g$col*$27359$1a@gJ)))))
                                                           (cdr g$rest$27358$1a@gJ))))
                                                       (car g$rest$27358$1a@gJ))
                                                      (g$tail1$27354$1a@gJ
                                                        g$rest$27358$1a@gJ
                                                        (g$fx+$25059$1a@gJ
                                                          g$col$27348$1a@gJ
                                                          (g$indent-general$27265$1a@gJ))
                                                        g$col*$27359$1a@gJ
                                                        (g$fx+$25059$1a@gJ
                                                          g$col*$27359$1a@gJ
                                                          '1)))))
                                                 (g$wr$27286$1a@gJ
                                                   g$head$27357$1a@gJ
                                                   (g$out$27285$1a@gJ
                                                     '"("
                                                     g$col$27348$1a@gJ)))))
                                             (cdr g$expr$27347$1a@gJ))))
                                         (car g$expr$27347$1a@gJ))))))
                                 (g$pp-expr-list$27298$1a@gJ
                                   (case-lambda
                                     ((g$l$27344$1a@gJ
                                        g$col$27345$1a@gJ
                                        g$extra$27346$1a@gJ)
                                      (g$pp-list$27295$1a@gJ
                                        g$l$27344$1a@gJ
                                        g$col$27345$1a@gJ
                                        g$extra$27346$1a@gJ
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$pp-SYNTAX-CASE$27299$1a@gJ
                                   (case-lambda
                                     ((g$expr$27341$1a@gJ
                                        g$col$27342$1a@gJ
                                        g$extra$27343$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27341$1a@gJ
                                        g$col$27342$1a@gJ
                                        g$extra$27343$1a@gJ
                                        '#t
                                        g$pp-expr-list$27298$1a@gJ
                                        '#f
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$pp-LAMBDA$27300$1a@gJ
                                   (case-lambda
                                     ((g$expr$27338$1a@gJ
                                        g$col$27339$1a@gJ
                                        g$extra$27340$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27338$1a@gJ
                                        g$col$27339$1a@gJ
                                        g$extra$27340$1a@gJ
                                        '#f
                                        g$pp-expr-list$27298$1a@gJ
                                        '#f
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$pp-IF$27301$1a@gJ
                                   (case-lambda
                                     ((g$expr$27335$1a@gJ
                                        g$col$27336$1a@gJ
                                        g$extra$27337$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27335$1a@gJ
                                        g$col$27336$1a@gJ
                                        g$extra$27337$1a@gJ
                                        '#f
                                        g$pp-expr$27293$1a@gJ
                                        '#f
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$pp-COND$27302$1a@gJ
                                   (case-lambda
                                     ((g$expr$27332$1a@gJ
                                        g$col$27333$1a@gJ
                                        g$extra$27334$1a@gJ)
                                      (g$pp-call$27294$1a@gJ
                                        g$expr$27332$1a@gJ
                                        g$col$27333$1a@gJ
                                        g$extra$27334$1a@gJ
                                        g$pp-expr-list$27298$1a@gJ))))
                                 (g$pp-CASE$27303$1a@gJ
                                   (case-lambda
                                     ((g$expr$27329$1a@gJ
                                        g$col$27330$1a@gJ
                                        g$extra$27331$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27329$1a@gJ
                                        g$col$27330$1a@gJ
                                        g$extra$27331$1a@gJ
                                        '#f
                                        g$pp-expr$27293$1a@gJ
                                        '#f
                                        g$pp-expr-list$27298$1a@gJ))))
                                 (g$pp-CASE-LAMBDA$27304$1a@gJ
                                   (case-lambda
                                     ((g$expr$27326$1a@gJ
                                        g$col$27327$1a@gJ
                                        g$extra$27328$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27326$1a@gJ
                                        g$col$27327$1a@gJ
                                        g$extra$27328$1a@gJ
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$27298$1a@gJ))))
                                 (g$pp-AND$27305$1a@gJ
                                   (case-lambda
                                     ((g$expr$27323$1a@gJ
                                        g$col$27324$1a@gJ
                                        g$extra$27325$1a@gJ)
                                      (g$pp-call$27294$1a@gJ
                                        g$expr$27323$1a@gJ
                                        g$col$27324$1a@gJ
                                        g$extra$27325$1a@gJ
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$pp-LET$27306$1a@gJ
                                   (case-lambda
                                     ((g$expr$27318$1a@gJ
                                        g$col$27319$1a@gJ
                                        g$extra$27320$1a@gJ)
                                      ((case-lambda
                                         ((g$rest$27321$1a@gJ)
                                          ((case-lambda
                                             ((g$named?$27322$1a@gJ)
                                              (g$pp-general$27297$1a@gJ
                                                g$expr$27318$1a@gJ
                                                g$col$27319$1a@gJ
                                                g$extra$27320$1a@gJ
                                                g$named?$27322$1a@gJ
                                                g$pp-expr-list$27298$1a@gJ
                                                '#f
                                                g$pp-expr$27293$1a@gJ)))
                                           (if (pair?
                                                 g$rest$27321$1a@gJ)
                                             (begin
                                               '#f
                                               (g$symbol?$20620$1a@gJ
                                                 (car g$rest$27321$1a@gJ)))
                                             '#f))))
                                       (cdr g$expr$27318$1a@gJ)))))
                                 (g$pp-BEGIN$27307$1a@gJ
                                   (case-lambda
                                     ((g$expr$27315$1a@gJ
                                        g$col$27316$1a@gJ
                                        g$extra$27317$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27315$1a@gJ
                                        g$col$27316$1a@gJ
                                        g$extra$27317$1a@gJ
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$pp-DO$27308$1a@gJ
                                   (case-lambda
                                     ((g$expr$27312$1a@gJ
                                        g$col$27313$1a@gJ
                                        g$extra$27314$1a@gJ)
                                      (g$pp-general$27297$1a@gJ
                                        g$expr$27312$1a@gJ
                                        g$col$27313$1a@gJ
                                        g$extra$27314$1a@gJ
                                        '#f
                                        g$pp-expr-list$27298$1a@gJ
                                        g$pp-expr-list$27298$1a@gJ
                                        g$pp-expr$27293$1a@gJ))))
                                 (g$style$27309$1a@gJ
                                   (case-lambda
                                     ((g$head$27310$1a@gJ)
                                      ((case-lambda
                                         ((g$t$27311$1a@gJ)
                                          (if (g$memv$20188$1a@gJ
                                                g$t$27311$1a@gJ
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$27300$1a@gJ
                                            (if (eqv?
                                                  g$t$27311$1a@gJ
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$27299$1a@gJ
                                              (if (g$memv$20188$1a@gJ
                                                    g$t$27311$1a@gJ
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$27301$1a@gJ
                                                (if (eqv?
                                                      g$t$27311$1a@gJ
                                                      'cond)
                                                  g$pp-COND$27302$1a@gJ
                                                  (if (eqv?
                                                        g$t$27311$1a@gJ
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$27304$1a@gJ
                                                    (if (eqv?
                                                          g$t$27311$1a@gJ
                                                          'case)
                                                      g$pp-CASE$27303$1a@gJ
                                                      (if (g$memv$20188$1a@gJ
                                                            g$t$27311$1a@gJ
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$27305$1a@gJ
                                                        (if (eqv?
                                                              g$t$27311$1a@gJ
                                                              'let)
                                                          g$pp-LET$27306$1a@gJ
                                                          (if (eqv?
                                                                g$t$27311$1a@gJ
                                                                'begin)
                                                            g$pp-BEGIN$27307$1a@gJ
                                                            (if (eqv?
                                                                  g$t$27311$1a@gJ
                                                                  'do)
                                                              g$pp-DO$27308$1a@gJ
                                                              (begin
                                                                '#f
                                                                '#f)))))))))))))
                                       g$head$27310$1a@gJ)))))
                         (g$pr$27292$1a@gJ
                           g$obj$27288$1a@gJ
                           g$col$27289$1a@gJ
                           '0
                           g$pp-expr$27293$1a@gJ))))))
          (if g$width$27283$1a@gJ
            (g$out$27285$1a@gJ
              g$genwrite:newline-str$27257$1a@gJ
              (g$pp$27287$1a@gJ g$obj$27281$1a@gJ '0))
            (g$wr$27286$1a@gJ g$obj$27281$1a@gJ '0))))))
   (g$pretty-width$27264$1a@gJ
     g$pretty-width$27457$1a@gJ
     (g$make-parameter$27252$1a@gJ '72))
   (g$indent-general$27265$1a@gJ
     g$indent-general$27458$1a@gJ
     (g$make-parameter$27252$1a@gJ '2))
   (g$max-call-head-width$27266$1a@gJ
     g$max-call-head-width$27459$1a@gJ
     (g$make-parameter$27252$1a@gJ '3))
   (g$pretty-gensyms$27267$1a@gJ
     g$pretty-gensyms$27460$1a@gJ
     (g$make-parameter$27252$1a@gJ '#f))
   (g$reverse-string-append$27268$1a@gJ
     g$reverse-string-append$27461$1a@gJ
     (case-lambda
       ((g$l$27436$1a@gJ)
        (letrec* ((g$rev-string-append$27437$1a@gJ
                    (case-lambda
                      ((g$l$27438$1a@gJ g$i$27439$1a@gJ)
                       (if (pair? g$l$27438$1a@gJ)
                         ((case-lambda
                            ((g$str$27440$1a@gJ)
                             ((case-lambda
                                ((g$len$27441$1a@gJ)
                                 ((case-lambda
                                    ((g$result$27442$1a@gJ)
                                     ((letrec ((g$loop$27443$1a@gJ
                                                 (case-lambda
                                                   ((g$j$27444$1a@gJ
                                                      g$k$27445$1a@gJ)
                                                    (if (g$fx<?$25073$1a@gJ
                                                          g$j$27444$1a@gJ
                                                          g$len$27441$1a@gJ)
                                                      (begin
                                                        (g$string-set!$20630$1a@gJ
                                                          g$result$27442$1a@gJ
                                                          g$k$27445$1a@gJ
                                                          (g$string-ref$20629$1a@gJ
                                                            g$str$27440$1a@gJ
                                                            g$j$27444$1a@gJ))
                                                        (g$loop$27443$1a@gJ
                                                          (g$fx+$25059$1a@gJ
                                                            g$j$27444$1a@gJ
                                                            '1)
                                                          (g$fx+$25059$1a@gJ
                                                            g$k$27445$1a@gJ
                                                            '1)))
                                                      g$result$27442$1a@gJ)))))
                                        g$loop$27443$1a@gJ)
                                      '0
                                      (g$fx-$25061$1a@gJ
                                        (g$fx-$25061$1a@gJ
                                          (g$string-length$20632$1a@gJ
                                            g$result$27442$1a@gJ)
                                          g$i$27439$1a@gJ)
                                        g$len$27441$1a@gJ))))
                                  (g$rev-string-append$27437$1a@gJ
                                    (cdr g$l$27438$1a@gJ)
                                    (g$fx+$25059$1a@gJ
                                      g$i$27439$1a@gJ
                                      g$len$27441$1a@gJ)))))
                              (g$string-length$20632$1a@gJ
                                g$str$27440$1a@gJ))))
                          (car g$l$27438$1a@gJ))
                         (g$make-string$20628$1a@gJ
                           g$i$27439$1a@gJ))))))
          (g$rev-string-append$27437$1a@gJ g$l$27436$1a@gJ '0)))))
   (g$pretty-print$27269$1a@gJ
     g$pretty-print$27462$1a@gJ
     (case-lambda
       ((g$obj$27446$1a@gJ . g$opt$27447$1a@gJ)
        ((case-lambda
           ((g$port$27448$1a@gJ)
            (g$generic-write$27263$1a@gJ
              g$obj$27446$1a@gJ
              '#f
              (g$pretty-width$27264$1a@gJ)
              (case-lambda
                ((g$s$27449$1a@gJ)
                 (begin
                   (display g$s$27449$1a@gJ g$port$27448$1a@gJ)
                   '#t))))))
         (if (pair? g$opt$27447$1a@gJ)
           (car g$opt$27447$1a@gJ)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$27463$1a@gJ
     g$cps/generate-reference$27728$1a@gJ
     (case-lambda
       ((g$variable$27516$1a@gJ)
        (g$cps/generate-operand$27467$1a@gJ
          (g$make-reference$27493$1a@gJ g$variable$27516$1a@gJ)))))
   (g$cps/generate-literal$27464$1a@gJ
     g$cps/generate-literal$27729$1a@gJ
     (case-lambda
       ((g$datum$27517$1a@gJ)
        (g$cps/generate-operand$27467$1a@gJ
          (g$make-literal$27492$1a@gJ g$datum$27517$1a@gJ)))))
   (g$cps/generate-abstraction$27465$1a@gJ
     g$cps/generate-abstraction$27730$1a@gJ
     (case-lambda
       ((g$bvl$27518$1a@gJ g$body-generator$27519$1a@gJ)
        (g$cps/generate-operand$27467$1a@gJ
          (g$make-user-abstraction$27494$1a@gJ
            g$bvl$27518$1a@gJ
            (case-lambda
              ((g$continuation-variable$27520$1a@gJ)
               (g$body-generator$27519$1a@gJ
                 (g$variable-continuator$27480$1a@gJ
                   g$continuation-variable$27520$1a@gJ)))))))))
   (g$cps/generate-abstractions$27466$1a@gJ
     g$cps/generate-abstractions$27731$1a@gJ
     (case-lambda
       ((g$bvls$27521$1a@gJ g$body-generators$27522$1a@gJ)
        (g$cps/generate-operand$27467$1a@gJ
          (g$make-user-abstractions$27495$1a@gJ
            g$bvls$27521$1a@gJ
            (g$map$20195$1a@gJ
              (case-lambda
                ((g$body-generator$27523$1a@gJ)
                 (case-lambda
                   ((g$continuation-variable$27524$1a@gJ)
                    (g$body-generator$27523$1a@gJ
                      (g$variable-continuator$27480$1a@gJ
                        g$continuation-variable$27524$1a@gJ))))))
              g$body-generators$27522$1a@gJ))))))
   (g$cps/generate-operand$27467$1a@gJ
     g$cps/generate-operand$27732$1a@gJ
     (case-lambda
       ((g$operand$27525$1a@gJ)
        (case-lambda
          ((g$continuator$27526$1a@gJ)
           (g$continue-with-operand$27483$1a@gJ
             g$continuator$27526$1a@gJ
             g$operand$27525$1a@gJ))))))
   (g$cps/generate-conditional$27468$1a@gJ
     g$cps/generate-conditional$27733$1a@gJ
     (case-lambda
       ((g$condition-generator$27527$1a@gJ
          g$consequent-generator$27528$1a@gJ
          g$alternative-generator$27529$1a@gJ)
        (case-lambda
          ((g$continuator$27530$1a@gJ)
           (letrec* ((g$if-variable$27531$1a@gJ
                       (case-lambda
                         ((g$continuation-variable$27533$1a@gJ)
                          ((case-lambda
                             ((g$continuator*$27534$1a@gJ)
                              (g$condition-generator$27527$1a@gJ
                                (g$conditional-continuator$27479$1a@gJ
                                  (case-lambda
                                    ((g$condition$27535$1a@gJ)
                                     (g$make-conditional$27502$1a@gJ
                                       g$condition$27535$1a@gJ
                                       (g$consequent-generator$27528$1a@gJ
                                         g$continuator*$27534$1a@gJ)
                                       (g$alternative-generator$27529$1a@gJ
                                         g$continuator*$27534$1a@gJ))))))))
                           (g$variable-continuator$27480$1a@gJ
                             g$continuation-variable$27533$1a@gJ))))))
             (g$reify-continuation*$27485$1a@gJ
               g$continuator$27530$1a@gJ
               g$if-variable$27531$1a@gJ
               (case-lambda
                 ((g$continuation-abstraction$27532$1a@gJ)
                  (g$make-conditional-join$27503$1a@gJ
                    g$continuation-abstraction$27532$1a@gJ
                    g$if-variable$27531$1a@gJ))))))))))
   (g$cps/generate-recursive-bind$27469$1a@gJ
     g$cps/generate-recursive-bind$27734$1a@gJ
     (case-lambda
       ((g$variables$27536$1a@gJ
          g$generators$27537$1a@gJ
          g$body-generator$27538$1a@gJ)
        (case-lambda
          ((g$continuator$27539$1a@gJ)
           (g$make-recursive-bind$27497$1a@gJ
             g$variables$27536$1a@gJ
             (g$map$20195$1a@gJ
               (case-lambda
                 ((g$generator$27540$1a@gJ)
                  (case-lambda
                    ((g$continuation-variable$27541$1a@gJ)
                     (g$generator$27540$1a@gJ
                       (g$variable-continuator$27480$1a@gJ
                         g$continuation-variable$27541$1a@gJ))))))
               g$generators$27537$1a@gJ)
             (g$body-generator$27538$1a@gJ
               (g$reified-continuator$27482$1a@gJ
                 g$continuator$27539$1a@gJ))))))))
   (g$cps/generate-recursive*-bind$27470$1a@gJ
     g$cps/generate-recursive*-bind$27735$1a@gJ
     (case-lambda
       ((g$variables$27542$1a@gJ
          g$generators$27543$1a@gJ
          g$body-generator$27544$1a@gJ)
        (case-lambda
          ((g$continuator$27545$1a@gJ)
           (g$make-recursive*-bind$27498$1a@gJ
             g$variables$27542$1a@gJ
             (g$map$20195$1a@gJ
               (case-lambda
                 ((g$generator$27546$1a@gJ)
                  (case-lambda
                    ((g$continuation-variable$27547$1a@gJ)
                     (g$generator$27546$1a@gJ
                       (g$variable-continuator$27480$1a@gJ
                         g$continuation-variable$27547$1a@gJ))))))
               g$generators$27543$1a@gJ)
             (g$body-generator$27544$1a@gJ
               (g$reified-continuator$27482$1a@gJ
                 g$continuator$27545$1a@gJ))))))))
   (g$cps/generate-recursive*-library-bind$27471$1a@gJ
     g$cps/generate-recursive*-library-bind$27736$1a@gJ
     (case-lambda
       ((g$name$27548$1a@gJ
          g$variables$27549$1a@gJ
          g$variables*$27550$1a@gJ
          g$generators$27551$1a@gJ
          g$body-generator$27552$1a@gJ)
        (case-lambda
          ((g$continuator$27553$1a@gJ)
           (g$make-recursive*-library-bind$27499$1a@gJ
             g$name$27548$1a@gJ
             g$variables$27549$1a@gJ
             g$variables*$27550$1a@gJ
             (g$map$20195$1a@gJ
               (case-lambda
                 ((g$generator$27554$1a@gJ)
                  (case-lambda
                    ((g$continuation-variable$27555$1a@gJ)
                     (g$generator$27554$1a@gJ
                       (g$variable-continuator$27480$1a@gJ
                         g$continuation-variable$27555$1a@gJ))))))
               g$generators$27551$1a@gJ)
             (g$body-generator$27552$1a@gJ
               (g$reified-continuator$27482$1a@gJ
                 g$continuator$27553$1a@gJ))))))))
   (g$cps/generate-sequence$27472$1a@gJ
     g$cps/generate-sequence$27737$1a@gJ
     (case-lambda
       ((g$generators$27556$1a@gJ)
        (case-lambda
          ((g$continuator$27557$1a@gJ)
           ((letrec ((g$recur$27558$1a@gJ
                       (case-lambda
                         ((g$generators$27559$1a@gJ)
                          ((car g$generators$27559$1a@gJ)
                           ((case-lambda
                              ((g$generators$27560$1a@gJ)
                               (if (pair? g$generators$27560$1a@gJ)
                                 (g$effect-continuator$27478$1a@gJ
                                   (case-lambda
                                     (()
                                      (g$recur$27558$1a@gJ
                                        g$generators$27560$1a@gJ))))
                                 g$continuator$27557$1a@gJ)))
                            (cdr g$generators$27559$1a@gJ)))))))
              g$recur$27558$1a@gJ)
            g$generators$27556$1a@gJ))))))
   (g$cps/generate-assignment$27473$1a@gJ
     g$cps/generate-assignment$27738$1a@gJ
     (case-lambda
       ((g$location$27561$1a@gJ g$expression-generator$27562$1a@gJ)
        (case-lambda
          ((g$continuator$27563$1a@gJ)
           (g$expression-generator$27562$1a@gJ
             (g$operand-continuator$27477$1a@gJ
               (case-lambda
                 ((g$operand$27564$1a@gJ)
                  (g$make-assignment$27505$1a@gJ
                    g$location$27561$1a@gJ
                    g$operand$27564$1a@gJ
                    (g$continue-with-operand$27483$1a@gJ
                      g$continuator$27563$1a@gJ
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$27474$1a@gJ
     g$cps/generate-declaration$27739$1a@gJ
     (case-lambda
       ((g$location$27565$1a@gJ g$expression-generator$27566$1a@gJ)
        (case-lambda
          ((g$continuator$27567$1a@gJ)
           (g$expression-generator$27566$1a@gJ
             (g$operand-continuator$27477$1a@gJ
               (case-lambda
                 ((g$operand$27568$1a@gJ)
                  (g$make-declaration$27506$1a@gJ
                    g$location$27565$1a@gJ
                    g$operand$27568$1a@gJ
                    (g$continue-with-operand$27483$1a@gJ
                      g$continuator$27567$1a@gJ
                      '(cps-void))))))))))))
   (g$cps/generate-combination$27475$1a@gJ
     g$cps/generate-combination$27740$1a@gJ
     (case-lambda
       ((g$operator-generator$27569$1a@gJ
          g$operand-generators$27570$1a@gJ)
        (g$cps/generate-subproblems$27476$1a@gJ
          (g$reverse$20656$1a@gJ
            (cons
              g$operator-generator$27569$1a@gJ
              g$operand-generators$27570$1a@gJ))
          (case-lambda
            ((g$operands$27571$1a@gJ g$continuator$27572$1a@gJ)
             (g$make-combination$27500$1a@gJ
               (car g$operands$27571$1a@gJ)
               (g$reify-continuation$27484$1a@gJ
                 g$continuator$27572$1a@gJ)
               (cdr g$operands$27571$1a@gJ))))))))
   (g$cps/generate-subproblems$27476$1a@gJ
     g$cps/generate-subproblems$27741$1a@gJ
     (case-lambda
       ((g$generators$27573$1a@gJ g$combiner$27574$1a@gJ)
        (case-lambda
          ((g$continuator$27575$1a@gJ)
           ((letrec ((g$recur$27576$1a@gJ
                       (case-lambda
                         ((g$generators$27577$1a@gJ
                            g$operands$27578$1a@gJ)
                          (if (pair? g$generators$27577$1a@gJ)
                            ((car g$generators$27577$1a@gJ)
                             ((case-lambda
                                ((g$generators$27579$1a@gJ)
                                 (g$operand-continuator$27477$1a@gJ
                                   (case-lambda
                                     ((g$operand$27580$1a@gJ)
                                      (g$recur$27576$1a@gJ
                                        g$generators$27579$1a@gJ
                                        (cons
                                          g$operand$27580$1a@gJ
                                          g$operands$27578$1a@gJ)))))))
                              (cdr g$generators$27577$1a@gJ)))
                            (g$combiner$27574$1a@gJ
                              g$operands$27578$1a@gJ
                              g$continuator$27575$1a@gJ))))))
              g$recur$27576$1a@gJ)
            g$generators$27573$1a@gJ
            '()))))))
   (g$operand-continuator$27477$1a@gJ
     g$operand-continuator$27742$1a@gJ
     (case-lambda
       ((g$generator$27581$1a@gJ)
        (case-lambda
          ((g$if-operand$27582$1a@gJ
             g$if-effect$27583$1a@gJ
             g$if-conditional$27584$1a@gJ
             g$if-variable$27585$1a@gJ
             g$if-inline$27586$1a@gJ)
           (begin
             g$if-effect$27583$1a@gJ
             g$if-conditional$27584$1a@gJ
             g$if-variable$27585$1a@gJ
             g$if-inline$27586$1a@gJ
             (g$if-operand$27582$1a@gJ g$generator$27581$1a@gJ)))))))
   (g$effect-continuator$27478$1a@gJ
     g$effect-continuator$27743$1a@gJ
     (case-lambda
       ((g$generator$27587$1a@gJ)
        (case-lambda
          ((g$if-operand$27588$1a@gJ
             g$if-effect$27589$1a@gJ
             g$if-conditional$27590$1a@gJ
             g$if-variable$27591$1a@gJ
             g$if-inline$27592$1a@gJ)
           (begin
             g$if-operand$27588$1a@gJ
             g$if-conditional$27590$1a@gJ
             g$if-variable$27591$1a@gJ
             g$if-inline$27592$1a@gJ
             (g$if-effect$27589$1a@gJ g$generator$27587$1a@gJ)))))))
   (g$conditional-continuator$27479$1a@gJ
     g$conditional-continuator$27744$1a@gJ
     (case-lambda
       ((g$generator$27593$1a@gJ)
        (case-lambda
          ((g$if-operand$27594$1a@gJ
             g$if-effect$27595$1a@gJ
             g$if-conditional$27596$1a@gJ
             g$if-variable$27597$1a@gJ
             g$if-inline$27598$1a@gJ)
           (begin
             g$if-operand$27594$1a@gJ
             g$if-effect$27595$1a@gJ
             g$if-variable$27597$1a@gJ
             g$if-inline$27598$1a@gJ
             (g$if-conditional$27596$1a@gJ
               g$generator$27593$1a@gJ)))))))
   (g$variable-continuator$27480$1a@gJ
     g$variable-continuator$27745$1a@gJ
     (case-lambda
       ((g$variable$27599$1a@gJ)
        (case-lambda
          ((g$if-operand$27600$1a@gJ
             g$if-effect$27601$1a@gJ
             g$if-conditional$27602$1a@gJ
             g$if-variable$27603$1a@gJ
             g$if-inline$27604$1a@gJ)
           (begin
             g$if-operand$27600$1a@gJ
             g$if-effect$27601$1a@gJ
             g$if-variable$27603$1a@gJ
             g$if-inline$27604$1a@gJ
             (g$if-variable$27603$1a@gJ g$variable$27599$1a@gJ)))))))
   (g$inline-continuator$27481$1a@gJ
     g$inline-continuator$27746$1a@gJ
     (case-lambda
       ((g$continuation$27605$1a@gJ)
        (case-lambda
          ((g$if-operand$27606$1a@gJ
             g$if-effect$27607$1a@gJ
             g$if-conditional$27608$1a@gJ
             g$if-variable$27609$1a@gJ
             g$if-inline$27610$1a@gJ)
           (begin
             g$if-operand$27606$1a@gJ
             g$if-effect$27607$1a@gJ
             g$if-conditional$27608$1a@gJ
             g$if-variable$27609$1a@gJ
             (g$if-inline$27610$1a@gJ g$continuation$27605$1a@gJ)))))))
   (g$reified-continuator$27482$1a@gJ
     g$reified-continuator$27747$1a@gJ
     (case-lambda
       ((g$continuator$27611$1a@gJ)
        (case-lambda
          ((g$if-operand$27612$1a@gJ
             g$if-effect$27613$1a@gJ
             g$if-conditional$27614$1a@gJ
             g$if-variable$27615$1a@gJ
             g$if-inline$27616$1a@gJ)
           (begin
             g$if-operand$27612$1a@gJ
             g$if-effect$27613$1a@gJ
             g$if-conditional$27614$1a@gJ
             (g$reify-continuation*$27485$1a@gJ
               g$continuator$27611$1a@gJ
               g$if-variable$27615$1a@gJ
               g$if-inline$27616$1a@gJ)))))))
   (g$continue-with-operand$27483$1a@gJ
     g$continue-with-operand$27748$1a@gJ
     (case-lambda
       ((g$continuator$27617$1a@gJ g$operand$27618$1a@gJ)
        (g$continuator$27617$1a@gJ
          (case-lambda
            ((g$generator$27619$1a@gJ)
             (g$generator$27619$1a@gJ g$operand$27618$1a@gJ)))
          (case-lambda
            ((g$generator$27620$1a@gJ) (g$generator$27620$1a@gJ)))
          (case-lambda
            ((g$generator$27621$1a@gJ)
             (g$generator$27621$1a@gJ
               (g$make-truth-test$27507$1a@gJ g$operand$27618$1a@gJ))))
          (case-lambda
            ((g$continuation-variable$27622$1a@gJ)
             (g$make-return$27501$1a@gJ
               (g$make-reference$27493$1a@gJ
                 g$continuation-variable$27622$1a@gJ)
               (list g$operand$27618$1a@gJ))))
          (case-lambda
            ((g$continuation-abstraction$27623$1a@gJ)
             (g$make-return$27501$1a@gJ
               g$continuation-abstraction$27623$1a@gJ
               (list g$operand$27618$1a@gJ))))))))
   (g$reify-continuation$27484$1a@gJ
     g$reify-continuation$27749$1a@gJ
     (case-lambda
       ((g$continuator$27624$1a@gJ)
        (g$continuator$27624$1a@gJ
          g$operand-continuation-reifier$27487$1a@gJ
          g$effect-continuation-reifier$27489$1a@gJ
          g$conditional-continuation-reifier$27491$1a@gJ
          (case-lambda
            ((g$variable$27625$1a@gJ)
             (g$make-reference$27493$1a@gJ g$variable$27625$1a@gJ)))
          (case-lambda
            ((g$continuation$27626$1a@gJ)
             g$continuation$27626$1a@gJ))))))
   (g$reify-continuation*$27485$1a@gJ
     g$reify-continuation*$27750$1a@gJ
     (case-lambda
       ((g$continuator$27627$1a@gJ
          g$if-variable$27628$1a@gJ
          g$if-inline$27629$1a@gJ)
        (g$continuator$27627$1a@gJ
          (g$operand-continuation-reifier*$27486$1a@gJ
            g$if-inline$27629$1a@gJ)
          (g$effect-continuation-reifier*$27488$1a@gJ
            g$if-inline$27629$1a@gJ)
          (g$conditional-continuation-reifier*$27490$1a@gJ
            g$if-inline$27629$1a@gJ)
          g$if-variable$27628$1a@gJ
          g$if-inline$27629$1a@gJ))))
   (g$operand-continuation-reifier*$27486$1a@gJ
     g$operand-continuation-reifier*$27751$1a@gJ
     (case-lambda
       ((g$receiver$27630$1a@gJ)
        (case-lambda
          ((g$generator$27631$1a@gJ)
           (g$receiver$27630$1a@gJ
             ((case-lambda
                ((g$variable$27632$1a@gJ)
                 (g$make-continuation-abstraction$27496$1a@gJ
                   (list g$variable$27632$1a@gJ)
                   (g$generator$27631$1a@gJ
                     (g$make-reference$27493$1a@gJ
                       g$variable$27632$1a@gJ)))))
              (g$generate-variable$27508$1a@gJ 'V))))))))
   (g$operand-continuation-reifier$27487$1a@gJ
     g$operand-continuation-reifier$27752$1a@gJ
     (g$operand-continuation-reifier*$27486$1a@gJ values))
   (g$effect-continuation-reifier*$27488$1a@gJ
     g$effect-continuation-reifier*$27753$1a@gJ
     (case-lambda
       ((g$receiver$27633$1a@gJ)
        (case-lambda
          ((g$generator$27634$1a@gJ)
           (g$receiver$27633$1a@gJ
             ((case-lambda
                ((g$variable$27635$1a@gJ)
                 (g$make-continuation-abstraction$27496$1a@gJ
                   g$variable$27635$1a@gJ
                   (g$generator$27634$1a@gJ))))
              (g$generate-variable$27508$1a@gJ 'IGNORE))))))))
   (g$effect-continuation-reifier$27489$1a@gJ
     g$effect-continuation-reifier$27754$1a@gJ
     (g$effect-continuation-reifier*$27488$1a@gJ values))
   (g$conditional-continuation-reifier*$27490$1a@gJ
     g$conditional-continuation-reifier*$27755$1a@gJ
     (case-lambda
       ((g$receiver$27636$1a@gJ)
        (case-lambda
          ((g$generator$27637$1a@gJ)
           (g$receiver$27636$1a@gJ
             ((case-lambda
                ((g$variable$27638$1a@gJ)
                 (g$make-continuation-abstraction$27496$1a@gJ
                   (list g$variable$27638$1a@gJ)
                   (g$generator$27637$1a@gJ
                     (g$make-truth-test$27507$1a@gJ
                       (g$make-reference$27493$1a@gJ
                         g$variable$27638$1a@gJ))))))
              (g$generate-variable$27508$1a@gJ 'T))))))))
   (g$conditional-continuation-reifier$27491$1a@gJ
     g$conditional-continuation-reifier$27756$1a@gJ
     (g$conditional-continuation-reifier*$27490$1a@gJ values))
   (g$make-literal$27492$1a@gJ
     g$make-literal$27757$1a@gJ
     (case-lambda
       ((g$datum$27639$1a@gJ) (list 'quote g$datum$27639$1a@gJ))))
   (g$make-reference$27493$1a@gJ
     g$make-reference$27758$1a@gJ
     (case-lambda ((g$variable$27640$1a@gJ) g$variable$27640$1a@gJ)))
   (g$make-user-abstraction$27494$1a@gJ
     g$make-user-abstraction$27759$1a@gJ
     (case-lambda
       ((g$bvl$27641$1a@gJ g$body-constructor$27642$1a@gJ)
        ((case-lambda
           ((g$continuation$27643$1a@gJ)
            (list
              'case-lambda
              (list
                (cons g$continuation$27643$1a@gJ g$bvl$27641$1a@gJ)
                (g$body-constructor$27642$1a@gJ
                  g$continuation$27643$1a@gJ)))))
         (g$generate-variable$27508$1a@gJ 'C)))))
   (g$make-user-abstractions$27495$1a@gJ
     g$make-user-abstractions$27760$1a@gJ
     (case-lambda
       ((g$bvls$27644$1a@gJ g$body-constructors$27645$1a@gJ)
        ((case-lambda
           ((g$continuation$27646$1a@gJ)
            (cons
              'case-lambda
              (g$map$20195$1a@gJ
                (case-lambda
                  ((g$bvl$27647$1a@gJ g$body-constructor$27648$1a@gJ)
                   (list
                     (cons g$continuation$27646$1a@gJ g$bvl$27647$1a@gJ)
                     (g$body-constructor$27648$1a@gJ
                       g$continuation$27646$1a@gJ))))
                g$bvls$27644$1a@gJ
                g$body-constructors$27645$1a@gJ))))
         (g$generate-variable$27508$1a@gJ 'C)))))
   (g$make-continuation-abstraction$27496$1a@gJ
     g$make-continuation-abstraction$27761$1a@gJ
     (case-lambda
       ((g$bvl$27649$1a@gJ g$body$27650$1a@gJ)
        (list
          'case-lambda
          (list g$bvl$27649$1a@gJ g$body$27650$1a@gJ)))))
   (g$make-recursive-bind$27497$1a@gJ
     g$make-recursive-bind$27762$1a@gJ
     (case-lambda
       ((g$variables$27651$1a@gJ
          g$constructors$27652$1a@gJ
          g$body$27653$1a@gJ)
        (list
          'letrec
          (g$map$20195$1a@gJ
            (case-lambda
              ((g$variable$27654$1a@gJ g$constructor$27655$1a@gJ)
               (list
                 g$variable$27654$1a@gJ
                 (list
                   (g$make-user-abstraction$27494$1a@gJ
                     '()
                     g$constructor$27655$1a@gJ)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$27654$1a@gJ))))))
            g$variables$27651$1a@gJ
            g$constructors$27652$1a@gJ)
          g$body$27653$1a@gJ))))
   (g$make-recursive*-bind$27498$1a@gJ
     g$make-recursive*-bind$27763$1a@gJ
     (case-lambda
       ((g$variables$27656$1a@gJ
          g$constructors$27657$1a@gJ
          g$body$27658$1a@gJ)
        (list
          'letrec*
          (g$map$20195$1a@gJ
            (case-lambda
              ((g$variable$27659$1a@gJ g$constructor$27660$1a@gJ)
               (list
                 g$variable$27659$1a@gJ
                 (list
                   (g$make-user-abstraction$27494$1a@gJ
                     '()
                     g$constructor$27660$1a@gJ)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$27659$1a@gJ))))))
            g$variables$27656$1a@gJ
            g$constructors$27657$1a@gJ)
          g$body$27658$1a@gJ))))
   (g$make-recursive*-library-bind$27499$1a@gJ
     g$make-recursive*-library-bind$27764$1a@gJ
     (case-lambda
       ((g$name$27661$1a@gJ
          g$variables$27662$1a@gJ
          g$variables*$27663$1a@gJ
          g$constructors$27664$1a@gJ
          g$body$27665$1a@gJ)
        (list
          'library-letrec*
          g$name$27661$1a@gJ
          (g$map$20195$1a@gJ
            (case-lambda
              ((g$variable$27666$1a@gJ
                 g$variable*$27667$1a@gJ
                 g$constructor$27668$1a@gJ)
               (list
                 g$variable$27666$1a@gJ
                 g$variable*$27667$1a@gJ
                 (list
                   (g$make-user-abstraction$27494$1a@gJ
                     '()
                     g$constructor$27668$1a@gJ)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$27666$1a@gJ))))))
            g$variables$27662$1a@gJ
            g$variables*$27663$1a@gJ
            g$constructors$27664$1a@gJ)
          g$body$27665$1a@gJ))))
   (g$make-combination$27500$1a@gJ
     g$make-combination$27765$1a@gJ
     (case-lambda
       ((g$operator$27669$1a@gJ
          g$continuation$27670$1a@gJ
          g$operands$27671$1a@gJ)
        (cons
          g$operator$27669$1a@gJ
          (cons g$continuation$27670$1a@gJ g$operands$27671$1a@gJ)))))
   (g$make-return$27501$1a@gJ
     g$make-return$27766$1a@gJ
     (case-lambda
       ((g$continuation$27672$1a@gJ g$operands$27673$1a@gJ)
        (cons g$continuation$27672$1a@gJ g$operands$27673$1a@gJ))))
   (g$make-conditional$27502$1a@gJ
     g$make-conditional$27767$1a@gJ
     (case-lambda
       ((g$condition$27674$1a@gJ
          g$consequent$27675$1a@gJ
          g$alternative$27676$1a@gJ)
        (list
          'if
          g$condition$27674$1a@gJ
          g$consequent$27675$1a@gJ
          g$alternative$27676$1a@gJ))))
   (g$make-conditional-join$27503$1a@gJ
     g$make-conditional-join$27768$1a@gJ
     (case-lambda
       ((g$continuation$27677$1a@gJ g$constructor$27678$1a@gJ)
        ((case-lambda
           ((g$variable$27679$1a@gJ)
            (g$make-let$27504$1a@gJ
              (list g$variable$27679$1a@gJ)
              (list g$continuation$27677$1a@gJ)
              (g$constructor$27678$1a@gJ g$variable$27679$1a@gJ))))
         (g$generate-variable$27508$1a@gJ 'J)))))
   (g$make-let$27504$1a@gJ
     g$make-let$27769$1a@gJ
     (case-lambda
       ((g$variables$27680$1a@gJ
          g$expressions$27681$1a@gJ
          g$body$27682$1a@gJ)
        (cons
          (list
            'case-lambda
            (list g$variables$27680$1a@gJ g$body$27682$1a@gJ))
          g$expressions$27681$1a@gJ))))
   (g$make-assignment$27505$1a@gJ
     g$make-assignment$27770$1a@gJ
     (case-lambda
       ((g$location$27683$1a@gJ
          g$operand$27684$1a@gJ
          g$expression$27685$1a@gJ)
        (list
          'begin
          (list 'set! g$location$27683$1a@gJ g$operand$27684$1a@gJ)
          g$expression$27685$1a@gJ))))
   (g$make-declaration$27506$1a@gJ
     g$make-declaration$27771$1a@gJ
     (case-lambda
       ((g$location$27686$1a@gJ
          g$operand$27687$1a@gJ
          g$expression$27688$1a@gJ)
        (list
          'begin
          (list 'define g$location$27686$1a@gJ g$operand$27687$1a@gJ)
          g$expression$27688$1a@gJ))))
   (g$make-truth-test$27507$1a@gJ
     g$make-truth-test$27772$1a@gJ
     (case-lambda ((g$operand$27689$1a@gJ) g$operand$27689$1a@gJ)))
   (g$generate-variable$27508$1a@gJ
     g$generate-variable$27773$1a@gJ
     (case-lambda ((g$name$27690$1a@gJ) (gensym g$name$27690$1a@gJ))))
   (g$parse$27509$1a@gJ
     g$parse$27774$1a@gJ
     (case-lambda
       ((g$x$27691$1a@gJ)
        (if (pair? g$x$27691$1a@gJ)
          ((case-lambda
             ((g$t$27692$1a@gJ)
              (if (eqv? g$t$27692$1a@gJ 'quote)
                (g$cps/generate-literal$27464$1a@gJ
                  (g$cadr$20658$1a@gJ g$x$27691$1a@gJ))
                (if (eqv? g$t$27692$1a@gJ 'if)
                  (g$cps/generate-conditional$27468$1a@gJ
                    (g$parse$27509$1a@gJ
                      (g$cadr$20658$1a@gJ g$x$27691$1a@gJ))
                    (g$parse$27509$1a@gJ
                      (g$caddr$20664$1a@gJ g$x$27691$1a@gJ))
                    (g$parse$27509$1a@gJ
                      (g$cadddr$20676$1a@gJ g$x$27691$1a@gJ)))
                  (if (eqv? g$t$27692$1a@gJ 'case-lambda)
                    ((case-lambda
                       ((g$d$27693$1a@gJ)
                        (g$cps/generate-abstractions$27466$1a@gJ
                          (g$map$20195$1a@gJ car g$d$27693$1a@gJ)
                          (g$map$20195$1a@gJ
                            (case-lambda
                              ((g$e$27694$1a@gJ)
                               (g$cps/generate-sequence$27472$1a@gJ
                                 (g$map$20195$1a@gJ
                                   g$parse$27509$1a@gJ
                                   (cdr g$e$27694$1a@gJ)))))
                            g$d$27693$1a@gJ))))
                     (cdr g$x$27691$1a@gJ))
                    (if (eqv? g$t$27692$1a@gJ 'letrec)
                      ((case-lambda
                         ((g$bindings$27695$1a@gJ g$body*$27696$1a@gJ)
                          ((case-lambda
                             ((g$lhs*$27697$1a@gJ g$rhs*$27698$1a@gJ)
                              ((case-lambda
                                 ((g$t*$27699$1a@gJ g$tmps$27700$1a@gJ)
                                  ((case-lambda
                                     ((g$s*$27701$1a@gJ)
                                      (g$parse$27509$1a@gJ
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$27697$1a@gJ
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$27699$1a@gJ
                                                    (g$append$20200$1a@gJ
                                                      g$s*$27701$1a@gJ
                                                      g$body*$27696$1a@gJ)))
                                                g$rhs*$27698$1a@gJ)))
                                          g$tmps$27700$1a@gJ))))
                                   (g$map$20195$1a@gJ
                                     (case-lambda
                                       ((g$i$27702$1a@gJ
                                          g$t$27703$1a@gJ)
                                        (list
                                          'set!
                                          g$i$27702$1a@gJ
                                          g$t$27703$1a@gJ)))
                                     g$lhs*$27697$1a@gJ
                                     g$t*$27699$1a@gJ))))
                               (g$map$20195$1a@gJ
                                 gensym
                                 g$lhs*$27697$1a@gJ)
                               (g$map$20195$1a@gJ
                                 (case-lambda
                                   ((g$x$27704$1a@gJ) 'uninitialized))
                                 g$lhs*$27697$1a@gJ))))
                           (g$map$20195$1a@gJ
                             car
                             g$bindings$27695$1a@gJ)
                           (g$map$20195$1a@gJ
                             g$cadr$20658$1a@gJ
                             g$bindings$27695$1a@gJ))))
                       (g$cadr$20658$1a@gJ g$x$27691$1a@gJ)
                       (g$cddr$20660$1a@gJ g$x$27691$1a@gJ))
                      (if (eqv? g$t$27692$1a@gJ 'letrec*)
                        ((case-lambda
                           ((g$bindings$27705$1a@gJ g$body*$27706$1a@gJ)
                            ((case-lambda
                               ((g$lhs*$27707$1a@gJ g$rhs*$27708$1a@gJ)
                                (g$cps/generate-recursive*-bind$27470$1a@gJ
                                  g$lhs*$27707$1a@gJ
                                  (g$map$20195$1a@gJ
                                    g$parse$27509$1a@gJ
                                    g$rhs*$27708$1a@gJ)
                                  (g$parse$27509$1a@gJ
                                    (cons
                                      'begin
                                      g$body*$27706$1a@gJ)))))
                             (g$map$20195$1a@gJ
                               car
                               g$bindings$27705$1a@gJ)
                             (g$map$20195$1a@gJ
                               g$cadr$20658$1a@gJ
                               g$bindings$27705$1a@gJ))))
                         (g$cadr$20658$1a@gJ g$x$27691$1a@gJ)
                         (g$cddr$20660$1a@gJ g$x$27691$1a@gJ))
                        (if (eqv? g$t$27692$1a@gJ 'library-letrec*)
                          ((case-lambda
                             ((g$name$27709$1a@gJ g$x$27710$1a@gJ)
                              ((case-lambda
                                 ((g$bindings$27711$1a@gJ
                                    g$body*$27712$1a@gJ)
                                  ((case-lambda
                                     ((g$lhs*$27713$1a@gJ
                                        g$lhs**$27714$1a@gJ
                                        g$rhs*$27715$1a@gJ)
                                      (g$cps/generate-recursive*-library-bind$27471$1a@gJ
                                        g$name$27709$1a@gJ
                                        g$lhs*$27713$1a@gJ
                                        g$lhs**$27714$1a@gJ
                                        (g$map$20195$1a@gJ
                                          g$parse$27509$1a@gJ
                                          g$rhs*$27715$1a@gJ)
                                        (g$parse$27509$1a@gJ
                                          (cons
                                            'begin
                                            g$body*$27712$1a@gJ)))))
                                   (g$map$20195$1a@gJ
                                     car
                                     g$bindings$27711$1a@gJ)
                                   (g$map$20195$1a@gJ
                                     g$cadr$20658$1a@gJ
                                     g$bindings$27711$1a@gJ)
                                   (g$map$20195$1a@gJ
                                     g$caddr$20664$1a@gJ
                                     g$bindings$27711$1a@gJ))))
                               (g$cadr$20658$1a@gJ g$x$27710$1a@gJ)
                               (g$cddr$20660$1a@gJ g$x$27710$1a@gJ))))
                           (g$cadr$20658$1a@gJ g$x$27691$1a@gJ)
                           (cdr g$x$27691$1a@gJ))
                          (if (eqv? g$t$27692$1a@gJ 'begin)
                            (g$cps/generate-sequence$27472$1a@gJ
                              (g$map$20195$1a@gJ
                                g$parse$27509$1a@gJ
                                (cdr g$x$27691$1a@gJ)))
                            (if (eqv? g$t$27692$1a@gJ 'set!)
                              (g$cps/generate-assignment$27473$1a@gJ
                                (g$cadr$20658$1a@gJ g$x$27691$1a@gJ)
                                (g$parse$27509$1a@gJ
                                  (g$caddr$20664$1a@gJ
                                    g$x$27691$1a@gJ)))
                              (if (eqv? g$t$27692$1a@gJ 'define)
                                (g$cps/generate-declaration$27474$1a@gJ
                                  (g$cadr$20658$1a@gJ g$x$27691$1a@gJ)
                                  (g$parse$27509$1a@gJ
                                    (g$caddr$20664$1a@gJ
                                      g$x$27691$1a@gJ)))
                                (begin
                                  '#f
                                  (if (list? g$x$27691$1a@gJ)
                                    (g$cps/generate-combination$27475$1a@gJ
                                      (g$parse$27509$1a@gJ
                                        (car g$x$27691$1a@gJ))
                                      (g$map$20195$1a@gJ
                                        g$parse$27509$1a@gJ
                                        (cdr g$x$27691$1a@gJ)))
                                    (error
                                      'rewrite
                                      '"invalid form ~s ~s"
                                      g$x$27691$1a@gJ
                                      (list?
                                        g$x$27691$1a@gJ)))))))))))))))
           (car g$x$27691$1a@gJ))
          (if (g$symbol?$20620$1a@gJ g$x$27691$1a@gJ)
            (g$cps/generate-reference$27463$1a@gJ g$x$27691$1a@gJ)
            (begin
              '#f
              (g$cps/generate-literal$27464$1a@gJ g$x$27691$1a@gJ)))))))
   (g$starts-with?$27510$1a@gJ
     g$starts-with?$27775$1a@gJ
     (case-lambda
       ((g$str$27716$1a@gJ g$sub$27717$1a@gJ)
        (clr-call-internal
          'system.string
          'startswith
          g$str$27716$1a@gJ
          g$sub$27717$1a@gJ))))
   (g$ends-with?$27511$1a@gJ
     g$ends-with?$27776$1a@gJ
     (case-lambda
       ((g$str$27718$1a@gJ g$sub$27719$1a@gJ)
        (clr-call-internal
          'system.string
          'endswith
          g$str$27718$1a@gJ
          g$sub$27719$1a@gJ))))
   (g$clr-generator?$27512$1a@gJ
     g$clr-generator?$27777$1a@gJ
     (case-lambda
       ((g$o$27720$1a@gJ)
        (if (g$symbol?$20620$1a@gJ g$o$27720$1a@gJ)
          (begin
            '#f
            ((case-lambda
               ((g$o$27721$1a@gJ)
                (if (g$starts-with?$27510$1a@gJ g$o$27721$1a@gJ '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$27511$1a@gJ
                      g$o$27721$1a@gJ
                      '"-internal"))
                  '#f)))
             (g$symbol->string$20640$1a@gJ g$o$27720$1a@gJ)))
          '#f))))
   (g$fix-primitives$27513$1a@gJ
     g$fix-primitives$27778$1a@gJ
     (case-lambda
       ((g$e$27722$1a@gJ)
        (if (if (pair? g$e$27722$1a@gJ)
              (begin '#f (list? g$e$27722$1a@gJ))
              '#f)
          ((case-lambda
             ((g$o$27723$1a@gJ)
              (if (eq? g$o$27723$1a@gJ 'quote)
                g$e$27722$1a@gJ
                (if (begin
                      '#f
                      (g$clr-generator?$27512$1a@gJ g$o$27723$1a@gJ))
                  (if (pair? (cdr g$e$27722$1a@gJ))
                    (list
                      (g$fix-primitives$27513$1a@gJ
                        (g$cadr$20658$1a@gJ g$e$27722$1a@gJ))
                      (cons
                        g$o$27723$1a@gJ
                        (g$map$20195$1a@gJ
                          g$fix-primitives$27513$1a@gJ
                          (g$cddr$20660$1a@gJ g$e$27722$1a@gJ))))
                    g$e$27722$1a@gJ)
                  (begin
                    '#f
                    (cons
                      (g$fix-primitives$27513$1a@gJ g$o$27723$1a@gJ)
                      (g$map$20195$1a@gJ
                        g$fix-primitives$27513$1a@gJ
                        (cdr g$e$27722$1a@gJ))))))))
           (car g$e$27722$1a@gJ))
          g$e$27722$1a@gJ))))
   (g$parse->cps$27514$1a@gJ
     g$parse->cps$27779$1a@gJ
     (case-lambda
       ((g$e$27724$1a@gJ g$var$27725$1a@gJ)
        ((g$parse$27509$1a@gJ g$e$27724$1a@gJ)
         (g$variable-continuator$27480$1a@gJ g$var$27725$1a@gJ)))))
   (g$convert->cps$27515$1a@gJ
     g$convert->cps$27780$1a@gJ
     (case-lambda
       ((g$e$27726$1a@gJ g$var$27727$1a@gJ)
        (g$fix-primitives$27513$1a@gJ
          (g$parse->cps$27514$1a@gJ
            g$e$27726$1a@gJ
            g$var$27727$1a@gJ))))))
  (void))

(library-letrec* (ironscheme constant-fold)
  ((g$allow-constant-fold?$27781$1a@gJ
     g$allow-constant-fold?$27796$1a@gJ
     (case-lambda
       ((g$proc$27786$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'get_AllowConstantFold
          g$proc$27786$1a@gJ))))
   (g$set-allow-constant-fold!$27782$1a@gJ
     g$set-allow-constant-fold!$27797$1a@gJ
     (case-lambda
       ((g$proc$27787$1a@gJ g$bool$27788$1a@gJ)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'set_AllowConstantFold
          g$proc$27787$1a@gJ
          g$bool$27788$1a@gJ))))
   (g$enable-constant-fold$27783$1a@gJ
     g$enable-constant-fold$27798$1a@gJ
     (case-lambda
       (g$procs$27789$1a@gJ
        (g$for-each$20196$1a@gJ
          (case-lambda
            ((g$proc$27790$1a@gJ)
             (g$set-allow-constant-fold!$27782$1a@gJ
               g$proc$27790$1a@gJ
               '#t)))
          g$procs$27789$1a@gJ))))
   (g$proc-filter$27784$1a@gJ
     g$proc-filter$27799$1a@gJ
     (case-lambda
       ((g$b$27791$1a@gJ) (eq? 'procedure (cdr g$b$27791$1a@gJ)))))
   (g$enable-constant-fold/env$27785$1a@gJ
     g$enable-constant-fold/env$27800$1a@gJ
     (case-lambda
       (g$import-spec$27792$1a@gJ
        ((case-lambda
           ((g$env$27793$1a@gJ g$env*$27794$1a@gJ)
            ((case-lambda
               ((g$b$27795$1a@gJ)
                (apply
                  g$enable-constant-fold$27783$1a@gJ
                  (g$eval$32603$1a@gJ
                    (cons 'list g$b$27795$1a@gJ)
                    g$env*$27794$1a@gJ))))
             (g$map$20195$1a@gJ
               car
               (g$filter$20182$1a@gJ
                 g$proc-filter$27784$1a@gJ
                 (g$environment-bindings$32595$1a@gJ
                   g$env$27793$1a@gJ))))))
         (apply g$environment$32599$1a@gJ g$import-spec$27792$1a@gJ)
         (apply
           g$environment$32599$1a@gJ
           '(only (rnrs) list)
           g$import-spec$27792$1a@gJ))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$27801$1a@gJ
     g$current-primitive-locations$27846$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda ((g$x$27807$1a@gJ) '#f))
       (case-lambda
         ((g$p$27808$1a@gJ)
          (begin
            (if (not (g$procedure?$20622$1a@gJ g$p$27808$1a@gJ))
              (g$assertion-error$32618$1a@gJ
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$27808$1a@gJ)))))
   (g$mutable?$27802$1a@gJ
     g$mutable?$27847$1a@gJ
     (case-lambda
       ((g$x$27809$1a@gJ)
        (letrec* ((g$simple?$27810$1a@gJ
                    (case-lambda
                      ((g$x$27811$1a@gJ)
                       ((case-lambda
                          ((g$t$27812$1a@gJ)
                           (if g$t$27812$1a@gJ
                             g$t$27812$1a@gJ
                             ((case-lambda
                                ((g$t$27813$1a@gJ)
                                 (if g$t$27813$1a@gJ
                                   g$t$27813$1a@gJ
                                   ((case-lambda
                                      ((g$t$27814$1a@gJ)
                                       (if g$t$27814$1a@gJ
                                         g$t$27814$1a@gJ
                                         ((case-lambda
                                            ((g$t$27815$1a@gJ)
                                             (if g$t$27815$1a@gJ
                                               g$t$27815$1a@gJ
                                               ((case-lambda
                                                  ((g$t$27816$1a@gJ)
                                                   (if g$t$27816$1a@gJ
                                                     g$t$27816$1a@gJ
                                                     ((case-lambda
                                                        ((g$t$27817$1a@gJ)
                                                         (if g$t$27817$1a@gJ
                                                           g$t$27817$1a@gJ
                                                           (begin
                                                             '#f
                                                             (g$number?$21647$1a@gJ
                                                               g$x$27811$1a@gJ)))))
                                                      (g$bytevector?$20619$1a@gJ
                                                        g$x$27811$1a@gJ)))))
                                                (g$string?$20616$1a@gJ
                                                  g$x$27811$1a@gJ)))))
                                          (g$boolean?$20621$1a@gJ
                                            g$x$27811$1a@gJ)))))
                                    (g$symbol?$20620$1a@gJ
                                      g$x$27811$1a@gJ)))))
                              (g$char?$20617$1a@gJ g$x$27811$1a@gJ)))))
                        (null? g$x$27811$1a@gJ))))))
          (not (g$simple?$27810$1a@gJ g$x$27809$1a@gJ))))))
   (g$rewriter$27803$1a@gJ
     g$rewriter$27848$1a@gJ
     (case-lambda
       ((g$quote-hack?$27818$1a@gJ)
        (letrec* ((g$f$27819$1a@gJ
                    (case-lambda
                      ((g$x$27820$1a@gJ)
                       (if (pair? g$x$27820$1a@gJ)
                         ((case-lambda
                            ((g$t$27821$1a@gJ)
                             (if (eqv? g$t$27821$1a@gJ 'quote)
                               (if (if g$quote-hack?$27818$1a@gJ
                                     (begin
                                       '#f
                                       (g$mutable?$27802$1a@gJ
                                         (g$cadr$20658$1a@gJ
                                           g$x$27820$1a@gJ)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$27822$1a@gJ)
                                     (begin
                                       (set-symbol-value!
                                         g$g$27822$1a@gJ
                                         (g$cadr$20658$1a@gJ
                                           g$x$27820$1a@gJ))
                                       g$g$27822$1a@gJ)))
                                  (gensym 'weak-temp))
                                 (begin '#f g$x$27820$1a@gJ))
                               (if (eqv? g$t$27821$1a@gJ 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$20195$1a@gJ
                                     (case-lambda
                                       ((g$x$27823$1a@gJ)
                                        (cons
                                          (car g$x$27823$1a@gJ)
                                          (g$map$20195$1a@gJ
                                            g$f$27819$1a@gJ
                                            (cdr g$x$27823$1a@gJ)))))
                                     (cdr g$x$27820$1a@gJ)))
                                 (if (eqv? g$t$27821$1a@gJ 'lambda)
                                   (g$cons*$20197$1a@gJ
                                     'lambda
                                     (g$cadr$20658$1a@gJ
                                       g$x$27820$1a@gJ)
                                     (g$map$20195$1a@gJ
                                       g$f$27819$1a@gJ
                                       (g$cddr$20660$1a@gJ
                                         g$x$27820$1a@gJ)))
                                   (if (eqv? g$t$27821$1a@gJ 'letrec)
                                     ((case-lambda
                                        ((g$bindings$27824$1a@gJ
                                           g$body*$27825$1a@gJ)
                                         ((case-lambda
                                            ((g$lhs*$27826$1a@gJ
                                               g$rhs*$27827$1a@gJ)
                                             (g$cons*$20197$1a@gJ
                                               'letrec
                                               (g$map$20195$1a@gJ
                                                 list
                                                 g$lhs*$27826$1a@gJ
                                                 (g$map$20195$1a@gJ
                                                   g$f$27819$1a@gJ
                                                   g$rhs*$27827$1a@gJ))
                                               (g$map$20195$1a@gJ
                                                 g$f$27819$1a@gJ
                                                 g$body*$27825$1a@gJ))))
                                          (g$map$20195$1a@gJ
                                            car
                                            g$bindings$27824$1a@gJ)
                                          (g$map$20195$1a@gJ
                                            g$cadr$20658$1a@gJ
                                            g$bindings$27824$1a@gJ))))
                                      (g$cadr$20658$1a@gJ
                                        g$x$27820$1a@gJ)
                                      (g$cddr$20660$1a@gJ
                                        g$x$27820$1a@gJ))
                                     (if (eqv? g$t$27821$1a@gJ 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$27828$1a@gJ
                                             g$body*$27829$1a@gJ)
                                           ((case-lambda
                                              ((g$lhs*$27830$1a@gJ
                                                 g$rhs*$27831$1a@gJ)
                                               (g$cons*$20197$1a@gJ
                                                 'letrec*
                                                 (g$map$20195$1a@gJ
                                                   list
                                                   g$lhs*$27830$1a@gJ
                                                   (g$map$20195$1a@gJ
                                                     g$f$27819$1a@gJ
                                                     g$rhs*$27831$1a@gJ))
                                                 (g$map$20195$1a@gJ
                                                   g$f$27819$1a@gJ
                                                   g$body*$27829$1a@gJ))))
                                            (g$map$20195$1a@gJ
                                              car
                                              g$bindings$27828$1a@gJ)
                                            (g$map$20195$1a@gJ
                                              g$cadr$20658$1a@gJ
                                              g$bindings$27828$1a@gJ))))
                                        (g$cadr$20658$1a@gJ
                                          g$x$27820$1a@gJ)
                                        (g$cddr$20660$1a@gJ
                                          g$x$27820$1a@gJ))
                                       (if (eqv?
                                             g$t$27821$1a@gJ
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$27832$1a@gJ
                                               g$x$27833$1a@gJ)
                                             ((case-lambda
                                                ((g$bindings$27834$1a@gJ
                                                   g$body*$27835$1a@gJ)
                                                 ((case-lambda
                                                    ((g$lhs*$27836$1a@gJ
                                                       g$lhs**$27837$1a@gJ
                                                       g$rhs*$27838$1a@gJ)
                                                     (g$cons*$20197$1a@gJ
                                                       'library-letrec*
                                                       g$name$27832$1a@gJ
                                                       (g$map$20195$1a@gJ
                                                         list
                                                         g$lhs*$27836$1a@gJ
                                                         g$lhs**$27837$1a@gJ
                                                         (g$map$20195$1a@gJ
                                                           g$f$27819$1a@gJ
                                                           g$rhs*$27838$1a@gJ))
                                                       (g$map$20195$1a@gJ
                                                         g$f$27819$1a@gJ
                                                         g$body*$27835$1a@gJ))))
                                                  (g$map$20195$1a@gJ
                                                    car
                                                    g$bindings$27834$1a@gJ)
                                                  (g$map$20195$1a@gJ
                                                    g$cadr$20658$1a@gJ
                                                    g$bindings$27834$1a@gJ)
                                                  (g$map$20195$1a@gJ
                                                    g$caddr$20664$1a@gJ
                                                    g$bindings$27834$1a@gJ))))
                                              (g$cadr$20658$1a@gJ
                                                g$x$27833$1a@gJ)
                                              (g$cddr$20660$1a@gJ
                                                g$x$27833$1a@gJ))))
                                          (g$cadr$20658$1a@gJ
                                            g$x$27820$1a@gJ)
                                          (cdr g$x$27820$1a@gJ))
                                         (if (eqv?
                                               g$t$27821$1a@gJ
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$20195$1a@gJ
                                               g$f$27819$1a@gJ
                                               (cdr g$x$27820$1a@gJ)))
                                           (if (eqv?
                                                 g$t$27821$1a@gJ
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$20658$1a@gJ
                                                 g$x$27820$1a@gJ)
                                               (g$f$27819$1a@gJ
                                                 (g$caddr$20664$1a@gJ
                                                   g$x$27820$1a@gJ)))
                                             (if (eqv?
                                                   g$t$27821$1a@gJ
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$27839$1a@gJ)
                                                   ((case-lambda
                                                      ((g$t$27840$1a@gJ)
                                                       (if g$t$27840$1a@gJ
                                                         ((case-lambda
                                                            ((g$loc$27841$1a@gJ)
                                                             g$loc$27841$1a@gJ))
                                                          g$t$27840$1a@gJ)
                                                         (begin
                                                           '#f
                                                           g$op$27839$1a@gJ))))
                                                    ((g$current-primitive-locations$27801$1a@gJ)
                                                     g$op$27839$1a@gJ))))
                                                (g$cadr$20658$1a@gJ
                                                  g$x$27820$1a@gJ))
                                               (if (eqv?
                                                     g$t$27821$1a@gJ
                                                     'define)
                                                 g$x$27820$1a@gJ
                                                 (begin
                                                   '#f
                                                   (if (list?
                                                         g$x$27820$1a@gJ)
                                                     (g$map$20195$1a@gJ
                                                       g$f$27819$1a@gJ
                                                       g$x$27820$1a@gJ)
                                                     (error
                                                       'rewrite
                                                       '"invalid form ~s ~s"
                                                       g$x$27820$1a@gJ
                                                       (list?
                                                         g$x$27820$1a@gJ))))))))))))))))
                          (car g$x$27820$1a@gJ))
                         (begin '#f g$x$27820$1a@gJ))))))
          g$f$27819$1a@gJ))))
   (g$expanded->core$27804$1a@gJ
     g$expanded->core$27849$1a@gJ
     (case-lambda
       ((g$x$27842$1a@gJ)
        ((g$rewriter$27803$1a@gJ '#t) g$x$27842$1a@gJ))))
   (g$compile-core-expr$27805$1a@gJ
     g$compile-core-expr$27850$1a@gJ
     (case-lambda
       ((g$x$27843$1a@gJ)
        ((g$rewriter$27803$1a@gJ '#f) g$x$27843$1a@gJ))))
   (g$compile-core-expr-to-port$27806$1a@gJ
     g$compile-core-expr-to-port$27851$1a@gJ
     (case-lambda
       ((g$x$27844$1a@gJ g$p$27845$1a@gJ)
        (g$pretty-print$27462$1a@gJ
          ((g$rewriter$27803$1a@gJ '#f) g$x$27844$1a@gJ)
          g$p$27845$1a@gJ)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$27852$1a@gJ
     g$make-collection$28061$1a@gJ
     (case-lambda
       (()
        ((case-lambda
           ((g$set$27915$1a@gJ)
            (letrec* ((g$set-cons$27916$1a@gJ
                        (case-lambda
                          ((g$x$27920$1a@gJ g$ls$27921$1a@gJ)
                           (if (g$memq$20187$1a@gJ
                                 g$x$27920$1a@gJ
                                 g$ls$27921$1a@gJ)
                             g$ls$27921$1a@gJ
                             (begin
                               '#f
                               (cons
                                 g$x$27920$1a@gJ
                                 g$ls$27921$1a@gJ)))))))
              (case-lambda
                (() g$set$27915$1a@gJ)
                ((g$x$27917$1a@gJ)
                 (set! g$set$27915$1a@gJ
                   (g$set-cons$27916$1a@gJ
                     g$x$27917$1a@gJ
                     g$set$27915$1a@gJ)))
                ((g$x$27918$1a@gJ g$del?$27919$1a@gJ)
                 (if g$del?$27919$1a@gJ
                   (set! g$set$27915$1a@gJ
                     (g$remq$20205$1a@gJ
                       g$x$27918$1a@gJ
                       g$set$27915$1a@gJ))
                   (set! g$set$27915$1a@gJ
                     (g$set-cons$27916$1a@gJ
                       g$x$27918$1a@gJ
                       g$set$27915$1a@gJ))))))))
         '()))))
   (g$current-library-collection$27853$1a@gJ
     g$current-library-collection$28062$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (g$make-collection$27852$1a@gJ)
       (case-lambda
         ((g$x$27922$1a@gJ)
          (begin
            (if (not (g$procedure?$20622$1a@gJ g$x$27922$1a@gJ))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$27922$1a@gJ)
              (void))
            g$x$27922$1a@gJ)))))
   (g$9822$27854$1a@gJ
     g$9822$28063$1a@gJ
     (make-record-type-descriptor
       'library
       '#f
       'g$9825$1a@gJ
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9824$27855$1a@gJ g$9824$28064$1a@gJ '#f)
   (g$9823$27856$1a@gJ
     g$9823$28065$1a@gJ
     (make-record-constructor-descriptor
       g$9822$27854$1a@gJ
       '#f
       g$9824$27855$1a@gJ))
   (g$library?$27859$1a@gJ
     g$library?$28066$1a@gJ
     (record-predicate g$9822$27854$1a@gJ))
   (g$make-library$27860$1a@gJ
     g$make-library$28067$1a@gJ
     (record-constructor g$9823$27856$1a@gJ))
   (g$library-id$27861$1a@gJ
     g$library-id$28068$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '0))
   (g$library-name$27862$1a@gJ
     g$library-name$28069$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '1))
   (g$library-version$27863$1a@gJ
     g$library-version$28070$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '2))
   (g$library-imp*$27864$1a@gJ
     g$library-imp*$28071$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '3))
   (g$library-vis*$27865$1a@gJ
     g$library-vis*$28072$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '4))
   (g$library-inv*$27866$1a@gJ
     g$library-inv*$28073$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '5))
   (g$library-subst$27867$1a@gJ
     g$library-subst$28074$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '6))
   (g$library-env$27868$1a@gJ
     g$library-env$28075$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '7))
   (g$library-visit-state$27869$1a@gJ
     g$library-visit-state$28076$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '8))
   (g$library-invoke-state$27870$1a@gJ
     g$library-invoke-state$28077$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '9))
   (g$library-visit-code$27871$1a@gJ
     g$library-visit-code$28078$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '10))
   (g$library-invoke-code$27872$1a@gJ
     g$library-invoke-code$28079$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '11))
   (g$library-visible?$27873$1a@gJ
     g$library-visible?$28080$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '12))
   (g$library-source-file-name$27874$1a@gJ
     g$library-source-file-name$28081$1a@gJ
     (record-accessor g$9822$27854$1a@gJ '13))
   (g$set-library-id!$27875$1a@gJ
     g$set-library-id!$28082$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '0))
   (g$set-library-name!$27876$1a@gJ
     g$set-library-name!$28083$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '1))
   (g$set-library-version!$27877$1a@gJ
     g$set-library-version!$28084$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '2))
   (g$set-library-imp*!$27878$1a@gJ
     g$set-library-imp*!$28085$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '3))
   (g$set-library-vis*!$27879$1a@gJ
     g$set-library-vis*!$28086$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '4))
   (g$set-library-inv*!$27880$1a@gJ
     g$set-library-inv*!$28087$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '5))
   (g$set-library-subst!$27881$1a@gJ
     g$set-library-subst!$28088$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '6))
   (g$set-library-env!$27882$1a@gJ
     g$set-library-env!$28089$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '7))
   (g$set-library-visit-state!$27883$1a@gJ
     g$set-library-visit-state!$28090$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '8))
   (g$set-library-invoke-state!$27884$1a@gJ
     g$set-library-invoke-state!$28091$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '9))
   (g$set-library-visit-code!$27885$1a@gJ
     g$set-library-visit-code!$28092$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '10))
   (g$set-library-invoke-code!$27886$1a@gJ
     g$set-library-invoke-code!$28093$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '11))
   (g$set-library-visible?!$27887$1a@gJ
     g$set-library-visible?!$28094$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '12))
   (g$set-library-source-file-name!$27888$1a@gJ
     g$set-library-source-file-name!$28095$1a@gJ
     (record-mutator g$9822$27854$1a@gJ '13))
   (g$rp$27889$1a@gJ
     g$rp$28096$1a@gJ
     (make-record-printer
       'library
       (case-lambda
         ((g$x$27923$1a@gJ g$p$27924$1a@gJ g$wr$27925$1a@gJ)
          (begin
            (if (not (g$library?$27859$1a@gJ g$x$27923$1a@gJ))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$26935$1a@gJ
                '"#<library ~s>"
                (if (null?
                      (g$library-version$27863$1a@gJ g$x$27923$1a@gJ))
                  (g$library-name$27862$1a@gJ g$x$27923$1a@gJ)
                  (g$append$20200$1a@gJ
                    (g$library-name$27862$1a@gJ g$x$27923$1a@gJ)
                    (list
                      (g$library-version$27863$1a@gJ
                        g$x$27923$1a@gJ)))))
              g$p$27924$1a@gJ))))))
   (g$find-dependencies$27890$1a@gJ
     g$find-dependencies$28097$1a@gJ
     (case-lambda
       ((g$ls$27926$1a@gJ)
        (if (null? g$ls$27926$1a@gJ)
          '()
          (begin
            '#f
            (assertion-violation
              'find-dependencies
              '"cannot handle deps yet"))))))
   (g$find-library-by$27891$1a@gJ
     g$find-library-by$28098$1a@gJ
     (case-lambda
       ((g$pred$27927$1a@gJ)
        ((letrec ((g$f$27928$1a@gJ
                    (case-lambda
                      ((g$ls$27929$1a@gJ)
                       (if (null? g$ls$27929$1a@gJ)
                         '#f
                         (if (g$pred$27927$1a@gJ (car g$ls$27929$1a@gJ))
                           (car g$ls$27929$1a@gJ)
                           (begin
                             '#f
                             (g$f$27928$1a@gJ
                               (cdr g$ls$27929$1a@gJ)))))))))
           g$f$27928$1a@gJ)
         ((g$current-library-collection$27853$1a@gJ))))))
   (g$library-path$27892$1a@gJ
     g$library-path$28099$1a@gJ
     (g$make-parameter$27252$1a@gJ
       '(".")
       (case-lambda
         ((g$x$27930$1a@gJ)
          (if (if (list? g$x$27930$1a@gJ)
                (begin
                  '#f
                  (g$for-all$20193$1a@gJ
                    g$string?$20616$1a@gJ
                    g$x$27930$1a@gJ))
                '#f)
            (g$map$20195$1a@gJ
              (case-lambda ((g$x$27931$1a@gJ) g$x$27931$1a@gJ))
              g$x$27930$1a@gJ)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$27930$1a@gJ))))))
   (g$library-extensions$27893$1a@gJ
     g$library-extensions$28100$1a@gJ
     (g$make-parameter$27252$1a@gJ
       '(".sls" ".ss")
       (case-lambda
         ((g$x$27932$1a@gJ)
          (if (if (list? g$x$27932$1a@gJ)
                (begin
                  '#f
                  (g$for-all$20193$1a@gJ
                    g$string?$20616$1a@gJ
                    g$x$27932$1a@gJ))
                '#f)
            (g$map$20195$1a@gJ
              (case-lambda ((g$x$27933$1a@gJ) g$x$27933$1a@gJ))
              g$x$27932$1a@gJ)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$27932$1a@gJ))))))
   (g$library-name->file-name$27894$1a@gJ
     g$library-name->file-name$28101$1a@gJ
     (case-lambda
       ((g$x$27934$1a@gJ)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$26695$1a@gJ)))
          (case-lambda
            ((g$p$27937$1a@gJ g$extract$27938$1a@gJ)
             ((case-lambda
                ((g$extract$27939$1a@gJ g$p$27940$1a@gJ)
                 (letrec* ((g$display-hex$27941$1a@gJ
                             (case-lambda
                               ((g$n$27949$1a@gJ)
                                (if (g$<=$21671$1a@gJ
                                      '0
                                      g$n$27949$1a@gJ
                                      '9)
                                  (display
                                    g$n$27949$1a@gJ
                                    g$p$27940$1a@gJ)
                                  (begin
                                    '#f
                                    (display
                                      (g$integer->char$20627$1a@gJ
                                        (+ (g$char->integer$20626$1a@gJ
                                             '#\A)
                                           (- g$n$27949$1a@gJ '10)))
                                      g$p$27940$1a@gJ)))))))
                   (begin
                     ((letrec ((g$f$27942$1a@gJ
                                 (case-lambda
                                   ((g$ls$27943$1a@gJ)
                                    (if (not (null? g$ls$27943$1a@gJ))
                                      (begin
                                        (display '"/" g$p$27940$1a@gJ)
                                        (g$for-each$20196$1a@gJ
                                          (case-lambda
                                            ((g$c$27944$1a@gJ)
                                             (if ((case-lambda
                                                    ((g$t$27945$1a@gJ)
                                                     (if g$t$27945$1a@gJ
                                                       g$t$27945$1a@gJ
                                                       ((case-lambda
                                                          ((g$t$27946$1a@gJ)
                                                           (if g$t$27946$1a@gJ
                                                             g$t$27946$1a@gJ
                                                             ((case-lambda
                                                                ((g$t$27947$1a@gJ)
                                                                 (if g$t$27947$1a@gJ
                                                                   g$t$27947$1a@gJ
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$20188$1a@gJ
                                                                       g$c$27944$1a@gJ
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$20702$1a@gJ
                                                                '#\0
                                                                g$c$27944$1a@gJ
                                                                '#\9)))))
                                                        (g$char<=?$20702$1a@gJ
                                                          '#\A
                                                          g$c$27944$1a@gJ
                                                          '#\Z)))))
                                                  (g$char<=?$20702$1a@gJ
                                                    '#\a
                                                    g$c$27944$1a@gJ
                                                    '#\z))
                                               (display
                                                 g$c$27944$1a@gJ
                                                 g$p$27940$1a@gJ)
                                               (begin
                                                 '#f
                                                 (display
                                                   '"%"
                                                   g$p$27940$1a@gJ)
                                                 ((case-lambda
                                                    ((g$n$27948$1a@gJ)
                                                     (begin
                                                       (g$display-hex$27941$1a@gJ
                                                         (g$quotient$22430$1a@gJ
                                                           g$n$27948$1a@gJ
                                                           '16))
                                                       (g$display-hex$27941$1a@gJ
                                                         (g$remainder$22431$1a@gJ
                                                           g$n$27948$1a@gJ
                                                           '16)))))
                                                  (g$char->integer$20626$1a@gJ
                                                    g$c$27944$1a@gJ))))))
                                          (g$string->list$20635$1a@gJ
                                            (g$symbol->string$20640$1a@gJ
                                              (car g$ls$27943$1a@gJ))))
                                        (g$f$27942$1a@gJ
                                          (cdr g$ls$27943$1a@gJ)))
                                      (void))))))
                        g$f$27942$1a@gJ)
                      g$x$27934$1a@gJ)
                     (g$extract$27939$1a@gJ)))))
              g$extract$27938$1a@gJ
              g$p$27937$1a@gJ)))))))
   (g$file-locator$27895$1a@gJ
     g$file-locator$28102$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda
         ((g$x$27950$1a@gJ)
          ((case-lambda
             ((g$str$27951$1a@gJ)
              ((letrec ((g$f$27952$1a@gJ
                          (case-lambda
                            ((g$ls$27953$1a@gJ
                               g$exts$27954$1a@gJ
                               g$failed-list$27955$1a@gJ)
                             (if (null? g$ls$27953$1a@gJ)
                               (g$file-locator-resolution-error$27250$1a@gJ
                                 g$x$27950$1a@gJ
                                 (g$reverse$20656$1a@gJ
                                   g$failed-list$27955$1a@gJ)
                                 ((case-lambda
                                    ((g$ls$27956$1a@gJ)
                                     (if (null? g$ls$27956$1a@gJ)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$27956$1a@gJ))))
                                  (g$external-pending-libraries$27901$1a@gJ)))
                               (if (null? g$exts$27954$1a@gJ)
                                 (g$f$27952$1a@gJ
                                   (cdr g$ls$27953$1a@gJ)
                                   (g$library-extensions$27893$1a@gJ)
                                   g$failed-list$27955$1a@gJ)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$name$27957$1a@gJ)
                                       (if (g$file-exists?$20777$1a@gJ
                                             g$name$27957$1a@gJ)
                                         g$name$27957$1a@gJ
                                         (g$f$27952$1a@gJ
                                           g$ls$27953$1a@gJ
                                           (cdr g$exts$27954$1a@gJ)
                                           (cons
                                             g$name$27957$1a@gJ
                                             g$failed-list$27955$1a@gJ)))))
                                    (g$string-append$20638$1a@gJ
                                      (car g$ls$27953$1a@gJ)
                                      g$str$27951$1a@gJ
                                      (car g$exts$27954$1a@gJ))))))))))
                 g$f$27952$1a@gJ)
               (g$library-path$27892$1a@gJ)
               (g$library-extensions$27893$1a@gJ)
               '())))
           (g$library-name->file-name$27894$1a@gJ g$x$27950$1a@gJ))))
       (case-lambda
         ((g$f$27958$1a@gJ)
          (if (g$procedure?$20622$1a@gJ g$f$27958$1a@gJ)
            g$f$27958$1a@gJ
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$27958$1a@gJ))))))
   (g$serialize-all$27896$1a@gJ
     g$serialize-all$28103$1a@gJ
     (case-lambda
       ((g$serialize$27959$1a@gJ g$compile$27960$1a@gJ)
        (letrec* ((g$library-desc$27961$1a@gJ
                    (case-lambda
                      ((g$x$27963$1a@gJ)
                       (list
                         (g$library-id$27861$1a@gJ g$x$27963$1a@gJ)
                         (g$library-name$27862$1a@gJ
                           g$x$27963$1a@gJ))))))
          (g$for-each$20196$1a@gJ
            (case-lambda
              ((g$x$27962$1a@gJ)
               (if (g$library-source-file-name$27874$1a@gJ
                     g$x$27962$1a@gJ)
                 (g$serialize$27959$1a@gJ
                   (g$library-source-file-name$27874$1a@gJ
                     g$x$27962$1a@gJ)
                   (list
                     (g$library-id$27861$1a@gJ g$x$27962$1a@gJ)
                     (g$library-name$27862$1a@gJ g$x$27962$1a@gJ)
                     (g$library-version$27863$1a@gJ g$x$27962$1a@gJ)
                     (g$map$20195$1a@gJ
                       g$library-desc$27961$1a@gJ
                       (g$library-imp*$27864$1a@gJ g$x$27962$1a@gJ))
                     (g$map$20195$1a@gJ
                       g$library-desc$27961$1a@gJ
                       (g$library-vis*$27865$1a@gJ g$x$27962$1a@gJ))
                     (g$map$20195$1a@gJ
                       g$library-desc$27961$1a@gJ
                       (g$library-inv*$27866$1a@gJ g$x$27962$1a@gJ))
                     (g$library-subst$27867$1a@gJ g$x$27962$1a@gJ)
                     (g$library-env$27868$1a@gJ g$x$27962$1a@gJ)
                     (g$compile$27960$1a@gJ
                       (g$library-visit-code$27871$1a@gJ
                         g$x$27962$1a@gJ))
                     (g$compile$27960$1a@gJ
                       (g$library-invoke-code$27872$1a@gJ
                         g$x$27962$1a@gJ))
                     (g$library-visible?$27873$1a@gJ g$x$27962$1a@gJ)))
                 (void))))
            ((g$current-library-collection$27853$1a@gJ)))))))
   (g$current-precompiled-library-loader$27897$1a@gJ
     g$current-precompiled-library-loader$28104$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda ((g$filename$27964$1a@gJ g$sk$27965$1a@gJ) '#f))))
   (g$try-load-from-file$27898$1a@gJ
     g$try-load-from-file$28105$1a@gJ
     (case-lambda
       ((g$filename$27966$1a@gJ)
        ((g$current-precompiled-library-loader$27897$1a@gJ)
         g$filename$27966$1a@gJ
         (case-lambda
           ((g$id$27967$1a@gJ
              g$name$27968$1a@gJ
              g$ver$27969$1a@gJ
              g$imp*$27970$1a@gJ
              g$vis*$27971$1a@gJ
              g$inv*$27972$1a@gJ
              g$exp-subst$27973$1a@gJ
              g$exp-env$27974$1a@gJ
              g$visit-proc$27975$1a@gJ
              g$invoke-proc$27976$1a@gJ
              g$visible?$27977$1a@gJ)
            ((letrec ((g$f$27978$1a@gJ
                        (case-lambda
                          ((g$deps$27979$1a@gJ)
                           (if (null? g$deps$27979$1a@gJ)
                             (begin
                               (g$install-library$27908$1a@gJ
                                 g$id$27967$1a@gJ
                                 g$name$27968$1a@gJ
                                 g$ver$27969$1a@gJ
                                 g$imp*$27970$1a@gJ
                                 g$vis*$27971$1a@gJ
                                 g$inv*$27972$1a@gJ
                                 g$exp-subst$27973$1a@gJ
                                 g$exp-env$27974$1a@gJ
                                 g$visit-proc$27975$1a@gJ
                                 g$invoke-proc$27976$1a@gJ
                                 '#f
                                 '#f
                                 g$visible?$27977$1a@gJ
                                 '#f)
                               '#t)
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$d$27980$1a@gJ)
                                   ((case-lambda
                                      ((g$label$27981$1a@gJ
                                         g$dname$27982$1a@gJ)
                                       ((case-lambda
                                          ((g$l$27983$1a@gJ)
                                           (if (if (g$library?$27859$1a@gJ
                                                     g$l$27983$1a@gJ)
                                                 (begin
                                                   '#f
                                                   (eq? g$label$27981$1a@gJ
                                                        (g$library-id$27861$1a@gJ
                                                          g$l$27983$1a@gJ)))
                                                 '#f)
                                             (g$f$27978$1a@gJ
                                               (cdr g$deps$27979$1a@gJ))
                                             (begin
                                               '#f
                                               (g$library-version-mismatch-warning$27249$1a@gJ
                                                 g$name$27968$1a@gJ
                                                 g$dname$27982$1a@gJ
                                                 g$filename$27966$1a@gJ)
                                               '#f))))
                                        (g$find-library-by-name$27903$1a@gJ
                                          g$dname$27982$1a@gJ))))
                                    (car g$d$27980$1a@gJ)
                                    (g$cadr$20658$1a@gJ
                                      g$d$27980$1a@gJ))))
                                (car g$deps$27979$1a@gJ))))))))
               g$f$27978$1a@gJ)
             (g$append$20200$1a@gJ
               g$imp*$27970$1a@gJ
               g$vis*$27971$1a@gJ
               g$inv*$27972$1a@gJ)))
           (g$others$27984$1a@gJ '#f))))))
   (g$library-loader$27899$1a@gJ
     g$library-loader$28106$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda
         ((g$x$27985$1a@gJ)
          ((case-lambda
             ((g$file-name$27986$1a@gJ)
              (if (not g$file-name$27986$1a@gJ)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$27985$1a@gJ)
                ((case-lambda
                   ((g$t$27987$1a@gJ)
                    (if g$t$27987$1a@gJ
                      g$t$27987$1a@gJ
                      (begin
                        '#f
                        (begin
                          '#f
                          ((g$current-library-expander$27900$1a@gJ)
                           (g$read-library-source-file$27251$1a@gJ
                             g$file-name$27986$1a@gJ)
                           g$file-name$27986$1a@gJ
                           (case-lambda
                             ((g$name$27988$1a@gJ)
                              (if (not (g$equal?$27047$1a@gJ
                                         g$name$27988$1a@gJ
                                         g$x$27985$1a@gJ))
                                (assertion-violation
                                  'import
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$open-string-output-port$26695$1a@gJ)))
                                    (case-lambda
                                      ((g$p$27991$1a@gJ g$e$27992$1a@gJ)
                                       ((case-lambda
                                          ((g$e$27993$1a@gJ
                                             g$p$27994$1a@gJ)
                                           (begin
                                             (display
                                               '"expected to find library "
                                               g$p$27994$1a@gJ)
                                             (write
                                               g$x$27985$1a@gJ
                                               g$p$27994$1a@gJ)
                                             (display
                                               '" in file "
                                               g$p$27994$1a@gJ)
                                             (display
                                               g$file-name$27986$1a@gJ
                                               g$p$27994$1a@gJ)
                                             (display
                                               '", found "
                                               g$p$27994$1a@gJ)
                                             (write
                                               g$name$27988$1a@gJ
                                               g$p$27994$1a@gJ)
                                             (display
                                               '" instead"
                                               g$p$27994$1a@gJ)
                                             (g$e$27993$1a@gJ))))
                                        g$e$27992$1a@gJ
                                        g$p$27991$1a@gJ)))))
                                (void))))))))))
                 (g$try-load-from-file$27898$1a@gJ
                   g$file-name$27986$1a@gJ)))))
           ((g$file-locator$27895$1a@gJ) g$x$27985$1a@gJ))))
       (case-lambda
         ((g$f$27995$1a@gJ)
          (if (g$procedure?$20622$1a@gJ g$f$27995$1a@gJ)
            g$f$27995$1a@gJ
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$27995$1a@gJ))))))
   (g$current-library-expander$27900$1a@gJ
     g$current-library-expander$28107$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda
         ((g$x$27996$1a@gJ)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$27997$1a@gJ)
          (if (g$procedure?$20622$1a@gJ g$f$27997$1a@gJ)
            g$f$27997$1a@gJ
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$27997$1a@gJ))))))
   (g$external-pending-libraries$27901$1a@gJ
     g$external-pending-libraries$28108$1a@gJ
     (g$make-parameter$27252$1a@gJ '()))
   (g$find-external-library$27902$1a@gJ
     g$find-external-library$28109$1a@gJ
     (case-lambda
       ((g$name$27998$1a@gJ)
        (begin
          (if (g$member$20189$1a@gJ
                g$name$27998$1a@gJ
                (g$external-pending-libraries$27901$1a@gJ))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$27998$1a@gJ)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$28001$1a@gJ
                g$external-pending-libraries$28002$1a@gJ)
              ((case-lambda
                 ((g$swap$28003$1a@gJ)
                  (dynamic-wind
                    g$swap$28003$1a@gJ
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$27899$1a@gJ)
                          g$name$27998$1a@gJ)
                         ((case-lambda
                            ((g$t$28004$1a@gJ)
                             (if g$t$28004$1a@gJ
                               g$t$28004$1a@gJ
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$27998$1a@gJ)))))
                          (g$find-library-by$27891$1a@gJ
                            (case-lambda
                              ((g$x$28005$1a@gJ)
                               (g$equal?$27047$1a@gJ
                                 (g$library-name$27862$1a@gJ
                                   g$x$28005$1a@gJ)
                                 g$name$27998$1a@gJ))))))))
                    g$swap$28003$1a@gJ)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$28006$1a@gJ)
                      (begin
                        (g$external-pending-libraries$28001$1a@gJ
                          g$external-pending-libraries$28002$1a@gJ)
                        (set! g$external-pending-libraries$28002$1a@gJ
                          g$t$28006$1a@gJ))))
                   (g$external-pending-libraries$28001$1a@gJ)))))))
           g$external-pending-libraries$27901$1a@gJ
           (cons
             g$name$27998$1a@gJ
             (g$external-pending-libraries$27901$1a@gJ)))))))
   (g$find-library-by-name$27903$1a@gJ
     g$find-library-by-name$28110$1a@gJ
     (case-lambda
       ((g$name$28007$1a@gJ)
        ((case-lambda
           ((g$t$28008$1a@gJ)
            (if g$t$28008$1a@gJ
              g$t$28008$1a@gJ
              (begin
                '#f
                (g$find-external-library$27902$1a@gJ
                  g$name$28007$1a@gJ)))))
         (g$find-library-by$27891$1a@gJ
           (case-lambda
             ((g$x$28009$1a@gJ)
              (g$equal?$27047$1a@gJ
                (g$library-name$27862$1a@gJ g$x$28009$1a@gJ)
                g$name$28007$1a@gJ))))))))
   (g$uninstall-library$27904$1a@gJ
     g$uninstall-library$28111$1a@gJ
     (case-lambda
       ((g$name$28010$1a@gJ g$err?$28011$1a@gJ)
        (letrec* ((g$who$28012$1a@gJ 'uninstall-library))
          ((case-lambda
             ((g$lib$28013$1a@gJ)
              (begin
                (if (if g$err?$28011$1a@gJ
                      (begin '#f (not g$lib$28013$1a@gJ))
                      '#f)
                  (assertion-violation
                    g$who$28012$1a@gJ
                    '"library not installed"
                    g$name$28010$1a@gJ)
                  (void))
                ((g$current-library-collection$27853$1a@gJ)
                 g$lib$28013$1a@gJ
                 '#t)
                (g$for-each$20196$1a@gJ
                  (case-lambda
                    ((g$x$28014$1a@gJ)
                     ((case-lambda
                        ((g$label$28015$1a@gJ g$binding$28016$1a@gJ)
                         (begin
                           (remove-location g$label$28015$1a@gJ)
                           (if (g$memq$20187$1a@gJ
                                 (car g$binding$28016$1a@gJ)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$28016$1a@gJ))
                             (void)))))
                      (car g$x$28014$1a@gJ)
                      (cdr g$x$28014$1a@gJ))))
                  (g$library-env$27868$1a@gJ g$lib$28013$1a@gJ)))))
           (g$find-library-by$27891$1a@gJ
             (case-lambda
               ((g$x$28017$1a@gJ)
                (g$equal?$27047$1a@gJ
                  (g$library-name$27862$1a@gJ g$x$28017$1a@gJ)
                  g$name$28010$1a@gJ)))))))
       ((g$name$28018$1a@gJ)
        (g$uninstall-library$27904$1a@gJ g$name$28018$1a@gJ '#t))))
   (g$library-exists?$27905$1a@gJ
     g$library-exists?$28112$1a@gJ
     (case-lambda
       ((g$name$28019$1a@gJ)
        (if (g$find-library-by$27891$1a@gJ
              (case-lambda
                ((g$x$28020$1a@gJ)
                 (g$equal?$27047$1a@gJ
                   (g$library-name$27862$1a@gJ g$x$28020$1a@gJ)
                   g$name$28019$1a@gJ))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$27906$1a@gJ
     g$find-library-by-spec/die$28113$1a@gJ
     (case-lambda
       ((g$spec$28021$1a@gJ)
        ((case-lambda
           ((g$id$28022$1a@gJ)
            ((case-lambda
               ((g$t$28023$1a@gJ)
                (if g$t$28023$1a@gJ
                  g$t$28023$1a@gJ
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$28021$1a@gJ)))))
             (g$find-library-by$27891$1a@gJ
               (case-lambda
                 ((g$x$28024$1a@gJ)
                  (eq? g$id$28022$1a@gJ
                       (g$library-id$27861$1a@gJ g$x$28024$1a@gJ))))))))
         (car g$spec$28021$1a@gJ)))))
   (g$install-library-record$27907$1a@gJ
     g$install-library-record$28114$1a@gJ
     (case-lambda
       ((g$lib$28025$1a@gJ)
        (begin
          ((case-lambda
             ((g$exp-env$28026$1a@gJ)
              (g$for-each$20196$1a@gJ
                (case-lambda
                  ((g$x$28027$1a@gJ)
                   ((case-lambda
                      ((g$label$28028$1a@gJ g$binding$28029$1a@gJ)
                       ((case-lambda
                          ((g$binding$28030$1a@gJ)
                           (g$set-label-binding!$27255$1a@gJ
                             g$label$28028$1a@gJ
                             g$binding$28030$1a@gJ)))
                        ((case-lambda
                           ((g$t$28031$1a@gJ)
                            (if (eqv? g$t$28031$1a@gJ 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$28025$1a@gJ
                                  (cdr g$binding$28029$1a@gJ)))
                              (if (eqv? g$t$28031$1a@gJ 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$28025$1a@gJ
                                    (cdr g$binding$28029$1a@gJ)))
                                (if (eqv?
                                      g$t$28031$1a@gJ
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$28025$1a@gJ
                                      (cdr g$binding$28029$1a@gJ)))
                                  (if (eqv? g$t$28031$1a@gJ 'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$28025$1a@gJ
                                        (cdr g$binding$28029$1a@gJ)))
                                    (begin
                                      '#f
                                      g$binding$28029$1a@gJ)))))))
                         (car g$binding$28029$1a@gJ)))))
                    (car g$x$28027$1a@gJ)
                    (cdr g$x$28027$1a@gJ))))
                g$exp-env$28026$1a@gJ)))
           (g$library-env$27868$1a@gJ g$lib$28025$1a@gJ))
          ((g$current-library-collection$27853$1a@gJ)
           g$lib$28025$1a@gJ)))))
   (g$install-library$27908$1a@gJ
     g$install-library$28115$1a@gJ
     (case-lambda
       ((g$id$28032$1a@gJ
          g$name$28033$1a@gJ
          g$ver$28034$1a@gJ
          g$imp*$28035$1a@gJ
          g$vis*$28036$1a@gJ
          g$inv*$28037$1a@gJ
          g$exp-subst$28038$1a@gJ
          g$exp-env$28039$1a@gJ
          g$visit-proc$28040$1a@gJ
          g$invoke-proc$28041$1a@gJ
          g$visit-code$28042$1a@gJ
          g$invoke-code$28043$1a@gJ
          g$visible?$28044$1a@gJ
          g$source-file-name$28045$1a@gJ)
        ((case-lambda
           ((g$imp-lib*$28046$1a@gJ
              g$vis-lib*$28047$1a@gJ
              g$inv-lib*$28048$1a@gJ)
            (begin
              (if (not (if (g$symbol?$20620$1a@gJ g$id$28032$1a@gJ)
                         (if (list? g$name$28033$1a@gJ)
                           (begin '#f (list? g$ver$28034$1a@gJ))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$28032$1a@gJ
                  g$name$28033$1a@gJ
                  g$ver$28034$1a@gJ)
                (void))
              (if (g$library-exists?$27905$1a@gJ g$name$28033$1a@gJ)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$28033$1a@gJ)
                (void))
              ((case-lambda
                 ((g$lib$28049$1a@gJ)
                  (g$install-library-record$27907$1a@gJ
                    g$lib$28049$1a@gJ)))
               (g$make-library$27860$1a@gJ
                 g$id$28032$1a@gJ
                 g$name$28033$1a@gJ
                 g$ver$28034$1a@gJ
                 g$imp-lib*$28046$1a@gJ
                 g$vis-lib*$28047$1a@gJ
                 g$inv-lib*$28048$1a@gJ
                 g$exp-subst$28038$1a@gJ
                 g$exp-env$28039$1a@gJ
                 g$visit-proc$28040$1a@gJ
                 g$invoke-proc$28041$1a@gJ
                 g$visit-code$28042$1a@gJ
                 g$invoke-code$28043$1a@gJ
                 g$visible?$28044$1a@gJ
                 g$source-file-name$28045$1a@gJ)))))
         (g$map$20195$1a@gJ
           g$find-library-by-spec/die$27906$1a@gJ
           g$imp*$28035$1a@gJ)
         (g$map$20195$1a@gJ
           g$find-library-by-spec/die$27906$1a@gJ
           g$vis*$28036$1a@gJ)
         (g$map$20195$1a@gJ
           g$find-library-by-spec/die$27906$1a@gJ
           g$inv*$28037$1a@gJ)))))
   (g$imported-label->binding$27909$1a@gJ
     g$imported-label->binding$28116$1a@gJ
     (case-lambda
       ((g$lab$28050$1a@gJ)
        (g$label-binding$27256$1a@gJ g$lab$28050$1a@gJ))))
   (g$invoke-library$27910$1a@gJ
     g$invoke-library$28117$1a@gJ
     (case-lambda
       ((g$lib$28051$1a@gJ)
        ((case-lambda
           ((g$invoke$28052$1a@gJ)
            (if (g$procedure?$20622$1a@gJ g$invoke$28052$1a@gJ)
              (begin
                (g$set-library-invoke-state!$27884$1a@gJ
                  g$lib$28051$1a@gJ
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$28051$1a@gJ))))
                (g$for-each$20196$1a@gJ
                  g$invoke-library$27910$1a@gJ
                  (g$library-inv*$27866$1a@gJ g$lib$28051$1a@gJ))
                (g$set-library-invoke-state!$27884$1a@gJ
                  g$lib$28051$1a@gJ
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$28051$1a@gJ))))
                (g$invoke$28052$1a@gJ)
                (g$set-library-invoke-state!$27884$1a@gJ
                  g$lib$28051$1a@gJ
                  '#t))
              (void))))
         (g$library-invoke-state$27870$1a@gJ g$lib$28051$1a@gJ)))))
   (g$visit-library$27911$1a@gJ
     g$visit-library$28118$1a@gJ
     (case-lambda
       ((g$lib$28053$1a@gJ)
        ((case-lambda
           ((g$visit$28054$1a@gJ)
            (if (g$procedure?$20622$1a@gJ g$visit$28054$1a@gJ)
              (begin
                (g$set-library-visit-state!$27883$1a@gJ
                  g$lib$28053$1a@gJ
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$28053$1a@gJ))))
                (g$for-each$20196$1a@gJ
                  g$invoke-library$27910$1a@gJ
                  (g$library-vis*$27865$1a@gJ g$lib$28053$1a@gJ))
                (g$set-library-visit-state!$27883$1a@gJ
                  g$lib$28053$1a@gJ
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$28053$1a@gJ))))
                (g$visit$28054$1a@gJ)
                (g$set-library-visit-state!$27883$1a@gJ
                  g$lib$28053$1a@gJ
                  '#t))
              (void))))
         (g$library-visit-state$27869$1a@gJ g$lib$28053$1a@gJ)))))
   (g$invoke-library-by-spec$27912$1a@gJ
     g$invoke-library-by-spec$28119$1a@gJ
     (case-lambda
       ((g$spec$28055$1a@gJ)
        (g$invoke-library$27910$1a@gJ
          (g$find-library-by-spec/die$27906$1a@gJ
            g$spec$28055$1a@gJ)))))
   (g$installed-libraries$27913$1a@gJ
     g$installed-libraries$28120$1a@gJ
     (case-lambda
       ((g$all?$28056$1a@gJ)
        ((letrec ((g$f$28057$1a@gJ
                    (case-lambda
                      ((g$ls$28058$1a@gJ)
                       (if (null? g$ls$28058$1a@gJ)
                         '()
                         (if ((case-lambda
                                ((g$t$28059$1a@gJ)
                                 (if g$t$28059$1a@gJ
                                   g$t$28059$1a@gJ
                                   (begin
                                     '#f
                                     (g$library-visible?$27873$1a@gJ
                                       (car g$ls$28058$1a@gJ))))))
                              g$all?$28056$1a@gJ)
                           (cons
                             (g$library-name$27862$1a@gJ
                               (car g$ls$28058$1a@gJ))
                             (g$f$28057$1a@gJ (cdr g$ls$28058$1a@gJ)))
                           (begin
                             '#f
                             (g$f$28057$1a@gJ
                               (cdr g$ls$28058$1a@gJ)))))))))
           g$f$28057$1a@gJ)
         ((g$current-library-collection$27853$1a@gJ))))
       (() (g$installed-libraries$27913$1a@gJ '#f))))
   (g$library-spec$27914$1a@gJ
     g$library-spec$28121$1a@gJ
     (case-lambda
       ((g$x$28060$1a@gJ)
        (begin
          (if (not (g$library?$27859$1a@gJ g$x$28060$1a@gJ))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$28060$1a@gJ)
            (void))
          (list
            (g$library-id$27861$1a@gJ g$x$28060$1a@gJ)
            (g$library-name$27862$1a@gJ g$x$28060$1a@gJ)
            (g$library-version$27863$1a@gJ g$x$28060$1a@gJ)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$28122$1a@gJ
     g$build-global-define$28332$1a@gJ
     (case-lambda ((g$x$28303$1a@gJ) (g$build-void$28299$1a@gJ))))
   (g$build-lambda$28233$1a@gJ
     g$build-lambda$28333$1a@gJ
     (case-lambda
       ((g$ae$28304$1a@gJ g$vars$28305$1a@gJ g$exp$28306$1a@gJ)
        (if g$ae$28304$1a@gJ
          (list
            'case-lambda
            (list g$vars$28305$1a@gJ g$exp$28306$1a@gJ))
          (list
            'case-lambda
            (list g$vars$28305$1a@gJ g$exp$28306$1a@gJ))))))
   (g$build-case-lambda$28234$1a@gJ
     g$build-case-lambda$28334$1a@gJ
     (case-lambda
       ((g$ae$28307$1a@gJ g$vars*$28308$1a@gJ g$exp*$28309$1a@gJ)
        (if g$ae$28307$1a@gJ
          (cons
            'case-lambda
            (g$map$20195$1a@gJ
              list
              g$vars*$28308$1a@gJ
              g$exp*$28309$1a@gJ))
          (cons
            'case-lambda
            (g$map$20195$1a@gJ
              list
              g$vars*$28308$1a@gJ
              g$exp*$28309$1a@gJ))))))
   (g$build-let$28235$1a@gJ
     g$build-let$28335$1a@gJ
     (case-lambda
       ((g$ae$28310$1a@gJ
          g$lhs*$28311$1a@gJ
          g$rhs*$28312$1a@gJ
          g$body$28313$1a@gJ)
        (cons
          (g$build-lambda$28233$1a@gJ
            g$ae$28310$1a@gJ
            g$lhs*$28311$1a@gJ
            g$body$28313$1a@gJ)
          g$rhs*$28312$1a@gJ))))
   (g$build-sequence$28298$1a@gJ
     g$build-sequence$28336$1a@gJ
     (case-lambda
       ((g$ae$28314$1a@gJ g$exps$28315$1a@gJ)
        ((letrec ((g$loop$28316$1a@gJ
                    (case-lambda
                      ((g$exps$28317$1a@gJ)
                       (if (null? (cdr g$exps$28317$1a@gJ))
                         (car g$exps$28317$1a@gJ)
                         (if (g$equal?$27047$1a@gJ
                               (car g$exps$28317$1a@gJ)
                               (g$build-void$28299$1a@gJ))
                           (g$loop$28316$1a@gJ (cdr g$exps$28317$1a@gJ))
                           (cons 'begin g$exps$28317$1a@gJ)))))))
           g$loop$28316$1a@gJ)
         g$exps$28315$1a@gJ))))
   (g$build-void$28299$1a@gJ
     g$build-void$28337$1a@gJ
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$28300$1a@gJ
     g$build-letrec$28338$1a@gJ
     (case-lambda
       ((g$ae$28318$1a@gJ
          g$vars$28319$1a@gJ
          g$val-exps$28320$1a@gJ
          g$body-exp$28321$1a@gJ)
        (if (null? g$vars$28319$1a@gJ)
          g$body-exp$28321$1a@gJ
          (list
            'letrec
            (g$map$20195$1a@gJ
              list
              g$vars$28319$1a@gJ
              g$val-exps$28320$1a@gJ)
            g$body-exp$28321$1a@gJ)))))
   (g$build-letrec*$28301$1a@gJ
     g$build-letrec*$28339$1a@gJ
     (case-lambda
       ((g$ae$28322$1a@gJ
          g$vars$28323$1a@gJ
          g$val-exps$28324$1a@gJ
          g$body-exp$28325$1a@gJ)
        (if (null? g$vars$28323$1a@gJ)
          g$body-exp$28325$1a@gJ
          (begin
            '#f
            (list
              'letrec*
              (g$map$20195$1a@gJ
                list
                g$vars$28323$1a@gJ
                g$val-exps$28324$1a@gJ)
              g$body-exp$28325$1a@gJ))))))
   (g$build-library-letrec*$28302$1a@gJ
     g$build-library-letrec*$28340$1a@gJ
     (case-lambda
       ((g$ae$28326$1a@gJ
          g$name$28327$1a@gJ
          g$vars$28328$1a@gJ
          g$locs$28329$1a@gJ
          g$val-exps$28330$1a@gJ
          g$body-exp$28331$1a@gJ)
        (list
          'library-letrec*
          g$name$28327$1a@gJ
          (g$map$20195$1a@gJ
            list
            g$vars$28328$1a@gJ
            g$locs$28329$1a@gJ
            g$val-exps$28330$1a@gJ)
          g$body-exp$28331$1a@gJ)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$28341$1a@gJ
     g$set-cons$32356$1a@gJ
     (case-lambda
       ((g$x$29038$1a@gJ g$ls$29039$1a@gJ)
        (if (g$memq$20187$1a@gJ g$x$29038$1a@gJ g$ls$29039$1a@gJ)
          g$ls$29039$1a@gJ
          (begin '#f (cons g$x$29038$1a@gJ g$ls$29039$1a@gJ))))))
   (g$set-union$28342$1a@gJ
     g$set-union$32357$1a@gJ
     (case-lambda
       ((g$ls1$29040$1a@gJ g$ls2$29041$1a@gJ)
        (if (null? g$ls1$29040$1a@gJ)
          g$ls2$29041$1a@gJ
          (if (g$memq$20187$1a@gJ
                (car g$ls1$29040$1a@gJ)
                g$ls2$29041$1a@gJ)
            (g$set-union$28342$1a@gJ
              (cdr g$ls1$29040$1a@gJ)
              g$ls2$29041$1a@gJ)
            (begin
              '#f
              (cons
                (car g$ls1$29040$1a@gJ)
                (g$set-union$28342$1a@gJ
                  (cdr g$ls1$29040$1a@gJ)
                  g$ls2$29041$1a@gJ))))))))
   (g$top-mark*$28344$1a@gJ g$top-mark*$32358$1a@gJ '(top))
   (g$top-marked?$28345$1a@gJ
     g$top-marked?$32359$1a@gJ
     (case-lambda
       ((g$m*$29042$1a@gJ) (g$memq$20187$1a@gJ 'top g$m*$29042$1a@gJ))))
   (g$gen-lexical$28346$1a@gJ
     g$gen-lexical$32360$1a@gJ
     (case-lambda
       ((g$sym$29043$1a@gJ)
        (if (g$symbol?$20620$1a@gJ g$sym$29043$1a@gJ)
          (gensym g$sym$29043$1a@gJ)
          (if (g$stx?$28383$1a@gJ g$sym$29043$1a@gJ)
            (g$gen-lexical$28346$1a@gJ
              (g$id->sym$28412$1a@gJ g$sym$29043$1a@gJ))
            (begin
              '#f
              (assertion-violation
                'gen-lexical
                '"BUG: invalid arg"
                g$sym$29043$1a@gJ)))))))
   (g$gen-global$28347$1a@gJ
     g$gen-global$32361$1a@gJ
     (case-lambda
       ((g$x$29044$1a@gJ) (g$gen-lexical$28346$1a@gJ g$x$29044$1a@gJ))))
   (g$gen-label$28348$1a@gJ
     g$gen-label$32362$1a@gJ
     (case-lambda ((g$_$29045$1a@gJ) (gensym))))
   (g$gen-top-level-label$28349$1a@gJ
     g$gen-top-level-label$32363$1a@gJ
     (case-lambda
       ((g$id$29046$1a@gJ g$rib$29047$1a@gJ)
        (letrec* ((g$find$29048$1a@gJ
                    (case-lambda
                      ((g$sym$29054$1a@gJ
                         g$mark*$29055$1a@gJ
                         g$sym*$29056$1a@gJ
                         g$mark**$29057$1a@gJ
                         g$label*$29058$1a@gJ)
                       (if (pair? g$sym*$29056$1a@gJ)
                         (begin
                           '#f
                           (if (if (eq? g$sym$29054$1a@gJ
                                        (car g$sym*$29056$1a@gJ))
                                 (begin
                                   '#f
                                   (g$same-marks?$28413$1a@gJ
                                     g$mark*$29055$1a@gJ
                                     (car g$mark**$29057$1a@gJ)))
                                 '#f)
                             (car g$label*$29058$1a@gJ)
                             (g$find$29048$1a@gJ
                               g$sym$29054$1a@gJ
                               g$mark*$29055$1a@gJ
                               (cdr g$sym*$29056$1a@gJ)
                               (cdr g$mark**$29057$1a@gJ)
                               (cdr g$label*$29058$1a@gJ))))
                         '#f)))))
          ((case-lambda
             ((g$sym$29049$1a@gJ g$mark*$29050$1a@gJ)
              ((case-lambda
                 ((g$sym*$29051$1a@gJ)
                  ((case-lambda
                     ((g$t$29052$1a@gJ)
                      (if g$t$29052$1a@gJ
                        ((case-lambda
                           ((g$label$29053$1a@gJ)
                            (if (g$imported-label->binding$28116$1a@gJ
                                  g$label$29053$1a@gJ)
                              (gensym)
                              (begin '#f g$label$29053$1a@gJ))))
                         g$t$29052$1a@gJ)
                        (begin '#f (gensym)))))
                   (if (g$memq$20187$1a@gJ
                         g$sym$29049$1a@gJ
                         (g$rib-sym*$28359$1a@gJ g$rib$29047$1a@gJ))
                     (begin
                       '#f
                       (g$find$29048$1a@gJ
                         g$sym$29049$1a@gJ
                         g$mark*$29050$1a@gJ
                         g$sym*$29051$1a@gJ
                         (g$rib-mark**$28360$1a@gJ g$rib$29047$1a@gJ)
                         (g$rib-label*$28361$1a@gJ g$rib$29047$1a@gJ)))
                     '#f))))
               (g$rib-sym*$28359$1a@gJ g$rib$29047$1a@gJ))))
           (g$id->sym$28412$1a@gJ g$id$29046$1a@gJ)
           (g$stx-mark*$28386$1a@gJ g$id$29046$1a@gJ))))))
   (g$gen-define-label+loc$28350$1a@gJ
     g$gen-define-label+loc$32364$1a@gJ
     (case-lambda
       ((g$id$29059$1a@gJ g$rib$29060$1a@gJ g$sd?$29061$1a@gJ)
        (if g$sd?$29061$1a@gJ
          (values (gensym) (g$gen-lexical$28346$1a@gJ g$id$29059$1a@gJ))
          ((case-lambda
             ((g$env$29062$1a@gJ)
              ((case-lambda
                 ((g$label$29063$1a@gJ g$locs$29064$1a@gJ)
                  (values
                    g$label$29063$1a@gJ
                    ((case-lambda
                       ((g$t$29065$1a@gJ)
                        (if g$t$29065$1a@gJ
                          (cdr g$t$29065$1a@gJ)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$loc$29066$1a@gJ)
                                (begin
                                  (g$set-interaction-env-locs!$28999$1a@gJ
                                    g$env$29062$1a@gJ
                                    (cons
                                      (cons
                                        g$label$29063$1a@gJ
                                        g$loc$29066$1a@gJ)
                                      g$locs$29064$1a@gJ))
                                  g$loc$29066$1a@gJ)))
                             (g$gen-lexical$28346$1a@gJ
                               g$id$29059$1a@gJ))))))
                     (g$assq$20183$1a@gJ
                       g$label$29063$1a@gJ
                       g$locs$29064$1a@gJ)))))
               (g$gen-top-level-label$28349$1a@gJ
                 g$id$29059$1a@gJ
                 g$rib$29060$1a@gJ)
               (g$interaction-env-locs$28996$1a@gJ g$env$29062$1a@gJ))))
           (g$top-level-context$29037$1a@gJ))))))
   (g$gen-define-label$28351$1a@gJ
     g$gen-define-label$32365$1a@gJ
     (case-lambda
       ((g$id$29067$1a@gJ g$rib$29068$1a@gJ g$sd?$29069$1a@gJ)
        (if g$sd?$29069$1a@gJ
          (gensym)
          (g$gen-top-level-label$28349$1a@gJ
            g$id$29067$1a@gJ
            g$rib$29068$1a@gJ)))))
   (g$10149$28352$1a@gJ
     g$10149$32366$1a@gJ
     (make-record-type-descriptor
       'rib
       '#f
       'g$10152$1a@gJ
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$10151$28353$1a@gJ g$10151$32367$1a@gJ '#f)
   (g$10150$28354$1a@gJ
     g$10150$32368$1a@gJ
     (make-record-constructor-descriptor
       g$10149$28352$1a@gJ
       '#f
       g$10151$28353$1a@gJ))
   (g$rib?$28357$1a@gJ
     g$rib?$32369$1a@gJ
     (record-predicate g$10149$28352$1a@gJ))
   (g$make-rib$28358$1a@gJ
     g$make-rib$32370$1a@gJ
     (record-constructor g$10150$28354$1a@gJ))
   (g$rib-sym*$28359$1a@gJ
     g$rib-sym*$32371$1a@gJ
     (record-accessor g$10149$28352$1a@gJ '0))
   (g$rib-mark**$28360$1a@gJ
     g$rib-mark**$32372$1a@gJ
     (record-accessor g$10149$28352$1a@gJ '1))
   (g$rib-label*$28361$1a@gJ
     g$rib-label*$32373$1a@gJ
     (record-accessor g$10149$28352$1a@gJ '2))
   (g$rib-sealed/freq$28362$1a@gJ
     g$rib-sealed/freq$32374$1a@gJ
     (record-accessor g$10149$28352$1a@gJ '3))
   (g$rib-cache$28363$1a@gJ
     g$rib-cache$32375$1a@gJ
     (record-accessor g$10149$28352$1a@gJ '4))
   (g$set-rib-sym*!$28364$1a@gJ
     g$set-rib-sym*!$32376$1a@gJ
     (record-mutator g$10149$28352$1a@gJ '0))
   (g$set-rib-mark**!$28365$1a@gJ
     g$set-rib-mark**!$32377$1a@gJ
     (record-mutator g$10149$28352$1a@gJ '1))
   (g$set-rib-label*!$28366$1a@gJ
     g$set-rib-label*!$32378$1a@gJ
     (record-mutator g$10149$28352$1a@gJ '2))
   (g$set-rib-sealed/freq!$28367$1a@gJ
     g$set-rib-sealed/freq!$32379$1a@gJ
     (record-mutator g$10149$28352$1a@gJ '3))
   (g$set-rib-cache!$28368$1a@gJ
     g$set-rib-cache!$32380$1a@gJ
     (record-mutator g$10149$28352$1a@gJ '4))
   (g$make-empty-rib$28369$1a@gJ
     g$make-empty-rib$32381$1a@gJ
     (case-lambda (() (g$make-rib$28358$1a@gJ '() '() '() '#f '#f))))
   (g$make-cache-rib$28370$1a@gJ
     g$make-cache-rib$32382$1a@gJ
     (case-lambda
       (()
        (g$make-rib$28358$1a@gJ
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$20756$1a@gJ)))))
   (g$find-label$28371$1a@gJ
     g$find-label$32383$1a@gJ
     (case-lambda
       ((g$rib$29070$1a@gJ g$sym$29071$1a@gJ g$mark*$29072$1a@gJ)
        ((case-lambda
           ((g$ht$29073$1a@gJ)
            (if g$ht$29073$1a@gJ
              (begin
                '#f
                ((case-lambda
                   ((g$cv$29074$1a@gJ)
                    ((case-lambda
                       ((g$t$29075$1a@gJ)
                        (if g$t$29075$1a@gJ
                          (cdr g$t$29075$1a@gJ)
                          (begin '#f '#f))))
                     (if g$cv$29074$1a@gJ
                       (begin
                         '#f
                         (g$assp$20186$1a@gJ
                           (case-lambda
                             ((g$m$29076$1a@gJ)
                              (g$same-marks?$28413$1a@gJ
                                g$mark*$29072$1a@gJ
                                g$m$29076$1a@gJ)))
                           g$cv$29074$1a@gJ))
                       '#f))))
                 (g$hashtable-ref$20759$1a@gJ
                   g$ht$29073$1a@gJ
                   g$sym$29071$1a@gJ
                   '#f)))
              '#f)))
         (g$rib-cache$28363$1a@gJ g$rib$29070$1a@gJ)))))
   (g$extend-rib!$28372$1a@gJ
     g$extend-rib!$32384$1a@gJ
     (case-lambda
       ((g$rib$29077$1a@gJ
          g$id$29078$1a@gJ
          g$label$29079$1a@gJ
          g$sd?$29080$1a@gJ)
        (letrec* ((g$find$29081$1a@gJ
                    (case-lambda
                      ((g$sym$29090$1a@gJ
                         g$mark*$29091$1a@gJ
                         g$sym*$29092$1a@gJ
                         g$mark**$29093$1a@gJ
                         g$label*$29094$1a@gJ)
                       (if (pair? g$sym*$29092$1a@gJ)
                         (begin
                           '#f
                           (if (if (eq? g$sym$29090$1a@gJ
                                        (car g$sym*$29092$1a@gJ))
                                 (begin
                                   '#f
                                   (g$same-marks?$28413$1a@gJ
                                     g$mark*$29091$1a@gJ
                                     (car g$mark**$29093$1a@gJ)))
                                 '#f)
                             g$label*$29094$1a@gJ
                             (g$find$29081$1a@gJ
                               g$sym$29090$1a@gJ
                               g$mark*$29091$1a@gJ
                               (cdr g$sym*$29092$1a@gJ)
                               (cdr g$mark**$29093$1a@gJ)
                               (cdr g$label*$29094$1a@gJ))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$28362$1a@gJ g$rib$29077$1a@gJ)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$29077$1a@gJ)
              (void))
            ((case-lambda
               ((g$sym$29082$1a@gJ g$mark*$29083$1a@gJ)
                ((case-lambda
                   ((g$sym*$29084$1a@gJ)
                    ((case-lambda
                       ((g$t$29085$1a@gJ)
                        (if g$t$29085$1a@gJ
                          ((case-lambda
                             ((g$p$29086$1a@gJ)
                              (if (not (eq? g$label$29079$1a@gJ
                                            g$p$29086$1a@gJ))
                                (g$syntax-violation$29029$1a@gJ
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$29078$1a@gJ)
                                (void))))
                           g$t$29085$1a@gJ)
                          ((case-lambda
                             ((g$t$29087$1a@gJ)
                              (if g$t$29087$1a@gJ
                                ((case-lambda
                                   ((g$p$29088$1a@gJ)
                                    (if (not (eq? g$label$29079$1a@gJ
                                                  (car g$p$29088$1a@gJ)))
                                      (if (not g$sd?$29080$1a@gJ)
                                        (g$set-car!$22404$1a@gJ
                                          g$p$29088$1a@gJ
                                          g$label$29079$1a@gJ)
                                        (begin
                                          '#f
                                          (g$syntax-violation$29029$1a@gJ
                                            '#f
                                            '"multiple definitions of identifier"
                                            g$id$29078$1a@gJ)))
                                      (void))))
                                 g$t$29087$1a@gJ)
                                (begin
                                  '#f
                                  (if (g$rib-cache$28363$1a@gJ
                                        g$rib$29077$1a@gJ)
                                    (g$hashtable-update!$20763$1a@gJ
                                      (g$rib-cache$28363$1a@gJ
                                        g$rib$29077$1a@gJ)
                                      g$sym$29082$1a@gJ
                                      (case-lambda
                                        ((g$e$29089$1a@gJ)
                                         (cons
                                           (cons
                                             g$mark*$29083$1a@gJ
                                             g$label$29079$1a@gJ)
                                           g$e$29089$1a@gJ)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$28364$1a@gJ
                                    g$rib$29077$1a@gJ
                                    (cons
                                      g$sym$29082$1a@gJ
                                      g$sym*$29084$1a@gJ))
                                  (g$set-rib-mark**!$28365$1a@gJ
                                    g$rib$29077$1a@gJ
                                    (cons
                                      g$mark*$29083$1a@gJ
                                      (g$rib-mark**$28360$1a@gJ
                                        g$rib$29077$1a@gJ)))
                                  (g$set-rib-label*!$28366$1a@gJ
                                    g$rib$29077$1a@gJ
                                    (cons
                                      g$label$29079$1a@gJ
                                      (g$rib-label*$28361$1a@gJ
                                        g$rib$29077$1a@gJ)))))))
                           (if (g$memq$20187$1a@gJ
                                 g$sym$29082$1a@gJ
                                 (g$rib-sym*$28359$1a@gJ
                                   g$rib$29077$1a@gJ))
                             (begin
                               '#f
                               (g$find$29081$1a@gJ
                                 g$sym$29082$1a@gJ
                                 g$mark*$29083$1a@gJ
                                 g$sym*$29084$1a@gJ
                                 (g$rib-mark**$28360$1a@gJ
                                   g$rib$29077$1a@gJ)
                                 (g$rib-label*$28361$1a@gJ
                                   g$rib$29077$1a@gJ)))
                             '#f)))))
                     (g$find-label$28371$1a@gJ
                       g$rib$29077$1a@gJ
                       g$sym$29082$1a@gJ
                       g$mark*$29083$1a@gJ))))
                 (g$rib-sym*$28359$1a@gJ g$rib$29077$1a@gJ))))
             (g$id->sym$28412$1a@gJ g$id$29078$1a@gJ)
             (g$stx-mark*$28386$1a@gJ g$id$29078$1a@gJ)))))))
   (g$extend-rib/nc!$28373$1a@gJ
     g$extend-rib/nc!$32385$1a@gJ
     (case-lambda
       ((g$rib$29095$1a@gJ g$id$29096$1a@gJ g$label$29097$1a@gJ)
        ((case-lambda
           ((g$sym$29098$1a@gJ g$mark*$29099$1a@gJ)
            ((case-lambda
               ((g$sym*$29100$1a@gJ)
                (begin
                  (if (g$rib-cache$28363$1a@gJ g$rib$29095$1a@gJ)
                    (g$hashtable-update!$20763$1a@gJ
                      (g$rib-cache$28363$1a@gJ g$rib$29095$1a@gJ)
                      g$sym$29098$1a@gJ
                      (case-lambda
                        ((g$e$29101$1a@gJ)
                         (cons
                           (cons
                             g$mark*$29099$1a@gJ
                             g$label$29097$1a@gJ)
                           g$e$29101$1a@gJ)))
                      '())
                    (void))
                  (g$set-rib-sym*!$28364$1a@gJ
                    g$rib$29095$1a@gJ
                    (cons g$sym$29098$1a@gJ g$sym*$29100$1a@gJ))
                  (g$set-rib-mark**!$28365$1a@gJ
                    g$rib$29095$1a@gJ
                    (cons
                      g$mark*$29099$1a@gJ
                      (g$rib-mark**$28360$1a@gJ g$rib$29095$1a@gJ)))
                  (g$set-rib-label*!$28366$1a@gJ
                    g$rib$29095$1a@gJ
                    (cons
                      g$label$29097$1a@gJ
                      (g$rib-label*$28361$1a@gJ g$rib$29095$1a@gJ))))))
             (g$rib-sym*$28359$1a@gJ g$rib$29095$1a@gJ))))
         (g$id->sym$28412$1a@gJ g$id$29096$1a@gJ)
         (g$stx-mark*$28386$1a@gJ g$id$29096$1a@gJ)))))
   (g$make-rib-map$28374$1a@gJ
     g$make-rib-map$32386$1a@gJ
     (case-lambda
       ((g$sym*$29102$1a@gJ)
        ((case-lambda
           ((g$ht$29103$1a@gJ)
            ((letrec ((g$f$29104$1a@gJ
                        (case-lambda
                          ((g$i$29105$1a@gJ g$sym*$29106$1a@gJ)
                           (if (null? g$sym*$29106$1a@gJ)
                             g$ht$29103$1a@gJ
                             (begin
                               (g$hashtable-update!$20763$1a@gJ
                                 g$ht$29103$1a@gJ
                                 (car g$sym*$29106$1a@gJ)
                                 (case-lambda
                                   ((g$x$29107$1a@gJ)
                                    (cons
                                      g$i$29105$1a@gJ
                                      g$x$29107$1a@gJ)))
                                 '())
                               (g$f$29104$1a@gJ
                                 (+ g$i$29105$1a@gJ '1)
                                 (cdr g$sym*$29106$1a@gJ))))))))
               g$f$29104$1a@gJ)
             '0
             g$sym*$29102$1a@gJ)))
         (g$make-eq-hashtable$20756$1a@gJ)))))
   (g$seal-rib!$28375$1a@gJ
     g$seal-rib!$32387$1a@gJ
     (case-lambda
       ((g$rib$29108$1a@gJ)
        ((case-lambda
           ((g$sym*$29109$1a@gJ)
            (if (not (null? g$sym*$29109$1a@gJ))
              (begin
                (g$set-rib-sym*!$28364$1a@gJ
                  g$rib$29108$1a@gJ
                  (g$list->vector$20647$1a@gJ g$sym*$29109$1a@gJ))
                (g$set-rib-mark**!$28365$1a@gJ
                  g$rib$29108$1a@gJ
                  (g$list->vector$20647$1a@gJ
                    (g$rib-mark**$28360$1a@gJ g$rib$29108$1a@gJ)))
                (g$set-rib-label*!$28366$1a@gJ
                  g$rib$29108$1a@gJ
                  (g$list->vector$20647$1a@gJ
                    (g$rib-label*$28361$1a@gJ g$rib$29108$1a@gJ)))
                (g$set-rib-sealed/freq!$28367$1a@gJ
                  g$rib$29108$1a@gJ
                  (g$make-rib-map$28374$1a@gJ g$sym*$29109$1a@gJ)))
              (void))))
         (g$rib-sym*$28359$1a@gJ g$rib$29108$1a@gJ)))))
   (g$unseal-rib!$28376$1a@gJ
     g$unseal-rib!$32388$1a@gJ
     (case-lambda
       ((g$rib$29110$1a@gJ)
        (if (g$rib-sealed/freq$28362$1a@gJ g$rib$29110$1a@gJ)
          (begin
            (g$set-rib-sealed/freq!$28367$1a@gJ g$rib$29110$1a@gJ '#f)
            (g$set-rib-sym*!$28364$1a@gJ
              g$rib$29110$1a@gJ
              (g$vector->list$20654$1a@gJ
                (g$rib-sym*$28359$1a@gJ g$rib$29110$1a@gJ)))
            (g$set-rib-mark**!$28365$1a@gJ
              g$rib$29110$1a@gJ
              (g$vector->list$20654$1a@gJ
                (g$rib-mark**$28360$1a@gJ g$rib$29110$1a@gJ)))
            (g$set-rib-label*!$28366$1a@gJ
              g$rib$29110$1a@gJ
              (g$vector->list$20654$1a@gJ
                (g$rib-label*$28361$1a@gJ g$rib$29110$1a@gJ))))
          (void)))))
   (g$make-full-rib$28377$1a@gJ
     g$make-full-rib$32389$1a@gJ
     (case-lambda
       ((g$id*$29111$1a@gJ g$label*$29112$1a@gJ)
        ((case-lambda
           ((g$r$29113$1a@gJ)
            (begin
              (g$seal-rib!$28375$1a@gJ g$r$29113$1a@gJ)
              g$r$29113$1a@gJ)))
         (g$make-rib$28358$1a@gJ
           (g$map$20195$1a@gJ g$id->sym$28412$1a@gJ g$id*$29111$1a@gJ)
           (g$map$20195$1a@gJ g$stx-mark*$28386$1a@gJ g$id*$29111$1a@gJ)
           g$label*$29112$1a@gJ
           '#f
           '#f)))))
   (g$10178$28378$1a@gJ
     g$10178$32390$1a@gJ
     (make-record-type-descriptor
       'stx
       '#f
       'g$10181$1a@gJ
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$10180$28379$1a@gJ g$10180$32391$1a@gJ '#f)
   (g$10179$28380$1a@gJ
     g$10179$32392$1a@gJ
     (make-record-constructor-descriptor
       g$10178$28378$1a@gJ
       '#f
       g$10180$28379$1a@gJ))
   (g$stx?$28383$1a@gJ
     g$stx?$32393$1a@gJ
     (record-predicate g$10178$28378$1a@gJ))
   (g$make-stx$28384$1a@gJ
     g$make-stx$32394$1a@gJ
     (record-constructor g$10179$28380$1a@gJ))
   (g$stx-expr$28385$1a@gJ
     g$stx-expr$32395$1a@gJ
     (record-accessor g$10178$28378$1a@gJ '0))
   (g$stx-mark*$28386$1a@gJ
     g$stx-mark*$32396$1a@gJ
     (record-accessor g$10178$28378$1a@gJ '1))
   (g$stx-subst*$28387$1a@gJ
     g$stx-subst*$32397$1a@gJ
     (record-accessor g$10178$28378$1a@gJ '2))
   (g$stx-ae*$28388$1a@gJ
     g$stx-ae*$32398$1a@gJ
     (record-accessor g$10178$28378$1a@gJ '3))
   (g$set-stx-expr!$28389$1a@gJ
     g$set-stx-expr!$32399$1a@gJ
     (record-mutator g$10178$28378$1a@gJ '0))
   (g$set-stx-mark*!$28390$1a@gJ
     g$set-stx-mark*!$32400$1a@gJ
     (record-mutator g$10178$28378$1a@gJ '1))
   (g$set-stx-subst*!$28391$1a@gJ
     g$set-stx-subst*!$32401$1a@gJ
     (record-mutator g$10178$28378$1a@gJ '2))
   (g$set-stx-ae*!$28392$1a@gJ
     g$set-stx-ae*!$32402$1a@gJ
     (record-mutator g$10178$28378$1a@gJ '3))
   (g$rp$28393$1a@gJ
     g$rp$32403$1a@gJ
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$29114$1a@gJ g$p$29115$1a@gJ g$wr$29116$1a@gJ)
          (begin
            (display '"#<syntax " g$p$29115$1a@gJ)
            (write
              (g$stx->datum$28422$1a@gJ g$x$29114$1a@gJ)
              g$p$29115$1a@gJ)
            ((case-lambda
               ((g$expr$29117$1a@gJ)
                (if (annotation? g$expr$29117$1a@gJ)
                  ((case-lambda
                     ((g$src$29118$1a@gJ)
                      (if (pair? g$src$29118$1a@gJ)
                        (begin
                          (display '" (" g$p$29115$1a@gJ)
                          (display
                            (cdr g$src$29118$1a@gJ)
                            g$p$29115$1a@gJ)
                          (display '" of " g$p$29115$1a@gJ)
                          (display
                            (car g$src$29118$1a@gJ)
                            g$p$29115$1a@gJ)
                          (display '")" g$p$29115$1a@gJ))
                        (void))))
                   (annotation-source g$expr$29117$1a@gJ))
                  (void))))
             (g$stx-expr$28385$1a@gJ g$x$29114$1a@gJ))
            (display '">" g$p$29115$1a@gJ))))))
   (g$datum->stx$28394$1a@gJ
     g$datum->stx$32404$1a@gJ
     (case-lambda
       ((g$id$29119$1a@gJ g$datum$29120$1a@gJ)
        (g$make-stx$28384$1a@gJ
          g$datum$29120$1a@gJ
          (g$stx-mark*$28386$1a@gJ g$id$29119$1a@gJ)
          (g$stx-subst*$28387$1a@gJ g$id$29119$1a@gJ)
          (g$stx-ae*$28388$1a@gJ g$id$29119$1a@gJ)))))
   (g$gen-mark$28395$1a@gJ
     g$gen-mark$32405$1a@gJ
     (case-lambda (() (g$string$20634$1a@gJ '#\m))))
   (g$anti-mark$28396$1a@gJ g$anti-mark$32406$1a@gJ '#f)
   (g$anti-mark?$28397$1a@gJ g$anti-mark?$32407$1a@gJ not)
   (g$join-wraps$28398$1a@gJ
     g$join-wraps$32408$1a@gJ
     (case-lambda
       ((g$m1*$29121$1a@gJ
          g$s1*$29122$1a@gJ
          g$ae1*$29123$1a@gJ
          g$e$29124$1a@gJ)
        (letrec* ((g$cancel$29125$1a@gJ
                    (case-lambda
                      ((g$ls1$29129$1a@gJ g$ls2$29130$1a@gJ)
                       ((letrec ((g$f$29131$1a@gJ
                                   (case-lambda
                                     ((g$x$29132$1a@gJ
                                        g$ls1$29133$1a@gJ)
                                      (if (null? g$ls1$29133$1a@gJ)
                                        (cdr g$ls2$29130$1a@gJ)
                                        (cons
                                          g$x$29132$1a@gJ
                                          (g$f$29131$1a@gJ
                                            (car g$ls1$29133$1a@gJ)
                                            (cdr g$ls1$29133$1a@gJ))))))))
                          g$f$29131$1a@gJ)
                        (car g$ls1$29129$1a@gJ)
                        (cdr g$ls1$29129$1a@gJ))))))
          ((case-lambda
             ((g$m2*$29126$1a@gJ g$s2*$29127$1a@gJ g$ae2*$29128$1a@gJ)
              (if (if (not (null? g$m1*$29121$1a@gJ))
                    (if (not (null? g$m2*$29126$1a@gJ))
                      (begin
                        '#f
                        (g$anti-mark?$28397$1a@gJ
                          (car g$m2*$29126$1a@gJ)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$29125$1a@gJ
                    g$m1*$29121$1a@gJ
                    g$m2*$29126$1a@gJ)
                  (g$cancel$29125$1a@gJ
                    g$s1*$29122$1a@gJ
                    g$s2*$29127$1a@gJ)
                  (g$cancel$29125$1a@gJ
                    g$ae1*$29123$1a@gJ
                    g$ae2*$29128$1a@gJ))
                (values
                  (g$append$20200$1a@gJ
                    g$m1*$29121$1a@gJ
                    g$m2*$29126$1a@gJ)
                  (g$append$20200$1a@gJ
                    g$s1*$29122$1a@gJ
                    g$s2*$29127$1a@gJ)
                  (g$append$20200$1a@gJ
                    g$ae1*$29123$1a@gJ
                    g$ae2*$29128$1a@gJ)))))
           (g$stx-mark*$28386$1a@gJ g$e$29124$1a@gJ)
           (g$stx-subst*$28387$1a@gJ g$e$29124$1a@gJ)
           (g$stx-ae*$28388$1a@gJ g$e$29124$1a@gJ))))))
   (g$mkstx$28399$1a@gJ
     g$mkstx$32409$1a@gJ
     (case-lambda
       ((g$e$29134$1a@gJ
          g$m*$29135$1a@gJ
          g$s*$29136$1a@gJ
          g$ae*$29137$1a@gJ)
        (if (if (g$stx?$28383$1a@gJ g$e$29134$1a@gJ)
              (begin
                '#f
                (not (g$top-marked?$28345$1a@gJ g$m*$29135$1a@gJ)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$28398$1a@gJ
                 g$m*$29135$1a@gJ
                 g$s*$29136$1a@gJ
                 g$ae*$29137$1a@gJ
                 g$e$29134$1a@gJ)))
            (case-lambda
              ((g$m*$29141$1a@gJ g$s*$29142$1a@gJ g$ae*$29143$1a@gJ)
               ((case-lambda
                  ((g$ae*$29144$1a@gJ g$s*$29145$1a@gJ g$m*$29146$1a@gJ)
                   (g$make-stx$28384$1a@gJ
                     (g$stx-expr$28385$1a@gJ g$e$29134$1a@gJ)
                     g$m*$29146$1a@gJ
                     g$s*$29145$1a@gJ
                     g$ae*$29144$1a@gJ)))
                g$ae*$29143$1a@gJ
                g$s*$29142$1a@gJ
                g$m*$29141$1a@gJ))))
          (g$make-stx$28384$1a@gJ
            g$e$29134$1a@gJ
            g$m*$29135$1a@gJ
            g$s*$29136$1a@gJ
            g$ae*$29137$1a@gJ)))))
   (g$add-mark$28400$1a@gJ
     g$add-mark$32410$1a@gJ
     (case-lambda
       ((g$m$29147$1a@gJ g$e$29148$1a@gJ g$ae$29149$1a@gJ)
        (g$mkstx$28399$1a@gJ
          g$e$29148$1a@gJ
          (list g$m$29147$1a@gJ)
          '(shift)
          (list g$ae$29149$1a@gJ)))))
   (g$add-subst$28401$1a@gJ
     g$add-subst$32411$1a@gJ
     (case-lambda
       ((g$subst$29150$1a@gJ g$e$29151$1a@gJ)
        (g$mkstx$28399$1a@gJ
          g$e$29151$1a@gJ
          '()
          (list g$subst$29150$1a@gJ)
          '()))))
   (g$syntax-kind?$28402$1a@gJ
     g$syntax-kind?$32412$1a@gJ
     (case-lambda
       ((g$x$29152$1a@gJ g$p?$29153$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$29152$1a@gJ)
          (g$syntax-kind?$28402$1a@gJ
            (g$stx-expr$28385$1a@gJ g$x$29152$1a@gJ)
            g$p?$29153$1a@gJ)
          (if (annotation? g$x$29152$1a@gJ)
            (g$syntax-kind?$28402$1a@gJ
              (annotation-expression g$x$29152$1a@gJ)
              g$p?$29153$1a@gJ)
            (begin '#f (g$p?$29153$1a@gJ g$x$29152$1a@gJ)))))))
   (g$syntax-vector->list$28403$1a@gJ
     g$syntax-vector->list$32413$1a@gJ
     (case-lambda
       ((g$x$29154$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$29154$1a@gJ)
          ((case-lambda
             ((g$ls$29155$1a@gJ
                g$m*$29156$1a@gJ
                g$s*$29157$1a@gJ
                g$ae*$29158$1a@gJ)
              (g$map$20195$1a@gJ
                (case-lambda
                  ((g$x$29159$1a@gJ)
                   (g$mkstx$28399$1a@gJ
                     g$x$29159$1a@gJ
                     g$m*$29156$1a@gJ
                     g$s*$29157$1a@gJ
                     g$ae*$29158$1a@gJ)))
                g$ls$29155$1a@gJ)))
           (g$syntax-vector->list$28403$1a@gJ
             (g$stx-expr$28385$1a@gJ g$x$29154$1a@gJ))
           (g$stx-mark*$28386$1a@gJ g$x$29154$1a@gJ)
           (g$stx-subst*$28387$1a@gJ g$x$29154$1a@gJ)
           (g$stx-ae*$28388$1a@gJ g$x$29154$1a@gJ))
          (if (annotation? g$x$29154$1a@gJ)
            (g$syntax-vector->list$28403$1a@gJ
              (annotation-expression g$x$29154$1a@gJ))
            (if (g$vector?$20618$1a@gJ g$x$29154$1a@gJ)
              (g$vector->list$20654$1a@gJ g$x$29154$1a@gJ)
              (begin
                '#f
                (assertion-violation
                  'syntax-vector->list
                  '"BUG: not a syntax vector"
                  g$x$29154$1a@gJ))))))))
   (g$syntax-pair?$28404$1a@gJ
     g$syntax-pair?$32414$1a@gJ
     (case-lambda
       ((g$x$29160$1a@gJ)
        (g$syntax-kind?$28402$1a@gJ g$x$29160$1a@gJ pair?))))
   (g$syntax-vector?$28405$1a@gJ
     g$syntax-vector?$32415$1a@gJ
     (case-lambda
       ((g$x$29161$1a@gJ)
        (g$syntax-kind?$28402$1a@gJ
          g$x$29161$1a@gJ
          g$vector?$20618$1a@gJ))))
   (g$syntax-null?$28406$1a@gJ
     g$syntax-null?$32416$1a@gJ
     (case-lambda
       ((g$x$29162$1a@gJ)
        (g$syntax-kind?$28402$1a@gJ g$x$29162$1a@gJ null?))))
   (g$syntax-list?$28407$1a@gJ
     g$syntax-list?$32417$1a@gJ
     (case-lambda
       ((g$x$29163$1a@gJ)
        ((case-lambda
           ((g$t$29164$1a@gJ)
            (if g$t$29164$1a@gJ
              g$t$29164$1a@gJ
              (begin
                '#f
                (if (g$syntax-pair?$28404$1a@gJ g$x$29163$1a@gJ)
                  (begin
                    '#f
                    (g$syntax-list?$28407$1a@gJ
                      (g$syntax-cdr$28409$1a@gJ g$x$29163$1a@gJ)))
                  '#f)))))
         (g$syntax-null?$28406$1a@gJ g$x$29163$1a@gJ)))))
   (g$syntax-car$28408$1a@gJ
     g$syntax-car$32418$1a@gJ
     (case-lambda
       ((g$x$29165$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$29165$1a@gJ)
          (g$mkstx$28399$1a@gJ
            (g$syntax-car$28408$1a@gJ
              (g$stx-expr$28385$1a@gJ g$x$29165$1a@gJ))
            (g$stx-mark*$28386$1a@gJ g$x$29165$1a@gJ)
            (g$stx-subst*$28387$1a@gJ g$x$29165$1a@gJ)
            (g$stx-ae*$28388$1a@gJ g$x$29165$1a@gJ))
          (if (annotation? g$x$29165$1a@gJ)
            (g$syntax-car$28408$1a@gJ
              (annotation-expression g$x$29165$1a@gJ))
            (if (pair? g$x$29165$1a@gJ)
              (car g$x$29165$1a@gJ)
              (begin
                '#f
                (assertion-violation
                  'syntax-car
                  '"BUG: not a pair"
                  g$x$29165$1a@gJ))))))))
   (g$syntax-cdr$28409$1a@gJ
     g$syntax-cdr$32419$1a@gJ
     (case-lambda
       ((g$x$29166$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$29166$1a@gJ)
          (g$mkstx$28399$1a@gJ
            (g$syntax-cdr$28409$1a@gJ
              (g$stx-expr$28385$1a@gJ g$x$29166$1a@gJ))
            (g$stx-mark*$28386$1a@gJ g$x$29166$1a@gJ)
            (g$stx-subst*$28387$1a@gJ g$x$29166$1a@gJ)
            (g$stx-ae*$28388$1a@gJ g$x$29166$1a@gJ))
          (if (annotation? g$x$29166$1a@gJ)
            (g$syntax-cdr$28409$1a@gJ
              (annotation-expression g$x$29166$1a@gJ))
            (if (pair? g$x$29166$1a@gJ)
              (cdr g$x$29166$1a@gJ)
              (begin
                '#f
                (assertion-violation
                  'syntax-cdr
                  '"BUG: not a pair"
                  g$x$29166$1a@gJ))))))))
   (g$syntax->list$28410$1a@gJ
     g$syntax->list$32420$1a@gJ
     (case-lambda
       ((g$x$29167$1a@gJ)
        (if (g$syntax-pair?$28404$1a@gJ g$x$29167$1a@gJ)
          (cons
            (g$syntax-car$28408$1a@gJ g$x$29167$1a@gJ)
            (g$syntax->list$28410$1a@gJ
              (g$syntax-cdr$28409$1a@gJ g$x$29167$1a@gJ)))
          (if (g$syntax-null?$28406$1a@gJ g$x$29167$1a@gJ)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$29167$1a@gJ))))))
   (g$id?$28411$1a@gJ
     g$id?$32421$1a@gJ
     (case-lambda
       ((g$x$29168$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$29168$1a@gJ)
          (begin
            '#f
            ((case-lambda
               ((g$expr$29169$1a@gJ)
                (g$symbol?$20620$1a@gJ
                  (if (annotation? g$expr$29169$1a@gJ)
                    (annotation-stripped g$expr$29169$1a@gJ)
                    g$expr$29169$1a@gJ))))
             (g$stx-expr$28385$1a@gJ g$x$29168$1a@gJ)))
          '#f))))
   (g$id->sym$28412$1a@gJ
     g$id->sym$32422$1a@gJ
     (case-lambda
       ((g$x$29170$1a@gJ)
        (begin
          (if (not (g$stx?$28383$1a@gJ g$x$29170$1a@gJ))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$29170$1a@gJ)
            (void))
          ((case-lambda
             ((g$expr$29171$1a@gJ)
              ((case-lambda
                 ((g$sym$29172$1a@gJ)
                  (if (g$symbol?$20620$1a@gJ g$sym$29172$1a@gJ)
                    g$sym$29172$1a@gJ
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$29170$1a@gJ))))
               (if (annotation? g$expr$29171$1a@gJ)
                 (annotation-stripped g$expr$29171$1a@gJ)
                 g$expr$29171$1a@gJ))))
           (g$stx-expr$28385$1a@gJ g$x$29170$1a@gJ))))))
   (g$same-marks?$28413$1a@gJ
     g$same-marks?$32423$1a@gJ
     (case-lambda
       ((g$x$29173$1a@gJ g$y$29174$1a@gJ)
        ((case-lambda
           ((g$t$29175$1a@gJ)
            (if g$t$29175$1a@gJ
              g$t$29175$1a@gJ
              (begin
                '#f
                (if (pair? g$x$29173$1a@gJ)
                  (if (pair? g$y$29174$1a@gJ)
                    (if (eq? (car g$x$29173$1a@gJ)
                             (car g$y$29174$1a@gJ))
                      (begin
                        '#f
                        (g$same-marks?$28413$1a@gJ
                          (cdr g$x$29173$1a@gJ)
                          (cdr g$y$29174$1a@gJ)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$29173$1a@gJ)
           (begin '#f (null? g$y$29174$1a@gJ))
           '#f)))))
   (g$bound-id=?$28414$1a@gJ
     g$bound-id=?$32424$1a@gJ
     (case-lambda
       ((g$x$29176$1a@gJ g$y$29177$1a@gJ)
        (if (eq? (g$id->sym$28412$1a@gJ g$x$29176$1a@gJ)
                 (g$id->sym$28412$1a@gJ g$y$29177$1a@gJ))
          (begin
            '#f
            (g$same-marks?$28413$1a@gJ
              (g$stx-mark*$28386$1a@gJ g$x$29176$1a@gJ)
              (g$stx-mark*$28386$1a@gJ g$y$29177$1a@gJ)))
          '#f))))
   (g$free-id=?$28415$1a@gJ
     g$free-id=?$32425$1a@gJ
     (case-lambda
       ((g$i$29178$1a@gJ g$j$29179$1a@gJ)
        ((case-lambda
           ((g$t0$29180$1a@gJ g$t1$29181$1a@gJ)
            (if ((case-lambda
                   ((g$t$29182$1a@gJ)
                    (if g$t$29182$1a@gJ
                      g$t$29182$1a@gJ
                      (begin '#f g$t1$29181$1a@gJ))))
                 g$t0$29180$1a@gJ)
              (eq? g$t0$29180$1a@gJ g$t1$29181$1a@gJ)
              (eq? (g$id->sym$28412$1a@gJ g$i$29178$1a@gJ)
                   (g$id->sym$28412$1a@gJ g$j$29179$1a@gJ)))))
         (g$id->real-label$28425$1a@gJ g$i$29178$1a@gJ)
         (g$id->real-label$28425$1a@gJ g$j$29179$1a@gJ)))))
   (g$valid-bound-ids?$28416$1a@gJ
     g$valid-bound-ids?$32426$1a@gJ
     (case-lambda
       ((g$id*$29183$1a@gJ)
        (if (g$for-all$20193$1a@gJ g$id?$28411$1a@gJ g$id*$29183$1a@gJ)
          (begin
            '#f
            (g$distinct-bound-ids?$28417$1a@gJ g$id*$29183$1a@gJ))
          '#f))))
   (g$distinct-bound-ids?$28417$1a@gJ
     g$distinct-bound-ids?$32427$1a@gJ
     (case-lambda
       ((g$id*$29184$1a@gJ)
        ((case-lambda
           ((g$t$29185$1a@gJ)
            (if g$t$29185$1a@gJ
              g$t$29185$1a@gJ
              (begin
                '#f
                (if (not (g$bound-id-member?$28418$1a@gJ
                           (car g$id*$29184$1a@gJ)
                           (cdr g$id*$29184$1a@gJ)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$28417$1a@gJ
                      (cdr g$id*$29184$1a@gJ)))
                  '#f)))))
         (null? g$id*$29184$1a@gJ)))))
   (g$bound-id-member?$28418$1a@gJ
     g$bound-id-member?$32428$1a@gJ
     (case-lambda
       ((g$id$29186$1a@gJ g$id*$29187$1a@gJ)
        (if (pair? g$id*$29187$1a@gJ)
          (begin
            '#f
            ((case-lambda
               ((g$t$29188$1a@gJ)
                (if g$t$29188$1a@gJ
                  g$t$29188$1a@gJ
                  (begin
                    '#f
                    (g$bound-id-member?$28418$1a@gJ
                      g$id$29186$1a@gJ
                      (cdr g$id*$29187$1a@gJ))))))
             (g$bound-id=?$28414$1a@gJ
               g$id$29186$1a@gJ
               (car g$id*$29187$1a@gJ))))
          '#f))))
   (g$self-evaluating?$28419$1a@gJ
     g$self-evaluating?$32429$1a@gJ
     (case-lambda
       ((g$x$29189$1a@gJ)
        ((case-lambda
           ((g$t$29190$1a@gJ)
            (if g$t$29190$1a@gJ
              g$t$29190$1a@gJ
              ((case-lambda
                 ((g$t$29191$1a@gJ)
                  (if g$t$29191$1a@gJ
                    g$t$29191$1a@gJ
                    ((case-lambda
                       ((g$t$29192$1a@gJ)
                        (if g$t$29192$1a@gJ
                          g$t$29192$1a@gJ
                          ((case-lambda
                             ((g$t$29193$1a@gJ)
                              (if g$t$29193$1a@gJ
                                g$t$29193$1a@gJ
                                (begin
                                  '#f
                                  (g$bytevector?$20619$1a@gJ
                                    g$x$29189$1a@gJ)))))
                           (g$boolean?$20621$1a@gJ g$x$29189$1a@gJ)))))
                     (g$char?$20617$1a@gJ g$x$29189$1a@gJ)))))
               (g$string?$20616$1a@gJ g$x$29189$1a@gJ)))))
         (g$number?$21647$1a@gJ g$x$29189$1a@gJ)))))
   (g$strip-annotations$28420$1a@gJ
     g$strip-annotations$32430$1a@gJ
     (case-lambda
       ((g$x$29194$1a@gJ)
        (if (pair? g$x$29194$1a@gJ)
          (cons
            (g$strip-annotations$28420$1a@gJ (car g$x$29194$1a@gJ))
            (g$strip-annotations$28420$1a@gJ (cdr g$x$29194$1a@gJ)))
          (if (g$vector?$20618$1a@gJ g$x$29194$1a@gJ)
            (g$vector-map$20707$1a@gJ
              g$strip-annotations$28420$1a@gJ
              g$x$29194$1a@gJ)
            (if (annotation? g$x$29194$1a@gJ)
              (annotation-stripped g$x$29194$1a@gJ)
              (begin '#f g$x$29194$1a@gJ)))))))
   (g$strip$28421$1a@gJ
     g$strip$32431$1a@gJ
     (case-lambda
       ((g$x$29195$1a@gJ g$m*$29196$1a@gJ)
        (if (g$top-marked?$28345$1a@gJ g$m*$29196$1a@gJ)
          (if ((case-lambda
                 ((g$t$29197$1a@gJ)
                  (if g$t$29197$1a@gJ
                    g$t$29197$1a@gJ
                    ((case-lambda
                       ((g$t$29198$1a@gJ)
                        (if g$t$29198$1a@gJ
                          g$t$29198$1a@gJ
                          (begin
                            '#f
                            (if (g$vector?$20618$1a@gJ g$x$29195$1a@gJ)
                              (if (g$>$21672$1a@gJ
                                    (g$vector-length$20652$1a@gJ
                                      g$x$29195$1a@gJ)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$20649$1a@gJ
                                      g$x$29195$1a@gJ
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$29195$1a@gJ)
                       (begin '#f (annotation? (car g$x$29195$1a@gJ)))
                       '#f)))))
               (annotation? g$x$29195$1a@gJ))
            (g$strip-annotations$28420$1a@gJ g$x$29195$1a@gJ)
            g$x$29195$1a@gJ)
          ((letrec ((g$f$29199$1a@gJ
                      (case-lambda
                        ((g$x$29200$1a@gJ)
                         (if (g$stx?$28383$1a@gJ g$x$29200$1a@gJ)
                           (g$strip$28421$1a@gJ
                             (g$stx-expr$28385$1a@gJ g$x$29200$1a@gJ)
                             (g$stx-mark*$28386$1a@gJ g$x$29200$1a@gJ))
                           (if (annotation? g$x$29200$1a@gJ)
                             (annotation-stripped g$x$29200$1a@gJ)
                             (if (pair? g$x$29200$1a@gJ)
                               ((case-lambda
                                  ((g$a$29201$1a@gJ g$d$29202$1a@gJ)
                                   (if (if (eq? g$a$29201$1a@gJ
                                                (car g$x$29200$1a@gJ))
                                         (begin
                                           '#f
                                           (eq? g$d$29202$1a@gJ
                                                (cdr g$x$29200$1a@gJ)))
                                         '#f)
                                     g$x$29200$1a@gJ
                                     (cons
                                       g$a$29201$1a@gJ
                                       g$d$29202$1a@gJ))))
                                (g$f$29199$1a@gJ (car g$x$29200$1a@gJ))
                                (g$f$29199$1a@gJ (cdr g$x$29200$1a@gJ)))
                               (if (g$vector?$20618$1a@gJ
                                     g$x$29200$1a@gJ)
                                 ((case-lambda
                                    ((g$old$29203$1a@gJ)
                                     ((case-lambda
                                        ((g$new$29204$1a@gJ)
                                         (if (g$for-all$20193$1a@gJ
                                               eq?
                                               g$old$29203$1a@gJ
                                               g$new$29204$1a@gJ)
                                           g$x$29200$1a@gJ
                                           (g$list->vector$20647$1a@gJ
                                             g$new$29204$1a@gJ))))
                                      (g$map$20195$1a@gJ
                                        g$f$29199$1a@gJ
                                        g$old$29203$1a@gJ))))
                                  (g$vector->list$20654$1a@gJ
                                    g$x$29200$1a@gJ))
                                 (begin '#f g$x$29200$1a@gJ)))))))))
             g$f$29199$1a@gJ)
           g$x$29195$1a@gJ)))))
   (g$stx->datum$28422$1a@gJ
     g$stx->datum$32432$1a@gJ
     (case-lambda
       ((g$x$29205$1a@gJ) (g$strip$28421$1a@gJ g$x$29205$1a@gJ '()))))
   (g$same-marks*?$28423$1a@gJ
     g$same-marks*?$32433$1a@gJ
     (case-lambda
       ((g$mark*$29206$1a@gJ g$mark**$29207$1a@gJ g$si$29208$1a@gJ)
        (if (null? g$si$29208$1a@gJ)
          '#f
          (if (g$same-marks?$28413$1a@gJ
                g$mark*$29206$1a@gJ
                (g$vector-ref$20649$1a@gJ
                  g$mark**$29207$1a@gJ
                  (car g$si$29208$1a@gJ)))
            (car g$si$29208$1a@gJ)
            (g$same-marks*?$28423$1a@gJ
              g$mark*$29206$1a@gJ
              g$mark**$29207$1a@gJ
              (cdr g$si$29208$1a@gJ)))))))
   (g$id->label$28424$1a@gJ
     g$id->label$32434$1a@gJ
     (case-lambda
       ((g$id$29209$1a@gJ)
        ((case-lambda
           ((g$t$29210$1a@gJ)
            (if g$t$29210$1a@gJ
              g$t$29210$1a@gJ
              (begin
                '#f
                ((case-lambda
                   ((g$t$29211$1a@gJ)
                    (if g$t$29211$1a@gJ
                      ((case-lambda
                         ((g$env$29212$1a@gJ)
                          ((case-lambda
                             ((g$rib$29213$1a@gJ)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$28350$1a@gJ
                                     g$id$29209$1a@gJ
                                     g$rib$29213$1a@gJ
                                     '#f)))
                                (case-lambda
                                  ((g$lab$29216$1a@gJ
                                     g$_loc$29217$1a@gJ)
                                   ((case-lambda
                                      ((g$_loc$29218$1a@gJ
                                         g$lab$29219$1a@gJ)
                                       (begin
                                         (g$extend-rib!$28372$1a@gJ
                                           g$rib$29213$1a@gJ
                                           g$id$29209$1a@gJ
                                           g$lab$29219$1a@gJ
                                           '#t)
                                         g$lab$29219$1a@gJ)))
                                    g$_loc$29217$1a@gJ
                                    g$lab$29216$1a@gJ))))))
                           (g$interaction-env-rib$28994$1a@gJ
                             g$env$29212$1a@gJ))))
                       g$t$29211$1a@gJ)
                      (begin '#f '#f))))
                 (g$top-level-context$29037$1a@gJ))))))
         (g$id->real-label$28425$1a@gJ g$id$29209$1a@gJ)))))
   (g$id->real-label$28425$1a@gJ
     g$id->real-label$32435$1a@gJ
     (case-lambda
       ((g$id$29220$1a@gJ)
        ((case-lambda
           ((g$sym$29221$1a@gJ)
            ((letrec ((g$search$29222$1a@gJ
                        (case-lambda
                          ((g$subst*$29223$1a@gJ g$mark*$29224$1a@gJ)
                           (if (null? g$subst*$29223$1a@gJ)
                             '#f
                             (if (eq? (car g$subst*$29223$1a@gJ) 'shift)
                               (g$search$29222$1a@gJ
                                 (cdr g$subst*$29223$1a@gJ)
                                 (cdr g$mark*$29224$1a@gJ))
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rib$29225$1a@gJ)
                                     ((case-lambda
                                        ((g$t$29226$1a@gJ)
                                         (if g$t$29226$1a@gJ
                                           ((case-lambda
                                              ((g$ht$29227$1a@gJ)
                                               ((case-lambda
                                                  ((g$si$29228$1a@gJ)
                                                   ((case-lambda
                                                      ((g$i$29229$1a@gJ)
                                                       (if g$i$29229$1a@gJ
                                                         (g$vector-ref$20649$1a@gJ
                                                           (g$rib-label*$28361$1a@gJ
                                                             g$rib$29225$1a@gJ)
                                                           g$i$29229$1a@gJ)
                                                         (g$search$29222$1a@gJ
                                                           (cdr g$subst*$29223$1a@gJ)
                                                           g$mark*$29224$1a@gJ))))
                                                    (if g$si$29228$1a@gJ
                                                      (begin
                                                        '#f
                                                        (g$same-marks*?$28423$1a@gJ
                                                          g$mark*$29224$1a@gJ
                                                          (g$rib-mark**$28360$1a@gJ
                                                            g$rib$29225$1a@gJ)
                                                          (g$reverse$20656$1a@gJ
                                                            g$si$29228$1a@gJ)))
                                                      '#f))))
                                                (g$hashtable-ref$20759$1a@gJ
                                                  g$ht$29227$1a@gJ
                                                  g$sym$29221$1a@gJ
                                                  '#f))))
                                            g$t$29226$1a@gJ)
                                           ((case-lambda
                                              ((g$t$29230$1a@gJ)
                                               (if g$t$29230$1a@gJ
                                                 g$t$29230$1a@gJ
                                                 (begin
                                                   '#f
                                                   (begin
                                                     '#f
                                                     ((letrec ((g$f$29231$1a@gJ
                                                                 (case-lambda
                                                                   ((g$sym*$29232$1a@gJ
                                                                      g$mark**$29233$1a@gJ
                                                                      g$label*$29234$1a@gJ)
                                                                    (if (null?
                                                                          g$sym*$29232$1a@gJ)
                                                                      (g$search$29222$1a@gJ
                                                                        (cdr g$subst*$29223$1a@gJ)
                                                                        g$mark*$29224$1a@gJ)
                                                                      (if (if (eq? (car g$sym*$29232$1a@gJ)
                                                                                   g$sym$29221$1a@gJ)
                                                                            (begin
                                                                              '#f
                                                                              (g$same-marks?$28413$1a@gJ
                                                                                (car g$mark**$29233$1a@gJ)
                                                                                g$mark*$29224$1a@gJ))
                                                                            '#f)
                                                                        (car g$label*$29234$1a@gJ)
                                                                        (begin
                                                                          '#f
                                                                          (g$f$29231$1a@gJ
                                                                            (cdr g$sym*$29232$1a@gJ)
                                                                            (cdr g$mark**$29233$1a@gJ)
                                                                            (cdr g$label*$29234$1a@gJ)))))))))
                                                        g$f$29231$1a@gJ)
                                                      (g$rib-sym*$28359$1a@gJ
                                                        g$rib$29225$1a@gJ)
                                                      (g$rib-mark**$28360$1a@gJ
                                                        g$rib$29225$1a@gJ)
                                                      (g$rib-label*$28361$1a@gJ
                                                        g$rib$29225$1a@gJ)))))))
                                            (g$find-label$28371$1a@gJ
                                              g$rib$29225$1a@gJ
                                              g$sym$29221$1a@gJ
                                              g$mark*$29224$1a@gJ)))))
                                      (g$rib-sealed/freq$28362$1a@gJ
                                        g$rib$29225$1a@gJ))))
                                  (car g$subst*$29223$1a@gJ)))))))))
               g$search$29222$1a@gJ)
             (g$stx-subst*$28387$1a@gJ g$id$29220$1a@gJ)
             (g$stx-mark*$28386$1a@gJ g$id$29220$1a@gJ))))
         (g$id->sym$28412$1a@gJ g$id$29220$1a@gJ)))))
   (g$label->binding$28426$1a@gJ
     g$label->binding$32436$1a@gJ
     (case-lambda
       ((g$x$29235$1a@gJ g$r$29236$1a@gJ)
        (if (not g$x$29235$1a@gJ)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$29237$1a@gJ)
              (if g$t$29237$1a@gJ
                ((case-lambda
                   ((g$b$29238$1a@gJ)
                    (if (if (pair? g$b$29238$1a@gJ)
                          (begin
                            '#f
                            (eq? (car g$b$29238$1a@gJ) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$20195$1a@gJ
                          g$bless$28872$1a@gJ
                          (cdr g$b$29238$1a@gJ)))
                      (if (if (pair? g$b$29238$1a@gJ)
                            (begin
                              '#f
                              (eq? (car g$b$29238$1a@gJ) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$29239$1a@gJ g$loc$29240$1a@gJ)
                            (cons
                              '$rtd
                              (symbol-value g$loc$29240$1a@gJ))))
                         (g$cadr$20658$1a@gJ g$b$29238$1a@gJ)
                         (g$cddr$20660$1a@gJ g$b$29238$1a@gJ))
                        (begin '#f g$b$29238$1a@gJ)))))
                 g$t$29237$1a@gJ)
                ((case-lambda
                   ((g$t$29241$1a@gJ)
                    (if g$t$29241$1a@gJ
                      (cdr g$t$29241$1a@gJ)
                      ((case-lambda
                         ((g$t$29242$1a@gJ)
                          (if g$t$29242$1a@gJ
                            ((case-lambda
                               ((g$env$29243$1a@gJ)
                                ((case-lambda
                                   ((g$t$29244$1a@gJ)
                                    (if g$t$29244$1a@gJ
                                      ((case-lambda
                                         ((g$p$29245$1a@gJ)
                                          (g$cons*$20197$1a@gJ
                                            'lexical
                                            (cdr g$p$29245$1a@gJ)
                                            '#f)))
                                       g$t$29244$1a@gJ)
                                      (begin
                                        '#f
                                        '(displaced-lexical . #f)))))
                                 (g$assq$20183$1a@gJ
                                   g$x$29235$1a@gJ
                                   (g$interaction-env-locs$28996$1a@gJ
                                     g$env$29243$1a@gJ)))))
                             g$t$29242$1a@gJ)
                            (begin '#f '(displaced-lexical . #f)))))
                       (g$top-level-context$29037$1a@gJ)))))
                 (g$assq$20183$1a@gJ
                   g$x$29235$1a@gJ
                   g$r$29236$1a@gJ)))))
           (g$imported-label->binding$28116$1a@gJ g$x$29235$1a@gJ))))))
   (g$make-binding$28427$1a@gJ g$make-binding$32437$1a@gJ cons)
   (g$binding-type$28428$1a@gJ g$binding-type$32438$1a@gJ car)
   (g$binding-value$28429$1a@gJ g$binding-value$32439$1a@gJ cdr)
   (g$raise-unbound-error$28430$1a@gJ
     g$raise-unbound-error$32440$1a@gJ
     (case-lambda
       ((g$id$29246$1a@gJ)
        (g$syntax-violation*$29028$1a@gJ
          '#f
          '"unbound identifier"
          g$id$29246$1a@gJ
          (g$make-undefined-violation$22268$1a@gJ)))))
   (g$syntax-type$28431$1a@gJ
     g$syntax-type$32441$1a@gJ
     (case-lambda
       ((g$e$29247$1a@gJ g$r$29248$1a@gJ)
        (if (g$id?$28411$1a@gJ g$e$29247$1a@gJ)
          ((case-lambda
             ((g$id$29249$1a@gJ)
              ((case-lambda
                 ((g$label$29250$1a@gJ)
                  ((case-lambda
                     ((g$b$29251$1a@gJ)
                      ((case-lambda
                         ((g$type$29252$1a@gJ)
                          (begin
                            (if (not g$label$29250$1a@gJ)
                              (g$raise-unbound-error$28430$1a@gJ
                                g$id$29249$1a@gJ)
                              (void))
                            ((case-lambda
                               ((g$t$29253$1a@gJ)
                                (if (g$memv$20188$1a@gJ
                                      g$t$29253$1a@gJ
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$29252$1a@gJ
                                    (g$binding-value$28429$1a@gJ
                                      g$b$29251$1a@gJ)
                                    g$id$29249$1a@gJ)
                                  (begin '#f (values 'other '#f '#f)))))
                             g$type$29252$1a@gJ))))
                       (g$binding-type$28428$1a@gJ g$b$29251$1a@gJ))))
                   (g$label->binding$28426$1a@gJ
                     g$label$29250$1a@gJ
                     g$r$29248$1a@gJ))))
               (g$id->label$28424$1a@gJ g$id$29249$1a@gJ))))
           g$e$29247$1a@gJ)
          (if (g$syntax-pair?$28404$1a@gJ g$e$29247$1a@gJ)
            ((case-lambda
               ((g$id$29254$1a@gJ)
                (if (g$id?$28411$1a@gJ g$id$29254$1a@gJ)
                  ((case-lambda
                     ((g$label$29255$1a@gJ)
                      ((case-lambda
                         ((g$b$29256$1a@gJ)
                          ((case-lambda
                             ((g$type$29257$1a@gJ)
                              (begin
                                (if (not g$label$29255$1a@gJ)
                                  (g$raise-unbound-error$28430$1a@gJ
                                    g$id$29254$1a@gJ)
                                  (void))
                                ((case-lambda
                                   ((g$t$29258$1a@gJ)
                                    (if (g$memv$20188$1a@gJ
                                          g$t$29258$1a@gJ
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$29257$1a@gJ
                                        (g$binding-value$28429$1a@gJ
                                          g$b$29256$1a@gJ)
                                        g$id$29254$1a@gJ)
                                      (begin
                                        '#f
                                        (values 'call '#f '#f)))))
                                 g$type$29257$1a@gJ))))
                           (g$binding-type$28428$1a@gJ
                             g$b$29256$1a@gJ))))
                       (g$label->binding$28426$1a@gJ
                         g$label$29255$1a@gJ
                         g$r$29248$1a@gJ))))
                   (g$id->label$28424$1a@gJ g$id$29254$1a@gJ))
                  (values 'call '#f '#f))))
             (g$syntax-car$28408$1a@gJ g$e$29247$1a@gJ))
            (begin
              '#f
              ((case-lambda
                 ((g$d$29259$1a@gJ)
                  (if (g$self-evaluating?$28419$1a@gJ g$d$29259$1a@gJ)
                    (values 'constant g$d$29259$1a@gJ '#f)
                    (values 'other '#f '#f))))
               (g$stx->datum$28422$1a@gJ g$e$29247$1a@gJ))))))))
   (g$sanitize-binding$28454$1a@gJ
     g$sanitize-binding$32442$1a@gJ
     (case-lambda
       ((g$x$29260$1a@gJ g$src$29261$1a@gJ)
        (if (g$procedure?$20622$1a@gJ g$x$29260$1a@gJ)
          (g$cons*$20197$1a@gJ
            'local-macro
            g$x$29260$1a@gJ
            g$src$29261$1a@gJ)
          (if (if (pair? g$x$29260$1a@gJ)
                (if (eq? (car g$x$29260$1a@gJ) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$20622$1a@gJ (cdr g$x$29260$1a@gJ)))
                  '#f)
                '#f)
            (g$cons*$20197$1a@gJ
              'local-macro!
              (cdr g$x$29260$1a@gJ)
              g$src$29261$1a@gJ)
            (if (if (pair? g$x$29260$1a@gJ)
                  (begin '#f (eq? (car g$x$29260$1a@gJ) '$rtd))
                  '#f)
              g$x$29260$1a@gJ
              (if (if (pair? g$x$29260$1a@gJ)
                    (begin '#f (eq? (car g$x$29260$1a@gJ) 'ctv))
                    '#f)
                (g$cons*$20197$1a@gJ
                  'local-ctv
                  (cdr g$x$29260$1a@gJ)
                  g$src$29261$1a@gJ)
                (begin
                  '#f
                  (assertion-violation
                    'expand
                    '"invalid transformer"
                    g$x$29260$1a@gJ)))))))))
   (g$make-variable-transformer$28455$1a@gJ
     g$make-variable-transformer$32443$1a@gJ
     (case-lambda
       ((g$x$29262$1a@gJ)
        (if (g$procedure?$20622$1a@gJ g$x$29262$1a@gJ)
          (cons 'macro! g$x$29262$1a@gJ)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$29262$1a@gJ)))))
   (g$make-compile-time-value$28456$1a@gJ
     g$make-compile-time-value$32444$1a@gJ
     (case-lambda ((g$x$29263$1a@gJ) (cons 'ctv g$x$29263$1a@gJ))))
   (g$variable-transformer?$28457$1a@gJ
     g$variable-transformer?$32445$1a@gJ
     (case-lambda
       ((g$x$29264$1a@gJ)
        (if (pair? g$x$29264$1a@gJ)
          (if (eq? (car g$x$29264$1a@gJ) 'macro!)
            (begin '#f (g$procedure?$20622$1a@gJ (cdr g$x$29264$1a@gJ)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$28458$1a@gJ
     g$variable-transformer-procedure$32446$1a@gJ
     (case-lambda
       ((g$x$29265$1a@gJ)
        (if (g$variable-transformer?$28457$1a@gJ g$x$29265$1a@gJ)
          (cdr g$x$29265$1a@gJ)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$29265$1a@gJ)))))
   (g$make-eval-transformer$28459$1a@gJ
     g$make-eval-transformer$32447$1a@gJ
     (case-lambda
       ((g$x$29266$1a@gJ)
        (g$sanitize-binding$28454$1a@gJ
          (eval-core (g$expanded->core$27849$1a@gJ g$x$29266$1a@gJ))
          g$x$29266$1a@gJ))))
   (g$parse-define$28849$1a@gJ
     g$parse-define$32448$1a@gJ
     (case-lambda
       ((g$x$29267$1a@gJ)
        ((case-lambda
           ((g$t$29268$1a@gJ)
            ((case-lambda
               ((g$ls/false$29269$1a@gJ)
                (if (if g$ls/false$29269$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29270$1a@gJ
                               g$fmls$29271$1a@gJ
                               g$b$29272$1a@gJ
                               g$b*$29273$1a@gJ)
                             (g$id?$28411$1a@gJ g$id$29270$1a@gJ)))
                          g$ls/false$29269$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29274$1a@gJ
                         g$fmls$29275$1a@gJ
                         g$b$29276$1a@gJ
                         g$b*$29277$1a@gJ)
                       (begin
                         (g$verify-formals$28929$1a@gJ
                           g$fmls$29275$1a@gJ
                           g$x$29267$1a@gJ)
                         (values
                           g$id$29274$1a@gJ
                           (cons 'defun g$x$29267$1a@gJ)))))
                    g$ls/false$29269$1a@gJ)
                  ((case-lambda
                     ((g$t$29278$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29279$1a@gJ)
                          (if (if g$ls/false$29279$1a@gJ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$29280$1a@gJ
                                         g$val$29281$1a@gJ)
                                       (g$id?$28411$1a@gJ
                                         g$id$29280$1a@gJ)))
                                    g$ls/false$29279$1a@gJ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$29282$1a@gJ g$val$29283$1a@gJ)
                                 (values
                                   g$id$29282$1a@gJ
                                   (cons 'expr g$val$29283$1a@gJ))))
                              g$ls/false$29279$1a@gJ)
                            ((case-lambda
                               ((g$t$29284$1a@gJ)
                                ((case-lambda
                                   ((g$ls/false$29285$1a@gJ)
                                    (if (if g$ls/false$29285$1a@gJ
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$29286$1a@gJ)
                                                 (g$id?$28411$1a@gJ
                                                   g$id$29286$1a@gJ)))
                                              g$ls/false$29285$1a@gJ))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$29287$1a@gJ)
                                           (values
                                             g$id$29287$1a@gJ
                                             (cons
                                               'expr
                                               (g$bless$28872$1a@gJ
                                                 '(void))))))
                                        g$ls/false$29285$1a@gJ)
                                      (g$syntax-violation$29029$1a@gJ
                                        '#f
                                        '"invalid syntax"
                                        g$t$29284$1a@gJ))))
                                 (g$syntax-dispatch$28909$1a@gJ
                                   g$t$29284$1a@gJ
                                   '(_ any)))))
                             g$t$29278$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29278$1a@gJ
                         '(_ any any)))))
                   g$t$29268$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29268$1a@gJ
               '(_ (any . any) any . each-any)))))
         g$x$29267$1a@gJ))))
   (g$parse-define-syntax$28850$1a@gJ
     g$parse-define-syntax$32449$1a@gJ
     (case-lambda
       ((g$x$29288$1a@gJ)
        ((case-lambda
           ((g$t$29289$1a@gJ)
            ((case-lambda
               ((g$ls/false$29290$1a@gJ)
                (if (if g$ls/false$29290$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29291$1a@gJ g$val$29292$1a@gJ)
                             (g$id?$28411$1a@gJ g$id$29291$1a@gJ)))
                          g$ls/false$29290$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29293$1a@gJ g$val$29294$1a@gJ)
                       (values g$id$29293$1a@gJ g$val$29294$1a@gJ)))
                    g$ls/false$29290$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29289$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29289$1a@gJ
               '(_ any any)))))
         g$x$29288$1a@gJ))))
   (g$scheme-stx-hashtable$28851$1a@gJ
     g$scheme-stx-hashtable$32450$1a@gJ
     (g$make-eq-hashtable$20756$1a@gJ))
   (g$scheme-stx$28852$1a@gJ
     g$scheme-stx$32451$1a@gJ
     (case-lambda
       ((g$sym$29295$1a@gJ)
        ((case-lambda
           ((g$t$29296$1a@gJ)
            (if g$t$29296$1a@gJ
              g$t$29296$1a@gJ
              (begin
                '#f
                ((case-lambda
                   ((g$subst$29297$1a@gJ)
                    ((case-lambda
                       ((g$stx$29298$1a@gJ)
                        ((case-lambda
                           ((g$stx$29299$1a@gJ)
                            (begin
                              (g$hashtable-set!$20760$1a@gJ
                                g$scheme-stx-hashtable$28851$1a@gJ
                                g$sym$29295$1a@gJ
                                g$stx$29299$1a@gJ)
                              g$stx$29299$1a@gJ)))
                         ((case-lambda
                            ((g$t$29300$1a@gJ)
                             (if g$t$29300$1a@gJ
                               ((case-lambda
                                  ((g$x$29301$1a@gJ)
                                   ((case-lambda
                                      ((g$name$29302$1a@gJ
                                         g$label$29303$1a@gJ)
                                       (g$add-subst$28401$1a@gJ
                                         (g$make-rib$28358$1a@gJ
                                           (list g$name$29302$1a@gJ)
                                           (list
                                             g$top-mark*$28344$1a@gJ)
                                           (list g$label$29303$1a@gJ)
                                           '#f
                                           '#f)
                                         g$stx$29298$1a@gJ)))
                                    (car g$x$29301$1a@gJ)
                                    (cdr g$x$29301$1a@gJ))))
                                g$t$29300$1a@gJ)
                               (begin '#f g$stx$29298$1a@gJ))))
                          (g$assq$20183$1a@gJ
                            g$sym$29295$1a@gJ
                            g$subst$29297$1a@gJ)))))
                     (g$make-stx$28384$1a@gJ
                       g$sym$29295$1a@gJ
                       g$top-mark*$28344$1a@gJ
                       '()
                       '()))))
                 (g$library-subst$28074$1a@gJ
                   (g$find-library-by-name$28110$1a@gJ
                     '(psyntax system $all))))))))
         (g$hashtable-ref$20759$1a@gJ
           g$scheme-stx-hashtable$28851$1a@gJ
           g$sym$29295$1a@gJ
           '#f)))))
   (g$lexical-var$28853$1a@gJ g$lexical-var$32452$1a@gJ car)
   (g$lexical-mutable?$28854$1a@gJ g$lexical-mutable?$32453$1a@gJ cdr)
   (g$set-lexical-mutable!$28855$1a@gJ
     g$set-lexical-mutable!$32454$1a@gJ
     g$set-cdr!$22405$1a@gJ)
   (g$add-lexical$28856$1a@gJ
     g$add-lexical$32455$1a@gJ
     (case-lambda
       ((g$lab$29304$1a@gJ g$lex$29305$1a@gJ g$r$29306$1a@gJ)
        (cons
          (g$cons*$20197$1a@gJ
            g$lab$29304$1a@gJ
            'lexical
            g$lex$29305$1a@gJ
            '#f)
          g$r$29306$1a@gJ))))
   (g$add-lexicals$28857$1a@gJ
     g$add-lexicals$32456$1a@gJ
     (case-lambda
       ((g$lab*$29307$1a@gJ g$lex*$29308$1a@gJ g$r$29309$1a@gJ)
        (if (null? g$lab*$29307$1a@gJ)
          g$r$29309$1a@gJ
          (begin
            '#f
            (g$add-lexicals$28857$1a@gJ
              (cdr g$lab*$29307$1a@gJ)
              (cdr g$lex*$29308$1a@gJ)
              (g$add-lexical$28856$1a@gJ
                (car g$lab*$29307$1a@gJ)
                (car g$lex*$29308$1a@gJ)
                g$r$29309$1a@gJ)))))))
   (g$letrec-helper$28858$1a@gJ
     g$letrec-helper$32457$1a@gJ
     (case-lambda
       ((g$e$29310$1a@gJ
          g$r$29311$1a@gJ
          g$mr$29312$1a@gJ
          g$build$29313$1a@gJ)
        ((case-lambda
           ((g$t$29314$1a@gJ)
            ((case-lambda
               ((g$ls/false$29315$1a@gJ)
                (if g$ls/false$29315$1a@gJ
                  (apply
                    (case-lambda
                      ((g$lhs*$29316$1a@gJ
                         g$rhs*$29317$1a@gJ
                         g$b$29318$1a@gJ
                         g$b*$29319$1a@gJ)
                       (if (not (g$valid-bound-ids?$28416$1a@gJ
                                  g$lhs*$29316$1a@gJ))
                         (g$invalid-fmls-error$28874$1a@gJ
                           g$e$29310$1a@gJ
                           g$lhs*$29316$1a@gJ)
                         ((case-lambda
                            ((g$lex*$29320$1a@gJ g$lab*$29321$1a@gJ)
                             ((case-lambda
                                ((g$rib$29322$1a@gJ g$r$29323$1a@gJ)
                                 ((case-lambda
                                    ((g$body$29324$1a@gJ
                                       g$rhs*$29325$1a@gJ)
                                     (g$build$29313$1a@gJ
                                       '#f
                                       g$lex*$29320$1a@gJ
                                       g$rhs*$29325$1a@gJ
                                       g$body$29324$1a@gJ)))
                                  (g$chi-internal$28938$1a@gJ
                                    (g$add-subst$28401$1a@gJ
                                      g$rib$29322$1a@gJ
                                      (cons
                                        g$b$29318$1a@gJ
                                        g$b*$29319$1a@gJ))
                                    g$r$29323$1a@gJ
                                    g$mr$29312$1a@gJ)
                                  (g$chi-expr*$28925$1a@gJ
                                    (g$map$20195$1a@gJ
                                      (case-lambda
                                        ((g$x$29326$1a@gJ)
                                         (g$add-subst$28401$1a@gJ
                                           g$rib$29322$1a@gJ
                                           g$x$29326$1a@gJ)))
                                      g$rhs*$29317$1a@gJ)
                                    g$r$29323$1a@gJ
                                    g$mr$29312$1a@gJ))))
                              (g$make-full-rib$28377$1a@gJ
                                g$lhs*$29316$1a@gJ
                                g$lab*$29321$1a@gJ)
                              (g$add-lexicals$28857$1a@gJ
                                g$lab*$29321$1a@gJ
                                g$lex*$29320$1a@gJ
                                g$r$29311$1a@gJ))))
                          (g$map$20195$1a@gJ
                            g$gen-lexical$28346$1a@gJ
                            g$lhs*$29316$1a@gJ)
                          (g$map$20195$1a@gJ
                            g$gen-label$28348$1a@gJ
                            g$lhs*$29316$1a@gJ)))))
                    g$ls/false$29315$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29314$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29314$1a@gJ
               '(_ #(each (any any)) any . each-any)))))
         g$e$29310$1a@gJ))))
   (g$letrec-transformer$28859$1a@gJ
     g$letrec-transformer$32458$1a@gJ
     (case-lambda
       ((g$e$29327$1a@gJ g$r$29328$1a@gJ g$mr$29329$1a@gJ)
        (g$letrec-helper$28858$1a@gJ
          g$e$29327$1a@gJ
          g$r$29328$1a@gJ
          g$mr$29329$1a@gJ
          g$build-letrec$28338$1a@gJ))))
   (g$letrec*-transformer$28860$1a@gJ
     g$letrec*-transformer$32459$1a@gJ
     (case-lambda
       ((g$e$29330$1a@gJ g$r$29331$1a@gJ g$mr$29332$1a@gJ)
        (g$letrec-helper$28858$1a@gJ
          g$e$29330$1a@gJ
          g$r$29331$1a@gJ
          g$mr$29332$1a@gJ
          g$build-letrec*$28339$1a@gJ))))
   (g$fluid-let-syntax-transformer$28861$1a@gJ
     g$fluid-let-syntax-transformer$32460$1a@gJ
     (case-lambda
       ((g$e$29333$1a@gJ g$r$29334$1a@gJ g$mr$29335$1a@gJ)
        (letrec* ((g$lookup$29336$1a@gJ
                    (case-lambda
                      ((g$x$29346$1a@gJ)
                       ((case-lambda
                          ((g$t$29347$1a@gJ)
                           (if g$t$29347$1a@gJ
                             g$t$29347$1a@gJ
                             (begin
                               '#f
                               (g$syntax-violation$29029$1a@gJ
                                 '#f
                                 '"unbound identifier"
                                 g$e$29333$1a@gJ
                                 g$x$29346$1a@gJ)))))
                        (g$id->label$28424$1a@gJ g$x$29346$1a@gJ))))))
          ((case-lambda
             ((g$t$29337$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29338$1a@gJ)
                  (if g$ls/false$29338$1a@gJ
                    (apply
                      (case-lambda
                        ((g$lhs*$29339$1a@gJ
                           g$rhs*$29340$1a@gJ
                           g$b$29341$1a@gJ
                           g$b*$29342$1a@gJ)
                         (if (not (g$valid-bound-ids?$28416$1a@gJ
                                    g$lhs*$29339$1a@gJ))
                           (g$invalid-fmls-error$28874$1a@gJ
                             g$e$29333$1a@gJ
                             g$lhs*$29339$1a@gJ)
                           ((case-lambda
                              ((g$lab*$29343$1a@gJ g$rhs*$29344$1a@gJ)
                               (g$chi-internal$28938$1a@gJ
                                 (cons g$b$29341$1a@gJ g$b*$29342$1a@gJ)
                                 (g$append$20200$1a@gJ
                                   (g$map$20195$1a@gJ
                                     cons
                                     g$lab*$29343$1a@gJ
                                     g$rhs*$29344$1a@gJ)
                                   g$r$29334$1a@gJ)
                                 (g$append$20200$1a@gJ
                                   (g$map$20195$1a@gJ
                                     cons
                                     g$lab*$29343$1a@gJ
                                     g$rhs*$29344$1a@gJ)
                                   g$mr$29335$1a@gJ))))
                            (g$map$20195$1a@gJ
                              g$lookup$29336$1a@gJ
                              g$lhs*$29339$1a@gJ)
                            (g$map$20195$1a@gJ
                              (case-lambda
                                ((g$x$29345$1a@gJ)
                                 (g$make-eval-transformer$28459$1a@gJ
                                   (g$expand-transformer$28957$1a@gJ
                                     g$x$29345$1a@gJ
                                     g$mr$29335$1a@gJ))))
                              g$rhs*$29340$1a@gJ)))))
                      g$ls/false$29338$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$29337$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29337$1a@gJ
                 '(_ #(each (any any)) any . each-any)))))
           g$e$29333$1a@gJ)))))
   (g$type-descriptor-transformer$28862$1a@gJ
     g$type-descriptor-transformer$32461$1a@gJ
     (case-lambda
       ((g$e$29348$1a@gJ g$r$29349$1a@gJ g$mr$29350$1a@gJ)
        ((case-lambda
           ((g$t$29351$1a@gJ)
            ((case-lambda
               ((g$ls/false$29352$1a@gJ)
                (if (if g$ls/false$29352$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29353$1a@gJ)
                             (g$id?$28411$1a@gJ g$id$29353$1a@gJ)))
                          g$ls/false$29352$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29354$1a@gJ)
                       ((case-lambda
                          ((g$lab$29355$1a@gJ)
                           ((case-lambda
                              ((g$b$29356$1a@gJ)
                               ((case-lambda
                                  ((g$type$29357$1a@gJ)
                                   (begin
                                     (if (not g$lab$29355$1a@gJ)
                                       (g$raise-unbound-error$28430$1a@gJ
                                         g$id$29354$1a@gJ)
                                       (void))
                                     (if (not (if (eq? g$type$29357$1a@gJ
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$28429$1a@gJ
                                                           g$b$29356$1a@gJ))))
                                                '#f))
                                       (g$syntax-violation$29029$1a@gJ
                                         '#f
                                         '"not a record type"
                                         g$e$29348$1a@gJ)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$28429$1a@gJ
                                         g$b$29356$1a@gJ)))))
                                (g$binding-type$28428$1a@gJ
                                  g$b$29356$1a@gJ))))
                            (g$label->binding$28426$1a@gJ
                              g$lab$29355$1a@gJ
                              g$r$29349$1a@gJ))))
                        (g$id->label$28424$1a@gJ g$id$29354$1a@gJ))))
                    g$ls/false$29352$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29351$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29351$1a@gJ '(_ any)))))
         g$e$29348$1a@gJ))))
   (g$record-type-descriptor-transformer$28863$1a@gJ
     g$record-type-descriptor-transformer$32462$1a@gJ
     (case-lambda
       ((g$e$29358$1a@gJ g$r$29359$1a@gJ g$mr$29360$1a@gJ)
        ((case-lambda
           ((g$t$29361$1a@gJ)
            ((case-lambda
               ((g$ls/false$29362$1a@gJ)
                (if (if g$ls/false$29362$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29363$1a@gJ)
                             (g$id?$28411$1a@gJ g$id$29363$1a@gJ)))
                          g$ls/false$29362$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29364$1a@gJ)
                       ((case-lambda
                          ((g$lab$29365$1a@gJ)
                           ((case-lambda
                              ((g$b$29366$1a@gJ)
                               ((case-lambda
                                  ((g$type$29367$1a@gJ)
                                   (begin
                                     (if (not g$lab$29365$1a@gJ)
                                       (g$raise-unbound-error$28430$1a@gJ
                                         g$id$29364$1a@gJ)
                                       (void))
                                     (if (not (if (eq? g$type$29367$1a@gJ
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$28429$1a@gJ
                                                      g$b$29366$1a@gJ)))
                                                '#f))
                                       (g$syntax-violation$29029$1a@gJ
                                         '#f
                                         '"not a record type"
                                         g$e$29358$1a@gJ)
                                       (void))
                                     (g$chi-expr$28927$1a@gJ
                                       (car (g$binding-value$28429$1a@gJ
                                              g$b$29366$1a@gJ))
                                       g$r$29359$1a@gJ
                                       g$mr$29360$1a@gJ))))
                                (g$binding-type$28428$1a@gJ
                                  g$b$29366$1a@gJ))))
                            (g$label->binding$28426$1a@gJ
                              g$lab$29365$1a@gJ
                              g$r$29359$1a@gJ))))
                        (g$id->label$28424$1a@gJ g$id$29364$1a@gJ))))
                    g$ls/false$29362$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29361$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29361$1a@gJ '(_ any)))))
         g$e$29358$1a@gJ))))
   (g$record-constructor-descriptor-transformer$28864$1a@gJ
     g$record-constructor-descriptor-transformer$32463$1a@gJ
     (case-lambda
       ((g$e$29368$1a@gJ g$r$29369$1a@gJ g$mr$29370$1a@gJ)
        ((case-lambda
           ((g$t$29371$1a@gJ)
            ((case-lambda
               ((g$ls/false$29372$1a@gJ)
                (if (if g$ls/false$29372$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29373$1a@gJ)
                             (g$id?$28411$1a@gJ g$id$29373$1a@gJ)))
                          g$ls/false$29372$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29374$1a@gJ)
                       ((case-lambda
                          ((g$lab$29375$1a@gJ)
                           ((case-lambda
                              ((g$b$29376$1a@gJ)
                               ((case-lambda
                                  ((g$type$29377$1a@gJ)
                                   (begin
                                     (if (not g$lab$29375$1a@gJ)
                                       (g$raise-unbound-error$28430$1a@gJ
                                         g$id$29374$1a@gJ)
                                       (void))
                                     (if (not (if (eq? g$type$29377$1a@gJ
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$28429$1a@gJ
                                                      g$b$29376$1a@gJ)))
                                                '#f))
                                       (g$syntax-violation$29029$1a@gJ
                                         '#f
                                         '"invalid type"
                                         g$e$29368$1a@gJ)
                                       (void))
                                     (g$chi-expr$28927$1a@gJ
                                       (g$cadr$20658$1a@gJ
                                         (g$binding-value$28429$1a@gJ
                                           g$b$29376$1a@gJ))
                                       g$r$29369$1a@gJ
                                       g$mr$29370$1a@gJ))))
                                (g$binding-type$28428$1a@gJ
                                  g$b$29376$1a@gJ))))
                            (g$label->binding$28426$1a@gJ
                              g$lab$29375$1a@gJ
                              g$r$29369$1a@gJ))))
                        (g$id->label$28424$1a@gJ g$id$29374$1a@gJ))))
                    g$ls/false$29372$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29371$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29371$1a@gJ '(_ any)))))
         g$e$29368$1a@gJ))))
   (g$when-macro$28865$1a@gJ
     g$when-macro$32464$1a@gJ
     (case-lambda
       ((g$e$29378$1a@gJ)
        ((case-lambda
           ((g$t$29379$1a@gJ)
            ((case-lambda
               ((g$ls/false$29380$1a@gJ)
                (if g$ls/false$29380$1a@gJ
                  (apply
                    (case-lambda
                      ((g$test$29381$1a@gJ
                         g$e$29382$1a@gJ
                         g$e*$29383$1a@gJ)
                       (g$bless$28872$1a@gJ
                         (list
                           'if
                           g$test$29381$1a@gJ
                           (cons
                             'begin
                             (cons
                               g$e$29382$1a@gJ
                               g$e*$29383$1a@gJ))))))
                    g$ls/false$29380$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29379$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29379$1a@gJ
               '(_ any any . each-any)))))
         g$e$29378$1a@gJ))))
   (g$unless-macro$28866$1a@gJ
     g$unless-macro$32465$1a@gJ
     (case-lambda
       ((g$e$29384$1a@gJ)
        ((case-lambda
           ((g$t$29385$1a@gJ)
            ((case-lambda
               ((g$ls/false$29386$1a@gJ)
                (if g$ls/false$29386$1a@gJ
                  (apply
                    (case-lambda
                      ((g$test$29387$1a@gJ
                         g$e$29388$1a@gJ
                         g$e*$29389$1a@gJ)
                       (g$bless$28872$1a@gJ
                         (list
                           'if
                           (list 'not g$test$29387$1a@gJ)
                           (cons
                             'begin
                             (cons
                               g$e$29388$1a@gJ
                               g$e*$29389$1a@gJ))))))
                    g$ls/false$29386$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29385$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29385$1a@gJ
               '(_ any any . each-any)))))
         g$e$29384$1a@gJ))))
   (g$if-transformer$28867$1a@gJ
     g$if-transformer$32466$1a@gJ
     (case-lambda
       ((g$e$29390$1a@gJ g$r$29391$1a@gJ g$mr$29392$1a@gJ)
        ((case-lambda
           ((g$t$29393$1a@gJ)
            ((case-lambda
               ((g$ls/false$29394$1a@gJ)
                (if g$ls/false$29394$1a@gJ
                  (apply
                    (case-lambda
                      ((g$e0$29395$1a@gJ
                         g$e1$29396$1a@gJ
                         g$e2$29397$1a@gJ)
                       (list
                         'if
                         (g$chi-expr$28927$1a@gJ
                           g$e0$29395$1a@gJ
                           g$r$29391$1a@gJ
                           g$mr$29392$1a@gJ)
                         (g$chi-expr$28927$1a@gJ
                           g$e1$29396$1a@gJ
                           g$r$29391$1a@gJ
                           g$mr$29392$1a@gJ)
                         (g$chi-expr$28927$1a@gJ
                           g$e2$29397$1a@gJ
                           g$r$29391$1a@gJ
                           g$mr$29392$1a@gJ))))
                    g$ls/false$29394$1a@gJ)
                  ((case-lambda
                     ((g$t$29398$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29399$1a@gJ)
                          (if g$ls/false$29399$1a@gJ
                            (apply
                              (case-lambda
                                ((g$e0$29400$1a@gJ g$e1$29401$1a@gJ)
                                 (list
                                   'if
                                   (g$chi-expr$28927$1a@gJ
                                     g$e0$29400$1a@gJ
                                     g$r$29391$1a@gJ
                                     g$mr$29392$1a@gJ)
                                   (g$chi-expr$28927$1a@gJ
                                     g$e1$29401$1a@gJ
                                     g$r$29391$1a@gJ
                                     g$mr$29392$1a@gJ)
                                   (g$build-void$28337$1a@gJ))))
                              g$ls/false$29399$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29398$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29398$1a@gJ
                         '(_ any any)))))
                   g$t$29393$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29393$1a@gJ
               '(_ any any any)))))
         g$e$29390$1a@gJ))))
   (g$case-macro$28868$1a@gJ
     g$case-macro$32467$1a@gJ
     (case-lambda
       ((g$e$29402$1a@gJ)
        (letrec* ((g$build-last$29403$1a@gJ
                    (case-lambda
                      ((g$cls$29423$1a@gJ)
                       ((case-lambda
                          ((g$t$29424$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$29425$1a@gJ)
                               (if g$ls/false$29425$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$e$29426$1a@gJ g$e*$29427$1a@gJ)
                                      (cons
                                        'begin
                                        (cons
                                          '#f
                                          (cons
                                            g$e$29426$1a@gJ
                                            g$e*$29427$1a@gJ)))))
                                   g$ls/false$29425$1a@gJ)
                                 ((case-lambda
                                    ((g$t$29428$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$29429$1a@gJ)
                                         (if g$ls/false$29429$1a@gJ
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$29404$1a@gJ
                                                  g$cls$29423$1a@gJ
                                                  '(if #f #f))))
                                             g$ls/false$29429$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$29428$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$29428$1a@gJ
                                        '_))))
                                  g$t$29424$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$29424$1a@gJ
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$29423$1a@gJ))))
                  (g$build-one$29404$1a@gJ
                    (case-lambda
                      ((g$cls$29416$1a@gJ g$k$29417$1a@gJ)
                       ((case-lambda
                          ((g$t$29418$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$29419$1a@gJ)
                               (if g$ls/false$29419$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$d*$29420$1a@gJ
                                        g$e$29421$1a@gJ
                                        g$e*$29422$1a@gJ)
                                      (if (g$=$21669$1a@gJ
                                            '1
                                            (length g$d*$29420$1a@gJ))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$29420$1a@gJ)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29421$1a@gJ
                                              g$e*$29422$1a@gJ))
                                          g$k$29417$1a@gJ)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$29420$1a@gJ))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29421$1a@gJ
                                              g$e*$29422$1a@gJ))
                                          g$k$29417$1a@gJ))))
                                   g$ls/false$29419$1a@gJ)
                                 (g$syntax-violation$29029$1a@gJ
                                   '#f
                                   '"invalid syntax"
                                   g$t$29418$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$29418$1a@gJ
                              '(each-any any . each-any)))))
                        g$cls$29416$1a@gJ)))))
          ((case-lambda
             ((g$t$29405$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29406$1a@gJ)
                  (if g$ls/false$29406$1a@gJ
                    (apply
                      (case-lambda
                        ((g$expr$29407$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$29407$1a@gJ))
                               '((if #f #f)))))))
                      g$ls/false$29406$1a@gJ)
                    ((case-lambda
                       ((g$t$29408$1a@gJ)
                        ((case-lambda
                           ((g$ls/false$29409$1a@gJ)
                            (if g$ls/false$29409$1a@gJ
                              (apply
                                (case-lambda
                                  ((g$expr$29410$1a@gJ
                                     g$cls$29411$1a@gJ
                                     g$cls*$29412$1a@gJ)
                                   (g$bless$28872$1a@gJ
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$29410$1a@gJ))
                                       ((letrec ((g$f$29413$1a@gJ
                                                   (case-lambda
                                                     ((g$cls$29414$1a@gJ
                                                        g$cls*$29415$1a@gJ)
                                                      (if (null?
                                                            g$cls*$29415$1a@gJ)
                                                        (g$build-last$29403$1a@gJ
                                                          g$cls$29414$1a@gJ)
                                                        (g$build-one$29404$1a@gJ
                                                          g$cls$29414$1a@gJ
                                                          (g$f$29413$1a@gJ
                                                            (car g$cls*$29415$1a@gJ)
                                                            (cdr g$cls*$29415$1a@gJ))))))))
                                          g$f$29413$1a@gJ)
                                        g$cls$29411$1a@gJ
                                        g$cls*$29412$1a@gJ)))))
                                g$ls/false$29409$1a@gJ)
                              (g$syntax-violation$29029$1a@gJ
                                '#f
                                '"invalid syntax"
                                g$t$29408$1a@gJ))))
                         (g$syntax-dispatch$28909$1a@gJ
                           g$t$29408$1a@gJ
                           '(_ any any . each-any)))))
                     g$t$29405$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29405$1a@gJ
                 '(_ any)))))
           g$e$29402$1a@gJ)))))
   (g$quote-transformer$28869$1a@gJ
     g$quote-transformer$32468$1a@gJ
     (case-lambda
       ((g$e$29430$1a@gJ g$r$29431$1a@gJ g$mr$29432$1a@gJ)
        ((case-lambda
           ((g$t$29433$1a@gJ)
            ((case-lambda
               ((g$ls/false$29434$1a@gJ)
                (if g$ls/false$29434$1a@gJ
                  (apply
                    (case-lambda
                      ((g$datum$29435$1a@gJ)
                       (list
                         'quote
                         (g$stx->datum$28422$1a@gJ
                           g$datum$29435$1a@gJ))))
                    g$ls/false$29434$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29433$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29433$1a@gJ '(_ any)))))
         g$e$29430$1a@gJ))))
   (g$case-lambda-transformer$28870$1a@gJ
     g$case-lambda-transformer$32469$1a@gJ
     (case-lambda
       ((g$e$29436$1a@gJ g$r$29437$1a@gJ g$mr$29438$1a@gJ)
        ((case-lambda
           ((g$t$29439$1a@gJ)
            ((case-lambda
               ((g$ls/false$29440$1a@gJ)
                (if g$ls/false$29440$1a@gJ
                  (apply
                    (case-lambda
                      ((g$fmls*$29441$1a@gJ
                         g$b*$29442$1a@gJ
                         g$b**$29443$1a@gJ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$28931$1a@gJ
                              g$e$29436$1a@gJ
                              g$fmls*$29441$1a@gJ
                              (g$map$20195$1a@gJ
                                cons
                                g$b*$29442$1a@gJ
                                g$b**$29443$1a@gJ)
                              g$r$29437$1a@gJ
                              g$mr$29438$1a@gJ)))
                         (case-lambda
                           ((g$fmls*$29446$1a@gJ g$body*$29447$1a@gJ)
                            ((case-lambda
                               ((g$body*$29448$1a@gJ
                                  g$fmls*$29449$1a@gJ)
                                (g$build-case-lambda$28334$1a@gJ
                                  (g$syntax-annotation$29024$1a@gJ
                                    g$e$29436$1a@gJ)
                                  g$fmls*$29449$1a@gJ
                                  g$body*$29448$1a@gJ)))
                             g$body*$29447$1a@gJ
                             g$fmls*$29446$1a@gJ))))))
                    g$ls/false$29440$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29439$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29439$1a@gJ
               '(_ . #(each (any any . each-any)))))))
         g$e$29436$1a@gJ))))
   (g$lambda-transformer$28871$1a@gJ
     g$lambda-transformer$32470$1a@gJ
     (case-lambda
       ((g$e$29450$1a@gJ g$r$29451$1a@gJ g$mr$29452$1a@gJ)
        ((case-lambda
           ((g$t$29453$1a@gJ)
            ((case-lambda
               ((g$ls/false$29454$1a@gJ)
                (if g$ls/false$29454$1a@gJ
                  (apply
                    (case-lambda
                      ((g$fmls$29455$1a@gJ
                         g$b$29456$1a@gJ
                         g$b*$29457$1a@gJ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$28930$1a@gJ
                              g$e$29450$1a@gJ
                              g$fmls$29455$1a@gJ
                              (cons g$b$29456$1a@gJ g$b*$29457$1a@gJ)
                              g$r$29451$1a@gJ
                              g$mr$29452$1a@gJ)))
                         (case-lambda
                           ((g$fmls$29460$1a@gJ g$body$29461$1a@gJ)
                            ((case-lambda
                               ((g$body$29462$1a@gJ g$fmls$29463$1a@gJ)
                                (g$build-lambda$28333$1a@gJ
                                  (g$syntax-annotation$29024$1a@gJ
                                    g$e$29450$1a@gJ)
                                  g$fmls$29463$1a@gJ
                                  g$body$29462$1a@gJ)))
                             g$body$29461$1a@gJ
                             g$fmls$29460$1a@gJ))))))
                    g$ls/false$29454$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29453$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29453$1a@gJ
               '(_ any any . each-any)))))
         g$e$29450$1a@gJ))))
   (g$bless$28872$1a@gJ
     g$bless$32471$1a@gJ
     (case-lambda
       ((g$x$29464$1a@gJ)
        (g$mkstx$28399$1a@gJ
          ((letrec ((g$f$29465$1a@gJ
                      (case-lambda
                        ((g$x$29466$1a@gJ)
                         (if (g$stx?$28383$1a@gJ g$x$29466$1a@gJ)
                           g$x$29466$1a@gJ
                           (if (pair? g$x$29466$1a@gJ)
                             (cons
                               (g$f$29465$1a@gJ (car g$x$29466$1a@gJ))
                               (g$f$29465$1a@gJ (cdr g$x$29466$1a@gJ)))
                             (if (g$symbol?$20620$1a@gJ g$x$29466$1a@gJ)
                               (g$scheme-stx$28852$1a@gJ
                                 g$x$29466$1a@gJ)
                               (if (g$vector?$20618$1a@gJ
                                     g$x$29466$1a@gJ)
                                 (g$vector-map$20707$1a@gJ
                                   g$f$29465$1a@gJ
                                   g$x$29466$1a@gJ)
                                 (begin '#f g$x$29466$1a@gJ)))))))))
             g$f$29465$1a@gJ)
           g$x$29464$1a@gJ)
          '()
          '()
          '()))))
   (g$with-syntax-macro$28873$1a@gJ
     g$with-syntax-macro$32472$1a@gJ
     (case-lambda
       ((g$e$29467$1a@gJ)
        ((case-lambda
           ((g$t$29468$1a@gJ)
            ((case-lambda
               ((g$ls/false$29469$1a@gJ)
                (if g$ls/false$29469$1a@gJ
                  (apply
                    (case-lambda
                      ((g$pat*$29470$1a@gJ
                         g$expr*$29471$1a@gJ
                         g$b$29472$1a@gJ
                         g$b*$29473$1a@gJ)
                       ((case-lambda
                          ((g$idn*$29474$1a@gJ)
                           (begin
                             (g$verify-formals$28929$1a@gJ
                               (g$map$20195$1a@gJ
                                 car
                                 g$idn*$29474$1a@gJ)
                               g$e$29467$1a@gJ)
                             ((case-lambda
                                ((g$t*$29475$1a@gJ)
                                 (g$bless$28872$1a@gJ
                                   (list
                                     'let
                                     (g$map$20195$1a@gJ
                                       list
                                       g$t*$29475$1a@gJ
                                       g$expr*$29471$1a@gJ)
                                     ((letrec ((g$f$29476$1a@gJ
                                                 (case-lambda
                                                   ((g$pat*$29477$1a@gJ
                                                      g$t*$29478$1a@gJ)
                                                    (if (null?
                                                          g$pat*$29477$1a@gJ)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$29472$1a@gJ
                                                          g$b*$29473$1a@gJ))
                                                      (begin
                                                        '#f
                                                        (list
                                                          'syntax-case
                                                          (car g$t*$29478$1a@gJ)
                                                          '()
                                                          (list
                                                            (car g$pat*$29477$1a@gJ)
                                                            (g$f$29476$1a@gJ
                                                              (cdr g$pat*$29477$1a@gJ)
                                                              (cdr g$t*$29478$1a@gJ)))
                                                          (list
                                                            '_
                                                            (list
                                                              'assertion-violation
                                                              ''with-syntax
                                                              '"pattern does not match value"
                                                              (list
                                                                'quote
                                                                (car g$pat*$29477$1a@gJ))
                                                              (car g$t*$29478$1a@gJ))))))))))
                                        g$f$29476$1a@gJ)
                                      g$pat*$29470$1a@gJ
                                      g$t*$29475$1a@gJ)))))
                              (g$generate-temporaries$29018$1a@gJ
                                g$expr*$29471$1a@gJ)))))
                        ((letrec ((g$f$29479$1a@gJ
                                    (case-lambda
                                      ((g$pat*$29480$1a@gJ)
                                       (if (null? g$pat*$29480$1a@gJ)
                                         '()
                                         (begin
                                           '#f
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$convert-pattern$28908$1a@gJ
                                                  (car g$pat*$29480$1a@gJ)
                                                  '())))
                                             (case-lambda
                                               ((g$pat$29483$1a@gJ
                                                  g$idn*$29484$1a@gJ)
                                                ((case-lambda
                                                   ((g$idn*$29485$1a@gJ
                                                      g$pat$29486$1a@gJ)
                                                    (g$append$20200$1a@gJ
                                                      g$idn*$29485$1a@gJ
                                                      (g$f$29479$1a@gJ
                                                        (cdr g$pat*$29480$1a@gJ)))))
                                                 g$idn*$29484$1a@gJ
                                                 g$pat$29483$1a@gJ))))))))))
                           g$f$29479$1a@gJ)
                         g$pat*$29470$1a@gJ))))
                    g$ls/false$29469$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29468$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29468$1a@gJ
               '(_ #(each (any any)) any . each-any)))))
         g$e$29467$1a@gJ))))
   (g$invalid-fmls-error$28874$1a@gJ
     g$invalid-fmls-error$32473$1a@gJ
     (case-lambda
       ((g$stx$29487$1a@gJ g$fmls$29488$1a@gJ)
        ((case-lambda
           ((g$t$29489$1a@gJ)
            ((case-lambda
               ((g$ls/false$29490$1a@gJ)
                (if g$ls/false$29490$1a@gJ
                  (apply
                    (case-lambda
                      ((g$id*$29491$1a@gJ g$last$29492$1a@gJ)
                       ((letrec ((g$f$29493$1a@gJ
                                   (case-lambda
                                     ((g$id*$29494$1a@gJ)
                                      (if (null? g$id*$29494$1a@gJ)
                                        (values)
                                        (if (not (g$id?$28411$1a@gJ
                                                   (car g$id*$29494$1a@gJ)))
                                          (g$syntax-violation$29029$1a@gJ
                                            '#f
                                            '"not an identifier"
                                            g$stx$29487$1a@gJ
                                            (car g$id*$29494$1a@gJ))
                                          (begin
                                            '#f
                                            (g$f$29493$1a@gJ
                                              (cdr g$id*$29494$1a@gJ))
                                            (if (g$bound-id-member?$28418$1a@gJ
                                                  (car g$id*$29494$1a@gJ)
                                                  (cdr g$id*$29494$1a@gJ))
                                              (g$syntax-violation$29029$1a@gJ
                                                '#f
                                                '"duplicate binding"
                                                g$stx$29487$1a@gJ
                                                (car g$id*$29494$1a@gJ))
                                              (void)))))))))
                          g$f$29493$1a@gJ)
                        (if (g$id?$28411$1a@gJ g$last$29492$1a@gJ)
                          (cons g$last$29492$1a@gJ g$id*$29491$1a@gJ)
                          (if (g$syntax-null?$28406$1a@gJ
                                g$last$29492$1a@gJ)
                            g$id*$29491$1a@gJ
                            (begin
                              '#f
                              (g$syntax-violation$29029$1a@gJ
                                '#f
                                '"not an identifier"
                                g$stx$29487$1a@gJ
                                g$last$29492$1a@gJ)))))))
                    g$ls/false$29490$1a@gJ)
                  ((case-lambda
                     ((g$t$29495$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29496$1a@gJ)
                          (if g$ls/false$29496$1a@gJ
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$29029$1a@gJ
                                   '#f
                                   '"malformed binding form"
                                   g$stx$29487$1a@gJ
                                   g$fmls$29488$1a@gJ)))
                              g$ls/false$29496$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29495$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29495$1a@gJ
                         '_))))
                   g$t$29489$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29489$1a@gJ
               '#(each+ any () any)))))
         g$fmls$29488$1a@gJ))))
   (g$let-macro$28875$1a@gJ
     g$let-macro$32474$1a@gJ
     (case-lambda
       ((g$stx$29497$1a@gJ)
        ((case-lambda
           ((g$t$29498$1a@gJ)
            ((case-lambda
               ((g$ls/false$29499$1a@gJ)
                (if g$ls/false$29499$1a@gJ
                  (apply
                    (case-lambda
                      ((g$lhs*$29500$1a@gJ
                         g$rhs*$29501$1a@gJ
                         g$b$29502$1a@gJ
                         g$b*$29503$1a@gJ)
                       (if (g$valid-bound-ids?$28416$1a@gJ
                             g$lhs*$29500$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$29500$1a@gJ
                                 (cons
                                   g$b$29502$1a@gJ
                                   g$b*$29503$1a@gJ)))
                             g$rhs*$29501$1a@gJ))
                         (g$invalid-fmls-error$28874$1a@gJ
                           g$stx$29497$1a@gJ
                           g$lhs*$29500$1a@gJ))))
                    g$ls/false$29499$1a@gJ)
                  ((case-lambda
                     ((g$t$29504$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29505$1a@gJ)
                          (if (if g$ls/false$29505$1a@gJ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$29506$1a@gJ
                                         g$lhs*$29507$1a@gJ
                                         g$rhs*$29508$1a@gJ
                                         g$b$29509$1a@gJ
                                         g$b*$29510$1a@gJ)
                                       (g$id?$28411$1a@gJ
                                         g$f$29506$1a@gJ)))
                                    g$ls/false$29505$1a@gJ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$29511$1a@gJ
                                   g$lhs*$29512$1a@gJ
                                   g$rhs*$29513$1a@gJ
                                   g$b$29514$1a@gJ
                                   g$b*$29515$1a@gJ)
                                 (if (g$valid-bound-ids?$28416$1a@gJ
                                       g$lhs*$29512$1a@gJ)
                                   (g$bless$28872$1a@gJ
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$29511$1a@gJ
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$29512$1a@gJ
                                                 (cons
                                                   g$b$29514$1a@gJ
                                                   g$b*$29515$1a@gJ)))))
                                         g$f$29511$1a@gJ)
                                       g$rhs*$29513$1a@gJ))
                                   (g$invalid-fmls-error$28874$1a@gJ
                                     g$stx$29497$1a@gJ
                                     g$lhs*$29512$1a@gJ))))
                              g$ls/false$29505$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29504$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29504$1a@gJ
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$29498$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29498$1a@gJ
               '(_ #(each (any any)) any . each-any)))))
         g$stx$29497$1a@gJ))))
   (g$let-values-macro$28876$1a@gJ
     g$let-values-macro$32475$1a@gJ
     (case-lambda
       ((g$stx$29516$1a@gJ)
        (letrec* ((g$rename$29517$1a@gJ
                    (case-lambda
                      ((g$x$29568$1a@gJ
                         g$old*$29569$1a@gJ
                         g$new*$29570$1a@gJ)
                       (begin
                         (if (not (g$id?$28411$1a@gJ g$x$29568$1a@gJ))
                           (g$syntax-violation$29029$1a@gJ
                             '#f
                             '"not an indentifier"
                             g$stx$29516$1a@gJ
                             g$x$29568$1a@gJ)
                           (void))
                         (if (g$bound-id-member?$28418$1a@gJ
                               g$x$29568$1a@gJ
                               g$old*$29569$1a@gJ)
                           (g$syntax-violation$29029$1a@gJ
                             '#f
                             '"duplicate binding"
                             g$stx$29516$1a@gJ
                             g$x$29568$1a@gJ)
                           (void))
                         ((case-lambda
                            ((g$y$29571$1a@gJ)
                             (values
                               g$y$29571$1a@gJ
                               (cons g$x$29568$1a@gJ g$old*$29569$1a@gJ)
                               (cons
                                 g$y$29571$1a@gJ
                                 g$new*$29570$1a@gJ))))
                          (gensym
                            (g$syntax->datum$29032$1a@gJ
                              g$x$29568$1a@gJ)))))))
                  (g$rename*$29518$1a@gJ
                    (case-lambda
                      ((g$x*$29559$1a@gJ
                         g$old*$29560$1a@gJ
                         g$new*$29561$1a@gJ)
                       (if (null? g$x*$29559$1a@gJ)
                         (values
                           '()
                           g$old*$29560$1a@gJ
                           g$new*$29561$1a@gJ)
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$rename$29517$1a@gJ
                                  (car g$x*$29559$1a@gJ)
                                  g$old*$29560$1a@gJ
                                  g$new*$29561$1a@gJ)))
                             (case-lambda
                               ((g$x$29562$1a@gJ
                                  g$old*$29563$1a@gJ
                                  g$new*$29564$1a@gJ)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$rename*$29518$1a@gJ
                                       (cdr g$x*$29559$1a@gJ)
                                       g$old*$29563$1a@gJ
                                       g$new*$29564$1a@gJ)))
                                  (case-lambda
                                    ((g$x*$29565$1a@gJ
                                       g$old*$29566$1a@gJ
                                       g$new*$29567$1a@gJ)
                                     (values
                                       (cons
                                         g$x$29562$1a@gJ
                                         g$x*$29565$1a@gJ)
                                       g$old*$29566$1a@gJ
                                       g$new*$29567$1a@gJ)))))))))))))
          ((case-lambda
             ((g$t$29519$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29520$1a@gJ)
                  (if g$ls/false$29520$1a@gJ
                    (apply
                      (case-lambda
                        ((g$b$29521$1a@gJ g$b*$29522$1a@gJ)
                         (g$cons*$20197$1a@gJ
                           (g$bless$28872$1a@gJ 'let)
                           '()
                           g$b$29521$1a@gJ
                           g$b*$29522$1a@gJ)))
                      g$ls/false$29520$1a@gJ)
                    ((case-lambda
                       ((g$t$29523$1a@gJ)
                        ((case-lambda
                           ((g$ls/false$29524$1a@gJ)
                            (if g$ls/false$29524$1a@gJ
                              (apply
                                (case-lambda
                                  ((g$lhs*$29525$1a@gJ
                                     g$rhs*$29526$1a@gJ
                                     g$b$29527$1a@gJ
                                     g$b*$29528$1a@gJ)
                                   (g$bless$28872$1a@gJ
                                     ((letrec ((g$f$29529$1a@gJ
                                                 (case-lambda
                                                   ((g$lhs*$29530$1a@gJ
                                                      g$rhs*$29531$1a@gJ
                                                      g$old*$29532$1a@gJ
                                                      g$new*$29533$1a@gJ)
                                                    (if (null?
                                                          g$lhs*$29530$1a@gJ)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$20195$1a@gJ
                                                            list
                                                            g$old*$29532$1a@gJ
                                                            g$new*$29533$1a@gJ)
                                                          (cons
                                                            g$b$29527$1a@gJ
                                                            g$b*$29528$1a@gJ)))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$29534$1a@gJ)
                                                            ((case-lambda
                                                               ((g$ls/false$29535$1a@gJ)
                                                                (if g$ls/false$29535$1a@gJ
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$29536$1a@gJ)
                                                                       (call-with-values
                                                                         (case-lambda
                                                                           (()
                                                                            (g$rename*$29518$1a@gJ
                                                                              g$x*$29536$1a@gJ
                                                                              g$old*$29532$1a@gJ
                                                                              g$new*$29533$1a@gJ)))
                                                                         (case-lambda
                                                                           ((g$y*$29540$1a@gJ
                                                                              g$old*$29541$1a@gJ
                                                                              g$new*$29542$1a@gJ)
                                                                            ((case-lambda
                                                                               ((g$new*$29543$1a@gJ
                                                                                  g$old*$29544$1a@gJ
                                                                                  g$y*$29545$1a@gJ)
                                                                                (list
                                                                                  'call-with-values
                                                                                  (list
                                                                                    'lambda
                                                                                    '()
                                                                                    (car g$rhs*$29531$1a@gJ))
                                                                                  (list
                                                                                    'lambda
                                                                                    g$y*$29545$1a@gJ
                                                                                    (g$f$29529$1a@gJ
                                                                                      (cdr g$lhs*$29530$1a@gJ)
                                                                                      (cdr g$rhs*$29531$1a@gJ)
                                                                                      g$old*$29544$1a@gJ
                                                                                      g$new*$29543$1a@gJ)))))
                                                                             g$new*$29542$1a@gJ
                                                                             g$old*$29541$1a@gJ
                                                                             g$y*$29540$1a@gJ))))))
                                                                    g$ls/false$29535$1a@gJ)
                                                                  ((case-lambda
                                                                     ((g$t$29546$1a@gJ)
                                                                      ((case-lambda
                                                                         ((g$ls/false$29547$1a@gJ)
                                                                          (if g$ls/false$29547$1a@gJ
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$29548$1a@gJ
                                                                                   g$x$29549$1a@gJ)
                                                                                 (call-with-values
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$rename$29517$1a@gJ
                                                                                        g$x$29549$1a@gJ
                                                                                        g$old*$29532$1a@gJ
                                                                                        g$new*$29533$1a@gJ)))
                                                                                   (case-lambda
                                                                                     ((g$y$29550$1a@gJ
                                                                                        g$old*$29551$1a@gJ
                                                                                        g$new*$29552$1a@gJ)
                                                                                      (call-with-values
                                                                                        (case-lambda
                                                                                          (()
                                                                                           (g$rename*$29518$1a@gJ
                                                                                             g$x*$29548$1a@gJ
                                                                                             g$old*$29551$1a@gJ
                                                                                             g$new*$29552$1a@gJ)))
                                                                                        (case-lambda
                                                                                          ((g$y*$29553$1a@gJ
                                                                                             g$old*$29554$1a@gJ
                                                                                             g$new*$29555$1a@gJ)
                                                                                           (list
                                                                                             'call-with-values
                                                                                             (list
                                                                                               'lambda
                                                                                               '()
                                                                                               (car g$rhs*$29531$1a@gJ))
                                                                                             (list
                                                                                               'lambda
                                                                                               (g$append$20200$1a@gJ
                                                                                                 g$y*$29553$1a@gJ
                                                                                                 g$y$29550$1a@gJ)
                                                                                               (g$f$29529$1a@gJ
                                                                                                 (cdr g$lhs*$29530$1a@gJ)
                                                                                                 (cdr g$rhs*$29531$1a@gJ)
                                                                                                 g$old*$29554$1a@gJ
                                                                                                 g$new*$29555$1a@gJ)))))))))))
                                                                              g$ls/false$29547$1a@gJ)
                                                                            ((case-lambda
                                                                               ((g$t$29556$1a@gJ)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$29557$1a@gJ)
                                                                                    (if g$ls/false$29557$1a@gJ
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$29558$1a@gJ)
                                                                                           (g$syntax-violation$29029$1a@gJ
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$29516$1a@gJ
                                                                                             g$others$29558$1a@gJ)))
                                                                                        g$ls/false$29557$1a@gJ)
                                                                                      (g$syntax-violation$29029$1a@gJ
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$29556$1a@gJ))))
                                                                                 (g$syntax-dispatch$28909$1a@gJ
                                                                                   g$t$29556$1a@gJ
                                                                                   'any))))
                                                                             g$t$29546$1a@gJ))))
                                                                       (g$syntax-dispatch$28909$1a@gJ
                                                                         g$t$29546$1a@gJ
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$29534$1a@gJ))))
                                                             (g$syntax-dispatch$28909$1a@gJ
                                                               g$t$29534$1a@gJ
                                                               'each-any))))
                                                         (car g$lhs*$29530$1a@gJ))))))))
                                        g$f$29529$1a@gJ)
                                      g$lhs*$29525$1a@gJ
                                      g$rhs*$29526$1a@gJ
                                      '()
                                      '()))))
                                g$ls/false$29524$1a@gJ)
                              (g$syntax-violation$29029$1a@gJ
                                '#f
                                '"invalid syntax"
                                g$t$29523$1a@gJ))))
                         (g$syntax-dispatch$28909$1a@gJ
                           g$t$29523$1a@gJ
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29519$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29519$1a@gJ
                 '(_ () any . each-any)))))
           g$stx$29516$1a@gJ)))))
   (g$let*-values-macro$28877$1a@gJ
     g$let*-values-macro$32476$1a@gJ
     (case-lambda
       ((g$stx$29572$1a@gJ)
        (letrec* ((g$check$29573$1a@gJ
                    (case-lambda
                      ((g$x*$29597$1a@gJ)
                       (if (not (null? g$x*$29597$1a@gJ))
                         ((case-lambda
                            ((g$x$29598$1a@gJ)
                             (begin
                               (if (not (g$id?$28411$1a@gJ
                                          g$x$29598$1a@gJ))
                                 (g$syntax-violation$29029$1a@gJ
                                   '#f
                                   '"not an identifier"
                                   g$stx$29572$1a@gJ
                                   g$x$29598$1a@gJ)
                                 (void))
                               (g$check$29573$1a@gJ
                                 (cdr g$x*$29597$1a@gJ))
                               (if (g$bound-id-member?$28418$1a@gJ
                                     g$x$29598$1a@gJ
                                     (cdr g$x*$29597$1a@gJ))
                                 (g$syntax-violation$29029$1a@gJ
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$29572$1a@gJ
                                   g$x$29598$1a@gJ)
                                 (void)))))
                          (car g$x*$29597$1a@gJ))
                         (void))))))
          ((case-lambda
             ((g$t$29574$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29575$1a@gJ)
                  (if g$ls/false$29575$1a@gJ
                    (apply
                      (case-lambda
                        ((g$b$29576$1a@gJ g$b*$29577$1a@gJ)
                         (g$cons*$20197$1a@gJ
                           (g$bless$28872$1a@gJ 'let)
                           '()
                           g$b$29576$1a@gJ
                           g$b*$29577$1a@gJ)))
                      g$ls/false$29575$1a@gJ)
                    ((case-lambda
                       ((g$t$29578$1a@gJ)
                        ((case-lambda
                           ((g$ls/false$29579$1a@gJ)
                            (if g$ls/false$29579$1a@gJ
                              (apply
                                (case-lambda
                                  ((g$lhs*$29580$1a@gJ
                                     g$rhs*$29581$1a@gJ
                                     g$b$29582$1a@gJ
                                     g$b*$29583$1a@gJ)
                                   (g$bless$28872$1a@gJ
                                     ((letrec ((g$f$29584$1a@gJ
                                                 (case-lambda
                                                   ((g$lhs*$29585$1a@gJ
                                                      g$rhs*$29586$1a@gJ)
                                                    (if (null?
                                                          g$lhs*$29585$1a@gJ)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$29582$1a@gJ
                                                          g$b*$29583$1a@gJ))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$29587$1a@gJ)
                                                            ((case-lambda
                                                               ((g$ls/false$29588$1a@gJ)
                                                                (if g$ls/false$29588$1a@gJ
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$29589$1a@gJ)
                                                                       (begin
                                                                         (g$check$29573$1a@gJ
                                                                           g$x*$29589$1a@gJ)
                                                                         (list
                                                                           'call-with-values
                                                                           (list
                                                                             'lambda
                                                                             '()
                                                                             (car g$rhs*$29586$1a@gJ))
                                                                           (list
                                                                             'lambda
                                                                             g$x*$29589$1a@gJ
                                                                             (g$f$29584$1a@gJ
                                                                               (cdr g$lhs*$29585$1a@gJ)
                                                                               (cdr g$rhs*$29586$1a@gJ)))))))
                                                                    g$ls/false$29588$1a@gJ)
                                                                  ((case-lambda
                                                                     ((g$t$29590$1a@gJ)
                                                                      ((case-lambda
                                                                         ((g$ls/false$29591$1a@gJ)
                                                                          (if g$ls/false$29591$1a@gJ
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$29592$1a@gJ
                                                                                   g$x$29593$1a@gJ)
                                                                                 (begin
                                                                                   (g$check$29573$1a@gJ
                                                                                     (cons
                                                                                       g$x$29593$1a@gJ
                                                                                       g$x*$29592$1a@gJ))
                                                                                   (list
                                                                                     'call-with-values
                                                                                     (list
                                                                                       'lambda
                                                                                       '()
                                                                                       (car g$rhs*$29586$1a@gJ))
                                                                                     (list
                                                                                       'lambda
                                                                                       (g$append$20200$1a@gJ
                                                                                         g$x*$29592$1a@gJ
                                                                                         g$x$29593$1a@gJ)
                                                                                       (g$f$29584$1a@gJ
                                                                                         (cdr g$lhs*$29585$1a@gJ)
                                                                                         (cdr g$rhs*$29586$1a@gJ)))))))
                                                                              g$ls/false$29591$1a@gJ)
                                                                            ((case-lambda
                                                                               ((g$t$29594$1a@gJ)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$29595$1a@gJ)
                                                                                    (if g$ls/false$29595$1a@gJ
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$29596$1a@gJ)
                                                                                           (g$syntax-violation$29029$1a@gJ
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$29572$1a@gJ
                                                                                             g$others$29596$1a@gJ)))
                                                                                        g$ls/false$29595$1a@gJ)
                                                                                      (g$syntax-violation$29029$1a@gJ
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$29594$1a@gJ))))
                                                                                 (g$syntax-dispatch$28909$1a@gJ
                                                                                   g$t$29594$1a@gJ
                                                                                   'any))))
                                                                             g$t$29590$1a@gJ))))
                                                                       (g$syntax-dispatch$28909$1a@gJ
                                                                         g$t$29590$1a@gJ
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$29587$1a@gJ))))
                                                             (g$syntax-dispatch$28909$1a@gJ
                                                               g$t$29587$1a@gJ
                                                               'each-any))))
                                                         (car g$lhs*$29585$1a@gJ))))))))
                                        g$f$29584$1a@gJ)
                                      g$lhs*$29580$1a@gJ
                                      g$rhs*$29581$1a@gJ))))
                                g$ls/false$29579$1a@gJ)
                              (g$syntax-violation$29029$1a@gJ
                                '#f
                                '"invalid syntax"
                                g$t$29578$1a@gJ))))
                         (g$syntax-dispatch$28909$1a@gJ
                           g$t$29578$1a@gJ
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29574$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29574$1a@gJ
                 '(_ () any . each-any)))))
           g$stx$29572$1a@gJ)))))
   (g$trace-lambda-macro$28878$1a@gJ
     g$trace-lambda-macro$32477$1a@gJ
     (case-lambda
       ((g$stx$29599$1a@gJ)
        ((case-lambda
           ((g$t$29600$1a@gJ)
            ((case-lambda
               ((g$ls/false$29601$1a@gJ)
                (if g$ls/false$29601$1a@gJ
                  (apply
                    (case-lambda
                      ((g$who$29602$1a@gJ
                         g$fmls$29603$1a@gJ
                         g$b$29604$1a@gJ
                         g$b*$29605$1a@gJ)
                       (if (g$valid-bound-ids?$28416$1a@gJ
                             g$fmls$29603$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$29602$1a@gJ)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$29603$1a@gJ
                                 (cons
                                   g$b$29604$1a@gJ
                                   g$b*$29605$1a@gJ)))))
                         (g$invalid-fmls-error$28874$1a@gJ
                           g$stx$29599$1a@gJ
                           g$fmls$29603$1a@gJ))))
                    g$ls/false$29601$1a@gJ)
                  ((case-lambda
                     ((g$t$29606$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29607$1a@gJ)
                          (if g$ls/false$29607$1a@gJ
                            (apply
                              (case-lambda
                                ((g$who$29608$1a@gJ
                                   g$fmls$29609$1a@gJ
                                   g$last$29610$1a@gJ
                                   g$b$29611$1a@gJ
                                   g$b*$29612$1a@gJ)
                                 (if (g$valid-bound-ids?$28416$1a@gJ
                                       (cons
                                         g$last$29610$1a@gJ
                                         g$fmls$29609$1a@gJ))
                                   (g$bless$28872$1a@gJ
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$29608$1a@gJ)
                                       (cons
                                         'lambda
                                         (cons
                                           (g$append$20200$1a@gJ
                                             g$fmls$29609$1a@gJ
                                             g$last$29610$1a@gJ)
                                           (cons
                                             g$b$29611$1a@gJ
                                             g$b*$29612$1a@gJ)))))
                                   (g$invalid-fmls-error$28874$1a@gJ
                                     g$stx$29599$1a@gJ
                                     (g$append$20200$1a@gJ
                                       g$fmls$29609$1a@gJ
                                       g$last$29610$1a@gJ)))))
                              g$ls/false$29607$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29606$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29606$1a@gJ
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$29600$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29600$1a@gJ
               '(_ any each-any any . each-any)))))
         g$stx$29599$1a@gJ))))
   (g$trace-define-macro$28879$1a@gJ
     g$trace-define-macro$32478$1a@gJ
     (case-lambda
       ((g$stx$29613$1a@gJ)
        ((case-lambda
           ((g$t$29614$1a@gJ)
            ((case-lambda
               ((g$ls/false$29615$1a@gJ)
                (if g$ls/false$29615$1a@gJ
                  (apply
                    (case-lambda
                      ((g$who$29616$1a@gJ
                         g$fmls$29617$1a@gJ
                         g$b$29618$1a@gJ
                         g$b*$29619$1a@gJ)
                       (if (g$valid-bound-ids?$28416$1a@gJ
                             g$fmls$29617$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (list
                             'define
                             g$who$29616$1a@gJ
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$29616$1a@gJ)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$29617$1a@gJ
                                   (cons
                                     g$b$29618$1a@gJ
                                     g$b*$29619$1a@gJ))))))
                         (g$invalid-fmls-error$28874$1a@gJ
                           g$stx$29613$1a@gJ
                           g$fmls$29617$1a@gJ))))
                    g$ls/false$29615$1a@gJ)
                  ((case-lambda
                     ((g$t$29620$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29621$1a@gJ)
                          (if g$ls/false$29621$1a@gJ
                            (apply
                              (case-lambda
                                ((g$who$29622$1a@gJ
                                   g$fmls$29623$1a@gJ
                                   g$last$29624$1a@gJ
                                   g$b$29625$1a@gJ
                                   g$b*$29626$1a@gJ)
                                 (if (g$valid-bound-ids?$28416$1a@gJ
                                       (cons
                                         g$last$29624$1a@gJ
                                         g$fmls$29623$1a@gJ))
                                   (g$bless$28872$1a@gJ
                                     (list
                                       'define
                                       g$who$29622$1a@gJ
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$29622$1a@gJ)
                                         (cons
                                           'lambda
                                           (cons
                                             (g$append$20200$1a@gJ
                                               g$fmls$29623$1a@gJ
                                               g$last$29624$1a@gJ)
                                             (cons
                                               g$b$29625$1a@gJ
                                               g$b*$29626$1a@gJ))))))
                                   (g$invalid-fmls-error$28874$1a@gJ
                                     g$stx$29613$1a@gJ
                                     (g$append$20200$1a@gJ
                                       g$fmls$29623$1a@gJ
                                       g$last$29624$1a@gJ)))))
                              g$ls/false$29621$1a@gJ)
                            ((case-lambda
                               ((g$t$29627$1a@gJ)
                                ((case-lambda
                                   ((g$ls/false$29628$1a@gJ)
                                    (if g$ls/false$29628$1a@gJ
                                      (apply
                                        (case-lambda
                                          ((g$who$29629$1a@gJ
                                             g$expr$29630$1a@gJ)
                                           (if (g$id?$28411$1a@gJ
                                                 g$who$29629$1a@gJ)
                                             (g$bless$28872$1a@gJ
                                               (list
                                                 'define
                                                 g$who$29629$1a@gJ
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$29630$1a@gJ))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$29629$1a@gJ)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$29029$1a@gJ
                                               '#f
                                               '"invalid name"
                                               g$stx$29613$1a@gJ))))
                                        g$ls/false$29628$1a@gJ)
                                      (g$syntax-violation$29029$1a@gJ
                                        '#f
                                        '"invalid syntax"
                                        g$t$29627$1a@gJ))))
                                 (g$syntax-dispatch$28909$1a@gJ
                                   g$t$29627$1a@gJ
                                   '(_ any any)))))
                             g$t$29620$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29620$1a@gJ
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$29614$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29614$1a@gJ
               '(_ (any . each-any) any . each-any)))))
         g$stx$29613$1a@gJ))))
   (g$trace-define-syntax-macro$28880$1a@gJ
     g$trace-define-syntax-macro$32479$1a@gJ
     (case-lambda
       ((g$stx$29631$1a@gJ)
        ((case-lambda
           ((g$t$29632$1a@gJ)
            ((case-lambda
               ((g$ls/false$29633$1a@gJ)
                (if g$ls/false$29633$1a@gJ
                  (apply
                    (case-lambda
                      ((g$who$29634$1a@gJ g$expr$29635$1a@gJ)
                       (if (g$id?$28411$1a@gJ g$who$29634$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (list
                             'define-syntax
                             g$who$29634$1a@gJ
                             (list
                               'make-traced-macro
                               (list 'quote g$who$29634$1a@gJ)
                               g$expr$29635$1a@gJ)))
                         (g$syntax-violation$29029$1a@gJ
                           '#f
                           '"invalid name"
                           g$stx$29631$1a@gJ))))
                    g$ls/false$29633$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29632$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29632$1a@gJ
               '(_ any any)))))
         g$stx$29631$1a@gJ))))
   (g$trace-let/rec-syntax$28881$1a@gJ
     g$trace-let/rec-syntax$32480$1a@gJ
     (case-lambda
       ((g$who$29636$1a@gJ)
        (case-lambda
          ((g$stx$29637$1a@gJ)
           ((case-lambda
              ((g$t$29638$1a@gJ)
               ((case-lambda
                  ((g$ls/false$29639$1a@gJ)
                   (if g$ls/false$29639$1a@gJ
                     (apply
                       (case-lambda
                         ((g$lhs*$29640$1a@gJ
                            g$rhs*$29641$1a@gJ
                            g$b$29642$1a@gJ
                            g$b*$29643$1a@gJ)
                          (if (g$valid-bound-ids?$28416$1a@gJ
                                g$lhs*$29640$1a@gJ)
                            ((case-lambda
                               ((g$rhs*$29644$1a@gJ)
                                (g$bless$28872$1a@gJ
                                  (cons
                                    g$who$29636$1a@gJ
                                    (cons
                                      (g$map$20195$1a@gJ
                                        list
                                        g$lhs*$29640$1a@gJ
                                        g$rhs*$29644$1a@gJ)
                                      (cons
                                        g$b$29642$1a@gJ
                                        g$b*$29643$1a@gJ))))))
                             (g$map$20195$1a@gJ
                               (case-lambda
                                 ((g$lhs$29645$1a@gJ g$rhs$29646$1a@gJ)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$29645$1a@gJ)
                                    g$rhs$29646$1a@gJ)))
                               g$lhs*$29640$1a@gJ
                               g$rhs*$29641$1a@gJ))
                            (g$invalid-fmls-error$28874$1a@gJ
                              g$stx$29637$1a@gJ
                              g$lhs*$29640$1a@gJ))))
                       g$ls/false$29639$1a@gJ)
                     (g$syntax-violation$29029$1a@gJ
                       '#f
                       '"invalid syntax"
                       g$t$29638$1a@gJ))))
                (g$syntax-dispatch$28909$1a@gJ
                  g$t$29638$1a@gJ
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$29637$1a@gJ))))))
   (g$trace-let-syntax-macro$28882$1a@gJ
     g$trace-let-syntax-macro$32481$1a@gJ
     (g$trace-let/rec-syntax$28881$1a@gJ 'let-syntax))
   (g$trace-letrec-syntax-macro$28883$1a@gJ
     g$trace-letrec-syntax-macro$32482$1a@gJ
     (g$trace-let/rec-syntax$28881$1a@gJ 'letrec-syntax))
   (g$guard-macro$28884$1a@gJ
     g$guard-macro$32483$1a@gJ
     (case-lambda
       ((g$x$29647$1a@gJ)
        (letrec* ((g$gen-clauses$29648$1a@gJ
                    (case-lambda
                      ((g$con$29660$1a@gJ
                         g$outerk$29661$1a@gJ
                         g$clause*$29662$1a@gJ)
                       (letrec* ((g$f$29663$1a@gJ
                                   (case-lambda
                                     ((g$x$29691$1a@gJ g$k$29692$1a@gJ)
                                      ((case-lambda
                                         ((g$t$29693$1a@gJ)
                                          ((case-lambda
                                             ((g$ls/false$29694$1a@gJ)
                                              (if g$ls/false$29694$1a@gJ
                                                (apply
                                                  (case-lambda
                                                    ((g$e$29695$1a@gJ
                                                       g$p$29696$1a@gJ)
                                                     ((case-lambda
                                                        ((g$t$29697$1a@gJ)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$29697$1a@gJ
                                                               g$e$29695$1a@gJ))
                                                           (list
                                                             'if
                                                             g$t$29697$1a@gJ
                                                             (list
                                                               g$p$29696$1a@gJ
                                                               g$t$29697$1a@gJ)
                                                             g$k$29692$1a@gJ))))
                                                      (gensym))))
                                                  g$ls/false$29694$1a@gJ)
                                                ((case-lambda
                                                   ((g$t$29698$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$29699$1a@gJ)
                                                        (if g$ls/false$29699$1a@gJ
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$29700$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$t$29701$1a@gJ)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$29701$1a@gJ
                                                                         g$e$29700$1a@gJ))
                                                                     (list
                                                                       'if
                                                                       g$t$29701$1a@gJ
                                                                       g$t$29701$1a@gJ
                                                                       g$k$29692$1a@gJ))))
                                                                (gensym))))
                                                            g$ls/false$29699$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$29702$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$29703$1a@gJ)
                                                                  (if g$ls/false$29703$1a@gJ
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$29704$1a@gJ
                                                                           g$v$29705$1a@gJ
                                                                           g$v*$29706$1a@gJ)
                                                                         (list
                                                                           'if
                                                                           g$e$29704$1a@gJ
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$29705$1a@gJ
                                                                               g$v*$29706$1a@gJ))
                                                                           g$k$29692$1a@gJ)))
                                                                      g$ls/false$29703$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$t$29707$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$29708$1a@gJ)
                                                                            (if g$ls/false$29708$1a@gJ
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$29029$1a@gJ
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$29691$1a@gJ)))
                                                                                g$ls/false$29708$1a@gJ)
                                                                              (g$syntax-violation$29029$1a@gJ
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$29707$1a@gJ))))
                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                           g$t$29707$1a@gJ
                                                                           '_))))
                                                                     g$t$29702$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$29702$1a@gJ
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$29698$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$29698$1a@gJ
                                                       '(any)))))
                                                 g$t$29693$1a@gJ))))
                                           (g$syntax-dispatch$28909$1a@gJ
                                             g$t$29693$1a@gJ
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$29691$1a@gJ))))
                                 (g$f*$29664$1a@gJ
                                   (case-lambda
                                     ((g$x*$29671$1a@gJ)
                                      ((case-lambda
                                         ((g$t$29672$1a@gJ)
                                          ((case-lambda
                                             ((g$ls/false$29673$1a@gJ)
                                              (if g$ls/false$29673$1a@gJ
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$29660$1a@gJ)
                                                       '#t)))
                                                  g$ls/false$29673$1a@gJ)
                                                ((case-lambda
                                                   ((g$t$29674$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$29675$1a@gJ)
                                                        (if g$ls/false$29675$1a@gJ
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$29676$1a@gJ
                                                                 g$e*$29677$1a@gJ)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$29676$1a@gJ
                                                                     g$e*$29677$1a@gJ))
                                                                 '#f)))
                                                            g$ls/false$29675$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$29678$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$29679$1a@gJ)
                                                                  (if g$ls/false$29679$1a@gJ
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$29680$1a@gJ
                                                                           g$cls*$29681$1a@gJ)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$29664$1a@gJ
                                                                                g$cls*$29681$1a@gJ)))
                                                                           (case-lambda
                                                                             ((g$e$29684$1a@gJ
                                                                                g$g$29685$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$g$29686$1a@gJ
                                                                                    g$e$29687$1a@gJ)
                                                                                  (values
                                                                                    (g$f$29663$1a@gJ
                                                                                      g$cls$29680$1a@gJ
                                                                                      g$e$29687$1a@gJ)
                                                                                    g$g$29686$1a@gJ)))
                                                                               g$g$29685$1a@gJ
                                                                               g$e$29684$1a@gJ))))))
                                                                      g$ls/false$29679$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$t$29688$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$29689$1a@gJ)
                                                                            (if g$ls/false$29689$1a@gJ
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$29690$1a@gJ)
                                                                                   (g$syntax-violation$29029$1a@gJ
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$29690$1a@gJ)))
                                                                                g$ls/false$29689$1a@gJ)
                                                                              (g$syntax-violation$29029$1a@gJ
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$29688$1a@gJ))))
                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                           g$t$29688$1a@gJ
                                                                           'any))))
                                                                     g$t$29678$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$29678$1a@gJ
                                                                 '(any .
                                                                       any)))))
                                                           g$t$29674$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$29674$1a@gJ
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$29672$1a@gJ))))
                                           (g$syntax-dispatch$28909$1a@gJ
                                             g$t$29672$1a@gJ
                                             '()))))
                                       g$x*$29671$1a@gJ)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$29664$1a@gJ g$clause*$29662$1a@gJ)))
                           (case-lambda
                             ((g$code$29667$1a@gJ g$raisek$29668$1a@gJ)
                              ((case-lambda
                                 ((g$raisek$29669$1a@gJ
                                    g$code$29670$1a@gJ)
                                  (if g$raisek$29669$1a@gJ
                                    (list
                                      g$outerk$29661$1a@gJ
                                      g$code$29670$1a@gJ)
                                    g$code$29670$1a@gJ)))
                               g$raisek$29668$1a@gJ
                               g$code$29667$1a@gJ)))))))))
          ((case-lambda
             ((g$t$29649$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29650$1a@gJ)
                  (if (if g$ls/false$29650$1a@gJ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$29651$1a@gJ
                                 g$clause*$29652$1a@gJ
                                 g$b$29653$1a@gJ
                                 g$b*$29654$1a@gJ)
                               (g$id?$28411$1a@gJ g$con$29651$1a@gJ)))
                            g$ls/false$29650$1a@gJ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$29655$1a@gJ
                           g$clause*$29656$1a@gJ
                           g$b$29657$1a@gJ
                           g$b*$29658$1a@gJ)
                         ((case-lambda
                            ((g$outerk$29659$1a@gJ)
                             (g$bless$28872$1a@gJ
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$29659$1a@gJ)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$29655$1a@gJ)
                                           (g$gen-clauses$29648$1a@gJ
                                             g$con$29655$1a@gJ
                                             g$outerk$29659$1a@gJ
                                             g$clause*$29656$1a@gJ))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$29657$1a@gJ
                                               g$b*$29658$1a@gJ)))))))))))
                          (gensym))))
                      g$ls/false$29650$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$29649$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29649$1a@gJ
                 '(_ (any . each-any) any . each-any)))))
           g$x$29647$1a@gJ)))))
   (g$define-enumeration-macro$28885$1a@gJ
     g$define-enumeration-macro$32484$1a@gJ
     (case-lambda
       ((g$stx$29709$1a@gJ)
        (letrec* ((g$set?$29710$1a@gJ
                    (case-lambda
                      ((g$x$29723$1a@gJ)
                       ((case-lambda
                          ((g$t$29724$1a@gJ)
                           (if g$t$29724$1a@gJ
                             g$t$29724$1a@gJ
                             (begin
                               '#f
                               (if (not (g$memq$20187$1a@gJ
                                          (car g$x$29723$1a@gJ)
                                          (cdr g$x$29723$1a@gJ)))
                                 (begin
                                   '#f
                                   (g$set?$29710$1a@gJ
                                     (cdr g$x$29723$1a@gJ)))
                                 '#f)))))
                        (null? g$x$29723$1a@gJ)))))
                  (g$remove-dups$29711$1a@gJ
                    (case-lambda
                      ((g$ls$29722$1a@gJ)
                       (if (null? g$ls$29722$1a@gJ)
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$ls$29722$1a@gJ)
                             (g$remove-dups$29711$1a@gJ
                               (g$remq$20205$1a@gJ
                                 (car g$ls$29722$1a@gJ)
                                 (cdr g$ls$29722$1a@gJ))))))))))
          ((case-lambda
             ((g$t$29712$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29713$1a@gJ)
                  (if (if g$ls/false$29713$1a@gJ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$29714$1a@gJ
                                 g$id*$29715$1a@gJ
                                 g$maker$29716$1a@gJ)
                               (if (g$id?$28411$1a@gJ
                                     g$name$29714$1a@gJ)
                                 (if (g$id?$28411$1a@gJ
                                       g$maker$29716$1a@gJ)
                                   (begin
                                     '#f
                                     (g$for-all$20193$1a@gJ
                                       g$id?$28411$1a@gJ
                                       g$id*$29715$1a@gJ))
                                   '#f)
                                 '#f)))
                            g$ls/false$29713$1a@gJ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$29717$1a@gJ
                           g$id*$29718$1a@gJ
                           g$maker$29719$1a@gJ)
                         ((case-lambda
                            ((g$name*$29720$1a@gJ g$mk$29721$1a@gJ)
                             (g$bless$28872$1a@gJ
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$29721$1a@gJ
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$29720$1a@gJ))))
                                 (list
                                   'define-syntax
                                   g$name$29717$1a@gJ
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$29720$1a@gJ))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$29717$1a@gJ)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$29719$1a@gJ
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$29719$1a@gJ)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$29720$1a@gJ))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$29719$1a@gJ)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$29721$1a@gJ
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$29711$1a@gJ
                            (g$syntax->datum$29032$1a@gJ
                              g$id*$29718$1a@gJ))
                          (gensym))))
                      g$ls/false$29713$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$29712$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29712$1a@gJ
                 '(_ any each-any any)))))
           g$stx$29709$1a@gJ)))))
   (g$time-macro$28886$1a@gJ
     g$time-macro$32485$1a@gJ
     (case-lambda
       ((g$stx$29725$1a@gJ)
        ((case-lambda
           ((g$t$29726$1a@gJ)
            ((case-lambda
               ((g$ls/false$29727$1a@gJ)
                (if g$ls/false$29727$1a@gJ
                  (apply
                    (case-lambda
                      ((g$expr$29728$1a@gJ)
                       ((case-lambda
                          ((g$str$29729$1a@gJ)
                           (g$bless$28872$1a@gJ
                             (list
                               'time-it
                               g$str$29729$1a@gJ
                               (list 'lambda '() g$expr$29728$1a@gJ)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$26695$1a@gJ)))
                          (case-lambda
                            ((g$p$29732$1a@gJ g$e$29733$1a@gJ)
                             ((case-lambda
                                ((g$e$29734$1a@gJ g$p$29735$1a@gJ)
                                 (begin
                                   (write
                                     (g$syntax->datum$29032$1a@gJ
                                       g$expr$29728$1a@gJ)
                                     g$p$29735$1a@gJ)
                                   (g$e$29734$1a@gJ))))
                              g$e$29733$1a@gJ
                              g$p$29732$1a@gJ)))))))
                    g$ls/false$29727$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29726$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29726$1a@gJ '(_ any)))))
         g$stx$29725$1a@gJ))))
   (g$delay-macro$28887$1a@gJ
     g$delay-macro$32486$1a@gJ
     (case-lambda
       ((g$stx$29736$1a@gJ)
        ((case-lambda
           ((g$t$29737$1a@gJ)
            ((case-lambda
               ((g$ls/false$29738$1a@gJ)
                (if g$ls/false$29738$1a@gJ
                  (apply
                    (case-lambda
                      ((g$expr$29739$1a@gJ)
                       (g$bless$28872$1a@gJ
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$29739$1a@gJ)))))
                    g$ls/false$29738$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29737$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29737$1a@gJ '(_ any)))))
         g$stx$29736$1a@gJ))))
   (g$assert-macro$28888$1a@gJ
     g$assert-macro$32487$1a@gJ
     (case-lambda
       ((g$stx$29740$1a@gJ)
        ((case-lambda
           ((g$t$29741$1a@gJ)
            ((case-lambda
               ((g$ls/false$29742$1a@gJ)
                (if g$ls/false$29742$1a@gJ
                  (apply
                    (case-lambda
                      ((g$expr$29743$1a@gJ)
                       ((case-lambda
                          ((g$pos$29744$1a@gJ)
                           (g$bless$28872$1a@gJ
                             (list
                               'unless
                               g$expr$29743$1a@gJ
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$29743$1a@gJ)
                                 (list 'quote g$pos$29744$1a@gJ))))))
                        ((case-lambda
                           ((g$t$29745$1a@gJ)
                            (if g$t$29745$1a@gJ
                              g$t$29745$1a@gJ
                              (begin
                                '#f
                                (g$expression-position$29023$1a@gJ
                                  g$expr$29743$1a@gJ)))))
                         (g$expression-position$29023$1a@gJ
                           g$stx$29740$1a@gJ)))))
                    g$ls/false$29742$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29741$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29741$1a@gJ '(_ any)))))
         g$stx$29740$1a@gJ))))
   (g$endianness-macro$28889$1a@gJ
     g$endianness-macro$32488$1a@gJ
     (case-lambda
       ((g$stx$29746$1a@gJ)
        ((case-lambda
           ((g$t$29747$1a@gJ)
            ((case-lambda
               ((g$ls/false$29748$1a@gJ)
                (if g$ls/false$29748$1a@gJ
                  (apply
                    (case-lambda
                      ((g$e$29749$1a@gJ)
                       ((case-lambda
                          ((g$t$29750$1a@gJ)
                           (if (eqv? g$t$29750$1a@gJ 'little)
                             (g$bless$28872$1a@gJ ''little)
                             (if (eqv? g$t$29750$1a@gJ 'big)
                               (g$bless$28872$1a@gJ ''big)
                               (begin
                                 '#f
                                 (g$syntax-violation$29029$1a@gJ
                                   '#f
                                   '"endianness must be big or little"
                                   g$stx$29746$1a@gJ))))))
                        (g$syntax->datum$29032$1a@gJ g$e$29749$1a@gJ))))
                    g$ls/false$29748$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29747$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29747$1a@gJ '(_ any)))))
         g$stx$29746$1a@gJ))))
   (g$identifier-syntax-macro$28890$1a@gJ
     g$identifier-syntax-macro$32489$1a@gJ
     (case-lambda
       ((g$stx$29751$1a@gJ)
        ((case-lambda
           ((g$t$29752$1a@gJ)
            ((case-lambda
               ((g$ls/false$29753$1a@gJ)
                (if g$ls/false$29753$1a@gJ
                  (apply
                    (case-lambda
                      ((g$expr$29754$1a@gJ)
                       (g$bless$28872$1a@gJ
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$29754$1a@gJ))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$29754$1a@gJ)
                                   '(#'(e* ...))))))))))
                    g$ls/false$29753$1a@gJ)
                  ((case-lambda
                     ((g$t$29755$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29756$1a@gJ)
                          (if (if g$ls/false$29756$1a@gJ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$29757$1a@gJ
                                         g$expr1$29758$1a@gJ
                                         g$id2$29759$1a@gJ
                                         g$expr2$29760$1a@gJ
                                         g$expr3$29761$1a@gJ)
                                       (if (g$id?$28411$1a@gJ
                                             g$id1$29757$1a@gJ)
                                         (if (g$id?$28411$1a@gJ
                                               g$id2$29759$1a@gJ)
                                           (begin
                                             '#f
                                             (g$id?$28411$1a@gJ
                                               g$expr2$29760$1a@gJ))
                                           '#f)
                                         '#f)))
                                    g$ls/false$29756$1a@gJ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$29762$1a@gJ
                                   g$expr1$29763$1a@gJ
                                   g$id2$29764$1a@gJ
                                   g$expr2$29765$1a@gJ
                                   g$expr3$29766$1a@gJ)
                                 (g$bless$28872$1a@gJ
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$29763$1a@gJ))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$29765$1a@gJ)
                                           (list
                                             'syntax
                                             g$expr3$29766$1a@gJ))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$29763$1a@gJ
                                               '(e* ...))))))))))
                              g$ls/false$29756$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29755$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29755$1a@gJ
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$29752$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29752$1a@gJ '(_ any)))))
         g$stx$29751$1a@gJ))))
   (g$do-macro$28891$1a@gJ
     g$do-macro$32490$1a@gJ
     (case-lambda
       ((g$stx$29767$1a@gJ)
        (letrec* ((g$bind$29768$1a@gJ
                    (case-lambda
                      ((g$x$29780$1a@gJ)
                       ((case-lambda
                          ((g$t$29781$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$29782$1a@gJ)
                               (if g$ls/false$29782$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$x$29783$1a@gJ
                                        g$init$29784$1a@gJ)
                                      (list
                                        g$x$29783$1a@gJ
                                        g$init$29784$1a@gJ
                                        g$x$29783$1a@gJ)))
                                   g$ls/false$29782$1a@gJ)
                                 ((case-lambda
                                    ((g$t$29785$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$29786$1a@gJ)
                                         (if g$ls/false$29786$1a@gJ
                                           (apply
                                             (case-lambda
                                               ((g$x$29787$1a@gJ
                                                  g$init$29788$1a@gJ
                                                  g$step$29789$1a@gJ)
                                                (list
                                                  g$x$29787$1a@gJ
                                                  g$init$29788$1a@gJ
                                                  g$step$29789$1a@gJ)))
                                             g$ls/false$29786$1a@gJ)
                                           ((case-lambda
                                              ((g$t$29790$1a@gJ)
                                               ((case-lambda
                                                  ((g$ls/false$29791$1a@gJ)
                                                   (if g$ls/false$29791$1a@gJ
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$29029$1a@gJ
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$29767$1a@gJ)))
                                                       g$ls/false$29791$1a@gJ)
                                                     (g$syntax-violation$29029$1a@gJ
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$29790$1a@gJ))))
                                                (g$syntax-dispatch$28909$1a@gJ
                                                  g$t$29790$1a@gJ
                                                  '_))))
                                            g$t$29785$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$29785$1a@gJ
                                        '(any any any)))))
                                  g$t$29781$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$29781$1a@gJ
                              '(any any)))))
                        g$x$29780$1a@gJ)))))
          ((case-lambda
             ((g$t$29769$1a@gJ)
              ((case-lambda
                 ((g$ls/false$29770$1a@gJ)
                  (if g$ls/false$29770$1a@gJ
                    (apply
                      (case-lambda
                        ((g$binding*$29771$1a@gJ
                           g$test$29772$1a@gJ
                           g$expr*$29773$1a@gJ
                           g$command*$29774$1a@gJ)
                         ((case-lambda
                            ((g$t$29775$1a@gJ)
                             ((case-lambda
                                ((g$ls/false$29776$1a@gJ)
                                 (if g$ls/false$29776$1a@gJ
                                   (apply
                                     (case-lambda
                                       ((g$x*$29777$1a@gJ
                                          g$init*$29778$1a@gJ
                                          g$step*$29779$1a@gJ)
                                        (if (g$valid-bound-ids?$28416$1a@gJ
                                              g$x*$29777$1a@gJ)
                                          (g$bless$28872$1a@gJ
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$29777$1a@gJ
                                                    (list
                                                      'if
                                                      g$test$29772$1a@gJ
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$29773$1a@gJ))
                                                      (cons
                                                        'begin
                                                        (g$append$20200$1a@gJ
                                                          g$command*$29774$1a@gJ
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$29779$1a@gJ))))))))
                                              (cons
                                                'loop
                                                g$init*$29778$1a@gJ)))
                                          (g$syntax-violation$29029$1a@gJ
                                            '#f
                                            '"invalid bindings"
                                            g$stx$29767$1a@gJ))))
                                     g$ls/false$29776$1a@gJ)
                                   (g$syntax-violation$29029$1a@gJ
                                     '#f
                                     '"invalid syntax"
                                     g$t$29775$1a@gJ))))
                              (g$syntax-dispatch$28909$1a@gJ
                                g$t$29775$1a@gJ
                                '#(each (any any any))))))
                          (g$map$20195$1a@gJ
                            g$bind$29768$1a@gJ
                            g$binding*$29771$1a@gJ))))
                      g$ls/false$29770$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$29769$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$29769$1a@gJ
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$29767$1a@gJ)))))
   (g$let*-macro$28892$1a@gJ
     g$let*-macro$32491$1a@gJ
     (case-lambda
       ((g$stx$29792$1a@gJ)
        ((case-lambda
           ((g$t$29793$1a@gJ)
            ((case-lambda
               ((g$ls/false$29794$1a@gJ)
                (if (if g$ls/false$29794$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$29795$1a@gJ
                               g$rhs*$29796$1a@gJ
                               g$b$29797$1a@gJ
                               g$b*$29798$1a@gJ)
                             (g$for-all$20193$1a@gJ
                               g$id?$28411$1a@gJ
                               g$lhs*$29795$1a@gJ)))
                          g$ls/false$29794$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$29799$1a@gJ
                         g$rhs*$29800$1a@gJ
                         g$b$29801$1a@gJ
                         g$b*$29802$1a@gJ)
                       (g$bless$28872$1a@gJ
                         ((letrec ((g$f$29803$1a@gJ
                                     (case-lambda
                                       ((g$x*$29804$1a@gJ)
                                        (if (null? g$x*$29804$1a@gJ)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$29801$1a@gJ
                                                g$b*$29802$1a@gJ)))
                                          (if (null?
                                                (cdr g$x*$29804$1a@gJ))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$29804$1a@gJ))
                                                (cons
                                                  g$b$29801$1a@gJ
                                                  g$b*$29802$1a@gJ)))
                                            (begin
                                              '#f
                                              (list
                                                'let
                                                (list
                                                  (car g$x*$29804$1a@gJ))
                                                (g$f$29803$1a@gJ
                                                  (cdr g$x*$29804$1a@gJ))))))))))
                            g$f$29803$1a@gJ)
                          (g$map$20195$1a@gJ
                            list
                            g$lhs*$29799$1a@gJ
                            g$rhs*$29800$1a@gJ)))))
                    g$ls/false$29794$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29793$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29793$1a@gJ
               '(_ #(each (any any)) any . each-any)))))
         g$stx$29792$1a@gJ))))
   (g$or-macro$28893$1a@gJ
     g$or-macro$32492$1a@gJ
     (case-lambda
       ((g$stx$29805$1a@gJ)
        ((case-lambda
           ((g$t$29806$1a@gJ)
            ((case-lambda
               ((g$ls/false$29807$1a@gJ)
                (if g$ls/false$29807$1a@gJ
                  (apply (case-lambda (() '#f)) g$ls/false$29807$1a@gJ)
                  ((case-lambda
                     ((g$t$29808$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29809$1a@gJ)
                          (if g$ls/false$29809$1a@gJ
                            (apply
                              (case-lambda
                                ((g$e$29810$1a@gJ g$e*$29811$1a@gJ)
                                 (g$bless$28872$1a@gJ
                                   ((letrec ((g$f$29812$1a@gJ
                                               (case-lambda
                                                 ((g$e$29813$1a@gJ
                                                    g$e*$29814$1a@gJ)
                                                  (if (null?
                                                        g$e*$29814$1a@gJ)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$29813$1a@gJ)
                                                    (begin
                                                      '#f
                                                      (list
                                                        'let
                                                        (list
                                                          (list
                                                            't
                                                            g$e$29813$1a@gJ))
                                                        (list
                                                          'if
                                                          't
                                                          't
                                                          (g$f$29812$1a@gJ
                                                            (car g$e*$29814$1a@gJ)
                                                            (cdr g$e*$29814$1a@gJ))))))))))
                                      g$f$29812$1a@gJ)
                                    g$e$29810$1a@gJ
                                    g$e*$29811$1a@gJ))))
                              g$ls/false$29809$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29808$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29808$1a@gJ
                         '(_ any . each-any)))))
                   g$t$29806$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29806$1a@gJ '(_)))))
         g$stx$29805$1a@gJ))))
   (g$and-macro$28894$1a@gJ
     g$and-macro$32493$1a@gJ
     (case-lambda
       ((g$stx$29815$1a@gJ)
        ((case-lambda
           ((g$t$29816$1a@gJ)
            ((case-lambda
               ((g$ls/false$29817$1a@gJ)
                (if g$ls/false$29817$1a@gJ
                  (apply (case-lambda (() '#t)) g$ls/false$29817$1a@gJ)
                  ((case-lambda
                     ((g$t$29818$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$29819$1a@gJ)
                          (if g$ls/false$29819$1a@gJ
                            (apply
                              (case-lambda
                                ((g$e$29820$1a@gJ g$e*$29821$1a@gJ)
                                 (g$bless$28872$1a@gJ
                                   ((letrec ((g$f$29822$1a@gJ
                                               (case-lambda
                                                 ((g$e$29823$1a@gJ
                                                    g$e*$29824$1a@gJ)
                                                  (if (null?
                                                        g$e*$29824$1a@gJ)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$29823$1a@gJ)
                                                    (begin
                                                      '#f
                                                      (cons
                                                        'if
                                                        (cons
                                                          g$e$29823$1a@gJ
                                                          (cons
                                                            (g$f$29822$1a@gJ
                                                              (car g$e*$29824$1a@gJ)
                                                              (cdr g$e*$29824$1a@gJ))
                                                            '(#f))))))))))
                                      g$f$29822$1a@gJ)
                                    g$e$29820$1a@gJ
                                    g$e*$29821$1a@gJ))))
                              g$ls/false$29819$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$29818$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$29818$1a@gJ
                         '(_ any . each-any)))))
                   g$t$29816$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$29816$1a@gJ '(_)))))
         g$stx$29815$1a@gJ))))
   (g$cond-macro$28895$1a@gJ
     g$cond-macro$32494$1a@gJ
     (case-lambda
       ((g$stx$29825$1a@gJ)
        ((case-lambda
           ((g$t$29826$1a@gJ)
            ((case-lambda
               ((g$ls/false$29827$1a@gJ)
                (if g$ls/false$29827$1a@gJ
                  (apply
                    (case-lambda
                      ((g$cls$29828$1a@gJ g$cls*$29829$1a@gJ)
                       (g$bless$28872$1a@gJ
                         ((letrec ((g$f$29830$1a@gJ
                                     (case-lambda
                                       ((g$cls$29831$1a@gJ
                                          g$cls*$29832$1a@gJ)
                                        (if (null? g$cls*$29832$1a@gJ)
                                          ((case-lambda
                                             ((g$t$29833$1a@gJ)
                                              ((case-lambda
                                                 ((g$ls/false$29834$1a@gJ)
                                                  (if g$ls/false$29834$1a@gJ
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$29835$1a@gJ
                                                           g$e*$29836$1a@gJ)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             '#f
                                                             (cons
                                                               g$e$29835$1a@gJ
                                                               g$e*$29836$1a@gJ)))))
                                                      g$ls/false$29834$1a@gJ)
                                                    ((case-lambda
                                                       ((g$t$29837$1a@gJ)
                                                        ((case-lambda
                                                           ((g$ls/false$29838$1a@gJ)
                                                            (if g$ls/false$29838$1a@gJ
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$29839$1a@gJ
                                                                     g$p$29840$1a@gJ)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$29839$1a@gJ))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$29840$1a@gJ
                                                                         '(t))))))
                                                                g$ls/false$29838$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$t$29841$1a@gJ)
                                                                  ((case-lambda
                                                                     ((g$ls/false$29842$1a@gJ)
                                                                      (if g$ls/false$29842$1a@gJ
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$29843$1a@gJ)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$29843$1a@gJ
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$29842$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$t$29844$1a@gJ)
                                                                            ((case-lambda
                                                                               ((g$ls/false$29845$1a@gJ)
                                                                                (if g$ls/false$29845$1a@gJ
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$29846$1a@gJ
                                                                                         g$e*$29847$1a@gJ)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$29846$1a@gJ
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$29847$1a@gJ))))
                                                                                    g$ls/false$29845$1a@gJ)
                                                                                  ((case-lambda
                                                                                     ((g$t$29848$1a@gJ)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$29849$1a@gJ)
                                                                                          (if g$ls/false$29849$1a@gJ
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$29029$1a@gJ
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$29825$1a@gJ)))
                                                                                              g$ls/false$29849$1a@gJ)
                                                                                            (g$syntax-violation$29029$1a@gJ
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$29848$1a@gJ))))
                                                                                       (g$syntax-dispatch$28909$1a@gJ
                                                                                         g$t$29848$1a@gJ
                                                                                         '_))))
                                                                                   g$t$29844$1a@gJ))))
                                                                             (g$syntax-dispatch$28909$1a@gJ
                                                                               g$t$29844$1a@gJ
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$29841$1a@gJ))))
                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                     g$t$29841$1a@gJ
                                                                     '(any)))))
                                                               g$t$29837$1a@gJ))))
                                                         (g$syntax-dispatch$28909$1a@gJ
                                                           g$t$29837$1a@gJ
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$29833$1a@gJ))))
                                               (g$syntax-dispatch$28909$1a@gJ
                                                 g$t$29833$1a@gJ
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$29831$1a@gJ)
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$t$29850$1a@gJ)
                                                ((case-lambda
                                                   ((g$ls/false$29851$1a@gJ)
                                                    (if g$ls/false$29851$1a@gJ
                                                      (apply
                                                        (case-lambda
                                                          ((g$e$29852$1a@gJ
                                                             g$e*$29853$1a@gJ)
                                                           (g$syntax-violation$29029$1a@gJ
                                                             '#f
                                                             '"incorrect position of keyword else"
                                                             g$stx$29825$1a@gJ)))
                                                        g$ls/false$29851$1a@gJ)
                                                      ((case-lambda
                                                         ((g$t$29854$1a@gJ)
                                                          ((case-lambda
                                                             ((g$ls/false$29855$1a@gJ)
                                                              (if g$ls/false$29855$1a@gJ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$e$29856$1a@gJ
                                                                       g$p$29857$1a@gJ)
                                                                     (list
                                                                       'let
                                                                       (list
                                                                         (list
                                                                           't
                                                                           g$e$29856$1a@gJ))
                                                                       (list
                                                                         'if
                                                                         't
                                                                         (cons
                                                                           g$p$29857$1a@gJ
                                                                           '(t))
                                                                         (g$f$29830$1a@gJ
                                                                           (car g$cls*$29832$1a@gJ)
                                                                           (cdr g$cls*$29832$1a@gJ))))))
                                                                  g$ls/false$29855$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$t$29858$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$29859$1a@gJ)
                                                                        (if g$ls/false$29859$1a@gJ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$e$29860$1a@gJ)
                                                                               (list
                                                                                 'or
                                                                                 g$e$29860$1a@gJ
                                                                                 (g$f$29830$1a@gJ
                                                                                   (car g$cls*$29832$1a@gJ)
                                                                                   (cdr g$cls*$29832$1a@gJ)))))
                                                                            g$ls/false$29859$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$29861$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$29862$1a@gJ)
                                                                                  (if g$ls/false$29862$1a@gJ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$e$29863$1a@gJ
                                                                                           g$e*$29864$1a@gJ)
                                                                                         (list
                                                                                           'if
                                                                                           g$e$29863$1a@gJ
                                                                                           (cons
                                                                                             'begin
                                                                                             g$e*$29864$1a@gJ)
                                                                                           (g$f$29830$1a@gJ
                                                                                             (car g$cls*$29832$1a@gJ)
                                                                                             (cdr g$cls*$29832$1a@gJ)))))
                                                                                      g$ls/false$29862$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$29865$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$29866$1a@gJ)
                                                                                            (if g$ls/false$29866$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$29029$1a@gJ
                                                                                                     '#f
                                                                                                     '"invalid last clause"
                                                                                                     g$stx$29825$1a@gJ)))
                                                                                                g$ls/false$29866$1a@gJ)
                                                                                              (g$syntax-violation$29029$1a@gJ
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$29865$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$29865$1a@gJ
                                                                                           '_))))
                                                                                     g$t$29861$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$29861$1a@gJ
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$t$29858$1a@gJ))))
                                                                     (g$syntax-dispatch$28909$1a@gJ
                                                                       g$t$29858$1a@gJ
                                                                       '(any)))))
                                                                 g$t$29854$1a@gJ))))
                                                           (g$syntax-dispatch$28909$1a@gJ
                                                             g$t$29854$1a@gJ
                                                             '(any #(scheme-id
                                                                     =>)
                                                                   any)))))
                                                       g$t$29850$1a@gJ))))
                                                 (g$syntax-dispatch$28909$1a@gJ
                                                   g$t$29850$1a@gJ
                                                   '(#(scheme-id else)
                                                     any
                                                     .
                                                     each-any)))))
                                             g$cls$29831$1a@gJ)))))))
                            g$f$29830$1a@gJ)
                          g$cls$29828$1a@gJ
                          g$cls*$29829$1a@gJ))))
                    g$ls/false$29827$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29826$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29826$1a@gJ
               '(_ any . each-any)))))
         g$stx$29825$1a@gJ))))
   (g$do-include$28896$1a@gJ
     g$do-include$32495$1a@gJ
     (case-lambda
       ((g$stx$29867$1a@gJ g$id$29868$1a@gJ g$filename$29869$1a@gJ)
        ((case-lambda
           ((g$filename$29870$1a@gJ)
            (begin
              (if (not (if (g$string?$20616$1a@gJ
                             g$filename$29870$1a@gJ)
                         (begin
                           '#f
                           (g$id?$28411$1a@gJ g$id$29868$1a@gJ))
                         '#f))
                (g$syntax-violation$29029$1a@gJ
                  '#f
                  '"invalid syntax"
                  g$stx$29867$1a@gJ)
                (void))
              (cons
                (g$bless$28872$1a@gJ 'begin)
                (g$with-input-from-file$26757$1a@gJ
                  g$filename$29870$1a@gJ
                  (case-lambda
                    (()
                     ((letrec ((g$f$29871$1a@gJ
                                 (case-lambda
                                   ((g$ls$29872$1a@gJ)
                                    ((case-lambda
                                       ((g$x$29873$1a@gJ)
                                        (if (eof-object?
                                              g$x$29873$1a@gJ)
                                          (g$reverse$20656$1a@gJ
                                            g$ls$29872$1a@gJ)
                                          (begin
                                            '#f
                                            (g$f$29871$1a@gJ
                                              (cons
                                                (g$datum->stx$28394$1a@gJ
                                                  g$id$29868$1a@gJ
                                                  g$x$29873$1a@gJ)
                                                g$ls$29872$1a@gJ))))))
                                     (read-annotated))))))
                        g$f$29871$1a@gJ)
                      '()))))))))
         (g$stx->datum$28422$1a@gJ g$filename$29869$1a@gJ)))))
   (g$include-macro$28897$1a@gJ
     g$include-macro$32496$1a@gJ
     (case-lambda
       ((g$e$29874$1a@gJ)
        ((case-lambda
           ((g$t$29875$1a@gJ)
            ((case-lambda
               ((g$ls/false$29876$1a@gJ)
                (if g$ls/false$29876$1a@gJ
                  (apply
                    (case-lambda
                      ((g$id$29877$1a@gJ g$filename$29878$1a@gJ)
                       (g$do-include$28896$1a@gJ
                         g$e$29874$1a@gJ
                         g$id$29877$1a@gJ
                         g$filename$29878$1a@gJ)))
                    g$ls/false$29876$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29875$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29875$1a@gJ
               '(any any)))))
         g$e$29874$1a@gJ))))
   (g$include-into-macro$28898$1a@gJ
     g$include-into-macro$32497$1a@gJ
     (case-lambda
       ((g$e$29879$1a@gJ)
        ((case-lambda
           ((g$t$29880$1a@gJ)
            ((case-lambda
               ((g$ls/false$29881$1a@gJ)
                (if g$ls/false$29881$1a@gJ
                  (apply
                    (case-lambda
                      ((g$id$29882$1a@gJ g$filename$29883$1a@gJ)
                       (g$do-include$28896$1a@gJ
                         g$e$29879$1a@gJ
                         g$id$29882$1a@gJ
                         g$filename$29883$1a@gJ)))
                    g$ls/false$29881$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29880$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29880$1a@gJ
               '(_ any any)))))
         g$e$29879$1a@gJ))))
   (g$syntax-rules-macro$28899$1a@gJ
     g$syntax-rules-macro$32498$1a@gJ
     (case-lambda
       ((g$e$29884$1a@gJ)
        ((case-lambda
           ((g$t$29885$1a@gJ)
            ((case-lambda
               ((g$ls/false$29886$1a@gJ)
                (if g$ls/false$29886$1a@gJ
                  (apply
                    (case-lambda
                      ((g$lits$29887$1a@gJ
                         g$pat*$29888$1a@gJ
                         g$tmp*$29889$1a@gJ)
                       (begin
                         (g$verify-literals$28912$1a@gJ
                           g$lits$29887$1a@gJ
                           g$e$29884$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$29887$1a@gJ
                                   (g$map$20195$1a@gJ
                                     (case-lambda
                                       ((g$pat$29890$1a@gJ
                                          g$tmp$29891$1a@gJ)
                                        ((case-lambda
                                           ((g$t$29892$1a@gJ)
                                            ((case-lambda
                                               ((g$ls/false$29893$1a@gJ)
                                                (if g$ls/false$29893$1a@gJ
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$29894$1a@gJ)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$29894$1a@gJ)
                                                         (list
                                                           'syntax
                                                           g$tmp$29891$1a@gJ))))
                                                    g$ls/false$29893$1a@gJ)
                                                  ((case-lambda
                                                     ((g$t$29895$1a@gJ)
                                                      ((case-lambda
                                                         ((g$ls/false$29896$1a@gJ)
                                                          (if g$ls/false$29896$1a@gJ
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$29029$1a@gJ
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$29884$1a@gJ
                                                                   g$pat$29890$1a@gJ)))
                                                              g$ls/false$29896$1a@gJ)
                                                            (g$syntax-violation$29029$1a@gJ
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$29895$1a@gJ))))
                                                       (g$syntax-dispatch$28909$1a@gJ
                                                         g$t$29895$1a@gJ
                                                         '_))))
                                                   g$t$29892$1a@gJ))))
                                             (g$syntax-dispatch$28909$1a@gJ
                                               g$t$29892$1a@gJ
                                               '(_ . any)))))
                                         g$pat$29890$1a@gJ)))
                                     g$pat*$29888$1a@gJ
                                     g$tmp*$29889$1a@gJ)))))))))
                    g$ls/false$29886$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$29885$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$29885$1a@gJ
               '(_ each-any . #(each (any any)))))))
         g$e$29884$1a@gJ))))
   (g$quasiquote-macro$28900$1a@gJ
     g$quasiquote-macro$32499$1a@gJ
     ((case-lambda
        (()
         (letrec* ((g$datum$29897$1a@gJ
                     (case-lambda
                       ((g$x$30047$1a@gJ)
                        (list
                          (g$scheme-stx$28852$1a@gJ 'quote)
                          (g$mkstx$28399$1a@gJ
                            g$x$30047$1a@gJ
                            '()
                            '()
                            '())))))
                   (g$quasicons*$29932$1a@gJ
                     (case-lambda
                       ((g$x$30043$1a@gJ g$y$30044$1a@gJ)
                        ((letrec ((g$f$30045$1a@gJ
                                    (case-lambda
                                      ((g$x$30046$1a@gJ)
                                       (if (null? g$x$30046$1a@gJ)
                                         g$y$30044$1a@gJ
                                         (g$quasicons$29933$1a@gJ
                                           (car g$x$30046$1a@gJ)
                                           (g$f$30045$1a@gJ
                                             (cdr g$x$30046$1a@gJ))))))))
                           g$f$30045$1a@gJ)
                         g$x$30043$1a@gJ))))
                   (g$quasicons$29933$1a@gJ
                     (case-lambda
                       ((g$x$30024$1a@gJ g$y$30025$1a@gJ)
                        ((case-lambda
                           ((g$t$30026$1a@gJ)
                            ((case-lambda
                               ((g$ls/false$30027$1a@gJ)
                                (if g$ls/false$30027$1a@gJ
                                  (apply
                                    (case-lambda
                                      ((g$dy$30028$1a@gJ)
                                       ((case-lambda
                                          ((g$t$30029$1a@gJ)
                                           ((case-lambda
                                              ((g$ls/false$30030$1a@gJ)
                                               (if g$ls/false$30030$1a@gJ
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$30031$1a@gJ)
                                                      (list
                                                        (g$scheme-stx$28852$1a@gJ
                                                          'quote)
                                                        (cons
                                                          g$dx$30031$1a@gJ
                                                          g$dy$30028$1a@gJ))))
                                                   g$ls/false$30030$1a@gJ)
                                                 ((case-lambda
                                                    ((g$t$30032$1a@gJ)
                                                     ((case-lambda
                                                        ((g$ls/false$30033$1a@gJ)
                                                         (if g$ls/false$30033$1a@gJ
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$30034$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30035$1a@gJ)
                                                                        (if g$ls/false$30035$1a@gJ
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$28852$1a@gJ
                                                                                   'list)
                                                                                 g$x$30024$1a@gJ)))
                                                                            g$ls/false$30035$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$30036$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30037$1a@gJ)
                                                                                  (if g$ls/false$30037$1a@gJ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$28852$1a@gJ
                                                                                             'cons)
                                                                                           g$x$30024$1a@gJ
                                                                                           g$y$30025$1a@gJ)))
                                                                                      g$ls/false$30037$1a@gJ)
                                                                                    (g$syntax-violation$29029$1a@gJ
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$30036$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$30036$1a@gJ
                                                                                 '_))))
                                                                           g$t$30034$1a@gJ))))
                                                                     (g$syntax-dispatch$28909$1a@gJ
                                                                       g$t$30034$1a@gJ
                                                                       '()))))
                                                                 g$dy$30028$1a@gJ)))
                                                             g$ls/false$30033$1a@gJ)
                                                           (g$syntax-violation$29029$1a@gJ
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$30032$1a@gJ))))
                                                      (g$syntax-dispatch$28909$1a@gJ
                                                        g$t$30032$1a@gJ
                                                        '_))))
                                                  g$t$30029$1a@gJ))))
                                            (g$syntax-dispatch$28909$1a@gJ
                                              g$t$30029$1a@gJ
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$30024$1a@gJ)))
                                    g$ls/false$30027$1a@gJ)
                                  ((case-lambda
                                     ((g$t$30038$1a@gJ)
                                      ((case-lambda
                                         ((g$ls/false$30039$1a@gJ)
                                          (if g$ls/false$30039$1a@gJ
                                            (apply
                                              (case-lambda
                                                ((g$stuff$30040$1a@gJ)
                                                 (g$cons*$20197$1a@gJ
                                                   (g$scheme-stx$28852$1a@gJ
                                                     'list)
                                                   g$x$30024$1a@gJ
                                                   g$stuff$30040$1a@gJ)))
                                              g$ls/false$30039$1a@gJ)
                                            ((case-lambda
                                               ((g$t$30041$1a@gJ)
                                                ((case-lambda
                                                   ((g$ls/false$30042$1a@gJ)
                                                    (if g$ls/false$30042$1a@gJ
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$28852$1a@gJ
                                                               'cons)
                                                             g$x$30024$1a@gJ
                                                             g$y$30025$1a@gJ)))
                                                        g$ls/false$30042$1a@gJ)
                                                      (g$syntax-violation$29029$1a@gJ
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$30041$1a@gJ))))
                                                 (g$syntax-dispatch$28909$1a@gJ
                                                   g$t$30041$1a@gJ
                                                   '_))))
                                             g$t$30038$1a@gJ))))
                                       (g$syntax-dispatch$28909$1a@gJ
                                         g$t$30038$1a@gJ
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$30026$1a@gJ))))
                             (g$syntax-dispatch$28909$1a@gJ
                               g$t$30026$1a@gJ
                               '(#(scheme-id quote) any)))))
                         g$y$30025$1a@gJ))))
                   (g$quasiappend$29934$1a@gJ
                     (case-lambda
                       ((g$x$30011$1a@gJ g$y$30012$1a@gJ)
                        ((case-lambda
                           ((g$ls$30013$1a@gJ)
                            (if (null? g$ls$30013$1a@gJ)
                              (list
                                (g$scheme-stx$28852$1a@gJ 'quote)
                                '())
                              (if (null? (cdr g$ls$30013$1a@gJ))
                                (car g$ls$30013$1a@gJ)
                                (begin
                                  '#f
                                  (g$cons*$20197$1a@gJ
                                    (g$scheme-stx$28852$1a@gJ 'append)
                                    g$ls$30013$1a@gJ))))))
                         ((letrec ((g$f$30014$1a@gJ
                                     (case-lambda
                                       ((g$x$30015$1a@gJ)
                                        (if (null? g$x$30015$1a@gJ)
                                          ((case-lambda
                                             ((g$t$30016$1a@gJ)
                                              ((case-lambda
                                                 ((g$ls/false$30017$1a@gJ)
                                                  (if g$ls/false$30017$1a@gJ
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$30017$1a@gJ)
                                                    ((case-lambda
                                                       ((g$t$30018$1a@gJ)
                                                        ((case-lambda
                                                           ((g$ls/false$30019$1a@gJ)
                                                            (if g$ls/false$30019$1a@gJ
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$30012$1a@gJ)))
                                                                g$ls/false$30019$1a@gJ)
                                                              (g$syntax-violation$29029$1a@gJ
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30018$1a@gJ))))
                                                         (g$syntax-dispatch$28909$1a@gJ
                                                           g$t$30018$1a@gJ
                                                           '_))))
                                                     g$t$30016$1a@gJ))))
                                               (g$syntax-dispatch$28909$1a@gJ
                                                 g$t$30016$1a@gJ
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$30012$1a@gJ)
                                          ((case-lambda
                                             ((g$t$30020$1a@gJ)
                                              ((case-lambda
                                                 ((g$ls/false$30021$1a@gJ)
                                                  (if g$ls/false$30021$1a@gJ
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$30014$1a@gJ
                                                           (cdr g$x$30015$1a@gJ))))
                                                      g$ls/false$30021$1a@gJ)
                                                    ((case-lambda
                                                       ((g$t$30022$1a@gJ)
                                                        ((case-lambda
                                                           ((g$ls/false$30023$1a@gJ)
                                                            (if g$ls/false$30023$1a@gJ
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$30015$1a@gJ)
                                                                     (g$f$30014$1a@gJ
                                                                       (cdr g$x$30015$1a@gJ)))))
                                                                g$ls/false$30023$1a@gJ)
                                                              (g$syntax-violation$29029$1a@gJ
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30022$1a@gJ))))
                                                         (g$syntax-dispatch$28909$1a@gJ
                                                           g$t$30022$1a@gJ
                                                           '_))))
                                                     g$t$30020$1a@gJ))))
                                               (g$syntax-dispatch$28909$1a@gJ
                                                 g$t$30020$1a@gJ
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$30015$1a@gJ)))))))
                            g$f$30014$1a@gJ)
                          g$x$30011$1a@gJ)))))
                   (g$quasivector$29935$1a@gJ
                     (case-lambda
                       ((g$x$29986$1a@gJ)
                        ((case-lambda
                           ((g$pat-x$29987$1a@gJ)
                            ((case-lambda
                               ((g$t$29988$1a@gJ)
                                ((case-lambda
                                   ((g$ls/false$29989$1a@gJ)
                                    (if g$ls/false$29989$1a@gJ
                                      (apply
                                        (case-lambda
                                          ((g$x*$29990$1a@gJ)
                                           (list
                                             (g$scheme-stx$28852$1a@gJ
                                               'quote)
                                             (g$list->vector$20647$1a@gJ
                                               g$x*$29990$1a@gJ))))
                                        g$ls/false$29989$1a@gJ)
                                      ((case-lambda
                                         ((g$t$29991$1a@gJ)
                                          ((case-lambda
                                             ((g$ls/false$29992$1a@gJ)
                                              (if g$ls/false$29992$1a@gJ
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$29993$1a@gJ
                                                                 (case-lambda
                                                                   ((g$x$29994$1a@gJ
                                                                      g$k$29995$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$t$29996$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$29997$1a@gJ)
                                                                            (if g$ls/false$29997$1a@gJ
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$29998$1a@gJ)
                                                                                   (g$k$29995$1a@gJ
                                                                                     (g$map$20195$1a@gJ
                                                                                       (case-lambda
                                                                                         ((g$x$29999$1a@gJ)
                                                                                          (list
                                                                                            (g$scheme-stx$28852$1a@gJ
                                                                                              'quote)
                                                                                            g$x$29999$1a@gJ)))
                                                                                       g$x*$29998$1a@gJ))))
                                                                                g$ls/false$29997$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$t$30000$1a@gJ)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$30001$1a@gJ)
                                                                                      (if g$ls/false$30001$1a@gJ
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$30002$1a@gJ)
                                                                                             (g$k$29995$1a@gJ
                                                                                               g$x*$30002$1a@gJ)))
                                                                                          g$ls/false$30001$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$t$30003$1a@gJ)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$30004$1a@gJ)
                                                                                                (if g$ls/false$30004$1a@gJ
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$30005$1a@gJ
                                                                                                         g$y$30006$1a@gJ)
                                                                                                       (g$f$29993$1a@gJ
                                                                                                         g$y$30006$1a@gJ
                                                                                                         (case-lambda
                                                                                                           ((g$ls$30007$1a@gJ)
                                                                                                            (g$k$29995$1a@gJ
                                                                                                              (cons
                                                                                                                g$x$30005$1a@gJ
                                                                                                                g$ls$30007$1a@gJ)))))))
                                                                                                    g$ls/false$30004$1a@gJ)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$30008$1a@gJ)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$30009$1a@gJ)
                                                                                                          (if g$ls/false$30009$1a@gJ
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$28852$1a@gJ
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$29987$1a@gJ)))
                                                                                                              g$ls/false$30009$1a@gJ)
                                                                                                            (g$syntax-violation$29029$1a@gJ
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$30008$1a@gJ))))
                                                                                                       (g$syntax-dispatch$28909$1a@gJ
                                                                                                         g$t$30008$1a@gJ
                                                                                                         '_))))
                                                                                                   g$t$30003$1a@gJ))))
                                                                                             (g$syntax-dispatch$28909$1a@gJ
                                                                                               g$t$30003$1a@gJ
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$30000$1a@gJ))))
                                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                                     g$t$30000$1a@gJ
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$29996$1a@gJ))))
                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                           g$t$29996$1a@gJ
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$29994$1a@gJ)))))
                                                        g$f$29993$1a@gJ)
                                                      g$x$29986$1a@gJ
                                                      (case-lambda
                                                        ((g$ls$30010$1a@gJ)
                                                         (g$cons*$20197$1a@gJ
                                                           (g$scheme-stx$28852$1a@gJ
                                                             'vector)
                                                           g$ls$30010$1a@gJ))))))
                                                  g$ls/false$29992$1a@gJ)
                                                (g$syntax-violation$29029$1a@gJ
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$29991$1a@gJ))))
                                           (g$syntax-dispatch$28909$1a@gJ
                                             g$t$29991$1a@gJ
                                             '_))))
                                       g$t$29988$1a@gJ))))
                                 (g$syntax-dispatch$28909$1a@gJ
                                   g$t$29988$1a@gJ
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$29987$1a@gJ)))
                         g$x$29986$1a@gJ))))
                   (g$vquasi$29936$1a@gJ
                     (case-lambda
                       ((g$p$29969$1a@gJ g$lev$29970$1a@gJ)
                        ((case-lambda
                           ((g$t$29971$1a@gJ)
                            ((case-lambda
                               ((g$ls/false$29972$1a@gJ)
                                (if g$ls/false$29972$1a@gJ
                                  (apply
                                    (case-lambda
                                      ((g$p$29973$1a@gJ g$q$29974$1a@gJ)
                                       ((case-lambda
                                          ((g$t$29975$1a@gJ)
                                           ((case-lambda
                                              ((g$ls/false$29976$1a@gJ)
                                               (if g$ls/false$29976$1a@gJ
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$29977$1a@gJ)
                                                      (if (g$=$21669$1a@gJ
                                                            g$lev$29970$1a@gJ
                                                            '0)
                                                        (g$quasicons*$29932$1a@gJ
                                                          g$p$29977$1a@gJ
                                                          (g$vquasi$29936$1a@gJ
                                                            g$q$29974$1a@gJ
                                                            g$lev$29970$1a@gJ))
                                                        (g$quasicons$29933$1a@gJ
                                                          (g$quasicons$29933$1a@gJ
                                                            (g$datum$29897$1a@gJ
                                                              'unquote)
                                                            (g$quasi$29937$1a@gJ
                                                              g$p$29977$1a@gJ
                                                              (- g$lev$29970$1a@gJ
                                                                 '1)))
                                                          (g$vquasi$29936$1a@gJ
                                                            g$q$29974$1a@gJ
                                                            g$lev$29970$1a@gJ)))))
                                                   g$ls/false$29976$1a@gJ)
                                                 ((case-lambda
                                                    ((g$t$29978$1a@gJ)
                                                     ((case-lambda
                                                        ((g$ls/false$29979$1a@gJ)
                                                         (if g$ls/false$29979$1a@gJ
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$29980$1a@gJ)
                                                                (if (g$=$21669$1a@gJ
                                                                      g$lev$29970$1a@gJ
                                                                      '0)
                                                                  (g$quasiappend$29934$1a@gJ
                                                                    g$p$29980$1a@gJ
                                                                    (g$vquasi$29936$1a@gJ
                                                                      g$q$29974$1a@gJ
                                                                      g$lev$29970$1a@gJ))
                                                                  (g$quasicons$29933$1a@gJ
                                                                    (g$quasicons$29933$1a@gJ
                                                                      (g$datum$29897$1a@gJ
                                                                        'unquote-splicing)
                                                                      (g$quasi$29937$1a@gJ
                                                                        g$p$29980$1a@gJ
                                                                        (- g$lev$29970$1a@gJ
                                                                           '1)))
                                                                    (g$vquasi$29936$1a@gJ
                                                                      g$q$29974$1a@gJ
                                                                      g$lev$29970$1a@gJ)))))
                                                             g$ls/false$29979$1a@gJ)
                                                           ((case-lambda
                                                              ((g$t$29981$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$ls/false$29982$1a@gJ)
                                                                   (if g$ls/false$29982$1a@gJ
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$29983$1a@gJ)
                                                                          (g$quasicons$29933$1a@gJ
                                                                            (g$quasi$29937$1a@gJ
                                                                              g$p$29983$1a@gJ
                                                                              g$lev$29970$1a@gJ)
                                                                            (g$vquasi$29936$1a@gJ
                                                                              g$q$29974$1a@gJ
                                                                              g$lev$29970$1a@gJ))))
                                                                       g$ls/false$29982$1a@gJ)
                                                                     (g$syntax-violation$29029$1a@gJ
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$29981$1a@gJ))))
                                                                (g$syntax-dispatch$28909$1a@gJ
                                                                  g$t$29981$1a@gJ
                                                                  'any))))
                                                            g$t$29978$1a@gJ))))
                                                      (g$syntax-dispatch$28909$1a@gJ
                                                        g$t$29978$1a@gJ
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$29975$1a@gJ))))
                                            (g$syntax-dispatch$28909$1a@gJ
                                              g$t$29975$1a@gJ
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$29973$1a@gJ)))
                                    g$ls/false$29972$1a@gJ)
                                  ((case-lambda
                                     ((g$t$29984$1a@gJ)
                                      ((case-lambda
                                         ((g$ls/false$29985$1a@gJ)
                                          (if g$ls/false$29985$1a@gJ
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$28852$1a@gJ
                                                     'quote)
                                                   '())))
                                              g$ls/false$29985$1a@gJ)
                                            (g$syntax-violation$29029$1a@gJ
                                              '#f
                                              '"invalid syntax"
                                              g$t$29984$1a@gJ))))
                                       (g$syntax-dispatch$28909$1a@gJ
                                         g$t$29984$1a@gJ
                                         '()))))
                                   g$t$29971$1a@gJ))))
                             (g$syntax-dispatch$28909$1a@gJ
                               g$t$29971$1a@gJ
                               '(any . any)))))
                         g$p$29969$1a@gJ))))
                   (g$quasi$29937$1a@gJ
                     (case-lambda
                       ((g$p$29942$1a@gJ g$lev$29943$1a@gJ)
                        ((case-lambda
                           ((g$t$29944$1a@gJ)
                            ((case-lambda
                               ((g$ls/false$29945$1a@gJ)
                                (if g$ls/false$29945$1a@gJ
                                  (apply
                                    (case-lambda
                                      ((g$p$29946$1a@gJ)
                                       (if (g$=$21669$1a@gJ
                                             g$lev$29943$1a@gJ
                                             '0)
                                         g$p$29946$1a@gJ
                                         (g$quasicons$29933$1a@gJ
                                           (g$datum$29897$1a@gJ
                                             'unquote)
                                           (g$quasi$29937$1a@gJ
                                             (list g$p$29946$1a@gJ)
                                             (- g$lev$29943$1a@gJ
                                                '1))))))
                                    g$ls/false$29945$1a@gJ)
                                  ((case-lambda
                                     ((g$t$29947$1a@gJ)
                                      ((case-lambda
                                         ((g$ls/false$29948$1a@gJ)
                                          (if g$ls/false$29948$1a@gJ
                                            (apply
                                              (case-lambda
                                                ((g$p$29949$1a@gJ
                                                   g$q$29950$1a@gJ)
                                                 (if (g$=$21669$1a@gJ
                                                       g$lev$29943$1a@gJ
                                                       '0)
                                                   (g$quasicons*$29932$1a@gJ
                                                     g$p$29949$1a@gJ
                                                     (g$quasi$29937$1a@gJ
                                                       g$q$29950$1a@gJ
                                                       g$lev$29943$1a@gJ))
                                                   (g$quasicons$29933$1a@gJ
                                                     (g$quasicons$29933$1a@gJ
                                                       (g$datum$29897$1a@gJ
                                                         'unquote)
                                                       (g$quasi$29937$1a@gJ
                                                         g$p$29949$1a@gJ
                                                         (- g$lev$29943$1a@gJ
                                                            '1)))
                                                     (g$quasi$29937$1a@gJ
                                                       g$q$29950$1a@gJ
                                                       g$lev$29943$1a@gJ)))))
                                              g$ls/false$29948$1a@gJ)
                                            ((case-lambda
                                               ((g$t$29951$1a@gJ)
                                                ((case-lambda
                                                   ((g$ls/false$29952$1a@gJ)
                                                    (if g$ls/false$29952$1a@gJ
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$29953$1a@gJ
                                                             g$q$29954$1a@gJ)
                                                           (if (g$=$21669$1a@gJ
                                                                 g$lev$29943$1a@gJ
                                                                 '0)
                                                             (g$quasiappend$29934$1a@gJ
                                                               g$p$29953$1a@gJ
                                                               (g$quasi$29937$1a@gJ
                                                                 g$q$29954$1a@gJ
                                                                 g$lev$29943$1a@gJ))
                                                             (g$quasicons$29933$1a@gJ
                                                               (g$quasicons$29933$1a@gJ
                                                                 (g$datum$29897$1a@gJ
                                                                   'unquote-splicing)
                                                                 (g$quasi$29937$1a@gJ
                                                                   g$p$29953$1a@gJ
                                                                   (- g$lev$29943$1a@gJ
                                                                      '1)))
                                                               (g$quasi$29937$1a@gJ
                                                                 g$q$29954$1a@gJ
                                                                 g$lev$29943$1a@gJ)))))
                                                        g$ls/false$29952$1a@gJ)
                                                      ((case-lambda
                                                         ((g$t$29955$1a@gJ)
                                                          ((case-lambda
                                                             ((g$ls/false$29956$1a@gJ)
                                                              (if g$ls/false$29956$1a@gJ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$29957$1a@gJ)
                                                                     (g$quasicons$29933$1a@gJ
                                                                       (g$datum$29897$1a@gJ
                                                                         'quasiquote)
                                                                       (g$quasi$29937$1a@gJ
                                                                         (list
                                                                           g$p$29957$1a@gJ)
                                                                         (+ g$lev$29943$1a@gJ
                                                                            '1)))))
                                                                  g$ls/false$29956$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$t$29958$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$29959$1a@gJ)
                                                                        (if g$ls/false$29959$1a@gJ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$29960$1a@gJ
                                                                                 g$q$29961$1a@gJ)
                                                                               (g$quasicons$29933$1a@gJ
                                                                                 (g$quasi$29937$1a@gJ
                                                                                   g$p$29960$1a@gJ
                                                                                   g$lev$29943$1a@gJ)
                                                                                 (g$quasi$29937$1a@gJ
                                                                                   g$q$29961$1a@gJ
                                                                                   g$lev$29943$1a@gJ))))
                                                                            g$ls/false$29959$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$29962$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$29963$1a@gJ)
                                                                                  (if (if g$ls/false$29963$1a@gJ
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$29964$1a@gJ)
                                                                                               (not (g$stx?$28383$1a@gJ
                                                                                                      g$x$29964$1a@gJ))))
                                                                                            g$ls/false$29963$1a@gJ))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$29965$1a@gJ)
                                                                                         (g$quasivector$29935$1a@gJ
                                                                                           (g$vquasi$29936$1a@gJ
                                                                                             g$x$29965$1a@gJ
                                                                                             g$lev$29943$1a@gJ))))
                                                                                      g$ls/false$29963$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$29966$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$29967$1a@gJ)
                                                                                            (if g$ls/false$29967$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$29968$1a@gJ)
                                                                                                   (list
                                                                                                     (g$scheme-stx$28852$1a@gJ
                                                                                                       'quote)
                                                                                                     g$p$29968$1a@gJ)))
                                                                                                g$ls/false$29967$1a@gJ)
                                                                                              (g$syntax-violation$29029$1a@gJ
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$29966$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$29966$1a@gJ
                                                                                           'any))))
                                                                                     g$t$29962$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$29962$1a@gJ
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$29958$1a@gJ))))
                                                                     (g$syntax-dispatch$28909$1a@gJ
                                                                       g$t$29958$1a@gJ
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$29955$1a@gJ))))
                                                           (g$syntax-dispatch$28909$1a@gJ
                                                             g$t$29955$1a@gJ
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$29951$1a@gJ))))
                                                 (g$syntax-dispatch$28909$1a@gJ
                                                   g$t$29951$1a@gJ
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$29947$1a@gJ))))
                                       (g$syntax-dispatch$28909$1a@gJ
                                         g$t$29947$1a@gJ
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$29944$1a@gJ))))
                             (g$syntax-dispatch$28909$1a@gJ
                               g$t$29944$1a@gJ
                               '(#(scheme-id unquote) any)))))
                         g$p$29942$1a@gJ)))))
           (case-lambda
             ((g$x$29938$1a@gJ)
              ((case-lambda
                 ((g$t$29939$1a@gJ)
                  ((case-lambda
                     ((g$ls/false$29940$1a@gJ)
                      (if g$ls/false$29940$1a@gJ
                        (apply
                          (case-lambda
                            ((g$e$29941$1a@gJ)
                             (g$quasi$29937$1a@gJ g$e$29941$1a@gJ '0)))
                          g$ls/false$29940$1a@gJ)
                        (g$syntax-violation$29029$1a@gJ
                          '#f
                          '"invalid syntax"
                          g$t$29939$1a@gJ))))
                   (g$syntax-dispatch$28909$1a@gJ
                     g$t$29939$1a@gJ
                     '(_ any)))))
               g$x$29938$1a@gJ))))))))
   (g$quasisyntax-macro$28901$1a@gJ
     g$quasisyntax-macro$32500$1a@gJ
     ((case-lambda
        (()
         (letrec* ((g$quasi$30048$1a@gJ
                     (case-lambda
                       ((g$p$30062$1a@gJ g$lev$30063$1a@gJ)
                        ((case-lambda
                           ((g$t$30064$1a@gJ)
                            ((case-lambda
                               ((g$ls/false$30065$1a@gJ)
                                (if g$ls/false$30065$1a@gJ
                                  (apply
                                    (case-lambda
                                      ((g$p$30066$1a@gJ)
                                       (if (g$=$21669$1a@gJ
                                             g$lev$30063$1a@gJ
                                             '0)
                                         ((case-lambda
                                            ((g$g$30067$1a@gJ)
                                             (values
                                               (list g$g$30067$1a@gJ)
                                               (list g$p$30066$1a@gJ)
                                               g$g$30067$1a@gJ)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$30048$1a@gJ
                                                g$p$30066$1a@gJ
                                                (- g$lev$30063$1a@gJ
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$30071$1a@gJ
                                                g$rhs*$30072$1a@gJ
                                                g$p$30073$1a@gJ)
                                              ((case-lambda
                                                 ((g$p$30074$1a@gJ
                                                    g$rhs*$30075$1a@gJ
                                                    g$lhs*$30076$1a@gJ)
                                                  (values
                                                    g$lhs*$30076$1a@gJ
                                                    g$rhs*$30075$1a@gJ
                                                    (list
                                                      'unsyntax
                                                      g$p$30074$1a@gJ))))
                                               g$p$30073$1a@gJ
                                               g$rhs*$30072$1a@gJ
                                               g$lhs*$30071$1a@gJ)))))))
                                    g$ls/false$30065$1a@gJ)
                                  ((case-lambda
                                     ((g$t$30077$1a@gJ)
                                      ((case-lambda
                                         ((g$ls/false$30078$1a@gJ)
                                          (if (if g$ls/false$30078$1a@gJ
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$21669$1a@gJ
                                                         g$lev$30063$1a@gJ
                                                         '0)))
                                                    g$ls/false$30078$1a@gJ))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$29029$1a@gJ
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$30062$1a@gJ)))
                                              g$ls/false$30078$1a@gJ)
                                            ((case-lambda
                                               ((g$t$30079$1a@gJ)
                                                ((case-lambda
                                                   ((g$ls/false$30080$1a@gJ)
                                                    (if g$ls/false$30080$1a@gJ
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$30081$1a@gJ
                                                             g$q$30082$1a@gJ)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$30048$1a@gJ
                                                                  g$q$30082$1a@gJ
                                                                  g$lev$30063$1a@gJ)))
                                                             (case-lambda
                                                               ((g$lhs*$30086$1a@gJ
                                                                  g$rhs*$30087$1a@gJ
                                                                  g$q$30088$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$q$30089$1a@gJ
                                                                      g$rhs*$30090$1a@gJ
                                                                      g$lhs*$30091$1a@gJ)
                                                                    (if (g$=$21669$1a@gJ
                                                                          g$lev$30063$1a@gJ
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$30092$1a@gJ)
                                                                          (values
                                                                            (g$append$20200$1a@gJ
                                                                              g$g*$30092$1a@gJ
                                                                              g$lhs*$30091$1a@gJ)
                                                                            (g$append$20200$1a@gJ
                                                                              g$p*$30081$1a@gJ
                                                                              g$rhs*$30090$1a@gJ)
                                                                            (g$append$20200$1a@gJ
                                                                              g$g*$30092$1a@gJ
                                                                              g$q$30089$1a@gJ))))
                                                                       (g$map$20195$1a@gJ
                                                                         (case-lambda
                                                                           ((g$x$30093$1a@gJ)
                                                                            (gensym)))
                                                                         g$p*$30081$1a@gJ))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$30048$1a@gJ
                                                                             g$p*$30081$1a@gJ
                                                                             (- g$lev$30063$1a@gJ
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$30097$1a@gJ
                                                                             g$rhs2*$30098$1a@gJ
                                                                             g$p*$30099$1a@gJ)
                                                                           ((case-lambda
                                                                              ((g$p*$30100$1a@gJ
                                                                                 g$rhs2*$30101$1a@gJ
                                                                                 g$lhs2*$30102$1a@gJ)
                                                                               (values
                                                                                 (g$append$20200$1a@gJ
                                                                                   g$lhs2*$30102$1a@gJ
                                                                                   g$lhs*$30091$1a@gJ)
                                                                                 (g$append$20200$1a@gJ
                                                                                   g$rhs2*$30101$1a@gJ
                                                                                   g$rhs*$30090$1a@gJ)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$30100$1a@gJ)
                                                                                   g$q$30089$1a@gJ))))
                                                                            g$p*$30099$1a@gJ
                                                                            g$rhs2*$30098$1a@gJ
                                                                            g$lhs2*$30097$1a@gJ)))))))
                                                                 g$q$30088$1a@gJ
                                                                 g$rhs*$30087$1a@gJ
                                                                 g$lhs*$30086$1a@gJ))))))
                                                        g$ls/false$30080$1a@gJ)
                                                      ((case-lambda
                                                         ((g$t$30103$1a@gJ)
                                                          ((case-lambda
                                                             ((g$ls/false$30104$1a@gJ)
                                                              (if g$ls/false$30104$1a@gJ
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$30105$1a@gJ
                                                                       g$q$30106$1a@gJ)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$30048$1a@gJ
                                                                            g$q$30106$1a@gJ
                                                                            g$lev$30063$1a@gJ)))
                                                                       (case-lambda
                                                                         ((g$lhs*$30110$1a@gJ
                                                                            g$rhs*$30111$1a@gJ
                                                                            g$q$30112$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$q$30113$1a@gJ
                                                                                g$rhs*$30114$1a@gJ
                                                                                g$lhs*$30115$1a@gJ)
                                                                              (if (g$=$21669$1a@gJ
                                                                                    g$lev$30063$1a@gJ
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$30116$1a@gJ)
                                                                                    (values
                                                                                      (g$append$20200$1a@gJ
                                                                                        (g$map$20195$1a@gJ
                                                                                          (case-lambda
                                                                                            ((g$g$30117$1a@gJ)
                                                                                             (cons
                                                                                               g$g$30117$1a@gJ
                                                                                               '(...))))
                                                                                          g$g*$30116$1a@gJ)
                                                                                        g$lhs*$30115$1a@gJ)
                                                                                      (g$append$20200$1a@gJ
                                                                                        g$p*$30105$1a@gJ
                                                                                        g$rhs*$30114$1a@gJ)
                                                                                      (g$append$20200$1a@gJ
                                                                                        (apply
                                                                                          g$append$20200$1a@gJ
                                                                                          (g$map$20195$1a@gJ
                                                                                            (case-lambda
                                                                                              ((g$g$30118$1a@gJ)
                                                                                               (cons
                                                                                                 g$g$30118$1a@gJ
                                                                                                 '(...))))
                                                                                            g$g*$30116$1a@gJ))
                                                                                        g$q$30113$1a@gJ))))
                                                                                 (g$map$20195$1a@gJ
                                                                                   (case-lambda
                                                                                     ((g$x$30119$1a@gJ)
                                                                                      (gensym)))
                                                                                   g$p*$30105$1a@gJ))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$30048$1a@gJ
                                                                                       g$p*$30105$1a@gJ
                                                                                       (- g$lev$30063$1a@gJ
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$30123$1a@gJ
                                                                                       g$rhs2*$30124$1a@gJ
                                                                                       g$p*$30125$1a@gJ)
                                                                                     ((case-lambda
                                                                                        ((g$p*$30126$1a@gJ
                                                                                           g$rhs2*$30127$1a@gJ
                                                                                           g$lhs2*$30128$1a@gJ)
                                                                                         (values
                                                                                           (g$append$20200$1a@gJ
                                                                                             g$lhs2*$30128$1a@gJ
                                                                                             g$lhs*$30115$1a@gJ)
                                                                                           (g$append$20200$1a@gJ
                                                                                             g$rhs2*$30127$1a@gJ
                                                                                             g$rhs*$30114$1a@gJ)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$30126$1a@gJ)
                                                                                             g$q$30113$1a@gJ))))
                                                                                      g$p*$30125$1a@gJ
                                                                                      g$rhs2*$30124$1a@gJ
                                                                                      g$lhs2*$30123$1a@gJ)))))))
                                                                           g$q$30112$1a@gJ
                                                                           g$rhs*$30111$1a@gJ
                                                                           g$lhs*$30110$1a@gJ))))))
                                                                  g$ls/false$30104$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$t$30129$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30130$1a@gJ)
                                                                        (if (if g$ls/false$30130$1a@gJ
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$21669$1a@gJ
                                                                                       g$lev$30063$1a@gJ
                                                                                       '0)))
                                                                                  g$ls/false$30130$1a@gJ))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$29029$1a@gJ
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$30062$1a@gJ)))
                                                                            g$ls/false$30130$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$30131$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30132$1a@gJ)
                                                                                  (if g$ls/false$30132$1a@gJ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$30133$1a@gJ)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$30048$1a@gJ
                                                                                                g$p$30133$1a@gJ
                                                                                                (+ g$lev$30063$1a@gJ
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$30137$1a@gJ
                                                                                                g$rhs*$30138$1a@gJ
                                                                                                g$p$30139$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$p$30140$1a@gJ
                                                                                                    g$rhs*$30141$1a@gJ
                                                                                                    g$lhs*$30142$1a@gJ)
                                                                                                  (values
                                                                                                    g$lhs*$30142$1a@gJ
                                                                                                    g$rhs*$30141$1a@gJ
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$30140$1a@gJ))))
                                                                                               g$p$30139$1a@gJ
                                                                                               g$rhs*$30138$1a@gJ
                                                                                               g$lhs*$30137$1a@gJ))))))
                                                                                      g$ls/false$30132$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$30143$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30144$1a@gJ)
                                                                                            (if g$ls/false$30144$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$30145$1a@gJ
                                                                                                     g$q$30146$1a@gJ)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$30048$1a@gJ
                                                                                                          g$p$30145$1a@gJ
                                                                                                          g$lev$30063$1a@gJ)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$30153$1a@gJ
                                                                                                          g$rhs*$30154$1a@gJ
                                                                                                          g$p$30155$1a@gJ)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$30048$1a@gJ
                                                                                                               g$q$30146$1a@gJ
                                                                                                               g$lev$30063$1a@gJ)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$30156$1a@gJ
                                                                                                               g$rhs2*$30157$1a@gJ
                                                                                                               g$q$30158$1a@gJ)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$30159$1a@gJ
                                                                                                                   g$rhs2*$30160$1a@gJ
                                                                                                                   g$lhs2*$30161$1a@gJ
                                                                                                                   g$p$30162$1a@gJ
                                                                                                                   g$rhs*$30163$1a@gJ
                                                                                                                   g$lhs*$30164$1a@gJ)
                                                                                                                 (values
                                                                                                                   (g$append$20200$1a@gJ
                                                                                                                     g$lhs2*$30161$1a@gJ
                                                                                                                     g$lhs*$30164$1a@gJ)
                                                                                                                   (g$append$20200$1a@gJ
                                                                                                                     g$rhs2*$30160$1a@gJ
                                                                                                                     g$rhs*$30163$1a@gJ)
                                                                                                                   (cons
                                                                                                                     g$p$30162$1a@gJ
                                                                                                                     g$q$30159$1a@gJ))))
                                                                                                              g$q$30158$1a@gJ
                                                                                                              g$rhs2*$30157$1a@gJ
                                                                                                              g$lhs2*$30156$1a@gJ
                                                                                                              g$p$30155$1a@gJ
                                                                                                              g$rhs*$30154$1a@gJ
                                                                                                              g$lhs*$30153$1a@gJ)))))))))
                                                                                                g$ls/false$30144$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$t$30165$1a@gJ)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$30166$1a@gJ)
                                                                                                      (if g$ls/false$30166$1a@gJ
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$30167$1a@gJ)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$30048$1a@gJ
                                                                                                                    g$x*$30167$1a@gJ
                                                                                                                    g$lev$30063$1a@gJ)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$30171$1a@gJ
                                                                                                                    g$rhs*$30172$1a@gJ
                                                                                                                    g$x*$30173$1a@gJ)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$30174$1a@gJ
                                                                                                                        g$rhs*$30175$1a@gJ
                                                                                                                        g$lhs*$30176$1a@gJ)
                                                                                                                      (values
                                                                                                                        g$lhs*$30176$1a@gJ
                                                                                                                        g$rhs*$30175$1a@gJ
                                                                                                                        (g$list->vector$20647$1a@gJ
                                                                                                                          g$x*$30174$1a@gJ))))
                                                                                                                   g$x*$30173$1a@gJ
                                                                                                                   g$rhs*$30172$1a@gJ
                                                                                                                   g$lhs*$30171$1a@gJ))))))
                                                                                                          g$ls/false$30166$1a@gJ)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$30177$1a@gJ)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$30178$1a@gJ)
                                                                                                                (if g$ls/false$30178$1a@gJ
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$30062$1a@gJ)))
                                                                                                                    g$ls/false$30178$1a@gJ)
                                                                                                                  (g$syntax-violation$29029$1a@gJ
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$30177$1a@gJ))))
                                                                                                             (g$syntax-dispatch$28909$1a@gJ
                                                                                                               g$t$30177$1a@gJ
                                                                                                               '_))))
                                                                                                         g$t$30165$1a@gJ))))
                                                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                                                     g$t$30165$1a@gJ
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$30143$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$30143$1a@gJ
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$30131$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$30131$1a@gJ
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$30129$1a@gJ))))
                                                                     (g$syntax-dispatch$28909$1a@gJ
                                                                       g$t$30129$1a@gJ
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$30103$1a@gJ))))
                                                           (g$syntax-dispatch$28909$1a@gJ
                                                             g$t$30103$1a@gJ
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$30079$1a@gJ))))
                                                 (g$syntax-dispatch$28909$1a@gJ
                                                   g$t$30079$1a@gJ
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$30077$1a@gJ))))
                                       (g$syntax-dispatch$28909$1a@gJ
                                         g$t$30077$1a@gJ
                                         '#(scheme-id unsyntax)))))
                                   g$t$30064$1a@gJ))))
                             (g$syntax-dispatch$28909$1a@gJ
                               g$t$30064$1a@gJ
                               '(#(scheme-id unsyntax) any)))))
                         g$p$30062$1a@gJ)))))
           (case-lambda
             ((g$x$30049$1a@gJ)
              ((case-lambda
                 ((g$t$30050$1a@gJ)
                  ((case-lambda
                     ((g$ls/false$30051$1a@gJ)
                      (if g$ls/false$30051$1a@gJ
                        (apply
                          (case-lambda
                            ((g$e$30052$1a@gJ)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$30048$1a@gJ
                                    g$e$30052$1a@gJ
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$30056$1a@gJ
                                    g$rhs*$30057$1a@gJ
                                    g$v$30058$1a@gJ)
                                  ((case-lambda
                                     ((g$v$30059$1a@gJ
                                        g$rhs*$30060$1a@gJ
                                        g$lhs*$30061$1a@gJ)
                                      (g$bless$28872$1a@gJ
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$30060$1a@gJ)
                                          '()
                                          (list
                                            g$lhs*$30061$1a@gJ
                                            (list
                                              'syntax
                                              g$v$30059$1a@gJ))))))
                                   g$v$30058$1a@gJ
                                   g$rhs*$30057$1a@gJ
                                   g$lhs*$30056$1a@gJ))))))
                          g$ls/false$30051$1a@gJ)
                        (g$syntax-violation$29029$1a@gJ
                          '#f
                          '"invalid syntax"
                          g$t$30050$1a@gJ))))
                   (g$syntax-dispatch$28909$1a@gJ
                     g$t$30050$1a@gJ
                     '(_ any)))))
               g$x$30049$1a@gJ))))))))
   (g$define-struct-macro$28902$1a@gJ
     g$define-struct-macro$32501$1a@gJ
     (case-lambda
       ((g$stx$30179$1a@gJ)
        (g$syntax-violation$29029$1a@gJ
          '#f
          '"define-struct not supported"
          g$stx$30179$1a@gJ))))
   (g$define-record-type-macro$28903$1a@gJ
     g$define-record-type-macro$32502$1a@gJ
     (case-lambda
       ((g$x$30180$1a@gJ)
        (letrec* ((g$id$30181$1a@gJ
                    (case-lambda
                      ((g$ctxt$30433$1a@gJ . g$str*$30434$1a@gJ)
                       (g$datum->syntax$29031$1a@gJ
                         g$ctxt$30433$1a@gJ
                         (g$string->symbol$20641$1a@gJ
                           (apply
                             g$string-append$20638$1a@gJ
                             (g$map$20195$1a@gJ
                               (case-lambda
                                 ((g$x$30435$1a@gJ)
                                  (if (g$symbol?$20620$1a@gJ
                                        g$x$30435$1a@gJ)
                                    (g$symbol->string$20640$1a@gJ
                                      g$x$30435$1a@gJ)
                                    (if (g$string?$20616$1a@gJ
                                          g$x$30435$1a@gJ)
                                      g$x$30435$1a@gJ
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'define-record-type
                                          '"BUG"))))))
                               g$str*$30434$1a@gJ)))))))
                  (g$get-record-name$30182$1a@gJ
                    (case-lambda
                      ((g$spec$30424$1a@gJ)
                       ((case-lambda
                          ((g$t$30425$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30426$1a@gJ)
                               (if g$ls/false$30426$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$foo$30427$1a@gJ
                                        g$make-foo$30428$1a@gJ
                                        g$foo?$30429$1a@gJ)
                                      g$foo$30427$1a@gJ))
                                   g$ls/false$30426$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30430$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30431$1a@gJ)
                                         (if g$ls/false$30431$1a@gJ
                                           (apply
                                             (case-lambda
                                               ((g$foo$30432$1a@gJ)
                                                g$foo$30432$1a@gJ))
                                             g$ls/false$30431$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30430$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30430$1a@gJ
                                        'any))))
                                  g$t$30425$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30425$1a@gJ
                              '(any any any)))))
                        g$spec$30424$1a@gJ))))
                  (g$get-record-constructor-name$30183$1a@gJ
                    (case-lambda
                      ((g$spec$30414$1a@gJ)
                       ((case-lambda
                          ((g$t$30415$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30416$1a@gJ)
                               (if g$ls/false$30416$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$foo$30417$1a@gJ
                                        g$make-foo$30418$1a@gJ
                                        g$foo?$30419$1a@gJ)
                                      g$make-foo$30418$1a@gJ))
                                   g$ls/false$30416$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30420$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30421$1a@gJ)
                                         (if (if g$ls/false$30421$1a@gJ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30422$1a@gJ)
                                                      (g$id?$28411$1a@gJ
                                                        g$foo$30422$1a@gJ)))
                                                   g$ls/false$30421$1a@gJ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30423$1a@gJ)
                                                (g$id$30181$1a@gJ
                                                  g$foo$30423$1a@gJ
                                                  '"make-"
                                                  (g$stx->datum$28422$1a@gJ
                                                    g$foo$30423$1a@gJ))))
                                             g$ls/false$30421$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30420$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30420$1a@gJ
                                        'any))))
                                  g$t$30415$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30415$1a@gJ
                              '(any any any)))))
                        g$spec$30414$1a@gJ))))
                  (g$get-record-predicate-name$30184$1a@gJ
                    (case-lambda
                      ((g$spec$30404$1a@gJ)
                       ((case-lambda
                          ((g$t$30405$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30406$1a@gJ)
                               (if g$ls/false$30406$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$foo$30407$1a@gJ
                                        g$make-foo$30408$1a@gJ
                                        g$foo?$30409$1a@gJ)
                                      g$foo?$30409$1a@gJ))
                                   g$ls/false$30406$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30410$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30411$1a@gJ)
                                         (if (if g$ls/false$30411$1a@gJ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30412$1a@gJ)
                                                      (g$id?$28411$1a@gJ
                                                        g$foo$30412$1a@gJ)))
                                                   g$ls/false$30411$1a@gJ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30413$1a@gJ)
                                                (g$id$30181$1a@gJ
                                                  g$foo$30413$1a@gJ
                                                  (g$stx->datum$28422$1a@gJ
                                                    g$foo$30413$1a@gJ)
                                                  '"?")))
                                             g$ls/false$30411$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30410$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30410$1a@gJ
                                        'any))))
                                  g$t$30405$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30405$1a@gJ
                              '(any any any)))))
                        g$spec$30404$1a@gJ))))
                  (g$get-clause$30185$1a@gJ
                    (case-lambda
                      ((g$id$30395$1a@gJ g$ls$30396$1a@gJ)
                       ((case-lambda
                          ((g$t$30397$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30398$1a@gJ)
                               (if g$ls/false$30398$1a@gJ
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$30398$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30399$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30400$1a@gJ)
                                         (if g$ls/false$30400$1a@gJ
                                           (apply
                                             (case-lambda
                                               ((g$x$30401$1a@gJ
                                                  g$rest$30402$1a@gJ
                                                  g$ls$30403$1a@gJ)
                                                (if (g$free-id=?$28415$1a@gJ
                                                      (g$bless$28872$1a@gJ
                                                        g$id$30395$1a@gJ)
                                                      g$x$30401$1a@gJ)
                                                  (cons
                                                    g$x$30401$1a@gJ
                                                    g$rest$30402$1a@gJ)
                                                  (g$get-clause$30185$1a@gJ
                                                    g$id$30395$1a@gJ
                                                    g$ls$30403$1a@gJ))))
                                             g$ls/false$30400$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30399$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30399$1a@gJ
                                        '((any . any) . any)))))
                                  g$t$30397$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30397$1a@gJ
                              '()))))
                        g$ls$30396$1a@gJ))))
                  (g$foo-rtd-code$30186$1a@gJ
                    (case-lambda
                      ((g$name$30354$1a@gJ
                         g$clause*$30355$1a@gJ
                         g$parent-rtd-code$30356$1a@gJ)
                       (letrec* ((g$convert-field-spec*$30357$1a@gJ
                                   (case-lambda
                                     ((g$ls$30382$1a@gJ)
                                      (g$list->vector$20647$1a@gJ
                                        (g$map$20195$1a@gJ
                                          (case-lambda
                                            ((g$x$30383$1a@gJ)
                                             ((case-lambda
                                                ((g$t$30384$1a@gJ)
                                                 ((case-lambda
                                                    ((g$ls/false$30385$1a@gJ)
                                                     (if g$ls/false$30385$1a@gJ
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$30386$1a@gJ
                                                              g$rest$30387$1a@gJ)
                                                            (list
                                                              'mutable
                                                              g$name$30386$1a@gJ)))
                                                         g$ls/false$30385$1a@gJ)
                                                       ((case-lambda
                                                          ((g$t$30388$1a@gJ)
                                                           ((case-lambda
                                                              ((g$ls/false$30389$1a@gJ)
                                                               (if g$ls/false$30389$1a@gJ
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$30390$1a@gJ
                                                                        g$rest$30391$1a@gJ)
                                                                      (list
                                                                        'immutable
                                                                        g$name$30390$1a@gJ)))
                                                                   g$ls/false$30389$1a@gJ)
                                                                 ((case-lambda
                                                                    ((g$t$30392$1a@gJ)
                                                                     ((case-lambda
                                                                        ((g$ls/false$30393$1a@gJ)
                                                                         (if g$ls/false$30393$1a@gJ
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$30394$1a@gJ)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$30394$1a@gJ)))
                                                                             g$ls/false$30393$1a@gJ)
                                                                           (g$syntax-violation$29029$1a@gJ
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$30392$1a@gJ))))
                                                                      (g$syntax-dispatch$28909$1a@gJ
                                                                        g$t$30392$1a@gJ
                                                                        'any))))
                                                                  g$t$30388$1a@gJ))))
                                                            (g$syntax-dispatch$28909$1a@gJ
                                                              g$t$30388$1a@gJ
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$30384$1a@gJ))))
                                                  (g$syntax-dispatch$28909$1a@gJ
                                                    g$t$30384$1a@gJ
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$30383$1a@gJ)))
                                          g$ls$30382$1a@gJ))))))
                         ((case-lambda
                            ((g$uid-code$30358$1a@gJ
                               g$sealed?$30359$1a@gJ
                               g$opaque?$30360$1a@gJ
                               g$fields$30361$1a@gJ)
                             (g$bless$28872$1a@gJ
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$30354$1a@gJ)
                                 g$parent-rtd-code$30356$1a@gJ
                                 g$uid-code$30358$1a@gJ
                                 g$sealed?$30359$1a@gJ
                                 g$opaque?$30360$1a@gJ
                                 g$fields$30361$1a@gJ))))
                          ((case-lambda
                             ((g$t$30362$1a@gJ)
                              ((case-lambda
                                 ((g$ls/false$30363$1a@gJ)
                                  (if g$ls/false$30363$1a@gJ
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$30363$1a@gJ)
                                    ((case-lambda
                                       ((g$t$30364$1a@gJ)
                                        ((case-lambda
                                           ((g$ls/false$30365$1a@gJ)
                                            (if g$ls/false$30365$1a@gJ
                                              (apply
                                                (case-lambda
                                                  ((g$uid$30366$1a@gJ)
                                                   (list
                                                     'quote
                                                     g$uid$30366$1a@gJ)))
                                                g$ls/false$30365$1a@gJ)
                                              ((case-lambda
                                                 ((g$t$30367$1a@gJ)
                                                  ((case-lambda
                                                     ((g$ls/false$30368$1a@gJ)
                                                      (if g$ls/false$30368$1a@gJ
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$30368$1a@gJ)
                                                        (g$syntax-violation$29029$1a@gJ
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$30367$1a@gJ))))
                                                   (g$syntax-dispatch$28909$1a@gJ
                                                     g$t$30367$1a@gJ
                                                     '_))))
                                               g$t$30364$1a@gJ))))
                                         (g$syntax-dispatch$28909$1a@gJ
                                           g$t$30364$1a@gJ
                                           '(_ any)))))
                                     g$t$30362$1a@gJ))))
                               (g$syntax-dispatch$28909$1a@gJ
                                 g$t$30362$1a@gJ
                                 '(_)))))
                           (g$get-clause$30185$1a@gJ
                             'nongenerative
                             g$clause*$30355$1a@gJ))
                          ((case-lambda
                             ((g$t$30369$1a@gJ)
                              ((case-lambda
                                 ((g$ls/false$30370$1a@gJ)
                                  (if g$ls/false$30370$1a@gJ
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30370$1a@gJ)
                                    ((case-lambda
                                       ((g$t$30371$1a@gJ)
                                        ((case-lambda
                                           ((g$ls/false$30372$1a@gJ)
                                            (if g$ls/false$30372$1a@gJ
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30372$1a@gJ)
                                              (g$syntax-violation$29029$1a@gJ
                                                '#f
                                                '"invalid syntax"
                                                g$t$30371$1a@gJ))))
                                         (g$syntax-dispatch$28909$1a@gJ
                                           g$t$30371$1a@gJ
                                           '_))))
                                     g$t$30369$1a@gJ))))
                               (g$syntax-dispatch$28909$1a@gJ
                                 g$t$30369$1a@gJ
                                 '(_ #(atom #t))))))
                           (g$get-clause$30185$1a@gJ
                             'sealed
                             g$clause*$30355$1a@gJ))
                          ((case-lambda
                             ((g$t$30373$1a@gJ)
                              ((case-lambda
                                 ((g$ls/false$30374$1a@gJ)
                                  (if g$ls/false$30374$1a@gJ
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30374$1a@gJ)
                                    ((case-lambda
                                       ((g$t$30375$1a@gJ)
                                        ((case-lambda
                                           ((g$ls/false$30376$1a@gJ)
                                            (if g$ls/false$30376$1a@gJ
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30376$1a@gJ)
                                              (g$syntax-violation$29029$1a@gJ
                                                '#f
                                                '"invalid syntax"
                                                g$t$30375$1a@gJ))))
                                         (g$syntax-dispatch$28909$1a@gJ
                                           g$t$30375$1a@gJ
                                           '_))))
                                     g$t$30373$1a@gJ))))
                               (g$syntax-dispatch$28909$1a@gJ
                                 g$t$30373$1a@gJ
                                 '(_ #(atom #t))))))
                           (g$get-clause$30185$1a@gJ
                             'opaque
                             g$clause*$30355$1a@gJ))
                          ((case-lambda
                             ((g$t$30377$1a@gJ)
                              ((case-lambda
                                 ((g$ls/false$30378$1a@gJ)
                                  (if g$ls/false$30378$1a@gJ
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$30379$1a@gJ)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$30357$1a@gJ
                                             g$field-spec*$30379$1a@gJ))))
                                      g$ls/false$30378$1a@gJ)
                                    ((case-lambda
                                       ((g$t$30380$1a@gJ)
                                        ((case-lambda
                                           ((g$ls/false$30381$1a@gJ)
                                            (if g$ls/false$30381$1a@gJ
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$30381$1a@gJ)
                                              (g$syntax-violation$29029$1a@gJ
                                                '#f
                                                '"invalid syntax"
                                                g$t$30380$1a@gJ))))
                                         (g$syntax-dispatch$28909$1a@gJ
                                           g$t$30380$1a@gJ
                                           '_))))
                                     g$t$30377$1a@gJ))))
                               (g$syntax-dispatch$28909$1a@gJ
                                 g$t$30377$1a@gJ
                                 '(_ . each-any)))))
                           (g$get-clause$30185$1a@gJ
                             'fields
                             g$clause*$30355$1a@gJ)))))))
                  (g$parent-rtd-code$30187$1a@gJ
                    (case-lambda
                      ((g$clause*$30342$1a@gJ)
                       ((case-lambda
                          ((g$t$30343$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30344$1a@gJ)
                               (if g$ls/false$30344$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$name$30345$1a@gJ)
                                      (list
                                        'record-type-descriptor
                                        g$name$30345$1a@gJ)))
                                   g$ls/false$30344$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30346$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30347$1a@gJ)
                                         (if g$ls/false$30347$1a@gJ
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30348$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$30349$1a@gJ)
                                                        (if g$ls/false$30349$1a@gJ
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30350$1a@gJ
                                                                 g$rcd$30351$1a@gJ)
                                                               g$rtd$30350$1a@gJ))
                                                            g$ls/false$30349$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$30352$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$30353$1a@gJ)
                                                                  (if g$ls/false$30353$1a@gJ
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30353$1a@gJ)
                                                                    (g$syntax-violation$29029$1a@gJ
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30352$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$30352$1a@gJ
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30348$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$30348$1a@gJ
                                                       '(_ any any)))))
                                                 (g$get-clause$30185$1a@gJ
                                                   'parent-rtd
                                                   g$clause*$30342$1a@gJ))))
                                             g$ls/false$30347$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30346$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30346$1a@gJ
                                        '#(atom #f)))))
                                  g$t$30343$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30343$1a@gJ
                              '(_ any)))))
                        (g$get-clause$30185$1a@gJ
                          'parent
                          g$clause*$30342$1a@gJ)))))
                  (g$parent-rcd-code$30188$1a@gJ
                    (case-lambda
                      ((g$clause*$30330$1a@gJ)
                       ((case-lambda
                          ((g$t$30331$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30332$1a@gJ)
                               (if g$ls/false$30332$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$name$30333$1a@gJ)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$30333$1a@gJ)))
                                   g$ls/false$30332$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30334$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30335$1a@gJ)
                                         (if g$ls/false$30335$1a@gJ
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30336$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$30337$1a@gJ)
                                                        (if g$ls/false$30337$1a@gJ
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30338$1a@gJ
                                                                 g$rcd$30339$1a@gJ)
                                                               g$rcd$30339$1a@gJ))
                                                            g$ls/false$30337$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$30340$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$30341$1a@gJ)
                                                                  (if g$ls/false$30341$1a@gJ
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30341$1a@gJ)
                                                                    (g$syntax-violation$29029$1a@gJ
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30340$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$30340$1a@gJ
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30336$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$30336$1a@gJ
                                                       '(_ any any)))))
                                                 (g$get-clause$30185$1a@gJ
                                                   'parent-rtd
                                                   g$clause*$30330$1a@gJ))))
                                             g$ls/false$30335$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30334$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30334$1a@gJ
                                        '#(atom #f)))))
                                  g$t$30331$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30331$1a@gJ
                              '(_ any)))))
                        (g$get-clause$30185$1a@gJ
                          'parent
                          g$clause*$30330$1a@gJ)))))
                  (g$foo-rcd-code$30189$1a@gJ
                    (case-lambda
                      ((g$clause*$30326$1a@gJ
                         g$foo-rtd$30327$1a@gJ
                         g$protocol$30328$1a@gJ
                         g$parent-rcd-code$30329$1a@gJ)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$30327$1a@gJ
                         g$parent-rcd-code$30329$1a@gJ
                         g$protocol$30328$1a@gJ))))
                  (g$get-protocol-code$30190$1a@gJ
                    (case-lambda
                      ((g$clause*$30320$1a@gJ)
                       ((case-lambda
                          ((g$t$30321$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30322$1a@gJ)
                               (if g$ls/false$30322$1a@gJ
                                 (apply
                                   (case-lambda
                                     ((g$expr$30323$1a@gJ)
                                      g$expr$30323$1a@gJ))
                                   g$ls/false$30322$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30324$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30325$1a@gJ)
                                         (if g$ls/false$30325$1a@gJ
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$30325$1a@gJ)
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$t$30324$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30324$1a@gJ
                                        '_))))
                                  g$t$30321$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30321$1a@gJ
                              '(_ any)))))
                        (g$get-clause$30185$1a@gJ
                          'protocol
                          g$clause*$30320$1a@gJ)))))
                  (g$get-fields$30191$1a@gJ
                    (case-lambda
                      ((g$clause*$30311$1a@gJ)
                       ((case-lambda
                          ((g$t$30312$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30313$1a@gJ)
                               (if g$ls/false$30313$1a@gJ
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$30313$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30314$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30315$1a@gJ)
                                         (if g$ls/false$30315$1a@gJ
                                           (apply
                                             (case-lambda
                                               ((g$f*$30316$1a@gJ)
                                                g$f*$30316$1a@gJ))
                                             g$ls/false$30315$1a@gJ)
                                           ((case-lambda
                                              ((g$t$30317$1a@gJ)
                                               ((case-lambda
                                                  ((g$ls/false$30318$1a@gJ)
                                                   (if g$ls/false$30318$1a@gJ
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$30319$1a@gJ)
                                                          (g$get-fields$30191$1a@gJ
                                                            g$rest$30319$1a@gJ)))
                                                       g$ls/false$30318$1a@gJ)
                                                     (g$syntax-violation$29029$1a@gJ
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30317$1a@gJ))))
                                                (g$syntax-dispatch$28909$1a@gJ
                                                  g$t$30317$1a@gJ
                                                  '(_ . any)))))
                                            g$t$30314$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30314$1a@gJ
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$30312$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30312$1a@gJ
                              '()))))
                        g$clause*$30311$1a@gJ))))
                  (g$get-mutator-indices$30192$1a@gJ
                    (case-lambda
                      ((g$fields$30299$1a@gJ)
                       ((letrec ((g$f$30300$1a@gJ
                                   (case-lambda
                                     ((g$fields$30301$1a@gJ
                                        g$i$30302$1a@gJ)
                                      ((case-lambda
                                         ((g$t$30303$1a@gJ)
                                          ((case-lambda
                                             ((g$ls/false$30304$1a@gJ)
                                              (if g$ls/false$30304$1a@gJ
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$30304$1a@gJ)
                                                ((case-lambda
                                                   ((g$t$30305$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$30306$1a@gJ)
                                                        (if g$ls/false$30306$1a@gJ
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$30307$1a@gJ)
                                                               (cons
                                                                 g$i$30302$1a@gJ
                                                                 (g$f$30300$1a@gJ
                                                                   g$rest$30307$1a@gJ
                                                                   (+ g$i$30302$1a@gJ
                                                                      '1)))))
                                                            g$ls/false$30306$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$30308$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$30309$1a@gJ)
                                                                  (if g$ls/false$30309$1a@gJ
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$30310$1a@gJ)
                                                                         (g$f$30300$1a@gJ
                                                                           g$rest$30310$1a@gJ
                                                                           (+ g$i$30302$1a@gJ
                                                                              '1))))
                                                                      g$ls/false$30309$1a@gJ)
                                                                    (g$syntax-violation$29029$1a@gJ
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30308$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$30308$1a@gJ
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$30305$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$30305$1a@gJ
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$30303$1a@gJ))))
                                           (g$syntax-dispatch$28909$1a@gJ
                                             g$t$30303$1a@gJ
                                             '()))))
                                       g$fields$30301$1a@gJ)))))
                          g$f$30300$1a@gJ)
                        g$fields$30299$1a@gJ
                        '0))))
                  (g$get-mutators$30193$1a@gJ
                    (case-lambda
                      ((g$foo$30278$1a@gJ g$fields$30279$1a@gJ)
                       (letrec* ((g$gen-name$30280$1a@gJ
                                   (case-lambda
                                     ((g$x$30298$1a@gJ)
                                      (g$datum->syntax$29031$1a@gJ
                                        g$foo$30278$1a@gJ
                                        (g$string->symbol$20641$1a@gJ
                                          (g$string-append$20638$1a@gJ
                                            (g$symbol->string$20640$1a@gJ
                                              (g$syntax->datum$29032$1a@gJ
                                                g$foo$30278$1a@gJ))
                                            '"-"
                                            (g$symbol->string$20640$1a@gJ
                                              (g$syntax->datum$29032$1a@gJ
                                                g$x$30298$1a@gJ))
                                            '"-set!")))))))
                         ((letrec ((g$f$30281$1a@gJ
                                     (case-lambda
                                       ((g$fields$30282$1a@gJ)
                                        ((case-lambda
                                           ((g$t$30283$1a@gJ)
                                            ((case-lambda
                                               ((g$ls/false$30284$1a@gJ)
                                                (if g$ls/false$30284$1a@gJ
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$30284$1a@gJ)
                                                  ((case-lambda
                                                     ((g$t$30285$1a@gJ)
                                                      ((case-lambda
                                                         ((g$ls/false$30286$1a@gJ)
                                                          (if g$ls/false$30286$1a@gJ
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30287$1a@gJ
                                                                   g$accessor$30288$1a@gJ
                                                                   g$mutator$30289$1a@gJ
                                                                   g$rest$30290$1a@gJ)
                                                                 (cons
                                                                   g$mutator$30289$1a@gJ
                                                                   (g$f$30281$1a@gJ
                                                                     g$rest$30290$1a@gJ))))
                                                              g$ls/false$30286$1a@gJ)
                                                            ((case-lambda
                                                               ((g$t$30291$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$ls/false$30292$1a@gJ)
                                                                    (if g$ls/false$30292$1a@gJ
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30293$1a@gJ
                                                                             g$rest$30294$1a@gJ)
                                                                           (cons
                                                                             (g$gen-name$30280$1a@gJ
                                                                               g$name$30293$1a@gJ)
                                                                             (g$f$30281$1a@gJ
                                                                               g$rest$30294$1a@gJ))))
                                                                        g$ls/false$30292$1a@gJ)
                                                                      ((case-lambda
                                                                         ((g$t$30295$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30296$1a@gJ)
                                                                              (if g$ls/false$30296$1a@gJ
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$30297$1a@gJ)
                                                                                     (g$f$30281$1a@gJ
                                                                                       g$rest$30297$1a@gJ)))
                                                                                  g$ls/false$30296$1a@gJ)
                                                                                (g$syntax-violation$29029$1a@gJ
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$30295$1a@gJ))))
                                                                           (g$syntax-dispatch$28909$1a@gJ
                                                                             g$t$30295$1a@gJ
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$30291$1a@gJ))))
                                                                 (g$syntax-dispatch$28909$1a@gJ
                                                                   g$t$30291$1a@gJ
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$30285$1a@gJ))))
                                                       (g$syntax-dispatch$28909$1a@gJ
                                                         g$t$30285$1a@gJ
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$30283$1a@gJ))))
                                             (g$syntax-dispatch$28909$1a@gJ
                                               g$t$30283$1a@gJ
                                               '()))))
                                         g$fields$30282$1a@gJ)))))
                            g$f$30281$1a@gJ)
                          g$fields$30279$1a@gJ)))))
                  (g$get-accessors$30194$1a@gJ
                    (case-lambda
                      ((g$foo$30244$1a@gJ g$fields$30245$1a@gJ)
                       (letrec* ((g$gen-name$30246$1a@gJ
                                   (case-lambda
                                     ((g$x$30277$1a@gJ)
                                      (g$datum->syntax$29031$1a@gJ
                                        g$foo$30244$1a@gJ
                                        (g$string->symbol$20641$1a@gJ
                                          (g$string-append$20638$1a@gJ
                                            (g$symbol->string$20640$1a@gJ
                                              (g$syntax->datum$29032$1a@gJ
                                                g$foo$30244$1a@gJ))
                                            '"-"
                                            (g$symbol->string$20640$1a@gJ
                                              (g$syntax->datum$29032$1a@gJ
                                                g$x$30277$1a@gJ)))))))))
                         (g$map$20195$1a@gJ
                           (case-lambda
                             ((g$field$30247$1a@gJ)
                              ((case-lambda
                                 ((g$t$30248$1a@gJ)
                                  ((case-lambda
                                     ((g$ls/false$30249$1a@gJ)
                                      (if (if g$ls/false$30249$1a@gJ
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$30250$1a@gJ
                                                     g$accessor$30251$1a@gJ
                                                     g$mutator$30252$1a@gJ)
                                                   (g$id?$28411$1a@gJ
                                                     g$accessor$30251$1a@gJ)))
                                                g$ls/false$30249$1a@gJ))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$30253$1a@gJ
                                               g$accessor$30254$1a@gJ
                                               g$mutator$30255$1a@gJ)
                                             g$accessor$30254$1a@gJ))
                                          g$ls/false$30249$1a@gJ)
                                        ((case-lambda
                                           ((g$t$30256$1a@gJ)
                                            ((case-lambda
                                               ((g$ls/false$30257$1a@gJ)
                                                (if (if g$ls/false$30257$1a@gJ
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$30258$1a@gJ
                                                               g$accessor$30259$1a@gJ)
                                                             (g$id?$28411$1a@gJ
                                                               g$accessor$30259$1a@gJ)))
                                                          g$ls/false$30257$1a@gJ))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$30260$1a@gJ
                                                         g$accessor$30261$1a@gJ)
                                                       g$accessor$30261$1a@gJ))
                                                    g$ls/false$30257$1a@gJ)
                                                  ((case-lambda
                                                     ((g$t$30262$1a@gJ)
                                                      ((case-lambda
                                                         ((g$ls/false$30263$1a@gJ)
                                                          (if (if g$ls/false$30263$1a@gJ
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$30264$1a@gJ)
                                                                       (g$id?$28411$1a@gJ
                                                                         g$name$30264$1a@gJ)))
                                                                    g$ls/false$30263$1a@gJ))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30265$1a@gJ)
                                                                 (g$gen-name$30246$1a@gJ
                                                                   g$name$30265$1a@gJ)))
                                                              g$ls/false$30263$1a@gJ)
                                                            ((case-lambda
                                                               ((g$t$30266$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$ls/false$30267$1a@gJ)
                                                                    (if (if g$ls/false$30267$1a@gJ
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$30268$1a@gJ)
                                                                                 (g$id?$28411$1a@gJ
                                                                                   g$name$30268$1a@gJ)))
                                                                              g$ls/false$30267$1a@gJ))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30269$1a@gJ)
                                                                           (g$gen-name$30246$1a@gJ
                                                                             g$name$30269$1a@gJ)))
                                                                        g$ls/false$30267$1a@gJ)
                                                                      ((case-lambda
                                                                         ((g$t$30270$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30271$1a@gJ)
                                                                              (if (if g$ls/false$30271$1a@gJ
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$30272$1a@gJ)
                                                                                           (g$id?$28411$1a@gJ
                                                                                             g$name$30272$1a@gJ)))
                                                                                        g$ls/false$30271$1a@gJ))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$30273$1a@gJ)
                                                                                     (g$gen-name$30246$1a@gJ
                                                                                       g$name$30273$1a@gJ)))
                                                                                  g$ls/false$30271$1a@gJ)
                                                                                ((case-lambda
                                                                                   ((g$t$30274$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$30275$1a@gJ)
                                                                                        (if g$ls/false$30275$1a@gJ
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$30276$1a@gJ)
                                                                                               (g$syntax-violation$29029$1a@gJ
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$30247$1a@gJ)))
                                                                                            g$ls/false$30275$1a@gJ)
                                                                                          (g$syntax-violation$29029$1a@gJ
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$30274$1a@gJ))))
                                                                                     (g$syntax-dispatch$28909$1a@gJ
                                                                                       g$t$30274$1a@gJ
                                                                                       'any))))
                                                                                 g$t$30270$1a@gJ))))
                                                                           (g$syntax-dispatch$28909$1a@gJ
                                                                             g$t$30270$1a@gJ
                                                                             'any))))
                                                                       g$t$30266$1a@gJ))))
                                                                 (g$syntax-dispatch$28909$1a@gJ
                                                                   g$t$30266$1a@gJ
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$30262$1a@gJ))))
                                                       (g$syntax-dispatch$28909$1a@gJ
                                                         g$t$30262$1a@gJ
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$30256$1a@gJ))))
                                             (g$syntax-dispatch$28909$1a@gJ
                                               g$t$30256$1a@gJ
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$30248$1a@gJ))))
                                   (g$syntax-dispatch$28909$1a@gJ
                                     g$t$30248$1a@gJ
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$30247$1a@gJ)))
                           g$fields$30245$1a@gJ)))))
                  (g$enumerate$30195$1a@gJ
                    (case-lambda
                      ((g$ls$30240$1a@gJ)
                       ((letrec ((g$f$30241$1a@gJ
                                   (case-lambda
                                     ((g$ls$30242$1a@gJ g$i$30243$1a@gJ)
                                      (if (null? g$ls$30242$1a@gJ)
                                        '()
                                        (begin
                                          '#f
                                          (cons
                                            g$i$30243$1a@gJ
                                            (g$f$30241$1a@gJ
                                              (cdr g$ls$30242$1a@gJ)
                                              (+ g$i$30243$1a@gJ
                                                 '1)))))))))
                          g$f$30241$1a@gJ)
                        g$ls$30240$1a@gJ
                        '0))))
                  (g$do-define-record$30196$1a@gJ
                    (case-lambda
                      ((g$namespec$30220$1a@gJ g$clause*$30221$1a@gJ)
                       ((case-lambda
                          ((g$foo$30222$1a@gJ)
                           ((case-lambda
                              ((g$foo-rtd$30223$1a@gJ)
                               ((case-lambda
                                  ((g$foo-rcd$30224$1a@gJ)
                                   ((case-lambda
                                      ((g$protocol$30225$1a@gJ)
                                       ((case-lambda
                                          ((g$make-foo$30226$1a@gJ)
                                           ((case-lambda
                                              ((g$fields$30227$1a@gJ)
                                               ((case-lambda
                                                  ((g$idx*$30228$1a@gJ)
                                                   ((case-lambda
                                                      ((g$foo-x*$30229$1a@gJ)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$30230$1a@gJ)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$30231$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$foo?$30232$1a@gJ)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$30233$1a@gJ)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$30234$1a@gJ)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$30235$1a@gJ)
                                                                               (g$bless$28872$1a@gJ
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$30223$1a@gJ
                                                                                       g$foo-rtd-code$30233$1a@gJ)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$30225$1a@gJ
                                                                                         g$protocol-code$30235$1a@gJ)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$30224$1a@gJ
                                                                                           g$foo-rcd-code$30234$1a@gJ)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$30222$1a@gJ
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$30223$1a@gJ)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$30224$1a@gJ)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$30232$1a@gJ
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$30223$1a@gJ))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$30226$1a@gJ
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$30224$1a@gJ))
                                                                                               (g$append$20200$1a@gJ
                                                                                                 (g$map$20195$1a@gJ
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$30236$1a@gJ
                                                                                                        g$idx$30237$1a@gJ)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$30236$1a@gJ
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$30223$1a@gJ
                                                                                                          g$idx$30237$1a@gJ))))
                                                                                                   g$foo-x*$30229$1a@gJ
                                                                                                   g$idx*$30228$1a@gJ)
                                                                                                 (g$map$20195$1a@gJ
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$30238$1a@gJ
                                                                                                        g$idx$30239$1a@gJ)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$30238$1a@gJ
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$30223$1a@gJ
                                                                                                          g$idx$30239$1a@gJ))))
                                                                                                   g$set-foo-x!*$30230$1a@gJ
                                                                                                   g$set-foo-idx*$30231$1a@gJ))))))))))))
                                                                            (g$get-protocol-code$30190$1a@gJ
                                                                              g$clause*$30221$1a@gJ))))
                                                                        (g$foo-rcd-code$30189$1a@gJ
                                                                          g$clause*$30221$1a@gJ
                                                                          g$foo-rtd$30223$1a@gJ
                                                                          g$protocol$30225$1a@gJ
                                                                          (g$parent-rcd-code$30188$1a@gJ
                                                                            g$clause*$30221$1a@gJ)))))
                                                                    (g$foo-rtd-code$30186$1a@gJ
                                                                      g$foo$30222$1a@gJ
                                                                      g$clause*$30221$1a@gJ
                                                                      (g$parent-rtd-code$30187$1a@gJ
                                                                        g$clause*$30221$1a@gJ)))))
                                                                (g$get-record-predicate-name$30184$1a@gJ
                                                                  g$namespec$30220$1a@gJ))))
                                                            (g$get-mutator-indices$30192$1a@gJ
                                                              g$fields$30227$1a@gJ))))
                                                        (g$get-mutators$30193$1a@gJ
                                                          g$foo$30222$1a@gJ
                                                          g$fields$30227$1a@gJ))))
                                                    (g$get-accessors$30194$1a@gJ
                                                      g$foo$30222$1a@gJ
                                                      g$fields$30227$1a@gJ))))
                                                (g$enumerate$30195$1a@gJ
                                                  g$fields$30227$1a@gJ))))
                                            (g$get-fields$30191$1a@gJ
                                              g$clause*$30221$1a@gJ))))
                                        (g$get-record-constructor-name$30183$1a@gJ
                                          g$namespec$30220$1a@gJ))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$30182$1a@gJ
                          g$namespec$30220$1a@gJ)))))
                  (g$verify-clauses$30197$1a@gJ
                    (case-lambda
                      ((g$x$30202$1a@gJ g$cls*$30203$1a@gJ)
                       (letrec* ((g$valid-kwds$30204$1a@gJ
                                   (g$map$20195$1a@gJ
                                     g$bless$28872$1a@gJ
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$30205$1a@gJ
                                   (case-lambda
                                     ((g$x$30217$1a@gJ g$ls$30218$1a@gJ)
                                      (if (pair? g$ls$30218$1a@gJ)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$30219$1a@gJ)
                                              (if g$t$30219$1a@gJ
                                                g$t$30219$1a@gJ
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$30205$1a@gJ
                                                    g$x$30217$1a@gJ
                                                    (cdr g$ls$30218$1a@gJ))))))
                                           (g$free-id=?$28415$1a@gJ
                                             g$x$30217$1a@gJ
                                             (car g$ls$30218$1a@gJ))))
                                        '#f)))))
                         ((letrec ((g$f$30206$1a@gJ
                                     (case-lambda
                                       ((g$cls*$30207$1a@gJ
                                          g$seen*$30208$1a@gJ)
                                        (if (not (null?
                                                   g$cls*$30207$1a@gJ))
                                          ((case-lambda
                                             ((g$t$30209$1a@gJ)
                                              ((case-lambda
                                                 ((g$ls/false$30210$1a@gJ)
                                                  (if g$ls/false$30210$1a@gJ
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$30211$1a@gJ
                                                           g$rest$30212$1a@gJ)
                                                         (if ((case-lambda
                                                                ((g$t$30213$1a@gJ)
                                                                 (if g$t$30213$1a@gJ
                                                                   g$t$30213$1a@gJ
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$30205$1a@gJ
                                                                            g$kwd$30211$1a@gJ
                                                                            g$valid-kwds$30204$1a@gJ))))))
                                                              (not (g$id?$28411$1a@gJ
                                                                     g$kwd$30211$1a@gJ)))
                                                           (g$syntax-violation$29029$1a@gJ
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$30211$1a@gJ)
                                                           (if (g$bound-id-member?$28418$1a@gJ
                                                                 g$kwd$30211$1a@gJ
                                                                 g$seen*$30208$1a@gJ)
                                                             (g$syntax-violation$29029$1a@gJ
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$30202$1a@gJ
                                                               g$kwd$30211$1a@gJ)
                                                             (begin
                                                               '#f
                                                               (g$f$30206$1a@gJ
                                                                 (cdr g$cls*$30207$1a@gJ)
                                                                 (cons
                                                                   g$kwd$30211$1a@gJ
                                                                   g$seen*$30208$1a@gJ)))))))
                                                      g$ls/false$30210$1a@gJ)
                                                    ((case-lambda
                                                       ((g$t$30214$1a@gJ)
                                                        ((case-lambda
                                                           ((g$ls/false$30215$1a@gJ)
                                                            (if g$ls/false$30215$1a@gJ
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$30216$1a@gJ)
                                                                   (g$syntax-violation$29029$1a@gJ
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$30216$1a@gJ)))
                                                                g$ls/false$30215$1a@gJ)
                                                              (g$syntax-violation$29029$1a@gJ
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30214$1a@gJ))))
                                                         (g$syntax-dispatch$28909$1a@gJ
                                                           g$t$30214$1a@gJ
                                                           'any))))
                                                     g$t$30209$1a@gJ))))
                                               (g$syntax-dispatch$28909$1a@gJ
                                                 g$t$30209$1a@gJ
                                                 '(any . any)))))
                                           (car g$cls*$30207$1a@gJ))
                                          (void))))))
                            g$f$30206$1a@gJ)
                          g$cls*$30203$1a@gJ
                          '()))))))
          ((case-lambda
             ((g$t$30198$1a@gJ)
              ((case-lambda
                 ((g$ls/false$30199$1a@gJ)
                  (if g$ls/false$30199$1a@gJ
                    (apply
                      (case-lambda
                        ((g$namespec$30200$1a@gJ g$clause*$30201$1a@gJ)
                         (begin
                           (g$verify-clauses$30197$1a@gJ
                             g$x$30180$1a@gJ
                             g$clause*$30201$1a@gJ)
                           (g$do-define-record$30196$1a@gJ
                             g$namespec$30200$1a@gJ
                             g$clause*$30201$1a@gJ))))
                      g$ls/false$30199$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$30198$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$30198$1a@gJ
                 '(_ any . each-any)))))
           g$x$30180$1a@gJ)))))
   (g$define-condition-type-macro$28904$1a@gJ
     g$define-condition-type-macro$32503$1a@gJ
     (case-lambda
       ((g$x$30436$1a@gJ)
        (letrec* ((g$mkname$30437$1a@gJ
                    (case-lambda
                      ((g$name$30460$1a@gJ g$suffix$30461$1a@gJ)
                       (g$datum->syntax$29031$1a@gJ
                         g$name$30460$1a@gJ
                         (g$string->symbol$20641$1a@gJ
                           (g$string-append$20638$1a@gJ
                             (g$symbol->string$20640$1a@gJ
                               (g$syntax->datum$29032$1a@gJ
                                 g$name$30460$1a@gJ))
                             g$suffix$30461$1a@gJ)))))))
          ((case-lambda
             ((g$t$30438$1a@gJ)
              ((case-lambda
                 ((g$ls/false$30439$1a@gJ)
                  (if (if g$ls/false$30439$1a@gJ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$30440$1a@gJ
                                 g$name$30441$1a@gJ
                                 g$super$30442$1a@gJ
                                 g$constructor$30443$1a@gJ
                                 g$predicate$30444$1a@gJ
                                 g$field*$30445$1a@gJ
                                 g$accessor*$30446$1a@gJ)
                               (if (g$id?$28411$1a@gJ
                                     g$name$30441$1a@gJ)
                                 (if (g$id?$28411$1a@gJ
                                       g$super$30442$1a@gJ)
                                   (if (g$id?$28411$1a@gJ
                                         g$constructor$30443$1a@gJ)
                                     (if (g$id?$28411$1a@gJ
                                           g$predicate$30444$1a@gJ)
                                       (if (g$for-all$20193$1a@gJ
                                             g$id?$28411$1a@gJ
                                             g$field*$30445$1a@gJ)
                                         (begin
                                           '#f
                                           (g$for-all$20193$1a@gJ
                                             g$id?$28411$1a@gJ
                                             g$accessor*$30446$1a@gJ))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$30439$1a@gJ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$30447$1a@gJ
                           g$name$30448$1a@gJ
                           g$super$30449$1a@gJ
                           g$constructor$30450$1a@gJ
                           g$predicate$30451$1a@gJ
                           g$field*$30452$1a@gJ
                           g$accessor*$30453$1a@gJ)
                         ((case-lambda
                            ((g$aux-accessor*$30454$1a@gJ)
                             (g$bless$28872$1a@gJ
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$30448$1a@gJ
                                         g$constructor$30450$1a@gJ
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$30449$1a@gJ)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$20195$1a@gJ
                                               (case-lambda
                                                 ((g$field$30455$1a@gJ
                                                    g$aux$30456$1a@gJ)
                                                  (list
                                                    'immutable
                                                    g$field$30455$1a@gJ
                                                    g$aux$30456$1a@gJ)))
                                               g$field*$30452$1a@gJ
                                               g$aux-accessor*$30454$1a@gJ))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$30451$1a@gJ
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$30448$1a@gJ)))
                                     (g$map$20195$1a@gJ
                                       (case-lambda
                                         ((g$accessor$30457$1a@gJ
                                            g$aux$30458$1a@gJ)
                                          (list
                                            'define
                                            g$accessor$30457$1a@gJ
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$30448$1a@gJ)
                                              g$aux$30458$1a@gJ))))
                                       g$accessor*$30453$1a@gJ
                                       g$aux-accessor*$30454$1a@gJ)))))))
                          (g$map$20195$1a@gJ
                            (case-lambda ((g$x$30459$1a@gJ) (gensym)))
                            g$accessor*$30453$1a@gJ))))
                      g$ls/false$30439$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$30438$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$30438$1a@gJ
                 '(any any any any any . #(each (any any)))))))
           g$x$30436$1a@gJ)))))
   (g$incorrect-usage-macro$28905$1a@gJ
     g$incorrect-usage-macro$32504$1a@gJ
     (case-lambda
       ((g$e$30462$1a@gJ)
        (g$syntax-violation$29029$1a@gJ
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$30462$1a@gJ))))
   (g$parameterize-macro$28906$1a@gJ
     g$parameterize-macro$32505$1a@gJ
     (case-lambda
       ((g$e$30463$1a@gJ)
        ((case-lambda
           ((g$t$30464$1a@gJ)
            ((case-lambda
               ((g$ls/false$30465$1a@gJ)
                (if g$ls/false$30465$1a@gJ
                  (apply
                    (case-lambda
                      ((g$b$30466$1a@gJ g$b*$30467$1a@gJ)
                       (g$bless$28872$1a@gJ
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$30466$1a@gJ
                               g$b*$30467$1a@gJ))))))
                    g$ls/false$30465$1a@gJ)
                  ((case-lambda
                     ((g$t$30468$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$30469$1a@gJ)
                          (if g$ls/false$30469$1a@gJ
                            (apply
                              (case-lambda
                                ((g$olhs*$30470$1a@gJ
                                   g$orhs*$30471$1a@gJ
                                   g$b$30472$1a@gJ
                                   g$b*$30473$1a@gJ)
                                 ((case-lambda
                                    ((g$lhs*$30474$1a@gJ
                                       g$rhs*$30475$1a@gJ)
                                     (g$bless$28872$1a@gJ
                                       (cons
                                         (list
                                           'lambda
                                           (g$append$20200$1a@gJ
                                             g$lhs*$30474$1a@gJ
                                             g$rhs*$30475$1a@gJ)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$20195$1a@gJ
                                                       (case-lambda
                                                         ((g$lhs$30476$1a@gJ
                                                            g$rhs$30477$1a@gJ)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$30476$1a@gJ)))
                                                            (list
                                                              g$lhs$30476$1a@gJ
                                                              g$rhs$30477$1a@gJ)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$30477$1a@gJ
                                                                '(t))))))
                                                       g$lhs*$30474$1a@gJ
                                                       g$rhs*$30475$1a@gJ)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$30472$1a@gJ
                                                         g$b*$30473$1a@gJ)))
                                                   '(swap))))))
                                         (g$append$20200$1a@gJ
                                           g$olhs*$30470$1a@gJ
                                           g$orhs*$30471$1a@gJ)))))
                                  (g$generate-temporaries$29018$1a@gJ
                                    g$olhs*$30470$1a@gJ)
                                  (g$generate-temporaries$29018$1a@gJ
                                    g$orhs*$30471$1a@gJ))))
                              g$ls/false$30469$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$30468$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$30468$1a@gJ
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$30464$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$30464$1a@gJ
               '(_ () any . each-any)))))
         g$e$30463$1a@gJ))))
   (g$foreign-call-transformer$28907$1a@gJ
     g$foreign-call-transformer$32506$1a@gJ
     (case-lambda
       ((g$e$30478$1a@gJ g$r$30479$1a@gJ g$mr$30480$1a@gJ)
        ((case-lambda
           ((g$t$30481$1a@gJ)
            ((case-lambda
               ((g$ls/false$30482$1a@gJ)
                (if g$ls/false$30482$1a@gJ
                  (apply
                    (case-lambda
                      ((g$name$30483$1a@gJ g$arg*$30484$1a@gJ)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$28927$1a@gJ
                             g$name$30483$1a@gJ
                             g$r$30479$1a@gJ
                             g$mr$30480$1a@gJ)
                           (g$chi-expr*$28925$1a@gJ
                             g$arg*$30484$1a@gJ
                             g$r$30479$1a@gJ
                             g$mr$30480$1a@gJ)))))
                    g$ls/false$30482$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$30481$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$30481$1a@gJ
               '(_ any . each-any)))))
         g$e$30478$1a@gJ))))
   (g$convert-pattern$28908$1a@gJ
     g$convert-pattern$32507$1a@gJ
     (case-lambda
       ((g$pattern$30485$1a@gJ g$keys$30486$1a@gJ)
        (letrec* ((g$cvt*$30487$1a@gJ
                    (case-lambda
                      ((g$p*$30567$1a@gJ
                         g$n$30568$1a@gJ
                         g$ids$30569$1a@gJ)
                       (if (null? g$p*$30567$1a@gJ)
                         (values '() g$ids$30569$1a@gJ)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$30487$1a@gJ
                                (cdr g$p*$30567$1a@gJ)
                                g$n$30568$1a@gJ
                                g$ids$30569$1a@gJ)))
                           (case-lambda
                             ((g$y$30572$1a@gJ g$ids$30573$1a@gJ)
                              ((case-lambda
                                 ((g$ids$30574$1a@gJ g$y$30575$1a@gJ)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$30488$1a@gJ
                                         (car g$p*$30567$1a@gJ)
                                         g$n$30568$1a@gJ
                                         g$ids$30574$1a@gJ)))
                                    (case-lambda
                                      ((g$x$30578$1a@gJ
                                         g$ids$30579$1a@gJ)
                                       ((case-lambda
                                          ((g$ids$30580$1a@gJ
                                             g$x$30581$1a@gJ)
                                           (values
                                             (cons
                                               g$x$30581$1a@gJ
                                               g$y$30575$1a@gJ)
                                             g$ids$30580$1a@gJ)))
                                        g$ids$30579$1a@gJ
                                        g$x$30578$1a@gJ))))))
                               g$ids$30573$1a@gJ
                               g$y$30572$1a@gJ))))))))
                  (g$cvt$30488$1a@gJ
                    (case-lambda
                      ((g$p$30489$1a@gJ
                         g$n$30490$1a@gJ
                         g$ids$30491$1a@gJ)
                       ((case-lambda
                          ((g$t$30492$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$30493$1a@gJ)
                               (if (if g$ls/false$30493$1a@gJ
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$30494$1a@gJ)
                                            (g$id?$28411$1a@gJ
                                              g$id$30494$1a@gJ)))
                                         g$ls/false$30493$1a@gJ))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$30495$1a@gJ)
                                      (if (g$bound-id-member?$28418$1a@gJ
                                            g$p$30489$1a@gJ
                                            g$keys$30486$1a@gJ)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$30489$1a@gJ)
                                          g$ids$30491$1a@gJ)
                                        (if (g$free-id=?$28415$1a@gJ
                                              g$p$30489$1a@gJ
                                              (g$scheme-stx$28852$1a@gJ
                                                '_))
                                          (values '_ g$ids$30491$1a@gJ)
                                          (begin
                                            '#f
                                            (values
                                              'any
                                              (cons
                                                (cons
                                                  g$p$30489$1a@gJ
                                                  g$n$30490$1a@gJ)
                                                g$ids$30491$1a@gJ)))))))
                                   g$ls/false$30493$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30496$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$30497$1a@gJ)
                                         (if (if g$ls/false$30497$1a@gJ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$30498$1a@gJ
                                                        g$dots$30499$1a@gJ)
                                                      (g$ellipsis?$28910$1a@gJ
                                                        g$dots$30499$1a@gJ)))
                                                   g$ls/false$30497$1a@gJ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$30500$1a@gJ
                                                  g$dots$30501$1a@gJ)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$30488$1a@gJ
                                                       g$p$30500$1a@gJ
                                                       (+ g$n$30490$1a@gJ
                                                          '1)
                                                       g$ids$30491$1a@gJ)))
                                                  (case-lambda
                                                    ((g$p$30504$1a@gJ
                                                       g$ids$30505$1a@gJ)
                                                     ((case-lambda
                                                        ((g$ids$30506$1a@gJ
                                                           g$p$30507$1a@gJ)
                                                         (values
                                                           (if (eq? g$p$30507$1a@gJ
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$30507$1a@gJ))
                                                           g$ids$30506$1a@gJ)))
                                                      g$ids$30505$1a@gJ
                                                      g$p$30504$1a@gJ))))))
                                             g$ls/false$30497$1a@gJ)
                                           ((case-lambda
                                              ((g$t$30508$1a@gJ)
                                               ((case-lambda
                                                  ((g$ls/false$30509$1a@gJ)
                                                   (if (if g$ls/false$30509$1a@gJ
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$30510$1a@gJ
                                                                  g$dots$30511$1a@gJ
                                                                  g$ys$30512$1a@gJ
                                                                  g$z$30513$1a@gJ)
                                                                (g$ellipsis?$28910$1a@gJ
                                                                  g$dots$30511$1a@gJ)))
                                                             g$ls/false$30509$1a@gJ))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$30514$1a@gJ
                                                            g$dots$30515$1a@gJ
                                                            g$ys$30516$1a@gJ
                                                            g$z$30517$1a@gJ)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$30488$1a@gJ
                                                                 g$z$30517$1a@gJ
                                                                 g$n$30490$1a@gJ
                                                                 g$ids$30491$1a@gJ)))
                                                            (case-lambda
                                                              ((g$z$30520$1a@gJ
                                                                 g$ids$30521$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$ids$30522$1a@gJ
                                                                     g$z$30523$1a@gJ)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$30487$1a@gJ
                                                                          g$ys$30516$1a@gJ
                                                                          g$n$30490$1a@gJ
                                                                          g$ids$30522$1a@gJ)))
                                                                     (case-lambda
                                                                       ((g$ys$30526$1a@gJ
                                                                          g$ids$30527$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$ids$30528$1a@gJ
                                                                              g$ys$30529$1a@gJ)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$30488$1a@gJ
                                                                                   g$x$30514$1a@gJ
                                                                                   (+ g$n$30490$1a@gJ
                                                                                      '1)
                                                                                   g$ids$30528$1a@gJ)))
                                                                              (case-lambda
                                                                                ((g$x$30532$1a@gJ
                                                                                   g$ids$30533$1a@gJ)
                                                                                 ((case-lambda
                                                                                    ((g$ids$30534$1a@gJ
                                                                                       g$x$30535$1a@gJ)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$30535$1a@gJ
                                                                                         (g$reverse$20656$1a@gJ
                                                                                           g$ys$30529$1a@gJ)
                                                                                         g$z$30523$1a@gJ)
                                                                                       g$ids$30534$1a@gJ)))
                                                                                  g$ids$30533$1a@gJ
                                                                                  g$x$30532$1a@gJ))))))
                                                                         g$ids$30527$1a@gJ
                                                                         g$ys$30526$1a@gJ))))))
                                                                g$ids$30521$1a@gJ
                                                                g$z$30520$1a@gJ))))))
                                                       g$ls/false$30509$1a@gJ)
                                                     ((case-lambda
                                                        ((g$t$30536$1a@gJ)
                                                         ((case-lambda
                                                            ((g$ls/false$30537$1a@gJ)
                                                             (if g$ls/false$30537$1a@gJ
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$30538$1a@gJ
                                                                      g$y$30539$1a@gJ)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$30488$1a@gJ
                                                                           g$y$30539$1a@gJ
                                                                           g$n$30490$1a@gJ
                                                                           g$ids$30491$1a@gJ)))
                                                                      (case-lambda
                                                                        ((g$y$30542$1a@gJ
                                                                           g$ids$30543$1a@gJ)
                                                                         ((case-lambda
                                                                            ((g$ids$30544$1a@gJ
                                                                               g$y$30545$1a@gJ)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$30488$1a@gJ
                                                                                    g$x$30538$1a@gJ
                                                                                    g$n$30490$1a@gJ
                                                                                    g$ids$30544$1a@gJ)))
                                                                               (case-lambda
                                                                                 ((g$x$30548$1a@gJ
                                                                                    g$ids$30549$1a@gJ)
                                                                                  ((case-lambda
                                                                                     ((g$ids$30550$1a@gJ
                                                                                        g$x$30551$1a@gJ)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$30551$1a@gJ
                                                                                          g$y$30545$1a@gJ)
                                                                                        g$ids$30550$1a@gJ)))
                                                                                   g$ids$30549$1a@gJ
                                                                                   g$x$30548$1a@gJ))))))
                                                                          g$ids$30543$1a@gJ
                                                                          g$y$30542$1a@gJ))))))
                                                                 g$ls/false$30537$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$t$30552$1a@gJ)
                                                                   ((case-lambda
                                                                      ((g$ls/false$30553$1a@gJ)
                                                                       (if g$ls/false$30553$1a@gJ
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$30491$1a@gJ)))
                                                                           g$ls/false$30553$1a@gJ)
                                                                         ((case-lambda
                                                                            ((g$t$30554$1a@gJ)
                                                                             ((case-lambda
                                                                                ((g$ls/false$30555$1a@gJ)
                                                                                 (if (if g$ls/false$30555$1a@gJ
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$30556$1a@gJ)
                                                                                              (not (g$stx?$28383$1a@gJ
                                                                                                     g$p$30556$1a@gJ))))
                                                                                           g$ls/false$30555$1a@gJ))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$30557$1a@gJ)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$30488$1a@gJ
                                                                                               g$p$30557$1a@gJ
                                                                                               g$n$30490$1a@gJ
                                                                                               g$ids$30491$1a@gJ)))
                                                                                          (case-lambda
                                                                                            ((g$p$30560$1a@gJ
                                                                                               g$ids$30561$1a@gJ)
                                                                                             ((case-lambda
                                                                                                ((g$ids$30562$1a@gJ
                                                                                                   g$p$30563$1a@gJ)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$30563$1a@gJ)
                                                                                                   g$ids$30562$1a@gJ)))
                                                                                              g$ids$30561$1a@gJ
                                                                                              g$p$30560$1a@gJ))))))
                                                                                     g$ls/false$30555$1a@gJ)
                                                                                   ((case-lambda
                                                                                      ((g$t$30564$1a@gJ)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$30565$1a@gJ)
                                                                                           (if g$ls/false$30565$1a@gJ
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$30566$1a@gJ)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$28422$1a@gJ
                                                                                                        g$datum$30566$1a@gJ))
                                                                                                    g$ids$30491$1a@gJ)))
                                                                                               g$ls/false$30565$1a@gJ)
                                                                                             (g$syntax-violation$29029$1a@gJ
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$30564$1a@gJ))))
                                                                                        (g$syntax-dispatch$28909$1a@gJ
                                                                                          g$t$30564$1a@gJ
                                                                                          'any))))
                                                                                    g$t$30554$1a@gJ))))
                                                                              (g$syntax-dispatch$28909$1a@gJ
                                                                                g$t$30554$1a@gJ
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$30552$1a@gJ))))
                                                                    (g$syntax-dispatch$28909$1a@gJ
                                                                      g$t$30552$1a@gJ
                                                                      '()))))
                                                                g$t$30536$1a@gJ))))
                                                          (g$syntax-dispatch$28909$1a@gJ
                                                            g$t$30536$1a@gJ
                                                            '(any .
                                                                  any)))))
                                                      g$t$30508$1a@gJ))))
                                                (g$syntax-dispatch$28909$1a@gJ
                                                  g$t$30508$1a@gJ
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$30496$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$30496$1a@gJ
                                        '(any any)))))
                                  g$t$30492$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$30492$1a@gJ
                              'any))))
                        g$p$30489$1a@gJ)))))
          (g$cvt$30488$1a@gJ g$pattern$30485$1a@gJ '0 '())))))
   (g$syntax-dispatch$28909$1a@gJ
     g$syntax-dispatch$32508$1a@gJ
     (case-lambda
       ((g$e$30582$1a@gJ g$p$30583$1a@gJ)
        (letrec* ((g$stx^$30584$1a@gJ
                    (case-lambda
                      ((g$e$30692$1a@gJ
                         g$m*$30693$1a@gJ
                         g$s*$30694$1a@gJ
                         g$ae*$30695$1a@gJ)
                       (if (if (null? g$m*$30693$1a@gJ)
                             (if (null? g$s*$30694$1a@gJ)
                               (begin '#f (null? g$ae*$30695$1a@gJ))
                               '#f)
                             '#f)
                         g$e$30692$1a@gJ
                         (g$mkstx$28399$1a@gJ
                           g$e$30692$1a@gJ
                           g$m*$30693$1a@gJ
                           g$s*$30694$1a@gJ
                           g$ae*$30695$1a@gJ)))))
                  (g$match-each$30585$1a@gJ
                    (case-lambda
                      ((g$e$30676$1a@gJ
                         g$p$30677$1a@gJ
                         g$m*$30678$1a@gJ
                         g$s*$30679$1a@gJ
                         g$ae*$30680$1a@gJ)
                       (if (pair? g$e$30676$1a@gJ)
                         ((case-lambda
                            ((g$first$30681$1a@gJ)
                             (if g$first$30681$1a@gJ
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$30682$1a@gJ)
                                     (if g$rest$30682$1a@gJ
                                       (begin
                                         '#f
                                         (cons
                                           g$first$30681$1a@gJ
                                           g$rest$30682$1a@gJ))
                                       '#f)))
                                  (g$match-each$30585$1a@gJ
                                    (cdr g$e$30676$1a@gJ)
                                    g$p$30677$1a@gJ
                                    g$m*$30678$1a@gJ
                                    g$s*$30679$1a@gJ
                                    g$ae*$30680$1a@gJ)))
                               '#f)))
                          (g$match$30591$1a@gJ
                            (car g$e$30676$1a@gJ)
                            g$p$30677$1a@gJ
                            g$m*$30678$1a@gJ
                            g$s*$30679$1a@gJ
                            g$ae*$30680$1a@gJ
                            '()))
                         (if (null? g$e$30676$1a@gJ)
                           '()
                           (if (g$stx?$28383$1a@gJ g$e$30676$1a@gJ)
                             (if (not (g$top-marked?$28345$1a@gJ
                                        g$m*$30678$1a@gJ))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28398$1a@gJ
                                        g$m*$30678$1a@gJ
                                        g$s*$30679$1a@gJ
                                        g$ae*$30680$1a@gJ
                                        g$e$30676$1a@gJ)))
                                   (case-lambda
                                     ((g$m*$30686$1a@gJ
                                        g$s*$30687$1a@gJ
                                        g$ae*$30688$1a@gJ)
                                      ((case-lambda
                                         ((g$ae*$30689$1a@gJ
                                            g$s*$30690$1a@gJ
                                            g$m*$30691$1a@gJ)
                                          (g$match-each$30585$1a@gJ
                                            (g$stx-expr$28385$1a@gJ
                                              g$e$30676$1a@gJ)
                                            g$p$30677$1a@gJ
                                            g$m*$30691$1a@gJ
                                            g$s*$30690$1a@gJ
                                            g$ae*$30689$1a@gJ)))
                                       g$ae*$30688$1a@gJ
                                       g$s*$30687$1a@gJ
                                       g$m*$30686$1a@gJ)))))
                               '#f)
                             (if (annotation? g$e$30676$1a@gJ)
                               (g$match-each$30585$1a@gJ
                                 (annotation-expression g$e$30676$1a@gJ)
                                 g$p$30677$1a@gJ
                                 g$m*$30678$1a@gJ
                                 g$s*$30679$1a@gJ
                                 g$ae*$30680$1a@gJ)
                               (begin '#f '#f))))))))
                  (g$match-each+$30586$1a@gJ
                    (case-lambda
                      ((g$e$30644$1a@gJ
                         g$x-pat$30645$1a@gJ
                         g$y-pat$30646$1a@gJ
                         g$z-pat$30647$1a@gJ
                         g$m*$30648$1a@gJ
                         g$s*$30649$1a@gJ
                         g$ae*$30650$1a@gJ
                         g$r$30651$1a@gJ)
                       ((letrec ((g$f$30652$1a@gJ
                                   (case-lambda
                                     ((g$e$30653$1a@gJ
                                        g$m*$30654$1a@gJ
                                        g$s*$30655$1a@gJ
                                        g$ae*$30656$1a@gJ)
                                      (if (pair? g$e$30653$1a@gJ)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$30652$1a@gJ
                                               (cdr g$e$30653$1a@gJ)
                                               g$m*$30654$1a@gJ
                                               g$s*$30655$1a@gJ
                                               g$ae*$30656$1a@gJ)))
                                          (case-lambda
                                            ((g$xr*$30660$1a@gJ
                                               g$y-pat$30661$1a@gJ
                                               g$r$30662$1a@gJ)
                                             ((case-lambda
                                                ((g$r$30663$1a@gJ
                                                   g$y-pat$30664$1a@gJ
                                                   g$xr*$30665$1a@gJ)
                                                 (if g$r$30663$1a@gJ
                                                   (if (null?
                                                         g$y-pat$30664$1a@gJ)
                                                     ((case-lambda
                                                        ((g$xr$30666$1a@gJ)
                                                         (if g$xr$30666$1a@gJ
                                                           (values
                                                             (cons
                                                               g$xr$30666$1a@gJ
                                                               g$xr*$30665$1a@gJ)
                                                             g$y-pat$30664$1a@gJ
                                                             g$r$30663$1a@gJ)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$30591$1a@gJ
                                                        (car g$e$30653$1a@gJ)
                                                        g$x-pat$30645$1a@gJ
                                                        g$m*$30654$1a@gJ
                                                        g$s*$30655$1a@gJ
                                                        g$ae*$30656$1a@gJ
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$30664$1a@gJ)
                                                       (g$match$30591$1a@gJ
                                                         (car g$e$30653$1a@gJ)
                                                         (car g$y-pat$30664$1a@gJ)
                                                         g$m*$30654$1a@gJ
                                                         g$s*$30655$1a@gJ
                                                         g$ae*$30656$1a@gJ
                                                         g$r$30663$1a@gJ)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$30662$1a@gJ
                                              g$y-pat$30661$1a@gJ
                                              g$xr*$30660$1a@gJ))))
                                        (if (g$stx?$28383$1a@gJ
                                              g$e$30653$1a@gJ)
                                          (if (g$top-marked?$28345$1a@gJ
                                                g$m*$30654$1a@gJ)
                                            (values
                                              '()
                                              g$y-pat$30646$1a@gJ
                                              (g$match$30591$1a@gJ
                                                g$e$30653$1a@gJ
                                                g$z-pat$30647$1a@gJ
                                                g$m*$30654$1a@gJ
                                                g$s*$30655$1a@gJ
                                                g$ae*$30656$1a@gJ
                                                g$r$30651$1a@gJ))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$28398$1a@gJ
                                                   g$m*$30654$1a@gJ
                                                   g$s*$30655$1a@gJ
                                                   g$ae*$30656$1a@gJ
                                                   g$e$30653$1a@gJ)))
                                              (case-lambda
                                                ((g$m*$30670$1a@gJ
                                                   g$s*$30671$1a@gJ
                                                   g$ae*$30672$1a@gJ)
                                                 ((case-lambda
                                                    ((g$ae*$30673$1a@gJ
                                                       g$s*$30674$1a@gJ
                                                       g$m*$30675$1a@gJ)
                                                     (g$f$30652$1a@gJ
                                                       (g$stx-expr$28385$1a@gJ
                                                         g$e$30653$1a@gJ)
                                                       g$m*$30675$1a@gJ
                                                       g$s*$30674$1a@gJ
                                                       g$ae*$30673$1a@gJ)))
                                                  g$ae*$30672$1a@gJ
                                                  g$s*$30671$1a@gJ
                                                  g$m*$30670$1a@gJ)))))
                                          (if (annotation?
                                                g$e$30653$1a@gJ)
                                            (g$f$30652$1a@gJ
                                              (annotation-expression
                                                g$e$30653$1a@gJ)
                                              g$m*$30654$1a@gJ
                                              g$s*$30655$1a@gJ
                                              g$ae*$30656$1a@gJ)
                                            (begin
                                              '#f
                                              (values
                                                '()
                                                g$y-pat$30646$1a@gJ
                                                (g$match$30591$1a@gJ
                                                  g$e$30653$1a@gJ
                                                  g$z-pat$30647$1a@gJ
                                                  g$m*$30654$1a@gJ
                                                  g$s*$30655$1a@gJ
                                                  g$ae*$30656$1a@gJ
                                                  g$r$30651$1a@gJ))))))))))
                          g$f$30652$1a@gJ)
                        g$e$30644$1a@gJ
                        g$m*$30648$1a@gJ
                        g$s*$30649$1a@gJ
                        g$ae*$30650$1a@gJ))))
                  (g$match-each-any$30587$1a@gJ
                    (case-lambda
                      ((g$e$30630$1a@gJ
                         g$m*$30631$1a@gJ
                         g$s*$30632$1a@gJ
                         g$ae*$30633$1a@gJ)
                       (if (pair? g$e$30630$1a@gJ)
                         ((case-lambda
                            ((g$l$30634$1a@gJ)
                             (if g$l$30634$1a@gJ
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$30584$1a@gJ
                                     (car g$e$30630$1a@gJ)
                                     g$m*$30631$1a@gJ
                                     g$s*$30632$1a@gJ
                                     g$ae*$30633$1a@gJ)
                                   g$l$30634$1a@gJ))
                               '#f)))
                          (g$match-each-any$30587$1a@gJ
                            (cdr g$e$30630$1a@gJ)
                            g$m*$30631$1a@gJ
                            g$s*$30632$1a@gJ
                            g$ae*$30633$1a@gJ))
                         (if (null? g$e$30630$1a@gJ)
                           '()
                           (if (g$stx?$28383$1a@gJ g$e$30630$1a@gJ)
                             (if (not (g$top-marked?$28345$1a@gJ
                                        g$m*$30631$1a@gJ))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28398$1a@gJ
                                        g$m*$30631$1a@gJ
                                        g$s*$30632$1a@gJ
                                        g$ae*$30633$1a@gJ
                                        g$e$30630$1a@gJ)))
                                   (case-lambda
                                     ((g$m*$30638$1a@gJ
                                        g$s*$30639$1a@gJ
                                        g$ae*$30640$1a@gJ)
                                      ((case-lambda
                                         ((g$ae*$30641$1a@gJ
                                            g$s*$30642$1a@gJ
                                            g$m*$30643$1a@gJ)
                                          (g$match-each-any$30587$1a@gJ
                                            (g$stx-expr$28385$1a@gJ
                                              g$e$30630$1a@gJ)
                                            g$m*$30643$1a@gJ
                                            g$s*$30642$1a@gJ
                                            g$ae*$30641$1a@gJ)))
                                       g$ae*$30640$1a@gJ
                                       g$s*$30639$1a@gJ
                                       g$m*$30638$1a@gJ)))))
                               '#f)
                             (if (annotation? g$e$30630$1a@gJ)
                               (g$match-each-any$30587$1a@gJ
                                 (annotation-expression g$e$30630$1a@gJ)
                                 g$m*$30631$1a@gJ
                                 g$s*$30632$1a@gJ
                                 g$ae*$30633$1a@gJ)
                               (begin '#f '#f))))))))
                  (g$match-empty$30588$1a@gJ
                    (case-lambda
                      ((g$p$30627$1a@gJ g$r$30628$1a@gJ)
                       (if (null? g$p$30627$1a@gJ)
                         g$r$30628$1a@gJ
                         (if (eq? g$p$30627$1a@gJ '_)
                           g$r$30628$1a@gJ
                           (if (eq? g$p$30627$1a@gJ 'any)
                             (cons '() g$r$30628$1a@gJ)
                             (if (pair? g$p$30627$1a@gJ)
                               (g$match-empty$30588$1a@gJ
                                 (car g$p$30627$1a@gJ)
                                 (g$match-empty$30588$1a@gJ
                                   (cdr g$p$30627$1a@gJ)
                                   g$r$30628$1a@gJ))
                               (if (eq? g$p$30627$1a@gJ 'each-any)
                                 (cons '() g$r$30628$1a@gJ)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$30629$1a@gJ)
                                       (if (eqv? g$t$30629$1a@gJ 'each)
                                         (g$match-empty$30588$1a@gJ
                                           (g$vector-ref$20649$1a@gJ
                                             g$p$30627$1a@gJ
                                             '1)
                                           g$r$30628$1a@gJ)
                                         (if (eqv?
                                               g$t$30629$1a@gJ
                                               'each+)
                                           (g$match-empty$30588$1a@gJ
                                             (g$vector-ref$20649$1a@gJ
                                               g$p$30627$1a@gJ
                                               '1)
                                             (g$match-empty$30588$1a@gJ
                                               (g$reverse$20656$1a@gJ
                                                 (g$vector-ref$20649$1a@gJ
                                                   g$p$30627$1a@gJ
                                                   '2))
                                               (g$match-empty$30588$1a@gJ
                                                 (g$vector-ref$20649$1a@gJ
                                                   g$p$30627$1a@gJ
                                                   '3)
                                                 g$r$30628$1a@gJ)))
                                           (if (g$memv$20188$1a@gJ
                                                 g$t$30629$1a@gJ
                                                 '(free-id atom))
                                             g$r$30628$1a@gJ
                                             (if (g$memv$20188$1a@gJ
                                                   g$t$30629$1a@gJ
                                                   '(scheme-id atom))
                                               g$r$30628$1a@gJ
                                               (if (eqv?
                                                     g$t$30629$1a@gJ
                                                     'vector)
                                                 (g$match-empty$30588$1a@gJ
                                                   (g$vector-ref$20649$1a@gJ
                                                     g$p$30627$1a@gJ
                                                     '1)
                                                   g$r$30628$1a@gJ)
                                                 (begin
                                                   '#f
                                                   (assertion-violation
                                                     'syntax-dispatch
                                                     '"invalid pattern"
                                                     g$p$30627$1a@gJ)))))))))
                                    (g$vector-ref$20649$1a@gJ
                                      g$p$30627$1a@gJ
                                      '0)))))))))))
                  (g$combine$30589$1a@gJ
                    (case-lambda
                      ((g$r*$30625$1a@gJ g$r$30626$1a@gJ)
                       (if (null? (car g$r*$30625$1a@gJ))
                         g$r$30626$1a@gJ
                         (cons
                           (g$map$20195$1a@gJ car g$r*$30625$1a@gJ)
                           (g$combine$30589$1a@gJ
                             (g$map$20195$1a@gJ cdr g$r*$30625$1a@gJ)
                             g$r$30626$1a@gJ))))))
                  (g$match*$30590$1a@gJ
                    (case-lambda
                      ((g$e$30607$1a@gJ
                         g$p$30608$1a@gJ
                         g$m*$30609$1a@gJ
                         g$s*$30610$1a@gJ
                         g$ae*$30611$1a@gJ
                         g$r$30612$1a@gJ)
                       (if (null? g$p$30608$1a@gJ)
                         (if (null? g$e$30607$1a@gJ)
                           (begin '#f g$r$30612$1a@gJ)
                           '#f)
                         (if (pair? g$p$30608$1a@gJ)
                           (if (pair? g$e$30607$1a@gJ)
                             (begin
                               '#f
                               (g$match$30591$1a@gJ
                                 (car g$e$30607$1a@gJ)
                                 (car g$p$30608$1a@gJ)
                                 g$m*$30609$1a@gJ
                                 g$s*$30610$1a@gJ
                                 g$ae*$30611$1a@gJ
                                 (g$match$30591$1a@gJ
                                   (cdr g$e$30607$1a@gJ)
                                   (cdr g$p$30608$1a@gJ)
                                   g$m*$30609$1a@gJ
                                   g$s*$30610$1a@gJ
                                   g$ae*$30611$1a@gJ
                                   g$r$30612$1a@gJ)))
                             '#f)
                           (if (eq? g$p$30608$1a@gJ 'each-any)
                             ((case-lambda
                                ((g$l$30613$1a@gJ)
                                 (if g$l$30613$1a@gJ
                                   (begin
                                     '#f
                                     (cons
                                       g$l$30613$1a@gJ
                                       g$r$30612$1a@gJ))
                                   '#f)))
                              (g$match-each-any$30587$1a@gJ
                                g$e$30607$1a@gJ
                                g$m*$30609$1a@gJ
                                g$s*$30610$1a@gJ
                                g$ae*$30611$1a@gJ))
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$30614$1a@gJ)
                                   (if (eqv? g$t$30614$1a@gJ 'each)
                                     (if (null? g$e$30607$1a@gJ)
                                       (g$match-empty$30588$1a@gJ
                                         (g$vector-ref$20649$1a@gJ
                                           g$p$30608$1a@gJ
                                           '1)
                                         g$r$30612$1a@gJ)
                                       ((case-lambda
                                          ((g$r*$30615$1a@gJ)
                                           (if g$r*$30615$1a@gJ
                                             (begin
                                               '#f
                                               (g$combine$30589$1a@gJ
                                                 g$r*$30615$1a@gJ
                                                 g$r$30612$1a@gJ))
                                             '#f)))
                                        (g$match-each$30585$1a@gJ
                                          g$e$30607$1a@gJ
                                          (g$vector-ref$20649$1a@gJ
                                            g$p$30608$1a@gJ
                                            '1)
                                          g$m*$30609$1a@gJ
                                          g$s*$30610$1a@gJ
                                          g$ae*$30611$1a@gJ)))
                                     (if (eqv? g$t$30614$1a@gJ 'free-id)
                                       (if (g$symbol?$20620$1a@gJ
                                             g$e$30607$1a@gJ)
                                         (if (g$top-marked?$28345$1a@gJ
                                               g$m*$30609$1a@gJ)
                                           (if (g$free-id=?$28415$1a@gJ
                                                 (g$stx^$30584$1a@gJ
                                                   g$e$30607$1a@gJ
                                                   g$m*$30609$1a@gJ
                                                   g$s*$30610$1a@gJ
                                                   g$ae*$30611$1a@gJ)
                                                 (g$vector-ref$20649$1a@gJ
                                                   g$p$30608$1a@gJ
                                                   '1))
                                             (begin '#f g$r$30612$1a@gJ)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$30614$1a@gJ
                                             'scheme-id)
                                         (if (g$symbol?$20620$1a@gJ
                                               g$e$30607$1a@gJ)
                                           (if (g$top-marked?$28345$1a@gJ
                                                 g$m*$30609$1a@gJ)
                                             (if (g$free-id=?$28415$1a@gJ
                                                   (g$stx^$30584$1a@gJ
                                                     g$e$30607$1a@gJ
                                                     g$m*$30609$1a@gJ
                                                     g$s*$30610$1a@gJ
                                                     g$ae*$30611$1a@gJ)
                                                   (g$scheme-stx$28852$1a@gJ
                                                     (g$vector-ref$20649$1a@gJ
                                                       g$p$30608$1a@gJ
                                                       '1)))
                                               (begin
                                                 '#f
                                                 g$r$30612$1a@gJ)
                                               '#f)
                                             '#f)
                                           '#f)
                                         (if (eqv?
                                               g$t$30614$1a@gJ
                                               'each+)
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$match-each+$30586$1a@gJ
                                                  g$e$30607$1a@gJ
                                                  (g$vector-ref$20649$1a@gJ
                                                    g$p$30608$1a@gJ
                                                    '1)
                                                  (g$vector-ref$20649$1a@gJ
                                                    g$p$30608$1a@gJ
                                                    '2)
                                                  (g$vector-ref$20649$1a@gJ
                                                    g$p$30608$1a@gJ
                                                    '3)
                                                  g$m*$30609$1a@gJ
                                                  g$s*$30610$1a@gJ
                                                  g$ae*$30611$1a@gJ
                                                  g$r$30612$1a@gJ)))
                                             (case-lambda
                                               ((g$xr*$30619$1a@gJ
                                                  g$y-pat$30620$1a@gJ
                                                  g$r$30621$1a@gJ)
                                                ((case-lambda
                                                   ((g$r$30622$1a@gJ
                                                      g$y-pat$30623$1a@gJ
                                                      g$xr*$30624$1a@gJ)
                                                    (if g$r$30622$1a@gJ
                                                      (if (null?
                                                            g$y-pat$30623$1a@gJ)
                                                        (begin
                                                          '#f
                                                          (if (null?
                                                                g$xr*$30624$1a@gJ)
                                                            (g$match-empty$30588$1a@gJ
                                                              (g$vector-ref$20649$1a@gJ
                                                                g$p$30608$1a@gJ
                                                                '1)
                                                              g$r$30622$1a@gJ)
                                                            (g$combine$30589$1a@gJ
                                                              g$xr*$30624$1a@gJ
                                                              g$r$30622$1a@gJ)))
                                                        '#f)
                                                      '#f)))
                                                 g$r$30621$1a@gJ
                                                 g$y-pat$30620$1a@gJ
                                                 g$xr*$30619$1a@gJ))))
                                           (if (eqv?
                                                 g$t$30614$1a@gJ
                                                 'atom)
                                             (if (g$equal?$27047$1a@gJ
                                                   (g$vector-ref$20649$1a@gJ
                                                     g$p$30608$1a@gJ
                                                     '1)
                                                   (g$strip$28421$1a@gJ
                                                     g$e$30607$1a@gJ
                                                     g$m*$30609$1a@gJ))
                                               (begin
                                                 '#f
                                                 g$r$30612$1a@gJ)
                                               '#f)
                                             (if (eqv?
                                                   g$t$30614$1a@gJ
                                                   'vector)
                                               (if (g$vector?$20618$1a@gJ
                                                     g$e$30607$1a@gJ)
                                                 (begin
                                                   '#f
                                                   (g$match$30591$1a@gJ
                                                     (g$vector->list$20654$1a@gJ
                                                       g$e$30607$1a@gJ)
                                                     (g$vector-ref$20649$1a@gJ
                                                       g$p$30608$1a@gJ
                                                       '1)
                                                     g$m*$30609$1a@gJ
                                                     g$s*$30610$1a@gJ
                                                     g$ae*$30611$1a@gJ
                                                     g$r$30612$1a@gJ))
                                                 '#f)
                                               (begin
                                                 '#f
                                                 (assertion-violation
                                                   'syntax-dispatch
                                                   '"invalid pattern"
                                                   g$p$30608$1a@gJ))))))))))
                                (g$vector-ref$20649$1a@gJ
                                  g$p$30608$1a@gJ
                                  '0)))))))))
                  (g$match$30591$1a@gJ
                    (case-lambda
                      ((g$e$30592$1a@gJ
                         g$p$30593$1a@gJ
                         g$m*$30594$1a@gJ
                         g$s*$30595$1a@gJ
                         g$ae*$30596$1a@gJ
                         g$r$30597$1a@gJ)
                       (if (not g$r$30597$1a@gJ)
                         '#f
                         (if (eq? g$p$30593$1a@gJ '_)
                           g$r$30597$1a@gJ
                           (if (eq? g$p$30593$1a@gJ 'any)
                             (cons
                               (g$stx^$30584$1a@gJ
                                 g$e$30592$1a@gJ
                                 g$m*$30594$1a@gJ
                                 g$s*$30595$1a@gJ
                                 g$ae*$30596$1a@gJ)
                               g$r$30597$1a@gJ)
                             (if (g$stx?$28383$1a@gJ g$e$30592$1a@gJ)
                               (if (not (g$top-marked?$28345$1a@gJ
                                          g$m*$30594$1a@gJ))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$28398$1a@gJ
                                          g$m*$30594$1a@gJ
                                          g$s*$30595$1a@gJ
                                          g$ae*$30596$1a@gJ
                                          g$e$30592$1a@gJ)))
                                     (case-lambda
                                       ((g$m*$30601$1a@gJ
                                          g$s*$30602$1a@gJ
                                          g$ae*$30603$1a@gJ)
                                        ((case-lambda
                                           ((g$ae*$30604$1a@gJ
                                              g$s*$30605$1a@gJ
                                              g$m*$30606$1a@gJ)
                                            (g$match$30591$1a@gJ
                                              (g$stx-expr$28385$1a@gJ
                                                g$e$30592$1a@gJ)
                                              g$p$30593$1a@gJ
                                              g$m*$30606$1a@gJ
                                              g$s*$30605$1a@gJ
                                              g$ae*$30604$1a@gJ
                                              g$r$30597$1a@gJ)))
                                         g$ae*$30603$1a@gJ
                                         g$s*$30602$1a@gJ
                                         g$m*$30601$1a@gJ)))))
                                 '#f)
                               (if (annotation? g$e$30592$1a@gJ)
                                 (g$match$30591$1a@gJ
                                   (annotation-expression
                                     g$e$30592$1a@gJ)
                                   g$p$30593$1a@gJ
                                   g$m*$30594$1a@gJ
                                   g$s*$30595$1a@gJ
                                   g$ae*$30596$1a@gJ
                                   g$r$30597$1a@gJ)
                                 (begin
                                   '#f
                                   (g$match*$30590$1a@gJ
                                     g$e$30592$1a@gJ
                                     g$p$30593$1a@gJ
                                     g$m*$30594$1a@gJ
                                     g$s*$30595$1a@gJ
                                     g$ae*$30596$1a@gJ
                                     g$r$30597$1a@gJ)))))))))))
          (g$match$30591$1a@gJ
            g$e$30582$1a@gJ
            g$p$30583$1a@gJ
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$28910$1a@gJ
     g$ellipsis?$32509$1a@gJ
     (case-lambda
       ((g$x$30696$1a@gJ)
        (if (g$id?$28411$1a@gJ g$x$30696$1a@gJ)
          (begin
            '#f
            (g$free-id=?$28415$1a@gJ
              g$x$30696$1a@gJ
              (g$scheme-stx$28852$1a@gJ '...)))
          '#f))))
   (g$underscore?$28911$1a@gJ
     g$underscore?$32510$1a@gJ
     (case-lambda
       ((g$x$30697$1a@gJ)
        (if (g$id?$28411$1a@gJ g$x$30697$1a@gJ)
          (begin
            '#f
            (g$free-id=?$28415$1a@gJ
              g$x$30697$1a@gJ
              (g$scheme-stx$28852$1a@gJ '_)))
          '#f))))
   (g$verify-literals$28912$1a@gJ
     g$verify-literals$32511$1a@gJ
     (case-lambda
       ((g$lits$30698$1a@gJ g$expr$30699$1a@gJ)
        (g$for-each$20196$1a@gJ
          (case-lambda
            ((g$x$30700$1a@gJ)
             (if ((case-lambda
                    ((g$t$30701$1a@gJ)
                     (if g$t$30701$1a@gJ
                       g$t$30701$1a@gJ
                       ((case-lambda
                          ((g$t$30702$1a@gJ)
                           (if g$t$30702$1a@gJ
                             g$t$30702$1a@gJ
                             (begin
                               '#f
                               (g$underscore?$28911$1a@gJ
                                 g$x$30700$1a@gJ)))))
                        (g$ellipsis?$28910$1a@gJ g$x$30700$1a@gJ)))))
                  (not (g$id?$28411$1a@gJ g$x$30700$1a@gJ)))
               (g$syntax-violation$29029$1a@gJ
                 '#f
                 '"invalid literal"
                 g$expr$30699$1a@gJ
                 g$x$30700$1a@gJ)
               (void))))
          g$lits$30698$1a@gJ))))
   (g$syntax-case-transformer$28913$1a@gJ
     g$syntax-case-transformer$32512$1a@gJ
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$30703$1a@gJ
                     (case-lambda
                       ((g$pvars$30760$1a@gJ
                          g$expr$30761$1a@gJ
                          g$y$30762$1a@gJ
                          g$r$30763$1a@gJ
                          g$mr$30764$1a@gJ)
                        ((case-lambda
                           ((g$ids$30765$1a@gJ g$levels$30766$1a@gJ)
                            ((case-lambda
                               ((g$labels$30767$1a@gJ
                                  g$new-vars$30768$1a@gJ)
                                ((case-lambda
                                   ((g$body$30769$1a@gJ)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$28333$1a@gJ
                                        '#f
                                        g$new-vars$30768$1a@gJ
                                        g$body$30769$1a@gJ)
                                      g$y$30762$1a@gJ)))
                                 (g$chi-expr$28927$1a@gJ
                                   (g$add-subst$28401$1a@gJ
                                     (g$make-full-rib$28377$1a@gJ
                                       g$ids$30765$1a@gJ
                                       g$labels$30767$1a@gJ)
                                     g$expr$30761$1a@gJ)
                                   (g$append$20200$1a@gJ
                                     (g$map$20195$1a@gJ
                                       (case-lambda
                                         ((g$label$30770$1a@gJ
                                            g$var$30771$1a@gJ
                                            g$level$30772$1a@gJ)
                                          (cons
                                            g$label$30770$1a@gJ
                                            (g$make-binding$28427$1a@gJ
                                              'syntax
                                              (cons
                                                g$var$30771$1a@gJ
                                                g$level$30772$1a@gJ)))))
                                       g$labels$30767$1a@gJ
                                       g$new-vars$30768$1a@gJ
                                       (g$map$20195$1a@gJ
                                         cdr
                                         g$pvars$30760$1a@gJ))
                                     g$r$30763$1a@gJ)
                                   g$mr$30764$1a@gJ))))
                             (g$map$20195$1a@gJ
                               g$gen-label$28348$1a@gJ
                               g$ids$30765$1a@gJ)
                             (g$map$20195$1a@gJ
                               g$gen-lexical$28346$1a@gJ
                               g$ids$30765$1a@gJ))))
                         (g$map$20195$1a@gJ car g$pvars$30760$1a@gJ)
                         (g$map$20195$1a@gJ cdr g$pvars$30760$1a@gJ)))))
                   (g$invalid-ids-error$30704$1a@gJ
                     (case-lambda
                       ((g$id*$30754$1a@gJ
                          g$e$30755$1a@gJ
                          g$class$30756$1a@gJ)
                        ((letrec ((g$find$30757$1a@gJ
                                    (case-lambda
                                      ((g$id*$30758$1a@gJ
                                         g$ok*$30759$1a@gJ)
                                       (if (null? g$id*$30758$1a@gJ)
                                         (g$syntax-violation$29029$1a@gJ
                                           '#f
                                           '"invalid syntax"
                                           g$e$30755$1a@gJ)
                                         (if (g$id?$28411$1a@gJ
                                               (car g$id*$30758$1a@gJ))
                                           (if (g$bound-id-member?$28418$1a@gJ
                                                 (car g$id*$30758$1a@gJ)
                                                 g$ok*$30759$1a@gJ)
                                             (g$syntax-error$29026$1a@gJ
                                               (car g$id*$30758$1a@gJ)
                                               '"duplicate "
                                               g$class$30756$1a@gJ)
                                             (g$find$30757$1a@gJ
                                               (cdr g$id*$30758$1a@gJ)
                                               (cons
                                                 (car g$id*$30758$1a@gJ)
                                                 g$ok*$30759$1a@gJ)))
                                           (g$syntax-error$29026$1a@gJ
                                             (car g$id*$30758$1a@gJ)
                                             '"invalid "
                                             g$class$30756$1a@gJ)))))))
                           g$find$30757$1a@gJ)
                         g$id*$30754$1a@gJ
                         '()))))
                   (g$gen-clause$30705$1a@gJ
                     (case-lambda
                       ((g$x$30734$1a@gJ
                          g$keys$30735$1a@gJ
                          g$clauses$30736$1a@gJ
                          g$r$30737$1a@gJ
                          g$mr$30738$1a@gJ
                          g$pat$30739$1a@gJ
                          g$fender$30740$1a@gJ
                          g$expr$30741$1a@gJ)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$28908$1a@gJ
                               g$pat$30739$1a@gJ
                               g$keys$30735$1a@gJ)))
                          (case-lambda
                            ((g$p$30744$1a@gJ g$pvars$30745$1a@gJ)
                             ((case-lambda
                                ((g$pvars$30746$1a@gJ g$p$30747$1a@gJ)
                                 (if (not (g$distinct-bound-ids?$28417$1a@gJ
                                            (g$map$20195$1a@gJ
                                              car
                                              g$pvars$30746$1a@gJ)))
                                   (g$invalid-ids-error$30704$1a@gJ
                                     (g$map$20195$1a@gJ
                                       car
                                       g$pvars$30746$1a@gJ)
                                     g$pat$30739$1a@gJ
                                     '"pattern variable")
                                   (if (not (g$for-all$20193$1a@gJ
                                              (case-lambda
                                                ((g$x$30748$1a@gJ)
                                                 (not (g$ellipsis?$28910$1a@gJ
                                                        (car g$x$30748$1a@gJ)))))
                                              g$pvars$30746$1a@gJ))
                                     (g$syntax-violation$29029$1a@gJ
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$30739$1a@gJ)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$y$30749$1a@gJ)
                                           ((case-lambda
                                              ((g$test$30750$1a@gJ)
                                               ((case-lambda
                                                  ((g$conseq$30751$1a@gJ)
                                                   ((case-lambda
                                                      ((g$altern$30752$1a@gJ)
                                                       (list
                                                         (g$build-lambda$28333$1a@gJ
                                                           '#f
                                                           (list
                                                             g$y$30749$1a@gJ)
                                                           (list
                                                             'if
                                                             g$test$30750$1a@gJ
                                                             g$conseq$30751$1a@gJ
                                                             g$altern$30752$1a@gJ))
                                                         (list
                                                           '(primitive
                                                              syntax-dispatch)
                                                           g$x$30734$1a@gJ
                                                           (list
                                                             'quote
                                                             g$p$30747$1a@gJ)))))
                                                    (g$gen-syntax-case$30706$1a@gJ
                                                      g$x$30734$1a@gJ
                                                      g$keys$30735$1a@gJ
                                                      g$clauses$30736$1a@gJ
                                                      g$r$30737$1a@gJ
                                                      g$mr$30738$1a@gJ))))
                                                (g$build-dispatch-call$30703$1a@gJ
                                                  g$pvars$30746$1a@gJ
                                                  g$expr$30741$1a@gJ
                                                  g$y$30749$1a@gJ
                                                  g$r$30737$1a@gJ
                                                  g$mr$30738$1a@gJ))))
                                            (if (eq? g$fender$30740$1a@gJ
                                                     '#t)
                                              g$y$30749$1a@gJ
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$call$30753$1a@gJ)
                                                    (list
                                                      'if
                                                      g$y$30749$1a@gJ
                                                      g$call$30753$1a@gJ
                                                      (list
                                                        'quote
                                                        '#f))))
                                                 (g$build-dispatch-call$30703$1a@gJ
                                                   g$pvars$30746$1a@gJ
                                                   g$fender$30740$1a@gJ
                                                   g$y$30749$1a@gJ
                                                   g$r$30737$1a@gJ
                                                   g$mr$30738$1a@gJ)))))))
                                        (g$gen-lexical$28346$1a@gJ
                                          'tmp)))))))
                              g$pvars$30745$1a@gJ
                              g$p$30744$1a@gJ)))))))
                   (g$gen-syntax-case$30706$1a@gJ
                     (case-lambda
                       ((g$x$30717$1a@gJ
                          g$keys$30718$1a@gJ
                          g$clauses$30719$1a@gJ
                          g$r$30720$1a@gJ
                          g$mr$30721$1a@gJ)
                        (if (null? g$clauses$30719$1a@gJ)
                          (list
                            '(primitive syntax-error)
                            g$x$30717$1a@gJ)
                          ((case-lambda
                             ((g$t$30722$1a@gJ)
                              ((case-lambda
                                 ((g$ls/false$30723$1a@gJ)
                                  (if g$ls/false$30723$1a@gJ
                                    (apply
                                      (case-lambda
                                        ((g$pat$30724$1a@gJ
                                           g$expr$30725$1a@gJ)
                                         (if (if (g$id?$28411$1a@gJ
                                                   g$pat$30724$1a@gJ)
                                               (if (not (g$bound-id-member?$28418$1a@gJ
                                                          g$pat$30724$1a@gJ
                                                          g$keys$30718$1a@gJ))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$28910$1a@gJ
                                                          g$pat$30724$1a@gJ)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$28415$1a@gJ
                                                 g$pat$30724$1a@gJ
                                                 (g$scheme-stx$28852$1a@gJ
                                                   '_))
                                             (g$chi-expr$28927$1a@gJ
                                               g$expr$30725$1a@gJ
                                               g$r$30720$1a@gJ
                                               g$mr$30721$1a@gJ)
                                             ((case-lambda
                                                ((g$lab$30726$1a@gJ
                                                   g$lex$30727$1a@gJ)
                                                 ((case-lambda
                                                    ((g$body$30728$1a@gJ)
                                                     (list
                                                       (g$build-lambda$28333$1a@gJ
                                                         '#f
                                                         (list
                                                           g$lex$30727$1a@gJ)
                                                         g$body$30728$1a@gJ)
                                                       g$x$30717$1a@gJ)))
                                                  (g$chi-expr$28927$1a@gJ
                                                    (g$add-subst$28401$1a@gJ
                                                      (g$make-full-rib$28377$1a@gJ
                                                        (list
                                                          g$pat$30724$1a@gJ)
                                                        (list
                                                          g$lab$30726$1a@gJ))
                                                      g$expr$30725$1a@gJ)
                                                    (cons
                                                      (cons
                                                        g$lab$30726$1a@gJ
                                                        (g$make-binding$28427$1a@gJ
                                                          'syntax
                                                          (cons
                                                            g$lex$30727$1a@gJ
                                                            '0)))
                                                      g$r$30720$1a@gJ)
                                                    g$mr$30721$1a@gJ))))
                                              (g$gen-label$28348$1a@gJ
                                                g$pat$30724$1a@gJ)
                                              (g$gen-lexical$28346$1a@gJ
                                                g$pat$30724$1a@gJ)))
                                           (g$gen-clause$30705$1a@gJ
                                             g$x$30717$1a@gJ
                                             g$keys$30718$1a@gJ
                                             (cdr g$clauses$30719$1a@gJ)
                                             g$r$30720$1a@gJ
                                             g$mr$30721$1a@gJ
                                             g$pat$30724$1a@gJ
                                             '#t
                                             g$expr$30725$1a@gJ))))
                                      g$ls/false$30723$1a@gJ)
                                    ((case-lambda
                                       ((g$t$30729$1a@gJ)
                                        ((case-lambda
                                           ((g$ls/false$30730$1a@gJ)
                                            (if g$ls/false$30730$1a@gJ
                                              (apply
                                                (case-lambda
                                                  ((g$pat$30731$1a@gJ
                                                     g$fender$30732$1a@gJ
                                                     g$expr$30733$1a@gJ)
                                                   (g$gen-clause$30705$1a@gJ
                                                     g$x$30717$1a@gJ
                                                     g$keys$30718$1a@gJ
                                                     (cdr g$clauses$30719$1a@gJ)
                                                     g$r$30720$1a@gJ
                                                     g$mr$30721$1a@gJ
                                                     g$pat$30731$1a@gJ
                                                     g$fender$30732$1a@gJ
                                                     g$expr$30733$1a@gJ)))
                                                g$ls/false$30730$1a@gJ)
                                              (g$syntax-violation$29029$1a@gJ
                                                '#f
                                                '"invalid syntax"
                                                g$t$30729$1a@gJ))))
                                         (g$syntax-dispatch$28909$1a@gJ
                                           g$t$30729$1a@gJ
                                           '(any any any)))))
                                     g$t$30722$1a@gJ))))
                               (g$syntax-dispatch$28909$1a@gJ
                                 g$t$30722$1a@gJ
                                 '(any any)))))
                           (car g$clauses$30719$1a@gJ)))))))
           (case-lambda
             ((g$e$30707$1a@gJ g$r$30708$1a@gJ g$mr$30709$1a@gJ)
              ((case-lambda
                 ((g$t$30710$1a@gJ)
                  ((case-lambda
                     ((g$ls/false$30711$1a@gJ)
                      (if g$ls/false$30711$1a@gJ
                        (apply
                          (case-lambda
                            ((g$expr$30712$1a@gJ
                               g$keys$30713$1a@gJ
                               g$clauses$30714$1a@gJ)
                             (begin
                               (g$verify-literals$28912$1a@gJ
                                 g$keys$30713$1a@gJ
                                 g$e$30707$1a@gJ)
                               ((case-lambda
                                  ((g$x$30715$1a@gJ)
                                   ((case-lambda
                                      ((g$body$30716$1a@gJ)
                                       (list
                                         (g$build-lambda$28333$1a@gJ
                                           '#f
                                           (list g$x$30715$1a@gJ)
                                           g$body$30716$1a@gJ)
                                         (g$chi-expr$28927$1a@gJ
                                           g$expr$30712$1a@gJ
                                           g$r$30708$1a@gJ
                                           g$mr$30709$1a@gJ))))
                                    (g$gen-syntax-case$30706$1a@gJ
                                      g$x$30715$1a@gJ
                                      g$keys$30713$1a@gJ
                                      g$clauses$30714$1a@gJ
                                      g$r$30708$1a@gJ
                                      g$mr$30709$1a@gJ))))
                                (g$gen-lexical$28346$1a@gJ 'tmp)))))
                          g$ls/false$30711$1a@gJ)
                        (g$syntax-violation$29029$1a@gJ
                          '#f
                          '"invalid syntax"
                          g$t$30710$1a@gJ))))
                   (g$syntax-dispatch$28909$1a@gJ
                     g$t$30710$1a@gJ
                     '(_ any each-any . each-any)))))
               g$e$30707$1a@gJ))))))))
   (g$ellipsis-map$28914$1a@gJ
     g$ellipsis-map$32513$1a@gJ
     (case-lambda
       ((g$proc$30773$1a@gJ g$ls$30774$1a@gJ . g$ls*$30775$1a@gJ)
        (letrec* ((g$who$30776$1a@gJ '...))
          (begin
            (if (not (list? g$ls$30774$1a@gJ))
              (assertion-violation
                g$who$30776$1a@gJ
                '"not a list"
                g$ls$30774$1a@gJ)
              (void))
            (if (not (null? g$ls*$30775$1a@gJ))
              ((case-lambda
                 ((g$n$30777$1a@gJ)
                  (g$for-each$20196$1a@gJ
                    (case-lambda
                      ((g$x$30778$1a@gJ)
                       (begin
                         (if (not (list? g$x$30778$1a@gJ))
                           (assertion-violation
                             g$who$30776$1a@gJ
                             '"not a list"
                             g$x$30778$1a@gJ)
                           (void))
                         (if (not (g$=$21669$1a@gJ
                                    (length g$x$30778$1a@gJ)
                                    g$n$30777$1a@gJ))
                           (assertion-violation
                             g$who$30776$1a@gJ
                             '"length mismatch"
                             g$ls$30774$1a@gJ
                             g$x$30778$1a@gJ)
                           (void)))))
                    g$ls*$30775$1a@gJ)))
               (length g$ls$30774$1a@gJ))
              (void))
            (apply
              g$map$20195$1a@gJ
              g$proc$30773$1a@gJ
              g$ls$30774$1a@gJ
              g$ls*$30775$1a@gJ))))))
   (g$syntax-transformer$28915$1a@gJ
     g$syntax-transformer$32514$1a@gJ
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$30779$1a@gJ
                     (case-lambda
                       ((g$src$30839$1a@gJ
                          g$e$30840$1a@gJ
                          g$r$30841$1a@gJ
                          g$maps$30842$1a@gJ
                          g$ellipsis?$30843$1a@gJ
                          g$vec?$30844$1a@gJ)
                        ((case-lambda
                           ((g$t$30845$1a@gJ)
                            ((case-lambda
                               ((g$ls/false$30846$1a@gJ)
                                (if (if g$ls/false$30846$1a@gJ
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$30847$1a@gJ)
                                             (g$ellipsis?$30843$1a@gJ
                                               g$dots$30847$1a@gJ)))
                                          g$ls/false$30846$1a@gJ))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$30848$1a@gJ)
                                       (g$syntax-violation$29029$1a@gJ
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$30839$1a@gJ)))
                                    g$ls/false$30846$1a@gJ)
                                  ((case-lambda
                                     ((g$t$30849$1a@gJ)
                                      ((case-lambda
                                         ((g$ls/false$30850$1a@gJ)
                                          (if (if g$ls/false$30850$1a@gJ
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$30851$1a@gJ)
                                                       (g$id?$28411$1a@gJ
                                                         g$id$30851$1a@gJ)))
                                                    g$ls/false$30850$1a@gJ))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$30852$1a@gJ)
                                                 ((case-lambda
                                                    ((g$label$30853$1a@gJ)
                                                     ((case-lambda
                                                        ((g$b$30854$1a@gJ)
                                                         (if (eq? (g$binding-type$28428$1a@gJ
                                                                    g$b$30854$1a@gJ)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$30857$1a@gJ)
                                                                    (g$gen-ref$30780$1a@gJ
                                                                      g$src$30839$1a@gJ
                                                                      (car g$var.lev$30857$1a@gJ)
                                                                      (cdr g$var.lev$30857$1a@gJ)
                                                                      g$maps$30842$1a@gJ)))
                                                                 (g$binding-value$28429$1a@gJ
                                                                   g$b$30854$1a@gJ))))
                                                             (case-lambda
                                                               ((g$var$30858$1a@gJ
                                                                  g$maps$30859$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$maps$30860$1a@gJ
                                                                      g$var$30861$1a@gJ)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$30861$1a@gJ)
                                                                      g$maps$30860$1a@gJ)))
                                                                 g$maps$30859$1a@gJ
                                                                 g$var$30858$1a@gJ))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$30840$1a@gJ)
                                                             g$maps$30842$1a@gJ))))
                                                      (g$label->binding$28426$1a@gJ
                                                        g$label$30853$1a@gJ
                                                        g$r$30841$1a@gJ))))
                                                  (g$id->label$28424$1a@gJ
                                                    g$e$30840$1a@gJ))))
                                              g$ls/false$30850$1a@gJ)
                                            ((case-lambda
                                               ((g$t$30862$1a@gJ)
                                                ((case-lambda
                                                   ((g$ls/false$30863$1a@gJ)
                                                    (if (if g$ls/false$30863$1a@gJ
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$30864$1a@gJ
                                                                   g$e$30865$1a@gJ)
                                                                 (g$ellipsis?$30843$1a@gJ
                                                                   g$dots$30864$1a@gJ)))
                                                              g$ls/false$30863$1a@gJ))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$30866$1a@gJ
                                                             g$e$30867$1a@gJ)
                                                           (if g$vec?$30844$1a@gJ
                                                             (g$syntax-violation$29029$1a@gJ
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$30839$1a@gJ)
                                                             (g$gen-syntax$30779$1a@gJ
                                                               g$src$30839$1a@gJ
                                                               g$e$30867$1a@gJ
                                                               g$r$30841$1a@gJ
                                                               g$maps$30842$1a@gJ
                                                               (case-lambda
                                                                 ((g$x$30868$1a@gJ)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$30863$1a@gJ)
                                                      ((case-lambda
                                                         ((g$t$30869$1a@gJ)
                                                          ((case-lambda
                                                             ((g$ls/false$30870$1a@gJ)
                                                              (if (if g$ls/false$30870$1a@gJ
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$30871$1a@gJ
                                                                             g$dots$30872$1a@gJ
                                                                             g$y$30873$1a@gJ)
                                                                           (g$ellipsis?$30843$1a@gJ
                                                                             g$dots$30872$1a@gJ)))
                                                                        g$ls/false$30870$1a@gJ))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$30874$1a@gJ
                                                                       g$dots$30875$1a@gJ
                                                                       g$y$30876$1a@gJ)
                                                                     ((letrec ((g$f$30877$1a@gJ
                                                                                 (case-lambda
                                                                                   ((g$y$30878$1a@gJ
                                                                                      g$k$30879$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$30880$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30881$1a@gJ)
                                                                                            (if g$ls/false$30881$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$30879$1a@gJ
                                                                                                     g$maps$30842$1a@gJ)))
                                                                                                g$ls/false$30881$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$t$30882$1a@gJ)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$30883$1a@gJ)
                                                                                                      (if (if g$ls/false$30883$1a@gJ
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$30884$1a@gJ
                                                                                                                     g$y$30885$1a@gJ)
                                                                                                                   (g$ellipsis?$30843$1a@gJ
                                                                                                                     g$dots$30884$1a@gJ)))
                                                                                                                g$ls/false$30883$1a@gJ))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$30886$1a@gJ
                                                                                                               g$y$30887$1a@gJ)
                                                                                                             (g$f$30877$1a@gJ
                                                                                                               g$y$30887$1a@gJ
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$30888$1a@gJ)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$30879$1a@gJ
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$30888$1a@gJ))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$30891$1a@gJ
                                                                                                                         g$maps$30892$1a@gJ)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$30893$1a@gJ
                                                                                                                             g$x$30894$1a@gJ)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$30893$1a@gJ))
                                                                                                                             (g$syntax-violation$29029$1a@gJ
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$30839$1a@gJ)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$30782$1a@gJ
                                                                                                                                 g$x$30894$1a@gJ
                                                                                                                                 (car g$maps$30893$1a@gJ))
                                                                                                                               (cdr g$maps$30893$1a@gJ)))))
                                                                                                                        g$maps$30892$1a@gJ
                                                                                                                        g$x$30891$1a@gJ)))))))))
                                                                                                          g$ls/false$30883$1a@gJ)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$30895$1a@gJ)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$30896$1a@gJ)
                                                                                                                (if g$ls/false$30896$1a@gJ
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$30779$1a@gJ
                                                                                                                              g$src$30839$1a@gJ
                                                                                                                              g$y$30878$1a@gJ
                                                                                                                              g$r$30841$1a@gJ
                                                                                                                              g$maps$30842$1a@gJ
                                                                                                                              g$ellipsis?$30843$1a@gJ
                                                                                                                              g$vec?$30844$1a@gJ)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$30899$1a@gJ
                                                                                                                              g$maps$30900$1a@gJ)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$30901$1a@gJ
                                                                                                                                  g$y$30902$1a@gJ)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$30879$1a@gJ
                                                                                                                                       g$maps$30901$1a@gJ)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$30905$1a@gJ
                                                                                                                                       g$maps$30906$1a@gJ)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$30907$1a@gJ
                                                                                                                                           g$x$30908$1a@gJ)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$30781$1a@gJ
                                                                                                                                             g$x$30908$1a@gJ
                                                                                                                                             g$y$30902$1a@gJ)
                                                                                                                                           g$maps$30907$1a@gJ)))
                                                                                                                                      g$maps$30906$1a@gJ
                                                                                                                                      g$x$30905$1a@gJ))))))
                                                                                                                             g$maps$30900$1a@gJ
                                                                                                                             g$y$30899$1a@gJ))))))
                                                                                                                    g$ls/false$30896$1a@gJ)
                                                                                                                  (g$syntax-violation$29029$1a@gJ
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$30895$1a@gJ))))
                                                                                                             (g$syntax-dispatch$28909$1a@gJ
                                                                                                               g$t$30895$1a@gJ
                                                                                                               '_))))
                                                                                                         g$t$30882$1a@gJ))))
                                                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                                                     g$t$30882$1a@gJ
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$30880$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$30880$1a@gJ
                                                                                           '()))))
                                                                                     g$y$30878$1a@gJ)))))
                                                                        g$f$30877$1a@gJ)
                                                                      g$y$30876$1a@gJ
                                                                      (case-lambda
                                                                        ((g$maps$30909$1a@gJ)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$30779$1a@gJ
                                                                                g$src$30839$1a@gJ
                                                                                g$x$30874$1a@gJ
                                                                                g$r$30841$1a@gJ
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$30909$1a@gJ)
                                                                                g$ellipsis?$30843$1a@gJ
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$30912$1a@gJ
                                                                                g$maps$30913$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$maps$30914$1a@gJ
                                                                                    g$x$30915$1a@gJ)
                                                                                  (if (null?
                                                                                        (car g$maps$30914$1a@gJ))
                                                                                    (g$syntax-violation$29029$1a@gJ
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$30839$1a@gJ)
                                                                                    (values
                                                                                      (g$gen-map$30783$1a@gJ
                                                                                        g$x$30915$1a@gJ
                                                                                        (car g$maps$30914$1a@gJ))
                                                                                      (cdr g$maps$30914$1a@gJ)))))
                                                                               g$maps$30913$1a@gJ
                                                                               g$x$30912$1a@gJ)))))))))
                                                                  g$ls/false$30870$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$t$30916$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30917$1a@gJ)
                                                                        (if g$ls/false$30917$1a@gJ
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$30918$1a@gJ
                                                                                 g$y$30919$1a@gJ)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$30779$1a@gJ
                                                                                      g$src$30839$1a@gJ
                                                                                      g$x$30918$1a@gJ
                                                                                      g$r$30841$1a@gJ
                                                                                      g$maps$30842$1a@gJ
                                                                                      g$ellipsis?$30843$1a@gJ
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$30922$1a@gJ
                                                                                      g$maps$30923$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$maps$30924$1a@gJ
                                                                                          g$xnew$30925$1a@gJ)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$30779$1a@gJ
                                                                                               g$src$30839$1a@gJ
                                                                                               g$y$30919$1a@gJ
                                                                                               g$r$30841$1a@gJ
                                                                                               g$maps$30924$1a@gJ
                                                                                               g$ellipsis?$30843$1a@gJ
                                                                                               g$vec?$30844$1a@gJ)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$30928$1a@gJ
                                                                                               g$maps$30929$1a@gJ)
                                                                                             ((case-lambda
                                                                                                ((g$maps$30930$1a@gJ
                                                                                                   g$ynew$30931$1a@gJ)
                                                                                                 (values
                                                                                                   (g$gen-cons$30784$1a@gJ
                                                                                                     g$e$30840$1a@gJ
                                                                                                     g$x$30918$1a@gJ
                                                                                                     g$y$30919$1a@gJ
                                                                                                     g$xnew$30925$1a@gJ
                                                                                                     g$ynew$30931$1a@gJ)
                                                                                                   g$maps$30930$1a@gJ)))
                                                                                              g$maps$30929$1a@gJ
                                                                                              g$ynew$30928$1a@gJ))))))
                                                                                     g$maps$30923$1a@gJ
                                                                                     g$xnew$30922$1a@gJ))))))
                                                                            g$ls/false$30917$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$30932$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30933$1a@gJ)
                                                                                  (if g$ls/false$30933$1a@gJ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$30934$1a@gJ)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$30779$1a@gJ
                                                                                                g$src$30839$1a@gJ
                                                                                                g$ls$30934$1a@gJ
                                                                                                g$r$30841$1a@gJ
                                                                                                g$maps$30842$1a@gJ
                                                                                                g$ellipsis?$30843$1a@gJ
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$30937$1a@gJ
                                                                                                g$maps$30938$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$30939$1a@gJ
                                                                                                    g$lsnew$30940$1a@gJ)
                                                                                                  (values
                                                                                                    (g$gen-vector$30785$1a@gJ
                                                                                                      g$e$30840$1a@gJ
                                                                                                      g$ls$30934$1a@gJ
                                                                                                      g$lsnew$30940$1a@gJ)
                                                                                                    g$maps$30939$1a@gJ)))
                                                                                               g$maps$30938$1a@gJ
                                                                                               g$lsnew$30937$1a@gJ))))))
                                                                                      g$ls/false$30933$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$30941$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30942$1a@gJ)
                                                                                            (if g$ls/false$30942$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$30840$1a@gJ)
                                                                                                     g$maps$30842$1a@gJ)))
                                                                                                g$ls/false$30942$1a@gJ)
                                                                                              (g$syntax-violation$29029$1a@gJ
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$30941$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$30941$1a@gJ
                                                                                           '_))))
                                                                                     g$t$30932$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$30932$1a@gJ
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$30916$1a@gJ))))
                                                                     (g$syntax-dispatch$28909$1a@gJ
                                                                       g$t$30916$1a@gJ
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$30869$1a@gJ))))
                                                           (g$syntax-dispatch$28909$1a@gJ
                                                             g$t$30869$1a@gJ
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$30862$1a@gJ))))
                                                 (g$syntax-dispatch$28909$1a@gJ
                                                   g$t$30862$1a@gJ
                                                   '(any any)))))
                                             g$t$30849$1a@gJ))))
                                       (g$syntax-dispatch$28909$1a@gJ
                                         g$t$30849$1a@gJ
                                         'any))))
                                   g$t$30845$1a@gJ))))
                             (g$syntax-dispatch$28909$1a@gJ
                               g$t$30845$1a@gJ
                               'any))))
                         g$e$30840$1a@gJ))))
                   (g$gen-ref$30780$1a@gJ
                     (case-lambda
                       ((g$src$30826$1a@gJ
                          g$var$30827$1a@gJ
                          g$level$30828$1a@gJ
                          g$maps$30829$1a@gJ)
                        (if (g$=$21669$1a@gJ g$level$30828$1a@gJ '0)
                          (values g$var$30827$1a@gJ g$maps$30829$1a@gJ)
                          (if (null? g$maps$30829$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$30826$1a@gJ)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$30780$1a@gJ
                                   g$src$30826$1a@gJ
                                   g$var$30827$1a@gJ
                                   (- g$level$30828$1a@gJ '1)
                                   (cdr g$maps$30829$1a@gJ))))
                              (case-lambda
                                ((g$outer-var$30832$1a@gJ
                                   g$outer-maps$30833$1a@gJ)
                                 ((case-lambda
                                    ((g$outer-maps$30834$1a@gJ
                                       g$outer-var$30835$1a@gJ)
                                     ((case-lambda
                                        ((g$t$30836$1a@gJ)
                                         (if g$t$30836$1a@gJ
                                           ((case-lambda
                                              ((g$b$30837$1a@gJ)
                                               (values
                                                 (cdr g$b$30837$1a@gJ)
                                                 g$maps$30829$1a@gJ)))
                                            g$t$30836$1a@gJ)
                                           (begin
                                             '#f
                                             ((case-lambda
                                                ((g$inner-var$30838$1a@gJ)
                                                 (values
                                                   g$inner-var$30838$1a@gJ
                                                   (cons
                                                     (cons
                                                       (cons
                                                         g$outer-var$30835$1a@gJ
                                                         g$inner-var$30838$1a@gJ)
                                                       (car g$maps$30829$1a@gJ))
                                                     g$outer-maps$30834$1a@gJ))))
                                              (g$gen-lexical$28346$1a@gJ
                                                'tmp))))))
                                      (g$assq$20183$1a@gJ
                                        g$outer-var$30835$1a@gJ
                                        (car g$maps$30829$1a@gJ)))))
                                  g$outer-maps$30833$1a@gJ
                                  g$outer-var$30832$1a@gJ)))))))))
                   (g$gen-append$30781$1a@gJ
                     (case-lambda
                       ((g$x$30824$1a@gJ g$y$30825$1a@gJ)
                        (if (g$equal?$27047$1a@gJ g$y$30825$1a@gJ ''())
                          g$x$30824$1a@gJ
                          (list
                            'append
                            g$x$30824$1a@gJ
                            g$y$30825$1a@gJ)))))
                   (g$gen-mappend$30782$1a@gJ
                     (case-lambda
                       ((g$e$30822$1a@gJ g$map-env$30823$1a@gJ)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$30783$1a@gJ
                            g$e$30822$1a@gJ
                            g$map-env$30823$1a@gJ)))))
                   (g$gen-map$30783$1a@gJ
                     (case-lambda
                       ((g$e$30813$1a@gJ g$map-env$30814$1a@gJ)
                        ((case-lambda
                           ((g$formals$30815$1a@gJ
                              g$actuals$30816$1a@gJ)
                            (if (eq? (car g$e$30813$1a@gJ) 'ref)
                              (car g$actuals$30816$1a@gJ)
                              (if (g$for-all$20193$1a@gJ
                                    (case-lambda
                                      ((g$x$30817$1a@gJ)
                                       (if (eq? (car g$x$30817$1a@gJ)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$20187$1a@gJ
                                             (g$cadr$20658$1a@gJ
                                               g$x$30817$1a@gJ)
                                             g$formals$30815$1a@gJ))
                                         '#f)))
                                    (cdr g$e$30813$1a@gJ))
                                ((case-lambda
                                   ((g$args$30818$1a@gJ)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$30813$1a@gJ))
                                        g$args$30818$1a@gJ))))
                                 (g$map$20195$1a@gJ
                                   ((case-lambda
                                      ((g$r$30819$1a@gJ)
                                       (case-lambda
                                         ((g$x$30820$1a@gJ)
                                          (cdr (g$assq$20183$1a@gJ
                                                 (g$cadr$20658$1a@gJ
                                                   g$x$30820$1a@gJ)
                                                 g$r$30819$1a@gJ))))))
                                    (g$map$20195$1a@gJ
                                      cons
                                      g$formals$30815$1a@gJ
                                      g$actuals$30816$1a@gJ))
                                   (cdr g$e$30813$1a@gJ)))
                                (begin
                                  '#f
                                  (g$cons*$20197$1a@gJ
                                    'map
                                    (list
                                      'lambda
                                      g$formals$30815$1a@gJ
                                      g$e$30813$1a@gJ)
                                    g$actuals$30816$1a@gJ))))))
                         (g$map$20195$1a@gJ cdr g$map-env$30814$1a@gJ)
                         (g$map$20195$1a@gJ
                           (case-lambda
                             ((g$x$30821$1a@gJ)
                              (list 'ref (car g$x$30821$1a@gJ))))
                           g$map-env$30814$1a@gJ)))))
                   (g$gen-cons$30784$1a@gJ
                     (case-lambda
                       ((g$e$30805$1a@gJ
                          g$x$30806$1a@gJ
                          g$y$30807$1a@gJ
                          g$xnew$30808$1a@gJ
                          g$ynew$30809$1a@gJ)
                        ((case-lambda
                           ((g$t$30810$1a@gJ)
                            (if (eqv? g$t$30810$1a@gJ 'quote)
                              (if (eq? (car g$xnew$30808$1a@gJ) 'quote)
                                ((case-lambda
                                   ((g$xnew$30811$1a@gJ
                                      g$ynew$30812$1a@gJ)
                                    (if (if (eq? g$xnew$30811$1a@gJ
                                                 g$x$30806$1a@gJ)
                                          (begin
                                            '#f
                                            (eq? g$ynew$30812$1a@gJ
                                                 g$y$30807$1a@gJ))
                                          '#f)
                                      (list 'quote g$e$30805$1a@gJ)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$30811$1a@gJ
                                          g$ynew$30812$1a@gJ)))))
                                 (g$cadr$20658$1a@gJ g$xnew$30808$1a@gJ)
                                 (g$cadr$20658$1a@gJ
                                   g$ynew$30809$1a@gJ))
                                (if (null?
                                      (g$cadr$20658$1a@gJ
                                        g$ynew$30809$1a@gJ))
                                  (list 'list g$xnew$30808$1a@gJ)
                                  (list
                                    'cons
                                    g$xnew$30808$1a@gJ
                                    g$ynew$30809$1a@gJ)))
                              (if (eqv? g$t$30810$1a@gJ 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$30808$1a@gJ
                                    (cdr g$ynew$30809$1a@gJ)))
                                (begin
                                  '#f
                                  (list
                                    'cons
                                    g$xnew$30808$1a@gJ
                                    g$ynew$30809$1a@gJ))))))
                         (car g$ynew$30809$1a@gJ)))))
                   (g$gen-vector$30785$1a@gJ
                     (case-lambda
                       ((g$e$30802$1a@gJ
                          g$ls$30803$1a@gJ
                          g$lsnew$30804$1a@gJ)
                        (if (eq? (car g$lsnew$30804$1a@gJ) 'quote)
                          (if (eq? (g$cadr$20658$1a@gJ
                                     g$lsnew$30804$1a@gJ)
                                   g$ls$30803$1a@gJ)
                            (list 'quote g$e$30802$1a@gJ)
                            (list
                              'quote
                              (g$list->vector$20647$1a@gJ
                                (g$cadr$20658$1a@gJ
                                  g$lsnew$30804$1a@gJ))))
                          (if (eq? (car g$lsnew$30804$1a@gJ) 'list)
                            (cons 'vector (cdr g$lsnew$30804$1a@gJ))
                            (begin
                              '#f
                              (list
                                'list->vector
                                g$lsnew$30804$1a@gJ)))))))
                   (g$regen$30786$1a@gJ
                     (case-lambda
                       ((g$x$30799$1a@gJ)
                        ((case-lambda
                           ((g$t$30800$1a@gJ)
                            (if (eqv? g$t$30800$1a@gJ 'ref)
                              (g$cadr$20658$1a@gJ g$x$30799$1a@gJ)
                              (if (eqv? g$t$30800$1a@gJ 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$20658$1a@gJ g$x$30799$1a@gJ))
                                (if (eqv? g$t$30800$1a@gJ 'quote)
                                  (list
                                    'quote
                                    (g$cadr$20658$1a@gJ
                                      g$x$30799$1a@gJ))
                                  (if (eqv? g$t$30800$1a@gJ 'lambda)
                                    (g$build-lambda$28333$1a@gJ
                                      '#f
                                      (g$cadr$20658$1a@gJ
                                        g$x$30799$1a@gJ)
                                      (g$regen$30786$1a@gJ
                                        (g$caddr$20664$1a@gJ
                                          g$x$30799$1a@gJ)))
                                    (if (eqv? g$t$30800$1a@gJ 'map)
                                      ((case-lambda
                                         ((g$ls$30801$1a@gJ)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$30801$1a@gJ)))
                                       (g$map$20195$1a@gJ
                                         g$regen$30786$1a@gJ
                                         (cdr g$x$30799$1a@gJ)))
                                      (begin
                                        '#f
                                        (cons
                                          (list
                                            'primitive
                                            (car g$x$30799$1a@gJ))
                                          (g$map$20195$1a@gJ
                                            g$regen$30786$1a@gJ
                                            (cdr g$x$30799$1a@gJ)))))))))))
                         (car g$x$30799$1a@gJ))))))
           (case-lambda
             ((g$e$30787$1a@gJ g$r$30788$1a@gJ g$mr$30789$1a@gJ)
              ((case-lambda
                 ((g$t$30790$1a@gJ)
                  ((case-lambda
                     ((g$ls/false$30791$1a@gJ)
                      (if g$ls/false$30791$1a@gJ
                        (apply
                          (case-lambda
                            ((g$x$30792$1a@gJ)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$30779$1a@gJ
                                    g$e$30787$1a@gJ
                                    g$x$30792$1a@gJ
                                    g$r$30788$1a@gJ
                                    '()
                                    g$ellipsis?$28910$1a@gJ
                                    '#f)))
                               (case-lambda
                                 ((g$e$30795$1a@gJ g$maps$30796$1a@gJ)
                                  ((case-lambda
                                     ((g$maps$30797$1a@gJ
                                        g$e$30798$1a@gJ)
                                      (g$regen$30786$1a@gJ
                                        g$e$30798$1a@gJ)))
                                   g$maps$30796$1a@gJ
                                   g$e$30795$1a@gJ))))))
                          g$ls/false$30791$1a@gJ)
                        (g$syntax-violation$29029$1a@gJ
                          '#f
                          '"invalid syntax"
                          g$t$30790$1a@gJ))))
                   (g$syntax-dispatch$28909$1a@gJ
                     g$t$30790$1a@gJ
                     '(_ any)))))
               g$e$30787$1a@gJ))))))))
   (g$core-macro-transformer$28916$1a@gJ
     g$core-macro-transformer$32515$1a@gJ
     (case-lambda
       ((g$name$30943$1a@gJ)
        ((case-lambda
           ((g$t$30944$1a@gJ)
            (if (eqv? g$t$30944$1a@gJ 'quote)
              g$quote-transformer$28869$1a@gJ
              (if (eqv? g$t$30944$1a@gJ 'lambda)
                g$lambda-transformer$28871$1a@gJ
                (if (eqv? g$t$30944$1a@gJ 'case-lambda)
                  g$case-lambda-transformer$28870$1a@gJ
                  (if (eqv? g$t$30944$1a@gJ 'letrec)
                    g$letrec-transformer$28859$1a@gJ
                    (if (eqv? g$t$30944$1a@gJ 'letrec*)
                      g$letrec*-transformer$28860$1a@gJ
                      (if (eqv? g$t$30944$1a@gJ 'if)
                        g$if-transformer$28867$1a@gJ
                        (if (eqv? g$t$30944$1a@gJ 'foreign-call)
                          g$foreign-call-transformer$28907$1a@gJ
                          (if (eqv? g$t$30944$1a@gJ 'syntax-case)
                            g$syntax-case-transformer$28913$1a@gJ
                            (if (eqv? g$t$30944$1a@gJ 'syntax)
                              g$syntax-transformer$28915$1a@gJ
                              (if (eqv?
                                    g$t$30944$1a@gJ
                                    'type-descriptor)
                                g$type-descriptor-transformer$28862$1a@gJ
                                (if (eqv?
                                      g$t$30944$1a@gJ
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$28863$1a@gJ
                                  (if (eqv?
                                        g$t$30944$1a@gJ
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$28864$1a@gJ
                                    (if (eqv?
                                          g$t$30944$1a@gJ
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$28861$1a@gJ
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'macro-transformer
                                          '"BUG: cannot find transformer"
                                          g$name$30943$1a@gJ)))))))))))))))))
         g$name$30943$1a@gJ))))
   (g$file-options-macro$28917$1a@gJ
     g$file-options-macro$32516$1a@gJ
     (case-lambda
       ((g$x$30945$1a@gJ)
        (letrec* ((g$valid-option?$30946$1a@gJ
                    (case-lambda
                      ((g$x$30951$1a@gJ)
                       (if (g$id?$28411$1a@gJ g$x$30951$1a@gJ)
                         (begin
                           '#f
                           (g$memq$20187$1a@gJ
                             (g$id->sym$28412$1a@gJ g$x$30951$1a@gJ)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$30947$1a@gJ)
              ((case-lambda
                 ((g$ls/false$30948$1a@gJ)
                  (if (if g$ls/false$30948$1a@gJ
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$30949$1a@gJ)
                               (if (g$for-all$20193$1a@gJ
                                     g$valid-option?$30946$1a@gJ
                                     g$opt*$30949$1a@gJ)
                                 (begin
                                   '#f
                                   (g$file-options-spec$27254$1a@gJ
                                     (g$map$20195$1a@gJ
                                       g$id->sym$28412$1a@gJ
                                       g$opt*$30949$1a@gJ)))
                                 '#f)))
                            g$ls/false$30948$1a@gJ))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$30950$1a@gJ)
                         (g$bless$28872$1a@gJ
                           (list
                             'quote
                             (g$file-options-spec$27254$1a@gJ
                               (g$map$20195$1a@gJ
                                 g$id->sym$28412$1a@gJ
                                 g$opt*$30950$1a@gJ))))))
                      g$ls/false$30948$1a@gJ)
                    (g$syntax-violation$29029$1a@gJ
                      '#f
                      '"invalid syntax"
                      g$t$30947$1a@gJ))))
               (g$syntax-dispatch$28909$1a@gJ
                 g$t$30947$1a@gJ
                 '(_ . each-any)))))
           g$x$30945$1a@gJ)))))
   (g$symbol-macro$28918$1a@gJ
     g$symbol-macro$32517$1a@gJ
     (case-lambda
       ((g$x$30952$1a@gJ g$set$30953$1a@gJ)
        ((case-lambda
           ((g$t$30954$1a@gJ)
            ((case-lambda
               ((g$ls/false$30955$1a@gJ)
                (if (if g$ls/false$30955$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$30956$1a@gJ)
                             (if (g$id?$28411$1a@gJ g$name$30956$1a@gJ)
                               (begin
                                 '#f
                                 (g$memq$20187$1a@gJ
                                   (g$id->sym$28412$1a@gJ
                                     g$name$30956$1a@gJ)
                                   g$set$30953$1a@gJ))
                               '#f)))
                          g$ls/false$30955$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$30957$1a@gJ)
                       (g$bless$28872$1a@gJ
                         (list 'quote g$name$30957$1a@gJ))))
                    g$ls/false$30955$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$30954$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ g$t$30954$1a@gJ '(_ any)))))
         g$x$30952$1a@gJ))))
   (g$macro-transformer$28919$1a@gJ
     g$macro-transformer$32518$1a@gJ
     (case-lambda
       ((g$x$30958$1a@gJ)
        (if (g$procedure?$20622$1a@gJ g$x$30958$1a@gJ)
          g$x$30958$1a@gJ
          (if (g$symbol?$20620$1a@gJ g$x$30958$1a@gJ)
            ((case-lambda
               ((g$t$30959$1a@gJ)
                (if (eqv? g$t$30959$1a@gJ 'define-record-type)
                  g$define-record-type-macro$28903$1a@gJ
                  (if (eqv? g$t$30959$1a@gJ 'define-struct)
                    g$define-struct-macro$28902$1a@gJ
                    (if (eqv? g$t$30959$1a@gJ 'include)
                      g$include-macro$28897$1a@gJ
                      (if (eqv? g$t$30959$1a@gJ 'cond)
                        g$cond-macro$28895$1a@gJ
                        (if (eqv? g$t$30959$1a@gJ 'let)
                          g$let-macro$28875$1a@gJ
                          (if (eqv? g$t$30959$1a@gJ 'do)
                            g$do-macro$28891$1a@gJ
                            (if (eqv? g$t$30959$1a@gJ 'or)
                              g$or-macro$28893$1a@gJ
                              (if (eqv? g$t$30959$1a@gJ 'and)
                                g$and-macro$28894$1a@gJ
                                (if (eqv? g$t$30959$1a@gJ 'let*)
                                  g$let*-macro$28892$1a@gJ
                                  (if (eqv? g$t$30959$1a@gJ 'let-values)
                                    g$let-values-macro$28876$1a@gJ
                                    (if (eqv?
                                          g$t$30959$1a@gJ
                                          'let*-values)
                                      g$let*-values-macro$28877$1a@gJ
                                      (if (eqv?
                                            g$t$30959$1a@gJ
                                            'syntax-rules)
                                        g$syntax-rules-macro$28899$1a@gJ
                                        (if (eqv?
                                              g$t$30959$1a@gJ
                                              'quasiquote)
                                          g$quasiquote-macro$28900$1a@gJ
                                          (if (eqv?
                                                g$t$30959$1a@gJ
                                                'quasisyntax)
                                            g$quasisyntax-macro$28901$1a@gJ
                                            (if (eqv?
                                                  g$t$30959$1a@gJ
                                                  'with-syntax)
                                              g$with-syntax-macro$28873$1a@gJ
                                              (if (eqv?
                                                    g$t$30959$1a@gJ
                                                    'when)
                                                g$when-macro$28865$1a@gJ
                                                (if (eqv?
                                                      g$t$30959$1a@gJ
                                                      'unless)
                                                  g$unless-macro$28866$1a@gJ
                                                  (if (eqv?
                                                        g$t$30959$1a@gJ
                                                        'case)
                                                    g$case-macro$28868$1a@gJ
                                                    (if (eqv?
                                                          g$t$30959$1a@gJ
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$28890$1a@gJ
                                                      (if (eqv?
                                                            g$t$30959$1a@gJ
                                                            'time)
                                                        g$time-macro$28886$1a@gJ
                                                        (if (eqv?
                                                              g$t$30959$1a@gJ
                                                              'delay)
                                                          g$delay-macro$28887$1a@gJ
                                                          (if (eqv?
                                                                g$t$30959$1a@gJ
                                                                'assert)
                                                            g$assert-macro$28888$1a@gJ
                                                            (if (eqv?
                                                                  g$t$30959$1a@gJ
                                                                  'endianness)
                                                              g$endianness-macro$28889$1a@gJ
                                                              (if (eqv?
                                                                    g$t$30959$1a@gJ
                                                                    'guard)
                                                                g$guard-macro$28884$1a@gJ
                                                                (if (eqv?
                                                                      g$t$30959$1a@gJ
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$28885$1a@gJ
                                                                  (if (eqv?
                                                                        g$t$30959$1a@gJ
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$28878$1a@gJ
                                                                    (if (eqv?
                                                                          g$t$30959$1a@gJ
                                                                          'trace-define)
                                                                      g$trace-define-macro$28879$1a@gJ
                                                                      (if (eqv?
                                                                            g$t$30959$1a@gJ
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$28880$1a@gJ
                                                                        (if (eqv?
                                                                              g$t$30959$1a@gJ
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$28882$1a@gJ
                                                                          (if (eqv?
                                                                                g$t$30959$1a@gJ
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$28883$1a@gJ
                                                                            (if (eqv?
                                                                                  g$t$30959$1a@gJ
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$28904$1a@gJ
                                                                              (if (eqv?
                                                                                    g$t$30959$1a@gJ
                                                                                    'parameterize)
                                                                                g$parameterize-macro$28906$1a@gJ
                                                                                (if (eqv?
                                                                                      g$t$30959$1a@gJ
                                                                                      'include-into)
                                                                                  g$include-into-macro$28898$1a@gJ
                                                                                  (if (eqv?
                                                                                        g$t$30959$1a@gJ
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$30960$1a@gJ)
                                                                                       (g$symbol-macro$28918$1a@gJ
                                                                                         g$x$30960$1a@gJ
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$30959$1a@gJ
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$30961$1a@gJ)
                                                                                         (g$symbol-macro$28918$1a@gJ
                                                                                           g$x$30961$1a@gJ
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$30959$1a@gJ
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$30962$1a@gJ)
                                                                                           (g$symbol-macro$28918$1a@gJ
                                                                                             g$x$30962$1a@gJ
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$30959$1a@gJ
                                                                                              'file-options)
                                                                                          g$file-options-macro$28917$1a@gJ
                                                                                          (if (g$memv$20188$1a@gJ
                                                                                                g$t$30959$1a@gJ
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$28905$1a@gJ
                                                                                            (begin
                                                                                              '#f
                                                                                              (error
                                                                                                'macro-transformer
                                                                                                '"BUG: invalid macro"
                                                                                                g$x$30958$1a@gJ))))))))))))))))))))))))))))))))))))))))))
             g$x$30958$1a@gJ)
            (begin
              '#f
              (error
                'core-macro-transformer
                '"BUG: invalid macro"
                g$x$30958$1a@gJ)))))))
   (g$local-macro-transformer$28920$1a@gJ
     g$local-macro-transformer$32519$1a@gJ
     (case-lambda ((g$x$30963$1a@gJ) (car g$x$30963$1a@gJ))))
   (g$do-macro-call$28921$1a@gJ
     g$do-macro-call$32520$1a@gJ
     (case-lambda
       ((g$transformer$30964$1a@gJ g$expr$30965$1a@gJ g$r$30966$1a@gJ)
        (letrec* ((g$return$30967$1a@gJ
                    (case-lambda
                      ((g$x$30975$1a@gJ)
                       (begin
                         ((letrec ((g$f$30976$1a@gJ
                                     (case-lambda
                                       ((g$x$30977$1a@gJ)
                                        (if (not (g$stx?$28383$1a@gJ
                                                   g$x$30977$1a@gJ))
                                          (if (pair? g$x$30977$1a@gJ)
                                            (begin
                                              (g$f$30976$1a@gJ
                                                (car g$x$30977$1a@gJ))
                                              (g$f$30976$1a@gJ
                                                (cdr g$x$30977$1a@gJ)))
                                            (if (g$vector?$20618$1a@gJ
                                                  g$x$30977$1a@gJ)
                                              (g$vector-for-each$20708$1a@gJ
                                                g$f$30976$1a@gJ
                                                g$x$30977$1a@gJ)
                                              (if (g$symbol?$20620$1a@gJ
                                                    g$x$30977$1a@gJ)
                                                (g$syntax-violation$29029$1a@gJ
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$30965$1a@gJ
                                                  g$x$30977$1a@gJ)
                                                (void))))
                                          (void))))))
                            g$f$30976$1a@gJ)
                          g$x$30975$1a@gJ)
                         (g$add-mark$28400$1a@gJ
                           (g$gen-mark$28395$1a@gJ)
                           g$x$30975$1a@gJ
                           g$expr$30965$1a@gJ))))))
          ((case-lambda
             ((g$x$30968$1a@gJ)
              (if (g$procedure?$20622$1a@gJ g$x$30968$1a@gJ)
                (g$return$30967$1a@gJ
                  (g$x$30968$1a@gJ
                    (case-lambda
                      ((g$id$30969$1a@gJ)
                       (begin
                         (if (not (g$id?$28411$1a@gJ g$id$30969$1a@gJ))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$30969$1a@gJ)
                           (void))
                         ((case-lambda
                            ((g$label$30970$1a@gJ)
                             ((case-lambda
                                ((g$binding$30971$1a@gJ)
                                 ((case-lambda
                                    ((g$t$30972$1a@gJ)
                                     (if (eqv?
                                           g$t$30972$1a@gJ
                                           'local-ctv)
                                       (g$cadr$20658$1a@gJ
                                         g$binding$30971$1a@gJ)
                                       (if (eqv?
                                             g$t$30972$1a@gJ
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$30973$1a@gJ
                                               g$loc$30974$1a@gJ)
                                             (begin
                                               (g$visit-library$28118$1a@gJ
                                                 g$lib$30973$1a@gJ)
                                               (symbol-value
                                                 g$loc$30974$1a@gJ))))
                                          (g$cadr$20658$1a@gJ
                                            g$binding$30971$1a@gJ)
                                          (g$cddr$20660$1a@gJ
                                            g$binding$30971$1a@gJ))
                                         (begin '#f '#f)))))
                                  (car g$binding$30971$1a@gJ))))
                              (g$label->binding$28426$1a@gJ
                                g$label$30970$1a@gJ
                                g$r$30966$1a@gJ))))
                          (g$id->label$28424$1a@gJ
                            g$id$30969$1a@gJ)))))))
                (g$return$30967$1a@gJ g$x$30968$1a@gJ))))
           (g$transformer$30964$1a@gJ
             (g$add-mark$28400$1a@gJ
               g$anti-mark$28396$1a@gJ
               g$expr$30965$1a@gJ
               '#f)))))))
   (g$chi-macro$28922$1a@gJ
     g$chi-macro$32521$1a@gJ
     (case-lambda
       ((g$p$30978$1a@gJ g$e$30979$1a@gJ g$r$30980$1a@gJ)
        (g$do-macro-call$28921$1a@gJ
          (g$macro-transformer$28919$1a@gJ g$p$30978$1a@gJ)
          g$e$30979$1a@gJ
          g$r$30980$1a@gJ))))
   (g$chi-local-macro$28923$1a@gJ
     g$chi-local-macro$32522$1a@gJ
     (case-lambda
       ((g$p$30981$1a@gJ g$e$30982$1a@gJ g$r$30983$1a@gJ)
        (g$do-macro-call$28921$1a@gJ
          (g$local-macro-transformer$28920$1a@gJ g$p$30981$1a@gJ)
          g$e$30982$1a@gJ
          g$r$30983$1a@gJ))))
   (g$chi-global-macro$28924$1a@gJ
     g$chi-global-macro$32523$1a@gJ
     (case-lambda
       ((g$p$30984$1a@gJ g$e$30985$1a@gJ g$r$30986$1a@gJ)
        ((case-lambda
           ((g$lib$30987$1a@gJ g$loc$30988$1a@gJ)
            (begin
              (g$visit-library$28118$1a@gJ g$lib$30987$1a@gJ)
              ((case-lambda
                 ((g$x$30989$1a@gJ)
                  ((case-lambda
                     ((g$transformer$30990$1a@gJ)
                      (g$do-macro-call$28921$1a@gJ
                        g$transformer$30990$1a@gJ
                        g$e$30985$1a@gJ
                        g$r$30986$1a@gJ)))
                   (if (g$procedure?$20622$1a@gJ g$x$30989$1a@gJ)
                     g$x$30989$1a@gJ
                     (begin
                       '#f
                       (assertion-violation
                         'chi-global-macro
                         '"BUG: not a procedure"
                         g$x$30989$1a@gJ))))))
               (symbol-value g$loc$30988$1a@gJ)))))
         (car g$p$30984$1a@gJ)
         (cdr g$p$30984$1a@gJ)))))
   (g$chi-expr*$28925$1a@gJ
     g$chi-expr*$32524$1a@gJ
     (case-lambda
       ((g$e*$30991$1a@gJ g$r$30992$1a@gJ g$mr$30993$1a@gJ)
        (if (null? g$e*$30991$1a@gJ)
          '()
          (begin
            '#f
            ((case-lambda
               ((g$e$30994$1a@gJ)
                (cons
                  g$e$30994$1a@gJ
                  (g$chi-expr*$28925$1a@gJ
                    (cdr g$e*$30991$1a@gJ)
                    g$r$30992$1a@gJ
                    g$mr$30993$1a@gJ))))
             (g$chi-expr$28927$1a@gJ
               (car g$e*$30991$1a@gJ)
               g$r$30992$1a@gJ
               g$mr$30993$1a@gJ)))))))
   (g$chi-application$28926$1a@gJ
     g$chi-application$32525$1a@gJ
     (case-lambda
       ((g$e$30995$1a@gJ g$r$30996$1a@gJ g$mr$30997$1a@gJ)
        ((case-lambda
           ((g$t$30998$1a@gJ)
            ((case-lambda
               ((g$ls/false$30999$1a@gJ)
                (if g$ls/false$30999$1a@gJ
                  (apply
                    (case-lambda
                      ((g$rator$31000$1a@gJ g$rands$31001$1a@gJ)
                       ((case-lambda
                          ((g$rator$31002$1a@gJ)
                           (cons
                             g$rator$31002$1a@gJ
                             (g$chi-expr*$28925$1a@gJ
                               g$rands$31001$1a@gJ
                               g$r$30996$1a@gJ
                               g$mr$30997$1a@gJ))))
                        (g$chi-expr$28927$1a@gJ
                          g$rator$31000$1a@gJ
                          g$r$30996$1a@gJ
                          g$mr$30997$1a@gJ))))
                    g$ls/false$30999$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$30998$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$30998$1a@gJ
               '(any . each-any)))))
         g$e$30995$1a@gJ))))
   (g$chi-expr$28927$1a@gJ
     g$chi-expr$32526$1a@gJ
     (case-lambda
       ((g$e$31003$1a@gJ g$r$31004$1a@gJ g$mr$31005$1a@gJ)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$28431$1a@gJ
               g$e$31003$1a@gJ
               g$r$31004$1a@gJ)))
          (case-lambda
            ((g$type$31009$1a@gJ g$value$31010$1a@gJ g$kwd$31011$1a@gJ)
             ((case-lambda
                ((g$kwd$31012$1a@gJ
                   g$value$31013$1a@gJ
                   g$type$31014$1a@gJ)
                 ((case-lambda
                    ((g$t$31015$1a@gJ)
                     (if (eqv? g$t$31015$1a@gJ 'core-macro)
                       ((case-lambda
                          ((g$transformer$31016$1a@gJ)
                           (g$transformer$31016$1a@gJ
                             g$e$31003$1a@gJ
                             g$r$31004$1a@gJ
                             g$mr$31005$1a@gJ)))
                        (g$core-macro-transformer$28916$1a@gJ
                          g$value$31013$1a@gJ))
                       (if (eqv? g$t$31015$1a@gJ 'global)
                         ((case-lambda
                            ((g$lib$31017$1a@gJ)
                             ((case-lambda
                                ((g$loc$31018$1a@gJ)
                                 (begin
                                   ((g$inv-collector$28964$1a@gJ)
                                    g$lib$31017$1a@gJ)
                                   g$loc$31018$1a@gJ)))
                              (cdr g$value$31013$1a@gJ))))
                          (car g$value$31013$1a@gJ))
                         (if (eqv? g$t$31015$1a@gJ 'core-prim)
                           ((case-lambda
                              ((g$name$31019$1a@gJ)
                               (list 'primitive g$name$31019$1a@gJ)))
                            g$value$31013$1a@gJ)
                           (if (eqv? g$t$31015$1a@gJ 'call)
                             (g$chi-application$28926$1a@gJ
                               g$e$31003$1a@gJ
                               g$r$31004$1a@gJ
                               g$mr$31005$1a@gJ)
                             (if (eqv? g$t$31015$1a@gJ 'lexical)
                               ((case-lambda
                                  ((g$lex$31020$1a@gJ)
                                   g$lex$31020$1a@gJ))
                                (g$lexical-var$28853$1a@gJ
                                  g$value$31013$1a@gJ))
                               (if (g$memv$20188$1a@gJ
                                     g$t$31015$1a@gJ
                                     '(global-macro global-macro!))
                                 (g$chi-expr$28927$1a@gJ
                                   (g$chi-global-macro$28924$1a@gJ
                                     g$value$31013$1a@gJ
                                     g$e$31003$1a@gJ
                                     g$r$31004$1a@gJ)
                                   g$r$31004$1a@gJ
                                   g$mr$31005$1a@gJ)
                                 (if (g$memv$20188$1a@gJ
                                       g$t$31015$1a@gJ
                                       '(local-macro local-macro!))
                                   (g$chi-expr$28927$1a@gJ
                                     (g$chi-local-macro$28923$1a@gJ
                                       g$value$31013$1a@gJ
                                       g$e$31003$1a@gJ
                                       g$r$31004$1a@gJ)
                                     g$r$31004$1a@gJ
                                     g$mr$31005$1a@gJ)
                                   (if (g$memv$20188$1a@gJ
                                         g$t$31015$1a@gJ
                                         '(macro macro!))
                                     (g$chi-expr$28927$1a@gJ
                                       (g$chi-macro$28922$1a@gJ
                                         g$value$31013$1a@gJ
                                         g$e$31003$1a@gJ
                                         g$r$31004$1a@gJ)
                                       g$r$31004$1a@gJ
                                       g$mr$31005$1a@gJ)
                                     (if (eqv?
                                           g$t$31015$1a@gJ
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$31021$1a@gJ)
                                           (list
                                             'quote
                                             g$datum$31021$1a@gJ)))
                                        g$value$31013$1a@gJ)
                                       (if (eqv? g$t$31015$1a@gJ 'set!)
                                         (g$chi-set!$28928$1a@gJ
                                           g$e$31003$1a@gJ
                                           g$r$31004$1a@gJ
                                           g$mr$31005$1a@gJ)
                                         (if (eqv?
                                               g$t$31015$1a@gJ
                                               'begin)
                                           ((case-lambda
                                              ((g$t$31022$1a@gJ)
                                               ((case-lambda
                                                  ((g$ls/false$31023$1a@gJ)
                                                   (if g$ls/false$31023$1a@gJ
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$31024$1a@gJ
                                                            g$x*$31025$1a@gJ)
                                                          (g$build-sequence$28336$1a@gJ
                                                            '#f
                                                            (g$chi-expr*$28925$1a@gJ
                                                              (cons
                                                                g$x$31024$1a@gJ
                                                                g$x*$31025$1a@gJ)
                                                              g$r$31004$1a@gJ
                                                              g$mr$31005$1a@gJ))))
                                                       g$ls/false$31023$1a@gJ)
                                                     (g$syntax-violation$29029$1a@gJ
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$31022$1a@gJ))))
                                                (g$syntax-dispatch$28909$1a@gJ
                                                  g$t$31022$1a@gJ
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$31003$1a@gJ)
                                           (if (g$memv$20188$1a@gJ
                                                 g$t$31015$1a@gJ
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$31026$1a@gJ)
                                                 ((case-lambda
                                                    ((g$ls/false$31027$1a@gJ)
                                                     (if (if g$ls/false$31027$1a@gJ
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$31028$1a@gJ
                                                                    g$xrhs*$31029$1a@gJ
                                                                    g$xbody$31030$1a@gJ
                                                                    g$xbody*$31031$1a@gJ)
                                                                  (if (not (g$valid-bound-ids?$28416$1a@gJ
                                                                             g$xlhs*$31028$1a@gJ))
                                                                    (g$syntax-violation$29029$1a@gJ
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$31003$1a@gJ)
                                                                    (void))))
                                                               g$ls/false$31027$1a@gJ))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$31032$1a@gJ
                                                              g$xrhs*$31033$1a@gJ
                                                              g$xbody$31034$1a@gJ
                                                              g$xbody*$31035$1a@gJ)
                                                            ((case-lambda
                                                               ((g$xlab*$31036$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$xrib$31037$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$xb*$31038$1a@gJ)
                                                                        (g$build-sequence$28336$1a@gJ
                                                                          '#f
                                                                          (g$chi-expr*$28925$1a@gJ
                                                                            (g$map$20195$1a@gJ
                                                                              (case-lambda
                                                                                ((g$x$31039$1a@gJ)
                                                                                 (g$add-subst$28401$1a@gJ
                                                                                   g$xrib$31037$1a@gJ
                                                                                   g$x$31039$1a@gJ)))
                                                                              (cons
                                                                                g$xbody$31034$1a@gJ
                                                                                g$xbody*$31035$1a@gJ))
                                                                            (g$append$20200$1a@gJ
                                                                              (g$map$20195$1a@gJ
                                                                                cons
                                                                                g$xlab*$31036$1a@gJ
                                                                                g$xb*$31038$1a@gJ)
                                                                              g$r$31004$1a@gJ)
                                                                            (g$append$20200$1a@gJ
                                                                              (g$map$20195$1a@gJ
                                                                                cons
                                                                                g$xlab*$31036$1a@gJ
                                                                                g$xb*$31038$1a@gJ)
                                                                              g$mr$31005$1a@gJ)))))
                                                                     (g$map$20195$1a@gJ
                                                                       (case-lambda
                                                                         ((g$x$31040$1a@gJ)
                                                                          (g$make-eval-transformer$28459$1a@gJ
                                                                            (g$expand-transformer$28957$1a@gJ
                                                                              (if (eq? g$type$31014$1a@gJ
                                                                                       'let-syntax)
                                                                                g$x$31040$1a@gJ
                                                                                (g$add-subst$28401$1a@gJ
                                                                                  g$xrib$31037$1a@gJ
                                                                                  g$x$31040$1a@gJ))
                                                                              g$mr$31005$1a@gJ))))
                                                                       g$xrhs*$31033$1a@gJ))))
                                                                 (g$make-full-rib$28377$1a@gJ
                                                                   g$xlhs*$31032$1a@gJ
                                                                   g$xlab*$31036$1a@gJ))))
                                                             (g$map$20195$1a@gJ
                                                               g$gen-label$28348$1a@gJ
                                                               g$xlhs*$31032$1a@gJ))))
                                                         g$ls/false$31027$1a@gJ)
                                                       (g$syntax-violation$29029$1a@gJ
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$31026$1a@gJ))))
                                                  (g$syntax-dispatch$28909$1a@gJ
                                                    g$t$31026$1a@gJ
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$31003$1a@gJ)
                                             (if (eqv?
                                                   g$t$31015$1a@gJ
                                                   'displaced-lexical)
                                               (g$syntax-violation$29029$1a@gJ
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$31003$1a@gJ)
                                               (if (eqv?
                                                     g$t$31015$1a@gJ
                                                     'syntax)
                                                 (g$syntax-violation$29029$1a@gJ
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$31003$1a@gJ)
                                                 (if (g$memv$20188$1a@gJ
                                                       g$t$31015$1a@gJ
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$29029$1a@gJ
                                                     '#f
                                                     (g$string-append$20638$1a@gJ
                                                       ((case-lambda
                                                          ((g$t$31041$1a@gJ)
                                                           (if (eqv?
                                                                 g$t$31041$1a@gJ
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$31041$1a@gJ
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$31041$1a@gJ
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$31041$1a@gJ
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$31041$1a@gJ
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$31041$1a@gJ
                                                                           'export)
                                                                       '"an export declaration"
                                                                       (begin
                                                                         '#f
                                                                         '"a non-expression")))))))))
                                                        g$type$31014$1a@gJ)
                                                       '" was found where an expression was expected")
                                                     g$e$31003$1a@gJ)
                                                   (if (eqv?
                                                         g$t$31015$1a@gJ
                                                         'mutable)
                                                     (g$syntax-violation$29029$1a@gJ
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$31003$1a@gJ)
                                                     (begin
                                                       '#f
                                                       (g$syntax-violation$29029$1a@gJ
                                                         '#f
                                                         '"invalid expression"
                                                         g$e$31003$1a@gJ))))))))))))))))))))
                  g$type$31014$1a@gJ)))
              g$kwd$31011$1a@gJ
              g$value$31010$1a@gJ
              g$type$31009$1a@gJ)))))))
   (g$chi-set!$28928$1a@gJ
     g$chi-set!$32527$1a@gJ
     (case-lambda
       ((g$e$31042$1a@gJ g$r$31043$1a@gJ g$mr$31044$1a@gJ)
        ((case-lambda
           ((g$t$31045$1a@gJ)
            ((case-lambda
               ((g$ls/false$31046$1a@gJ)
                (if (if g$ls/false$31046$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$31047$1a@gJ g$v$31048$1a@gJ)
                             (g$id?$28411$1a@gJ g$x$31047$1a@gJ)))
                          g$ls/false$31046$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$31049$1a@gJ g$v$31050$1a@gJ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$28431$1a@gJ
                              g$x$31049$1a@gJ
                              g$r$31043$1a@gJ)))
                         (case-lambda
                           ((g$type$31054$1a@gJ
                              g$value$31055$1a@gJ
                              g$kwd$31056$1a@gJ)
                            ((case-lambda
                               ((g$kwd$31057$1a@gJ
                                  g$value$31058$1a@gJ
                                  g$type$31059$1a@gJ)
                                ((case-lambda
                                   ((g$t$31060$1a@gJ)
                                    (if (eqv? g$t$31060$1a@gJ 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$28855$1a@gJ
                                          g$value$31058$1a@gJ
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$28853$1a@gJ
                                            g$value$31058$1a@gJ)
                                          (g$chi-expr$28927$1a@gJ
                                            g$v$31050$1a@gJ
                                            g$r$31043$1a@gJ
                                            g$mr$31044$1a@gJ)))
                                      (if (eqv?
                                            g$t$31060$1a@gJ
                                            'core-prim)
                                        (g$syntax-violation$29029$1a@gJ
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$31042$1a@gJ)
                                        (if (eqv?
                                              g$t$31060$1a@gJ
                                              'global)
                                          (g$syntax-violation$29029$1a@gJ
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$31042$1a@gJ)
                                          (if (eqv?
                                                g$t$31060$1a@gJ
                                                'global-macro!)
                                            (g$chi-expr$28927$1a@gJ
                                              (g$chi-global-macro$28924$1a@gJ
                                                g$value$31058$1a@gJ
                                                g$e$31042$1a@gJ
                                                g$r$31043$1a@gJ)
                                              g$r$31043$1a@gJ
                                              g$mr$31044$1a@gJ)
                                            (if (eqv?
                                                  g$t$31060$1a@gJ
                                                  'local-macro!)
                                              (g$chi-expr$28927$1a@gJ
                                                (g$chi-local-macro$28923$1a@gJ
                                                  g$value$31058$1a@gJ
                                                  g$e$31042$1a@gJ
                                                  g$r$31043$1a@gJ)
                                                g$r$31043$1a@gJ
                                                g$mr$31044$1a@gJ)
                                              (if (eqv?
                                                    g$t$31060$1a@gJ
                                                    'mutable)
                                                (g$syntax-violation$29029$1a@gJ
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$31042$1a@gJ)
                                                (begin
                                                  '#f
                                                  (g$syntax-violation$29029$1a@gJ
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$31042$1a@gJ))))))))))
                                 g$type$31059$1a@gJ)))
                             g$kwd$31056$1a@gJ
                             g$value$31055$1a@gJ
                             g$type$31054$1a@gJ))))))
                    g$ls/false$31046$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$31045$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31045$1a@gJ
               '(_ any any)))))
         g$e$31042$1a@gJ))))
   (g$verify-formals$28929$1a@gJ
     g$verify-formals$32528$1a@gJ
     (case-lambda
       ((g$fmls$31061$1a@gJ g$stx$31062$1a@gJ)
        ((case-lambda
           ((g$t$31063$1a@gJ)
            ((case-lambda
               ((g$ls/false$31064$1a@gJ)
                (if g$ls/false$31064$1a@gJ
                  (apply
                    (case-lambda
                      ((g$x*$31065$1a@gJ)
                       (if (not (g$valid-bound-ids?$28416$1a@gJ
                                  g$x*$31065$1a@gJ))
                         (g$invalid-fmls-error$28874$1a@gJ
                           g$stx$31062$1a@gJ
                           g$fmls$31061$1a@gJ)
                         (void))))
                    g$ls/false$31064$1a@gJ)
                  ((case-lambda
                     ((g$t$31066$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$31067$1a@gJ)
                          (if g$ls/false$31067$1a@gJ
                            (apply
                              (case-lambda
                                ((g$x*$31068$1a@gJ g$x$31069$1a@gJ)
                                 (if (not (g$valid-bound-ids?$28416$1a@gJ
                                            (cons
                                              g$x$31069$1a@gJ
                                              g$x*$31068$1a@gJ)))
                                   (g$invalid-fmls-error$28874$1a@gJ
                                     g$stx$31062$1a@gJ
                                     g$fmls$31061$1a@gJ)
                                   (void))))
                              g$ls/false$31067$1a@gJ)
                            ((case-lambda
                               ((g$t$31070$1a@gJ)
                                ((case-lambda
                                   ((g$ls/false$31071$1a@gJ)
                                    (if g$ls/false$31071$1a@gJ
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$stx$31062$1a@gJ)))
                                        g$ls/false$31071$1a@gJ)
                                      (g$syntax-violation$29029$1a@gJ
                                        '#f
                                        '"invalid syntax"
                                        g$t$31070$1a@gJ))))
                                 (g$syntax-dispatch$28909$1a@gJ
                                   g$t$31070$1a@gJ
                                   '_))))
                             g$t$31066$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$31066$1a@gJ
                         '#(each+ any () any)))))
                   g$t$31063$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31063$1a@gJ
               'each-any))))
         g$fmls$31061$1a@gJ))))
   (g$chi-lambda-clause$28930$1a@gJ
     g$chi-lambda-clause$32529$1a@gJ
     (case-lambda
       ((g$stx$31072$1a@gJ
          g$fmls$31073$1a@gJ
          g$body*$31074$1a@gJ
          g$r$31075$1a@gJ
          g$mr$31076$1a@gJ)
        ((case-lambda
           ((g$t$31077$1a@gJ)
            ((case-lambda
               ((g$ls/false$31078$1a@gJ)
                (if g$ls/false$31078$1a@gJ
                  (apply
                    (case-lambda
                      ((g$x*$31079$1a@gJ)
                       (begin
                         (g$verify-formals$28929$1a@gJ
                           g$fmls$31073$1a@gJ
                           g$stx$31072$1a@gJ)
                         ((case-lambda
                            ((g$lex*$31080$1a@gJ g$lab*$31081$1a@gJ)
                             (values
                               g$lex*$31080$1a@gJ
                               (g$chi-internal$28938$1a@gJ
                                 (g$add-subst$28401$1a@gJ
                                   (g$make-full-rib$28377$1a@gJ
                                     g$x*$31079$1a@gJ
                                     g$lab*$31081$1a@gJ)
                                   g$body*$31074$1a@gJ)
                                 (g$add-lexicals$28857$1a@gJ
                                   g$lab*$31081$1a@gJ
                                   g$lex*$31080$1a@gJ
                                   g$r$31075$1a@gJ)
                                 g$mr$31076$1a@gJ))))
                          (g$map$20195$1a@gJ
                            g$gen-lexical$28346$1a@gJ
                            g$x*$31079$1a@gJ)
                          (g$map$20195$1a@gJ
                            g$gen-label$28348$1a@gJ
                            g$x*$31079$1a@gJ)))))
                    g$ls/false$31078$1a@gJ)
                  ((case-lambda
                     ((g$t$31082$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$31083$1a@gJ)
                          (if g$ls/false$31083$1a@gJ
                            (apply
                              (case-lambda
                                ((g$x*$31084$1a@gJ g$x$31085$1a@gJ)
                                 (begin
                                   (g$verify-formals$28929$1a@gJ
                                     g$fmls$31073$1a@gJ
                                     g$stx$31072$1a@gJ)
                                   ((case-lambda
                                      ((g$lex*$31086$1a@gJ
                                         g$lab*$31087$1a@gJ
                                         g$lex$31088$1a@gJ
                                         g$lab$31089$1a@gJ)
                                       (values
                                         (g$append$20200$1a@gJ
                                           g$lex*$31086$1a@gJ
                                           g$lex$31088$1a@gJ)
                                         (g$chi-internal$28938$1a@gJ
                                           (g$add-subst$28401$1a@gJ
                                             (g$make-full-rib$28377$1a@gJ
                                               (cons
                                                 g$x$31085$1a@gJ
                                                 g$x*$31084$1a@gJ)
                                               (cons
                                                 g$lab$31089$1a@gJ
                                                 g$lab*$31087$1a@gJ))
                                             g$body*$31074$1a@gJ)
                                           (g$add-lexicals$28857$1a@gJ
                                             (cons
                                               g$lab$31089$1a@gJ
                                               g$lab*$31087$1a@gJ)
                                             (cons
                                               g$lex$31088$1a@gJ
                                               g$lex*$31086$1a@gJ)
                                             g$r$31075$1a@gJ)
                                           g$mr$31076$1a@gJ))))
                                    (g$map$20195$1a@gJ
                                      g$gen-lexical$28346$1a@gJ
                                      g$x*$31084$1a@gJ)
                                    (g$map$20195$1a@gJ
                                      g$gen-label$28348$1a@gJ
                                      g$x*$31084$1a@gJ)
                                    (g$gen-lexical$28346$1a@gJ
                                      g$x$31085$1a@gJ)
                                    (g$gen-label$28348$1a@gJ
                                      g$x$31085$1a@gJ)))))
                              g$ls/false$31083$1a@gJ)
                            ((case-lambda
                               ((g$t$31090$1a@gJ)
                                ((case-lambda
                                   ((g$ls/false$31091$1a@gJ)
                                    (if g$ls/false$31091$1a@gJ
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$29029$1a@gJ
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$31073$1a@gJ)))
                                        g$ls/false$31091$1a@gJ)
                                      (g$syntax-violation$29029$1a@gJ
                                        '#f
                                        '"invalid syntax"
                                        g$t$31090$1a@gJ))))
                                 (g$syntax-dispatch$28909$1a@gJ
                                   g$t$31090$1a@gJ
                                   '_))))
                             g$t$31082$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$31082$1a@gJ
                         '#(each+ any () any)))))
                   g$t$31077$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31077$1a@gJ
               'each-any))))
         g$fmls$31073$1a@gJ))))
   (g$chi-lambda-clause*$28931$1a@gJ
     g$chi-lambda-clause*$32530$1a@gJ
     (case-lambda
       ((g$stx$31092$1a@gJ
          g$fmls*$31093$1a@gJ
          g$body**$31094$1a@gJ
          g$r$31095$1a@gJ
          g$mr$31096$1a@gJ)
        (if (null? g$fmls*$31093$1a@gJ)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$28930$1a@gJ
                   g$stx$31092$1a@gJ
                   (car g$fmls*$31093$1a@gJ)
                   (car g$body**$31094$1a@gJ)
                   g$r$31095$1a@gJ
                   g$mr$31096$1a@gJ)))
              (case-lambda
                ((g$a$31099$1a@gJ g$b$31100$1a@gJ)
                 ((case-lambda
                    ((g$b$31101$1a@gJ g$a$31102$1a@gJ)
                     (call-with-values
                       (case-lambda
                         (()
                          (g$chi-lambda-clause*$28931$1a@gJ
                            g$stx$31092$1a@gJ
                            (cdr g$fmls*$31093$1a@gJ)
                            (cdr g$body**$31094$1a@gJ)
                            g$r$31095$1a@gJ
                            g$mr$31096$1a@gJ)))
                       (case-lambda
                         ((g$a*$31105$1a@gJ g$b*$31106$1a@gJ)
                          ((case-lambda
                             ((g$b*$31107$1a@gJ g$a*$31108$1a@gJ)
                              (values
                                (cons g$a$31102$1a@gJ g$a*$31108$1a@gJ)
                                (cons
                                  g$b$31101$1a@gJ
                                  g$b*$31107$1a@gJ))))
                           g$b*$31106$1a@gJ
                           g$a*$31105$1a@gJ))))))
                  g$b$31100$1a@gJ
                  g$a$31099$1a@gJ)))))))))
   (g$chi-defun$28932$1a@gJ
     g$chi-defun$32531$1a@gJ
     (case-lambda
       ((g$x$31109$1a@gJ g$r$31110$1a@gJ g$mr$31111$1a@gJ)
        ((case-lambda
           ((g$t$31112$1a@gJ)
            ((case-lambda
               ((g$ls/false$31113$1a@gJ)
                (if g$ls/false$31113$1a@gJ
                  (apply
                    (case-lambda
                      ((g$fmls$31114$1a@gJ g$body*$31115$1a@gJ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$28930$1a@gJ
                              g$fmls$31114$1a@gJ
                              g$fmls$31114$1a@gJ
                              g$body*$31115$1a@gJ
                              g$r$31110$1a@gJ
                              g$mr$31111$1a@gJ)))
                         (case-lambda
                           ((g$fmls$31118$1a@gJ g$body$31119$1a@gJ)
                            ((case-lambda
                               ((g$body$31120$1a@gJ g$fmls$31121$1a@gJ)
                                (g$build-lambda$28333$1a@gJ
                                  (g$syntax-annotation$29024$1a@gJ
                                    g$x$31109$1a@gJ)
                                  g$fmls$31121$1a@gJ
                                  g$body$31120$1a@gJ)))
                             g$body$31119$1a@gJ
                             g$fmls$31118$1a@gJ))))))
                    g$ls/false$31113$1a@gJ)
                  (g$syntax-violation$29029$1a@gJ
                    '#f
                    '"invalid syntax"
                    g$t$31112$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31112$1a@gJ
               '(_ (_ . any) . any)))))
         g$x$31109$1a@gJ))))
   (g$chi-rhs$28933$1a@gJ
     g$chi-rhs$32532$1a@gJ
     (case-lambda
       ((g$rhs$31122$1a@gJ g$r$31123$1a@gJ g$mr$31124$1a@gJ)
        ((case-lambda
           ((g$t$31125$1a@gJ)
            (if (eqv? g$t$31125$1a@gJ 'defun)
              (g$chi-defun$28932$1a@gJ
                (cdr g$rhs$31122$1a@gJ)
                g$r$31123$1a@gJ
                g$mr$31124$1a@gJ)
              (if (eqv? g$t$31125$1a@gJ 'expr)
                ((case-lambda
                   ((g$expr$31126$1a@gJ)
                    (g$chi-expr$28927$1a@gJ
                      g$expr$31126$1a@gJ
                      g$r$31123$1a@gJ
                      g$mr$31124$1a@gJ)))
                 (cdr g$rhs$31122$1a@gJ))
                (if (eqv? g$t$31125$1a@gJ 'top-expr)
                  ((case-lambda
                     ((g$expr$31127$1a@gJ)
                      (g$build-sequence$28336$1a@gJ
                        '#f
                        (list
                          (g$chi-expr$28927$1a@gJ
                            g$expr$31127$1a@gJ
                            g$r$31123$1a@gJ
                            g$mr$31124$1a@gJ)
                          (g$build-void$28337$1a@gJ)))))
                   (cdr g$rhs$31122$1a@gJ))
                  (begin
                    '#f
                    (assertion-violation
                      'chi-rhs
                      '"BUG: invalid rhs"
                      g$rhs$31122$1a@gJ)))))))
         (car g$rhs$31122$1a@gJ)))))
   (g$expand-interaction-rhs*/init*$28934$1a@gJ
     g$expand-interaction-rhs*/init*$32533$1a@gJ
     (case-lambda
       ((g$lhs*$31128$1a@gJ
          g$rhs*$31129$1a@gJ
          g$init*$31130$1a@gJ
          g$r$31131$1a@gJ
          g$mr$31132$1a@gJ)
        ((letrec ((g$f$31133$1a@gJ
                    (case-lambda
                      ((g$lhs*$31134$1a@gJ g$rhs*$31135$1a@gJ)
                       (if (null? g$lhs*$31134$1a@gJ)
                         (g$map$20195$1a@gJ
                           (case-lambda
                             ((g$x$31136$1a@gJ)
                              (g$chi-expr$28927$1a@gJ
                                g$x$31136$1a@gJ
                                g$r$31131$1a@gJ
                                g$mr$31132$1a@gJ)))
                           g$init*$31130$1a@gJ)
                         (begin
                           '#f
                           ((case-lambda
                              ((g$lhs$31137$1a@gJ g$rhs$31138$1a@gJ)
                               ((case-lambda
                                  ((g$t$31139$1a@gJ)
                                   (if (eqv? g$t$31139$1a@gJ 'defun)
                                     ((case-lambda
                                        ((g$rhs$31140$1a@gJ)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$31137$1a@gJ
                                             g$rhs$31140$1a@gJ)
                                           (g$f$31133$1a@gJ
                                             (cdr g$lhs*$31134$1a@gJ)
                                             (cdr g$rhs*$31135$1a@gJ)))))
                                      (g$chi-defun$28932$1a@gJ
                                        (cdr g$rhs$31138$1a@gJ)
                                        g$r$31131$1a@gJ
                                        g$mr$31132$1a@gJ))
                                     (if (eqv? g$t$31139$1a@gJ 'expr)
                                       ((case-lambda
                                          ((g$rhs$31141$1a@gJ)
                                           (cons
                                             (list
                                               'set!
                                               g$lhs$31137$1a@gJ
                                               g$rhs$31141$1a@gJ)
                                             (g$f$31133$1a@gJ
                                               (cdr g$lhs*$31134$1a@gJ)
                                               (cdr g$rhs*$31135$1a@gJ)))))
                                        (g$chi-expr$28927$1a@gJ
                                          (cdr g$rhs$31138$1a@gJ)
                                          g$r$31131$1a@gJ
                                          g$mr$31132$1a@gJ))
                                       (if (eqv?
                                             g$t$31139$1a@gJ
                                             'top-expr)
                                         ((case-lambda
                                            ((g$e$31142$1a@gJ)
                                             (cons
                                               g$e$31142$1a@gJ
                                               (g$f$31133$1a@gJ
                                                 (cdr g$lhs*$31134$1a@gJ)
                                                 (cdr g$rhs*$31135$1a@gJ)))))
                                          (g$chi-expr$28927$1a@gJ
                                            (cdr g$rhs$31138$1a@gJ)
                                            g$r$31131$1a@gJ
                                            g$mr$31132$1a@gJ))
                                         (begin
                                           '#f
                                           (error
                                             'expand-interaction
                                             '"invallid"
                                             g$rhs$31138$1a@gJ)))))))
                                (car g$rhs$31138$1a@gJ))))
                            (car g$lhs*$31134$1a@gJ)
                            (car g$rhs*$31135$1a@gJ))))))))
           g$f$31133$1a@gJ)
         g$lhs*$31128$1a@gJ
         g$rhs*$31129$1a@gJ))))
   (g$chi-rhs*$28935$1a@gJ
     g$chi-rhs*$32534$1a@gJ
     (case-lambda
       ((g$rhs*$31143$1a@gJ g$r$31144$1a@gJ g$mr$31145$1a@gJ)
        ((letrec ((g$f$31146$1a@gJ
                    (case-lambda
                      ((g$ls$31147$1a@gJ)
                       (if (null? g$ls$31147$1a@gJ)
                         '()
                         (begin
                           '#f
                           ((case-lambda
                              ((g$a$31148$1a@gJ)
                               (cons
                                 g$a$31148$1a@gJ
                                 (g$f$31146$1a@gJ
                                   (cdr g$ls$31147$1a@gJ)))))
                            (g$chi-rhs$28933$1a@gJ
                              (car g$ls$31147$1a@gJ)
                              g$r$31144$1a@gJ
                              g$mr$31145$1a@gJ))))))))
           g$f$31146$1a@gJ)
         g$rhs*$31143$1a@gJ))))
   (g$find-bound=?$28936$1a@gJ
     g$find-bound=?$32535$1a@gJ
     (case-lambda
       ((g$x$31149$1a@gJ g$lhs*$31150$1a@gJ g$rhs*$31151$1a@gJ)
        (if (null? g$lhs*$31150$1a@gJ)
          '#f
          (if (g$bound-id=?$28414$1a@gJ
                g$x$31149$1a@gJ
                (car g$lhs*$31150$1a@gJ))
            (car g$rhs*$31151$1a@gJ)
            (begin
              '#f
              (g$find-bound=?$28936$1a@gJ
                g$x$31149$1a@gJ
                (cdr g$lhs*$31150$1a@gJ)
                (cdr g$rhs*$31151$1a@gJ))))))))
   (g$find-dups$28937$1a@gJ
     g$find-dups$32536$1a@gJ
     (case-lambda
       ((g$ls$31152$1a@gJ)
        ((letrec ((g$f$31153$1a@gJ
                    (case-lambda
                      ((g$ls$31154$1a@gJ g$dups$31155$1a@gJ)
                       (if (null? g$ls$31154$1a@gJ)
                         g$dups$31155$1a@gJ
                         ((case-lambda
                            ((g$t$31156$1a@gJ)
                             (if g$t$31156$1a@gJ
                               ((case-lambda
                                  ((g$x$31157$1a@gJ)
                                   (g$f$31153$1a@gJ
                                     (cdr g$ls$31154$1a@gJ)
                                     (cons
                                       (list
                                         (car g$ls$31154$1a@gJ)
                                         g$x$31157$1a@gJ)
                                       g$dups$31155$1a@gJ))))
                                g$t$31156$1a@gJ)
                               (begin
                                 '#f
                                 (g$f$31153$1a@gJ
                                   (cdr g$ls$31154$1a@gJ)
                                   g$dups$31155$1a@gJ)))))
                          (g$find-bound=?$28936$1a@gJ
                            (car g$ls$31154$1a@gJ)
                            (cdr g$ls$31154$1a@gJ)
                            (cdr g$ls$31154$1a@gJ))))))))
           g$f$31153$1a@gJ)
         g$ls$31152$1a@gJ
         '()))))
   (g$chi-internal$28938$1a@gJ
     g$chi-internal$32537$1a@gJ
     (case-lambda
       ((g$e*$31158$1a@gJ g$r$31159$1a@gJ g$mr$31160$1a@gJ)
        ((case-lambda
           ((g$rib$31161$1a@gJ)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$28956$1a@gJ
                   (g$map$20195$1a@gJ
                     (case-lambda
                       ((g$x$31170$1a@gJ)
                        (g$add-subst$28401$1a@gJ
                          g$rib$31161$1a@gJ
                          g$x$31170$1a@gJ)))
                     (g$syntax->list$28410$1a@gJ g$e*$31158$1a@gJ))
                   g$r$31159$1a@gJ
                   g$mr$31160$1a@gJ
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$31161$1a@gJ
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$31171$1a@gJ
                   g$r$31172$1a@gJ
                   g$mr$31173$1a@gJ
                   g$lex*$31174$1a@gJ
                   g$rhs*$31175$1a@gJ
                   g$mod**$31176$1a@gJ
                   g$kwd*$31177$1a@gJ
                   g$_exp*$31178$1a@gJ)
                 ((case-lambda
                    ((g$_exp*$31179$1a@gJ
                       g$kwd*$31180$1a@gJ
                       g$mod**$31181$1a@gJ
                       g$rhs*$31182$1a@gJ
                       g$lex*$31183$1a@gJ
                       g$mr$31184$1a@gJ
                       g$r$31185$1a@gJ
                       g$e*$31186$1a@gJ)
                     (begin
                       (if (null? g$e*$31186$1a@gJ)
                         (g$syntax-violation$29029$1a@gJ
                           '#f
                           '"no expression in body"
                           g$e*$31186$1a@gJ)
                         (void))
                       ((case-lambda
                          ((g$init*$31187$1a@gJ)
                           ((case-lambda
                              ((g$rhs*$31188$1a@gJ)
                               (g$build-letrec*$28339$1a@gJ
                                 '#f
                                 (g$reverse$20656$1a@gJ
                                   g$lex*$31183$1a@gJ)
                                 (g$reverse$20656$1a@gJ
                                   g$rhs*$31188$1a@gJ)
                                 (g$build-sequence$28336$1a@gJ
                                   '#f
                                   g$init*$31187$1a@gJ))))
                            (g$chi-rhs*$28935$1a@gJ
                              g$rhs*$31182$1a@gJ
                              g$r$31185$1a@gJ
                              g$mr$31184$1a@gJ))))
                        (g$chi-expr*$28925$1a@gJ
                          (g$append$20200$1a@gJ
                            (apply
                              g$append$20200$1a@gJ
                              (g$reverse$20656$1a@gJ
                                g$mod**$31181$1a@gJ))
                            g$e*$31186$1a@gJ)
                          g$r$31185$1a@gJ
                          g$mr$31184$1a@gJ)))))
                  g$_exp*$31178$1a@gJ
                  g$kwd*$31177$1a@gJ
                  g$mod**$31176$1a@gJ
                  g$rhs*$31175$1a@gJ
                  g$lex*$31174$1a@gJ
                  g$mr$31173$1a@gJ
                  g$r$31172$1a@gJ
                  g$e*$31171$1a@gJ))))))
         (g$make-empty-rib$28369$1a@gJ)))))
   (g$parse-module$28939$1a@gJ
     g$parse-module$32538$1a@gJ
     (case-lambda
       ((g$e$31189$1a@gJ)
        ((case-lambda
           ((g$t$31190$1a@gJ)
            ((case-lambda
               ((g$ls/false$31191$1a@gJ)
                (if g$ls/false$31191$1a@gJ
                  (apply
                    (case-lambda
                      ((g$export*$31192$1a@gJ g$b*$31193$1a@gJ)
                       (begin
                         (if (not (g$for-all$20193$1a@gJ
                                    g$id?$28411$1a@gJ
                                    g$export*$31192$1a@gJ))
                           (g$syntax-violation$29029$1a@gJ
                             '#f
                             '"module exports must be identifiers"
                             g$e$31189$1a@gJ)
                           (void))
                         (values
                           '#f
                           (g$list->vector$20647$1a@gJ
                             g$export*$31192$1a@gJ)
                           g$b*$31193$1a@gJ))))
                    g$ls/false$31191$1a@gJ)
                  ((case-lambda
                     ((g$t$31194$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$31195$1a@gJ)
                          (if g$ls/false$31195$1a@gJ
                            (apply
                              (case-lambda
                                ((g$name$31196$1a@gJ
                                   g$export*$31197$1a@gJ
                                   g$b*$31198$1a@gJ)
                                 (begin
                                   (if (not (g$id?$28411$1a@gJ
                                              g$name$31196$1a@gJ))
                                     (g$syntax-violation$29029$1a@gJ
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$31189$1a@gJ)
                                     (void))
                                   (if (not (g$for-all$20193$1a@gJ
                                              g$id?$28411$1a@gJ
                                              g$export*$31197$1a@gJ))
                                     (g$syntax-violation$29029$1a@gJ
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$31189$1a@gJ)
                                     (void))
                                   (values
                                     g$name$31196$1a@gJ
                                     (g$list->vector$20647$1a@gJ
                                       g$export*$31197$1a@gJ)
                                     g$b*$31198$1a@gJ))))
                              g$ls/false$31195$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$31194$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$31194$1a@gJ
                         '(_ any each-any . each-any)))))
                   g$t$31190$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31190$1a@gJ
               '(_ each-any . each-any)))))
         g$e$31189$1a@gJ))))
   (g$10463$28940$1a@gJ
     g$10463$32539$1a@gJ
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$10466$1a@gJ
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$10465$28941$1a@gJ g$10465$32540$1a@gJ '#f)
   (g$10464$28942$1a@gJ
     g$10464$32541$1a@gJ
     (make-record-constructor-descriptor
       g$10463$28940$1a@gJ
       '#f
       g$10465$28941$1a@gJ))
   (g$module-interface?$28945$1a@gJ
     g$module-interface?$32542$1a@gJ
     (record-predicate g$10463$28940$1a@gJ))
   (g$make-module-interface$28946$1a@gJ
     g$make-module-interface$32543$1a@gJ
     (record-constructor g$10464$28942$1a@gJ))
   (g$module-interface-first-mark$28947$1a@gJ
     g$module-interface-first-mark$32544$1a@gJ
     (record-accessor g$10463$28940$1a@gJ '0))
   (g$module-interface-exp-id-vec$28948$1a@gJ
     g$module-interface-exp-id-vec$32545$1a@gJ
     (record-accessor g$10463$28940$1a@gJ '1))
   (g$module-interface-exp-lab-vec$28949$1a@gJ
     g$module-interface-exp-lab-vec$32546$1a@gJ
     (record-accessor g$10463$28940$1a@gJ '2))
   (g$set-module-interface-first-mark!$28950$1a@gJ
     g$set-module-interface-first-mark!$32547$1a@gJ
     (record-mutator g$10463$28940$1a@gJ '0))
   (g$set-module-interface-exp-id-vec!$28951$1a@gJ
     g$set-module-interface-exp-id-vec!$32548$1a@gJ
     (record-mutator g$10463$28940$1a@gJ '1))
   (g$set-module-interface-exp-lab-vec!$28952$1a@gJ
     g$set-module-interface-exp-lab-vec!$32549$1a@gJ
     (record-mutator g$10463$28940$1a@gJ '2))
   (g$module-interface-exp-id*$28953$1a@gJ
     g$module-interface-exp-id*$32550$1a@gJ
     (case-lambda
       ((g$iface$31199$1a@gJ g$id$31200$1a@gJ)
        (letrec* ((g$diff-marks$31201$1a@gJ
                    (case-lambda
                      ((g$ls$31205$1a@gJ g$x$31206$1a@gJ)
                       (begin
                         (if (null? g$ls$31205$1a@gJ)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$31207$1a@gJ)
                             (if (eq? g$a$31207$1a@gJ g$x$31206$1a@gJ)
                               '()
                               (cons
                                 g$a$31207$1a@gJ
                                 (g$diff-marks$31201$1a@gJ
                                   (cdr g$ls$31205$1a@gJ)
                                   g$x$31206$1a@gJ)))))
                          (car g$ls$31205$1a@gJ)))))))
          ((case-lambda
             ((g$diff$31202$1a@gJ g$id-vec$31203$1a@gJ)
              (if (null? g$diff$31202$1a@gJ)
                g$id-vec$31203$1a@gJ
                (g$vector-map$20707$1a@gJ
                  (case-lambda
                    ((g$x$31204$1a@gJ)
                     (g$make-stx$28384$1a@gJ
                       (g$stx-expr$28385$1a@gJ g$x$31204$1a@gJ)
                       (g$append$20200$1a@gJ
                         g$diff$31202$1a@gJ
                         (g$stx-mark*$28386$1a@gJ g$x$31204$1a@gJ))
                       '()
                       '())))
                  g$id-vec$31203$1a@gJ))))
           (g$diff-marks$31201$1a@gJ
             (g$stx-mark*$28386$1a@gJ g$id$31200$1a@gJ)
             (g$module-interface-first-mark$28947$1a@gJ
               g$iface$31199$1a@gJ))
           (g$module-interface-exp-id-vec$28948$1a@gJ
             g$iface$31199$1a@gJ))))))
   (g$syntax-transpose$28954$1a@gJ
     g$syntax-transpose$32551$1a@gJ
     (case-lambda
       ((g$object$31208$1a@gJ
          g$base-id$31209$1a@gJ
          g$new-id$31210$1a@gJ)
        (letrec* ((g$who$31211$1a@gJ 'syntax-transpose)
                  (g$err$31212$1a@gJ
                    (case-lambda
                      ((g$msg$31254$1a@gJ . g$args$31255$1a@gJ)
                       (apply
                         assertion-violation
                         g$who$31211$1a@gJ
                         g$msg$31254$1a@gJ
                         g$args$31255$1a@gJ))))
                  (g$split$31213$1a@gJ
                    (case-lambda
                      ((g$s*$31247$1a@gJ)
                       (if (eq? (car g$s*$31247$1a@gJ) 'shift)
                         (values (list 'shift) (cdr g$s*$31247$1a@gJ))
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$split$31213$1a@gJ
                                  (cdr g$s*$31247$1a@gJ))))
                             (case-lambda
                               ((g$s1*$31250$1a@gJ g$s2*$31251$1a@gJ)
                                ((case-lambda
                                   ((g$s2*$31252$1a@gJ
                                      g$s1*$31253$1a@gJ)
                                    (values
                                      (cons
                                        (car g$s*$31247$1a@gJ)
                                        g$s1*$31253$1a@gJ)
                                      g$s2*$31252$1a@gJ)))
                                 g$s2*$31251$1a@gJ
                                 g$s1*$31250$1a@gJ)))))))))
                  (g$final$31214$1a@gJ
                    (case-lambda
                      ((g$s*$31245$1a@gJ)
                       (if ((case-lambda
                              ((g$t$31246$1a@gJ)
                               (if g$t$31246$1a@gJ
                                 g$t$31246$1a@gJ
                                 (begin
                                   '#f
                                   (eq? (car g$s*$31245$1a@gJ)
                                        'shift)))))
                            (null? g$s*$31245$1a@gJ))
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$s*$31245$1a@gJ)
                             (g$final$31214$1a@gJ
                               (cdr g$s*$31245$1a@gJ))))))))
                  (g$diff$31215$1a@gJ
                    (case-lambda
                      ((g$m$31225$1a@gJ
                         g$m*$31226$1a@gJ
                         g$s*$31227$1a@gJ
                         g$ae*$31228$1a@gJ)
                       (if (null? g$m*$31226$1a@gJ)
                         (g$err$31212$1a@gJ
                           '"unmatched identifiers"
                           g$base-id$31209$1a@gJ
                           g$new-id$31210$1a@gJ)
                         ((case-lambda
                            ((g$m1$31229$1a@gJ)
                             (if (eq? g$m$31225$1a@gJ g$m1$31229$1a@gJ)
                               (values
                                 '()
                                 (g$final$31214$1a@gJ g$s*$31227$1a@gJ)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$31213$1a@gJ
                                      g$s*$31227$1a@gJ)))
                                 (case-lambda
                                   ((g$s1*$31232$1a@gJ
                                      g$s2*$31233$1a@gJ)
                                    ((case-lambda
                                       ((g$s2*$31234$1a@gJ
                                          g$s1*$31235$1a@gJ)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$31215$1a@gJ
                                               g$m$31225$1a@gJ
                                               (cdr g$m*$31226$1a@gJ)
                                               g$s2*$31234$1a@gJ
                                               (cdr g$ae*$31228$1a@gJ))))
                                          (case-lambda
                                            ((g$nm*$31239$1a@gJ
                                               g$ns*$31240$1a@gJ
                                               g$nae*$31241$1a@gJ)
                                             ((case-lambda
                                                ((g$nae*$31242$1a@gJ
                                                   g$ns*$31243$1a@gJ
                                                   g$nm*$31244$1a@gJ)
                                                 (values
                                                   (cons
                                                     g$m1$31229$1a@gJ
                                                     g$nm*$31244$1a@gJ)
                                                   (g$append$20200$1a@gJ
                                                     g$s1*$31235$1a@gJ
                                                     g$ns*$31243$1a@gJ)
                                                   (cons
                                                     (car g$ae*$31228$1a@gJ)
                                                     g$nae*$31242$1a@gJ))))
                                              g$nae*$31241$1a@gJ
                                              g$ns*$31240$1a@gJ
                                              g$nm*$31239$1a@gJ))))))
                                     g$s2*$31233$1a@gJ
                                     g$s1*$31232$1a@gJ)))))))
                          (car g$m*$31226$1a@gJ)))))))
          (begin
            (if (not (g$id?$28411$1a@gJ g$base-id$31209$1a@gJ))
              (g$err$31212$1a@gJ
                '"not an identifier"
                g$base-id$31209$1a@gJ)
              (void))
            (if (not (g$id?$28411$1a@gJ g$new-id$31210$1a@gJ))
              (g$err$31212$1a@gJ
                '"not an identifier"
                g$new-id$31210$1a@gJ)
              (void))
            (if (not (g$free-identifier=?$29019$1a@gJ
                       g$base-id$31209$1a@gJ
                       g$new-id$31210$1a@gJ))
              (g$err$31212$1a@gJ
                '"not the same identifier"
                g$base-id$31209$1a@gJ
                g$new-id$31210$1a@gJ)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$31215$1a@gJ
                   (car (g$stx-mark*$28386$1a@gJ g$base-id$31209$1a@gJ))
                   (g$stx-mark*$28386$1a@gJ g$new-id$31210$1a@gJ)
                   (g$stx-subst*$28387$1a@gJ g$new-id$31210$1a@gJ)
                   (g$stx-ae*$28388$1a@gJ g$new-id$31210$1a@gJ))))
              (case-lambda
                ((g$m*$31219$1a@gJ g$s*$31220$1a@gJ g$ae*$31221$1a@gJ)
                 ((case-lambda
                    ((g$ae*$31222$1a@gJ
                       g$s*$31223$1a@gJ
                       g$m*$31224$1a@gJ)
                     (if (if (null? g$m*$31224$1a@gJ)
                           (begin '#f (null? g$s*$31223$1a@gJ))
                           '#f)
                       g$object$31208$1a@gJ
                       (g$mkstx$28399$1a@gJ
                         g$object$31208$1a@gJ
                         g$m*$31224$1a@gJ
                         g$s*$31223$1a@gJ
                         g$ae*$31222$1a@gJ))))
                  g$ae*$31221$1a@gJ
                  g$s*$31220$1a@gJ
                  g$m*$31219$1a@gJ)))))))))
   (g$chi-internal-module$28955$1a@gJ
     g$chi-internal-module$32552$1a@gJ
     (case-lambda
       ((g$e$31256$1a@gJ
          g$r$31257$1a@gJ
          g$mr$31258$1a@gJ
          g$lex*$31259$1a@gJ
          g$rhs*$31260$1a@gJ
          g$mod**$31261$1a@gJ
          g$kwd*$31262$1a@gJ)
        (call-with-values
          (case-lambda
            (() (g$parse-module$28939$1a@gJ g$e$31256$1a@gJ)))
          (case-lambda
            ((g$name$31266$1a@gJ g$exp-id*$31267$1a@gJ g$e*$31268$1a@gJ)
             ((case-lambda
                ((g$e*$31269$1a@gJ
                   g$exp-id*$31270$1a@gJ
                   g$name$31271$1a@gJ)
                 ((case-lambda
                    ((g$rib$31272$1a@gJ)
                     ((case-lambda
                        ((g$e*$31273$1a@gJ)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$28956$1a@gJ
                                g$e*$31273$1a@gJ
                                g$r$31257$1a@gJ
                                g$mr$31258$1a@gJ
                                g$lex*$31259$1a@gJ
                                g$rhs*$31260$1a@gJ
                                g$mod**$31261$1a@gJ
                                g$kwd*$31262$1a@gJ
                                '()
                                g$rib$31272$1a@gJ
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$31282$1a@gJ
                                g$r$31283$1a@gJ
                                g$mr$31284$1a@gJ
                                g$lex*$31285$1a@gJ
                                g$rhs*$31286$1a@gJ
                                g$mod**$31287$1a@gJ
                                g$kwd*$31288$1a@gJ
                                g$_exp*$31289$1a@gJ)
                              ((case-lambda
                                 ((g$_exp*$31290$1a@gJ
                                    g$kwd*$31291$1a@gJ
                                    g$mod**$31292$1a@gJ
                                    g$rhs*$31293$1a@gJ
                                    g$lex*$31294$1a@gJ
                                    g$mr$31295$1a@gJ
                                    g$r$31296$1a@gJ
                                    g$e*$31297$1a@gJ)
                                  ((case-lambda
                                     ((g$exp-lab*$31298$1a@gJ
                                        g$mod**$31299$1a@gJ)
                                      (if (not g$name$31271$1a@gJ)
                                        (values
                                          g$lex*$31294$1a@gJ
                                          g$rhs*$31293$1a@gJ
                                          g$exp-id*$31270$1a@gJ
                                          g$exp-lab*$31298$1a@gJ
                                          g$r$31296$1a@gJ
                                          g$mr$31295$1a@gJ
                                          g$mod**$31299$1a@gJ
                                          g$kwd*$31291$1a@gJ)
                                        ((case-lambda
                                           ((g$lab$31300$1a@gJ
                                              g$iface$31301$1a@gJ)
                                            (values
                                              g$lex*$31294$1a@gJ
                                              g$rhs*$31293$1a@gJ
                                              (vector
                                                g$name$31271$1a@gJ)
                                              (vector g$lab$31300$1a@gJ)
                                              (cons
                                                (cons
                                                  g$lab$31300$1a@gJ
                                                  (cons
                                                    '$module
                                                    g$iface$31301$1a@gJ))
                                                g$r$31296$1a@gJ)
                                              (cons
                                                (cons
                                                  g$lab$31300$1a@gJ
                                                  (cons
                                                    '$module
                                                    g$iface$31301$1a@gJ))
                                                g$mr$31295$1a@gJ)
                                              g$mod**$31299$1a@gJ
                                              g$kwd*$31291$1a@gJ)))
                                         (g$gen-label$28348$1a@gJ
                                           'module)
                                         (g$make-module-interface$28946$1a@gJ
                                           (car (g$stx-mark*$28386$1a@gJ
                                                  g$name$31271$1a@gJ))
                                           (g$vector-map$20707$1a@gJ
                                             (case-lambda
                                               ((g$x$31302$1a@gJ)
                                                (g$make-stx$28384$1a@gJ
                                                  (g$stx-expr$28385$1a@gJ
                                                    g$x$31302$1a@gJ)
                                                  (g$stx-mark*$28386$1a@gJ
                                                    g$x$31302$1a@gJ)
                                                  '()
                                                  '())))
                                             g$exp-id*$31270$1a@gJ)
                                           g$exp-lab*$31298$1a@gJ)))))
                                   (g$vector-map$20707$1a@gJ
                                     (case-lambda
                                       ((g$x$31303$1a@gJ)
                                        ((case-lambda
                                           ((g$t$31304$1a@gJ)
                                            (if g$t$31304$1a@gJ
                                              g$t$31304$1a@gJ
                                              (begin
                                                '#f
                                                (g$syntax-violation$29029$1a@gJ
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$31303$1a@gJ)))))
                                         (g$id->label$28424$1a@gJ
                                           (g$make-stx$28384$1a@gJ
                                             (g$id->sym$28412$1a@gJ
                                               g$x$31303$1a@gJ)
                                             (g$stx-mark*$28386$1a@gJ
                                               g$x$31303$1a@gJ)
                                             (list g$rib$31272$1a@gJ)
                                             '())))))
                                     g$exp-id*$31270$1a@gJ)
                                   (cons
                                     g$e*$31297$1a@gJ
                                     g$mod**$31292$1a@gJ))))
                               g$_exp*$31289$1a@gJ
                               g$kwd*$31288$1a@gJ
                               g$mod**$31287$1a@gJ
                               g$rhs*$31286$1a@gJ
                               g$lex*$31285$1a@gJ
                               g$mr$31284$1a@gJ
                               g$r$31283$1a@gJ
                               g$e*$31282$1a@gJ))))))
                      (g$map$20195$1a@gJ
                        (case-lambda
                          ((g$x$31305$1a@gJ)
                           (g$add-subst$28401$1a@gJ
                             g$rib$31272$1a@gJ
                             g$x$31305$1a@gJ)))
                        (g$syntax->list$28410$1a@gJ
                          g$e*$31269$1a@gJ)))))
                  (g$make-empty-rib$28369$1a@gJ))))
              g$e*$31268$1a@gJ
              g$exp-id*$31267$1a@gJ
              g$name$31266$1a@gJ)))))))
   (g$chi-body*$28956$1a@gJ
     g$chi-body*$32553$1a@gJ
     (case-lambda
       ((g$e*$31306$1a@gJ
          g$r$31307$1a@gJ
          g$mr$31308$1a@gJ
          g$lex*$31309$1a@gJ
          g$rhs*$31310$1a@gJ
          g$mod**$31311$1a@gJ
          g$kwd*$31312$1a@gJ
          g$exp*$31313$1a@gJ
          g$rib$31314$1a@gJ
          g$mix?$31315$1a@gJ
          g$sd?$31316$1a@gJ)
        (if (null? g$e*$31306$1a@gJ)
          (values
            g$e*$31306$1a@gJ
            g$r$31307$1a@gJ
            g$mr$31308$1a@gJ
            g$lex*$31309$1a@gJ
            g$rhs*$31310$1a@gJ
            g$mod**$31311$1a@gJ
            g$kwd*$31312$1a@gJ
            g$exp*$31313$1a@gJ)
          (begin
            '#f
            ((case-lambda
               ((g$e$31317$1a@gJ)
                (call-with-values
                  (case-lambda
                    (()
                     (g$syntax-type$28431$1a@gJ
                       g$e$31317$1a@gJ
                       g$r$31307$1a@gJ)))
                  (case-lambda
                    ((g$type$31321$1a@gJ
                       g$value$31322$1a@gJ
                       g$kwd$31323$1a@gJ)
                     ((case-lambda
                        ((g$kwd$31324$1a@gJ
                           g$value$31325$1a@gJ
                           g$type$31326$1a@gJ)
                         ((case-lambda
                            ((g$kwd*$31327$1a@gJ)
                             ((case-lambda
                                ((g$t$31328$1a@gJ)
                                 (if (eqv? g$t$31328$1a@gJ 'define)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define$28849$1a@gJ
                                          g$e$31317$1a@gJ)))
                                     (case-lambda
                                       ((g$id$31331$1a@gJ
                                          g$rhs$31332$1a@gJ)
                                        ((case-lambda
                                           ((g$rhs$31333$1a@gJ
                                              g$id$31334$1a@gJ)
                                            (begin
                                              (if (g$bound-id-member?$28418$1a@gJ
                                                    g$id$31334$1a@gJ
                                                    g$kwd*$31327$1a@gJ)
                                                (g$syntax-violation$29029$1a@gJ
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$31317$1a@gJ)
                                                (void))
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$gen-define-label+loc$28350$1a@gJ
                                                     g$id$31334$1a@gJ
                                                     g$rib$31314$1a@gJ
                                                     g$sd?$31316$1a@gJ)))
                                                (case-lambda
                                                  ((g$lab$31337$1a@gJ
                                                     g$lex$31338$1a@gJ)
                                                   ((case-lambda
                                                      ((g$lex$31339$1a@gJ
                                                         g$lab$31340$1a@gJ)
                                                       (begin
                                                         (g$extend-rib!$28372$1a@gJ
                                                           g$rib$31314$1a@gJ
                                                           g$id$31334$1a@gJ
                                                           g$lab$31340$1a@gJ
                                                           g$sd?$31316$1a@gJ)
                                                         (g$chi-body*$28956$1a@gJ
                                                           (cdr g$e*$31306$1a@gJ)
                                                           (g$add-lexical$28856$1a@gJ
                                                             g$lab$31340$1a@gJ
                                                             g$lex$31339$1a@gJ
                                                             g$r$31307$1a@gJ)
                                                           g$mr$31308$1a@gJ
                                                           (cons
                                                             g$lex$31339$1a@gJ
                                                             g$lex*$31309$1a@gJ)
                                                           (cons
                                                             g$rhs$31333$1a@gJ
                                                             g$rhs*$31310$1a@gJ)
                                                           g$mod**$31311$1a@gJ
                                                           g$kwd*$31327$1a@gJ
                                                           g$exp*$31313$1a@gJ
                                                           g$rib$31314$1a@gJ
                                                           g$mix?$31315$1a@gJ
                                                           g$sd?$31316$1a@gJ))))
                                                    g$lex$31338$1a@gJ
                                                    g$lab$31337$1a@gJ)))))))
                                         g$rhs$31332$1a@gJ
                                         g$id$31331$1a@gJ))))
                                   (if (eqv?
                                         g$t$31328$1a@gJ
                                         'define-syntax)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$parse-define-syntax$28850$1a@gJ
                                            g$e$31317$1a@gJ)))
                                       (case-lambda
                                         ((g$id$31343$1a@gJ
                                            g$rhs$31344$1a@gJ)
                                          ((case-lambda
                                             ((g$rhs$31345$1a@gJ
                                                g$id$31346$1a@gJ)
                                              (begin
                                                (if (g$bound-id-member?$28418$1a@gJ
                                                      g$id$31346$1a@gJ
                                                      g$kwd*$31327$1a@gJ)
                                                  (g$syntax-violation$29029$1a@gJ
                                                    '#f
                                                    '"cannot redefine keyword"
                                                    g$e$31317$1a@gJ)
                                                  (void))
                                                ((case-lambda
                                                   ((g$lab$31347$1a@gJ)
                                                    ((case-lambda
                                                       ((g$expanded-rhs$31348$1a@gJ)
                                                        (begin
                                                          (g$extend-rib!$28372$1a@gJ
                                                            g$rib$31314$1a@gJ
                                                            g$id$31346$1a@gJ
                                                            g$lab$31347$1a@gJ
                                                            g$sd?$31316$1a@gJ)
                                                          ((case-lambda
                                                             ((g$b$31349$1a@gJ)
                                                              (g$chi-body*$28956$1a@gJ
                                                                (cdr g$e*$31306$1a@gJ)
                                                                (cons
                                                                  (cons
                                                                    g$lab$31347$1a@gJ
                                                                    g$b$31349$1a@gJ)
                                                                  g$r$31307$1a@gJ)
                                                                (cons
                                                                  (cons
                                                                    g$lab$31347$1a@gJ
                                                                    g$b$31349$1a@gJ)
                                                                  g$mr$31308$1a@gJ)
                                                                g$lex*$31309$1a@gJ
                                                                g$rhs*$31310$1a@gJ
                                                                g$mod**$31311$1a@gJ
                                                                g$kwd*$31327$1a@gJ
                                                                g$exp*$31313$1a@gJ
                                                                g$rib$31314$1a@gJ
                                                                g$mix?$31315$1a@gJ
                                                                g$sd?$31316$1a@gJ)))
                                                           (g$make-eval-transformer$28459$1a@gJ
                                                             g$expanded-rhs$31348$1a@gJ)))))
                                                     (g$expand-transformer$28957$1a@gJ
                                                       g$rhs$31345$1a@gJ
                                                       g$mr$31308$1a@gJ))))
                                                 (g$gen-define-label$28351$1a@gJ
                                                   g$id$31346$1a@gJ
                                                   g$rib$31314$1a@gJ
                                                   g$sd?$31316$1a@gJ)))))
                                           g$rhs$31344$1a@gJ
                                           g$id$31343$1a@gJ))))
                                     (if (g$memv$20188$1a@gJ
                                           g$t$31328$1a@gJ
                                           '(let-syntax letrec-syntax))
                                       ((case-lambda
                                          ((g$t$31350$1a@gJ)
                                           ((case-lambda
                                              ((g$ls/false$31351$1a@gJ)
                                               (if (if g$ls/false$31351$1a@gJ
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$31352$1a@gJ
                                                              g$xrhs*$31353$1a@gJ
                                                              g$xbody*$31354$1a@gJ)
                                                            (if (not (g$valid-bound-ids?$28416$1a@gJ
                                                                       g$xlhs*$31352$1a@gJ))
                                                              (g$syntax-violation$29029$1a@gJ
                                                                '#f
                                                                '"invalid identifiers"
                                                                g$e$31317$1a@gJ)
                                                              (void))))
                                                         g$ls/false$31351$1a@gJ))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$xlhs*$31355$1a@gJ
                                                        g$xrhs*$31356$1a@gJ
                                                        g$xbody*$31357$1a@gJ)
                                                      ((case-lambda
                                                         ((g$xlab*$31358$1a@gJ)
                                                          ((case-lambda
                                                             ((g$xrib$31359$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$xb*$31360$1a@gJ)
                                                                  (g$chi-body*$28956$1a@gJ
                                                                    (g$append$20200$1a@gJ
                                                                      (g$map$20195$1a@gJ
                                                                        (case-lambda
                                                                          ((g$x$31361$1a@gJ)
                                                                           (g$add-subst$28401$1a@gJ
                                                                             g$xrib$31359$1a@gJ
                                                                             g$x$31361$1a@gJ)))
                                                                        g$xbody*$31357$1a@gJ)
                                                                      (cdr g$e*$31306$1a@gJ))
                                                                    (g$append$20200$1a@gJ
                                                                      (g$map$20195$1a@gJ
                                                                        cons
                                                                        g$xlab*$31358$1a@gJ
                                                                        g$xb*$31360$1a@gJ)
                                                                      g$r$31307$1a@gJ)
                                                                    (g$append$20200$1a@gJ
                                                                      (g$map$20195$1a@gJ
                                                                        cons
                                                                        g$xlab*$31358$1a@gJ
                                                                        g$xb*$31360$1a@gJ)
                                                                      g$mr$31308$1a@gJ)
                                                                    g$lex*$31309$1a@gJ
                                                                    g$rhs*$31310$1a@gJ
                                                                    g$mod**$31311$1a@gJ
                                                                    g$kwd*$31327$1a@gJ
                                                                    g$exp*$31313$1a@gJ
                                                                    g$rib$31314$1a@gJ
                                                                    g$mix?$31315$1a@gJ
                                                                    g$sd?$31316$1a@gJ)))
                                                               (g$map$20195$1a@gJ
                                                                 (case-lambda
                                                                   ((g$x$31362$1a@gJ)
                                                                    (g$make-eval-transformer$28459$1a@gJ
                                                                      (g$expand-transformer$28957$1a@gJ
                                                                        (if (eq? g$type$31326$1a@gJ
                                                                                 'let-syntax)
                                                                          g$x$31362$1a@gJ
                                                                          (g$add-subst$28401$1a@gJ
                                                                            g$xrib$31359$1a@gJ
                                                                            g$x$31362$1a@gJ))
                                                                        g$mr$31308$1a@gJ))))
                                                                 g$xrhs*$31356$1a@gJ))))
                                                           (g$make-full-rib$28377$1a@gJ
                                                             g$xlhs*$31355$1a@gJ
                                                             g$xlab*$31358$1a@gJ))))
                                                       (g$map$20195$1a@gJ
                                                         g$gen-label$28348$1a@gJ
                                                         g$xlhs*$31355$1a@gJ))))
                                                   g$ls/false$31351$1a@gJ)
                                                 (g$syntax-violation$29029$1a@gJ
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$31350$1a@gJ))))
                                            (g$syntax-dispatch$28909$1a@gJ
                                              g$t$31350$1a@gJ
                                              '(_ #(each (any any))
                                                  .
                                                  each-any)))))
                                        g$e$31317$1a@gJ)
                                       (if (eqv? g$t$31328$1a@gJ 'begin)
                                         ((case-lambda
                                            ((g$t$31363$1a@gJ)
                                             ((case-lambda
                                                ((g$ls/false$31364$1a@gJ)
                                                 (if g$ls/false$31364$1a@gJ
                                                   (apply
                                                     (case-lambda
                                                       ((g$x*$31365$1a@gJ)
                                                        (g$chi-body*$28956$1a@gJ
                                                          (g$append$20200$1a@gJ
                                                            g$x*$31365$1a@gJ
                                                            (cdr g$e*$31306$1a@gJ))
                                                          g$r$31307$1a@gJ
                                                          g$mr$31308$1a@gJ
                                                          g$lex*$31309$1a@gJ
                                                          g$rhs*$31310$1a@gJ
                                                          g$mod**$31311$1a@gJ
                                                          g$kwd*$31327$1a@gJ
                                                          g$exp*$31313$1a@gJ
                                                          g$rib$31314$1a@gJ
                                                          g$mix?$31315$1a@gJ
                                                          g$sd?$31316$1a@gJ)))
                                                     g$ls/false$31364$1a@gJ)
                                                   (g$syntax-violation$29029$1a@gJ
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$31363$1a@gJ))))
                                              (g$syntax-dispatch$28909$1a@gJ
                                                g$t$31363$1a@gJ
                                                '(_ . each-any)))))
                                          g$e$31317$1a@gJ)
                                         (if (g$memv$20188$1a@gJ
                                               g$t$31328$1a@gJ
                                               '(global-macro
                                                  global-macro!))
                                           (g$chi-body*$28956$1a@gJ
                                             (cons
                                               (g$add-subst$28401$1a@gJ
                                                 g$rib$31314$1a@gJ
                                                 (g$chi-global-macro$28924$1a@gJ
                                                   g$value$31325$1a@gJ
                                                   g$e$31317$1a@gJ
                                                   g$r$31307$1a@gJ))
                                               (cdr g$e*$31306$1a@gJ))
                                             g$r$31307$1a@gJ
                                             g$mr$31308$1a@gJ
                                             g$lex*$31309$1a@gJ
                                             g$rhs*$31310$1a@gJ
                                             g$mod**$31311$1a@gJ
                                             g$kwd*$31327$1a@gJ
                                             g$exp*$31313$1a@gJ
                                             g$rib$31314$1a@gJ
                                             g$mix?$31315$1a@gJ
                                             g$sd?$31316$1a@gJ)
                                           (if (g$memv$20188$1a@gJ
                                                 g$t$31328$1a@gJ
                                                 '(local-macro
                                                    local-macro!))
                                             (g$chi-body*$28956$1a@gJ
                                               (cons
                                                 (g$add-subst$28401$1a@gJ
                                                   g$rib$31314$1a@gJ
                                                   (g$chi-local-macro$28923$1a@gJ
                                                     g$value$31325$1a@gJ
                                                     g$e$31317$1a@gJ
                                                     g$r$31307$1a@gJ))
                                                 (cdr g$e*$31306$1a@gJ))
                                               g$r$31307$1a@gJ
                                               g$mr$31308$1a@gJ
                                               g$lex*$31309$1a@gJ
                                               g$rhs*$31310$1a@gJ
                                               g$mod**$31311$1a@gJ
                                               g$kwd*$31327$1a@gJ
                                               g$exp*$31313$1a@gJ
                                               g$rib$31314$1a@gJ
                                               g$mix?$31315$1a@gJ
                                               g$sd?$31316$1a@gJ)
                                             (if (g$memv$20188$1a@gJ
                                                   g$t$31328$1a@gJ
                                                   '(macro macro!))
                                               (g$chi-body*$28956$1a@gJ
                                                 (cons
                                                   (g$add-subst$28401$1a@gJ
                                                     g$rib$31314$1a@gJ
                                                     (g$chi-macro$28922$1a@gJ
                                                       g$value$31325$1a@gJ
                                                       g$e$31317$1a@gJ
                                                       g$r$31307$1a@gJ))
                                                   (cdr g$e*$31306$1a@gJ))
                                                 g$r$31307$1a@gJ
                                                 g$mr$31308$1a@gJ
                                                 g$lex*$31309$1a@gJ
                                                 g$rhs*$31310$1a@gJ
                                                 g$mod**$31311$1a@gJ
                                                 g$kwd*$31327$1a@gJ
                                                 g$exp*$31313$1a@gJ
                                                 g$rib$31314$1a@gJ
                                                 g$mix?$31315$1a@gJ
                                                 g$sd?$31316$1a@gJ)
                                               (if (eqv?
                                                     g$t$31328$1a@gJ
                                                     'module)
                                                 (call-with-values
                                                   (case-lambda
                                                     (()
                                                      (g$chi-internal-module$28955$1a@gJ
                                                        g$e$31317$1a@gJ
                                                        g$r$31307$1a@gJ
                                                        g$mr$31308$1a@gJ
                                                        g$lex*$31309$1a@gJ
                                                        g$rhs*$31310$1a@gJ
                                                        g$mod**$31311$1a@gJ
                                                        g$kwd*$31327$1a@gJ)))
                                                   (case-lambda
                                                     ((g$lex*$31374$1a@gJ
                                                        g$rhs*$31375$1a@gJ
                                                        g$m-exp-id*$31376$1a@gJ
                                                        g$m-exp-lab*$31377$1a@gJ
                                                        g$r$31378$1a@gJ
                                                        g$mr$31379$1a@gJ
                                                        g$mod**$31380$1a@gJ
                                                        g$kwd*$31381$1a@gJ)
                                                      ((case-lambda
                                                         ((g$kwd*$31382$1a@gJ
                                                            g$mod**$31383$1a@gJ
                                                            g$mr$31384$1a@gJ
                                                            g$r$31385$1a@gJ
                                                            g$m-exp-lab*$31386$1a@gJ
                                                            g$m-exp-id*$31387$1a@gJ
                                                            g$rhs*$31388$1a@gJ
                                                            g$lex*$31389$1a@gJ)
                                                          (begin
                                                            (g$vector-for-each$20708$1a@gJ
                                                              (case-lambda
                                                                ((g$id$31390$1a@gJ
                                                                   g$lab$31391$1a@gJ)
                                                                 (g$extend-rib!$28372$1a@gJ
                                                                   g$rib$31314$1a@gJ
                                                                   g$id$31390$1a@gJ
                                                                   g$lab$31391$1a@gJ
                                                                   g$sd?$31316$1a@gJ)))
                                                              g$m-exp-id*$31387$1a@gJ
                                                              g$m-exp-lab*$31386$1a@gJ)
                                                            (g$chi-body*$28956$1a@gJ
                                                              (cdr g$e*$31306$1a@gJ)
                                                              g$r$31385$1a@gJ
                                                              g$mr$31384$1a@gJ
                                                              g$lex*$31389$1a@gJ
                                                              g$rhs*$31388$1a@gJ
                                                              g$mod**$31383$1a@gJ
                                                              g$kwd*$31382$1a@gJ
                                                              g$exp*$31313$1a@gJ
                                                              g$rib$31314$1a@gJ
                                                              g$mix?$31315$1a@gJ
                                                              g$sd?$31316$1a@gJ))))
                                                       g$kwd*$31381$1a@gJ
                                                       g$mod**$31380$1a@gJ
                                                       g$mr$31379$1a@gJ
                                                       g$r$31378$1a@gJ
                                                       g$m-exp-lab*$31377$1a@gJ
                                                       g$m-exp-id*$31376$1a@gJ
                                                       g$rhs*$31375$1a@gJ
                                                       g$lex*$31374$1a@gJ))))
                                                 (if (eqv?
                                                       g$t$31328$1a@gJ
                                                       'library)
                                                   (begin
                                                     (g$library-expander$29012$1a@gJ
                                                       (g$stx->datum$28422$1a@gJ
                                                         g$e$31317$1a@gJ))
                                                     (g$chi-body*$28956$1a@gJ
                                                       (cdr g$e*$31306$1a@gJ)
                                                       g$r$31307$1a@gJ
                                                       g$mr$31308$1a@gJ
                                                       g$lex*$31309$1a@gJ
                                                       g$rhs*$31310$1a@gJ
                                                       g$mod**$31311$1a@gJ
                                                       g$kwd*$31327$1a@gJ
                                                       g$exp*$31313$1a@gJ
                                                       g$rib$31314$1a@gJ
                                                       g$mix?$31315$1a@gJ
                                                       g$sd?$31316$1a@gJ))
                                                   (if (eqv?
                                                         g$t$31328$1a@gJ
                                                         'export)
                                                     ((case-lambda
                                                        ((g$t$31392$1a@gJ)
                                                         ((case-lambda
                                                            ((g$ls/false$31393$1a@gJ)
                                                             (if g$ls/false$31393$1a@gJ
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$exp-decl*$31394$1a@gJ)
                                                                    (g$chi-body*$28956$1a@gJ
                                                                      (cdr g$e*$31306$1a@gJ)
                                                                      g$r$31307$1a@gJ
                                                                      g$mr$31308$1a@gJ
                                                                      g$lex*$31309$1a@gJ
                                                                      g$rhs*$31310$1a@gJ
                                                                      g$mod**$31311$1a@gJ
                                                                      g$kwd*$31327$1a@gJ
                                                                      (g$append$20200$1a@gJ
                                                                        g$exp-decl*$31394$1a@gJ
                                                                        g$exp*$31313$1a@gJ)
                                                                      g$rib$31314$1a@gJ
                                                                      g$mix?$31315$1a@gJ
                                                                      g$sd?$31316$1a@gJ)))
                                                                 g$ls/false$31393$1a@gJ)
                                                               (g$syntax-violation$29029$1a@gJ
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31392$1a@gJ))))
                                                          (g$syntax-dispatch$28909$1a@gJ
                                                            g$t$31392$1a@gJ
                                                            '(_ .
                                                                each-any)))))
                                                      g$e$31317$1a@gJ)
                                                     (if (eqv?
                                                           g$t$31328$1a@gJ
                                                           'import)
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$31395$1a@gJ
                                                                       (case-lambda
                                                                         ((g$e$31437$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$31438$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31439$1a@gJ)
                                                                                  (if (if g$ls/false$31439$1a@gJ
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$31440$1a@gJ)
                                                                                               (g$id?$28411$1a@gJ
                                                                                                 g$id$31440$1a@gJ)))
                                                                                            g$ls/false$31439$1a@gJ))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$31441$1a@gJ)
                                                                                         '#t))
                                                                                      g$ls/false$31439$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$31442$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31443$1a@gJ)
                                                                                            (if g$ls/false$31443$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$31444$1a@gJ)
                                                                                                   '#f))
                                                                                                g$ls/false$31443$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$t$31445$1a@gJ)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$31446$1a@gJ)
                                                                                                      (if g$ls/false$31446$1a@gJ
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$29029$1a@gJ
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$31437$1a@gJ)))
                                                                                                          g$ls/false$31446$1a@gJ)
                                                                                                        (g$syntax-violation$29029$1a@gJ
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$31445$1a@gJ))))
                                                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                                                     g$t$31445$1a@gJ
                                                                                                     '_))))
                                                                                               g$t$31442$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$31442$1a@gJ
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$31438$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$31438$1a@gJ
                                                                                 '(_ any)))))
                                                                           g$e$31437$1a@gJ))))
                                                                     (g$module-import$31396$1a@gJ
                                                                       (case-lambda
                                                                         ((g$e$31420$1a@gJ
                                                                            g$r$31421$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$31422$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31423$1a@gJ)
                                                                                  (if (if g$ls/false$31423$1a@gJ
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$31424$1a@gJ)
                                                                                               (g$id?$28411$1a@gJ
                                                                                                 g$id$31424$1a@gJ)))
                                                                                            g$ls/false$31423$1a@gJ))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$31425$1a@gJ)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$28431$1a@gJ
                                                                                                g$id$31425$1a@gJ
                                                                                                g$r$31421$1a@gJ)))
                                                                                           (case-lambda
                                                                                             ((g$type$31429$1a@gJ
                                                                                                g$value$31430$1a@gJ
                                                                                                g$kwd$31431$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$31432$1a@gJ
                                                                                                    g$value$31433$1a@gJ
                                                                                                    g$type$31434$1a@gJ)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$31435$1a@gJ)
                                                                                                      (if (eqv?
                                                                                                            g$t$31435$1a@gJ
                                                                                                            '$module)
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$31436$1a@gJ)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$28953$1a@gJ
                                                                                                                g$iface$31436$1a@gJ
                                                                                                                g$id$31425$1a@gJ)
                                                                                                              (g$module-interface-exp-lab-vec$28949$1a@gJ
                                                                                                                g$iface$31436$1a@gJ))))
                                                                                                         g$value$31433$1a@gJ)
                                                                                                        (begin
                                                                                                          '#f
                                                                                                          (g$syntax-violation$29029$1a@gJ
                                                                                                            '#f
                                                                                                            '"invalid import"
                                                                                                            g$e$31420$1a@gJ)))))
                                                                                                   g$type$31434$1a@gJ)))
                                                                                               g$kwd$31431$1a@gJ
                                                                                               g$value$31430$1a@gJ
                                                                                               g$type$31429$1a@gJ))))))
                                                                                      g$ls/false$31423$1a@gJ)
                                                                                    (g$syntax-violation$29029$1a@gJ
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$31422$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$31422$1a@gJ
                                                                                 '(_ any)))))
                                                                           g$e$31420$1a@gJ))))
                                                                     (g$library-import$31397$1a@gJ
                                                                       (case-lambda
                                                                         ((g$e$31406$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$t$31407$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31408$1a@gJ)
                                                                                  (if g$ls/false$31408$1a@gJ
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$31409$1a@gJ
                                                                                           g$imp*$31410$1a@gJ)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$28961$1a@gJ
                                                                                                (g$syntax->datum$29032$1a@gJ
                                                                                                  g$imp*$31410$1a@gJ))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$31413$1a@gJ
                                                                                                g$subst-labels$31414$1a@gJ)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$31415$1a@gJ
                                                                                                    g$subst-names$31416$1a@gJ)
                                                                                                  (values
                                                                                                    (g$vector-map$20707$1a@gJ
                                                                                                      (case-lambda
                                                                                                        ((g$name$31417$1a@gJ)
                                                                                                         (g$datum->stx$28394$1a@gJ
                                                                                                           g$ctxt$31409$1a@gJ
                                                                                                           g$name$31417$1a@gJ)))
                                                                                                      g$subst-names$31416$1a@gJ)
                                                                                                    g$subst-labels$31415$1a@gJ)))
                                                                                               g$subst-labels$31414$1a@gJ
                                                                                               g$subst-names$31413$1a@gJ))))))
                                                                                      g$ls/false$31408$1a@gJ)
                                                                                    ((case-lambda
                                                                                       ((g$t$31418$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31419$1a@gJ)
                                                                                            (if g$ls/false$31419$1a@gJ
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$29029$1a@gJ
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$31406$1a@gJ)))
                                                                                                g$ls/false$31419$1a@gJ)
                                                                                              (g$syntax-violation$29029$1a@gJ
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$31418$1a@gJ))))
                                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                                           g$t$31418$1a@gJ
                                                                                           '_))))
                                                                                     g$t$31407$1a@gJ))))
                                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                                 g$t$31407$1a@gJ
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$31406$1a@gJ)))))
                                                             (begin
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    (if (g$module-import?$31395$1a@gJ
                                                                          g$e$31317$1a@gJ)
                                                                      (g$module-import$31396$1a@gJ
                                                                        g$e$31317$1a@gJ
                                                                        g$r$31307$1a@gJ)
                                                                      (g$library-import$31397$1a@gJ
                                                                        g$e$31317$1a@gJ))))
                                                                 (case-lambda
                                                                   ((g$id*$31400$1a@gJ
                                                                      g$lab*$31401$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$lab*$31402$1a@gJ
                                                                          g$id*$31403$1a@gJ)
                                                                        (g$vector-for-each$20708$1a@gJ
                                                                          (case-lambda
                                                                            ((g$id$31404$1a@gJ
                                                                               g$lab$31405$1a@gJ)
                                                                             (g$extend-rib!$28372$1a@gJ
                                                                               g$rib$31314$1a@gJ
                                                                               g$id$31404$1a@gJ
                                                                               g$lab$31405$1a@gJ
                                                                               g$sd?$31316$1a@gJ)))
                                                                          g$id*$31403$1a@gJ
                                                                          g$lab*$31402$1a@gJ)))
                                                                     g$lab*$31401$1a@gJ
                                                                     g$id*$31400$1a@gJ))))
                                                               (g$chi-body*$28956$1a@gJ
                                                                 (cdr g$e*$31306$1a@gJ)
                                                                 g$r$31307$1a@gJ
                                                                 g$mr$31308$1a@gJ
                                                                 g$lex*$31309$1a@gJ
                                                                 g$rhs*$31310$1a@gJ
                                                                 g$mod**$31311$1a@gJ
                                                                 g$kwd*$31327$1a@gJ
                                                                 g$exp*$31313$1a@gJ
                                                                 g$rib$31314$1a@gJ
                                                                 g$mix?$31315$1a@gJ
                                                                 g$sd?$31316$1a@gJ))))))
                                                       (begin
                                                         '#f
                                                         (if g$mix?$31315$1a@gJ
                                                           (g$chi-body*$28956$1a@gJ
                                                             (cdr g$e*$31306$1a@gJ)
                                                             g$r$31307$1a@gJ
                                                             g$mr$31308$1a@gJ
                                                             (cons
                                                               (g$gen-lexical$28346$1a@gJ
                                                                 'dummy)
                                                               g$lex*$31309$1a@gJ)
                                                             (cons
                                                               (cons
                                                                 'top-expr
                                                                 g$e$31317$1a@gJ)
                                                               g$rhs*$31310$1a@gJ)
                                                             g$mod**$31311$1a@gJ
                                                             g$kwd*$31327$1a@gJ
                                                             g$exp*$31313$1a@gJ
                                                             g$rib$31314$1a@gJ
                                                             '#t
                                                             g$sd?$31316$1a@gJ)
                                                           (values
                                                             g$e*$31306$1a@gJ
                                                             g$r$31307$1a@gJ
                                                             g$mr$31308$1a@gJ
                                                             g$lex*$31309$1a@gJ
                                                             g$rhs*$31310$1a@gJ
                                                             g$mod**$31311$1a@gJ
                                                             g$kwd*$31327$1a@gJ
                                                             g$exp*$31313$1a@gJ))))))))))))))))
                              g$type$31326$1a@gJ)))
                          (if (g$id?$28411$1a@gJ g$kwd$31324$1a@gJ)
                            (cons g$kwd$31324$1a@gJ g$kwd*$31312$1a@gJ)
                            g$kwd*$31312$1a@gJ))))
                      g$kwd$31323$1a@gJ
                      g$value$31322$1a@gJ
                      g$type$31321$1a@gJ))))))
             (car g$e*$31306$1a@gJ)))))))
   (g$expand-transformer$28957$1a@gJ
     g$expand-transformer$32554$1a@gJ
     (case-lambda
       ((g$expr$31447$1a@gJ g$r$31448$1a@gJ)
        ((case-lambda
           ((g$rtc$31449$1a@gJ)
            ((case-lambda
               ((g$expanded-rhs$31450$1a@gJ)
                (begin
                  (g$for-each$20196$1a@gJ
                    ((case-lambda
                       ((g$mark-visit$31451$1a@gJ)
                        (case-lambda
                          ((g$x$31452$1a@gJ)
                           (begin
                             (g$invoke-library$28117$1a@gJ
                               g$x$31452$1a@gJ)
                             (g$mark-visit$31451$1a@gJ
                               g$x$31452$1a@gJ))))))
                     (g$vis-collector$28965$1a@gJ))
                    (g$rtc$31449$1a@gJ))
                  g$expanded-rhs$31450$1a@gJ)))
             ((case-lambda
                ((g$inv-collector$31457$1a@gJ
                   g$vis-collector$31458$1a@gJ
                   g$inv-collector$31459$1a@gJ
                   g$vis-collector$31460$1a@gJ)
                 ((case-lambda
                    ((g$swap$31461$1a@gJ)
                     (dynamic-wind
                       g$swap$31461$1a@gJ
                       (case-lambda
                         (()
                          (g$chi-expr$28927$1a@gJ
                            g$expr$31447$1a@gJ
                            g$r$31448$1a@gJ
                            g$r$31448$1a@gJ)))
                       g$swap$31461$1a@gJ)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$31462$1a@gJ)
                           (begin
                             (g$inv-collector$31457$1a@gJ
                               g$inv-collector$31459$1a@gJ)
                             (set! g$inv-collector$31459$1a@gJ
                               g$t$31462$1a@gJ))))
                        (g$inv-collector$31457$1a@gJ))
                       ((case-lambda
                          ((g$t$31463$1a@gJ)
                           (begin
                             (g$vis-collector$31458$1a@gJ
                               g$vis-collector$31460$1a@gJ)
                             (set! g$vis-collector$31460$1a@gJ
                               g$t$31463$1a@gJ))))
                        (g$vis-collector$31458$1a@gJ))))))))
              g$inv-collector$28964$1a@gJ
              g$vis-collector$28965$1a@gJ
              g$rtc$31449$1a@gJ
              (case-lambda ((g$x$31464$1a@gJ) (values)))))))
         (g$make-collector$28963$1a@gJ)))))
   (g$parse-exports$28958$1a@gJ
     g$parse-exports$32555$1a@gJ
     (case-lambda
       ((g$exp*$31465$1a@gJ)
        ((letrec ((g$f$31466$1a@gJ
                    (case-lambda
                      ((g$exp*$31467$1a@gJ
                         g$int*$31468$1a@gJ
                         g$ext*$31469$1a@gJ)
                       (if (null? g$exp*$31467$1a@gJ)
                         (begin
                           (if (not (g$valid-bound-ids?$28416$1a@gJ
                                      g$ext*$31469$1a@gJ))
                             (g$syntax-violation$29029$1a@gJ
                               'export
                               '"invalid exports"
                               (g$find-dups$28937$1a@gJ
                                 g$ext*$31469$1a@gJ))
                             (void))
                           (values
                             (g$map$20195$1a@gJ
                               g$syntax->datum$29032$1a@gJ
                               g$ext*$31469$1a@gJ)
                             g$int*$31468$1a@gJ))
                         (begin
                           '#f
                           ((case-lambda
                              ((g$t$31470$1a@gJ)
                               ((case-lambda
                                  ((g$ls/false$31471$1a@gJ)
                                   (if g$ls/false$31471$1a@gJ
                                     (apply
                                       (case-lambda
                                         ((g$rename$31472$1a@gJ
                                            g$i*$31473$1a@gJ
                                            g$e*$31474$1a@gJ)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                g$rename$31472$1a@gJ)
                                                              'rename)
                                                       (if (g$for-all$20193$1a@gJ
                                                             g$id?$28411$1a@gJ
                                                             g$i*$31473$1a@gJ)
                                                         (begin
                                                           '#f
                                                           (g$for-all$20193$1a@gJ
                                                             g$id?$28411$1a@gJ
                                                             g$e*$31474$1a@gJ))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$29029$1a@gJ
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$31467$1a@gJ))
                                              (void))
                                            (g$f$31466$1a@gJ
                                              (cdr g$exp*$31467$1a@gJ)
                                              (g$append$20200$1a@gJ
                                                g$i*$31473$1a@gJ
                                                g$int*$31468$1a@gJ)
                                              (g$append$20200$1a@gJ
                                                g$e*$31474$1a@gJ
                                                g$ext*$31469$1a@gJ)))))
                                       g$ls/false$31471$1a@gJ)
                                     ((case-lambda
                                        ((g$t$31475$1a@gJ)
                                         ((case-lambda
                                            ((g$ls/false$31476$1a@gJ)
                                             (if g$ls/false$31476$1a@gJ
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$31477$1a@gJ)
                                                    (begin
                                                      (if (not (g$id?$28411$1a@gJ
                                                                 g$ie$31477$1a@gJ))
                                                        (g$syntax-violation$29029$1a@gJ
                                                          'export
                                                          '"invalid export"
                                                          g$ie$31477$1a@gJ)
                                                        (void))
                                                      (g$f$31466$1a@gJ
                                                        (cdr g$exp*$31467$1a@gJ)
                                                        (cons
                                                          g$ie$31477$1a@gJ
                                                          g$int*$31468$1a@gJ)
                                                        (cons
                                                          g$ie$31477$1a@gJ
                                                          g$ext*$31469$1a@gJ)))))
                                                 g$ls/false$31476$1a@gJ)
                                               (g$syntax-violation$29029$1a@gJ
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$31475$1a@gJ))))
                                          (g$syntax-dispatch$28909$1a@gJ
                                            g$t$31475$1a@gJ
                                            'any))))
                                      g$t$31470$1a@gJ))))
                                (g$syntax-dispatch$28909$1a@gJ
                                  g$t$31470$1a@gJ
                                  '(any . #(each (any any)))))))
                            (car g$exp*$31467$1a@gJ))))))))
           g$f$31466$1a@gJ)
         g$exp*$31465$1a@gJ
         '()
         '()))))
   (g$parse-library-name$28959$1a@gJ
     g$parse-library-name$32556$1a@gJ
     (case-lambda
       ((g$spec$31478$1a@gJ)
        (letrec* ((g$parse$31479$1a@gJ
                    (case-lambda
                      ((g$x$31486$1a@gJ)
                       ((case-lambda
                          ((g$t$31487$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$31488$1a@gJ)
                               (if (if g$ls/false$31488$1a@gJ
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$31489$1a@gJ)
                                            (g$for-all$20193$1a@gJ
                                              (case-lambda
                                                ((g$x$31490$1a@gJ)
                                                 ((case-lambda
                                                    ((g$x$31491$1a@gJ)
                                                     (if (g$integer?$21656$1a@gJ
                                                           g$x$31491$1a@gJ)
                                                       (begin
                                                         '#f
                                                         (g$exact?$21651$1a@gJ
                                                           g$x$31491$1a@gJ))
                                                       '#f)))
                                                  (g$syntax->datum$29032$1a@gJ
                                                    g$x$31490$1a@gJ))))
                                              g$v*$31489$1a@gJ)))
                                         g$ls/false$31488$1a@gJ))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$31492$1a@gJ)
                                      (values
                                        '()
                                        (g$map$20195$1a@gJ
                                          g$syntax->datum$29032$1a@gJ
                                          g$v*$31492$1a@gJ))))
                                   g$ls/false$31488$1a@gJ)
                                 ((case-lambda
                                    ((g$t$31493$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$31494$1a@gJ)
                                         (if (if g$ls/false$31494$1a@gJ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$31495$1a@gJ
                                                        g$rest$31496$1a@gJ)
                                                      (g$symbol?$20620$1a@gJ
                                                        (g$syntax->datum$29032$1a@gJ
                                                          g$x$31495$1a@gJ))))
                                                   g$ls/false$31494$1a@gJ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$31497$1a@gJ
                                                  g$rest$31498$1a@gJ)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$31479$1a@gJ
                                                       g$rest$31498$1a@gJ)))
                                                  (case-lambda
                                                    ((g$x*$31501$1a@gJ
                                                       g$v*$31502$1a@gJ)
                                                     ((case-lambda
                                                        ((g$v*$31503$1a@gJ
                                                           g$x*$31504$1a@gJ)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$29032$1a@gJ
                                                               g$x$31497$1a@gJ)
                                                             g$x*$31504$1a@gJ)
                                                           g$v*$31503$1a@gJ)))
                                                      g$v*$31502$1a@gJ
                                                      g$x*$31501$1a@gJ))))))
                                             g$ls/false$31494$1a@gJ)
                                           ((case-lambda
                                              ((g$t$31505$1a@gJ)
                                               ((case-lambda
                                                  ((g$ls/false$31506$1a@gJ)
                                                   (if g$ls/false$31506$1a@gJ
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$31506$1a@gJ)
                                                     ((case-lambda
                                                        ((g$t$31507$1a@gJ)
                                                         ((case-lambda
                                                            ((g$ls/false$31508$1a@gJ)
                                                             (if g$ls/false$31508$1a@gJ
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$29029$1a@gJ
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$31478$1a@gJ)))
                                                                 g$ls/false$31508$1a@gJ)
                                                               (g$syntax-violation$29029$1a@gJ
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31507$1a@gJ))))
                                                          (g$syntax-dispatch$28909$1a@gJ
                                                            g$t$31507$1a@gJ
                                                            '_))))
                                                      g$t$31505$1a@gJ))))
                                                (g$syntax-dispatch$28909$1a@gJ
                                                  g$t$31505$1a@gJ
                                                  '()))))
                                            g$t$31493$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$31493$1a@gJ
                                        '(any . any)))))
                                  g$t$31487$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$31487$1a@gJ
                              '(each-any)))))
                        g$x$31486$1a@gJ)))))
          (call-with-values
            (case-lambda (() (g$parse$31479$1a@gJ g$spec$31478$1a@gJ)))
            (case-lambda
              ((g$name*$31482$1a@gJ g$ver*$31483$1a@gJ)
               ((case-lambda
                  ((g$ver*$31484$1a@gJ g$name*$31485$1a@gJ)
                   (begin
                     (if (null? g$name*$31485$1a@gJ)
                       (g$syntax-violation$29029$1a@gJ
                         '#f
                         '"empty library name"
                         g$spec$31478$1a@gJ)
                       (void))
                     (values g$name*$31485$1a@gJ g$ver*$31484$1a@gJ))))
                g$ver*$31483$1a@gJ
                g$name*$31482$1a@gJ))))))))
   (g$parse-library$28960$1a@gJ
     g$parse-library$32557$1a@gJ
     (case-lambda
       ((g$e$31509$1a@gJ)
        ((case-lambda
           ((g$t$31510$1a@gJ)
            ((case-lambda
               ((g$ls/false$31511$1a@gJ)
                (if (if g$ls/false$31511$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$31512$1a@gJ
                               g$name*$31513$1a@gJ
                               g$export$31514$1a@gJ
                               g$exp*$31515$1a@gJ
                               g$import$31516$1a@gJ
                               g$imp*$31517$1a@gJ
                               g$b*$31518$1a@gJ)
                             (if (eq? (g$syntax->datum$29032$1a@gJ
                                        g$export$31514$1a@gJ)
                                      'export)
                               (if (eq? (g$syntax->datum$29032$1a@gJ
                                          g$import$31516$1a@gJ)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$29032$1a@gJ
                                          g$library$31512$1a@gJ)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$31511$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$31519$1a@gJ
                         g$name*$31520$1a@gJ
                         g$export$31521$1a@gJ
                         g$exp*$31522$1a@gJ
                         g$import$31523$1a@gJ
                         g$imp*$31524$1a@gJ
                         g$b*$31525$1a@gJ)
                       (values
                         g$name*$31520$1a@gJ
                         g$exp*$31522$1a@gJ
                         g$imp*$31524$1a@gJ
                         g$b*$31525$1a@gJ)))
                    g$ls/false$31511$1a@gJ)
                  ((case-lambda
                     ((g$t$31526$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$31527$1a@gJ)
                          (if g$ls/false$31527$1a@gJ
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$29029$1a@gJ
                                   '#f
                                   '"malformed library"
                                   g$e$31509$1a@gJ)))
                              g$ls/false$31527$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$31526$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$31526$1a@gJ
                         '_))))
                   g$t$31510$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31510$1a@gJ
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$31509$1a@gJ))))
   (g$parse-import-spec*$28961$1a@gJ
     g$parse-import-spec*$32558$1a@gJ
     (case-lambda
       ((g$imp*$31528$1a@gJ)
        (letrec* ((g$idsyn?$31529$1a@gJ
                    (case-lambda
                      ((g$x$31789$1a@gJ)
                       (g$symbol?$20620$1a@gJ
                         (g$syntax->datum$29032$1a@gJ
                           g$x$31789$1a@gJ)))))
                  (g$dup-error$31530$1a@gJ
                    (case-lambda
                      ((g$name$31788$1a@gJ)
                       (g$syntax-violation$29029$1a@gJ
                         'import
                         '"two imports with different bindings"
                         g$name$31788$1a@gJ))))
                  (g$merge-substs$31531$1a@gJ
                    (case-lambda
                      ((g$s$31779$1a@gJ g$subst$31780$1a@gJ)
                       (letrec* ((g$insert-to-subst$31781$1a@gJ
                                   (case-lambda
                                     ((g$a$31782$1a@gJ
                                        g$subst$31783$1a@gJ)
                                      ((case-lambda
                                         ((g$name$31784$1a@gJ
                                            g$label$31785$1a@gJ)
                                          ((case-lambda
                                             ((g$t$31786$1a@gJ)
                                              (if g$t$31786$1a@gJ
                                                ((case-lambda
                                                   ((g$x$31787$1a@gJ)
                                                    (if (eq? (cdr g$x$31787$1a@gJ)
                                                             g$label$31785$1a@gJ)
                                                      g$subst$31783$1a@gJ
                                                      (begin
                                                        '#f
                                                        (g$dup-error$31530$1a@gJ
                                                          g$name$31784$1a@gJ)))))
                                                 g$t$31786$1a@gJ)
                                                (begin
                                                  '#f
                                                  (cons
                                                    g$a$31782$1a@gJ
                                                    g$subst$31783$1a@gJ)))))
                                           (g$assq$20183$1a@gJ
                                             g$name$31784$1a@gJ
                                             g$subst$31783$1a@gJ))))
                                       (car g$a$31782$1a@gJ)
                                       (cdr g$a$31782$1a@gJ))))))
                         (if (null? g$s$31779$1a@gJ)
                           g$subst$31780$1a@gJ
                           (begin
                             '#f
                             (g$insert-to-subst$31781$1a@gJ
                               (car g$s$31779$1a@gJ)
                               (g$merge-substs$31531$1a@gJ
                                 (cdr g$s$31779$1a@gJ)
                                 g$subst$31780$1a@gJ))))))))
                  (g$exclude*$31532$1a@gJ
                    (case-lambda
                      ((g$sym*$31755$1a@gJ g$subst$31756$1a@gJ)
                       (letrec* ((g$exclude$31757$1a@gJ
                                   (case-lambda
                                     ((g$sym$31770$1a@gJ
                                        g$subst$31771$1a@gJ)
                                      (if (null? g$subst$31771$1a@gJ)
                                        (g$syntax-violation$29029$1a@gJ
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$31770$1a@gJ)
                                        (if (eq? g$sym$31770$1a@gJ
                                                 (g$caar$20657$1a@gJ
                                                   g$subst$31771$1a@gJ))
                                          (values
                                            (g$cdar$20659$1a@gJ
                                              g$subst$31771$1a@gJ)
                                            (cdr g$subst$31771$1a@gJ))
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$a$31772$1a@gJ)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$exclude$31757$1a@gJ
                                                       g$sym$31770$1a@gJ
                                                       (cdr g$subst$31771$1a@gJ))))
                                                  (case-lambda
                                                    ((g$old$31775$1a@gJ
                                                       g$subst$31776$1a@gJ)
                                                     ((case-lambda
                                                        ((g$subst$31777$1a@gJ
                                                           g$old$31778$1a@gJ)
                                                         (values
                                                           g$old$31778$1a@gJ
                                                           (cons
                                                             g$a$31772$1a@gJ
                                                             g$subst$31777$1a@gJ))))
                                                      g$subst$31776$1a@gJ
                                                      g$old$31775$1a@gJ))))))
                                             (car g$subst$31771$1a@gJ)))))))))
                         (if (null? g$sym*$31755$1a@gJ)
                           (values '() g$subst$31756$1a@gJ)
                           (begin
                             '#f
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$exclude$31757$1a@gJ
                                    (car g$sym*$31755$1a@gJ)
                                    g$subst$31756$1a@gJ)))
                               (case-lambda
                                 ((g$old$31760$1a@gJ
                                    g$subst$31761$1a@gJ)
                                  ((case-lambda
                                     ((g$subst$31762$1a@gJ
                                        g$old$31763$1a@gJ)
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$exclude*$31532$1a@gJ
                                             (cdr g$sym*$31755$1a@gJ)
                                             g$subst$31762$1a@gJ)))
                                        (case-lambda
                                          ((g$old*$31766$1a@gJ
                                             g$subst$31767$1a@gJ)
                                           ((case-lambda
                                              ((g$subst$31768$1a@gJ
                                                 g$old*$31769$1a@gJ)
                                               (values
                                                 (cons
                                                   g$old$31763$1a@gJ
                                                   g$old*$31769$1a@gJ)
                                                 g$subst$31768$1a@gJ)))
                                            g$subst$31767$1a@gJ
                                            g$old*$31766$1a@gJ))))))
                                   g$subst$31761$1a@gJ
                                   g$old$31760$1a@gJ))))))))))
                  (g$find*$31533$1a@gJ
                    (case-lambda
                      ((g$sym*$31751$1a@gJ g$subst$31752$1a@gJ)
                       (g$map$20195$1a@gJ
                         (case-lambda
                           ((g$x$31753$1a@gJ)
                            ((case-lambda
                               ((g$t$31754$1a@gJ)
                                (if g$t$31754$1a@gJ
                                  (cdr g$t$31754$1a@gJ)
                                  (begin
                                    '#f
                                    (g$syntax-violation$29029$1a@gJ
                                      'import
                                      '"cannot find identifier"
                                      g$x$31753$1a@gJ)))))
                             (g$assq$20183$1a@gJ
                               g$x$31753$1a@gJ
                               g$subst$31752$1a@gJ))))
                         g$sym*$31751$1a@gJ))))
                  (g$rem*$31534$1a@gJ
                    (case-lambda
                      ((g$sym*$31747$1a@gJ g$subst$31748$1a@gJ)
                       ((letrec ((g$f$31749$1a@gJ
                                   (case-lambda
                                     ((g$subst$31750$1a@gJ)
                                      (if (null? g$subst$31750$1a@gJ)
                                        '()
                                        (if (g$memq$20187$1a@gJ
                                              (g$caar$20657$1a@gJ
                                                g$subst$31750$1a@gJ)
                                              g$sym*$31747$1a@gJ)
                                          (g$f$31749$1a@gJ
                                            (cdr g$subst$31750$1a@gJ))
                                          (begin
                                            '#f
                                            (cons
                                              (car g$subst$31750$1a@gJ)
                                              (g$f$31749$1a@gJ
                                                (cdr g$subst$31750$1a@gJ))))))))))
                          g$f$31749$1a@gJ)
                        g$subst$31748$1a@gJ))))
                  (g$remove-dups$31535$1a@gJ
                    (case-lambda
                      ((g$ls$31746$1a@gJ)
                       (if (null? g$ls$31746$1a@gJ)
                         '()
                         (if (g$memq$20187$1a@gJ
                               (car g$ls$31746$1a@gJ)
                               (cdr g$ls$31746$1a@gJ))
                           (g$remove-dups$31535$1a@gJ
                             (cdr g$ls$31746$1a@gJ))
                           (begin
                             '#f
                             (cons
                               (car g$ls$31746$1a@gJ)
                               (g$remove-dups$31535$1a@gJ
                                 (cdr g$ls$31746$1a@gJ)))))))))
                  (g$parse-library-name$31536$1a@gJ
                    (case-lambda
                      ((g$spec$31630$1a@gJ)
                       (letrec* ((g$subversion?$31631$1a@gJ
                                   (case-lambda
                                     ((g$x$31744$1a@gJ)
                                      ((case-lambda
                                         ((g$x$31745$1a@gJ)
                                          (if (g$integer?$21656$1a@gJ
                                                g$x$31745$1a@gJ)
                                            (if (g$exact?$21651$1a@gJ
                                                  g$x$31745$1a@gJ)
                                              (begin
                                                '#f
                                                (g$>=$21673$1a@gJ
                                                  g$x$31745$1a@gJ
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$29032$1a@gJ
                                         g$x$31744$1a@gJ)))))
                                 (g$subversion-pred$31632$1a@gJ
                                   (case-lambda
                                     ((g$x*$31696$1a@gJ)
                                      ((case-lambda
                                         ((g$t$31697$1a@gJ)
                                          ((case-lambda
                                             ((g$ls/false$31698$1a@gJ)
                                              (if (if g$ls/false$31698$1a@gJ
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$31699$1a@gJ)
                                                           (g$subversion?$31631$1a@gJ
                                                             g$n$31699$1a@gJ)))
                                                        g$ls/false$31698$1a@gJ))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$31700$1a@gJ)
                                                     (case-lambda
                                                       ((g$x$31701$1a@gJ)
                                                        (g$=$21669$1a@gJ
                                                          g$x$31701$1a@gJ
                                                          (g$syntax->datum$29032$1a@gJ
                                                            g$n$31700$1a@gJ))))))
                                                  g$ls/false$31698$1a@gJ)
                                                ((case-lambda
                                                   ((g$t$31702$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$31703$1a@gJ)
                                                        (if (if g$ls/false$31703$1a@gJ
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$31704$1a@gJ
                                                                       g$sub*$31705$1a@gJ)
                                                                     (eq? (g$syntax->datum$29032$1a@gJ
                                                                            g$p?$31704$1a@gJ)
                                                                          'and)))
                                                                  g$ls/false$31703$1a@gJ))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$31706$1a@gJ
                                                                 g$sub*$31707$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$p*$31708$1a@gJ)
                                                                   (case-lambda
                                                                     ((g$x$31709$1a@gJ)
                                                                      (g$for-all$20193$1a@gJ
                                                                        (case-lambda
                                                                          ((g$p$31710$1a@gJ)
                                                                           (g$p$31710$1a@gJ
                                                                             g$x$31709$1a@gJ)))
                                                                        g$p*$31708$1a@gJ)))))
                                                                (g$map$20195$1a@gJ
                                                                  g$subversion-pred$31632$1a@gJ
                                                                  g$sub*$31707$1a@gJ))))
                                                            g$ls/false$31703$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$31711$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$31712$1a@gJ)
                                                                  (if (if g$ls/false$31712$1a@gJ
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$31713$1a@gJ
                                                                                 g$sub*$31714$1a@gJ)
                                                                               (eq? (g$syntax->datum$29032$1a@gJ
                                                                                      g$p?$31713$1a@gJ)
                                                                                    'or)))
                                                                            g$ls/false$31712$1a@gJ))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$31715$1a@gJ
                                                                           g$sub*$31716$1a@gJ)
                                                                         ((case-lambda
                                                                            ((g$p*$31717$1a@gJ)
                                                                             (case-lambda
                                                                               ((g$x$31718$1a@gJ)
                                                                                (g$exists$20194$1a@gJ
                                                                                  (case-lambda
                                                                                    ((g$p$31719$1a@gJ)
                                                                                     (g$p$31719$1a@gJ
                                                                                       g$x$31718$1a@gJ)))
                                                                                  g$p*$31717$1a@gJ)))))
                                                                          (g$map$20195$1a@gJ
                                                                            g$subversion-pred$31632$1a@gJ
                                                                            g$sub*$31716$1a@gJ))))
                                                                      g$ls/false$31712$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$t$31720$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$31721$1a@gJ)
                                                                            (if (if g$ls/false$31721$1a@gJ
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$31722$1a@gJ
                                                                                           g$sub$31723$1a@gJ)
                                                                                         (eq? (g$syntax->datum$29032$1a@gJ
                                                                                                g$p?$31722$1a@gJ)
                                                                                              'not)))
                                                                                      g$ls/false$31721$1a@gJ))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$31724$1a@gJ
                                                                                     g$sub$31725$1a@gJ)
                                                                                   ((case-lambda
                                                                                      ((g$p$31726$1a@gJ)
                                                                                       (case-lambda
                                                                                         ((g$x$31727$1a@gJ)
                                                                                          (not (g$p$31726$1a@gJ
                                                                                                 g$x$31727$1a@gJ))))))
                                                                                    (g$subversion-pred$31632$1a@gJ
                                                                                      g$sub$31725$1a@gJ))))
                                                                                g$ls/false$31721$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$t$31728$1a@gJ)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31729$1a@gJ)
                                                                                      (if (if g$ls/false$31729$1a@gJ
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$31730$1a@gJ
                                                                                                     g$n$31731$1a@gJ)
                                                                                                   (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                                                              g$p?$31730$1a@gJ)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$31631$1a@gJ
                                                                                                         g$n$31731$1a@gJ))
                                                                                                     '#f)))
                                                                                                g$ls/false$31729$1a@gJ))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$31732$1a@gJ
                                                                                               g$n$31733$1a@gJ)
                                                                                             (case-lambda
                                                                                               ((g$x$31734$1a@gJ)
                                                                                                (g$<=$21671$1a@gJ
                                                                                                  g$x$31734$1a@gJ
                                                                                                  (g$syntax->datum$29032$1a@gJ
                                                                                                    g$n$31733$1a@gJ))))))
                                                                                          g$ls/false$31729$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$t$31735$1a@gJ)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$31736$1a@gJ)
                                                                                                (if (if g$ls/false$31736$1a@gJ
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$31737$1a@gJ
                                                                                                               g$n$31738$1a@gJ)
                                                                                                             (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                                                                        g$p?$31737$1a@gJ)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$31631$1a@gJ
                                                                                                                   g$n$31738$1a@gJ))
                                                                                                               '#f)))
                                                                                                          g$ls/false$31736$1a@gJ))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$31739$1a@gJ
                                                                                                         g$n$31740$1a@gJ)
                                                                                                       (case-lambda
                                                                                                         ((g$x$31741$1a@gJ)
                                                                                                          (g$>=$21673$1a@gJ
                                                                                                            g$x$31741$1a@gJ
                                                                                                            (g$syntax->datum$29032$1a@gJ
                                                                                                              g$n$31740$1a@gJ))))))
                                                                                                    g$ls/false$31736$1a@gJ)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$31742$1a@gJ)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$31743$1a@gJ)
                                                                                                          (if g$ls/false$31743$1a@gJ
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$29029$1a@gJ
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$31630$1a@gJ
                                                                                                                   g$x*$31696$1a@gJ)))
                                                                                                              g$ls/false$31743$1a@gJ)
                                                                                                            (g$syntax-violation$29029$1a@gJ
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$31742$1a@gJ))))
                                                                                                       (g$syntax-dispatch$28909$1a@gJ
                                                                                                         g$t$31742$1a@gJ
                                                                                                         '_))))
                                                                                                   g$t$31735$1a@gJ))))
                                                                                             (g$syntax-dispatch$28909$1a@gJ
                                                                                               g$t$31735$1a@gJ
                                                                                               '(any any)))))
                                                                                         g$t$31728$1a@gJ))))
                                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                                     g$t$31728$1a@gJ
                                                                                     '(any any)))))
                                                                               g$t$31720$1a@gJ))))
                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                           g$t$31720$1a@gJ
                                                                           '(any any)))))
                                                                     g$t$31711$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$31711$1a@gJ
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$31702$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$31702$1a@gJ
                                                       '(any .
                                                             each-any)))))
                                                 g$t$31697$1a@gJ))))
                                           (g$syntax-dispatch$28909$1a@gJ
                                             g$t$31697$1a@gJ
                                             'any))))
                                       g$x*$31696$1a@gJ))))
                                 (g$version-pred$31633$1a@gJ
                                   (case-lambda
                                     ((g$x*$31656$1a@gJ)
                                      ((case-lambda
                                         ((g$t$31657$1a@gJ)
                                          ((case-lambda
                                             ((g$ls/false$31658$1a@gJ)
                                              (if g$ls/false$31658$1a@gJ
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$31659$1a@gJ)
                                                        '#t))))
                                                  g$ls/false$31658$1a@gJ)
                                                ((case-lambda
                                                   ((g$t$31660$1a@gJ)
                                                    ((case-lambda
                                                       ((g$ls/false$31661$1a@gJ)
                                                        (if (if g$ls/false$31661$1a@gJ
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$31662$1a@gJ
                                                                       g$ver*$31663$1a@gJ)
                                                                     (eq? (g$syntax->datum$29032$1a@gJ
                                                                            g$c$31662$1a@gJ)
                                                                          'and)))
                                                                  g$ls/false$31661$1a@gJ))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$31664$1a@gJ
                                                                 g$ver*$31665$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$p*$31666$1a@gJ)
                                                                   (case-lambda
                                                                     ((g$x$31667$1a@gJ)
                                                                      (g$for-all$20193$1a@gJ
                                                                        (case-lambda
                                                                          ((g$p$31668$1a@gJ)
                                                                           (g$p$31668$1a@gJ
                                                                             g$x$31667$1a@gJ)))
                                                                        g$p*$31666$1a@gJ)))))
                                                                (g$map$20195$1a@gJ
                                                                  g$version-pred$31633$1a@gJ
                                                                  g$ver*$31665$1a@gJ))))
                                                            g$ls/false$31661$1a@gJ)
                                                          ((case-lambda
                                                             ((g$t$31669$1a@gJ)
                                                              ((case-lambda
                                                                 ((g$ls/false$31670$1a@gJ)
                                                                  (if (if g$ls/false$31670$1a@gJ
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$31671$1a@gJ
                                                                                 g$ver*$31672$1a@gJ)
                                                                               (eq? (g$syntax->datum$29032$1a@gJ
                                                                                      g$c$31671$1a@gJ)
                                                                                    'or)))
                                                                            g$ls/false$31670$1a@gJ))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$31673$1a@gJ
                                                                           g$ver*$31674$1a@gJ)
                                                                         ((case-lambda
                                                                            ((g$p*$31675$1a@gJ)
                                                                             (case-lambda
                                                                               ((g$x$31676$1a@gJ)
                                                                                (g$exists$20194$1a@gJ
                                                                                  (case-lambda
                                                                                    ((g$p$31677$1a@gJ)
                                                                                     (g$p$31677$1a@gJ
                                                                                       g$x$31676$1a@gJ)))
                                                                                  g$p*$31675$1a@gJ)))))
                                                                          (g$map$20195$1a@gJ
                                                                            g$version-pred$31633$1a@gJ
                                                                            g$ver*$31674$1a@gJ))))
                                                                      g$ls/false$31670$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$t$31678$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$ls/false$31679$1a@gJ)
                                                                            (if (if g$ls/false$31679$1a@gJ
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$31680$1a@gJ
                                                                                           g$ver$31681$1a@gJ)
                                                                                         (eq? (g$syntax->datum$29032$1a@gJ
                                                                                                g$c$31680$1a@gJ)
                                                                                              'not)))
                                                                                      g$ls/false$31679$1a@gJ))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$31682$1a@gJ
                                                                                     g$ver$31683$1a@gJ)
                                                                                   ((case-lambda
                                                                                      ((g$p$31684$1a@gJ)
                                                                                       (case-lambda
                                                                                         ((g$x$31685$1a@gJ)
                                                                                          (not (g$p$31684$1a@gJ
                                                                                                 g$x$31685$1a@gJ))))))
                                                                                    (g$version-pred$31633$1a@gJ
                                                                                      g$ver$31683$1a@gJ))))
                                                                                g$ls/false$31679$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$t$31686$1a@gJ)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31687$1a@gJ)
                                                                                      (if g$ls/false$31687$1a@gJ
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$31688$1a@gJ)
                                                                                             ((case-lambda
                                                                                                ((g$p*$31689$1a@gJ)
                                                                                                 (case-lambda
                                                                                                   ((g$x$31690$1a@gJ)
                                                                                                    ((letrec ((g$f$31691$1a@gJ
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$31692$1a@gJ
                                                                                                                     g$x$31693$1a@gJ)
                                                                                                                   (if (null?
                                                                                                                         g$p*$31692$1a@gJ)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$31693$1a@gJ)
                                                                                                                       '#f
                                                                                                                       (begin
                                                                                                                         '#f
                                                                                                                         (if ((car g$p*$31692$1a@gJ)
                                                                                                                              (car g$x$31693$1a@gJ))
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (g$f$31691$1a@gJ
                                                                                                                               (cdr g$p*$31692$1a@gJ)
                                                                                                                               (cdr g$x$31693$1a@gJ)))
                                                                                                                           '#f))))))))
                                                                                                       g$f$31691$1a@gJ)
                                                                                                     g$p*$31689$1a@gJ
                                                                                                     g$x$31690$1a@gJ)))))
                                                                                              (g$map$20195$1a@gJ
                                                                                                g$subversion-pred$31632$1a@gJ
                                                                                                g$sub*$31688$1a@gJ))))
                                                                                          g$ls/false$31687$1a@gJ)
                                                                                        ((case-lambda
                                                                                           ((g$t$31694$1a@gJ)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$31695$1a@gJ)
                                                                                                (if g$ls/false$31695$1a@gJ
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$29029$1a@gJ
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$31630$1a@gJ
                                                                                                         g$x*$31656$1a@gJ)))
                                                                                                    g$ls/false$31695$1a@gJ)
                                                                                                  (g$syntax-violation$29029$1a@gJ
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$31694$1a@gJ))))
                                                                                             (g$syntax-dispatch$28909$1a@gJ
                                                                                               g$t$31694$1a@gJ
                                                                                               '_))))
                                                                                         g$t$31686$1a@gJ))))
                                                                                   (g$syntax-dispatch$28909$1a@gJ
                                                                                     g$t$31686$1a@gJ
                                                                                     'each-any))))
                                                                               g$t$31678$1a@gJ))))
                                                                         (g$syntax-dispatch$28909$1a@gJ
                                                                           g$t$31678$1a@gJ
                                                                           '(any any)))))
                                                                     g$t$31669$1a@gJ))))
                                                               (g$syntax-dispatch$28909$1a@gJ
                                                                 g$t$31669$1a@gJ
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$31660$1a@gJ))))
                                                     (g$syntax-dispatch$28909$1a@gJ
                                                       g$t$31660$1a@gJ
                                                       '(any .
                                                             each-any)))))
                                                 g$t$31657$1a@gJ))))
                                           (g$syntax-dispatch$28909$1a@gJ
                                             g$t$31657$1a@gJ
                                             '()))))
                                       g$x*$31656$1a@gJ)))))
                         ((letrec ((g$f$31634$1a@gJ
                                     (case-lambda
                                       ((g$x$31635$1a@gJ)
                                        ((case-lambda
                                           ((g$t$31636$1a@gJ)
                                            ((case-lambda
                                               ((g$ls/false$31637$1a@gJ)
                                                (if g$ls/false$31637$1a@gJ
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$31638$1a@gJ)
                                                       (values
                                                         '()
                                                         (g$version-pred$31633$1a@gJ
                                                           g$version-spec*$31638$1a@gJ))))
                                                    g$ls/false$31637$1a@gJ)
                                                  ((case-lambda
                                                     ((g$t$31639$1a@gJ)
                                                      ((case-lambda
                                                         ((g$ls/false$31640$1a@gJ)
                                                          (if (if g$ls/false$31640$1a@gJ
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$31641$1a@gJ
                                                                         g$x*$31642$1a@gJ)
                                                                       (g$idsyn?$31529$1a@gJ
                                                                         g$x$31641$1a@gJ)))
                                                                    g$ls/false$31640$1a@gJ))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$31643$1a@gJ
                                                                   g$x*$31644$1a@gJ)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$31634$1a@gJ
                                                                        g$x*$31644$1a@gJ)))
                                                                   (case-lambda
                                                                     ((g$name$31647$1a@gJ
                                                                        g$pred$31648$1a@gJ)
                                                                      ((case-lambda
                                                                         ((g$pred$31649$1a@gJ
                                                                            g$name$31650$1a@gJ)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$29032$1a@gJ
                                                                                g$x$31643$1a@gJ)
                                                                              g$name$31650$1a@gJ)
                                                                            g$pred$31649$1a@gJ)))
                                                                       g$pred$31648$1a@gJ
                                                                       g$name$31647$1a@gJ))))))
                                                              g$ls/false$31640$1a@gJ)
                                                            ((case-lambda
                                                               ((g$t$31651$1a@gJ)
                                                                ((case-lambda
                                                                   ((g$ls/false$31652$1a@gJ)
                                                                    (if g$ls/false$31652$1a@gJ
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$31653$1a@gJ)
                                                                                '#t)))))
                                                                        g$ls/false$31652$1a@gJ)
                                                                      ((case-lambda
                                                                         ((g$t$31654$1a@gJ)
                                                                          ((case-lambda
                                                                             ((g$ls/false$31655$1a@gJ)
                                                                              (if g$ls/false$31655$1a@gJ
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$29029$1a@gJ
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$31630$1a@gJ)))
                                                                                  g$ls/false$31655$1a@gJ)
                                                                                (g$syntax-violation$29029$1a@gJ
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$31654$1a@gJ))))
                                                                           (g$syntax-dispatch$28909$1a@gJ
                                                                             g$t$31654$1a@gJ
                                                                             '_))))
                                                                       g$t$31651$1a@gJ))))
                                                                 (g$syntax-dispatch$28909$1a@gJ
                                                                   g$t$31651$1a@gJ
                                                                   '()))))
                                                             g$t$31639$1a@gJ))))
                                                       (g$syntax-dispatch$28909$1a@gJ
                                                         g$t$31639$1a@gJ
                                                         '(any .
                                                               any)))))
                                                   g$t$31636$1a@gJ))))
                                             (g$syntax-dispatch$28909$1a@gJ
                                               g$t$31636$1a@gJ
                                               '(each-any)))))
                                         g$x$31635$1a@gJ)))))
                            g$f$31634$1a@gJ)
                          g$spec$31630$1a@gJ)))))
                  (g$import-library$31537$1a@gJ
                    (case-lambda
                      ((g$spec*$31622$1a@gJ)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$31536$1a@gJ
                              g$spec*$31622$1a@gJ)))
                         (case-lambda
                           ((g$name$31625$1a@gJ g$pred$31626$1a@gJ)
                            ((case-lambda
                               ((g$pred$31627$1a@gJ g$name$31628$1a@gJ)
                                (begin
                                  (if (null? g$name$31628$1a@gJ)
                                    (g$syntax-violation$29029$1a@gJ
                                      'import
                                      '"empty library name"
                                      g$spec*$31622$1a@gJ)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$31629$1a@gJ)
                                      (begin
                                        (if (not g$lib$31629$1a@gJ)
                                          (g$syntax-violation$29029$1a@gJ
                                            'import
                                            '"cannot find library with required name"
                                            g$name$31628$1a@gJ)
                                          (void))
                                        (if (not (g$pred$31627$1a@gJ
                                                   (g$library-version$28070$1a@gJ
                                                     g$lib$31629$1a@gJ)))
                                          (g$syntax-violation$29029$1a@gJ
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$31622$1a@gJ
                                            g$lib$31629$1a@gJ)
                                          (void))
                                        ((g$imp-collector$28966$1a@gJ)
                                         g$lib$31629$1a@gJ)
                                        (g$library-subst$28074$1a@gJ
                                          g$lib$31629$1a@gJ))))
                                   (g$find-library-by-name$28110$1a@gJ
                                     g$name$31628$1a@gJ)))))
                             g$pred$31626$1a@gJ
                             g$name$31625$1a@gJ)))))))
                  (g$get-import$31538$1a@gJ
                    (case-lambda
                      ((g$spec$31551$1a@gJ)
                       ((case-lambda
                          ((g$t$31552$1a@gJ)
                           ((case-lambda
                              ((g$ls/false$31553$1a@gJ)
                               (if (if g$ls/false$31553$1a@gJ
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$31554$1a@gJ
                                              g$x*$31555$1a@gJ)
                                            (not (g$memq$20187$1a@gJ
                                                   (g$syntax->datum$29032$1a@gJ
                                                     g$x$31554$1a@gJ)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$31553$1a@gJ))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$31556$1a@gJ g$x*$31557$1a@gJ)
                                      (g$import-library$31537$1a@gJ
                                        (cons
                                          g$x$31556$1a@gJ
                                          g$x*$31557$1a@gJ))))
                                   g$ls/false$31553$1a@gJ)
                                 ((case-lambda
                                    ((g$t$31558$1a@gJ)
                                     ((case-lambda
                                        ((g$ls/false$31559$1a@gJ)
                                         (if (if g$ls/false$31559$1a@gJ
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$31560$1a@gJ
                                                        g$isp$31561$1a@gJ
                                                        g$old*$31562$1a@gJ
                                                        g$new*$31563$1a@gJ)
                                                      (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                 g$rename$31560$1a@gJ)
                                                               'rename)
                                                        (if (g$for-all$20193$1a@gJ
                                                              g$idsyn?$31529$1a@gJ
                                                              g$old*$31562$1a@gJ)
                                                          (begin
                                                            '#f
                                                            (g$for-all$20193$1a@gJ
                                                              g$idsyn?$31529$1a@gJ
                                                              g$new*$31563$1a@gJ))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$31559$1a@gJ))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$31564$1a@gJ
                                                  g$isp$31565$1a@gJ
                                                  g$old*$31566$1a@gJ
                                                  g$new*$31567$1a@gJ)
                                                ((case-lambda
                                                   ((g$subst$31568$1a@gJ
                                                      g$old*$31569$1a@gJ
                                                      g$new*$31570$1a@gJ)
                                                    ((case-lambda
                                                       ((g$old-label*$31571$1a@gJ)
                                                        ((case-lambda
                                                           ((g$subst$31572$1a@gJ)
                                                            (g$merge-substs$31531$1a@gJ
                                                              (g$map$20195$1a@gJ
                                                                cons
                                                                g$new*$31570$1a@gJ
                                                                g$old-label*$31571$1a@gJ)
                                                              g$subst$31572$1a@gJ)))
                                                         (g$rem*$31534$1a@gJ
                                                           g$old*$31569$1a@gJ
                                                           g$subst$31568$1a@gJ))))
                                                     (g$find*$31533$1a@gJ
                                                       g$old*$31569$1a@gJ
                                                       g$subst$31568$1a@gJ))))
                                                 (g$get-import$31538$1a@gJ
                                                   g$isp$31565$1a@gJ)
                                                 (g$map$20195$1a@gJ
                                                   g$syntax->datum$29032$1a@gJ
                                                   g$old*$31566$1a@gJ)
                                                 (g$map$20195$1a@gJ
                                                   g$syntax->datum$29032$1a@gJ
                                                   g$new*$31567$1a@gJ))))
                                             g$ls/false$31559$1a@gJ)
                                           ((case-lambda
                                              ((g$t$31573$1a@gJ)
                                               ((case-lambda
                                                  ((g$ls/false$31574$1a@gJ)
                                                   (if (if g$ls/false$31574$1a@gJ
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$31575$1a@gJ
                                                                  g$isp$31576$1a@gJ
                                                                  g$sym*$31577$1a@gJ)
                                                                (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                           g$except$31575$1a@gJ)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$20193$1a@gJ
                                                                      g$idsyn?$31529$1a@gJ
                                                                      g$sym*$31577$1a@gJ))
                                                                  '#f)))
                                                             g$ls/false$31574$1a@gJ))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$31578$1a@gJ
                                                            g$isp$31579$1a@gJ
                                                            g$sym*$31580$1a@gJ)
                                                          ((case-lambda
                                                             ((g$subst$31581$1a@gJ)
                                                              (g$rem*$31534$1a@gJ
                                                                (g$map$20195$1a@gJ
                                                                  g$syntax->datum$29032$1a@gJ
                                                                  g$sym*$31580$1a@gJ)
                                                                g$subst$31581$1a@gJ)))
                                                           (g$get-import$31538$1a@gJ
                                                             g$isp$31579$1a@gJ))))
                                                       g$ls/false$31574$1a@gJ)
                                                     ((case-lambda
                                                        ((g$t$31582$1a@gJ)
                                                         ((case-lambda
                                                            ((g$ls/false$31583$1a@gJ)
                                                             (if (if g$ls/false$31583$1a@gJ
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$31584$1a@gJ
                                                                            g$isp$31585$1a@gJ
                                                                            g$sym*$31586$1a@gJ)
                                                                          (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                                     g$only$31584$1a@gJ)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$20193$1a@gJ
                                                                                g$idsyn?$31529$1a@gJ
                                                                                g$sym*$31586$1a@gJ))
                                                                            '#f)))
                                                                       g$ls/false$31583$1a@gJ))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$31587$1a@gJ
                                                                      g$isp$31588$1a@gJ
                                                                      g$sym*$31589$1a@gJ)
                                                                    ((case-lambda
                                                                       ((g$subst$31590$1a@gJ
                                                                          g$sym*$31591$1a@gJ)
                                                                        ((case-lambda
                                                                           ((g$sym*$31592$1a@gJ)
                                                                            ((case-lambda
                                                                               ((g$lab*$31593$1a@gJ)
                                                                                (g$map$20195$1a@gJ
                                                                                  cons
                                                                                  g$sym*$31592$1a@gJ
                                                                                  g$lab*$31593$1a@gJ)))
                                                                             (g$find*$31533$1a@gJ
                                                                               g$sym*$31592$1a@gJ
                                                                               g$subst$31590$1a@gJ))))
                                                                         (g$remove-dups$31535$1a@gJ
                                                                           g$sym*$31591$1a@gJ))))
                                                                     (g$get-import$31538$1a@gJ
                                                                       g$isp$31588$1a@gJ)
                                                                     (g$map$20195$1a@gJ
                                                                       g$syntax->datum$29032$1a@gJ
                                                                       g$sym*$31589$1a@gJ))))
                                                                 g$ls/false$31583$1a@gJ)
                                                               ((case-lambda
                                                                  ((g$t$31594$1a@gJ)
                                                                   ((case-lambda
                                                                      ((g$ls/false$31595$1a@gJ)
                                                                       (if (if g$ls/false$31595$1a@gJ
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$31596$1a@gJ
                                                                                      g$isp$31597$1a@gJ
                                                                                      g$p$31598$1a@gJ)
                                                                                    (if (eq? (g$syntax->datum$29032$1a@gJ
                                                                                               g$prefix$31596$1a@gJ)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$31529$1a@gJ
                                                                                          g$p$31598$1a@gJ))
                                                                                      '#f)))
                                                                                 g$ls/false$31595$1a@gJ))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$31599$1a@gJ
                                                                                g$isp$31600$1a@gJ
                                                                                g$p$31601$1a@gJ)
                                                                              ((case-lambda
                                                                                 ((g$subst$31602$1a@gJ
                                                                                    g$prefix$31603$1a@gJ)
                                                                                  (g$map$20195$1a@gJ
                                                                                    (case-lambda
                                                                                      ((g$x$31604$1a@gJ)
                                                                                       (cons
                                                                                         (g$string->symbol$20641$1a@gJ
                                                                                           (g$string-append$20638$1a@gJ
                                                                                             g$prefix$31603$1a@gJ
                                                                                             (g$symbol->string$20640$1a@gJ
                                                                                               (car g$x$31604$1a@gJ))))
                                                                                         (cdr g$x$31604$1a@gJ))))
                                                                                    g$subst$31602$1a@gJ)))
                                                                               (g$get-import$31538$1a@gJ
                                                                                 g$isp$31600$1a@gJ)
                                                                               (g$symbol->string$20640$1a@gJ
                                                                                 (g$syntax->datum$29032$1a@gJ
                                                                                   g$p$31601$1a@gJ)))))
                                                                           g$ls/false$31595$1a@gJ)
                                                                         ((case-lambda
                                                                            ((g$t$31605$1a@gJ)
                                                                             ((case-lambda
                                                                                ((g$ls/false$31606$1a@gJ)
                                                                                 (if (if g$ls/false$31606$1a@gJ
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$31607$1a@gJ
                                                                                                g$spec*$31608$1a@gJ)
                                                                                              (eq? (g$syntax->datum$29032$1a@gJ
                                                                                                     g$library$31607$1a@gJ)
                                                                                                   'library)))
                                                                                           g$ls/false$31606$1a@gJ))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$31609$1a@gJ
                                                                                          g$spec*$31610$1a@gJ)
                                                                                        (g$import-library$31537$1a@gJ
                                                                                          g$spec*$31610$1a@gJ)))
                                                                                     g$ls/false$31606$1a@gJ)
                                                                                   ((case-lambda
                                                                                      ((g$t$31611$1a@gJ)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$31612$1a@gJ)
                                                                                           (if (if g$ls/false$31612$1a@gJ
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$31613$1a@gJ
                                                                                                          g$isp$31614$1a@gJ
                                                                                                          g$rest$31615$1a@gJ)
                                                                                                        (eq? (g$syntax->datum$29032$1a@gJ
                                                                                                               g$for$31613$1a@gJ)
                                                                                                             'for)))
                                                                                                     g$ls/false$31612$1a@gJ))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$31616$1a@gJ
                                                                                                    g$isp$31617$1a@gJ
                                                                                                    g$rest$31618$1a@gJ)
                                                                                                  (g$get-import$31538$1a@gJ
                                                                                                    g$isp$31617$1a@gJ)))
                                                                                               g$ls/false$31612$1a@gJ)
                                                                                             ((case-lambda
                                                                                                ((g$t$31619$1a@gJ)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$31620$1a@gJ)
                                                                                                     (if g$ls/false$31620$1a@gJ
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$31621$1a@gJ)
                                                                                                            (g$syntax-violation$29029$1a@gJ
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$31621$1a@gJ)))
                                                                                                         g$ls/false$31620$1a@gJ)
                                                                                                       (g$syntax-violation$29029$1a@gJ
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$31619$1a@gJ))))
                                                                                                  (g$syntax-dispatch$28909$1a@gJ
                                                                                                    g$t$31619$1a@gJ
                                                                                                    'any))))
                                                                                              g$t$31611$1a@gJ))))
                                                                                        (g$syntax-dispatch$28909$1a@gJ
                                                                                          g$t$31611$1a@gJ
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$31605$1a@gJ))))
                                                                              (g$syntax-dispatch$28909$1a@gJ
                                                                                g$t$31605$1a@gJ
                                                                                '(any each-any)))))
                                                                          g$t$31594$1a@gJ))))
                                                                    (g$syntax-dispatch$28909$1a@gJ
                                                                      g$t$31594$1a@gJ
                                                                      '(any any
                                                                            any)))))
                                                                g$t$31582$1a@gJ))))
                                                          (g$syntax-dispatch$28909$1a@gJ
                                                            g$t$31582$1a@gJ
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$31573$1a@gJ))))
                                                (g$syntax-dispatch$28909$1a@gJ
                                                  g$t$31573$1a@gJ
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$31558$1a@gJ))))
                                      (g$syntax-dispatch$28909$1a@gJ
                                        g$t$31558$1a@gJ
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$31552$1a@gJ))))
                            (g$syntax-dispatch$28909$1a@gJ
                              g$t$31552$1a@gJ
                              '(any . each-any)))))
                        g$spec$31551$1a@gJ))))
                  (g$add-imports!$31539$1a@gJ
                    (case-lambda
                      ((g$imp$31543$1a@gJ g$h$31544$1a@gJ)
                       ((case-lambda
                          ((g$subst$31545$1a@gJ)
                           (g$for-each$20196$1a@gJ
                             (case-lambda
                               ((g$x$31546$1a@gJ)
                                ((case-lambda
                                   ((g$name$31547$1a@gJ
                                      g$label$31548$1a@gJ)
                                    ((case-lambda
                                       ((g$t$31549$1a@gJ)
                                        (if g$t$31549$1a@gJ
                                          ((case-lambda
                                             ((g$l$31550$1a@gJ)
                                              (if (not (eq? g$l$31550$1a@gJ
                                                            g$label$31548$1a@gJ))
                                                (g$dup-error$31530$1a@gJ
                                                  g$name$31547$1a@gJ)
                                                (void))))
                                           g$t$31549$1a@gJ)
                                          (begin
                                            '#f
                                            (g$hashtable-set!$20760$1a@gJ
                                              g$h$31544$1a@gJ
                                              g$name$31547$1a@gJ
                                              g$label$31548$1a@gJ)))))
                                     (g$hashtable-ref$20759$1a@gJ
                                       g$h$31544$1a@gJ
                                       g$name$31547$1a@gJ
                                       '#f))))
                                 (car g$x$31546$1a@gJ)
                                 (cdr g$x$31546$1a@gJ))))
                             g$subst$31545$1a@gJ)))
                        (g$get-import$31538$1a@gJ
                          g$imp$31543$1a@gJ))))))
          ((letrec ((g$f$31540$1a@gJ
                      (case-lambda
                        ((g$imp*$31541$1a@gJ g$h$31542$1a@gJ)
                         (if (null? g$imp*$31541$1a@gJ)
                           (hashtable-entries g$h$31542$1a@gJ)
                           (begin
                             '#f
                             (g$add-imports!$31539$1a@gJ
                               (car g$imp*$31541$1a@gJ)
                               g$h$31542$1a@gJ)
                             (g$f$31540$1a@gJ
                               (cdr g$imp*$31541$1a@gJ)
                               g$h$31542$1a@gJ)))))))
             g$f$31540$1a@gJ)
           g$imp*$31528$1a@gJ
           (g$make-eq-hashtable$20756$1a@gJ))))))
   (g$make-top-rib$28962$1a@gJ
     g$make-top-rib$32559$1a@gJ
     (case-lambda
       ((g$names$31790$1a@gJ g$labels$31791$1a@gJ)
        ((case-lambda
           ((g$rib$31792$1a@gJ)
            (begin
              (g$vector-for-each$20708$1a@gJ
                (case-lambda
                  ((g$name$31793$1a@gJ g$label$31794$1a@gJ)
                   (begin
                     (if (not (g$symbol?$20620$1a@gJ
                                g$name$31793$1a@gJ))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$31793$1a@gJ)
                       (void))
                     (g$extend-rib/nc!$28373$1a@gJ
                       g$rib$31792$1a@gJ
                       (g$make-stx$28384$1a@gJ
                         g$name$31793$1a@gJ
                         g$top-mark*$28344$1a@gJ
                         '()
                         '())
                       g$label$31794$1a@gJ))))
                g$names$31790$1a@gJ
                g$labels$31791$1a@gJ)
              g$rib$31792$1a@gJ)))
         (g$make-cache-rib$28370$1a@gJ)))))
   (g$make-collector$28963$1a@gJ
     g$make-collector$32560$1a@gJ
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$31795$1a@gJ)
            (case-lambda
              (() g$ls$31795$1a@gJ)
              ((g$x$31796$1a@gJ)
               (set! g$ls$31795$1a@gJ
                 (g$set-cons$28341$1a@gJ
                   g$x$31796$1a@gJ
                   g$ls$31795$1a@gJ))))))
         '()))))
   (g$inv-collector$28964$1a@gJ
     g$inv-collector$32561$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda
         (g$args$31797$1a@gJ
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$31798$1a@gJ)
          (begin
            (if (not (g$procedure?$20622$1a@gJ g$x$31798$1a@gJ))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$31798$1a@gJ)
              (void))
            g$x$31798$1a@gJ)))))
   (g$vis-collector$28965$1a@gJ
     g$vis-collector$32562$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda
         (g$args$31799$1a@gJ
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$31800$1a@gJ)
          (begin
            (if (not (g$procedure?$20622$1a@gJ g$x$31800$1a@gJ))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$31800$1a@gJ)
              (void))
            g$x$31800$1a@gJ)))))
   (g$imp-collector$28966$1a@gJ
     g$imp-collector$32563$1a@gJ
     (g$make-parameter$27252$1a@gJ
       (case-lambda
         (g$args$31801$1a@gJ
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$31802$1a@gJ)
          (begin
            (if (not (g$procedure?$20622$1a@gJ g$x$31802$1a@gJ))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$31802$1a@gJ)
              (void))
            g$x$31802$1a@gJ)))))
   (g$chi-library-internal$28967$1a@gJ
     g$chi-library-internal$32564$1a@gJ
     (case-lambda
       ((g$e*$31803$1a@gJ g$rib$31804$1a@gJ g$mix?$31805$1a@gJ)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$28956$1a@gJ
               g$e*$31803$1a@gJ
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$31804$1a@gJ
               g$mix?$31805$1a@gJ
               '#t)))
          (case-lambda
            ((g$e*$31814$1a@gJ
               g$r$31815$1a@gJ
               g$mr$31816$1a@gJ
               g$lex*$31817$1a@gJ
               g$rhs*$31818$1a@gJ
               g$mod**$31819$1a@gJ
               g$_kwd*$31820$1a@gJ
               g$exp*$31821$1a@gJ)
             ((case-lambda
                ((g$exp*$31822$1a@gJ
                   g$_kwd*$31823$1a@gJ
                   g$mod**$31824$1a@gJ
                   g$rhs*$31825$1a@gJ
                   g$lex*$31826$1a@gJ
                   g$mr$31827$1a@gJ
                   g$r$31828$1a@gJ
                   g$e*$31829$1a@gJ)
                 (values
                   (g$append$20200$1a@gJ
                     (apply
                       g$append$20200$1a@gJ
                       (g$reverse$20656$1a@gJ g$mod**$31824$1a@gJ))
                     g$e*$31829$1a@gJ)
                   g$r$31828$1a@gJ
                   g$mr$31827$1a@gJ
                   (g$reverse$20656$1a@gJ g$lex*$31826$1a@gJ)
                   (g$reverse$20656$1a@gJ g$rhs*$31825$1a@gJ)
                   g$exp*$31822$1a@gJ)))
              g$exp*$31821$1a@gJ
              g$_kwd*$31820$1a@gJ
              g$mod**$31819$1a@gJ
              g$rhs*$31818$1a@gJ
              g$lex*$31817$1a@gJ
              g$mr$31816$1a@gJ
              g$r$31815$1a@gJ
              g$e*$31814$1a@gJ)))))))
   (g$chi-interaction-expr$28968$1a@gJ
     g$chi-interaction-expr$32565$1a@gJ
     (case-lambda
       ((g$e$31830$1a@gJ g$rib$31831$1a@gJ g$r$31832$1a@gJ)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$28956$1a@gJ
               (list g$e$31830$1a@gJ)
               g$r$31832$1a@gJ
               g$r$31832$1a@gJ
               '()
               '()
               '()
               '()
               '()
               g$rib$31831$1a@gJ
               '#t
               '#f)))
          (case-lambda
            ((g$e*$31841$1a@gJ
               g$r$31842$1a@gJ
               g$mr$31843$1a@gJ
               g$lex*$31844$1a@gJ
               g$rhs*$31845$1a@gJ
               g$mod**$31846$1a@gJ
               g$_kwd*$31847$1a@gJ
               g$_exp*$31848$1a@gJ)
             ((case-lambda
                ((g$_exp*$31849$1a@gJ
                   g$_kwd*$31850$1a@gJ
                   g$mod**$31851$1a@gJ
                   g$rhs*$31852$1a@gJ
                   g$lex*$31853$1a@gJ
                   g$mr$31854$1a@gJ
                   g$r$31855$1a@gJ
                   g$e*$31856$1a@gJ)
                 ((case-lambda
                    ((g$e*$31857$1a@gJ)
                     ((case-lambda
                        ((g$e$31858$1a@gJ)
                         (values g$e$31858$1a@gJ g$r$31855$1a@gJ)))
                      (if (null? g$e*$31857$1a@gJ)
                        (g$build-void$28337$1a@gJ)
                        (if (null? (cdr g$e*$31857$1a@gJ))
                          (car g$e*$31857$1a@gJ)
                          (begin
                            '#f
                            (g$build-sequence$28336$1a@gJ
                              '#f
                              g$e*$31857$1a@gJ)))))))
                  (g$expand-interaction-rhs*/init*$28934$1a@gJ
                    (g$reverse$20656$1a@gJ g$lex*$31853$1a@gJ)
                    (g$reverse$20656$1a@gJ g$rhs*$31852$1a@gJ)
                    (g$append$20200$1a@gJ
                      (apply
                        g$append$20200$1a@gJ
                        (g$reverse$20656$1a@gJ g$mod**$31851$1a@gJ))
                      g$e*$31856$1a@gJ)
                    g$r$31855$1a@gJ
                    g$mr$31854$1a@gJ))))
              g$_exp*$31848$1a@gJ
              g$_kwd*$31847$1a@gJ
              g$mod**$31846$1a@gJ
              g$rhs*$31845$1a@gJ
              g$lex*$31844$1a@gJ
              g$mr$31843$1a@gJ
              g$r$31842$1a@gJ
              g$e*$31841$1a@gJ)))))))
   (g$library-body-expander$28969$1a@gJ
     g$library-body-expander$32566$1a@gJ
     (case-lambda
       ((g$name$31859$1a@gJ
          g$main-exp*$31860$1a@gJ
          g$imp*$31861$1a@gJ
          g$b*$31862$1a@gJ
          g$mix?$31863$1a@gJ)
        (letrec* ((g$itc$31864$1a@gJ (g$make-collector$28963$1a@gJ)))
          ((case-lambda
             ((g$imp-collector$31869$1a@gJ
                g$top-level-context$31870$1a@gJ
                g$imp-collector$31871$1a@gJ
                g$top-level-context$31872$1a@gJ)
              ((case-lambda
                 ((g$swap$31873$1a@gJ)
                  (dynamic-wind
                    g$swap$31873$1a@gJ
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$28961$1a@gJ
                              g$imp*$31861$1a@gJ)))
                         (case-lambda
                           ((g$subst-names$31876$1a@gJ
                              g$subst-labels$31877$1a@gJ)
                            ((case-lambda
                               ((g$subst-labels$31878$1a@gJ
                                  g$subst-names$31879$1a@gJ)
                                ((case-lambda
                                   ((g$rib$31880$1a@gJ)
                                    (letrec* ((g$wrap$31881$1a@gJ
                                                (case-lambda
                                                  ((g$x$31943$1a@gJ)
                                                   (g$make-stx$28384$1a@gJ
                                                     g$x$31943$1a@gJ
                                                     g$top-mark*$28344$1a@gJ
                                                     (list
                                                       g$rib$31880$1a@gJ)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$31882$1a@gJ
                                            g$main-exp*$31883$1a@gJ
                                            g$rtc$31884$1a@gJ
                                            g$vtc$31885$1a@gJ)
                                          ((case-lambda
                                             ((g$inv-collector$31890$1a@gJ
                                                g$vis-collector$31891$1a@gJ
                                                g$inv-collector$31892$1a@gJ
                                                g$vis-collector$31893$1a@gJ)
                                              ((case-lambda
                                                 ((g$swap$31894$1a@gJ)
                                                  (dynamic-wind
                                                    g$swap$31894$1a@gJ
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$28967$1a@gJ
                                                              g$b*$31882$1a@gJ
                                                              g$rib$31880$1a@gJ
                                                              g$mix?$31863$1a@gJ)))
                                                         (case-lambda
                                                           ((g$init*$31901$1a@gJ
                                                              g$r$31902$1a@gJ
                                                              g$mr$31903$1a@gJ
                                                              g$lex*$31904$1a@gJ
                                                              g$rhs*$31905$1a@gJ
                                                              g$internal-exp*$31906$1a@gJ)
                                                            ((case-lambda
                                                               ((g$internal-exp*$31907$1a@gJ
                                                                  g$rhs*$31908$1a@gJ
                                                                  g$lex*$31909$1a@gJ
                                                                  g$mr$31910$1a@gJ
                                                                  g$r$31911$1a@gJ
                                                                  g$init*$31912$1a@gJ)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$28958$1a@gJ
                                                                       (g$append$20200$1a@gJ
                                                                         g$main-exp*$31883$1a@gJ
                                                                         g$internal-exp*$31907$1a@gJ))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$31915$1a@gJ
                                                                       g$exp-id*$31916$1a@gJ)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$31917$1a@gJ
                                                                           g$exp-name*$31918$1a@gJ)
                                                                         (begin
                                                                           (g$seal-rib!$28375$1a@gJ
                                                                             g$rib$31880$1a@gJ)
                                                                           ((case-lambda
                                                                              ((g$init*$31919$1a@gJ)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$31920$1a@gJ)
                                                                                   (begin
                                                                                     (g$unseal-rib!$28376$1a@gJ
                                                                                       g$rib$31880$1a@gJ)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$31921$1a@gJ
                                                                                           g$export-subst$31922$1a@gJ)
                                                                                         (letrec* ((g$errstr$31923$1a@gJ
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$29017$1a@gJ
                                                                                                  g$lex*$31909$1a@gJ
                                                                                                  g$loc*$31921$1a@gJ
                                                                                                  g$r$31911$1a@gJ)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$31927$1a@gJ
                                                                                                  g$global*$31928$1a@gJ
                                                                                                  g$macro*$31929$1a@gJ)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$31930$1a@gJ
                                                                                                      g$global*$31931$1a@gJ
                                                                                                      g$export-env$31932$1a@gJ)
                                                                                                    (begin
                                                                                                      (g$for-each$20196$1a@gJ
                                                                                                        (case-lambda
                                                                                                          ((g$s$31933$1a@gJ)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$31934$1a@gJ
                                                                                                                 g$label$31935$1a@gJ)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$31936$1a@gJ)
                                                                                                                   (if g$p$31936$1a@gJ
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$31937$1a@gJ)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$31938$1a@gJ)
                                                                                                                             (if (eq? g$type$31938$1a@gJ
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$29029$1a@gJ
                                                                                                                                 'export
                                                                                                                                 g$errstr$31923$1a@gJ
                                                                                                                                 g$name$31934$1a@gJ)
                                                                                                                               (void))))
                                                                                                                          (car g$b$31937$1a@gJ))))
                                                                                                                      (cdr g$p$31936$1a@gJ))
                                                                                                                     (void))))
                                                                                                                (g$assq$20183$1a@gJ
                                                                                                                  g$label$31935$1a@gJ
                                                                                                                  g$export-env$31932$1a@gJ))))
                                                                                                            (car g$s$31933$1a@gJ)
                                                                                                            (cdr g$s$31933$1a@gJ))))
                                                                                                        g$export-subst$31922$1a@gJ)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$31939$1a@gJ
                                                                                                            g$invoke-definitions$31940$1a@gJ)
                                                                                                          (values
                                                                                                            (g$itc$31864$1a@gJ)
                                                                                                            (g$rtc$31884$1a@gJ)
                                                                                                            (g$vtc$31885$1a@gJ)
                                                                                                            (g$build-sequence$28336$1a@gJ
                                                                                                              '#f
                                                                                                              (g$append$20200$1a@gJ
                                                                                                                g$invoke-definitions$31940$1a@gJ
                                                                                                                (list
                                                                                                                  g$invoke-body$31939$1a@gJ)))
                                                                                                            g$macro*$31930$1a@gJ
                                                                                                            g$export-subst$31922$1a@gJ
                                                                                                            g$export-env$31932$1a@gJ)))
                                                                                                       (g$build-library-letrec*$28340$1a@gJ
                                                                                                         '#f
                                                                                                         g$name$31859$1a@gJ
                                                                                                         g$lex*$31909$1a@gJ
                                                                                                         g$loc*$31921$1a@gJ
                                                                                                         g$rhs*$31920$1a@gJ
                                                                                                         (if (null?
                                                                                                               g$init*$31919$1a@gJ)
                                                                                                           (g$build-void$28337$1a@gJ)
                                                                                                           (g$build-sequence$28336$1a@gJ
                                                                                                             '#f
                                                                                                             g$init*$31919$1a@gJ)))
                                                                                                       (g$map$20195$1a@gJ
                                                                                                         g$build-global-define$28332$1a@gJ
                                                                                                         (g$map$20195$1a@gJ
                                                                                                           cdr
                                                                                                           g$global*$31931$1a@gJ))))))
                                                                                                 g$macro*$31929$1a@gJ
                                                                                                 g$global*$31928$1a@gJ
                                                                                                 g$export-env$31927$1a@gJ)))))))
                                                                                      (g$map$20195$1a@gJ
                                                                                        g$gen-global$28347$1a@gJ
                                                                                        g$lex*$31909$1a@gJ)
                                                                                      (g$make-export-subst$29016$1a@gJ
                                                                                        g$exp-name*$31918$1a@gJ
                                                                                        g$exp-id*$31917$1a@gJ)))))
                                                                                (g$chi-rhs*$28935$1a@gJ
                                                                                  g$rhs*$31908$1a@gJ
                                                                                  g$r$31911$1a@gJ
                                                                                  g$mr$31910$1a@gJ))))
                                                                            (g$chi-expr*$28925$1a@gJ
                                                                              g$init*$31912$1a@gJ
                                                                              g$r$31911$1a@gJ
                                                                              g$mr$31910$1a@gJ)))))
                                                                      g$exp-id*$31916$1a@gJ
                                                                      g$exp-name*$31915$1a@gJ))))))
                                                             g$internal-exp*$31906$1a@gJ
                                                             g$rhs*$31905$1a@gJ
                                                             g$lex*$31904$1a@gJ
                                                             g$mr$31903$1a@gJ
                                                             g$r$31902$1a@gJ
                                                             g$init*$31901$1a@gJ))))))
                                                    g$swap$31894$1a@gJ)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$31941$1a@gJ)
                                                        (begin
                                                          (g$inv-collector$31890$1a@gJ
                                                            g$inv-collector$31892$1a@gJ)
                                                          (set! g$inv-collector$31892$1a@gJ
                                                            g$t$31941$1a@gJ))))
                                                     (g$inv-collector$31890$1a@gJ))
                                                    ((case-lambda
                                                       ((g$t$31942$1a@gJ)
                                                        (begin
                                                          (g$vis-collector$31891$1a@gJ
                                                            g$vis-collector$31893$1a@gJ)
                                                          (set! g$vis-collector$31893$1a@gJ
                                                            g$t$31942$1a@gJ))))
                                                     (g$vis-collector$31891$1a@gJ))))))))
                                           g$inv-collector$28964$1a@gJ
                                           g$vis-collector$28965$1a@gJ
                                           g$rtc$31884$1a@gJ
                                           g$vtc$31885$1a@gJ)))
                                       (g$map$20195$1a@gJ
                                         g$wrap$31881$1a@gJ
                                         g$b*$31862$1a@gJ)
                                       (g$map$20195$1a@gJ
                                         g$wrap$31881$1a@gJ
                                         g$main-exp*$31860$1a@gJ)
                                       (g$make-collector$28963$1a@gJ)
                                       (g$make-collector$28963$1a@gJ)))))
                                 (g$make-top-rib$28962$1a@gJ
                                   g$subst-names$31879$1a@gJ
                                   g$subst-labels$31878$1a@gJ))))
                             g$subst-labels$31877$1a@gJ
                             g$subst-names$31876$1a@gJ))))))
                    g$swap$31873$1a@gJ)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$31944$1a@gJ)
                        (begin
                          (g$imp-collector$31869$1a@gJ
                            g$imp-collector$31871$1a@gJ)
                          (set! g$imp-collector$31871$1a@gJ
                            g$t$31944$1a@gJ))))
                     (g$imp-collector$31869$1a@gJ))
                    ((case-lambda
                       ((g$t$31945$1a@gJ)
                        (begin
                          (g$top-level-context$31870$1a@gJ
                            g$top-level-context$31872$1a@gJ)
                          (set! g$top-level-context$31872$1a@gJ
                            g$t$31945$1a@gJ))))
                     (g$top-level-context$31870$1a@gJ))))))))
           g$imp-collector$28966$1a@gJ
           g$top-level-context$29037$1a@gJ
           g$itc$31864$1a@gJ
           '#f)))))
   (g$core-library-expander$28970$1a@gJ
     g$core-library-expander$32567$1a@gJ
     (case-lambda
       ((g$e$31946$1a@gJ g$verify-name$31947$1a@gJ)
        (call-with-values
          (case-lambda
            (() (g$parse-library$28960$1a@gJ g$e$31946$1a@gJ)))
          (case-lambda
            ((g$name*$31952$1a@gJ
               g$exp*$31953$1a@gJ
               g$imp*$31954$1a@gJ
               g$b*$31955$1a@gJ)
             ((case-lambda
                ((g$b*$31956$1a@gJ
                   g$imp*$31957$1a@gJ
                   g$exp*$31958$1a@gJ
                   g$name*$31959$1a@gJ)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$28959$1a@gJ
                        g$name*$31959$1a@gJ)))
                   (case-lambda
                     ((g$name$31962$1a@gJ g$ver$31963$1a@gJ)
                      ((case-lambda
                         ((g$ver$31964$1a@gJ g$name$31965$1a@gJ)
                          (begin
                            (g$verify-name$31947$1a@gJ
                              g$name$31965$1a@gJ)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$28969$1a@gJ
                                   g$name$31965$1a@gJ
                                   g$exp*$31958$1a@gJ
                                   g$imp*$31957$1a@gJ
                                   g$b*$31956$1a@gJ
                                   '#f)))
                              (case-lambda
                                ((g$imp*$31973$1a@gJ
                                   g$invoke-req*$31974$1a@gJ
                                   g$visit-req*$31975$1a@gJ
                                   g$invoke-code$31976$1a@gJ
                                   g$visit-code$31977$1a@gJ
                                   g$export-subst$31978$1a@gJ
                                   g$export-env$31979$1a@gJ)
                                 ((case-lambda
                                    ((g$export-env$31980$1a@gJ
                                       g$export-subst$31981$1a@gJ
                                       g$visit-code$31982$1a@gJ
                                       g$invoke-code$31983$1a@gJ
                                       g$visit-req*$31984$1a@gJ
                                       g$invoke-req*$31985$1a@gJ
                                       g$imp*$31986$1a@gJ)
                                     (values
                                       g$name$31965$1a@gJ
                                       g$ver$31964$1a@gJ
                                       g$imp*$31986$1a@gJ
                                       g$invoke-req*$31985$1a@gJ
                                       g$visit-req*$31984$1a@gJ
                                       g$invoke-code$31983$1a@gJ
                                       g$visit-code$31982$1a@gJ
                                       g$export-subst$31981$1a@gJ
                                       g$export-env$31980$1a@gJ)))
                                  g$export-env$31979$1a@gJ
                                  g$export-subst$31978$1a@gJ
                                  g$visit-code$31977$1a@gJ
                                  g$invoke-code$31976$1a@gJ
                                  g$visit-req*$31975$1a@gJ
                                  g$invoke-req*$31974$1a@gJ
                                  g$imp*$31973$1a@gJ)))))))
                       g$ver$31963$1a@gJ
                       g$name$31962$1a@gJ))))))
              g$b*$31955$1a@gJ
              g$imp*$31954$1a@gJ
              g$exp*$31953$1a@gJ
              g$name*$31952$1a@gJ)))))))
   (g$parse-top-level-program$28971$1a@gJ
     g$parse-top-level-program$32568$1a@gJ
     (case-lambda
       ((g$e*$31987$1a@gJ)
        ((case-lambda
           ((g$t$31988$1a@gJ)
            ((case-lambda
               ((g$ls/false$31989$1a@gJ)
                (if (if g$ls/false$31989$1a@gJ
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$31990$1a@gJ
                               g$imp*$31991$1a@gJ
                               g$b*$31992$1a@gJ)
                             (eq? (g$syntax->datum$29032$1a@gJ
                                    g$import$31990$1a@gJ)
                                  'import)))
                          g$ls/false$31989$1a@gJ))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$31993$1a@gJ
                         g$imp*$31994$1a@gJ
                         g$b*$31995$1a@gJ)
                       (values g$imp*$31994$1a@gJ g$b*$31995$1a@gJ)))
                    g$ls/false$31989$1a@gJ)
                  ((case-lambda
                     ((g$t$31996$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$31997$1a@gJ)
                          (if (if g$ls/false$31997$1a@gJ
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$31998$1a@gJ
                                         g$x$31999$1a@gJ
                                         g$y$32000$1a@gJ)
                                       (eq? (g$syntax->datum$29032$1a@gJ
                                              g$import$31998$1a@gJ)
                                            'import)))
                                    g$ls/false$31997$1a@gJ))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$32001$1a@gJ
                                   g$x$32002$1a@gJ
                                   g$y$32003$1a@gJ)
                                 (g$syntax-violation$29029$1a@gJ
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$28408$1a@gJ
                                     g$e*$31987$1a@gJ))))
                              g$ls/false$31997$1a@gJ)
                            ((case-lambda
                               ((g$t$32004$1a@gJ)
                                ((case-lambda
                                   ((g$ls/false$32005$1a@gJ)
                                    (if g$ls/false$32005$1a@gJ
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$32005$1a@gJ)
                                      (g$syntax-violation$29029$1a@gJ
                                        '#f
                                        '"invalid syntax"
                                        g$t$32004$1a@gJ))))
                                 (g$syntax-dispatch$28909$1a@gJ
                                   g$t$32004$1a@gJ
                                   '_))))
                             g$t$31996$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$31996$1a@gJ
                         '((any . any) . any)))))
                   g$t$31988$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$31988$1a@gJ
               '((any . each-any) . each-any)))))
         g$e*$31987$1a@gJ))))
   (g$top-level-expander$28972$1a@gJ
     g$top-level-expander$32569$1a@gJ
     (case-lambda
       ((g$e*$32006$1a@gJ)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$28971$1a@gJ g$e*$32006$1a@gJ)))
          (case-lambda
            ((g$imp*$32009$1a@gJ g$b*$32010$1a@gJ)
             ((case-lambda
                ((g$b*$32011$1a@gJ g$imp*$32012$1a@gJ)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$28969$1a@gJ
                        '()
                        '()
                        g$imp*$32012$1a@gJ
                        g$b*$32011$1a@gJ
                        '#t)))
                   (case-lambda
                     ((g$imp*$32020$1a@gJ
                        g$invoke-req*$32021$1a@gJ
                        g$visit-req*$32022$1a@gJ
                        g$invoke-code$32023$1a@gJ
                        g$visit-code$32024$1a@gJ
                        g$export-subst$32025$1a@gJ
                        g$export-env$32026$1a@gJ)
                      ((case-lambda
                         ((g$export-env$32027$1a@gJ
                            g$export-subst$32028$1a@gJ
                            g$visit-code$32029$1a@gJ
                            g$invoke-code$32030$1a@gJ
                            g$visit-req*$32031$1a@gJ
                            g$invoke-req*$32032$1a@gJ
                            g$imp*$32033$1a@gJ)
                          (values
                            g$invoke-req*$32032$1a@gJ
                            g$invoke-code$32030$1a@gJ)))
                       g$export-env$32026$1a@gJ
                       g$export-subst$32025$1a@gJ
                       g$visit-code$32024$1a@gJ
                       g$invoke-code$32023$1a@gJ
                       g$visit-req*$32022$1a@gJ
                       g$invoke-req*$32021$1a@gJ
                       g$imp*$32020$1a@gJ))))))
              g$b*$32010$1a@gJ
              g$imp*$32009$1a@gJ)))))))
   (g$10499$28973$1a@gJ
     g$10499$32570$1a@gJ
     (make-record-type-descriptor
       'env
       '#f
       'g$10502$1a@gJ
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$10501$28974$1a@gJ g$10501$32571$1a@gJ '#f)
   (g$10500$28975$1a@gJ
     g$10500$32572$1a@gJ
     (make-record-constructor-descriptor
       g$10499$28973$1a@gJ
       '#f
       g$10501$28974$1a@gJ))
   (g$env?$28978$1a@gJ
     g$env?$32573$1a@gJ
     (record-predicate g$10499$28973$1a@gJ))
   (g$make-env$28979$1a@gJ
     g$make-env$32574$1a@gJ
     (record-constructor g$10500$28975$1a@gJ))
   (g$env-names$28980$1a@gJ
     g$env-names$32575$1a@gJ
     (record-accessor g$10499$28973$1a@gJ '0))
   (g$env-labels$28981$1a@gJ
     g$env-labels$32576$1a@gJ
     (record-accessor g$10499$28973$1a@gJ '1))
   (g$env-itc$28982$1a@gJ
     g$env-itc$32577$1a@gJ
     (record-accessor g$10499$28973$1a@gJ '2))
   (g$set-env-names!$28983$1a@gJ
     g$set-env-names!$32578$1a@gJ
     (record-mutator g$10499$28973$1a@gJ '0))
   (g$set-env-labels!$28984$1a@gJ
     g$set-env-labels!$32579$1a@gJ
     (record-mutator g$10499$28973$1a@gJ '1))
   (g$set-env-itc!$28985$1a@gJ
     g$set-env-itc!$32580$1a@gJ
     (record-mutator g$10499$28973$1a@gJ '2))
   (g$rp$28986$1a@gJ
     g$rp$32581$1a@gJ
     (make-record-printer
       'env
       (case-lambda
         ((g$x$32034$1a@gJ g$p$32035$1a@gJ g$wr$32036$1a@gJ)
          (display '"#<environment>" g$p$32035$1a@gJ)))))
   (g$10516$28987$1a@gJ
     g$10516$32582$1a@gJ
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$10519$1a@gJ
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$10518$28988$1a@gJ g$10518$32583$1a@gJ '#f)
   (g$10517$28989$1a@gJ
     g$10517$32584$1a@gJ
     (make-record-constructor-descriptor
       g$10516$28987$1a@gJ
       '#f
       g$10518$28988$1a@gJ))
   (g$interaction-env?$28992$1a@gJ
     g$interaction-env?$32585$1a@gJ
     (record-predicate g$10516$28987$1a@gJ))
   (g$make-interaction-env$28993$1a@gJ
     g$make-interaction-env$32586$1a@gJ
     (record-constructor g$10517$28989$1a@gJ))
   (g$interaction-env-rib$28994$1a@gJ
     g$interaction-env-rib$32587$1a@gJ
     (record-accessor g$10516$28987$1a@gJ '0))
   (g$interaction-env-r$28995$1a@gJ
     g$interaction-env-r$32588$1a@gJ
     (record-accessor g$10516$28987$1a@gJ '1))
   (g$interaction-env-locs$28996$1a@gJ
     g$interaction-env-locs$32589$1a@gJ
     (record-accessor g$10516$28987$1a@gJ '2))
   (g$set-interaction-env-rib!$28997$1a@gJ
     g$set-interaction-env-rib!$32590$1a@gJ
     (record-mutator g$10516$28987$1a@gJ '0))
   (g$set-interaction-env-r!$28998$1a@gJ
     g$set-interaction-env-r!$32591$1a@gJ
     (record-mutator g$10516$28987$1a@gJ '1))
   (g$set-interaction-env-locs!$28999$1a@gJ
     g$set-interaction-env-locs!$32592$1a@gJ
     (record-mutator g$10516$28987$1a@gJ '2))
   (g$rp$29000$1a@gJ
     g$rp$32593$1a@gJ
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$32037$1a@gJ g$p$32038$1a@gJ g$wr$32039$1a@gJ)
          (display '"#<environment>" g$p$32038$1a@gJ)))))
   (g$interaction-environment-symbols$29001$1a@gJ
     g$interaction-environment-symbols$32594$1a@gJ
     (case-lambda
       (()
        (g$environment-symbols$29005$1a@gJ
          (g$interaction-environment$29036$1a@gJ)))))
   (g$environment-bindings$29002$1a@gJ
     g$environment-bindings$32595$1a@gJ
     (case-lambda
       ((g$e$32040$1a@gJ)
        (g$vector->list$20654$1a@gJ
          (g$vector-map$20707$1a@gJ
            (case-lambda
              ((g$name$32041$1a@gJ g$label$32042$1a@gJ)
               (g$parse-binding$29003$1a@gJ
                 (cons
                   g$name$32041$1a@gJ
                   (g$imported-label->binding$28116$1a@gJ
                     g$label$32042$1a@gJ)))))
            (g$env-names$28980$1a@gJ g$e$32040$1a@gJ)
            (g$env-labels$28981$1a@gJ g$e$32040$1a@gJ))))))
   (g$parse-binding$29003$1a@gJ
     g$parse-binding$32596$1a@gJ
     (case-lambda
       ((g$b$32043$1a@gJ)
        (cons
          (car g$b$32043$1a@gJ)
          ((case-lambda
             ((g$t$32044$1a@gJ)
              (if (g$memv$20188$1a@gJ
                    g$t$32044$1a@gJ
                    '(core-prim global))
                'procedure
                (if (g$memv$20188$1a@gJ
                      g$t$32044$1a@gJ
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$32044$1a@gJ '$core-rtd)
                    'record
                    (begin
                      '#f
                      (if (eq? (car g$b$32043$1a@gJ)
                               (g$cadr$20658$1a@gJ g$b$32043$1a@gJ))
                        'syntax
                        'unknown)))))))
           (g$cadr$20658$1a@gJ g$b$32043$1a@gJ))))))
   (g$environment?$29004$1a@gJ
     g$environment?$32597$1a@gJ
     (case-lambda
       ((g$x$32045$1a@gJ)
        ((case-lambda
           ((g$t$32046$1a@gJ)
            (if g$t$32046$1a@gJ
              g$t$32046$1a@gJ
              (begin
                '#f
                (g$interaction-env?$28992$1a@gJ g$x$32045$1a@gJ)))))
         (g$env?$28978$1a@gJ g$x$32045$1a@gJ)))))
   (g$environment-symbols$29005$1a@gJ
     g$environment-symbols$32598$1a@gJ
     (case-lambda
       ((g$x$32047$1a@gJ)
        (if (g$env?$28978$1a@gJ g$x$32047$1a@gJ)
          (g$vector->list$20654$1a@gJ
            (g$env-names$28980$1a@gJ g$x$32047$1a@gJ))
          (if (g$interaction-env?$28992$1a@gJ g$x$32047$1a@gJ)
            (g$map$20195$1a@gJ
              values
              (g$rib-sym*$28359$1a@gJ
                (g$interaction-env-rib$28994$1a@gJ g$x$32047$1a@gJ)))
            (begin
              '#f
              (assertion-violation
                'environment-symbols
                '"not an environment"
                g$x$32047$1a@gJ)))))))
   (g$environment$29006$1a@gJ
     g$environment$32599$1a@gJ
     (case-lambda
       (g$imp*$32048$1a@gJ
        ((case-lambda
           ((g$itc$32049$1a@gJ)
            ((case-lambda
               ((g$imp-collector$32052$1a@gJ
                  g$imp-collector$32053$1a@gJ)
                ((case-lambda
                   ((g$swap$32054$1a@gJ)
                    (dynamic-wind
                      g$swap$32054$1a@gJ
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$28961$1a@gJ
                                g$imp*$32048$1a@gJ)))
                           (case-lambda
                             ((g$subst-names$32057$1a@gJ
                                g$subst-labels$32058$1a@gJ)
                              ((case-lambda
                                 ((g$subst-labels$32059$1a@gJ
                                    g$subst-names$32060$1a@gJ)
                                  (g$make-env$28979$1a@gJ
                                    g$subst-names$32060$1a@gJ
                                    g$subst-labels$32059$1a@gJ
                                    g$itc$32049$1a@gJ)))
                               g$subst-labels$32058$1a@gJ
                               g$subst-names$32057$1a@gJ))))))
                      g$swap$32054$1a@gJ)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$32061$1a@gJ)
                        (begin
                          (g$imp-collector$32052$1a@gJ
                            g$imp-collector$32053$1a@gJ)
                          (set! g$imp-collector$32053$1a@gJ
                            g$t$32061$1a@gJ))))
                     (g$imp-collector$32052$1a@gJ)))))))
             g$imp-collector$28966$1a@gJ
             g$itc$32049$1a@gJ)))
         (g$make-collector$28963$1a@gJ)))))
   (g$null-environment$29007$1a@gJ
     g$null-environment$32600$1a@gJ
     (case-lambda
       ((g$n$32062$1a@gJ)
        (begin
          (if (not (eqv? g$n$32062$1a@gJ '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$32062$1a@gJ)
            (void))
          (g$environment$29006$1a@gJ '(psyntax null-environment-5))))))
   (g$scheme-report-environment$29008$1a@gJ
     g$scheme-report-environment$32601$1a@gJ
     (case-lambda
       ((g$n$32063$1a@gJ)
        (begin
          (if (not (eqv? g$n$32063$1a@gJ '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$32063$1a@gJ)
            (void))
          (g$environment$29006$1a@gJ
            '(psyntax scheme-report-environment-5))))))
   (g$expand$29009$1a@gJ
     g$expand$32602$1a@gJ
     (case-lambda
       ((g$x$32064$1a@gJ g$env$32065$1a@gJ)
        (if (g$env?$28978$1a@gJ g$env$32065$1a@gJ)
          ((case-lambda
             ((g$rib$32066$1a@gJ)
              ((case-lambda
                 ((g$x$32067$1a@gJ
                    g$itc$32068$1a@gJ
                    g$rtc$32069$1a@gJ
                    g$vtc$32070$1a@gJ)
                  ((case-lambda
                     ((g$x$32071$1a@gJ)
                      (begin
                        (g$seal-rib!$28375$1a@gJ g$rib$32066$1a@gJ)
                        (values g$x$32071$1a@gJ (g$rtc$32069$1a@gJ)))))
                   ((case-lambda
                      ((g$top-level-context$32080$1a@gJ
                         g$inv-collector$32081$1a@gJ
                         g$vis-collector$32082$1a@gJ
                         g$imp-collector$32083$1a@gJ
                         g$top-level-context$32084$1a@gJ
                         g$inv-collector$32085$1a@gJ
                         g$vis-collector$32086$1a@gJ
                         g$imp-collector$32087$1a@gJ)
                       ((case-lambda
                          ((g$swap$32088$1a@gJ)
                           (dynamic-wind
                             g$swap$32088$1a@gJ
                             (case-lambda
                               (()
                                (g$chi-expr$28927$1a@gJ
                                  g$x$32067$1a@gJ
                                  '()
                                  '())))
                             g$swap$32088$1a@gJ)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$32089$1a@gJ)
                                 (begin
                                   (g$top-level-context$32080$1a@gJ
                                     g$top-level-context$32084$1a@gJ)
                                   (set! g$top-level-context$32084$1a@gJ
                                     g$t$32089$1a@gJ))))
                              (g$top-level-context$32080$1a@gJ))
                             ((case-lambda
                                ((g$t$32090$1a@gJ)
                                 (begin
                                   (g$inv-collector$32081$1a@gJ
                                     g$inv-collector$32085$1a@gJ)
                                   (set! g$inv-collector$32085$1a@gJ
                                     g$t$32090$1a@gJ))))
                              (g$inv-collector$32081$1a@gJ))
                             ((case-lambda
                                ((g$t$32091$1a@gJ)
                                 (begin
                                   (g$vis-collector$32082$1a@gJ
                                     g$vis-collector$32086$1a@gJ)
                                   (set! g$vis-collector$32086$1a@gJ
                                     g$t$32091$1a@gJ))))
                              (g$vis-collector$32082$1a@gJ))
                             ((case-lambda
                                ((g$t$32092$1a@gJ)
                                 (begin
                                   (g$imp-collector$32083$1a@gJ
                                     g$imp-collector$32087$1a@gJ)
                                   (set! g$imp-collector$32087$1a@gJ
                                     g$t$32092$1a@gJ))))
                              (g$imp-collector$32083$1a@gJ))))))))
                    g$top-level-context$29037$1a@gJ
                    g$inv-collector$28964$1a@gJ
                    g$vis-collector$28965$1a@gJ
                    g$imp-collector$28966$1a@gJ
                    '#f
                    g$rtc$32069$1a@gJ
                    g$vtc$32070$1a@gJ
                    g$itc$32068$1a@gJ))))
               (g$make-stx$28384$1a@gJ
                 g$x$32064$1a@gJ
                 g$top-mark*$28344$1a@gJ
                 (list g$rib$32066$1a@gJ)
                 '())
               (g$env-itc$28982$1a@gJ g$env$32065$1a@gJ)
               (g$make-collector$28963$1a@gJ)
               (g$make-collector$28963$1a@gJ))))
           (g$make-top-rib$28962$1a@gJ
             (g$env-names$28980$1a@gJ g$env$32065$1a@gJ)
             (g$env-labels$28981$1a@gJ g$env$32065$1a@gJ)))
          (if (g$interaction-env?$28992$1a@gJ g$env$32065$1a@gJ)
            ((case-lambda
               ((g$rib$32093$1a@gJ g$r$32094$1a@gJ g$rtc$32095$1a@gJ)
                ((case-lambda
                   ((g$x$32096$1a@gJ)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$32107$1a@gJ
                               g$inv-collector$32108$1a@gJ
                               g$vis-collector$32109$1a@gJ
                               g$imp-collector$32110$1a@gJ
                               g$top-level-context$32111$1a@gJ
                               g$inv-collector$32112$1a@gJ
                               g$vis-collector$32113$1a@gJ
                               g$imp-collector$32114$1a@gJ)
                             ((case-lambda
                                ((g$swap$32115$1a@gJ)
                                 (dynamic-wind
                                   g$swap$32115$1a@gJ
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$28968$1a@gJ
                                        g$x$32096$1a@gJ
                                        g$rib$32093$1a@gJ
                                        g$r$32094$1a@gJ)))
                                   g$swap$32115$1a@gJ)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$32116$1a@gJ)
                                       (begin
                                         (g$top-level-context$32107$1a@gJ
                                           g$top-level-context$32111$1a@gJ)
                                         (set! g$top-level-context$32111$1a@gJ
                                           g$t$32116$1a@gJ))))
                                    (g$top-level-context$32107$1a@gJ))
                                   ((case-lambda
                                      ((g$t$32117$1a@gJ)
                                       (begin
                                         (g$inv-collector$32108$1a@gJ
                                           g$inv-collector$32112$1a@gJ)
                                         (set! g$inv-collector$32112$1a@gJ
                                           g$t$32117$1a@gJ))))
                                    (g$inv-collector$32108$1a@gJ))
                                   ((case-lambda
                                      ((g$t$32118$1a@gJ)
                                       (begin
                                         (g$vis-collector$32109$1a@gJ
                                           g$vis-collector$32113$1a@gJ)
                                         (set! g$vis-collector$32113$1a@gJ
                                           g$t$32118$1a@gJ))))
                                    (g$vis-collector$32109$1a@gJ))
                                   ((case-lambda
                                      ((g$t$32119$1a@gJ)
                                       (begin
                                         (g$imp-collector$32110$1a@gJ
                                           g$imp-collector$32114$1a@gJ)
                                         (set! g$imp-collector$32114$1a@gJ
                                           g$t$32119$1a@gJ))))
                                    (g$imp-collector$32110$1a@gJ))))))))
                          g$top-level-context$29037$1a@gJ
                          g$inv-collector$28964$1a@gJ
                          g$vis-collector$28965$1a@gJ
                          g$imp-collector$28966$1a@gJ
                          g$env$32065$1a@gJ
                          g$rtc$32095$1a@gJ
                          (g$make-collector$28963$1a@gJ)
                          (g$make-collector$28963$1a@gJ))))
                      (case-lambda
                        ((g$e$32120$1a@gJ g$r^$32121$1a@gJ)
                         ((case-lambda
                            ((g$r^$32122$1a@gJ g$e$32123$1a@gJ)
                             (begin
                               (g$set-interaction-env-r!$28998$1a@gJ
                                 g$env$32065$1a@gJ
                                 g$r^$32122$1a@gJ)
                               (values
                                 g$e$32123$1a@gJ
                                 (g$rtc$32095$1a@gJ)))))
                          g$r^$32121$1a@gJ
                          g$e$32120$1a@gJ))))))
                 (g$make-stx$28384$1a@gJ
                   g$x$32064$1a@gJ
                   g$top-mark*$28344$1a@gJ
                   (list g$rib$32093$1a@gJ)
                   '()))))
             (g$interaction-env-rib$28994$1a@gJ g$env$32065$1a@gJ)
             (g$interaction-env-r$28995$1a@gJ g$env$32065$1a@gJ)
             (g$make-collector$28963$1a@gJ))
            (begin
              '#f
              (assertion-violation
                'expand
                '"not an environment"
                g$env$32065$1a@gJ)))))))
   (g$eval$29010$1a@gJ
     g$eval$32603$1a@gJ
     (case-lambda
       ((g$x$32124$1a@gJ g$env$32125$1a@gJ)
        (begin
          (if (not (g$environment?$29004$1a@gJ g$env$32125$1a@gJ))
            (error 'eval '"not an environment" g$env$32125$1a@gJ)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$29009$1a@gJ
                 g$x$32124$1a@gJ
                 g$env$32125$1a@gJ)))
            (case-lambda
              ((g$x$32128$1a@gJ g$invoke-req*$32129$1a@gJ)
               ((case-lambda
                  ((g$invoke-req*$32130$1a@gJ g$x$32131$1a@gJ)
                   (begin
                     (g$for-each$20196$1a@gJ
                       g$invoke-library$28117$1a@gJ
                       g$invoke-req*$32130$1a@gJ)
                     (eval-core
                       (g$expanded->core$27849$1a@gJ
                         g$x$32131$1a@gJ)))))
                g$invoke-req*$32129$1a@gJ
                g$x$32128$1a@gJ))))))))
   (g$expand->core$29011$1a@gJ
     g$expand->core$32604$1a@gJ
     (case-lambda
       ((g$x$32132$1a@gJ g$env$32133$1a@gJ)
        (begin
          (if (not (g$environment?$29004$1a@gJ g$env$32133$1a@gJ))
            (error 'eval '"not an environment" g$env$32133$1a@gJ)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$29009$1a@gJ
                 g$x$32132$1a@gJ
                 g$env$32133$1a@gJ)))
            (case-lambda
              ((g$x$32136$1a@gJ g$invoke-req*$32137$1a@gJ)
               ((case-lambda
                  ((g$invoke-req*$32138$1a@gJ g$x$32139$1a@gJ)
                   (begin
                     (g$for-each$20196$1a@gJ
                       g$invoke-library$28117$1a@gJ
                       g$invoke-req*$32138$1a@gJ)
                     (g$expanded->core$27849$1a@gJ g$x$32139$1a@gJ))))
                g$invoke-req*$32137$1a@gJ
                g$x$32136$1a@gJ))))))))
   (g$library-expander$29012$1a@gJ
     g$library-expander$32605$1a@gJ
     (case-lambda
       ((g$x$32140$1a@gJ
          g$filename$32141$1a@gJ
          g$verify-name$32142$1a@gJ)
        (letrec* ((g$build-visit-code$32143$1a@gJ
                    (case-lambda
                      ((g$macro*$32186$1a@gJ)
                       (if (null? g$macro*$32186$1a@gJ)
                         (g$build-void$28337$1a@gJ)
                         (g$build-sequence$28336$1a@gJ
                           '#f
                           (g$map$20195$1a@gJ
                             (case-lambda
                               ((g$x$32187$1a@gJ)
                                ((case-lambda
                                   ((g$loc$32188$1a@gJ
                                      g$src$32189$1a@gJ)
                                    (list
                                      'set!
                                      g$loc$32188$1a@gJ
                                      g$src$32189$1a@gJ)))
                                 (car g$x$32187$1a@gJ)
                                 (g$cddr$20660$1a@gJ g$x$32187$1a@gJ))))
                             g$macro*$32186$1a@gJ))))))
                  (g$visit!$32144$1a@gJ
                    (case-lambda
                      ((g$macro*$32182$1a@gJ)
                       (g$for-each$20196$1a@gJ
                         (case-lambda
                           ((g$x$32183$1a@gJ)
                            ((case-lambda
                               ((g$loc$32184$1a@gJ g$proc$32185$1a@gJ)
                                (set-symbol-value!
                                  g$loc$32184$1a@gJ
                                  g$proc$32185$1a@gJ)))
                             (car g$x$32183$1a@gJ)
                             (g$cadr$20658$1a@gJ g$x$32183$1a@gJ))))
                         g$macro*$32182$1a@gJ)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$28970$1a@gJ
                 g$x$32140$1a@gJ
                 g$verify-name$32142$1a@gJ)))
            (case-lambda
              ((g$name$32154$1a@gJ
                 g$ver$32155$1a@gJ
                 g$imp*$32156$1a@gJ
                 g$inv*$32157$1a@gJ
                 g$vis*$32158$1a@gJ
                 g$invoke-code$32159$1a@gJ
                 g$macro*$32160$1a@gJ
                 g$export-subst$32161$1a@gJ
                 g$export-env$32162$1a@gJ)
               ((case-lambda
                  ((g$export-env$32163$1a@gJ
                     g$export-subst$32164$1a@gJ
                     g$macro*$32165$1a@gJ
                     g$invoke-code$32166$1a@gJ
                     g$vis*$32167$1a@gJ
                     g$inv*$32168$1a@gJ
                     g$imp*$32169$1a@gJ
                     g$ver$32170$1a@gJ
                     g$name$32171$1a@gJ)
                   ((case-lambda
                      ((g$id$32172$1a@gJ
                         g$name$32173$1a@gJ
                         g$ver$32174$1a@gJ
                         g$imp*$32175$1a@gJ
                         g$vis*$32176$1a@gJ
                         g$inv*$32177$1a@gJ
                         g$visit-proc$32178$1a@gJ
                         g$invoke-proc$32179$1a@gJ
                         g$visit-code$32180$1a@gJ
                         g$invoke-code$32181$1a@gJ)
                       (begin
                         (g$install-library$28115$1a@gJ
                           g$id$32172$1a@gJ
                           g$name$32173$1a@gJ
                           g$ver$32174$1a@gJ
                           g$imp*$32175$1a@gJ
                           g$vis*$32176$1a@gJ
                           g$inv*$32177$1a@gJ
                           g$export-subst$32164$1a@gJ
                           g$export-env$32163$1a@gJ
                           g$visit-proc$32178$1a@gJ
                           g$invoke-proc$32179$1a@gJ
                           g$visit-code$32180$1a@gJ
                           g$invoke-code$32181$1a@gJ
                           '#t
                           g$filename$32141$1a@gJ)
                         (values
                           g$id$32172$1a@gJ
                           g$name$32173$1a@gJ
                           g$ver$32174$1a@gJ
                           g$imp*$32175$1a@gJ
                           g$vis*$32176$1a@gJ
                           g$inv*$32177$1a@gJ
                           g$invoke-code$32181$1a@gJ
                           g$visit-code$32180$1a@gJ
                           g$export-subst$32164$1a@gJ
                           g$export-env$32163$1a@gJ))))
                    (gensym)
                    g$name$32171$1a@gJ
                    g$ver$32170$1a@gJ
                    (g$map$20195$1a@gJ
                      g$library-spec$28121$1a@gJ
                      g$imp*$32169$1a@gJ)
                    (g$map$20195$1a@gJ
                      g$library-spec$28121$1a@gJ
                      g$vis*$32167$1a@gJ)
                    (g$map$20195$1a@gJ
                      g$library-spec$28121$1a@gJ
                      g$inv*$32168$1a@gJ)
                    (case-lambda
                      (() (g$visit!$32144$1a@gJ g$macro*$32165$1a@gJ)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$27849$1a@gJ
                           g$invoke-code$32166$1a@gJ))))
                    (g$build-visit-code$32143$1a@gJ
                      g$macro*$32165$1a@gJ)
                    g$invoke-code$32166$1a@gJ)))
                g$export-env$32162$1a@gJ
                g$export-subst$32161$1a@gJ
                g$macro*$32160$1a@gJ
                g$invoke-code$32159$1a@gJ
                g$vis*$32158$1a@gJ
                g$inv*$32157$1a@gJ
                g$imp*$32156$1a@gJ
                g$ver$32155$1a@gJ
                g$name$32154$1a@gJ))))))
       ((g$x$32190$1a@gJ g$filename$32191$1a@gJ)
        (g$library-expander$29012$1a@gJ
          g$x$32190$1a@gJ
          g$filename$32191$1a@gJ
          (case-lambda ((g$x$32192$1a@gJ) (values)))))
       ((g$x$32193$1a@gJ)
        (g$library-expander$29012$1a@gJ
          g$x$32193$1a@gJ
          '#f
          (case-lambda ((g$x$32194$1a@gJ) (values)))))))
   (g$boot-library-expand$29013$1a@gJ
     g$boot-library-expand$32606$1a@gJ
     (case-lambda
       ((g$x$32195$1a@gJ)
        (call-with-values
          (case-lambda
            (() (g$library-expander$29012$1a@gJ g$x$32195$1a@gJ)))
          (case-lambda
            ((g$id$32206$1a@gJ
               g$name$32207$1a@gJ
               g$ver$32208$1a@gJ
               g$imp*$32209$1a@gJ
               g$vis*$32210$1a@gJ
               g$inv*$32211$1a@gJ
               g$invoke-code$32212$1a@gJ
               g$visit-code$32213$1a@gJ
               g$export-subst$32214$1a@gJ
               g$export-env$32215$1a@gJ)
             ((case-lambda
                ((g$export-env$32216$1a@gJ
                   g$export-subst$32217$1a@gJ
                   g$visit-code$32218$1a@gJ
                   g$invoke-code$32219$1a@gJ
                   g$inv*$32220$1a@gJ
                   g$vis*$32221$1a@gJ
                   g$imp*$32222$1a@gJ
                   g$ver$32223$1a@gJ
                   g$name$32224$1a@gJ
                   g$id$32225$1a@gJ)
                 (values
                   g$name$32224$1a@gJ
                   g$invoke-code$32219$1a@gJ
                   g$export-subst$32217$1a@gJ
                   g$export-env$32216$1a@gJ)))
              g$export-env$32215$1a@gJ
              g$export-subst$32214$1a@gJ
              g$visit-code$32213$1a@gJ
              g$invoke-code$32212$1a@gJ
              g$inv*$32211$1a@gJ
              g$vis*$32210$1a@gJ
              g$imp*$32209$1a@gJ
              g$ver$32208$1a@gJ
              g$name$32207$1a@gJ
              g$id$32206$1a@gJ)))))))
   (g$rev-map-append$29014$1a@gJ
     g$rev-map-append$32607$1a@gJ
     (case-lambda
       ((g$f$32226$1a@gJ g$ls$32227$1a@gJ g$ac$32228$1a@gJ)
        (if (null? g$ls$32227$1a@gJ)
          g$ac$32228$1a@gJ
          (begin
            '#f
            (g$rev-map-append$29014$1a@gJ
              g$f$32226$1a@gJ
              (cdr g$ls$32227$1a@gJ)
              (cons
                (g$f$32226$1a@gJ (car g$ls$32227$1a@gJ))
                g$ac$32228$1a@gJ)))))))
   (g$build-exports$29015$1a@gJ
     g$build-exports$32608$1a@gJ
     (case-lambda
       ((g$lex*+loc*$32229$1a@gJ g$init*$32230$1a@gJ)
        (g$build-sequence$28336$1a@gJ
          '#f
          (cons
            (g$build-void$28337$1a@gJ)
            (g$rev-map-append$29014$1a@gJ
              (case-lambda
                ((g$x$32231$1a@gJ)
                 (list
                   'set!
                   (cdr g$x$32231$1a@gJ)
                   (car g$x$32231$1a@gJ))))
              g$lex*+loc*$32229$1a@gJ
              g$init*$32230$1a@gJ))))))
   (g$make-export-subst$29016$1a@gJ
     g$make-export-subst$32609$1a@gJ
     (case-lambda
       ((g$name*$32232$1a@gJ g$id*$32233$1a@gJ)
        (g$map$20195$1a@gJ
          (case-lambda
            ((g$name$32234$1a@gJ g$id$32235$1a@gJ)
             ((case-lambda
                ((g$label$32236$1a@gJ)
                 (begin
                   (if (not g$label$32236$1a@gJ)
                     (g$syntax-violation$29029$1a@gJ
                       '#f
                       '"cannot export unbound identifier"
                       g$id$32235$1a@gJ)
                     (void))
                   (cons g$name$32234$1a@gJ g$label$32236$1a@gJ))))
              (g$id->label$28424$1a@gJ g$id$32235$1a@gJ))))
          g$name*$32232$1a@gJ
          g$id*$32233$1a@gJ))))
   (g$make-export-env/macros$29017$1a@gJ
     g$make-export-env/macros$32610$1a@gJ
     (case-lambda
       ((g$lex*$32237$1a@gJ g$loc*$32238$1a@gJ g$r$32239$1a@gJ)
        (letrec* ((g$lookup$32240$1a@gJ
                    (case-lambda
                      ((g$x$32256$1a@gJ)
                       ((letrec ((g$f$32257$1a@gJ
                                   (case-lambda
                                     ((g$x$32258$1a@gJ
                                        g$lex*$32259$1a@gJ
                                        g$loc*$32260$1a@gJ)
                                      (if (pair? g$lex*$32259$1a@gJ)
                                        (if (eq? g$x$32258$1a@gJ
                                                 (car g$lex*$32259$1a@gJ))
                                          (car g$loc*$32260$1a@gJ)
                                          (g$f$32257$1a@gJ
                                            g$x$32258$1a@gJ
                                            (cdr g$lex*$32259$1a@gJ)
                                            (cdr g$loc*$32260$1a@gJ)))
                                        (begin
                                          '#f
                                          (assertion-violation
                                            'lookup-make-export
                                            '"BUG")))))))
                          g$f$32257$1a@gJ)
                        g$x$32256$1a@gJ
                        g$lex*$32237$1a@gJ
                        g$loc*$32238$1a@gJ)))))
          ((letrec ((g$f$32241$1a@gJ
                      (case-lambda
                        ((g$r$32242$1a@gJ
                           g$env$32243$1a@gJ
                           g$global*$32244$1a@gJ
                           g$macro*$32245$1a@gJ)
                         (if (null? g$r$32242$1a@gJ)
                           (values
                             g$env$32243$1a@gJ
                             g$global*$32244$1a@gJ
                             g$macro*$32245$1a@gJ)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x$32246$1a@gJ)
                                 ((case-lambda
                                    ((g$label$32247$1a@gJ
                                       g$b$32248$1a@gJ)
                                     ((case-lambda
                                        ((g$t$32249$1a@gJ)
                                         (if (eqv?
                                               g$t$32249$1a@gJ
                                               'lexical)
                                           ((case-lambda
                                              ((g$v$32250$1a@gJ)
                                               ((case-lambda
                                                  ((g$loc$32251$1a@gJ
                                                     g$type$32252$1a@gJ)
                                                   (g$f$32241$1a@gJ
                                                     (cdr g$r$32242$1a@gJ)
                                                     (cons
                                                       (g$cons*$20197$1a@gJ
                                                         g$label$32247$1a@gJ
                                                         g$type$32252$1a@gJ
                                                         g$loc$32251$1a@gJ)
                                                       g$env$32243$1a@gJ)
                                                     (cons
                                                       (cons
                                                         (g$lexical-var$28853$1a@gJ
                                                           g$v$32250$1a@gJ)
                                                         g$loc$32251$1a@gJ)
                                                       g$global*$32244$1a@gJ)
                                                     g$macro*$32245$1a@gJ)))
                                                (g$lookup$32240$1a@gJ
                                                  (g$lexical-var$28853$1a@gJ
                                                    g$v$32250$1a@gJ))
                                                (if (g$lexical-mutable?$28854$1a@gJ
                                                      g$v$32250$1a@gJ)
                                                  'mutable
                                                  'global))))
                                            (g$binding-value$28429$1a@gJ
                                              g$b$32248$1a@gJ))
                                           (if (eqv?
                                                 g$t$32249$1a@gJ
                                                 'local-macro)
                                             ((case-lambda
                                                ((g$loc$32253$1a@gJ)
                                                 (g$f$32241$1a@gJ
                                                   (cdr g$r$32242$1a@gJ)
                                                   (cons
                                                     (g$cons*$20197$1a@gJ
                                                       g$label$32247$1a@gJ
                                                       'global-macro
                                                       g$loc$32253$1a@gJ)
                                                     g$env$32243$1a@gJ)
                                                   g$global*$32244$1a@gJ
                                                   (cons
                                                     (cons
                                                       g$loc$32253$1a@gJ
                                                       (g$binding-value$28429$1a@gJ
                                                         g$b$32248$1a@gJ))
                                                     g$macro*$32245$1a@gJ))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$32249$1a@gJ
                                                   'local-macro!)
                                               ((case-lambda
                                                  ((g$loc$32254$1a@gJ)
                                                   (g$f$32241$1a@gJ
                                                     (cdr g$r$32242$1a@gJ)
                                                     (cons
                                                       (g$cons*$20197$1a@gJ
                                                         g$label$32247$1a@gJ
                                                         'global-macro!
                                                         g$loc$32254$1a@gJ)
                                                       g$env$32243$1a@gJ)
                                                     g$global*$32244$1a@gJ
                                                     (cons
                                                       (cons
                                                         g$loc$32254$1a@gJ
                                                         (g$binding-value$28429$1a@gJ
                                                           g$b$32248$1a@gJ))
                                                       g$macro*$32245$1a@gJ))))
                                                (gensym))
                                               (if (eqv?
                                                     g$t$32249$1a@gJ
                                                     'local-ctv)
                                                 ((case-lambda
                                                    ((g$loc$32255$1a@gJ)
                                                     (g$f$32241$1a@gJ
                                                       (cdr g$r$32242$1a@gJ)
                                                       (cons
                                                         (g$cons*$20197$1a@gJ
                                                           g$label$32247$1a@gJ
                                                           'global-ctv
                                                           g$loc$32255$1a@gJ)
                                                         g$env$32243$1a@gJ)
                                                       g$global*$32244$1a@gJ
                                                       (cons
                                                         (cons
                                                           g$loc$32255$1a@gJ
                                                           (g$binding-value$28429$1a@gJ
                                                             g$b$32248$1a@gJ))
                                                         g$macro*$32245$1a@gJ))))
                                                  (gensym))
                                                 (if (g$memv$20188$1a@gJ
                                                       g$t$32249$1a@gJ
                                                       '($rtd $module))
                                                   (g$f$32241$1a@gJ
                                                     (cdr g$r$32242$1a@gJ)
                                                     (cons
                                                       g$x$32246$1a@gJ
                                                       g$env$32243$1a@gJ)
                                                     g$global*$32244$1a@gJ
                                                     g$macro*$32245$1a@gJ)
                                                   (begin
                                                     '#f
                                                     (assertion-violation
                                                       'expander
                                                       '"BUG: do not know how to export"
                                                       (g$binding-type$28428$1a@gJ
                                                         g$b$32248$1a@gJ)
                                                       (g$binding-value$28429$1a@gJ
                                                         g$b$32248$1a@gJ))))))))))
                                      (g$binding-type$28428$1a@gJ
                                        g$b$32248$1a@gJ))))
                                  (car g$x$32246$1a@gJ)
                                  (cdr g$x$32246$1a@gJ))))
                              (car g$r$32242$1a@gJ))))))))
             g$f$32241$1a@gJ)
           g$r$32239$1a@gJ
           '()
           '()
           '())))))
   (g$generate-temporaries$29018$1a@gJ
     g$generate-temporaries$32611$1a@gJ
     (case-lambda
       ((g$ls$32261$1a@gJ)
        ((case-lambda
           ((g$t$32262$1a@gJ)
            ((case-lambda
               ((g$ls/false$32263$1a@gJ)
                (if g$ls/false$32263$1a@gJ
                  (apply
                    (case-lambda
                      ((g$ls$32264$1a@gJ)
                       (g$map$20195$1a@gJ
                         (case-lambda
                           ((g$x$32265$1a@gJ)
                            (g$make-stx$28384$1a@gJ
                              ((case-lambda
                                 ((g$x$32266$1a@gJ)
                                  (if ((case-lambda
                                         ((g$t$32267$1a@gJ)
                                          (if g$t$32267$1a@gJ
                                            g$t$32267$1a@gJ
                                            (begin
                                              '#f
                                              (g$string?$20616$1a@gJ
                                                g$x$32266$1a@gJ)))))
                                       (g$symbol?$20620$1a@gJ
                                         g$x$32266$1a@gJ))
                                    (gensym g$x$32266$1a@gJ)
                                    (begin '#f (gensym 't)))))
                               (g$syntax->datum$29032$1a@gJ
                                 g$x$32265$1a@gJ))
                              g$top-mark*$28344$1a@gJ
                              '()
                              '())))
                         g$ls$32264$1a@gJ)))
                    g$ls/false$32263$1a@gJ)
                  ((case-lambda
                     ((g$t$32268$1a@gJ)
                      ((case-lambda
                         ((g$ls/false$32269$1a@gJ)
                          (if g$ls/false$32269$1a@gJ
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$32269$1a@gJ)
                            (g$syntax-violation$29029$1a@gJ
                              '#f
                              '"invalid syntax"
                              g$t$32268$1a@gJ))))
                       (g$syntax-dispatch$28909$1a@gJ
                         g$t$32268$1a@gJ
                         '_))))
                   g$t$32262$1a@gJ))))
             (g$syntax-dispatch$28909$1a@gJ
               g$t$32262$1a@gJ
               'each-any))))
         g$ls$32261$1a@gJ))))
   (g$free-identifier=?$29019$1a@gJ
     g$free-identifier=?$32612$1a@gJ
     (case-lambda
       ((g$x$32270$1a@gJ g$y$32271$1a@gJ)
        (if (g$id?$28411$1a@gJ g$x$32270$1a@gJ)
          (if (g$id?$28411$1a@gJ g$y$32271$1a@gJ)
            (g$free-id=?$28415$1a@gJ g$x$32270$1a@gJ g$y$32271$1a@gJ)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$32271$1a@gJ))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$32270$1a@gJ)))))
   (g$bound-identifier=?$29020$1a@gJ
     g$bound-identifier=?$32613$1a@gJ
     (case-lambda
       ((g$x$32272$1a@gJ g$y$32273$1a@gJ)
        (if (g$id?$28411$1a@gJ g$x$32272$1a@gJ)
          (if (g$id?$28411$1a@gJ g$y$32273$1a@gJ)
            (g$bound-id=?$28414$1a@gJ g$x$32272$1a@gJ g$y$32273$1a@gJ)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$32273$1a@gJ))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$32272$1a@gJ)))))
   (g$make-source-condition$29021$1a@gJ
     g$make-source-condition$32614$1a@gJ
     (case-lambda
       ((g$x$32274$1a@gJ)
        (letrec* ((g$13492$32275$1a@gJ
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$22136$1a@gJ
                      'g$13495$1a@gJ
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$13494$32276$1a@gJ '#f)
                  (g$13493$32277$1a@gJ
                    (make-record-constructor-descriptor
                      g$13492$32275$1a@gJ
                      g$&condition-rcd$22137$1a@gJ
                      g$13494$32276$1a@gJ))
                  (g$13491$32280$1a@gJ
                    (record-predicate g$13492$32275$1a@gJ))
                  (g$make-source-condition$32281$1a@gJ
                    (record-constructor g$13493$32277$1a@gJ))
                  (g$13489$32282$1a@gJ
                    (record-accessor g$13492$32275$1a@gJ '0))
                  (g$13490$32283$1a@gJ
                    (record-accessor g$13492$32275$1a@gJ '1))
                  (g$source-condition?$32284$1a@gJ
                    (condition-predicate g$13492$32275$1a@gJ))
                  (g$source-filename$32285$1a@gJ
                    (condition-accessor
                      g$13492$32275$1a@gJ
                      g$13489$32282$1a@gJ))
                  (g$source-character$32286$1a@gJ
                    (condition-accessor
                      g$13492$32275$1a@gJ
                      g$13490$32283$1a@gJ)))
          (if (pair? g$x$32274$1a@gJ)
            (g$make-source-condition$32281$1a@gJ
              (car g$x$32274$1a@gJ)
              (cdr g$x$32274$1a@gJ))
            (condition))))))
   (g$extract-position-condition$29022$1a@gJ
     g$extract-position-condition$32615$1a@gJ
     (case-lambda
       ((g$x$32287$1a@gJ)
        (g$make-source-condition$29021$1a@gJ
          (g$expression-position$29023$1a@gJ g$x$32287$1a@gJ)))))
   (g$expression-position$29023$1a@gJ
     g$expression-position$32616$1a@gJ
     (case-lambda
       ((g$x$32288$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$32288$1a@gJ)
          (begin
            '#f
            ((case-lambda
               ((g$x$32289$1a@gJ)
                (if (annotation? g$x$32289$1a@gJ)
                  (begin '#f (annotation-source g$x$32289$1a@gJ))
                  '#f)))
             (g$stx-expr$28385$1a@gJ g$x$32288$1a@gJ)))
          '#f))))
   (g$syntax-annotation$29024$1a@gJ
     g$syntax-annotation$32617$1a@gJ
     (case-lambda
       ((g$x$32290$1a@gJ)
        (if (g$stx?$28383$1a@gJ g$x$32290$1a@gJ)
          (g$stx-expr$28385$1a@gJ g$x$32290$1a@gJ)
          g$x$32290$1a@gJ))))
   (g$assertion-error$29025$1a@gJ
     g$assertion-error$32618$1a@gJ
     (case-lambda
       ((g$expr$32291$1a@gJ g$pos$32292$1a@gJ)
        (raise
          (condition
            (g$make-assertion-violation$22184$1a@gJ)
            (g$make-who-condition$22202$1a@gJ 'assert)
            (g$make-message-condition$22142$1a@gJ '"assertion failed")
            (g$make-irritants-condition$22192$1a@gJ
              (list g$expr$32291$1a@gJ))
            (g$make-source-condition$29021$1a@gJ g$pos$32292$1a@gJ))))))
   (g$syntax-error$29026$1a@gJ
     g$syntax-error$32619$1a@gJ
     (case-lambda
       ((g$x$32293$1a@gJ . g$args$32294$1a@gJ)
        (begin
          (if (not (g$for-all$20193$1a@gJ
                     g$string?$20616$1a@gJ
                     g$args$32294$1a@gJ))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$32294$1a@gJ)
            (void))
          (raise
            (condition
              (g$make-message-condition$22142$1a@gJ
                (if (null? g$args$32294$1a@gJ)
                  '"invalid syntax"
                  (apply
                    g$string-append$20638$1a@gJ
                    g$args$32294$1a@gJ)))
              (g$make-syntax-violation$22256$1a@gJ
                (g$syntax->datum$29032$1a@gJ g$x$32293$1a@gJ)
                '#f)
              (g$extract-position-condition$29022$1a@gJ g$x$32293$1a@gJ)
              (g$extract-trace$29027$1a@gJ g$x$32293$1a@gJ)))))))
   (g$extract-trace$29027$1a@gJ
     g$extract-trace$32620$1a@gJ
     (case-lambda
       ((g$x$32295$1a@gJ)
        (letrec* ((g$13518$32296$1a@gJ
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$22136$1a@gJ
                      'g$13521$1a@gJ
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$13520$32297$1a@gJ '#f)
                  (g$13519$32298$1a@gJ
                    (make-record-constructor-descriptor
                      g$13518$32296$1a@gJ
                      g$&condition-rcd$22137$1a@gJ
                      g$13520$32297$1a@gJ))
                  (g$13517$32301$1a@gJ
                    (record-predicate g$13518$32296$1a@gJ))
                  (g$make-trace$32302$1a@gJ
                    (record-constructor g$13519$32298$1a@gJ))
                  (g$13516$32303$1a@gJ
                    (record-accessor g$13518$32296$1a@gJ '0))
                  (g$trace?$32304$1a@gJ
                    (condition-predicate g$13518$32296$1a@gJ))
                  (g$trace-form$32305$1a@gJ
                    (condition-accessor
                      g$13518$32296$1a@gJ
                      g$13516$32303$1a@gJ)))
          ((letrec ((g$f$32306$1a@gJ
                      (case-lambda
                        ((g$x$32307$1a@gJ)
                         (if (g$stx?$28383$1a@gJ g$x$32307$1a@gJ)
                           (apply
                             condition
                             (g$make-trace$32302$1a@gJ g$x$32307$1a@gJ)
                             (g$map$20195$1a@gJ
                               g$f$32306$1a@gJ
                               (g$stx-ae*$28388$1a@gJ g$x$32307$1a@gJ)))
                           (if (annotation? g$x$32307$1a@gJ)
                             (g$make-trace$32302$1a@gJ
                               (g$make-stx$28384$1a@gJ
                                 g$x$32307$1a@gJ
                                 '()
                                 '()
                                 '()))
                             (begin '#f (condition))))))))
             g$f$32306$1a@gJ)
           g$x$32295$1a@gJ)))))
   (g$syntax-violation*$29028$1a@gJ
     g$syntax-violation*$32621$1a@gJ
     (case-lambda
       ((g$who$32308$1a@gJ
          g$msg$32309$1a@gJ
          g$form$32310$1a@gJ
          g$condition-object$32311$1a@gJ)
        (begin
          (if (not (g$string?$20616$1a@gJ g$msg$32309$1a@gJ))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$32309$1a@gJ)
            (void))
          ((case-lambda
             ((g$who$32312$1a@gJ)
              (raise
                (condition
                  (if g$who$32312$1a@gJ
                    (g$make-who-condition$22202$1a@gJ g$who$32312$1a@gJ)
                    (condition))
                  (g$make-message-condition$22142$1a@gJ
                    g$msg$32309$1a@gJ)
                  g$condition-object$32311$1a@gJ
                  (g$extract-position-condition$29022$1a@gJ
                    g$form$32310$1a@gJ)
                  (g$extract-trace$29027$1a@gJ g$form$32310$1a@gJ)))))
           (if ((case-lambda
                  ((g$t$32313$1a@gJ)
                   (if g$t$32313$1a@gJ
                     g$t$32313$1a@gJ
                     (begin
                       '#f
                       (g$symbol?$20620$1a@gJ g$who$32308$1a@gJ)))))
                (g$string?$20616$1a@gJ g$who$32308$1a@gJ))
             g$who$32308$1a@gJ
             (if (not g$who$32308$1a@gJ)
               ((case-lambda
                  ((g$t$32314$1a@gJ)
                   ((case-lambda
                      ((g$ls/false$32315$1a@gJ)
                       (if (if g$ls/false$32315$1a@gJ
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$32316$1a@gJ)
                                    (g$id?$28411$1a@gJ
                                      g$id$32316$1a@gJ)))
                                 g$ls/false$32315$1a@gJ))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$32317$1a@gJ)
                              (g$syntax->datum$29032$1a@gJ
                                g$id$32317$1a@gJ)))
                           g$ls/false$32315$1a@gJ)
                         ((case-lambda
                            ((g$t$32318$1a@gJ)
                             ((case-lambda
                                ((g$ls/false$32319$1a@gJ)
                                 (if (if g$ls/false$32319$1a@gJ
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$32320$1a@gJ
                                                g$rest$32321$1a@gJ)
                                              (g$id?$28411$1a@gJ
                                                g$id$32320$1a@gJ)))
                                           g$ls/false$32319$1a@gJ))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$32322$1a@gJ
                                          g$rest$32323$1a@gJ)
                                        (g$syntax->datum$29032$1a@gJ
                                          g$id$32322$1a@gJ)))
                                     g$ls/false$32319$1a@gJ)
                                   ((case-lambda
                                      ((g$t$32324$1a@gJ)
                                       ((case-lambda
                                          ((g$ls/false$32325$1a@gJ)
                                           (if g$ls/false$32325$1a@gJ
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$32325$1a@gJ)
                                             (g$syntax-violation$29029$1a@gJ
                                               '#f
                                               '"invalid syntax"
                                               g$t$32324$1a@gJ))))
                                        (g$syntax-dispatch$28909$1a@gJ
                                          g$t$32324$1a@gJ
                                          '_))))
                                    g$t$32318$1a@gJ))))
                              (g$syntax-dispatch$28909$1a@gJ
                                g$t$32318$1a@gJ
                                '(any . any)))))
                          g$t$32314$1a@gJ))))
                    (g$syntax-dispatch$28909$1a@gJ
                      g$t$32314$1a@gJ
                      'any))))
                g$form$32310$1a@gJ)
               (begin
                 '#f
                 (assertion-violation
                   'syntax-violation
                   '"invalid who argument"
                   g$who$32308$1a@gJ)))))))))
   (g$syntax-violation$29029$1a@gJ
     g$syntax-violation$32622$1a@gJ
     (case-lambda
       ((g$who$32326$1a@gJ g$msg$32327$1a@gJ g$form$32328$1a@gJ)
        (g$syntax-violation$29029$1a@gJ
          g$who$32326$1a@gJ
          g$msg$32327$1a@gJ
          g$form$32328$1a@gJ
          '#f))
       ((g$who$32329$1a@gJ
          g$msg$32330$1a@gJ
          g$form$32331$1a@gJ
          g$subform$32332$1a@gJ)
        (g$syntax-violation*$29028$1a@gJ
          g$who$32329$1a@gJ
          g$msg$32330$1a@gJ
          g$form$32331$1a@gJ
          (g$make-syntax-violation$22256$1a@gJ
            (g$syntax->datum$29032$1a@gJ g$form$32331$1a@gJ)
            (g$syntax->datum$29032$1a@gJ g$subform$32332$1a@gJ))))))
   (g$identifier?$29030$1a@gJ
     g$identifier?$32623$1a@gJ
     (case-lambda
       ((g$x$32333$1a@gJ) (g$id?$28411$1a@gJ g$x$32333$1a@gJ))))
   (g$datum->syntax$29031$1a@gJ
     g$datum->syntax$32624$1a@gJ
     (case-lambda
       ((g$id$32334$1a@gJ g$datum$32335$1a@gJ)
        (if (g$id?$28411$1a@gJ g$id$32334$1a@gJ)
          (g$datum->stx$28394$1a@gJ
            g$id$32334$1a@gJ
            g$datum$32335$1a@gJ)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$32334$1a@gJ)))))
   (g$syntax->datum$29032$1a@gJ
     g$syntax->datum$32625$1a@gJ
     (case-lambda
       ((g$x$32336$1a@gJ) (g$stx->datum$28422$1a@gJ g$x$32336$1a@gJ))))
   (g$compile-r6rs-top-level$29033$1a@gJ
     g$compile-r6rs-top-level$32626$1a@gJ
     (case-lambda
       ((g$x*$32337$1a@gJ)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$28972$1a@gJ g$x*$32337$1a@gJ)))
          (case-lambda
            ((g$lib*$32340$1a@gJ g$invoke-code$32341$1a@gJ)
             ((case-lambda
                ((g$invoke-code$32342$1a@gJ g$lib*$32343$1a@gJ)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$20196$1a@gJ
                        g$invoke-library$28117$1a@gJ
                        g$lib*$32343$1a@gJ)
                      (eval-core
                        (g$expanded->core$27849$1a@gJ
                          g$invoke-code$32342$1a@gJ)))))))
              g$invoke-code$32341$1a@gJ
              g$lib*$32340$1a@gJ)))))))
   (g$pre-compile-r6rs-top-level$29034$1a@gJ
     g$pre-compile-r6rs-top-level$32627$1a@gJ
     (case-lambda
       ((g$x*$32344$1a@gJ)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$28972$1a@gJ g$x*$32344$1a@gJ)))
          (case-lambda
            ((g$lib*$32347$1a@gJ g$invoke-code$32348$1a@gJ)
             ((case-lambda
                ((g$invoke-code$32349$1a@gJ g$lib*$32350$1a@gJ)
                 (begin
                   (g$for-each$20196$1a@gJ
                     g$invoke-library$28117$1a@gJ
                     g$lib*$32350$1a@gJ)
                   (compile-core
                     (g$expanded->core$27849$1a@gJ
                       g$invoke-code$32349$1a@gJ)))))
              g$invoke-code$32348$1a@gJ
              g$lib*$32347$1a@gJ)))))))
   (g$new-interaction-environment$29035$1a@gJ
     g$new-interaction-environment$32628$1a@gJ
     (case-lambda
       (() (g$new-interaction-environment$29035$1a@gJ '(ironscheme)))
       ((g$libname$32351$1a@gJ)
        ((case-lambda
           ((g$lib$32352$1a@gJ g$rib$32353$1a@gJ)
            (begin
              ((case-lambda
                 ((g$subst$32354$1a@gJ)
                  (begin
                    (g$set-rib-sym*!$28364$1a@gJ
                      g$rib$32353$1a@gJ
                      (g$map$20195$1a@gJ car g$subst$32354$1a@gJ))
                    (g$set-rib-mark**!$28365$1a@gJ
                      g$rib$32353$1a@gJ
                      (g$map$20195$1a@gJ
                        (case-lambda
                          ((g$x$32355$1a@gJ) g$top-mark*$28344$1a@gJ))
                        g$subst$32354$1a@gJ))
                    (g$set-rib-label*!$28366$1a@gJ
                      g$rib$32353$1a@gJ
                      (g$map$20195$1a@gJ cdr g$subst$32354$1a@gJ)))))
               (g$library-subst$28074$1a@gJ g$lib$32352$1a@gJ))
              (g$make-interaction-env$28993$1a@gJ
                g$rib$32353$1a@gJ
                '()
                '()))))
         (g$find-library-by-name$28110$1a@gJ g$libname$32351$1a@gJ)
         (g$make-empty-rib$28369$1a@gJ)))))
   (g$interaction-environment$29036$1a@gJ
     g$interaction-environment$32629$1a@gJ
     (g$make-parameter$27252$1a@gJ '#f))
   (g$top-level-context$29037$1a@gJ
     g$top-level-context$32630$1a@gJ
     (g$make-parameter$27252$1a@gJ '#f)))
  (g$current-library-expander$28107$1a@gJ
    g$library-expander$29012$1a@gJ))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$27846$1a@gJ
      (case-lambda
        ((g$x$32717$1a@gJ)
         ((case-lambda
            ((g$t$32718$1a@gJ)
             (if g$t$32718$1a@gJ
               (cdr g$t$32718$1a@gJ)
               (begin '#f '#f))))
          (g$assq$20183$1a@gJ
            g$x$32717$1a@gJ
            '((ellipsis-map . g$ellipsis-map$32513$1a@gJ)
              (&stacktrace-rcd . g$&stacktrace-rcd$22227$1a@gJ)
              (&stacktrace-rtd . g$&stacktrace-rtd$22226$1a@gJ)
              (&where-rcd . g$&where-rcd$22217$1a@gJ)
              (&where-rtd . g$&where-rtd$22216$1a@gJ)
              (&no-nans-rcd . g$&no-nans-rcd$22391$1a@gJ)
              (&no-nans-rtd . g$&no-nans-rtd$22390$1a@gJ)
              (&no-infinities-rcd . g$&no-infinities-rcd$22383$1a@gJ)
              (&no-infinities-rtd . g$&no-infinities-rtd$22382$1a@gJ)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$22375$1a@gJ)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$22374$1a@gJ)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$22365$1a@gJ)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$22364$1a@gJ)
              (&i/o-port-rcd . g$&i/o-port-rcd$22357$1a@gJ)
              (&i/o-port-rtd . g$&i/o-port-rtd$22356$1a@gJ)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$22347$1a@gJ)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$22346$1a@gJ)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$22339$1a@gJ)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$22338$1a@gJ)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$22331$1a@gJ)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$22330$1a@gJ)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$22323$1a@gJ)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$22322$1a@gJ)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$22315$1a@gJ)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$22314$1a@gJ)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$22305$1a@gJ)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$22304$1a@gJ)
              (&i/o-write-rcd . g$&i/o-write-rcd$22295$1a@gJ)
              (&i/o-write-rtd . g$&i/o-write-rtd$22294$1a@gJ)
              (&i/o-read-rcd . g$&i/o-read-rcd$22287$1a@gJ)
              (&i/o-read-rtd . g$&i/o-read-rtd$22286$1a@gJ)
              (&i/o-rcd . g$&i/o-rcd$22279$1a@gJ)
              (&i/o-rtd . g$&i/o-rtd$22278$1a@gJ)
              (&undefined-rcd . g$&undefined-rcd$22271$1a@gJ)
              (&undefined-rtd . g$&undefined-rtd$22270$1a@gJ)
              (&syntax-rcd . g$&syntax-rcd$22263$1a@gJ)
              (&syntax-rtd . g$&syntax-rtd$22262$1a@gJ)
              (&lexical-rcd . g$&lexical-rcd$22251$1a@gJ)
              (&lexical-rtd . g$&lexical-rtd$22250$1a@gJ)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$22243$1a@gJ)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$22242$1a@gJ)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$22235$1a@gJ)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$22234$1a@gJ)
              (&who-rcd . g$&who-rcd$22207$1a@gJ)
              (&who-rtd . g$&who-rtd$22206$1a@gJ)
              (&irritants-rcd . g$&irritants-rcd$22197$1a@gJ)
              (&irritants-rtd . g$&irritants-rtd$22196$1a@gJ)
              (&assertion-rcd . g$&assertion-rcd$22187$1a@gJ)
              (&assertion-rtd . g$&assertion-rtd$22186$1a@gJ)
              (&violation-rcd . g$&violation-rcd$22179$1a@gJ)
              (&violation-rtd . g$&violation-rtd$22178$1a@gJ)
              (&error-rcd . g$&error-rcd$22171$1a@gJ)
              (&error-rtd . g$&error-rtd$22170$1a@gJ)
              (&serious-rcd . g$&serious-rcd$22163$1a@gJ)
              (&serious-rtd . g$&serious-rtd$22162$1a@gJ)
              (&warning-rcd . g$&warning-rcd$22155$1a@gJ)
              (&warning-rtd . g$&warning-rtd$22154$1a@gJ)
              (&message-rcd . g$&message-rcd$22147$1a@gJ)
              (&message-rtd . g$&message-rtd$22146$1a@gJ)
              (&condition-rcd . g$&condition-rcd$22137$1a@gJ)
              (&condition-rtd . g$&condition-rtd$22136$1a@gJ)
              (tanh . g$tanh$21691$1a@gJ)
              (cosh . g$cosh$21689$1a@gJ)
              (sinh . g$sinh$21686$1a@gJ)
              (make-list . g$make-list$20178$1a@gJ)
              (last-pair . g$last-pair$20177$1a@gJ)
              (ironscheme-test . g$ironscheme-test$32707$1a@gJ)
              (ironscheme-build . g$ironscheme-build$32708$1a@gJ)
              (syntax-error . g$syntax-error$32619$1a@gJ)
              (syntax-dispatch . g$syntax-dispatch$32508$1a@gJ)
              (compile-system-libraries
                .
                g$compile-system-libraries$32712$1a@gJ)
              (compile->closure . g$compile->closure$32714$1a@gJ)
              (compile . g$compile$32713$1a@gJ)
              (load . g$load$32706$1a@gJ)
              (new-interaction-environment
                .
                g$new-interaction-environment$32628$1a@gJ)
              (interaction-environment
                .
                g$interaction-environment$32629$1a@gJ)
              (string-titlecase . g$string-titlecase$22714$1a@gJ)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$22724$1a@gJ)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$22723$1a@gJ)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$22722$1a@gJ)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$22721$1a@gJ)
              (string-foldcase . g$string-foldcase$22715$1a@gJ)
              (string-ci>? . g$string-ci>?$22711$1a@gJ)
              (string-ci>=? . g$string-ci>=?$22713$1a@gJ)
              (string-ci=? . g$string-ci=?$22709$1a@gJ)
              (string-ci<? . g$string-ci<?$22710$1a@gJ)
              (string-ci<=? . g$string-ci<=?$22712$1a@gJ)
              (char-whitespace? . g$char-whitespace?$22701$1a@gJ)
              (char-upper-case? . g$char-upper-case?$22702$1a@gJ)
              (char-title-case? . g$char-title-case?$22704$1a@gJ)
              (char-numeric? . g$char-numeric?$22700$1a@gJ)
              (char-lower-case? . g$char-lower-case?$22703$1a@gJ)
              (char-general-category
                .
                g$char-general-category$22705$1a@gJ)
              (char-upcase . g$char-upcase$22695$1a@gJ)
              (char-titlecase . g$char-titlecase$22697$1a@gJ)
              (char-foldcase . g$char-foldcase$22698$1a@gJ)
              (char-downcase . g$char-downcase$22696$1a@gJ)
              (char-ci>? . g$char-ci>?$22718$1a@gJ)
              (char-ci>=? . g$char-ci>=?$22720$1a@gJ)
              (char-ci=? . g$char-ci=?$22716$1a@gJ)
              (char-ci<? . g$char-ci<?$22717$1a@gJ)
              (char-ci<=? . g$char-ci<=?$22719$1a@gJ)
              (char-alphabetic? . g$char-alphabetic?$22699$1a@gJ)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$32446$1a@gJ)
              (variable-transformer?
                .
                g$variable-transformer?$32445$1a@gJ)
              (make-variable-transformer
                .
                g$make-variable-transformer$32443$1a@gJ)
              (identifier? . g$identifier?$32623$1a@gJ)
              (generate-temporaries
                .
                g$generate-temporaries$32611$1a@gJ)
              (free-identifier=? . g$free-identifier=?$32612$1a@gJ)
              (syntax->datum . g$syntax->datum$32625$1a@gJ)
              (datum->syntax . g$datum->syntax$32624$1a@gJ)
              (bound-identifier=? . g$bound-identifier=?$32613$1a@gJ)
              (delete-file . g$delete-file$20778$1a@gJ)
              (file-exists? . g$file-exists?$20777$1a@gJ)
              (list-sort . g$list-sort$22463$1a@gJ)
              (symbol-hash . g$symbol-hash$20767$1a@gJ)
              (string-ci-hash . g$string-ci-hash$20766$1a@gJ)
              (string-hash . g$string-hash$20765$1a@gJ)
              (make-eqv-hashtable . g$make-eqv-hashtable$20757$1a@gJ)
              (make-eq-hashtable . g$make-eq-hashtable$20756$1a@gJ)
              (hashtable? . g$hashtable?$20755$1a@gJ)
              (hashtable-update! . g$hashtable-update!$20763$1a@gJ)
              (hashtable-size . g$hashtable-size$20758$1a@gJ)
              (hashtable-set! . g$hashtable-set!$20760$1a@gJ)
              (hashtable-ref . g$hashtable-ref$20759$1a@gJ)
              (hashtable-delete! . g$hashtable-delete!$20761$1a@gJ)
              (hashtable-contains? . g$hashtable-contains?$20762$1a@gJ)
              (hashtable-clear! . g$hashtable-clear!$20764$1a@gJ)
              (call-with-output-file
                .
                g$call-with-output-file$26760$1a@gJ)
              (call-with-input-file
                .
                g$call-with-input-file$26759$1a@gJ)
              (write-char . g$write-char$26756$1a@gJ)
              (with-output-to-file . g$with-output-to-file$26758$1a@gJ)
              (with-input-from-file
                .
                g$with-input-from-file$26757$1a@gJ)
              (read-char . g$read-char$26755$1a@gJ)
              (peek-char . g$peek-char$26754$1a@gJ)
              (newline . g$newline$26761$1a@gJ)
              (standard-output-port
                .
                g$standard-output-port$26688$1a@gJ)
              (standard-input-port . g$standard-input-port$26687$1a@gJ)
              (standard-error-port . g$standard-error-port$26686$1a@gJ)
              (put-datum . g$put-datum$26691$1a@gJ)
              (port? . g$port?$26696$1a@gJ)
              (open-string-output-port
                .
                g$open-string-output-port$26695$1a@gJ)
              (native-eol-style . g$native-eol-style$26689$1a@gJ)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$22292$1a@gJ)
              (make-i/o-read-error . g$make-i/o-read-error$22284$1a@gJ)
              (make-i/o-port-error . g$make-i/o-port-error$22352$1a@gJ)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$22300$1a@gJ)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$22310$1a@gJ)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$22320$1a@gJ)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$22328$1a@gJ)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$22344$1a@gJ)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$22336$1a@gJ)
              (make-i/o-error . g$make-i/o-error$22276$1a@gJ)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$22370$1a@gJ)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$22362$1a@gJ)
              (make-bytevector . g$make-bytevector$21103$1a@gJ)
              (i/o-write-error? . g$i/o-write-error?$22293$1a@gJ)
              (i/o-read-error? . g$i/o-read-error?$22285$1a@gJ)
              (i/o-port-error? . g$i/o-port-error?$22354$1a@gJ)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$22302$1a@gJ)
              (i/o-error-position . g$i/o-error-position$22303$1a@gJ)
              (i/o-filename-error? . g$i/o-filename-error?$22312$1a@gJ)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$22321$1a@gJ)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$22329$1a@gJ)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$22345$1a@gJ)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$22337$1a@gJ)
              (i/o-error? . g$i/o-error?$22277$1a@gJ)
              (i/o-error-port . g$i/o-error-port$22355$1a@gJ)
              (i/o-error-filename . g$i/o-error-filename$22313$1a@gJ)
              (i/o-encoding-error? . g$i/o-encoding-error?$22372$1a@gJ)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$22373$1a@gJ)
              (i/o-decoding-error? . g$i/o-decoding-error?$22363$1a@gJ)
              (get-datum . g$get-datum$26692$1a@gJ)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$26697$1a@gJ)
              (call-with-port . g$call-with-port$26698$1a@gJ)
              (buffer-mode? . g$buffer-mode?$26690$1a@gJ)
              (scheme-report-environment
                .
                g$scheme-report-environment$32601$1a@gJ)
              (quotient . g$quotient$22430$1a@gJ)
              (null-environment . g$null-environment$32600$1a@gJ)
              (remainder . g$remainder$22431$1a@gJ)
              (modulo . g$modulo$22432$1a@gJ)
              (inexact->exact . g$inexact->exact$22427$1a@gJ)
              (force . g$force$22434$1a@gJ)
              (exact->inexact . g$exact->inexact$22428$1a@gJ)
              (command-line . g$command-line$32701$1a@gJ)
              (string-fill! . g$string-fill!$20631$1a@gJ)
              (string-set! . g$string-set!$20630$1a@gJ)
              (set-cdr! . g$set-cdr!$22405$1a@gJ)
              (set-car! . g$set-car!$22404$1a@gJ)
              (remove . g$remove$20203$1a@gJ)
              (remv . g$remv$20204$1a@gJ)
              (remp . g$remp$20181$1a@gJ)
              (remq . g$remq$20205$1a@gJ)
              (partition . g$partition$20180$1a@gJ)
              (memv . g$memv$20188$1a@gJ)
              (memq . g$memq$20187$1a@gJ)
              (memp . g$memp$20190$1a@gJ)
              (member . g$member$20189$1a@gJ)
              (exists . g$exists$20194$1a@gJ)
              (for-all . g$for-all$20193$1a@gJ)
              (fold-right . g$fold-right$20202$1a@gJ)
              (fold-left . g$fold-left$20201$1a@gJ)
              (find . g$find$20179$1a@gJ)
              (filter . g$filter$20182$1a@gJ)
              (cons* . g$cons*$20197$1a@gJ)
              (assv . g$assv$20184$1a@gJ)
              (assq . g$assq$20183$1a@gJ)
              (assp . g$assp$20186$1a@gJ)
              (assoc . g$assoc$20185$1a@gJ)
              (eval . g$eval$32603$1a@gJ)
              (environment . g$environment$32599$1a@gJ)
              (make-enumeration . g$make-enumeration$26897$1a@gJ)
              (enum-set=? . g$enum-set=?$26904$1a@gJ)
              (enum-set-universe . g$enum-set-universe$26898$1a@gJ)
              (enum-set-union . g$enum-set-union$26905$1a@gJ)
              (enum-set-subset? . g$enum-set-subset?$26903$1a@gJ)
              (enum-set-projection . g$enum-set-projection$26909$1a@gJ)
              (enum-set-member? . g$enum-set-member?$26902$1a@gJ)
              (enum-set-intersection
                .
                g$enum-set-intersection$26906$1a@gJ)
              (enum-set-indexer . g$enum-set-indexer$26899$1a@gJ)
              (enum-set-difference . g$enum-set-difference$26907$1a@gJ)
              (enum-set-constructor
                .
                g$enum-set-constructor$26900$1a@gJ)
              (enum-set-complement . g$enum-set-complement$26908$1a@gJ)
              (enum-set->list . g$enum-set->list$26901$1a@gJ)
              (who-condition? . g$who-condition?$22204$1a@gJ)
              (warning? . g$warning?$22153$1a@gJ)
              (violation? . g$violation?$22177$1a@gJ)
              (undefined-violation?
                .
                g$undefined-violation?$22269$1a@gJ)
              (syntax-violation? . g$syntax-violation?$22259$1a@gJ)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$22261$1a@gJ)
              (syntax-violation-form
                .
                g$syntax-violation-form$22260$1a@gJ)
              (syntax-violation . g$syntax-violation$32622$1a@gJ)
              (serious-condition? . g$serious-condition?$22161$1a@gJ)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$22233$1a@gJ)
              (message-condition? . g$message-condition?$22144$1a@gJ)
              (make-who-condition . g$make-who-condition$22202$1a@gJ)
              (make-warning . g$make-warning$22152$1a@gJ)
              (make-violation . g$make-violation$22176$1a@gJ)
              (make-undefined-violation
                .
                g$make-undefined-violation$22268$1a@gJ)
              (make-syntax-violation
                .
                g$make-syntax-violation$22256$1a@gJ)
              (make-serious-condition
                .
                g$make-serious-condition$22160$1a@gJ)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$22232$1a@gJ)
              (make-message-condition
                .
                g$make-message-condition$22142$1a@gJ)
              (make-lexical-violation
                .
                g$make-lexical-violation$22248$1a@gJ)
              (make-irritants-condition
                .
                g$make-irritants-condition$22192$1a@gJ)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$22240$1a@gJ)
              (make-error . g$make-error$22168$1a@gJ)
              (make-assertion-violation
                .
                g$make-assertion-violation$22184$1a@gJ)
              (lexical-violation? . g$lexical-violation?$22249$1a@gJ)
              (irritants-condition?
                .
                g$irritants-condition?$22194$1a@gJ)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$22241$1a@gJ)
              (error? . g$error?$22169$1a@gJ)
              (condition-who . g$condition-who$22205$1a@gJ)
              (condition-message . g$condition-message$22145$1a@gJ)
              (condition-irritants . g$condition-irritants$22195$1a@gJ)
              (assertion-violation?
                .
                g$assertion-violation?$22185$1a@gJ)
              (utf32->string . g$utf32->string$21121$1a@gJ)
              (utf16->string . g$utf16->string$21120$1a@gJ)
              (utf8->string . g$utf8->string$21118$1a@gJ)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$21122$1a@gJ)
              (u8-list->bytevector . g$u8-list->bytevector$21114$1a@gJ)
              (string->utf8 . g$string->utf8$21115$1a@gJ)
              (string->utf32 . g$string->utf32$21117$1a@gJ)
              (string->utf16 . g$string->utf16$21116$1a@gJ)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$21123$1a@gJ)
              (native-endianness . g$native-endianness$21092$1a@gJ)
              (bytevector? . g$bytevector?$20619$1a@gJ)
              (bytevector=? . g$bytevector=?$21105$1a@gJ)
              (bytevector-u8-set! . g$bytevector-u8-set!$21110$1a@gJ)
              (bytevector-u8-ref . g$bytevector-u8-ref$21109$1a@gJ)
              (bytevector-u64-set! . g$bytevector-u64-set!$21151$1a@gJ)
              (bytevector-u64-ref . g$bytevector-u64-ref$21147$1a@gJ)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$21153$1a@gJ)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$21149$1a@gJ)
              (bytevector-u32-set! . g$bytevector-u32-set!$21143$1a@gJ)
              (bytevector-u32-ref . g$bytevector-u32-ref$21139$1a@gJ)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$21145$1a@gJ)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$21141$1a@gJ)
              (bytevector-u16-set! . g$bytevector-u16-set!$21135$1a@gJ)
              (bytevector-u16-ref . g$bytevector-u16-ref$21131$1a@gJ)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$21137$1a@gJ)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$21133$1a@gJ)
              (bytevector-s8-set! . g$bytevector-s8-set!$21112$1a@gJ)
              (bytevector-s8-ref . g$bytevector-s8-ref$21111$1a@gJ)
              (bytevector-s64-set! . g$bytevector-s64-set!$21152$1a@gJ)
              (bytevector-s64-ref . g$bytevector-s64-ref$21148$1a@gJ)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$21154$1a@gJ)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$21150$1a@gJ)
              (bytevector-s32-set! . g$bytevector-s32-set!$21144$1a@gJ)
              (bytevector-s32-ref . g$bytevector-s32-ref$21140$1a@gJ)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$21146$1a@gJ)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$21142$1a@gJ)
              (bytevector-s16-set! . g$bytevector-s16-set!$21136$1a@gJ)
              (bytevector-s16-ref . g$bytevector-s16-ref$21132$1a@gJ)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$21138$1a@gJ)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$21134$1a@gJ)
              (bytevector-length . g$bytevector-length$21104$1a@gJ)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$21129$1a@gJ)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$21127$1a@gJ)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$21157$1a@gJ)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$21155$1a@gJ)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$21130$1a@gJ)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$21128$1a@gJ)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$21158$1a@gJ)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$21156$1a@gJ)
              (bytevector-fill! . g$bytevector-fill!$21106$1a@gJ)
              (bytevector-copy! . g$bytevector-copy!$21107$1a@gJ)
              (bytevector-copy . g$bytevector-copy$21108$1a@gJ)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$21124$1a@gJ)
              (bytevector->u8-list . g$bytevector->u8-list$21113$1a@gJ)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$21125$1a@gJ)
              (no-nans-violation? . g$no-nans-violation?$22389$1a@gJ)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$22381$1a@gJ)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$22388$1a@gJ)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$22380$1a@gJ)
              (real->flonum . g$real->flonum$21645$1a@gJ)
              (flzero? . g$flzero?$26653$1a@gJ)
              (fltruncate . g$fltruncate$26648$1a@gJ)
              (fltan . g$fltan$26637$1a@gJ)
              (flsqrt . g$flsqrt$26642$1a@gJ)
              (flsin . g$flsin$26635$1a@gJ)
              (flround . g$flround$26649$1a@gJ)
              (flpositive? . g$flpositive?$26651$1a@gJ)
              (flonum? . g$flonum?$20624$1a@gJ)
              (flodd? . g$flodd?$26655$1a@gJ)
              (flnumerator . g$flnumerator$26613$1a@gJ)
              (flnegative? . g$flnegative?$26652$1a@gJ)
              (flnan? . g$flnan?$26634$1a@gJ)
              (flmod0 . g$flmod0$26625$1a@gJ)
              (flmod . g$flmod$26624$1a@gJ)
              (flmin . g$flmin$26657$1a@gJ)
              (flmax . g$flmax$26656$1a@gJ)
              (fllog . g$fllog$26641$1a@gJ)
              (flinteger? . g$flinteger?$26630$1a@gJ)
              (flinfinite? . g$flinfinite?$26633$1a@gJ)
              (flfloor . g$flfloor$26647$1a@gJ)
              (flfinite? . g$flfinite?$26631$1a@gJ)
              (flexpt . g$flexpt$26644$1a@gJ)
              (flexp . g$flexp$26643$1a@gJ)
              (fleven? . g$fleven?$26654$1a@gJ)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$26629$1a@gJ)
              (fldiv0 . g$fldiv0$26622$1a@gJ)
              (fldiv-and-mod . g$fldiv-and-mod$26626$1a@gJ)
              (fldiv . g$fldiv$26628$1a@gJ)
              (fldenominator . g$fldenominator$26612$1a@gJ)
              (flcos . g$flcos$26636$1a@gJ)
              (flceiling . g$flceiling$26645$1a@gJ)
              (flatan . g$flatan$26640$1a@gJ)
              (flasin . g$flasin$26638$1a@gJ)
              (flacos . g$flacos$26639$1a@gJ)
              (flabs . g$flabs$26650$1a@gJ)
              (fl>? . g$fl>?$26619$1a@gJ)
              (fl>=? . g$fl>=?$26620$1a@gJ)
              (fl=? . g$fl=?$26616$1a@gJ)
              (fl<? . g$fl<?$26617$1a@gJ)
              (fl<=? . g$fl<=?$26618$1a@gJ)
              (fl/ . g$fl/$26615$1a@gJ)
              (fl- . g$fl-$26614$1a@gJ)
              (fl+ . g$fl+$26610$1a@gJ)
              (fl* . g$fl*$26611$1a@gJ)
              (fixnum->flonum . g$fixnum->flonum$21646$1a@gJ)
              (fxzero? . g$fxzero?$25095$1a@gJ)
              (fxxor . g$fxxor$25079$1a@gJ)
              (fxrotate-bit-field . g$fxrotate-bit-field$25115$1a@gJ)
              (fxreverse-bit-field . g$fxreverse-bit-field$25116$1a@gJ)
              (fxpositive? . g$fxpositive?$25091$1a@gJ)
              (fxodd? . g$fxodd?$25099$1a@gJ)
              (fxnot . g$fxnot$25071$1a@gJ)
              (fxnegative? . g$fxnegative?$25093$1a@gJ)
              (fxmod0 . g$fxmod0$25084$1a@gJ)
              (fxmod . g$fxmod$25083$1a@gJ)
              (fxmin . g$fxmin$25101$1a@gJ)
              (fxmax . g$fxmax$25100$1a@gJ)
              (fxlength . g$fxlength$25068$1a@gJ)
              (fxior . g$fxior$25078$1a@gJ)
              (fxif . g$fxif$25106$1a@gJ)
              (fxfirst-bit-set . g$fxfirst-bit-set$25069$1a@gJ)
              (fxeven? . g$fxeven?$25097$1a@gJ)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$25089$1a@gJ)
              (fxdiv0 . g$fxdiv0$25087$1a@gJ)
              (fxdiv-and-mod . g$fxdiv-and-mod$25085$1a@gJ)
              (fxdiv . g$fxdiv$25081$1a@gJ)
              (fxcopy-bit-field . g$fxcopy-bit-field$25112$1a@gJ)
              (fxcopy-bit . g$fxcopy-bit$25108$1a@gJ)
              (fxbit-set? . g$fxbit-set?$25070$1a@gJ)
              (fxbit-field . g$fxbit-field$25110$1a@gJ)
              (fxbit-count . g$fxbit-count$25066$1a@gJ)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$25114$1a@gJ)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$25113$1a@gJ)
              (fxarithmetic-shift . g$fxarithmetic-shift$25064$1a@gJ)
              (fxand . g$fxand$25077$1a@gJ)
              (fx>? . g$fx>?$25075$1a@gJ)
              (fx>=? . g$fx>=?$25076$1a@gJ)
              (fx=? . g$fx=?$25072$1a@gJ)
              (fx<? . g$fx<?$25073$1a@gJ)
              (fx<=? . g$fx<=?$25074$1a@gJ)
              (fx-/carry . g$fx-/carry$25103$1a@gJ)
              (fx- . g$fx-$25061$1a@gJ)
              (fx+/carry . g$fx+/carry$25104$1a@gJ)
              (fx+ . g$fx+$25059$1a@gJ)
              (fx*/carry . g$fx*/carry$25102$1a@gJ)
              (fx* . g$fx*$25060$1a@gJ)
              (greatest-fixnum . g$greatest-fixnum$25057$1a@gJ)
              (least-fixnum . g$least-fixnum$25058$1a@gJ)
              (fixnum-width . g$fixnum-width$20625$1a@gJ)
              (fixnum? . g$fixnum?$20623$1a@gJ)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$22826$1a@gJ)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$22827$1a@gJ)
              (bitwise-length . g$bitwise-length$22817$1a@gJ)
              (bitwise-if . g$bitwise-if$22820$1a@gJ)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$22818$1a@gJ)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$22823$1a@gJ)
              (bitwise-copy-bit . g$bitwise-copy-bit$22821$1a@gJ)
              (bitwise-bit-set? . g$bitwise-bit-set?$22819$1a@gJ)
              (bitwise-bit-field . g$bitwise-bit-field$22822$1a@gJ)
              (bitwise-bit-count . g$bitwise-bit-count$22816$1a@gJ)
              (bitwise-xor . g$bitwise-xor$22815$1a@gJ)
              (bitwise-ior . g$bitwise-ior$22814$1a@gJ)
              (bitwise-and . g$bitwise-and$22813$1a@gJ)
              (bitwise-not . g$bitwise-not$22812$1a@gJ)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$22825$1a@gJ)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$22824$1a@gJ)
              (zero? . g$zero?$21660$1a@gJ)
              (vector? . g$vector?$20618$1a@gJ)
              (vector-set! . g$vector-set!$20650$1a@gJ)
              (vector-ref . g$vector-ref$20649$1a@gJ)
              (vector-map . g$vector-map$20707$1a@gJ)
              (vector-length . g$vector-length$20652$1a@gJ)
              (vector-for-each . g$vector-for-each$20708$1a@gJ)
              (vector-fill! . g$vector-fill!$20653$1a@gJ)
              (vector->list . g$vector->list$20654$1a@gJ)
              (truncate . g$truncate$21698$1a@gJ)
              (tan . g$tan$21690$1a@gJ)
              (symbol? . g$symbol?$20620$1a@gJ)
              (symbol=? . g$symbol=?$20697$1a@gJ)
              (symbol->string . g$symbol->string$20640$1a@gJ)
              (substring . g$substring$20637$1a@gJ)
              (string? . g$string?$20616$1a@gJ)
              (string>? . g$string>?$20694$1a@gJ)
              (string>=? . g$string>=?$20696$1a@gJ)
              (string=? . g$string=?$20692$1a@gJ)
              (string<? . g$string<?$20693$1a@gJ)
              (string<=? . g$string<=?$20695$1a@gJ)
              (string-ref . g$string-ref$20629$1a@gJ)
              (string-length . g$string-length$20632$1a@gJ)
              (string-for-each . g$string-for-each$20709$1a@gJ)
              (string-copy . g$string-copy$20636$1a@gJ)
              (string-append . g$string-append$20638$1a@gJ)
              (string->symbol . g$string->symbol$20641$1a@gJ)
              (string->list . g$string->list$20635$1a@gJ)
              (string . g$string$20634$1a@gJ)
              (sqrt . g$sqrt$21700$1a@gJ)
              (sin . g$sin$21684$1a@gJ)
              (round . g$round$21699$1a@gJ)
              (reverse . g$reverse$20656$1a@gJ)
              (real? . g$real?$21654$1a@gJ)
              (real-valued? . g$real-valued?$21657$1a@gJ)
              (real-part . g$real-part$21681$1a@gJ)
              (rationalize . g$rationalize$20704$1a@gJ)
              (rational? . g$rational?$21655$1a@gJ)
              (rational-valued? . g$rational-valued?$21658$1a@gJ)
              (procedure? . g$procedure?$20622$1a@gJ)
              (positive? . g$positive?$21661$1a@gJ)
              (odd? . g$odd?$20686$1a@gJ)
              (numerator . g$numerator$21679$1a@gJ)
              (number? . g$number?$21647$1a@gJ)
              (number->string . g$number->string$21668$1a@gJ)
              (negative? . g$negative?$21662$1a@gJ)
              (nan? . g$nan?$21648$1a@gJ)
              (min . g$min$20688$1a@gJ)
              (max . g$max$20687$1a@gJ)
              (map . g$map$20195$1a@gJ)
              (make-vector . g$make-vector$20651$1a@gJ)
              (make-string . g$make-string$20628$1a@gJ)
              (make-rectangular . g$make-rectangular$21674$1a@gJ)
              (make-polar . g$make-polar$21675$1a@gJ)
              (magnitude . g$magnitude$21677$1a@gJ)
              (log . g$log$21693$1a@gJ)
              (list-tail . g$list-tail$20175$1a@gJ)
              (list-ref . g$list-ref$20176$1a@gJ)
              (list->vector . g$list->vector$20647$1a@gJ)
              (list->string . g$list->string$20648$1a@gJ)
              (lcm . g$lcm$20690$1a@gJ)
              (integer? . g$integer?$21656$1a@gJ)
              (integer-valued? . g$integer-valued?$21659$1a@gJ)
              (integer->char . g$integer->char$20627$1a@gJ)
              (infinite? . g$infinite?$21650$1a@gJ)
              (inexact? . g$inexact?$21652$1a@gJ)
              (inexact . g$inexact$21663$1a@gJ)
              (imag-part . g$imag-part$21682$1a@gJ)
              (gcd . g$gcd$20689$1a@gJ)
              (for-each . g$for-each$20196$1a@gJ)
              (floor . g$floor$21696$1a@gJ)
              (finite? . g$finite?$21649$1a@gJ)
              (expt . g$expt$21702$1a@gJ)
              (exp . g$exp$21683$1a@gJ)
              (exact? . g$exact?$21651$1a@gJ)
              (exact-integer-sqrt . g$exact-integer-sqrt$21701$1a@gJ)
              (exact . g$exact$21664$1a@gJ)
              (even? . g$even?$20685$1a@gJ)
              (equal? . g$equal?$27047$1a@gJ)
              (div0-and-mod0 . g$div0-and-mod0$20646$1a@gJ)
              (mod0 . g$mod0$20644$1a@gJ)
              (div0 . g$div0$20642$1a@gJ)
              (div-and-mod . g$div-and-mod$20645$1a@gJ)
              (mod . g$mod$20643$1a@gJ)
              (div . g$div$21694$1a@gJ)
              (denominator . g$denominator$21680$1a@gJ)
              (cos . g$cos$21687$1a@gJ)
              (complex? . g$complex?$21653$1a@gJ)
              (char? . g$char?$20617$1a@gJ)
              (char>? . g$char>?$20701$1a@gJ)
              (char>=? . g$char>=?$20703$1a@gJ)
              (char=? . g$char=?$20699$1a@gJ)
              (char<? . g$char<?$20700$1a@gJ)
              (char<=? . g$char<=?$20702$1a@gJ)
              (char->integer . g$char->integer$20626$1a@gJ)
              (ceiling . g$ceiling$21697$1a@gJ)
              (cddddr . g$cddddr$20684$1a@gJ)
              (cdddar . g$cdddar$20683$1a@gJ)
              (cddadr . g$cddadr$20682$1a@gJ)
              (cddaar . g$cddaar$20681$1a@gJ)
              (cdaddr . g$cdaddr$20680$1a@gJ)
              (cdadar . g$cdadar$20679$1a@gJ)
              (cdaadr . g$cdaadr$20678$1a@gJ)
              (cdaaar . g$cdaaar$20677$1a@gJ)
              (cadddr . g$cadddr$20676$1a@gJ)
              (caddar . g$caddar$20675$1a@gJ)
              (cadadr . g$cadadr$20674$1a@gJ)
              (cadaar . g$cadaar$20673$1a@gJ)
              (caaddr . g$caaddr$20672$1a@gJ)
              (caadar . g$caadar$20671$1a@gJ)
              (caaadr . g$caaadr$20670$1a@gJ)
              (caaaar . g$caaaar$20669$1a@gJ)
              (cdddr . g$cdddr$20668$1a@gJ)
              (cddar . g$cddar$20667$1a@gJ)
              (cdadr . g$cdadr$20666$1a@gJ)
              (cdaar . g$cdaar$20665$1a@gJ)
              (caddr . g$caddr$20664$1a@gJ)
              (cadar . g$cadar$20663$1a@gJ)
              (caadr . g$caadr$20662$1a@gJ)
              (caaar . g$caaar$20661$1a@gJ)
              (cddr . g$cddr$20660$1a@gJ)
              (cdar . g$cdar$20659$1a@gJ)
              (cadr . g$cadr$20658$1a@gJ)
              (caar . g$caar$20657$1a@gJ)
              (boolean? . g$boolean?$20621$1a@gJ)
              (boolean=? . g$boolean=?$20698$1a@gJ)
              (atan . g$atan$21692$1a@gJ)
              (asin . g$asin$21685$1a@gJ)
              (append . g$append$20200$1a@gJ)
              (angle . g$angle$21676$1a@gJ)
              (acos . g$acos$21688$1a@gJ)
              (abs . g$abs$21695$1a@gJ)
              (>= . g$>=$21673$1a@gJ)
              (> . g$>$21672$1a@gJ)
              (= . g$=$21669$1a@gJ)
              (<= . g$<=$21671$1a@gJ)
              (< . g$<$21670$1a@gJ)
              (enum-set? . g$enum?$26878$1a@gJ)
              (make-promise . g$make-promise$22433$1a@gJ)
              (load/unload . g$load/unload$32705$1a@gJ)
              (load/args . g$load/args$32704$1a@gJ)
              (printf . g$printf$26933$1a@gJ)
              (fprintf . g$fprintf$26934$1a@gJ)
              (format . g$format$26935$1a@gJ)
              (trace-printer . g$trace-printer$32699$1a@gJ)
              (make-traced-macro . g$make-traced-macro$26939$1a@gJ)
              (assertion-error . g$assertion-error$32618$1a@gJ)
              (make-parameter . g$make-parameter$27252$1a@gJ)
              (environment-bindings
                .
                g$environment-bindings$32595$1a@gJ)
              (environment-symbols . g$environment-symbols$32598$1a@gJ)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$32594$1a@gJ)
              (library-path . g$library-path$28099$1a@gJ)
              (make-compile-time-value
                .
                g$make-compile-time-value$32444$1a@gJ)
              (expand->core . g$expand->core$32604$1a@gJ)
              (expand . g$expand$32602$1a@gJ)
              (emacs-mode? . g$emacs-mode?$32702$1a@gJ)
              (syntax-transpose . g$syntax-transpose$32551$1a@gJ)
              (convert->cps . g$convert->cps$27780$1a@gJ)
              (condition-stacktrace
                .
                g$condition-stacktrace$22225$1a@gJ)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$22224$1a@gJ)
              (stacktrace-enable? . g$stacktrace-enable?$32700$1a@gJ)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$22222$1a@gJ)
              (condition-where . g$condition-where$22215$1a@gJ)
              (where-condition? . g$where-condition?$22214$1a@gJ)
              (make-where-condition
                .
                g$make-where-condition$22212$1a@gJ)
              (installed-libraries . g$installed-libraries$28120$1a@gJ)
              (uninstall-library . g$uninstall-library$28111$1a@gJ)
              (pretty-gensyms . g$pretty-gensyms$27460$1a@gJ)
              (pretty-width . g$pretty-width$27457$1a@gJ)
              (pretty-print . g$pretty-print$27462$1a@gJ)))))))
    (g$install-library$28115$1a@gJ
      'g$13993$1a@gJ
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$6315$1a@gJ)
        (cosh . g$6313$1a@gJ)
        (sinh . g$6310$1a@gJ)
        (make-guid . g$13986$1a@gJ)
        (unspecified? . g$13985$1a@gJ)
        (make-list . g$5374$1a@gJ)
        (last-pair . g$5373$1a@gJ)
        (load-r5rs . g$13984$1a@gJ)
        (license . g$13983$1a@gJ)
        (stacktrace . g$13982$1a@gJ)
        (ironscheme-test . g$13589$1a@gJ)
        (ironscheme-build . g$13590$1a@gJ)
        (remove-location . g$13966$1a@gJ)
        (set-symbol-value! . g$13965$1a@gJ)
        (symbol-value . g$13964$1a@gJ)
        (symbol-bound? . g$13963$1a@gJ)
        (ungensym . g$13962$1a@gJ)
        (gensym . g$13961$1a@gJ)
        (void . g$13960$1a@gJ)
        (compile-system-libraries . g$13594$1a@gJ)
        (compile->closure . g$13596$1a@gJ)
        (compile . g$13595$1a@gJ)
        (load . g$13588$1a@gJ)
        (new-interaction-environment . g$10567$1a@gJ)
        (interaction-environment . g$10568$1a@gJ)
        (string-upcase . g$13955$1a@gJ)
        (string-titlecase . g$7112$1a@gJ)
        (string-normalize-nfkd . g$7132$1a@gJ)
        (string-normalize-nfkc . g$7131$1a@gJ)
        (string-normalize-nfd . g$7130$1a@gJ)
        (string-normalize-nfc . g$7129$1a@gJ)
        (string-foldcase . g$7113$1a@gJ)
        (string-downcase . g$13954$1a@gJ)
        (string-ci>? . g$7109$1a@gJ)
        (string-ci>=? . g$7111$1a@gJ)
        (string-ci=? . g$7107$1a@gJ)
        (string-ci<? . g$7108$1a@gJ)
        (string-ci<=? . g$7110$1a@gJ)
        (char-whitespace? . g$7089$1a@gJ)
        (char-upper-case? . g$7090$1a@gJ)
        (char-title-case? . g$7092$1a@gJ)
        (char-numeric? . g$7088$1a@gJ)
        (char-lower-case? . g$7091$1a@gJ)
        (char-general-category . g$7093$1a@gJ)
        (char-upcase . g$7083$1a@gJ)
        (char-titlecase . g$7085$1a@gJ)
        (char-foldcase . g$7086$1a@gJ)
        (char-downcase . g$7084$1a@gJ)
        (char-ci>? . g$7121$1a@gJ)
        (char-ci>=? . g$7123$1a@gJ)
        (char-ci=? . g$7119$1a@gJ)
        (char-ci<? . g$7120$1a@gJ)
        (char-ci<=? . g$7122$1a@gJ)
        (char-alphabetic? . g$7087$1a@gJ)
        (make-variable-transformer . g$10241$1a@gJ)
        (identifier? . g$10562$1a@gJ)
        (generate-temporaries . g$10550$1a@gJ)
        (free-identifier=? . g$10551$1a@gJ)
        (syntax->datum . g$10564$1a@gJ)
        (datum->syntax . g$10563$1a@gJ)
        (bound-identifier=? . g$10552$1a@gJ)
        (record-type-descriptor? . g$13953$1a@gJ)
        (record-predicate . g$13952$1a@gJ)
        (record-mutator . g$13951$1a@gJ)
        (record-constructor . g$13950$1a@gJ)
        (record-accessor . g$13949$1a@gJ)
        (make-record-type-descriptor . g$13948$1a@gJ)
        (make-record-constructor-descriptor . g$13947$1a@gJ)
        (record? . g$13946$1a@gJ)
        (record-type-uid . g$13945$1a@gJ)
        (record-type-sealed? . g$13944$1a@gJ)
        (record-type-parent . g$13943$1a@gJ)
        (record-type-opaque? . g$13942$1a@gJ)
        (record-type-name . g$13941$1a@gJ)
        (record-type-generative? . g$13940$1a@gJ)
        (record-type-field-names . g$13939$1a@gJ)
        (record-rtd . g$13938$1a@gJ)
        (record-field-mutable? . g$13937$1a@gJ)
        (delete-file . g$5935$1a@gJ)
        (file-exists? . g$5934$1a@gJ)
        (vector-sort! . g$13936$1a@gJ)
        (vector-sort . g$13935$1a@gJ)
        (list-sort . g$7056$1a@gJ)
        (symbol-hash . g$5905$1a@gJ)
        (string-ci-hash . g$5904$1a@gJ)
        (string-hash . g$5903$1a@gJ)
        (equal-hash . g$13934$1a@gJ)
        (hashtable-equivalence-function . g$13933$1a@gJ)
        (make-hashtable . g$13932$1a@gJ)
        (hashtable-hash-function . g$13931$1a@gJ)
        (make-eqv-hashtable . g$5895$1a@gJ)
        (make-eq-hashtable . g$5894$1a@gJ)
        (hashtable? . g$5893$1a@gJ)
        (hashtable-update! . g$5901$1a@gJ)
        (hashtable-size . g$5896$1a@gJ)
        (hashtable-set! . g$5898$1a@gJ)
        (hashtable-ref . g$5897$1a@gJ)
        (hashtable-mutable? . g$13930$1a@gJ)
        (hashtable-keys . g$13929$1a@gJ)
        (hashtable-entries . g$13928$1a@gJ)
        (hashtable-delete! . g$5899$1a@gJ)
        (hashtable-copy . g$13927$1a@gJ)
        (hashtable-contains? . g$5900$1a@gJ)
        (hashtable-clear! . g$5902$1a@gJ)
        (call-with-output-file . g$8953$1a@gJ)
        (call-with-input-file . g$8952$1a@gJ)
        (write-char . g$8944$1a@gJ)
        (write . g$13926$1a@gJ)
        (with-output-to-file . g$8951$1a@gJ)
        (with-input-from-file . g$8950$1a@gJ)
        (read-char . g$8943$1a@gJ)
        (read . g$13925$1a@gJ)
        (peek-char . g$8942$1a@gJ)
        (open-output-file . g$13924$1a@gJ)
        (open-input-file . g$13923$1a@gJ)
        (newline . g$8954$1a@gJ)
        (display . g$13922$1a@gJ)
        (close-output-port . g$13921$1a@gJ)
        (close-input-port . g$13920$1a@gJ)
        (eof-object? . g$13919$1a@gJ)
        (eof-object . g$13918$1a@gJ)
        (current-error-port . g$13917$1a@gJ)
        (current-output-port . g$13916$1a@gJ)
        (current-input-port . g$13915$1a@gJ)
        (output-port? . g$13914$1a@gJ)
        (input-port? . g$13913$1a@gJ)
        (utf-8-codec . g$13912$1a@gJ)
        (utf-16-codec . g$13911$1a@gJ)
        (transcoder-error-handling-mode . g$13910$1a@gJ)
        (transcoder-eol-style . g$13909$1a@gJ)
        (transcoder-codec . g$13908$1a@gJ)
        (transcoded-port . g$13907$1a@gJ)
        (textual-port? . g$13906$1a@gJ)
        (string->bytevector . g$13905$1a@gJ)
        (standard-output-port . g$8918$1a@gJ)
        (standard-input-port . g$8917$1a@gJ)
        (standard-error-port . g$8916$1a@gJ)
        (set-port-position! . g$13904$1a@gJ)
        (put-u8 . g$13903$1a@gJ)
        (put-string . g$13902$1a@gJ)
        (put-datum . g$8921$1a@gJ)
        (put-char . g$13901$1a@gJ)
        (put-bytevector . g$13900$1a@gJ)
        (port? . g$8926$1a@gJ)
        (port-transcoder . g$13899$1a@gJ)
        (port-position . g$13898$1a@gJ)
        (port-has-set-port-position!? . g$13897$1a@gJ)
        (port-has-port-position? . g$13896$1a@gJ)
        (port-eof? . g$13895$1a@gJ)
        (output-port-buffer-mode . g$13894$1a@gJ)
        (open-string-output-port . g$8925$1a@gJ)
        (open-string-input-port . g$13893$1a@gJ)
        (open-file-output-port . g$13892$1a@gJ)
        (open-file-input/output-port . g$13891$1a@gJ)
        (open-file-input-port . g$13890$1a@gJ)
        (open-bytevector-output-port . g$13889$1a@gJ)
        (open-bytevector-input-port . g$13888$1a@gJ)
        (native-transcoder . g$13887$1a@gJ)
        (native-eol-style . g$8919$1a@gJ)
        (make-transcoder . g$13886$1a@gJ)
        (latin-1-codec . g$13885$1a@gJ)
        (make-i/o-write-error . g$6860$1a@gJ)
        (make-i/o-read-error . g$6847$1a@gJ)
        (make-i/o-port-error . g$6955$1a@gJ)
        (make-i/o-invalid-position-error . g$6873$1a@gJ)
        (make-i/o-filename-error . g$6888$1a@gJ)
        (make-i/o-file-protection-error . g$6903$1a@gJ)
        (make-i/o-file-is-read-only-error . g$6916$1a@gJ)
        (make-i/o-file-does-not-exist-error . g$6942$1a@gJ)
        (make-i/o-file-already-exists-error . g$6929$1a@gJ)
        (make-i/o-error . g$6834$1a@gJ)
        (make-i/o-encoding-error . g$6983$1a@gJ)
        (make-i/o-decoding-error . g$6970$1a@gJ)
        (make-custom-textual-output-port . g$13884$1a@gJ)
        (make-custom-textual-input/output-port . g$13883$1a@gJ)
        (make-custom-textual-input-port . g$13882$1a@gJ)
        (make-custom-binary-output-port . g$13881$1a@gJ)
        (make-custom-binary-input/output-port . g$13880$1a@gJ)
        (make-custom-binary-input-port . g$13879$1a@gJ)
        (make-bytevector . g$5955$1a@gJ)
        (lookahead-u8 . g$13878$1a@gJ)
        (lookahead-char . g$13877$1a@gJ)
        (i/o-write-error? . g$6861$1a@gJ)
        (i/o-read-error? . g$6848$1a@gJ)
        (i/o-port-error? . g$6957$1a@gJ)
        (i/o-invalid-position-error? . g$6875$1a@gJ)
        (i/o-error-position . g$6876$1a@gJ)
        (i/o-filename-error? . g$6890$1a@gJ)
        (i/o-file-protection-error? . g$6904$1a@gJ)
        (i/o-file-is-read-only-error? . g$6917$1a@gJ)
        (i/o-file-does-not-exist-error? . g$6943$1a@gJ)
        (i/o-file-already-exists-error? . g$6930$1a@gJ)
        (i/o-error? . g$6835$1a@gJ)
        (i/o-error-port . g$6958$1a@gJ)
        (i/o-error-filename . g$6891$1a@gJ)
        (i/o-encoding-error? . g$6985$1a@gJ)
        (i/o-encoding-error-char . g$6986$1a@gJ)
        (i/o-decoding-error? . g$6971$1a@gJ)
        (get-u8 . g$13876$1a@gJ)
        (get-string-n! . g$13875$1a@gJ)
        (get-string-n . g$13874$1a@gJ)
        (get-string-all . g$13873$1a@gJ)
        (get-line . g$13872$1a@gJ)
        (get-datum . g$8922$1a@gJ)
        (get-char . g$13871$1a@gJ)
        (get-bytevector-some . g$13870$1a@gJ)
        (get-bytevector-n! . g$13869$1a@gJ)
        (get-bytevector-n . g$13868$1a@gJ)
        (get-bytevector-all . g$13867$1a@gJ)
        (flush-output-port . g$13866$1a@gJ)
        (close-port . g$13865$1a@gJ)
        (call-with-string-output-port . g$8927$1a@gJ)
        (call-with-port . g$8928$1a@gJ)
        (call-with-bytevector-output-port . g$13864$1a@gJ)
        (bytevector->string . g$13863$1a@gJ)
        (buffer-mode? . g$8920$1a@gJ)
        (binary-port? . g$13862$1a@gJ)
        (scheme-report-environment . g$10540$1a@gJ)
        (quotient . g$7035$1a@gJ)
        (null-environment . g$10539$1a@gJ)
        (remainder . g$7036$1a@gJ)
        (modulo . g$7037$1a@gJ)
        (inexact->exact . g$7032$1a@gJ)
        (force . g$7039$1a@gJ)
        (exact->inexact . g$7033$1a@gJ)
        (exit . g$13861$1a@gJ)
        (command-line . g$13583$1a@gJ)
        (string-fill! . g$5567$1a@gJ)
        (string-set! . g$5566$1a@gJ)
        (set-cdr! . g$7018$1a@gJ)
        (set-car! . g$7017$1a@gJ)
        (remove . g$5399$1a@gJ)
        (remv . g$5400$1a@gJ)
        (remp . g$5377$1a@gJ)
        (remq . g$5401$1a@gJ)
        (partition . g$5376$1a@gJ)
        (memv . g$5384$1a@gJ)
        (memq . g$5383$1a@gJ)
        (memp . g$5386$1a@gJ)
        (member . g$5385$1a@gJ)
        (exists . g$5390$1a@gJ)
        (for-all . g$5389$1a@gJ)
        (fold-right . g$5398$1a@gJ)
        (fold-left . g$5397$1a@gJ)
        (find . g$5375$1a@gJ)
        (filter . g$5378$1a@gJ)
        (cons* . g$5393$1a@gJ)
        (assv . g$5380$1a@gJ)
        (assq . g$5379$1a@gJ)
        (assp . g$5382$1a@gJ)
        (assoc . g$5381$1a@gJ)
        (with-exception-handler . g$13860$1a@gJ)
        (raise-continuable . g$13859$1a@gJ)
        (raise . g$13858$1a@gJ)
        (eval . g$10542$1a@gJ)
        (environment . g$10538$1a@gJ)
        (make-enumeration . g$9014$1a@gJ)
        (enum-set=? . g$9021$1a@gJ)
        (enum-set-universe . g$9015$1a@gJ)
        (enum-set-union . g$9022$1a@gJ)
        (enum-set-subset? . g$9020$1a@gJ)
        (enum-set-projection . g$9026$1a@gJ)
        (enum-set-member? . g$9019$1a@gJ)
        (enum-set-intersection . g$9023$1a@gJ)
        (enum-set-indexer . g$9016$1a@gJ)
        (enum-set-difference . g$9024$1a@gJ)
        (enum-set-constructor . g$9017$1a@gJ)
        (enum-set-complement . g$9025$1a@gJ)
        (enum-set->list . g$9018$1a@gJ)
        (who-condition? . g$6722$1a@gJ)
        (warning? . g$6641$1a@gJ)
        (violation? . g$6680$1a@gJ)
        (undefined-violation? . g$6822$1a@gJ)
        (syntax-violation? . g$6807$1a@gJ)
        (syntax-violation-subform . g$6809$1a@gJ)
        (syntax-violation-form . g$6808$1a@gJ)
        (syntax-violation . g$10561$1a@gJ)
        (simple-conditions . g$13857$1a@gJ)
        (serious-condition? . g$6654$1a@gJ)
        (non-continuable-violation? . g$6766$1a@gJ)
        (message-condition? . g$6627$1a@gJ)
        (make-who-condition . g$6720$1a@gJ)
        (make-warning . g$6640$1a@gJ)
        (make-violation . g$6679$1a@gJ)
        (make-undefined-violation . g$6821$1a@gJ)
        (make-syntax-violation . g$6804$1a@gJ)
        (make-serious-condition . g$6653$1a@gJ)
        (make-non-continuable-violation . g$6765$1a@gJ)
        (make-message-condition . g$6625$1a@gJ)
        (make-lexical-violation . g$6791$1a@gJ)
        (make-irritants-condition . g$6705$1a@gJ)
        (make-implementation-restriction-violation . g$6778$1a@gJ)
        (make-error . g$6666$1a@gJ)
        (make-assertion-violation . g$6692$1a@gJ)
        (lexical-violation? . g$6792$1a@gJ)
        (irritants-condition? . g$6707$1a@gJ)
        (implementation-restriction-violation? . g$6779$1a@gJ)
        (error? . g$6667$1a@gJ)
        (condition-who . g$6723$1a@gJ)
        (condition-predicate . g$13856$1a@gJ)
        (condition-message . g$6628$1a@gJ)
        (condition-irritants . g$6708$1a@gJ)
        (condition-accessor . g$13855$1a@gJ)
        (condition . g$13854$1a@gJ)
        (assertion-violation? . g$6693$1a@gJ)
        (condition? . g$13853$1a@gJ)
        (utf32->string . g$5973$1a@gJ)
        (utf16->string . g$5972$1a@gJ)
        (utf8->string . g$5970$1a@gJ)
        (uint-list->bytevector . g$5974$1a@gJ)
        (u8-list->bytevector . g$5966$1a@gJ)
        (string->utf8 . g$5967$1a@gJ)
        (string->utf32 . g$5969$1a@gJ)
        (string->utf16 . g$5968$1a@gJ)
        (sint-list->bytevector . g$5975$1a@gJ)
        (native-endianness . g$5941$1a@gJ)
        (bytevector? . g$5555$1a@gJ)
        (bytevector=? . g$5957$1a@gJ)
        (bytevector-uint-set! . g$13852$1a@gJ)
        (bytevector-uint-ref . g$13851$1a@gJ)
        (bytevector-u8-set! . g$5962$1a@gJ)
        (bytevector-u8-ref . g$5961$1a@gJ)
        (bytevector-u64-set! . g$6003$1a@gJ)
        (bytevector-u64-ref . g$5999$1a@gJ)
        (bytevector-u64-native-set! . g$6005$1a@gJ)
        (bytevector-u64-native-ref . g$6001$1a@gJ)
        (bytevector-u32-set! . g$5995$1a@gJ)
        (bytevector-u32-ref . g$5991$1a@gJ)
        (bytevector-u32-native-set! . g$5997$1a@gJ)
        (bytevector-u32-native-ref . g$5993$1a@gJ)
        (bytevector-u16-set! . g$5987$1a@gJ)
        (bytevector-u16-ref . g$5983$1a@gJ)
        (bytevector-u16-native-set! . g$5989$1a@gJ)
        (bytevector-u16-native-ref . g$5985$1a@gJ)
        (bytevector-sint-set! . g$13850$1a@gJ)
        (bytevector-sint-ref . g$13849$1a@gJ)
        (bytevector-s8-set! . g$5964$1a@gJ)
        (bytevector-s8-ref . g$5963$1a@gJ)
        (bytevector-s64-set! . g$6004$1a@gJ)
        (bytevector-s64-ref . g$6000$1a@gJ)
        (bytevector-s64-native-set! . g$6006$1a@gJ)
        (bytevector-s64-native-ref . g$6002$1a@gJ)
        (bytevector-s32-set! . g$5996$1a@gJ)
        (bytevector-s32-ref . g$5992$1a@gJ)
        (bytevector-s32-native-set! . g$5998$1a@gJ)
        (bytevector-s32-native-ref . g$5994$1a@gJ)
        (bytevector-s16-set! . g$5988$1a@gJ)
        (bytevector-s16-ref . g$5984$1a@gJ)
        (bytevector-s16-native-set! . g$5990$1a@gJ)
        (bytevector-s16-native-ref . g$5986$1a@gJ)
        (bytevector-length . g$5956$1a@gJ)
        (bytevector-ieee-single-set! . g$5981$1a@gJ)
        (bytevector-ieee-single-ref . g$5979$1a@gJ)
        (bytevector-ieee-single-native-set! . g$6009$1a@gJ)
        (bytevector-ieee-single-native-ref . g$6007$1a@gJ)
        (bytevector-ieee-double-set! . g$5982$1a@gJ)
        (bytevector-ieee-double-ref . g$5980$1a@gJ)
        (bytevector-ieee-double-native-set! . g$6010$1a@gJ)
        (bytevector-ieee-double-native-ref . g$6008$1a@gJ)
        (bytevector-fill! . g$5958$1a@gJ)
        (bytevector-copy! . g$5959$1a@gJ)
        (bytevector-copy . g$5960$1a@gJ)
        (bytevector->uint-list . g$5976$1a@gJ)
        (bytevector->u8-list . g$5965$1a@gJ)
        (bytevector->sint-list . g$5977$1a@gJ)
        (no-nans-violation? . g$7012$1a@gJ)
        (no-infinities-violation? . g$6999$1a@gJ)
        (make-no-nans-violation . g$7011$1a@gJ)
        (make-no-infinities-violation . g$6998$1a@gJ)
        (real->flonum . g$6255$1a@gJ)
        (flzero? . g$8358$1a@gJ)
        (fltruncate . g$8353$1a@gJ)
        (fltan . g$8339$1a@gJ)
        (flsqrt . g$8344$1a@gJ)
        (flsin . g$8337$1a@gJ)
        (flround . g$8354$1a@gJ)
        (flpositive? . g$8356$1a@gJ)
        (flonum? . g$5560$1a@gJ)
        (flodd? . g$8360$1a@gJ)
        (flnumerator . g$8303$1a@gJ)
        (flnegative? . g$8357$1a@gJ)
        (flnan? . g$8336$1a@gJ)
        (flmod0 . g$8321$1a@gJ)
        (flmod . g$8320$1a@gJ)
        (flmin . g$8362$1a@gJ)
        (flmax . g$8361$1a@gJ)
        (fllog . g$8343$1a@gJ)
        (flinteger? . g$8329$1a@gJ)
        (flinfinite? . g$8335$1a@gJ)
        (flfloor . g$8352$1a@gJ)
        (flfinite? . g$8330$1a@gJ)
        (flexpt . g$8346$1a@gJ)
        (flexp . g$8345$1a@gJ)
        (fleven? . g$8359$1a@gJ)
        (fldiv0-and-mod0 . g$8328$1a@gJ)
        (fldiv0 . g$8315$1a@gJ)
        (fldiv-and-mod . g$8322$1a@gJ)
        (fldiv . g$8327$1a@gJ)
        (fldenominator . g$8302$1a@gJ)
        (flcos . g$8338$1a@gJ)
        (flceiling . g$8347$1a@gJ)
        (flatan . g$8342$1a@gJ)
        (flasin . g$8340$1a@gJ)
        (flacos . g$8341$1a@gJ)
        (flabs . g$8355$1a@gJ)
        (fl>? . g$8309$1a@gJ)
        (fl>=? . g$8310$1a@gJ)
        (fl=? . g$8306$1a@gJ)
        (fl<? . g$8307$1a@gJ)
        (fl<=? . g$8308$1a@gJ)
        (fl/ . g$8305$1a@gJ)
        (fl- . g$8304$1a@gJ)
        (fl+ . g$8300$1a@gJ)
        (fl* . g$8301$1a@gJ)
        (fixnum->flonum . g$6256$1a@gJ)
        (fxzero? . g$7403$1a@gJ)
        (fxxor . g$7366$1a@gJ)
        (fxrotate-bit-field . g$7441$1a@gJ)
        (fxreverse-bit-field . g$7442$1a@gJ)
        (fxpositive? . g$7393$1a@gJ)
        (fxodd? . g$7413$1a@gJ)
        (fxnot . g$7347$1a@gJ)
        (fxnegative? . g$7398$1a@gJ)
        (fxmod0 . g$7377$1a@gJ)
        (fxmod . g$7376$1a@gJ)
        (fxmin . g$7415$1a@gJ)
        (fxmax . g$7414$1a@gJ)
        (fxlength . g$7344$1a@gJ)
        (fxior . g$7365$1a@gJ)
        (fxif . g$7423$1a@gJ)
        (fxfirst-bit-set . g$7345$1a@gJ)
        (fxeven? . g$7408$1a@gJ)
        (fxdiv0-and-mod0 . g$7388$1a@gJ)
        (fxdiv0 . g$7383$1a@gJ)
        (fxdiv-and-mod . g$7378$1a@gJ)
        (fxdiv . g$7371$1a@gJ)
        (fxcopy-bit-field . g$7438$1a@gJ)
        (fxcopy-bit . g$7428$1a@gJ)
        (fxbit-set? . g$7346$1a@gJ)
        (fxbit-field . g$7433$1a@gJ)
        (fxbit-count . g$7339$1a@gJ)
        (fxarithmetic-shift-right . g$7440$1a@gJ)
        (fxarithmetic-shift-left . g$7439$1a@gJ)
        (fxarithmetic-shift . g$7334$1a@gJ)
        (fxand . g$7364$1a@gJ)
        (fx>? . g$7356$1a@gJ)
        (fx>=? . g$7357$1a@gJ)
        (fx=? . g$7353$1a@gJ)
        (fx<? . g$7354$1a@gJ)
        (fx<=? . g$7355$1a@gJ)
        (fx-/carry . g$7417$1a@gJ)
        (fx- . g$7328$1a@gJ)
        (fx+/carry . g$7418$1a@gJ)
        (fx+ . g$7326$1a@gJ)
        (fx*/carry . g$7416$1a@gJ)
        (fx* . g$7327$1a@gJ)
        (greatest-fixnum . g$7297$1a@gJ)
        (least-fixnum . g$7298$1a@gJ)
        (fixnum-width . g$5561$1a@gJ)
        (fixnum? . g$5559$1a@gJ)
        (bitwise-rotate-bit-field . g$7227$1a@gJ)
        (bitwise-reverse-bit-field . g$7228$1a@gJ)
        (bitwise-length . g$7218$1a@gJ)
        (bitwise-if . g$7221$1a@gJ)
        (bitwise-first-bit-set . g$7219$1a@gJ)
        (bitwise-copy-bit-field . g$7224$1a@gJ)
        (bitwise-copy-bit . g$7222$1a@gJ)
        (bitwise-bit-set? . g$7220$1a@gJ)
        (bitwise-bit-field . g$7223$1a@gJ)
        (bitwise-bit-count . g$7217$1a@gJ)
        (bitwise-xor . g$7216$1a@gJ)
        (bitwise-ior . g$7215$1a@gJ)
        (bitwise-and . g$7214$1a@gJ)
        (bitwise-not . g$7213$1a@gJ)
        (bitwise-arithmetic-shift-right . g$7226$1a@gJ)
        (bitwise-arithmetic-shift-left . g$7225$1a@gJ)
        (bitwise-arithmetic-shift . g$13848$1a@gJ)
        (zero? . g$6270$1a@gJ)
        (vector? . g$5554$1a@gJ)
        (vector-set! . g$5586$1a@gJ)
        (vector-ref . g$5585$1a@gJ)
        (vector-map . g$5653$1a@gJ)
        (vector-length . g$5588$1a@gJ)
        (vector-for-each . g$5654$1a@gJ)
        (vector-fill! . g$5589$1a@gJ)
        (vector->list . g$5590$1a@gJ)
        (vector . g$13847$1a@gJ)
        (values . g$13846$1a@gJ)
        (truncate . g$6322$1a@gJ)
        (tan . g$6314$1a@gJ)
        (symbol? . g$5556$1a@gJ)
        (symbol=? . g$5638$1a@gJ)
        (symbol->string . g$5576$1a@gJ)
        (substring . g$5573$1a@gJ)
        (string? . g$5552$1a@gJ)
        (string>? . g$5635$1a@gJ)
        (string>=? . g$5637$1a@gJ)
        (string=? . g$5633$1a@gJ)
        (string<? . g$5634$1a@gJ)
        (string<=? . g$5636$1a@gJ)
        (string-ref . g$5565$1a@gJ)
        (string-length . g$5568$1a@gJ)
        (string-for-each . g$5655$1a@gJ)
        (string-copy . g$5572$1a@gJ)
        (string-append . g$5574$1a@gJ)
        (string->symbol . g$5577$1a@gJ)
        (string->number . g$13845$1a@gJ)
        (string->list . g$5571$1a@gJ)
        (string . g$5570$1a@gJ)
        (sqrt . g$6324$1a@gJ)
        (sin . g$6308$1a@gJ)
        (round . g$6323$1a@gJ)
        (reverse . g$5592$1a@gJ)
        (real? . g$6264$1a@gJ)
        (real-valued? . g$6267$1a@gJ)
        (real-part . g$6301$1a@gJ)
        (rationalize . g$5650$1a@gJ)
        (rational? . g$6265$1a@gJ)
        (rational-valued? . g$6268$1a@gJ)
        (procedure? . g$5558$1a@gJ)
        (positive? . g$6271$1a@gJ)
        (pair? . g$13844$1a@gJ)
        (odd? . g$5622$1a@gJ)
        (numerator . g$6299$1a@gJ)
        (number? . g$6257$1a@gJ)
        (number->string . g$6278$1a@gJ)
        (null? . g$13843$1a@gJ)
        (not . g$13842$1a@gJ)
        (negative? . g$6272$1a@gJ)
        (nan? . g$6258$1a@gJ)
        (min . g$5624$1a@gJ)
        (max . g$5623$1a@gJ)
        (map . g$5391$1a@gJ)
        (make-vector . g$5587$1a@gJ)
        (make-string . g$5564$1a@gJ)
        (make-rectangular . g$6294$1a@gJ)
        (make-polar . g$6295$1a@gJ)
        (magnitude . g$6297$1a@gJ)
        (log . g$6317$1a@gJ)
        (list? . g$13841$1a@gJ)
        (list-tail . g$5371$1a@gJ)
        (list-ref . g$5372$1a@gJ)
        (list->vector . g$5583$1a@gJ)
        (list->string . g$5584$1a@gJ)
        (list . g$13840$1a@gJ)
        (length . g$13839$1a@gJ)
        (lcm . g$5626$1a@gJ)
        (integer? . g$6266$1a@gJ)
        (integer-valued? . g$6269$1a@gJ)
        (integer->char . g$5563$1a@gJ)
        (infinite? . g$6260$1a@gJ)
        (inexact? . g$6262$1a@gJ)
        (inexact . g$6273$1a@gJ)
        (imag-part . g$6302$1a@gJ)
        (gcd . g$5625$1a@gJ)
        (for-each . g$5392$1a@gJ)
        (floor . g$6320$1a@gJ)
        (finite? . g$6259$1a@gJ)
        (expt . g$6326$1a@gJ)
        (exp . g$6307$1a@gJ)
        (exact? . g$6261$1a@gJ)
        (exact-integer-sqrt . g$6325$1a@gJ)
        (exact . g$6274$1a@gJ)
        (even? . g$5621$1a@gJ)
        (error . g$13838$1a@gJ)
        (eqv? . g$13837$1a@gJ)
        (equal? . g$9146$1a@gJ)
        (eq? . g$13836$1a@gJ)
        (dynamic-wind . g$13835$1a@gJ)
        (div0-and-mod0 . g$5582$1a@gJ)
        (mod0 . g$5580$1a@gJ)
        (div0 . g$5578$1a@gJ)
        (div-and-mod . g$5581$1a@gJ)
        (mod . g$5579$1a@gJ)
        (div . g$6318$1a@gJ)
        (denominator . g$6300$1a@gJ)
        (cos . g$6311$1a@gJ)
        (cons . g$13834$1a@gJ)
        (complex? . g$6263$1a@gJ)
        (char? . g$5553$1a@gJ)
        (char>? . g$5647$1a@gJ)
        (char>=? . g$5649$1a@gJ)
        (char=? . g$5645$1a@gJ)
        (char<? . g$5646$1a@gJ)
        (char<=? . g$5648$1a@gJ)
        (char->integer . g$5562$1a@gJ)
        (ceiling . g$6321$1a@gJ)
        (call-with-values . g$13833$1a@gJ)
        (call/cc . g$13832$1a@gJ)
        (call-with-current-continuation . g$13831$1a@gJ)
        (cddddr . g$5620$1a@gJ)
        (cdddar . g$5619$1a@gJ)
        (cddadr . g$5618$1a@gJ)
        (cddaar . g$5617$1a@gJ)
        (cdaddr . g$5616$1a@gJ)
        (cdadar . g$5615$1a@gJ)
        (cdaadr . g$5614$1a@gJ)
        (cdaaar . g$5613$1a@gJ)
        (cadddr . g$5612$1a@gJ)
        (caddar . g$5611$1a@gJ)
        (cadadr . g$5610$1a@gJ)
        (cadaar . g$5609$1a@gJ)
        (caaddr . g$5608$1a@gJ)
        (caadar . g$5607$1a@gJ)
        (caaadr . g$5606$1a@gJ)
        (caaaar . g$5605$1a@gJ)
        (cdddr . g$5604$1a@gJ)
        (cddar . g$5603$1a@gJ)
        (cdadr . g$5602$1a@gJ)
        (cdaar . g$5601$1a@gJ)
        (caddr . g$5600$1a@gJ)
        (cadar . g$5599$1a@gJ)
        (caadr . g$5598$1a@gJ)
        (caaar . g$5597$1a@gJ)
        (cddr . g$5596$1a@gJ)
        (cdar . g$5595$1a@gJ)
        (cadr . g$5594$1a@gJ)
        (caar . g$5593$1a@gJ)
        (cdr . g$13830$1a@gJ)
        (car . g$13829$1a@gJ)
        (boolean? . g$5557$1a@gJ)
        (boolean=? . g$5639$1a@gJ)
        (atan . g$6316$1a@gJ)
        (assertion-violation . g$13828$1a@gJ)
        (asin . g$6309$1a@gJ)
        (apply . g$13827$1a@gJ)
        (append . g$5396$1a@gJ)
        (angle . g$6296$1a@gJ)
        (acos . g$6312$1a@gJ)
        (abs . g$6319$1a@gJ)
        (/ . g$13826$1a@gJ)
        (* . g$13825$1a@gJ)
        (- . g$13824$1a@gJ)
        (+ . g$13823$1a@gJ)
        (>= . g$6293$1a@gJ)
        (> . g$6292$1a@gJ)
        (= . g$6289$1a@gJ)
        (<= . g$6291$1a@gJ)
        (< . g$6290$1a@gJ)
        (deserialize-port . g$13784$1a@gJ)
        (serialize-port . g$13783$1a@gJ)
        (enum-set? . g$8991$1a@gJ)
        (load/unload . g$13587$1a@gJ)
        (load/args . g$13586$1a@gJ)
        (printf . g$9100$1a@gJ)
        (fprintf . g$9101$1a@gJ)
        (format . g$9102$1a@gJ)
        (procedure-form . g$13782$1a@gJ)
        (procedure-environment . g$13781$1a@gJ)
        (procedure-name . g$13780$1a@gJ)
        (procedure-arity . g$13779$1a@gJ)
        (gc-collect . g$13778$1a@gJ)
        (typeof . g$13777$1a@gJ)
        (clr-type? . g$13776$1a@gJ)
        (get-clr-type . g$13775$1a@gJ)
        (vector-append . g$13773$1a@gJ)
        (vector-filter . g$13772$1a@gJ)
        (vector-reverse! . g$13771$1a@gJ)
        (vector-contains? . g$13770$1a@gJ)
        (vector-index-of . g$13769$1a@gJ)
        (vector-copy . g$13768$1a@gJ)
        (vector-binary-search . g$13767$1a@gJ)
        (string-ci-compare . g$13766$1a@gJ)
        (string-compare . g$13765$1a@gJ)
        (string-format . g$13764$1a@gJ)
        (trace-printer . g$13581$1a@gJ)
        (time-it . g$13762$1a@gJ)
        (make-parameter . g$9225$1a@gJ)
        (open-tcp-input/output-port . g$13759$1a@gJ)
        (hashtable-for-each . g$13758$1a@gJ)
        (hashtable-map . g$13757$1a@gJ)
        (environment-bindings . g$10534$1a@gJ)
        (environment-symbols . g$10537$1a@gJ)
        (interaction-environment-symbols . g$10533$1a@gJ)
        (optimization-level . g$13756$1a@gJ)
        (library-path . g$9863$1a@gJ)
        (make-compile-time-value . g$10242$1a@gJ)
        (expand->core . g$10543$1a@gJ)
        (expand . g$10541$1a@gJ)
        (emacs-mode? . g$13584$1a@gJ)
        (syntax-transpose . g$10480$1a@gJ)
        (convert->cps . g$9544$1a@gJ)
        (condition-stacktrace . g$6753$1a@gJ)
        (stacktrace-condition? . g$6752$1a@gJ)
        (stacktrace-enable? . g$13582$1a@gJ)
        (make-stacktrace-condition . g$6750$1a@gJ)
        (condition-where . g$6738$1a@gJ)
        (where-condition? . g$6737$1a@gJ)
        (make-where-condition . g$6735$1a@gJ)
        (installed-libraries . g$9884$1a@gJ)
        (uninstall-library . g$9875$1a@gJ)
        (pretty-gensyms . g$9308$1a@gJ)
        (pretty-width . g$9305$1a@gJ)
        (pretty-print . g$9310$1a@gJ)
        (pointer+ . g$13749$1a@gJ)
        (&stacktrace . g$13748$1a@gJ)
        (&where . g$13747$1a@gJ)
        (&no-nans . g$13746$1a@gJ)
        (&no-infinities . g$13745$1a@gJ)
        (&i/o-encoding . g$13744$1a@gJ)
        (&i/o-decoding . g$13743$1a@gJ)
        (&i/o-port . g$13742$1a@gJ)
        (&i/o-file-does-not-exist . g$13741$1a@gJ)
        (&i/o-file-already-exists . g$13740$1a@gJ)
        (&i/o-file-is-read-only . g$13739$1a@gJ)
        (&i/o-file-protection . g$13738$1a@gJ)
        (&i/o-filename . g$13737$1a@gJ)
        (&i/o-invalid-position . g$13736$1a@gJ)
        (&i/o-write . g$13735$1a@gJ)
        (&i/o-read . g$13734$1a@gJ)
        (&i/o . g$13733$1a@gJ)
        (&non-continuable . g$13732$1a@gJ)
        (&undefined . g$13731$1a@gJ)
        (&syntax . g$13730$1a@gJ)
        (&lexical . g$13729$1a@gJ)
        (&implementation-restriction . g$13728$1a@gJ)
        (&who . g$13727$1a@gJ)
        (&irritants . g$13726$1a@gJ)
        (&assertion . g$13725$1a@gJ)
        (&violation . g$13724$1a@gJ)
        (&error . g$13723$1a@gJ)
        (&serious . g$13722$1a@gJ)
        (&warning . g$13721$1a@gJ)
        (&message . g$13720$1a@gJ)
        (&condition . g$13719$1a@gJ)
        (define-condition-type . g$13718$1a@gJ)
        (define-enumeration . g$13717$1a@gJ)
        (define-record-type . g$13716$1a@gJ)
        (parent-rtd . g$13715$1a@gJ)
        (nongenerative . g$13714$1a@gJ)
        (opaque . g$13713$1a@gJ)
        (sealed . g$13712$1a@gJ)
        (protocol . g$13711$1a@gJ)
        (parent . g$13710$1a@gJ)
        (immutable . g$13709$1a@gJ)
        (mutable . g$13708$1a@gJ)
        (fields . g$13707$1a@gJ)
        (error-handling-mode . g$13706$1a@gJ)
        (file-options . g$13705$1a@gJ)
        (buffer-mode . g$13704$1a@gJ)
        (eol-style . g$13703$1a@gJ)
        (guard . g$13702$1a@gJ)
        (trace-letrec-syntax . g$13701$1a@gJ)
        (trace-let-syntax . g$13700$1a@gJ)
        (trace-define-syntax . g$13699$1a@gJ)
        (trace-define . g$13698$1a@gJ)
        (trace-lambda . g$13697$1a@gJ)
        (unsyntax-splicing . g$13696$1a@gJ)
        (unsyntax . g$13695$1a@gJ)
        (unquote-splicing . g$13694$1a@gJ)
        (unquote . g$13693$1a@gJ)
        (_ . g$13692$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ)
        (... . g$13689$1a@gJ)
        (assert . g$13688$1a@gJ)
        (endianness . g$13687$1a@gJ)
        (delay . g$13686$1a@gJ)
        (time . g$13685$1a@gJ)
        (or . g$13684$1a@gJ)
        (and . g$13683$1a@gJ)
        (do . g$13682$1a@gJ)
        (cond . g$13681$1a@gJ)
        (let* . g$13680$1a@gJ)
        (let . g$13679$1a@gJ)
        (identifier-syntax . g$13678$1a@gJ)
        (with-syntax . g$13677$1a@gJ)
        (quasisyntax . g$13676$1a@gJ)
        (quasiquote . g$13675$1a@gJ)
        (syntax-rules . g$13674$1a@gJ)
        (include-into . g$13673$1a@gJ)
        (include . g$13672$1a@gJ)
        (let-values . g$13670$1a@gJ)
        (let*-values . g$13669$1a@gJ)
        (record-constructor-descriptor . g$13668$1a@gJ)
        (record-type-descriptor . g$13667$1a@gJ)
        (fluid-let-syntax . g$13666$1a@gJ)
        (case . g$13665$1a@gJ)
        (parameterize . g$13664$1a@gJ)
        (unless . g$13663$1a@gJ)
        (when . g$13662$1a@gJ)
        (if . g$13661$1a@gJ)
        (letrec* . g$13660$1a@gJ)
        (letrec . g$13659$1a@gJ)
        (case-lambda . g$13657$1a@gJ)
        (lambda . g$13656$1a@gJ)
        (syntax . g$13655$1a@gJ)
        (syntax-case . g$13654$1a@gJ)
        (quote . g$13653$1a@gJ)
        (letrec-syntax . g$13651$1a@gJ)
        (let-syntax . g$13650$1a@gJ)
        (set! . g$13649$1a@gJ)
        (export . g$13648$1a@gJ)
        (import . g$13647$1a@gJ)
        (library . g$13646$1a@gJ)
        (begin . g$13645$1a@gJ)
        (module . g$13644$1a@gJ)
        (define-syntax . g$13643$1a@gJ)
        (define . g$13642$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$13994$1a@gJ
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13760$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$13995$1a@gJ
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13991$1a@gJ)
        (annotation-source . g$13990$1a@gJ)
        (annotation-expression . g$13989$1a@gJ)
        (annotation? . g$13988$1a@gJ)
        (read-annotated . g$13987$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$13996$1a@gJ
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$13959$1a@gJ)
        (serialize-library . g$13958$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$13997$1a@gJ
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$13957$1a@gJ)
        (variable-transformer-procedure . g$10244$1a@gJ)
        (variable-transformer? . g$10243$1a@gJ)
        (eqv-hash . g$13786$1a@gJ)
        (reverse! . g$13785$1a@gJ)
        (make-promise . g$7038$1a@gJ)
        (format . g$9102$1a@gJ)
        (get-command-line . g$13774$1a@gJ)
        (make-traced-procedure . g$13763$1a@gJ)
        (make-traced-macro . g$9122$1a@gJ)
        (assertion-error . g$10557$1a@gJ)
        (library-locator . g$13761$1a@gJ)
        (get-library-paths . g$13760$1a@gJ)
        (library-path . g$9863$1a@gJ)
        (inexact=? . g$13755$1a@gJ)
        (bignum-sqrt-exact . g$13754$1a@gJ)
        (bignum-sqrt . g$13753$1a@gJ)
        (flonum->string . g$13752$1a@gJ)
        (inexact-compare . g$13751$1a@gJ)
        (exact-compare . g$13750$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$13998$1a@gJ
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$13822$1a@gJ)
        ($bytevector-ref . g$13821$1a@gJ)
        ($fl>=? . g$13820$1a@gJ)
        ($fl>? . g$13819$1a@gJ)
        ($fl<=? . g$13818$1a@gJ)
        ($fl<? . g$13817$1a@gJ)
        ($fl- . g$13816$1a@gJ)
        ($fl/ . g$13815$1a@gJ)
        ($fl* . g$13814$1a@gJ)
        ($fl+ . g$13813$1a@gJ)
        ($fl=? . g$13812$1a@gJ)
        ($try . g$13811$1a@gJ)
        ($fxarithmetic-shift-right . g$13810$1a@gJ)
        ($fxarithmetic-shift-left . g$13809$1a@gJ)
        ($$fx- . g$13808$1a@gJ)
        ($$fx* . g$13807$1a@gJ)
        ($$fx+ . g$13806$1a@gJ)
        ($fxnot . g$13805$1a@gJ)
        ($fxxor . g$13804$1a@gJ)
        ($fxior . g$13803$1a@gJ)
        ($fxand . g$13802$1a@gJ)
        ($fx>=? . g$13801$1a@gJ)
        ($fx>? . g$13800$1a@gJ)
        ($fx<=? . g$13799$1a@gJ)
        ($fx<? . g$13798$1a@gJ)
        ($fx- . g$13797$1a@gJ)
        ($fxmod0 . g$13796$1a@gJ)
        ($fxdiv0 . g$13795$1a@gJ)
        ($fx* . g$13794$1a@gJ)
        ($fx+ . g$13793$1a@gJ)
        ($fx=? . g$13792$1a@gJ)
        ($vector-set! . g$13791$1a@gJ)
        ($vector-ref . g$13790$1a@gJ)
        ($cdr . g$13789$1a@gJ)
        ($car . g$13788$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$13999$1a@gJ
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13787$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14000$1a@gJ
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$13981$1a@gJ)
        (ffi-callback-internal . g$13980$1a@gJ)
        (ffi-callout-internal . g$13979$1a@gJ)
        (define-clr-class-internal . g$13978$1a@gJ)
        (clr-field-set!-internal . g$13977$1a@gJ)
        (clr-field-get-internal . g$13976$1a@gJ)
        (clr-cast-internal . g$13975$1a@gJ)
        (clr-call-internal . g$13974$1a@gJ)
        (clr-new-internal . g$13973$1a@gJ)
        (clr-new-array-internal . g$13972$1a@gJ)
        (clr-is-internal . g$13971$1a@gJ)
        (clr-reference-internal . g$13970$1a@gJ)
        (clr-using-internal . g$13969$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14001$1a@gJ
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13694$1a@gJ)
        (unquote . g$13693$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ)
        (delay . g$13686$1a@gJ)
        (or . g$13684$1a@gJ)
        (and . g$13683$1a@gJ)
        (do . g$13682$1a@gJ)
        (cond . g$13681$1a@gJ)
        (let* . g$13680$1a@gJ)
        (let . g$13679$1a@gJ)
        (quasiquote . g$13675$1a@gJ)
        (syntax-rules . g$13674$1a@gJ)
        (case . g$13665$1a@gJ)
        (if . g$13661$1a@gJ)
        (letrec . g$13659$1a@gJ)
        (lambda . g$13656$1a@gJ)
        (quote . g$13653$1a@gJ)
        (letrec-syntax . g$13651$1a@gJ)
        (let-syntax . g$13650$1a@gJ)
        (set! . g$13649$1a@gJ)
        (begin . g$13645$1a@gJ)
        (define-syntax . g$13643$1a@gJ)
        (define . g$13642$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14002$1a@gJ
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$13956$1a@gJ)
        (string-ci>? . g$7109$1a@gJ)
        (string-ci>=? . g$7111$1a@gJ)
        (string-ci=? . g$7107$1a@gJ)
        (string-ci<? . g$7108$1a@gJ)
        (string-ci<=? . g$7110$1a@gJ)
        (char-whitespace? . g$7089$1a@gJ)
        (char-upper-case? . g$7090$1a@gJ)
        (char-numeric? . g$7088$1a@gJ)
        (char-lower-case? . g$7091$1a@gJ)
        (char-upcase . g$7083$1a@gJ)
        (char-downcase . g$7084$1a@gJ)
        (char-ci>? . g$7121$1a@gJ)
        (char-ci>=? . g$7123$1a@gJ)
        (char-ci=? . g$7119$1a@gJ)
        (char-ci<? . g$7120$1a@gJ)
        (char-ci<=? . g$7122$1a@gJ)
        (char-alphabetic? . g$7087$1a@gJ)
        (call-with-output-file . g$8953$1a@gJ)
        (call-with-input-file . g$8952$1a@gJ)
        (write-char . g$8944$1a@gJ)
        (write . g$13926$1a@gJ)
        (with-output-to-file . g$8951$1a@gJ)
        (with-input-from-file . g$8950$1a@gJ)
        (read-char . g$8943$1a@gJ)
        (read . g$13925$1a@gJ)
        (peek-char . g$8942$1a@gJ)
        (open-output-file . g$13924$1a@gJ)
        (open-input-file . g$13923$1a@gJ)
        (newline . g$8954$1a@gJ)
        (display . g$13922$1a@gJ)
        (close-output-port . g$13921$1a@gJ)
        (close-input-port . g$13920$1a@gJ)
        (eof-object? . g$13919$1a@gJ)
        (current-error-port . g$13917$1a@gJ)
        (current-output-port . g$13916$1a@gJ)
        (current-input-port . g$13915$1a@gJ)
        (output-port? . g$13914$1a@gJ)
        (input-port? . g$13913$1a@gJ)
        (scheme-report-environment . g$10540$1a@gJ)
        (quotient . g$7035$1a@gJ)
        (null-environment . g$10539$1a@gJ)
        (remainder . g$7036$1a@gJ)
        (modulo . g$7037$1a@gJ)
        (inexact->exact . g$7032$1a@gJ)
        (force . g$7039$1a@gJ)
        (exact->inexact . g$7033$1a@gJ)
        (string-fill! . g$5567$1a@gJ)
        (string-set! . g$5566$1a@gJ)
        (set-cdr! . g$7018$1a@gJ)
        (set-car! . g$7017$1a@gJ)
        (memv . g$5384$1a@gJ)
        (memq . g$5383$1a@gJ)
        (member . g$5385$1a@gJ)
        (assv . g$5380$1a@gJ)
        (assq . g$5379$1a@gJ)
        (assoc . g$5381$1a@gJ)
        (eval . g$10542$1a@gJ)
        (zero? . g$6270$1a@gJ)
        (vector? . g$5554$1a@gJ)
        (vector-set! . g$5586$1a@gJ)
        (vector-ref . g$5585$1a@gJ)
        (vector-length . g$5588$1a@gJ)
        (vector-fill! . g$5589$1a@gJ)
        (vector->list . g$5590$1a@gJ)
        (vector . g$13847$1a@gJ)
        (values . g$13846$1a@gJ)
        (truncate . g$6322$1a@gJ)
        (tan . g$6314$1a@gJ)
        (symbol? . g$5556$1a@gJ)
        (symbol->string . g$5576$1a@gJ)
        (substring . g$5573$1a@gJ)
        (string? . g$5552$1a@gJ)
        (string>? . g$5635$1a@gJ)
        (string>=? . g$5637$1a@gJ)
        (string=? . g$5633$1a@gJ)
        (string<? . g$5634$1a@gJ)
        (string<=? . g$5636$1a@gJ)
        (string-ref . g$5565$1a@gJ)
        (string-length . g$5568$1a@gJ)
        (string-copy . g$5572$1a@gJ)
        (string-append . g$5574$1a@gJ)
        (string->symbol . g$5577$1a@gJ)
        (string->number . g$13845$1a@gJ)
        (string->list . g$5571$1a@gJ)
        (string . g$5570$1a@gJ)
        (sqrt . g$6324$1a@gJ)
        (sin . g$6308$1a@gJ)
        (round . g$6323$1a@gJ)
        (reverse . g$5592$1a@gJ)
        (real? . g$6264$1a@gJ)
        (real-part . g$6301$1a@gJ)
        (rationalize . g$5650$1a@gJ)
        (rational? . g$6265$1a@gJ)
        (procedure? . g$5558$1a@gJ)
        (positive? . g$6271$1a@gJ)
        (pair? . g$13844$1a@gJ)
        (odd? . g$5622$1a@gJ)
        (numerator . g$6299$1a@gJ)
        (number? . g$6257$1a@gJ)
        (number->string . g$6278$1a@gJ)
        (null? . g$13843$1a@gJ)
        (not . g$13842$1a@gJ)
        (negative? . g$6272$1a@gJ)
        (min . g$5624$1a@gJ)
        (max . g$5623$1a@gJ)
        (map . g$5391$1a@gJ)
        (make-vector . g$5587$1a@gJ)
        (make-string . g$5564$1a@gJ)
        (make-rectangular . g$6294$1a@gJ)
        (make-polar . g$6295$1a@gJ)
        (magnitude . g$6297$1a@gJ)
        (log . g$6317$1a@gJ)
        (list? . g$13841$1a@gJ)
        (list-tail . g$5371$1a@gJ)
        (list-ref . g$5372$1a@gJ)
        (list->vector . g$5583$1a@gJ)
        (list->string . g$5584$1a@gJ)
        (list . g$13840$1a@gJ)
        (length . g$13839$1a@gJ)
        (lcm . g$5626$1a@gJ)
        (integer? . g$6266$1a@gJ)
        (integer->char . g$5563$1a@gJ)
        (inexact? . g$6262$1a@gJ)
        (imag-part . g$6302$1a@gJ)
        (gcd . g$5625$1a@gJ)
        (for-each . g$5392$1a@gJ)
        (floor . g$6320$1a@gJ)
        (expt . g$6326$1a@gJ)
        (exp . g$6307$1a@gJ)
        (exact? . g$6261$1a@gJ)
        (even? . g$5621$1a@gJ)
        (eqv? . g$13837$1a@gJ)
        (equal? . g$9146$1a@gJ)
        (eq? . g$13836$1a@gJ)
        (dynamic-wind . g$13835$1a@gJ)
        (denominator . g$6300$1a@gJ)
        (cos . g$6311$1a@gJ)
        (cons . g$13834$1a@gJ)
        (complex? . g$6263$1a@gJ)
        (char? . g$5553$1a@gJ)
        (char>? . g$5647$1a@gJ)
        (char>=? . g$5649$1a@gJ)
        (char=? . g$5645$1a@gJ)
        (char<? . g$5646$1a@gJ)
        (char<=? . g$5648$1a@gJ)
        (char->integer . g$5562$1a@gJ)
        (ceiling . g$6321$1a@gJ)
        (call-with-values . g$13833$1a@gJ)
        (call-with-current-continuation . g$13831$1a@gJ)
        (cddddr . g$5620$1a@gJ)
        (cdddar . g$5619$1a@gJ)
        (cddadr . g$5618$1a@gJ)
        (cddaar . g$5617$1a@gJ)
        (cdaddr . g$5616$1a@gJ)
        (cdadar . g$5615$1a@gJ)
        (cdaadr . g$5614$1a@gJ)
        (cdaaar . g$5613$1a@gJ)
        (cadddr . g$5612$1a@gJ)
        (caddar . g$5611$1a@gJ)
        (cadadr . g$5610$1a@gJ)
        (cadaar . g$5609$1a@gJ)
        (caaddr . g$5608$1a@gJ)
        (caadar . g$5607$1a@gJ)
        (caaadr . g$5606$1a@gJ)
        (caaaar . g$5605$1a@gJ)
        (cdddr . g$5604$1a@gJ)
        (cddar . g$5603$1a@gJ)
        (cdadr . g$5602$1a@gJ)
        (cdaar . g$5601$1a@gJ)
        (caddr . g$5600$1a@gJ)
        (cadar . g$5599$1a@gJ)
        (caadr . g$5598$1a@gJ)
        (caaar . g$5597$1a@gJ)
        (cddr . g$5596$1a@gJ)
        (cdar . g$5595$1a@gJ)
        (cadr . g$5594$1a@gJ)
        (caar . g$5593$1a@gJ)
        (cdr . g$13830$1a@gJ)
        (car . g$13829$1a@gJ)
        (boolean? . g$5557$1a@gJ)
        (atan . g$6316$1a@gJ)
        (asin . g$6309$1a@gJ)
        (apply . g$13827$1a@gJ)
        (append . g$5396$1a@gJ)
        (angle . g$6296$1a@gJ)
        (acos . g$6312$1a@gJ)
        (abs . g$6319$1a@gJ)
        (/ . g$13826$1a@gJ)
        (* . g$13825$1a@gJ)
        (- . g$13824$1a@gJ)
        (+ . g$13823$1a@gJ)
        (>= . g$6293$1a@gJ)
        (> . g$6292$1a@gJ)
        (= . g$6289$1a@gJ)
        (<= . g$6291$1a@gJ)
        (< . g$6290$1a@gJ)
        (unquote-splicing . g$13694$1a@gJ)
        (unquote . g$13693$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ)
        (... . g$13689$1a@gJ)
        (delay . g$13686$1a@gJ)
        (or . g$13684$1a@gJ)
        (and . g$13683$1a@gJ)
        (do . g$13682$1a@gJ)
        (cond . g$13681$1a@gJ)
        (let* . g$13680$1a@gJ)
        (let . g$13679$1a@gJ)
        (quasiquote . g$13675$1a@gJ)
        (syntax-rules . g$13674$1a@gJ)
        (case . g$13665$1a@gJ)
        (if . g$13661$1a@gJ)
        (letrec . g$13659$1a@gJ)
        (lambda . g$13656$1a@gJ)
        (quote . g$13653$1a@gJ)
        (letrec-syntax . g$13651$1a@gJ)
        (let-syntax . g$13650$1a@gJ)
        (set! . g$13649$1a@gJ)
        (begin . g$13645$1a@gJ)
        (define-syntax . g$13643$1a@gJ)
        (define . g$13642$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14003$1a@gJ
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13955$1a@gJ)
        (string-titlecase . g$7112$1a@gJ)
        (string-normalize-nfkd . g$7132$1a@gJ)
        (string-normalize-nfkc . g$7131$1a@gJ)
        (string-normalize-nfd . g$7130$1a@gJ)
        (string-normalize-nfc . g$7129$1a@gJ)
        (string-foldcase . g$7113$1a@gJ)
        (string-downcase . g$13954$1a@gJ)
        (string-ci>? . g$7109$1a@gJ)
        (string-ci>=? . g$7111$1a@gJ)
        (string-ci=? . g$7107$1a@gJ)
        (string-ci<? . g$7108$1a@gJ)
        (string-ci<=? . g$7110$1a@gJ)
        (char-whitespace? . g$7089$1a@gJ)
        (char-upper-case? . g$7090$1a@gJ)
        (char-title-case? . g$7092$1a@gJ)
        (char-numeric? . g$7088$1a@gJ)
        (char-lower-case? . g$7091$1a@gJ)
        (char-general-category . g$7093$1a@gJ)
        (char-upcase . g$7083$1a@gJ)
        (char-titlecase . g$7085$1a@gJ)
        (char-foldcase . g$7086$1a@gJ)
        (char-downcase . g$7084$1a@gJ)
        (char-ci>? . g$7121$1a@gJ)
        (char-ci>=? . g$7123$1a@gJ)
        (char-ci=? . g$7119$1a@gJ)
        (char-ci<? . g$7120$1a@gJ)
        (char-ci<=? . g$7122$1a@gJ)
        (char-alphabetic? . g$7087$1a@gJ)
        (make-variable-transformer . g$10241$1a@gJ)
        (identifier? . g$10562$1a@gJ)
        (generate-temporaries . g$10550$1a@gJ)
        (free-identifier=? . g$10551$1a@gJ)
        (syntax->datum . g$10564$1a@gJ)
        (datum->syntax . g$10563$1a@gJ)
        (bound-identifier=? . g$10552$1a@gJ)
        (record-type-descriptor? . g$13953$1a@gJ)
        (record-predicate . g$13952$1a@gJ)
        (record-mutator . g$13951$1a@gJ)
        (record-constructor . g$13950$1a@gJ)
        (record-accessor . g$13949$1a@gJ)
        (make-record-type-descriptor . g$13948$1a@gJ)
        (make-record-constructor-descriptor . g$13947$1a@gJ)
        (record? . g$13946$1a@gJ)
        (record-type-uid . g$13945$1a@gJ)
        (record-type-sealed? . g$13944$1a@gJ)
        (record-type-parent . g$13943$1a@gJ)
        (record-type-opaque? . g$13942$1a@gJ)
        (record-type-name . g$13941$1a@gJ)
        (record-type-generative? . g$13940$1a@gJ)
        (record-type-field-names . g$13939$1a@gJ)
        (record-rtd . g$13938$1a@gJ)
        (record-field-mutable? . g$13937$1a@gJ)
        (delete-file . g$5935$1a@gJ)
        (file-exists? . g$5934$1a@gJ)
        (vector-sort! . g$13936$1a@gJ)
        (vector-sort . g$13935$1a@gJ)
        (list-sort . g$7056$1a@gJ)
        (symbol-hash . g$5905$1a@gJ)
        (string-ci-hash . g$5904$1a@gJ)
        (string-hash . g$5903$1a@gJ)
        (equal-hash . g$13934$1a@gJ)
        (hashtable-equivalence-function . g$13933$1a@gJ)
        (make-hashtable . g$13932$1a@gJ)
        (hashtable-hash-function . g$13931$1a@gJ)
        (make-eqv-hashtable . g$5895$1a@gJ)
        (make-eq-hashtable . g$5894$1a@gJ)
        (hashtable? . g$5893$1a@gJ)
        (hashtable-update! . g$5901$1a@gJ)
        (hashtable-size . g$5896$1a@gJ)
        (hashtable-set! . g$5898$1a@gJ)
        (hashtable-ref . g$5897$1a@gJ)
        (hashtable-mutable? . g$13930$1a@gJ)
        (hashtable-keys . g$13929$1a@gJ)
        (hashtable-entries . g$13928$1a@gJ)
        (hashtable-delete! . g$5899$1a@gJ)
        (hashtable-copy . g$13927$1a@gJ)
        (hashtable-contains? . g$5900$1a@gJ)
        (hashtable-clear! . g$5902$1a@gJ)
        (call-with-output-file . g$8953$1a@gJ)
        (call-with-input-file . g$8952$1a@gJ)
        (write-char . g$8944$1a@gJ)
        (write . g$13926$1a@gJ)
        (with-output-to-file . g$8951$1a@gJ)
        (with-input-from-file . g$8950$1a@gJ)
        (read-char . g$8943$1a@gJ)
        (read . g$13925$1a@gJ)
        (peek-char . g$8942$1a@gJ)
        (open-output-file . g$13924$1a@gJ)
        (open-input-file . g$13923$1a@gJ)
        (newline . g$8954$1a@gJ)
        (display . g$13922$1a@gJ)
        (close-output-port . g$13921$1a@gJ)
        (close-input-port . g$13920$1a@gJ)
        (eof-object? . g$13919$1a@gJ)
        (eof-object . g$13918$1a@gJ)
        (current-error-port . g$13917$1a@gJ)
        (current-output-port . g$13916$1a@gJ)
        (current-input-port . g$13915$1a@gJ)
        (output-port? . g$13914$1a@gJ)
        (input-port? . g$13913$1a@gJ)
        (utf-8-codec . g$13912$1a@gJ)
        (utf-16-codec . g$13911$1a@gJ)
        (transcoder-error-handling-mode . g$13910$1a@gJ)
        (transcoder-eol-style . g$13909$1a@gJ)
        (transcoder-codec . g$13908$1a@gJ)
        (transcoded-port . g$13907$1a@gJ)
        (textual-port? . g$13906$1a@gJ)
        (string->bytevector . g$13905$1a@gJ)
        (standard-output-port . g$8918$1a@gJ)
        (standard-input-port . g$8917$1a@gJ)
        (standard-error-port . g$8916$1a@gJ)
        (set-port-position! . g$13904$1a@gJ)
        (put-u8 . g$13903$1a@gJ)
        (put-string . g$13902$1a@gJ)
        (put-datum . g$8921$1a@gJ)
        (put-char . g$13901$1a@gJ)
        (put-bytevector . g$13900$1a@gJ)
        (port? . g$8926$1a@gJ)
        (port-transcoder . g$13899$1a@gJ)
        (port-position . g$13898$1a@gJ)
        (port-has-set-port-position!? . g$13897$1a@gJ)
        (port-has-port-position? . g$13896$1a@gJ)
        (port-eof? . g$13895$1a@gJ)
        (output-port-buffer-mode . g$13894$1a@gJ)
        (open-string-output-port . g$8925$1a@gJ)
        (open-string-input-port . g$13893$1a@gJ)
        (open-file-output-port . g$13892$1a@gJ)
        (open-file-input/output-port . g$13891$1a@gJ)
        (open-file-input-port . g$13890$1a@gJ)
        (open-bytevector-output-port . g$13889$1a@gJ)
        (open-bytevector-input-port . g$13888$1a@gJ)
        (native-transcoder . g$13887$1a@gJ)
        (native-eol-style . g$8919$1a@gJ)
        (make-transcoder . g$13886$1a@gJ)
        (latin-1-codec . g$13885$1a@gJ)
        (make-i/o-write-error . g$6860$1a@gJ)
        (make-i/o-read-error . g$6847$1a@gJ)
        (make-i/o-port-error . g$6955$1a@gJ)
        (make-i/o-invalid-position-error . g$6873$1a@gJ)
        (make-i/o-filename-error . g$6888$1a@gJ)
        (make-i/o-file-protection-error . g$6903$1a@gJ)
        (make-i/o-file-is-read-only-error . g$6916$1a@gJ)
        (make-i/o-file-does-not-exist-error . g$6942$1a@gJ)
        (make-i/o-file-already-exists-error . g$6929$1a@gJ)
        (make-i/o-error . g$6834$1a@gJ)
        (make-i/o-encoding-error . g$6983$1a@gJ)
        (make-i/o-decoding-error . g$6970$1a@gJ)
        (make-custom-textual-output-port . g$13884$1a@gJ)
        (make-custom-textual-input/output-port . g$13883$1a@gJ)
        (make-custom-textual-input-port . g$13882$1a@gJ)
        (make-custom-binary-output-port . g$13881$1a@gJ)
        (make-custom-binary-input/output-port . g$13880$1a@gJ)
        (make-custom-binary-input-port . g$13879$1a@gJ)
        (make-bytevector . g$5955$1a@gJ)
        (lookahead-u8 . g$13878$1a@gJ)
        (lookahead-char . g$13877$1a@gJ)
        (i/o-write-error? . g$6861$1a@gJ)
        (i/o-read-error? . g$6848$1a@gJ)
        (i/o-port-error? . g$6957$1a@gJ)
        (i/o-invalid-position-error? . g$6875$1a@gJ)
        (i/o-error-position . g$6876$1a@gJ)
        (i/o-filename-error? . g$6890$1a@gJ)
        (i/o-file-protection-error? . g$6904$1a@gJ)
        (i/o-file-is-read-only-error? . g$6917$1a@gJ)
        (i/o-file-does-not-exist-error? . g$6943$1a@gJ)
        (i/o-file-already-exists-error? . g$6930$1a@gJ)
        (i/o-error? . g$6835$1a@gJ)
        (i/o-error-port . g$6958$1a@gJ)
        (i/o-error-filename . g$6891$1a@gJ)
        (i/o-encoding-error? . g$6985$1a@gJ)
        (i/o-encoding-error-char . g$6986$1a@gJ)
        (i/o-decoding-error? . g$6971$1a@gJ)
        (get-u8 . g$13876$1a@gJ)
        (get-string-n! . g$13875$1a@gJ)
        (get-string-n . g$13874$1a@gJ)
        (get-string-all . g$13873$1a@gJ)
        (get-line . g$13872$1a@gJ)
        (get-datum . g$8922$1a@gJ)
        (get-char . g$13871$1a@gJ)
        (get-bytevector-some . g$13870$1a@gJ)
        (get-bytevector-n! . g$13869$1a@gJ)
        (get-bytevector-n . g$13868$1a@gJ)
        (get-bytevector-all . g$13867$1a@gJ)
        (flush-output-port . g$13866$1a@gJ)
        (close-port . g$13865$1a@gJ)
        (call-with-string-output-port . g$8927$1a@gJ)
        (call-with-port . g$8928$1a@gJ)
        (call-with-bytevector-output-port . g$13864$1a@gJ)
        (bytevector->string . g$13863$1a@gJ)
        (buffer-mode? . g$8920$1a@gJ)
        (binary-port? . g$13862$1a@gJ)
        (exit . g$13861$1a@gJ)
        (command-line . g$13583$1a@gJ)
        (remove . g$5399$1a@gJ)
        (remv . g$5400$1a@gJ)
        (remp . g$5377$1a@gJ)
        (remq . g$5401$1a@gJ)
        (partition . g$5376$1a@gJ)
        (memv . g$5384$1a@gJ)
        (memq . g$5383$1a@gJ)
        (memp . g$5386$1a@gJ)
        (member . g$5385$1a@gJ)
        (exists . g$5390$1a@gJ)
        (for-all . g$5389$1a@gJ)
        (fold-right . g$5398$1a@gJ)
        (fold-left . g$5397$1a@gJ)
        (find . g$5375$1a@gJ)
        (filter . g$5378$1a@gJ)
        (cons* . g$5393$1a@gJ)
        (assv . g$5380$1a@gJ)
        (assq . g$5379$1a@gJ)
        (assp . g$5382$1a@gJ)
        (assoc . g$5381$1a@gJ)
        (with-exception-handler . g$13860$1a@gJ)
        (raise-continuable . g$13859$1a@gJ)
        (raise . g$13858$1a@gJ)
        (make-enumeration . g$9014$1a@gJ)
        (enum-set=? . g$9021$1a@gJ)
        (enum-set-universe . g$9015$1a@gJ)
        (enum-set-union . g$9022$1a@gJ)
        (enum-set-subset? . g$9020$1a@gJ)
        (enum-set-projection . g$9026$1a@gJ)
        (enum-set-member? . g$9019$1a@gJ)
        (enum-set-intersection . g$9023$1a@gJ)
        (enum-set-indexer . g$9016$1a@gJ)
        (enum-set-difference . g$9024$1a@gJ)
        (enum-set-constructor . g$9017$1a@gJ)
        (enum-set-complement . g$9025$1a@gJ)
        (enum-set->list . g$9018$1a@gJ)
        (who-condition? . g$6722$1a@gJ)
        (warning? . g$6641$1a@gJ)
        (violation? . g$6680$1a@gJ)
        (undefined-violation? . g$6822$1a@gJ)
        (syntax-violation? . g$6807$1a@gJ)
        (syntax-violation-subform . g$6809$1a@gJ)
        (syntax-violation-form . g$6808$1a@gJ)
        (syntax-violation . g$10561$1a@gJ)
        (simple-conditions . g$13857$1a@gJ)
        (serious-condition? . g$6654$1a@gJ)
        (non-continuable-violation? . g$6766$1a@gJ)
        (message-condition? . g$6627$1a@gJ)
        (make-who-condition . g$6720$1a@gJ)
        (make-warning . g$6640$1a@gJ)
        (make-violation . g$6679$1a@gJ)
        (make-undefined-violation . g$6821$1a@gJ)
        (make-syntax-violation . g$6804$1a@gJ)
        (make-serious-condition . g$6653$1a@gJ)
        (make-non-continuable-violation . g$6765$1a@gJ)
        (make-message-condition . g$6625$1a@gJ)
        (make-lexical-violation . g$6791$1a@gJ)
        (make-irritants-condition . g$6705$1a@gJ)
        (make-implementation-restriction-violation . g$6778$1a@gJ)
        (make-error . g$6666$1a@gJ)
        (make-assertion-violation . g$6692$1a@gJ)
        (lexical-violation? . g$6792$1a@gJ)
        (irritants-condition? . g$6707$1a@gJ)
        (implementation-restriction-violation? . g$6779$1a@gJ)
        (error? . g$6667$1a@gJ)
        (condition-who . g$6723$1a@gJ)
        (condition-predicate . g$13856$1a@gJ)
        (condition-message . g$6628$1a@gJ)
        (condition-irritants . g$6708$1a@gJ)
        (condition-accessor . g$13855$1a@gJ)
        (condition . g$13854$1a@gJ)
        (assertion-violation? . g$6693$1a@gJ)
        (condition? . g$13853$1a@gJ)
        (utf32->string . g$5973$1a@gJ)
        (utf16->string . g$5972$1a@gJ)
        (utf8->string . g$5970$1a@gJ)
        (uint-list->bytevector . g$5974$1a@gJ)
        (u8-list->bytevector . g$5966$1a@gJ)
        (string->utf8 . g$5967$1a@gJ)
        (string->utf32 . g$5969$1a@gJ)
        (string->utf16 . g$5968$1a@gJ)
        (sint-list->bytevector . g$5975$1a@gJ)
        (native-endianness . g$5941$1a@gJ)
        (bytevector? . g$5555$1a@gJ)
        (bytevector=? . g$5957$1a@gJ)
        (bytevector-uint-set! . g$13852$1a@gJ)
        (bytevector-uint-ref . g$13851$1a@gJ)
        (bytevector-u8-set! . g$5962$1a@gJ)
        (bytevector-u8-ref . g$5961$1a@gJ)
        (bytevector-u64-set! . g$6003$1a@gJ)
        (bytevector-u64-ref . g$5999$1a@gJ)
        (bytevector-u64-native-set! . g$6005$1a@gJ)
        (bytevector-u64-native-ref . g$6001$1a@gJ)
        (bytevector-u32-set! . g$5995$1a@gJ)
        (bytevector-u32-ref . g$5991$1a@gJ)
        (bytevector-u32-native-set! . g$5997$1a@gJ)
        (bytevector-u32-native-ref . g$5993$1a@gJ)
        (bytevector-u16-set! . g$5987$1a@gJ)
        (bytevector-u16-ref . g$5983$1a@gJ)
        (bytevector-u16-native-set! . g$5989$1a@gJ)
        (bytevector-u16-native-ref . g$5985$1a@gJ)
        (bytevector-sint-set! . g$13850$1a@gJ)
        (bytevector-sint-ref . g$13849$1a@gJ)
        (bytevector-s8-set! . g$5964$1a@gJ)
        (bytevector-s8-ref . g$5963$1a@gJ)
        (bytevector-s64-set! . g$6004$1a@gJ)
        (bytevector-s64-ref . g$6000$1a@gJ)
        (bytevector-s64-native-set! . g$6006$1a@gJ)
        (bytevector-s64-native-ref . g$6002$1a@gJ)
        (bytevector-s32-set! . g$5996$1a@gJ)
        (bytevector-s32-ref . g$5992$1a@gJ)
        (bytevector-s32-native-set! . g$5998$1a@gJ)
        (bytevector-s32-native-ref . g$5994$1a@gJ)
        (bytevector-s16-set! . g$5988$1a@gJ)
        (bytevector-s16-ref . g$5984$1a@gJ)
        (bytevector-s16-native-set! . g$5990$1a@gJ)
        (bytevector-s16-native-ref . g$5986$1a@gJ)
        (bytevector-length . g$5956$1a@gJ)
        (bytevector-ieee-single-set! . g$5981$1a@gJ)
        (bytevector-ieee-single-ref . g$5979$1a@gJ)
        (bytevector-ieee-single-native-set! . g$6009$1a@gJ)
        (bytevector-ieee-single-native-ref . g$6007$1a@gJ)
        (bytevector-ieee-double-set! . g$5982$1a@gJ)
        (bytevector-ieee-double-ref . g$5980$1a@gJ)
        (bytevector-ieee-double-native-set! . g$6010$1a@gJ)
        (bytevector-ieee-double-native-ref . g$6008$1a@gJ)
        (bytevector-fill! . g$5958$1a@gJ)
        (bytevector-copy! . g$5959$1a@gJ)
        (bytevector-copy . g$5960$1a@gJ)
        (bytevector->uint-list . g$5976$1a@gJ)
        (bytevector->u8-list . g$5965$1a@gJ)
        (bytevector->sint-list . g$5977$1a@gJ)
        (no-nans-violation? . g$7012$1a@gJ)
        (no-infinities-violation? . g$6999$1a@gJ)
        (make-no-nans-violation . g$7011$1a@gJ)
        (make-no-infinities-violation . g$6998$1a@gJ)
        (real->flonum . g$6255$1a@gJ)
        (flzero? . g$8358$1a@gJ)
        (fltruncate . g$8353$1a@gJ)
        (fltan . g$8339$1a@gJ)
        (flsqrt . g$8344$1a@gJ)
        (flsin . g$8337$1a@gJ)
        (flround . g$8354$1a@gJ)
        (flpositive? . g$8356$1a@gJ)
        (flonum? . g$5560$1a@gJ)
        (flodd? . g$8360$1a@gJ)
        (flnumerator . g$8303$1a@gJ)
        (flnegative? . g$8357$1a@gJ)
        (flnan? . g$8336$1a@gJ)
        (flmod0 . g$8321$1a@gJ)
        (flmod . g$8320$1a@gJ)
        (flmin . g$8362$1a@gJ)
        (flmax . g$8361$1a@gJ)
        (fllog . g$8343$1a@gJ)
        (flinteger? . g$8329$1a@gJ)
        (flinfinite? . g$8335$1a@gJ)
        (flfloor . g$8352$1a@gJ)
        (flfinite? . g$8330$1a@gJ)
        (flexpt . g$8346$1a@gJ)
        (flexp . g$8345$1a@gJ)
        (fleven? . g$8359$1a@gJ)
        (fldiv0-and-mod0 . g$8328$1a@gJ)
        (fldiv0 . g$8315$1a@gJ)
        (fldiv-and-mod . g$8322$1a@gJ)
        (fldiv . g$8327$1a@gJ)
        (fldenominator . g$8302$1a@gJ)
        (flcos . g$8338$1a@gJ)
        (flceiling . g$8347$1a@gJ)
        (flatan . g$8342$1a@gJ)
        (flasin . g$8340$1a@gJ)
        (flacos . g$8341$1a@gJ)
        (flabs . g$8355$1a@gJ)
        (fl>? . g$8309$1a@gJ)
        (fl>=? . g$8310$1a@gJ)
        (fl=? . g$8306$1a@gJ)
        (fl<? . g$8307$1a@gJ)
        (fl<=? . g$8308$1a@gJ)
        (fl/ . g$8305$1a@gJ)
        (fl- . g$8304$1a@gJ)
        (fl+ . g$8300$1a@gJ)
        (fl* . g$8301$1a@gJ)
        (fixnum->flonum . g$6256$1a@gJ)
        (fxzero? . g$7403$1a@gJ)
        (fxxor . g$7366$1a@gJ)
        (fxrotate-bit-field . g$7441$1a@gJ)
        (fxreverse-bit-field . g$7442$1a@gJ)
        (fxpositive? . g$7393$1a@gJ)
        (fxodd? . g$7413$1a@gJ)
        (fxnot . g$7347$1a@gJ)
        (fxnegative? . g$7398$1a@gJ)
        (fxmod0 . g$7377$1a@gJ)
        (fxmod . g$7376$1a@gJ)
        (fxmin . g$7415$1a@gJ)
        (fxmax . g$7414$1a@gJ)
        (fxlength . g$7344$1a@gJ)
        (fxior . g$7365$1a@gJ)
        (fxif . g$7423$1a@gJ)
        (fxfirst-bit-set . g$7345$1a@gJ)
        (fxeven? . g$7408$1a@gJ)
        (fxdiv0-and-mod0 . g$7388$1a@gJ)
        (fxdiv0 . g$7383$1a@gJ)
        (fxdiv-and-mod . g$7378$1a@gJ)
        (fxdiv . g$7371$1a@gJ)
        (fxcopy-bit-field . g$7438$1a@gJ)
        (fxcopy-bit . g$7428$1a@gJ)
        (fxbit-set? . g$7346$1a@gJ)
        (fxbit-field . g$7433$1a@gJ)
        (fxbit-count . g$7339$1a@gJ)
        (fxarithmetic-shift-right . g$7440$1a@gJ)
        (fxarithmetic-shift-left . g$7439$1a@gJ)
        (fxarithmetic-shift . g$7334$1a@gJ)
        (fxand . g$7364$1a@gJ)
        (fx>? . g$7356$1a@gJ)
        (fx>=? . g$7357$1a@gJ)
        (fx=? . g$7353$1a@gJ)
        (fx<? . g$7354$1a@gJ)
        (fx<=? . g$7355$1a@gJ)
        (fx-/carry . g$7417$1a@gJ)
        (fx- . g$7328$1a@gJ)
        (fx+/carry . g$7418$1a@gJ)
        (fx+ . g$7326$1a@gJ)
        (fx*/carry . g$7416$1a@gJ)
        (fx* . g$7327$1a@gJ)
        (greatest-fixnum . g$7297$1a@gJ)
        (least-fixnum . g$7298$1a@gJ)
        (fixnum-width . g$5561$1a@gJ)
        (fixnum? . g$5559$1a@gJ)
        (bitwise-rotate-bit-field . g$7227$1a@gJ)
        (bitwise-reverse-bit-field . g$7228$1a@gJ)
        (bitwise-length . g$7218$1a@gJ)
        (bitwise-if . g$7221$1a@gJ)
        (bitwise-first-bit-set . g$7219$1a@gJ)
        (bitwise-copy-bit-field . g$7224$1a@gJ)
        (bitwise-copy-bit . g$7222$1a@gJ)
        (bitwise-bit-set? . g$7220$1a@gJ)
        (bitwise-bit-field . g$7223$1a@gJ)
        (bitwise-bit-count . g$7217$1a@gJ)
        (bitwise-xor . g$7216$1a@gJ)
        (bitwise-ior . g$7215$1a@gJ)
        (bitwise-and . g$7214$1a@gJ)
        (bitwise-not . g$7213$1a@gJ)
        (bitwise-arithmetic-shift-right . g$7226$1a@gJ)
        (bitwise-arithmetic-shift-left . g$7225$1a@gJ)
        (bitwise-arithmetic-shift . g$13848$1a@gJ)
        (zero? . g$6270$1a@gJ)
        (vector? . g$5554$1a@gJ)
        (vector-set! . g$5586$1a@gJ)
        (vector-ref . g$5585$1a@gJ)
        (vector-map . g$5653$1a@gJ)
        (vector-length . g$5588$1a@gJ)
        (vector-for-each . g$5654$1a@gJ)
        (vector-fill! . g$5589$1a@gJ)
        (vector->list . g$5590$1a@gJ)
        (vector . g$13847$1a@gJ)
        (values . g$13846$1a@gJ)
        (truncate . g$6322$1a@gJ)
        (tan . g$6314$1a@gJ)
        (symbol? . g$5556$1a@gJ)
        (symbol=? . g$5638$1a@gJ)
        (symbol->string . g$5576$1a@gJ)
        (substring . g$5573$1a@gJ)
        (string? . g$5552$1a@gJ)
        (string>? . g$5635$1a@gJ)
        (string>=? . g$5637$1a@gJ)
        (string=? . g$5633$1a@gJ)
        (string<? . g$5634$1a@gJ)
        (string<=? . g$5636$1a@gJ)
        (string-ref . g$5565$1a@gJ)
        (string-length . g$5568$1a@gJ)
        (string-for-each . g$5655$1a@gJ)
        (string-copy . g$5572$1a@gJ)
        (string-append . g$5574$1a@gJ)
        (string->symbol . g$5577$1a@gJ)
        (string->number . g$13845$1a@gJ)
        (string->list . g$5571$1a@gJ)
        (string . g$5570$1a@gJ)
        (sqrt . g$6324$1a@gJ)
        (sin . g$6308$1a@gJ)
        (round . g$6323$1a@gJ)
        (reverse . g$5592$1a@gJ)
        (real? . g$6264$1a@gJ)
        (real-valued? . g$6267$1a@gJ)
        (real-part . g$6301$1a@gJ)
        (rationalize . g$5650$1a@gJ)
        (rational? . g$6265$1a@gJ)
        (rational-valued? . g$6268$1a@gJ)
        (procedure? . g$5558$1a@gJ)
        (positive? . g$6271$1a@gJ)
        (pair? . g$13844$1a@gJ)
        (odd? . g$5622$1a@gJ)
        (numerator . g$6299$1a@gJ)
        (number? . g$6257$1a@gJ)
        (number->string . g$6278$1a@gJ)
        (null? . g$13843$1a@gJ)
        (not . g$13842$1a@gJ)
        (negative? . g$6272$1a@gJ)
        (nan? . g$6258$1a@gJ)
        (min . g$5624$1a@gJ)
        (max . g$5623$1a@gJ)
        (map . g$5391$1a@gJ)
        (make-vector . g$5587$1a@gJ)
        (make-string . g$5564$1a@gJ)
        (make-rectangular . g$6294$1a@gJ)
        (make-polar . g$6295$1a@gJ)
        (magnitude . g$6297$1a@gJ)
        (log . g$6317$1a@gJ)
        (list? . g$13841$1a@gJ)
        (list-tail . g$5371$1a@gJ)
        (list-ref . g$5372$1a@gJ)
        (list->vector . g$5583$1a@gJ)
        (list->string . g$5584$1a@gJ)
        (list . g$13840$1a@gJ)
        (length . g$13839$1a@gJ)
        (lcm . g$5626$1a@gJ)
        (integer? . g$6266$1a@gJ)
        (integer-valued? . g$6269$1a@gJ)
        (integer->char . g$5563$1a@gJ)
        (infinite? . g$6260$1a@gJ)
        (inexact? . g$6262$1a@gJ)
        (inexact . g$6273$1a@gJ)
        (imag-part . g$6302$1a@gJ)
        (gcd . g$5625$1a@gJ)
        (for-each . g$5392$1a@gJ)
        (floor . g$6320$1a@gJ)
        (finite? . g$6259$1a@gJ)
        (expt . g$6326$1a@gJ)
        (exp . g$6307$1a@gJ)
        (exact? . g$6261$1a@gJ)
        (exact-integer-sqrt . g$6325$1a@gJ)
        (exact . g$6274$1a@gJ)
        (even? . g$5621$1a@gJ)
        (error . g$13838$1a@gJ)
        (eqv? . g$13837$1a@gJ)
        (equal? . g$9146$1a@gJ)
        (eq? . g$13836$1a@gJ)
        (dynamic-wind . g$13835$1a@gJ)
        (div0-and-mod0 . g$5582$1a@gJ)
        (mod0 . g$5580$1a@gJ)
        (div0 . g$5578$1a@gJ)
        (div-and-mod . g$5581$1a@gJ)
        (mod . g$5579$1a@gJ)
        (div . g$6318$1a@gJ)
        (denominator . g$6300$1a@gJ)
        (cos . g$6311$1a@gJ)
        (cons . g$13834$1a@gJ)
        (complex? . g$6263$1a@gJ)
        (char? . g$5553$1a@gJ)
        (char>? . g$5647$1a@gJ)
        (char>=? . g$5649$1a@gJ)
        (char=? . g$5645$1a@gJ)
        (char<? . g$5646$1a@gJ)
        (char<=? . g$5648$1a@gJ)
        (char->integer . g$5562$1a@gJ)
        (ceiling . g$6321$1a@gJ)
        (call-with-values . g$13833$1a@gJ)
        (call/cc . g$13832$1a@gJ)
        (call-with-current-continuation . g$13831$1a@gJ)
        (cddddr . g$5620$1a@gJ)
        (cdddar . g$5619$1a@gJ)
        (cddadr . g$5618$1a@gJ)
        (cddaar . g$5617$1a@gJ)
        (cdaddr . g$5616$1a@gJ)
        (cdadar . g$5615$1a@gJ)
        (cdaadr . g$5614$1a@gJ)
        (cdaaar . g$5613$1a@gJ)
        (cadddr . g$5612$1a@gJ)
        (caddar . g$5611$1a@gJ)
        (cadadr . g$5610$1a@gJ)
        (cadaar . g$5609$1a@gJ)
        (caaddr . g$5608$1a@gJ)
        (caadar . g$5607$1a@gJ)
        (caaadr . g$5606$1a@gJ)
        (caaaar . g$5605$1a@gJ)
        (cdddr . g$5604$1a@gJ)
        (cddar . g$5603$1a@gJ)
        (cdadr . g$5602$1a@gJ)
        (cdaar . g$5601$1a@gJ)
        (caddr . g$5600$1a@gJ)
        (cadar . g$5599$1a@gJ)
        (caadr . g$5598$1a@gJ)
        (caaar . g$5597$1a@gJ)
        (cddr . g$5596$1a@gJ)
        (cdar . g$5595$1a@gJ)
        (cadr . g$5594$1a@gJ)
        (caar . g$5593$1a@gJ)
        (cdr . g$13830$1a@gJ)
        (car . g$13829$1a@gJ)
        (boolean? . g$5557$1a@gJ)
        (boolean=? . g$5639$1a@gJ)
        (atan . g$6316$1a@gJ)
        (assertion-violation . g$13828$1a@gJ)
        (asin . g$6309$1a@gJ)
        (apply . g$13827$1a@gJ)
        (append . g$5396$1a@gJ)
        (angle . g$6296$1a@gJ)
        (acos . g$6312$1a@gJ)
        (abs . g$6319$1a@gJ)
        (/ . g$13826$1a@gJ)
        (* . g$13825$1a@gJ)
        (- . g$13824$1a@gJ)
        (+ . g$13823$1a@gJ)
        (>= . g$6293$1a@gJ)
        (> . g$6292$1a@gJ)
        (= . g$6289$1a@gJ)
        (<= . g$6291$1a@gJ)
        (< . g$6290$1a@gJ)
        (&no-nans . g$13746$1a@gJ)
        (&no-infinities . g$13745$1a@gJ)
        (&i/o-encoding . g$13744$1a@gJ)
        (&i/o-decoding . g$13743$1a@gJ)
        (&i/o-port . g$13742$1a@gJ)
        (&i/o-file-does-not-exist . g$13741$1a@gJ)
        (&i/o-file-already-exists . g$13740$1a@gJ)
        (&i/o-file-is-read-only . g$13739$1a@gJ)
        (&i/o-file-protection . g$13738$1a@gJ)
        (&i/o-filename . g$13737$1a@gJ)
        (&i/o-invalid-position . g$13736$1a@gJ)
        (&i/o-write . g$13735$1a@gJ)
        (&i/o-read . g$13734$1a@gJ)
        (&i/o . g$13733$1a@gJ)
        (&non-continuable . g$13732$1a@gJ)
        (&undefined . g$13731$1a@gJ)
        (&syntax . g$13730$1a@gJ)
        (&lexical . g$13729$1a@gJ)
        (&implementation-restriction . g$13728$1a@gJ)
        (&who . g$13727$1a@gJ)
        (&irritants . g$13726$1a@gJ)
        (&assertion . g$13725$1a@gJ)
        (&violation . g$13724$1a@gJ)
        (&error . g$13723$1a@gJ)
        (&serious . g$13722$1a@gJ)
        (&warning . g$13721$1a@gJ)
        (&message . g$13720$1a@gJ)
        (&condition . g$13719$1a@gJ)
        (define-condition-type . g$13718$1a@gJ)
        (define-enumeration . g$13717$1a@gJ)
        (define-record-type . g$13716$1a@gJ)
        (parent-rtd . g$13715$1a@gJ)
        (nongenerative . g$13714$1a@gJ)
        (opaque . g$13713$1a@gJ)
        (sealed . g$13712$1a@gJ)
        (protocol . g$13711$1a@gJ)
        (parent . g$13710$1a@gJ)
        (immutable . g$13709$1a@gJ)
        (mutable . g$13708$1a@gJ)
        (fields . g$13707$1a@gJ)
        (error-handling-mode . g$13706$1a@gJ)
        (file-options . g$13705$1a@gJ)
        (buffer-mode . g$13704$1a@gJ)
        (eol-style . g$13703$1a@gJ)
        (guard . g$13702$1a@gJ)
        (unsyntax-splicing . g$13696$1a@gJ)
        (unsyntax . g$13695$1a@gJ)
        (unquote-splicing . g$13694$1a@gJ)
        (unquote . g$13693$1a@gJ)
        (_ . g$13692$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ)
        (... . g$13689$1a@gJ)
        (assert . g$13688$1a@gJ)
        (endianness . g$13687$1a@gJ)
        (or . g$13684$1a@gJ)
        (and . g$13683$1a@gJ)
        (do . g$13682$1a@gJ)
        (cond . g$13681$1a@gJ)
        (let* . g$13680$1a@gJ)
        (let . g$13679$1a@gJ)
        (identifier-syntax . g$13678$1a@gJ)
        (with-syntax . g$13677$1a@gJ)
        (quasisyntax . g$13676$1a@gJ)
        (quasiquote . g$13675$1a@gJ)
        (syntax-rules . g$13674$1a@gJ)
        (let-values . g$13670$1a@gJ)
        (let*-values . g$13669$1a@gJ)
        (record-constructor-descriptor . g$13668$1a@gJ)
        (record-type-descriptor . g$13667$1a@gJ)
        (case . g$13665$1a@gJ)
        (unless . g$13663$1a@gJ)
        (when . g$13662$1a@gJ)
        (if . g$13661$1a@gJ)
        (letrec* . g$13660$1a@gJ)
        (letrec . g$13659$1a@gJ)
        (case-lambda . g$13657$1a@gJ)
        (lambda . g$13656$1a@gJ)
        (syntax . g$13655$1a@gJ)
        (syntax-case . g$13654$1a@gJ)
        (quote . g$13653$1a@gJ)
        (letrec-syntax . g$13651$1a@gJ)
        (let-syntax . g$13650$1a@gJ)
        (set! . g$13649$1a@gJ)
        (begin . g$13645$1a@gJ)
        (define-syntax . g$13643$1a@gJ)
        (define . g$13642$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14004$1a@gJ
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$10540$1a@gJ)
        (quotient . g$7035$1a@gJ)
        (null-environment . g$10539$1a@gJ)
        (remainder . g$7036$1a@gJ)
        (modulo . g$7037$1a@gJ)
        (inexact->exact . g$7032$1a@gJ)
        (force . g$7039$1a@gJ)
        (exact->inexact . g$7033$1a@gJ)
        (delay . g$13686$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14005$1a@gJ
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13682$1a@gJ)
        (unless . g$13663$1a@gJ)
        (when . g$13662$1a@gJ)
        (case-lambda . g$13657$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14006$1a@gJ
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$10542$1a@gJ) (environment . g$10538$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14007$1a@gJ
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$7018$1a@gJ) (set-car! . g$7017$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14008$1a@gJ
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$5567$1a@gJ) (string-set! . g$5566$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14009$1a@gJ
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13861$1a@gJ) (command-line . g$13583$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14010$1a@gJ
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$10241$1a@gJ)
        (identifier? . g$10562$1a@gJ)
        (generate-temporaries . g$10550$1a@gJ)
        (free-identifier=? . g$10551$1a@gJ)
        (syntax->datum . g$10564$1a@gJ)
        (datum->syntax . g$10563$1a@gJ)
        (bound-identifier=? . g$10552$1a@gJ)
        (syntax-violation . g$10561$1a@gJ)
        (unsyntax-splicing . g$13696$1a@gJ)
        (unsyntax . g$13695$1a@gJ)
        (_ . g$13692$1a@gJ)
        (... . g$13689$1a@gJ)
        (with-syntax . g$13677$1a@gJ)
        (quasisyntax . g$13676$1a@gJ)
        (syntax . g$13655$1a@gJ)
        (syntax-case . g$13654$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14011$1a@gJ
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$5935$1a@gJ)
        (file-exists? . g$5934$1a@gJ)
        (make-i/o-write-error . g$6860$1a@gJ)
        (make-i/o-read-error . g$6847$1a@gJ)
        (make-i/o-port-error . g$6955$1a@gJ)
        (make-i/o-invalid-position-error . g$6873$1a@gJ)
        (make-i/o-filename-error . g$6888$1a@gJ)
        (make-i/o-file-protection-error . g$6903$1a@gJ)
        (make-i/o-file-is-read-only-error . g$6916$1a@gJ)
        (make-i/o-file-does-not-exist-error . g$6942$1a@gJ)
        (make-i/o-file-already-exists-error . g$6929$1a@gJ)
        (make-i/o-error . g$6834$1a@gJ)
        (i/o-write-error? . g$6861$1a@gJ)
        (i/o-read-error? . g$6848$1a@gJ)
        (i/o-port-error? . g$6957$1a@gJ)
        (i/o-invalid-position-error? . g$6875$1a@gJ)
        (i/o-error-position . g$6876$1a@gJ)
        (i/o-filename-error? . g$6890$1a@gJ)
        (i/o-file-protection-error? . g$6904$1a@gJ)
        (i/o-file-is-read-only-error? . g$6917$1a@gJ)
        (i/o-file-does-not-exist-error? . g$6943$1a@gJ)
        (i/o-file-already-exists-error? . g$6930$1a@gJ)
        (i/o-error? . g$6835$1a@gJ)
        (i/o-error-port . g$6958$1a@gJ)
        (i/o-error-filename . g$6891$1a@gJ)
        (&i/o-port . g$13742$1a@gJ)
        (&i/o-file-does-not-exist . g$13741$1a@gJ)
        (&i/o-file-already-exists . g$13740$1a@gJ)
        (&i/o-file-is-read-only . g$13739$1a@gJ)
        (&i/o-file-protection . g$13738$1a@gJ)
        (&i/o-filename . g$13737$1a@gJ)
        (&i/o-invalid-position . g$13736$1a@gJ)
        (&i/o-write . g$13735$1a@gJ)
        (&i/o-read . g$13734$1a@gJ)
        (&i/o . g$13733$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14012$1a@gJ
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13936$1a@gJ)
        (vector-sort . g$13935$1a@gJ)
        (list-sort . g$7056$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14013$1a@gJ
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6270$1a@gJ)
        (vector? . g$5554$1a@gJ)
        (vector-set! . g$5586$1a@gJ)
        (vector-ref . g$5585$1a@gJ)
        (vector-map . g$5653$1a@gJ)
        (vector-length . g$5588$1a@gJ)
        (vector-for-each . g$5654$1a@gJ)
        (vector-fill! . g$5589$1a@gJ)
        (vector->list . g$5590$1a@gJ)
        (vector . g$13847$1a@gJ)
        (values . g$13846$1a@gJ)
        (truncate . g$6322$1a@gJ)
        (tan . g$6314$1a@gJ)
        (symbol? . g$5556$1a@gJ)
        (symbol=? . g$5638$1a@gJ)
        (symbol->string . g$5576$1a@gJ)
        (substring . g$5573$1a@gJ)
        (string? . g$5552$1a@gJ)
        (string>? . g$5635$1a@gJ)
        (string>=? . g$5637$1a@gJ)
        (string=? . g$5633$1a@gJ)
        (string<? . g$5634$1a@gJ)
        (string<=? . g$5636$1a@gJ)
        (string-ref . g$5565$1a@gJ)
        (string-length . g$5568$1a@gJ)
        (string-for-each . g$5655$1a@gJ)
        (string-copy . g$5572$1a@gJ)
        (string-append . g$5574$1a@gJ)
        (string->symbol . g$5577$1a@gJ)
        (string->number . g$13845$1a@gJ)
        (string->list . g$5571$1a@gJ)
        (string . g$5570$1a@gJ)
        (sqrt . g$6324$1a@gJ)
        (sin . g$6308$1a@gJ)
        (round . g$6323$1a@gJ)
        (reverse . g$5592$1a@gJ)
        (real? . g$6264$1a@gJ)
        (real-valued? . g$6267$1a@gJ)
        (real-part . g$6301$1a@gJ)
        (rationalize . g$5650$1a@gJ)
        (rational? . g$6265$1a@gJ)
        (rational-valued? . g$6268$1a@gJ)
        (procedure? . g$5558$1a@gJ)
        (positive? . g$6271$1a@gJ)
        (pair? . g$13844$1a@gJ)
        (odd? . g$5622$1a@gJ)
        (numerator . g$6299$1a@gJ)
        (number? . g$6257$1a@gJ)
        (number->string . g$6278$1a@gJ)
        (null? . g$13843$1a@gJ)
        (not . g$13842$1a@gJ)
        (negative? . g$6272$1a@gJ)
        (nan? . g$6258$1a@gJ)
        (min . g$5624$1a@gJ)
        (max . g$5623$1a@gJ)
        (map . g$5391$1a@gJ)
        (make-vector . g$5587$1a@gJ)
        (make-string . g$5564$1a@gJ)
        (make-rectangular . g$6294$1a@gJ)
        (make-polar . g$6295$1a@gJ)
        (magnitude . g$6297$1a@gJ)
        (log . g$6317$1a@gJ)
        (list? . g$13841$1a@gJ)
        (list-tail . g$5371$1a@gJ)
        (list-ref . g$5372$1a@gJ)
        (list->vector . g$5583$1a@gJ)
        (list->string . g$5584$1a@gJ)
        (list . g$13840$1a@gJ)
        (length . g$13839$1a@gJ)
        (lcm . g$5626$1a@gJ)
        (integer? . g$6266$1a@gJ)
        (integer-valued? . g$6269$1a@gJ)
        (integer->char . g$5563$1a@gJ)
        (infinite? . g$6260$1a@gJ)
        (inexact? . g$6262$1a@gJ)
        (inexact . g$6273$1a@gJ)
        (imag-part . g$6302$1a@gJ)
        (gcd . g$5625$1a@gJ)
        (for-each . g$5392$1a@gJ)
        (floor . g$6320$1a@gJ)
        (finite? . g$6259$1a@gJ)
        (expt . g$6326$1a@gJ)
        (exp . g$6307$1a@gJ)
        (exact? . g$6261$1a@gJ)
        (exact-integer-sqrt . g$6325$1a@gJ)
        (exact . g$6274$1a@gJ)
        (even? . g$5621$1a@gJ)
        (error . g$13838$1a@gJ)
        (eqv? . g$13837$1a@gJ)
        (equal? . g$9146$1a@gJ)
        (eq? . g$13836$1a@gJ)
        (dynamic-wind . g$13835$1a@gJ)
        (div0-and-mod0 . g$5582$1a@gJ)
        (mod0 . g$5580$1a@gJ)
        (div0 . g$5578$1a@gJ)
        (div-and-mod . g$5581$1a@gJ)
        (mod . g$5579$1a@gJ)
        (div . g$6318$1a@gJ)
        (denominator . g$6300$1a@gJ)
        (cos . g$6311$1a@gJ)
        (cons . g$13834$1a@gJ)
        (complex? . g$6263$1a@gJ)
        (char? . g$5553$1a@gJ)
        (char>? . g$5647$1a@gJ)
        (char>=? . g$5649$1a@gJ)
        (char=? . g$5645$1a@gJ)
        (char<? . g$5646$1a@gJ)
        (char<=? . g$5648$1a@gJ)
        (char->integer . g$5562$1a@gJ)
        (ceiling . g$6321$1a@gJ)
        (call-with-values . g$13833$1a@gJ)
        (call/cc . g$13832$1a@gJ)
        (call-with-current-continuation . g$13831$1a@gJ)
        (cddddr . g$5620$1a@gJ)
        (cdddar . g$5619$1a@gJ)
        (cddadr . g$5618$1a@gJ)
        (cddaar . g$5617$1a@gJ)
        (cdaddr . g$5616$1a@gJ)
        (cdadar . g$5615$1a@gJ)
        (cdaadr . g$5614$1a@gJ)
        (cdaaar . g$5613$1a@gJ)
        (cadddr . g$5612$1a@gJ)
        (caddar . g$5611$1a@gJ)
        (cadadr . g$5610$1a@gJ)
        (cadaar . g$5609$1a@gJ)
        (caaddr . g$5608$1a@gJ)
        (caadar . g$5607$1a@gJ)
        (caaadr . g$5606$1a@gJ)
        (caaaar . g$5605$1a@gJ)
        (cdddr . g$5604$1a@gJ)
        (cddar . g$5603$1a@gJ)
        (cdadr . g$5602$1a@gJ)
        (cdaar . g$5601$1a@gJ)
        (caddr . g$5600$1a@gJ)
        (cadar . g$5599$1a@gJ)
        (caadr . g$5598$1a@gJ)
        (caaar . g$5597$1a@gJ)
        (cddr . g$5596$1a@gJ)
        (cdar . g$5595$1a@gJ)
        (cadr . g$5594$1a@gJ)
        (caar . g$5593$1a@gJ)
        (cdr . g$13830$1a@gJ)
        (car . g$13829$1a@gJ)
        (boolean? . g$5557$1a@gJ)
        (boolean=? . g$5639$1a@gJ)
        (atan . g$6316$1a@gJ)
        (assertion-violation . g$13828$1a@gJ)
        (asin . g$6309$1a@gJ)
        (apply . g$13827$1a@gJ)
        (append . g$5396$1a@gJ)
        (angle . g$6296$1a@gJ)
        (acos . g$6312$1a@gJ)
        (abs . g$6319$1a@gJ)
        (/ . g$13826$1a@gJ)
        (* . g$13825$1a@gJ)
        (- . g$13824$1a@gJ)
        (+ . g$13823$1a@gJ)
        (>= . g$6293$1a@gJ)
        (> . g$6292$1a@gJ)
        (= . g$6289$1a@gJ)
        (<= . g$6291$1a@gJ)
        (< . g$6290$1a@gJ)
        (unquote-splicing . g$13694$1a@gJ)
        (unquote . g$13693$1a@gJ)
        (_ . g$13692$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ)
        (... . g$13689$1a@gJ)
        (assert . g$13688$1a@gJ)
        (or . g$13684$1a@gJ)
        (and . g$13683$1a@gJ)
        (cond . g$13681$1a@gJ)
        (let* . g$13680$1a@gJ)
        (let . g$13679$1a@gJ)
        (identifier-syntax . g$13678$1a@gJ)
        (quasiquote . g$13675$1a@gJ)
        (syntax-rules . g$13674$1a@gJ)
        (let-values . g$13670$1a@gJ)
        (let*-values . g$13669$1a@gJ)
        (case . g$13665$1a@gJ)
        (if . g$13661$1a@gJ)
        (letrec* . g$13660$1a@gJ)
        (letrec . g$13659$1a@gJ)
        (lambda . g$13656$1a@gJ)
        (quote . g$13653$1a@gJ)
        (letrec-syntax . g$13651$1a@gJ)
        (let-syntax . g$13650$1a@gJ)
        (set! . g$13649$1a@gJ)
        (begin . g$13645$1a@gJ)
        (define-syntax . g$13643$1a@gJ)
        (define . g$13642$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14014$1a@gJ
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5399$1a@gJ)
        (remv . g$5400$1a@gJ)
        (remp . g$5377$1a@gJ)
        (remq . g$5401$1a@gJ)
        (partition . g$5376$1a@gJ)
        (memv . g$5384$1a@gJ)
        (memq . g$5383$1a@gJ)
        (memp . g$5386$1a@gJ)
        (member . g$5385$1a@gJ)
        (exists . g$5390$1a@gJ)
        (for-all . g$5389$1a@gJ)
        (fold-right . g$5398$1a@gJ)
        (fold-left . g$5397$1a@gJ)
        (find . g$5375$1a@gJ)
        (filter . g$5378$1a@gJ)
        (cons* . g$5393$1a@gJ)
        (assv . g$5380$1a@gJ)
        (assq . g$5379$1a@gJ)
        (assp . g$5382$1a@gJ)
        (assoc . g$5381$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14015$1a@gJ
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$8953$1a@gJ)
        (call-with-input-file . g$8952$1a@gJ)
        (write-char . g$8944$1a@gJ)
        (write . g$13926$1a@gJ)
        (with-output-to-file . g$8951$1a@gJ)
        (with-input-from-file . g$8950$1a@gJ)
        (read-char . g$8943$1a@gJ)
        (read . g$13925$1a@gJ)
        (peek-char . g$8942$1a@gJ)
        (open-output-file . g$13924$1a@gJ)
        (open-input-file . g$13923$1a@gJ)
        (newline . g$8954$1a@gJ)
        (display . g$13922$1a@gJ)
        (close-output-port . g$13921$1a@gJ)
        (close-input-port . g$13920$1a@gJ)
        (eof-object? . g$13919$1a@gJ)
        (eof-object . g$13918$1a@gJ)
        (current-error-port . g$13917$1a@gJ)
        (current-output-port . g$13916$1a@gJ)
        (current-input-port . g$13915$1a@gJ)
        (output-port? . g$13914$1a@gJ)
        (input-port? . g$13913$1a@gJ)
        (make-i/o-write-error . g$6860$1a@gJ)
        (make-i/o-read-error . g$6847$1a@gJ)
        (make-i/o-port-error . g$6955$1a@gJ)
        (make-i/o-invalid-position-error . g$6873$1a@gJ)
        (make-i/o-filename-error . g$6888$1a@gJ)
        (make-i/o-file-protection-error . g$6903$1a@gJ)
        (make-i/o-file-is-read-only-error . g$6916$1a@gJ)
        (make-i/o-file-does-not-exist-error . g$6942$1a@gJ)
        (make-i/o-file-already-exists-error . g$6929$1a@gJ)
        (make-i/o-error . g$6834$1a@gJ)
        (i/o-write-error? . g$6861$1a@gJ)
        (i/o-read-error? . g$6848$1a@gJ)
        (i/o-port-error? . g$6957$1a@gJ)
        (i/o-invalid-position-error? . g$6875$1a@gJ)
        (i/o-error-position . g$6876$1a@gJ)
        (i/o-filename-error? . g$6890$1a@gJ)
        (i/o-file-protection-error? . g$6904$1a@gJ)
        (i/o-file-is-read-only-error? . g$6917$1a@gJ)
        (i/o-file-does-not-exist-error? . g$6943$1a@gJ)
        (i/o-file-already-exists-error? . g$6930$1a@gJ)
        (i/o-error? . g$6835$1a@gJ)
        (i/o-error-port . g$6958$1a@gJ)
        (i/o-error-filename . g$6891$1a@gJ)
        (&i/o-port . g$13742$1a@gJ)
        (&i/o-file-does-not-exist . g$13741$1a@gJ)
        (&i/o-file-already-exists . g$13740$1a@gJ)
        (&i/o-file-is-read-only . g$13739$1a@gJ)
        (&i/o-file-protection . g$13738$1a@gJ)
        (&i/o-filename . g$13737$1a@gJ)
        (&i/o-invalid-position . g$13736$1a@gJ)
        (&i/o-write . g$13735$1a@gJ)
        (&i/o-read . g$13734$1a@gJ)
        (&i/o . g$13733$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14016$1a@gJ
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$5955$1a@gJ)
        (utf32->string . g$5973$1a@gJ)
        (utf16->string . g$5972$1a@gJ)
        (utf8->string . g$5970$1a@gJ)
        (uint-list->bytevector . g$5974$1a@gJ)
        (u8-list->bytevector . g$5966$1a@gJ)
        (string->utf8 . g$5967$1a@gJ)
        (string->utf32 . g$5969$1a@gJ)
        (string->utf16 . g$5968$1a@gJ)
        (sint-list->bytevector . g$5975$1a@gJ)
        (native-endianness . g$5941$1a@gJ)
        (bytevector? . g$5555$1a@gJ)
        (bytevector=? . g$5957$1a@gJ)
        (bytevector-uint-set! . g$13852$1a@gJ)
        (bytevector-uint-ref . g$13851$1a@gJ)
        (bytevector-u8-set! . g$5962$1a@gJ)
        (bytevector-u8-ref . g$5961$1a@gJ)
        (bytevector-u64-set! . g$6003$1a@gJ)
        (bytevector-u64-ref . g$5999$1a@gJ)
        (bytevector-u64-native-set! . g$6005$1a@gJ)
        (bytevector-u64-native-ref . g$6001$1a@gJ)
        (bytevector-u32-set! . g$5995$1a@gJ)
        (bytevector-u32-ref . g$5991$1a@gJ)
        (bytevector-u32-native-set! . g$5997$1a@gJ)
        (bytevector-u32-native-ref . g$5993$1a@gJ)
        (bytevector-u16-set! . g$5987$1a@gJ)
        (bytevector-u16-ref . g$5983$1a@gJ)
        (bytevector-u16-native-set! . g$5989$1a@gJ)
        (bytevector-u16-native-ref . g$5985$1a@gJ)
        (bytevector-sint-set! . g$13850$1a@gJ)
        (bytevector-sint-ref . g$13849$1a@gJ)
        (bytevector-s8-set! . g$5964$1a@gJ)
        (bytevector-s8-ref . g$5963$1a@gJ)
        (bytevector-s64-set! . g$6004$1a@gJ)
        (bytevector-s64-ref . g$6000$1a@gJ)
        (bytevector-s64-native-set! . g$6006$1a@gJ)
        (bytevector-s64-native-ref . g$6002$1a@gJ)
        (bytevector-s32-set! . g$5996$1a@gJ)
        (bytevector-s32-ref . g$5992$1a@gJ)
        (bytevector-s32-native-set! . g$5998$1a@gJ)
        (bytevector-s32-native-ref . g$5994$1a@gJ)
        (bytevector-s16-set! . g$5988$1a@gJ)
        (bytevector-s16-ref . g$5984$1a@gJ)
        (bytevector-s16-native-set! . g$5990$1a@gJ)
        (bytevector-s16-native-ref . g$5986$1a@gJ)
        (bytevector-length . g$5956$1a@gJ)
        (bytevector-ieee-single-set! . g$5981$1a@gJ)
        (bytevector-ieee-single-ref . g$5979$1a@gJ)
        (bytevector-ieee-single-native-set! . g$6009$1a@gJ)
        (bytevector-ieee-single-native-ref . g$6007$1a@gJ)
        (bytevector-ieee-double-set! . g$5982$1a@gJ)
        (bytevector-ieee-double-ref . g$5980$1a@gJ)
        (bytevector-ieee-double-native-set! . g$6010$1a@gJ)
        (bytevector-ieee-double-native-ref . g$6008$1a@gJ)
        (bytevector-fill! . g$5958$1a@gJ)
        (bytevector-copy! . g$5959$1a@gJ)
        (bytevector-copy . g$5960$1a@gJ)
        (bytevector->uint-list . g$5976$1a@gJ)
        (bytevector->u8-list . g$5965$1a@gJ)
        (bytevector->sint-list . g$5977$1a@gJ)
        (endianness . g$13687$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14017$1a@gJ
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$13955$1a@gJ)
        (string-titlecase . g$7112$1a@gJ)
        (string-normalize-nfkd . g$7132$1a@gJ)
        (string-normalize-nfkc . g$7131$1a@gJ)
        (string-normalize-nfd . g$7130$1a@gJ)
        (string-normalize-nfc . g$7129$1a@gJ)
        (string-foldcase . g$7113$1a@gJ)
        (string-downcase . g$13954$1a@gJ)
        (string-ci>? . g$7109$1a@gJ)
        (string-ci>=? . g$7111$1a@gJ)
        (string-ci=? . g$7107$1a@gJ)
        (string-ci<? . g$7108$1a@gJ)
        (string-ci<=? . g$7110$1a@gJ)
        (char-whitespace? . g$7089$1a@gJ)
        (char-upper-case? . g$7090$1a@gJ)
        (char-title-case? . g$7092$1a@gJ)
        (char-numeric? . g$7088$1a@gJ)
        (char-lower-case? . g$7091$1a@gJ)
        (char-general-category . g$7093$1a@gJ)
        (char-upcase . g$7083$1a@gJ)
        (char-titlecase . g$7085$1a@gJ)
        (char-foldcase . g$7086$1a@gJ)
        (char-downcase . g$7084$1a@gJ)
        (char-ci>? . g$7121$1a@gJ)
        (char-ci>=? . g$7123$1a@gJ)
        (char-ci=? . g$7119$1a@gJ)
        (char-ci<? . g$7120$1a@gJ)
        (char-ci<=? . g$7122$1a@gJ)
        (char-alphabetic? . g$7087$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14018$1a@gJ
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13860$1a@gJ)
        (raise-continuable . g$13859$1a@gJ)
        (raise . g$13858$1a@gJ)
        (guard . g$13702$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14019$1a@gJ
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7227$1a@gJ)
        (bitwise-reverse-bit-field . g$7228$1a@gJ)
        (bitwise-length . g$7218$1a@gJ)
        (bitwise-if . g$7221$1a@gJ)
        (bitwise-first-bit-set . g$7219$1a@gJ)
        (bitwise-copy-bit-field . g$7224$1a@gJ)
        (bitwise-copy-bit . g$7222$1a@gJ)
        (bitwise-bit-set? . g$7220$1a@gJ)
        (bitwise-bit-field . g$7223$1a@gJ)
        (bitwise-bit-count . g$7217$1a@gJ)
        (bitwise-xor . g$7216$1a@gJ)
        (bitwise-ior . g$7215$1a@gJ)
        (bitwise-and . g$7214$1a@gJ)
        (bitwise-not . g$7213$1a@gJ)
        (bitwise-arithmetic-shift-right . g$7226$1a@gJ)
        (bitwise-arithmetic-shift-left . g$7225$1a@gJ)
        (bitwise-arithmetic-shift . g$13848$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14020$1a@gJ
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$7403$1a@gJ)
        (fxxor . g$7366$1a@gJ)
        (fxrotate-bit-field . g$7441$1a@gJ)
        (fxreverse-bit-field . g$7442$1a@gJ)
        (fxpositive? . g$7393$1a@gJ)
        (fxodd? . g$7413$1a@gJ)
        (fxnot . g$7347$1a@gJ)
        (fxnegative? . g$7398$1a@gJ)
        (fxmod0 . g$7377$1a@gJ)
        (fxmod . g$7376$1a@gJ)
        (fxmin . g$7415$1a@gJ)
        (fxmax . g$7414$1a@gJ)
        (fxlength . g$7344$1a@gJ)
        (fxior . g$7365$1a@gJ)
        (fxif . g$7423$1a@gJ)
        (fxfirst-bit-set . g$7345$1a@gJ)
        (fxeven? . g$7408$1a@gJ)
        (fxdiv0-and-mod0 . g$7388$1a@gJ)
        (fxdiv0 . g$7383$1a@gJ)
        (fxdiv-and-mod . g$7378$1a@gJ)
        (fxdiv . g$7371$1a@gJ)
        (fxcopy-bit-field . g$7438$1a@gJ)
        (fxcopy-bit . g$7428$1a@gJ)
        (fxbit-set? . g$7346$1a@gJ)
        (fxbit-field . g$7433$1a@gJ)
        (fxbit-count . g$7339$1a@gJ)
        (fxarithmetic-shift-right . g$7440$1a@gJ)
        (fxarithmetic-shift-left . g$7439$1a@gJ)
        (fxarithmetic-shift . g$7334$1a@gJ)
        (fxand . g$7364$1a@gJ)
        (fx>? . g$7356$1a@gJ)
        (fx>=? . g$7357$1a@gJ)
        (fx=? . g$7353$1a@gJ)
        (fx<? . g$7354$1a@gJ)
        (fx<=? . g$7355$1a@gJ)
        (fx-/carry . g$7417$1a@gJ)
        (fx- . g$7328$1a@gJ)
        (fx+/carry . g$7418$1a@gJ)
        (fx+ . g$7326$1a@gJ)
        (fx*/carry . g$7416$1a@gJ)
        (fx* . g$7327$1a@gJ)
        (greatest-fixnum . g$7297$1a@gJ)
        (least-fixnum . g$7298$1a@gJ)
        (fixnum-width . g$5561$1a@gJ)
        (fixnum? . g$5559$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14021$1a@gJ
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7012$1a@gJ)
        (no-infinities-violation? . g$6999$1a@gJ)
        (make-no-nans-violation . g$7011$1a@gJ)
        (make-no-infinities-violation . g$6998$1a@gJ)
        (real->flonum . g$6255$1a@gJ)
        (flzero? . g$8358$1a@gJ)
        (fltruncate . g$8353$1a@gJ)
        (fltan . g$8339$1a@gJ)
        (flsqrt . g$8344$1a@gJ)
        (flsin . g$8337$1a@gJ)
        (flround . g$8354$1a@gJ)
        (flpositive? . g$8356$1a@gJ)
        (flonum? . g$5560$1a@gJ)
        (flodd? . g$8360$1a@gJ)
        (flnumerator . g$8303$1a@gJ)
        (flnegative? . g$8357$1a@gJ)
        (flnan? . g$8336$1a@gJ)
        (flmod0 . g$8321$1a@gJ)
        (flmod . g$8320$1a@gJ)
        (flmin . g$8362$1a@gJ)
        (flmax . g$8361$1a@gJ)
        (fllog . g$8343$1a@gJ)
        (flinteger? . g$8329$1a@gJ)
        (flinfinite? . g$8335$1a@gJ)
        (flfloor . g$8352$1a@gJ)
        (flfinite? . g$8330$1a@gJ)
        (flexpt . g$8346$1a@gJ)
        (flexp . g$8345$1a@gJ)
        (fleven? . g$8359$1a@gJ)
        (fldiv0-and-mod0 . g$8328$1a@gJ)
        (fldiv0 . g$8315$1a@gJ)
        (fldiv-and-mod . g$8322$1a@gJ)
        (fldiv . g$8327$1a@gJ)
        (fldenominator . g$8302$1a@gJ)
        (flcos . g$8338$1a@gJ)
        (flceiling . g$8347$1a@gJ)
        (flatan . g$8342$1a@gJ)
        (flasin . g$8340$1a@gJ)
        (flacos . g$8341$1a@gJ)
        (flabs . g$8355$1a@gJ)
        (fl>? . g$8309$1a@gJ)
        (fl>=? . g$8310$1a@gJ)
        (fl=? . g$8306$1a@gJ)
        (fl<? . g$8307$1a@gJ)
        (fl<=? . g$8308$1a@gJ)
        (fl/ . g$8305$1a@gJ)
        (fl- . g$8304$1a@gJ)
        (fl+ . g$8300$1a@gJ)
        (fl* . g$8301$1a@gJ)
        (fixnum->flonum . g$6256$1a@gJ)
        (&no-nans . g$13746$1a@gJ)
        (&no-infinities . g$13745$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14022$1a@gJ
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$5905$1a@gJ)
        (string-ci-hash . g$5904$1a@gJ)
        (string-hash . g$5903$1a@gJ)
        (equal-hash . g$13934$1a@gJ)
        (hashtable-equivalence-function . g$13933$1a@gJ)
        (make-hashtable . g$13932$1a@gJ)
        (hashtable-hash-function . g$13931$1a@gJ)
        (make-eqv-hashtable . g$5895$1a@gJ)
        (make-eq-hashtable . g$5894$1a@gJ)
        (hashtable? . g$5893$1a@gJ)
        (hashtable-update! . g$5901$1a@gJ)
        (hashtable-size . g$5896$1a@gJ)
        (hashtable-set! . g$5898$1a@gJ)
        (hashtable-ref . g$5897$1a@gJ)
        (hashtable-mutable? . g$13930$1a@gJ)
        (hashtable-keys . g$13929$1a@gJ)
        (hashtable-entries . g$13928$1a@gJ)
        (hashtable-delete! . g$5899$1a@gJ)
        (hashtable-copy . g$13927$1a@gJ)
        (hashtable-contains? . g$5900$1a@gJ)
        (hashtable-clear! . g$5902$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14023$1a@gJ
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13919$1a@gJ)
        (eof-object . g$13918$1a@gJ)
        (current-error-port . g$13917$1a@gJ)
        (current-output-port . g$13916$1a@gJ)
        (current-input-port . g$13915$1a@gJ)
        (output-port? . g$13914$1a@gJ)
        (input-port? . g$13913$1a@gJ)
        (utf-8-codec . g$13912$1a@gJ)
        (utf-16-codec . g$13911$1a@gJ)
        (transcoder-error-handling-mode . g$13910$1a@gJ)
        (transcoder-eol-style . g$13909$1a@gJ)
        (transcoder-codec . g$13908$1a@gJ)
        (transcoded-port . g$13907$1a@gJ)
        (textual-port? . g$13906$1a@gJ)
        (string->bytevector . g$13905$1a@gJ)
        (standard-output-port . g$8918$1a@gJ)
        (standard-input-port . g$8917$1a@gJ)
        (standard-error-port . g$8916$1a@gJ)
        (set-port-position! . g$13904$1a@gJ)
        (put-u8 . g$13903$1a@gJ)
        (put-string . g$13902$1a@gJ)
        (put-datum . g$8921$1a@gJ)
        (put-char . g$13901$1a@gJ)
        (put-bytevector . g$13900$1a@gJ)
        (port? . g$8926$1a@gJ)
        (port-transcoder . g$13899$1a@gJ)
        (port-position . g$13898$1a@gJ)
        (port-has-set-port-position!? . g$13897$1a@gJ)
        (port-has-port-position? . g$13896$1a@gJ)
        (port-eof? . g$13895$1a@gJ)
        (output-port-buffer-mode . g$13894$1a@gJ)
        (open-string-output-port . g$8925$1a@gJ)
        (open-string-input-port . g$13893$1a@gJ)
        (open-file-output-port . g$13892$1a@gJ)
        (open-file-input/output-port . g$13891$1a@gJ)
        (open-file-input-port . g$13890$1a@gJ)
        (open-bytevector-output-port . g$13889$1a@gJ)
        (open-bytevector-input-port . g$13888$1a@gJ)
        (native-transcoder . g$13887$1a@gJ)
        (native-eol-style . g$8919$1a@gJ)
        (make-transcoder . g$13886$1a@gJ)
        (latin-1-codec . g$13885$1a@gJ)
        (make-i/o-write-error . g$6860$1a@gJ)
        (make-i/o-read-error . g$6847$1a@gJ)
        (make-i/o-port-error . g$6955$1a@gJ)
        (make-i/o-invalid-position-error . g$6873$1a@gJ)
        (make-i/o-filename-error . g$6888$1a@gJ)
        (make-i/o-file-protection-error . g$6903$1a@gJ)
        (make-i/o-file-is-read-only-error . g$6916$1a@gJ)
        (make-i/o-file-does-not-exist-error . g$6942$1a@gJ)
        (make-i/o-file-already-exists-error . g$6929$1a@gJ)
        (make-i/o-error . g$6834$1a@gJ)
        (make-i/o-encoding-error . g$6983$1a@gJ)
        (make-i/o-decoding-error . g$6970$1a@gJ)
        (make-custom-textual-output-port . g$13884$1a@gJ)
        (make-custom-textual-input/output-port . g$13883$1a@gJ)
        (make-custom-textual-input-port . g$13882$1a@gJ)
        (make-custom-binary-output-port . g$13881$1a@gJ)
        (make-custom-binary-input/output-port . g$13880$1a@gJ)
        (make-custom-binary-input-port . g$13879$1a@gJ)
        (lookahead-u8 . g$13878$1a@gJ)
        (lookahead-char . g$13877$1a@gJ)
        (i/o-write-error? . g$6861$1a@gJ)
        (i/o-read-error? . g$6848$1a@gJ)
        (i/o-port-error? . g$6957$1a@gJ)
        (i/o-invalid-position-error? . g$6875$1a@gJ)
        (i/o-error-position . g$6876$1a@gJ)
        (i/o-filename-error? . g$6890$1a@gJ)
        (i/o-file-protection-error? . g$6904$1a@gJ)
        (i/o-file-is-read-only-error? . g$6917$1a@gJ)
        (i/o-file-does-not-exist-error? . g$6943$1a@gJ)
        (i/o-file-already-exists-error? . g$6930$1a@gJ)
        (i/o-error? . g$6835$1a@gJ)
        (i/o-error-port . g$6958$1a@gJ)
        (i/o-error-filename . g$6891$1a@gJ)
        (i/o-encoding-error? . g$6985$1a@gJ)
        (i/o-encoding-error-char . g$6986$1a@gJ)
        (i/o-decoding-error? . g$6971$1a@gJ)
        (get-u8 . g$13876$1a@gJ)
        (get-string-n! . g$13875$1a@gJ)
        (get-string-n . g$13874$1a@gJ)
        (get-string-all . g$13873$1a@gJ)
        (get-line . g$13872$1a@gJ)
        (get-datum . g$8922$1a@gJ)
        (get-char . g$13871$1a@gJ)
        (get-bytevector-some . g$13870$1a@gJ)
        (get-bytevector-n! . g$13869$1a@gJ)
        (get-bytevector-n . g$13868$1a@gJ)
        (get-bytevector-all . g$13867$1a@gJ)
        (flush-output-port . g$13866$1a@gJ)
        (close-port . g$13865$1a@gJ)
        (call-with-string-output-port . g$8927$1a@gJ)
        (call-with-port . g$8928$1a@gJ)
        (call-with-bytevector-output-port . g$13864$1a@gJ)
        (bytevector->string . g$13863$1a@gJ)
        (buffer-mode? . g$8920$1a@gJ)
        (binary-port? . g$13862$1a@gJ)
        (&i/o-encoding . g$13744$1a@gJ)
        (&i/o-decoding . g$13743$1a@gJ)
        (&i/o-port . g$13742$1a@gJ)
        (&i/o-file-does-not-exist . g$13741$1a@gJ)
        (&i/o-file-already-exists . g$13740$1a@gJ)
        (&i/o-file-is-read-only . g$13739$1a@gJ)
        (&i/o-file-protection . g$13738$1a@gJ)
        (&i/o-filename . g$13737$1a@gJ)
        (&i/o-invalid-position . g$13736$1a@gJ)
        (&i/o-write . g$13735$1a@gJ)
        (&i/o-read . g$13734$1a@gJ)
        (&i/o . g$13733$1a@gJ)
        (error-handling-mode . g$13706$1a@gJ)
        (file-options . g$13705$1a@gJ)
        (buffer-mode . g$13704$1a@gJ)
        (eol-style . g$13703$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14024$1a@gJ
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$9014$1a@gJ)
        (enum-set=? . g$9021$1a@gJ)
        (enum-set-universe . g$9015$1a@gJ)
        (enum-set-union . g$9022$1a@gJ)
        (enum-set-subset? . g$9020$1a@gJ)
        (enum-set-projection . g$9026$1a@gJ)
        (enum-set-member? . g$9019$1a@gJ)
        (enum-set-intersection . g$9023$1a@gJ)
        (enum-set-indexer . g$9016$1a@gJ)
        (enum-set-difference . g$9024$1a@gJ)
        (enum-set-constructor . g$9017$1a@gJ)
        (enum-set-complement . g$9025$1a@gJ)
        (enum-set->list . g$9018$1a@gJ)
        (define-enumeration . g$13717$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14025$1a@gJ
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6722$1a@gJ)
        (warning? . g$6641$1a@gJ)
        (violation? . g$6680$1a@gJ)
        (undefined-violation? . g$6822$1a@gJ)
        (syntax-violation? . g$6807$1a@gJ)
        (syntax-violation-subform . g$6809$1a@gJ)
        (syntax-violation-form . g$6808$1a@gJ)
        (simple-conditions . g$13857$1a@gJ)
        (serious-condition? . g$6654$1a@gJ)
        (non-continuable-violation? . g$6766$1a@gJ)
        (message-condition? . g$6627$1a@gJ)
        (make-who-condition . g$6720$1a@gJ)
        (make-warning . g$6640$1a@gJ)
        (make-violation . g$6679$1a@gJ)
        (make-undefined-violation . g$6821$1a@gJ)
        (make-syntax-violation . g$6804$1a@gJ)
        (make-serious-condition . g$6653$1a@gJ)
        (make-non-continuable-violation . g$6765$1a@gJ)
        (make-message-condition . g$6625$1a@gJ)
        (make-lexical-violation . g$6791$1a@gJ)
        (make-irritants-condition . g$6705$1a@gJ)
        (make-implementation-restriction-violation . g$6778$1a@gJ)
        (make-error . g$6666$1a@gJ)
        (make-assertion-violation . g$6692$1a@gJ)
        (lexical-violation? . g$6792$1a@gJ)
        (irritants-condition? . g$6707$1a@gJ)
        (implementation-restriction-violation? . g$6779$1a@gJ)
        (error? . g$6667$1a@gJ)
        (condition-who . g$6723$1a@gJ)
        (condition-predicate . g$13856$1a@gJ)
        (condition-message . g$6628$1a@gJ)
        (condition-irritants . g$6708$1a@gJ)
        (condition-accessor . g$13855$1a@gJ)
        (condition . g$13854$1a@gJ)
        (assertion-violation? . g$6693$1a@gJ)
        (condition? . g$13853$1a@gJ)
        (&non-continuable . g$13732$1a@gJ)
        (&undefined . g$13731$1a@gJ)
        (&syntax . g$13730$1a@gJ)
        (&lexical . g$13729$1a@gJ)
        (&implementation-restriction . g$13728$1a@gJ)
        (&who . g$13727$1a@gJ)
        (&irritants . g$13726$1a@gJ)
        (&assertion . g$13725$1a@gJ)
        (&violation . g$13724$1a@gJ)
        (&error . g$13723$1a@gJ)
        (&serious . g$13722$1a@gJ)
        (&warning . g$13721$1a@gJ)
        (&message . g$13720$1a@gJ)
        (&condition . g$13719$1a@gJ)
        (define-condition-type . g$13718$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14026$1a@gJ
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13946$1a@gJ)
        (record-type-uid . g$13945$1a@gJ)
        (record-type-sealed? . g$13944$1a@gJ)
        (record-type-parent . g$13943$1a@gJ)
        (record-type-opaque? . g$13942$1a@gJ)
        (record-type-name . g$13941$1a@gJ)
        (record-type-generative? . g$13940$1a@gJ)
        (record-type-field-names . g$13939$1a@gJ)
        (record-rtd . g$13938$1a@gJ)
        (record-field-mutable? . g$13937$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14027$1a@gJ
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$13953$1a@gJ)
        (record-predicate . g$13952$1a@gJ)
        (record-mutator . g$13951$1a@gJ)
        (record-constructor . g$13950$1a@gJ)
        (record-accessor . g$13949$1a@gJ)
        (make-record-type-descriptor . g$13948$1a@gJ)
        (make-record-constructor-descriptor . g$13947$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14028$1a@gJ
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13716$1a@gJ)
        (parent-rtd . g$13715$1a@gJ)
        (nongenerative . g$13714$1a@gJ)
        (opaque . g$13713$1a@gJ)
        (sealed . g$13712$1a@gJ)
        (protocol . g$13711$1a@gJ)
        (parent . g$13710$1a@gJ)
        (immutable . g$13709$1a@gJ)
        (mutable . g$13708$1a@gJ)
        (fields . g$13707$1a@gJ)
        (record-constructor-descriptor . g$13668$1a@gJ)
        (record-type-descriptor . g$13667$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14029$1a@gJ
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$10437$1a@gJ)
        (&stacktrace-rcd . g$6755$1a@gJ)
        (&stacktrace-rtd . g$6754$1a@gJ)
        (&where-rcd . g$6740$1a@gJ)
        (&where-rtd . g$6739$1a@gJ)
        (&no-nans-rcd . g$7014$1a@gJ)
        (&no-nans-rtd . g$7013$1a@gJ)
        (&no-infinities-rcd . g$7001$1a@gJ)
        (&no-infinities-rtd . g$7000$1a@gJ)
        (&i/o-encoding-rcd . g$6988$1a@gJ)
        (&i/o-encoding-rtd . g$6987$1a@gJ)
        (&i/o-decoding-rcd . g$6973$1a@gJ)
        (&i/o-decoding-rtd . g$6972$1a@gJ)
        (&i/o-port-rcd . g$6960$1a@gJ)
        (&i/o-port-rtd . g$6959$1a@gJ)
        (&i/o-file-does-not-exist-rcd . g$6945$1a@gJ)
        (&i/o-file-does-not-exist-rtd . g$6944$1a@gJ)
        (&i/o-file-already-exists-rcd . g$6932$1a@gJ)
        (&i/o-file-already-exists-rtd . g$6931$1a@gJ)
        (&i/o-file-is-read-only-rcd . g$6919$1a@gJ)
        (&i/o-file-is-read-only-rtd . g$6918$1a@gJ)
        (&i/o-file-protection-rcd . g$6906$1a@gJ)
        (&i/o-file-protection-rtd . g$6905$1a@gJ)
        (&i/o-filename-rcd . g$6893$1a@gJ)
        (&i/o-filename-rtd . g$6892$1a@gJ)
        (&i/o-invalid-position-rcd . g$6878$1a@gJ)
        (&i/o-invalid-position-rtd . g$6877$1a@gJ)
        (&i/o-write-rcd . g$6863$1a@gJ)
        (&i/o-write-rtd . g$6862$1a@gJ)
        (&i/o-read-rcd . g$6850$1a@gJ)
        (&i/o-read-rtd . g$6849$1a@gJ)
        (&i/o-rcd . g$6837$1a@gJ)
        (&i/o-rtd . g$6836$1a@gJ)
        (&undefined-rcd . g$6824$1a@gJ)
        (&undefined-rtd . g$6823$1a@gJ)
        (&syntax-rcd . g$6811$1a@gJ)
        (&syntax-rtd . g$6810$1a@gJ)
        (&lexical-rcd . g$6794$1a@gJ)
        (&lexical-rtd . g$6793$1a@gJ)
        (&implementation-restriction-rcd . g$6781$1a@gJ)
        (&implementation-restriction-rtd . g$6780$1a@gJ)
        (&non-continuable-rcd . g$6768$1a@gJ)
        (&non-continuable-rtd . g$6767$1a@gJ)
        (&who-rcd . g$6725$1a@gJ)
        (&who-rtd . g$6724$1a@gJ)
        (&irritants-rcd . g$6710$1a@gJ)
        (&irritants-rtd . g$6709$1a@gJ)
        (&assertion-rcd . g$6695$1a@gJ)
        (&assertion-rtd . g$6694$1a@gJ)
        (&violation-rcd . g$6682$1a@gJ)
        (&violation-rtd . g$6681$1a@gJ)
        (&error-rcd . g$6669$1a@gJ)
        (&error-rtd . g$6668$1a@gJ)
        (&serious-rcd . g$6656$1a@gJ)
        (&serious-rtd . g$6655$1a@gJ)
        (&warning-rcd . g$6643$1a@gJ)
        (&warning-rtd . g$6642$1a@gJ)
        (&message-rcd . g$6630$1a@gJ)
        (&message-rtd . g$6629$1a@gJ)
        (&condition-rcd . g$6590$1a@gJ)
        (&condition-rtd . g$6589$1a@gJ)
        (library-letrec* . g$13992$1a@gJ)
        (annotation-stripped . g$13991$1a@gJ)
        (annotation-source . g$13990$1a@gJ)
        (annotation-expression . g$13989$1a@gJ)
        (annotation? . g$13988$1a@gJ)
        (read-annotated . g$13987$1a@gJ)
        (tanh . g$6315$1a@gJ)
        (cosh . g$6313$1a@gJ)
        (sinh . g$6310$1a@gJ)
        (make-guid . g$13986$1a@gJ)
        (unspecified? . g$13985$1a@gJ)
        (make-list . g$5374$1a@gJ)
        (last-pair . g$5373$1a@gJ)
        (load-r5rs . g$13984$1a@gJ)
        (license . g$13983$1a@gJ)
        (stacktrace . g$13982$1a@gJ)
        (ironscheme-test . g$13589$1a@gJ)
        (ironscheme-build . g$13590$1a@gJ)
        (pinvoke-call-internal . g$13981$1a@gJ)
        (ffi-callback-internal . g$13980$1a@gJ)
        (ffi-callout-internal . g$13979$1a@gJ)
        (define-clr-class-internal . g$13978$1a@gJ)
        (clr-field-set!-internal . g$13977$1a@gJ)
        (clr-field-get-internal . g$13976$1a@gJ)
        (clr-cast-internal . g$13975$1a@gJ)
        (clr-call-internal . g$13974$1a@gJ)
        (clr-new-internal . g$13973$1a@gJ)
        (clr-new-array-internal . g$13972$1a@gJ)
        (clr-is-internal . g$13971$1a@gJ)
        (clr-reference-internal . g$13970$1a@gJ)
        (clr-using-internal . g$13969$1a@gJ)
        (syntax-error . g$10558$1a@gJ)
        (syntax-dispatch . g$10432$1a@gJ)
        (compile-core . g$13968$1a@gJ)
        (eval-core . g$13967$1a@gJ)
        (remove-location . g$13966$1a@gJ)
        (set-symbol-value! . g$13965$1a@gJ)
        (symbol-value . g$13964$1a@gJ)
        (symbol-bound? . g$13963$1a@gJ)
        (ungensym . g$13962$1a@gJ)
        (gensym . g$13961$1a@gJ)
        (void . g$13960$1a@gJ)
        (load-serialized-library . g$13959$1a@gJ)
        (serialize-library . g$13958$1a@gJ)
        (compile-system-libraries . g$13594$1a@gJ)
        (compile->closure . g$13596$1a@gJ)
        (compile . g$13595$1a@gJ)
        (load . g$13588$1a@gJ)
        (string-normalize . g$13957$1a@gJ)
        (new-interaction-environment . g$10567$1a@gJ)
        (interaction-environment . g$10568$1a@gJ)
        (char-ready? . g$13956$1a@gJ)
        (string-upcase . g$13955$1a@gJ)
        (string-titlecase . g$7112$1a@gJ)
        (string-normalize-nfkd . g$7132$1a@gJ)
        (string-normalize-nfkc . g$7131$1a@gJ)
        (string-normalize-nfd . g$7130$1a@gJ)
        (string-normalize-nfc . g$7129$1a@gJ)
        (string-foldcase . g$7113$1a@gJ)
        (string-downcase . g$13954$1a@gJ)
        (string-ci>? . g$7109$1a@gJ)
        (string-ci>=? . g$7111$1a@gJ)
        (string-ci=? . g$7107$1a@gJ)
        (string-ci<? . g$7108$1a@gJ)
        (string-ci<=? . g$7110$1a@gJ)
        (char-whitespace? . g$7089$1a@gJ)
        (char-upper-case? . g$7090$1a@gJ)
        (char-title-case? . g$7092$1a@gJ)
        (char-numeric? . g$7088$1a@gJ)
        (char-lower-case? . g$7091$1a@gJ)
        (char-general-category . g$7093$1a@gJ)
        (char-upcase . g$7083$1a@gJ)
        (char-titlecase . g$7085$1a@gJ)
        (char-foldcase . g$7086$1a@gJ)
        (char-downcase . g$7084$1a@gJ)
        (char-ci>? . g$7121$1a@gJ)
        (char-ci>=? . g$7123$1a@gJ)
        (char-ci=? . g$7119$1a@gJ)
        (char-ci<? . g$7120$1a@gJ)
        (char-ci<=? . g$7122$1a@gJ)
        (char-alphabetic? . g$7087$1a@gJ)
        (variable-transformer-procedure . g$10244$1a@gJ)
        (variable-transformer? . g$10243$1a@gJ)
        (make-variable-transformer . g$10241$1a@gJ)
        (identifier? . g$10562$1a@gJ)
        (generate-temporaries . g$10550$1a@gJ)
        (free-identifier=? . g$10551$1a@gJ)
        (syntax->datum . g$10564$1a@gJ)
        (datum->syntax . g$10563$1a@gJ)
        (bound-identifier=? . g$10552$1a@gJ)
        (record-type-descriptor? . g$13953$1a@gJ)
        (record-predicate . g$13952$1a@gJ)
        (record-mutator . g$13951$1a@gJ)
        (record-constructor . g$13950$1a@gJ)
        (record-accessor . g$13949$1a@gJ)
        (make-record-type-descriptor . g$13948$1a@gJ)
        (make-record-constructor-descriptor . g$13947$1a@gJ)
        (record? . g$13946$1a@gJ)
        (record-type-uid . g$13945$1a@gJ)
        (record-type-sealed? . g$13944$1a@gJ)
        (record-type-parent . g$13943$1a@gJ)
        (record-type-opaque? . g$13942$1a@gJ)
        (record-type-name . g$13941$1a@gJ)
        (record-type-generative? . g$13940$1a@gJ)
        (record-type-field-names . g$13939$1a@gJ)
        (record-rtd . g$13938$1a@gJ)
        (record-field-mutable? . g$13937$1a@gJ)
        (delete-file . g$5935$1a@gJ)
        (file-exists? . g$5934$1a@gJ)
        (vector-sort! . g$13936$1a@gJ)
        (vector-sort . g$13935$1a@gJ)
        (list-sort . g$7056$1a@gJ)
        (symbol-hash . g$5905$1a@gJ)
        (string-ci-hash . g$5904$1a@gJ)
        (string-hash . g$5903$1a@gJ)
        (equal-hash . g$13934$1a@gJ)
        (hashtable-equivalence-function . g$13933$1a@gJ)
        (make-hashtable . g$13932$1a@gJ)
        (hashtable-hash-function . g$13931$1a@gJ)
        (make-eqv-hashtable . g$5895$1a@gJ)
        (make-eq-hashtable . g$5894$1a@gJ)
        (hashtable? . g$5893$1a@gJ)
        (hashtable-update! . g$5901$1a@gJ)
        (hashtable-size . g$5896$1a@gJ)
        (hashtable-set! . g$5898$1a@gJ)
        (hashtable-ref . g$5897$1a@gJ)
        (hashtable-mutable? . g$13930$1a@gJ)
        (hashtable-keys . g$13929$1a@gJ)
        (hashtable-entries . g$13928$1a@gJ)
        (hashtable-delete! . g$5899$1a@gJ)
        (hashtable-copy . g$13927$1a@gJ)
        (hashtable-contains? . g$5900$1a@gJ)
        (hashtable-clear! . g$5902$1a@gJ)
        (call-with-output-file . g$8953$1a@gJ)
        (call-with-input-file . g$8952$1a@gJ)
        (write-char . g$8944$1a@gJ)
        (write . g$13926$1a@gJ)
        (with-output-to-file . g$8951$1a@gJ)
        (with-input-from-file . g$8950$1a@gJ)
        (read-char . g$8943$1a@gJ)
        (read . g$13925$1a@gJ)
        (peek-char . g$8942$1a@gJ)
        (open-output-file . g$13924$1a@gJ)
        (open-input-file . g$13923$1a@gJ)
        (newline . g$8954$1a@gJ)
        (display . g$13922$1a@gJ)
        (close-output-port . g$13921$1a@gJ)
        (close-input-port . g$13920$1a@gJ)
        (eof-object? . g$13919$1a@gJ)
        (eof-object . g$13918$1a@gJ)
        (current-error-port . g$13917$1a@gJ)
        (current-output-port . g$13916$1a@gJ)
        (current-input-port . g$13915$1a@gJ)
        (output-port? . g$13914$1a@gJ)
        (input-port? . g$13913$1a@gJ)
        (utf-8-codec . g$13912$1a@gJ)
        (utf-16-codec . g$13911$1a@gJ)
        (transcoder-error-handling-mode . g$13910$1a@gJ)
        (transcoder-eol-style . g$13909$1a@gJ)
        (transcoder-codec . g$13908$1a@gJ)
        (transcoded-port . g$13907$1a@gJ)
        (textual-port? . g$13906$1a@gJ)
        (string->bytevector . g$13905$1a@gJ)
        (standard-output-port . g$8918$1a@gJ)
        (standard-input-port . g$8917$1a@gJ)
        (standard-error-port . g$8916$1a@gJ)
        (set-port-position! . g$13904$1a@gJ)
        (put-u8 . g$13903$1a@gJ)
        (put-string . g$13902$1a@gJ)
        (put-datum . g$8921$1a@gJ)
        (put-char . g$13901$1a@gJ)
        (put-bytevector . g$13900$1a@gJ)
        (port? . g$8926$1a@gJ)
        (port-transcoder . g$13899$1a@gJ)
        (port-position . g$13898$1a@gJ)
        (port-has-set-port-position!? . g$13897$1a@gJ)
        (port-has-port-position? . g$13896$1a@gJ)
        (port-eof? . g$13895$1a@gJ)
        (output-port-buffer-mode . g$13894$1a@gJ)
        (open-string-output-port . g$8925$1a@gJ)
        (open-string-input-port . g$13893$1a@gJ)
        (open-file-output-port . g$13892$1a@gJ)
        (open-file-input/output-port . g$13891$1a@gJ)
        (open-file-input-port . g$13890$1a@gJ)
        (open-bytevector-output-port . g$13889$1a@gJ)
        (open-bytevector-input-port . g$13888$1a@gJ)
        (native-transcoder . g$13887$1a@gJ)
        (native-eol-style . g$8919$1a@gJ)
        (make-transcoder . g$13886$1a@gJ)
        (latin-1-codec . g$13885$1a@gJ)
        (make-i/o-write-error . g$6860$1a@gJ)
        (make-i/o-read-error . g$6847$1a@gJ)
        (make-i/o-port-error . g$6955$1a@gJ)
        (make-i/o-invalid-position-error . g$6873$1a@gJ)
        (make-i/o-filename-error . g$6888$1a@gJ)
        (make-i/o-file-protection-error . g$6903$1a@gJ)
        (make-i/o-file-is-read-only-error . g$6916$1a@gJ)
        (make-i/o-file-does-not-exist-error . g$6942$1a@gJ)
        (make-i/o-file-already-exists-error . g$6929$1a@gJ)
        (make-i/o-error . g$6834$1a@gJ)
        (make-i/o-encoding-error . g$6983$1a@gJ)
        (make-i/o-decoding-error . g$6970$1a@gJ)
        (make-custom-textual-output-port . g$13884$1a@gJ)
        (make-custom-textual-input/output-port . g$13883$1a@gJ)
        (make-custom-textual-input-port . g$13882$1a@gJ)
        (make-custom-binary-output-port . g$13881$1a@gJ)
        (make-custom-binary-input/output-port . g$13880$1a@gJ)
        (make-custom-binary-input-port . g$13879$1a@gJ)
        (make-bytevector . g$5955$1a@gJ)
        (lookahead-u8 . g$13878$1a@gJ)
        (lookahead-char . g$13877$1a@gJ)
        (i/o-write-error? . g$6861$1a@gJ)
        (i/o-read-error? . g$6848$1a@gJ)
        (i/o-port-error? . g$6957$1a@gJ)
        (i/o-invalid-position-error? . g$6875$1a@gJ)
        (i/o-error-position . g$6876$1a@gJ)
        (i/o-filename-error? . g$6890$1a@gJ)
        (i/o-file-protection-error? . g$6904$1a@gJ)
        (i/o-file-is-read-only-error? . g$6917$1a@gJ)
        (i/o-file-does-not-exist-error? . g$6943$1a@gJ)
        (i/o-file-already-exists-error? . g$6930$1a@gJ)
        (i/o-error? . g$6835$1a@gJ)
        (i/o-error-port . g$6958$1a@gJ)
        (i/o-error-filename . g$6891$1a@gJ)
        (i/o-encoding-error? . g$6985$1a@gJ)
        (i/o-encoding-error-char . g$6986$1a@gJ)
        (i/o-decoding-error? . g$6971$1a@gJ)
        (get-u8 . g$13876$1a@gJ)
        (get-string-n! . g$13875$1a@gJ)
        (get-string-n . g$13874$1a@gJ)
        (get-string-all . g$13873$1a@gJ)
        (get-line . g$13872$1a@gJ)
        (get-datum . g$8922$1a@gJ)
        (get-char . g$13871$1a@gJ)
        (get-bytevector-some . g$13870$1a@gJ)
        (get-bytevector-n! . g$13869$1a@gJ)
        (get-bytevector-n . g$13868$1a@gJ)
        (get-bytevector-all . g$13867$1a@gJ)
        (flush-output-port . g$13866$1a@gJ)
        (close-port . g$13865$1a@gJ)
        (call-with-string-output-port . g$8927$1a@gJ)
        (call-with-port . g$8928$1a@gJ)
        (call-with-bytevector-output-port . g$13864$1a@gJ)
        (bytevector->string . g$13863$1a@gJ)
        (buffer-mode? . g$8920$1a@gJ)
        (binary-port? . g$13862$1a@gJ)
        (scheme-report-environment . g$10540$1a@gJ)
        (quotient . g$7035$1a@gJ)
        (null-environment . g$10539$1a@gJ)
        (remainder . g$7036$1a@gJ)
        (modulo . g$7037$1a@gJ)
        (inexact->exact . g$7032$1a@gJ)
        (force . g$7039$1a@gJ)
        (exact->inexact . g$7033$1a@gJ)
        (exit . g$13861$1a@gJ)
        (command-line . g$13583$1a@gJ)
        (string-fill! . g$5567$1a@gJ)
        (string-set! . g$5566$1a@gJ)
        (set-cdr! . g$7018$1a@gJ)
        (set-car! . g$7017$1a@gJ)
        (remove . g$5399$1a@gJ)
        (remv . g$5400$1a@gJ)
        (remp . g$5377$1a@gJ)
        (remq . g$5401$1a@gJ)
        (partition . g$5376$1a@gJ)
        (memv . g$5384$1a@gJ)
        (memq . g$5383$1a@gJ)
        (memp . g$5386$1a@gJ)
        (member . g$5385$1a@gJ)
        (exists . g$5390$1a@gJ)
        (for-all . g$5389$1a@gJ)
        (fold-right . g$5398$1a@gJ)
        (fold-left . g$5397$1a@gJ)
        (find . g$5375$1a@gJ)
        (filter . g$5378$1a@gJ)
        (cons* . g$5393$1a@gJ)
        (assv . g$5380$1a@gJ)
        (assq . g$5379$1a@gJ)
        (assp . g$5382$1a@gJ)
        (assoc . g$5381$1a@gJ)
        (with-exception-handler . g$13860$1a@gJ)
        (raise-continuable . g$13859$1a@gJ)
        (raise . g$13858$1a@gJ)
        (eval . g$10542$1a@gJ)
        (environment . g$10538$1a@gJ)
        (make-enumeration . g$9014$1a@gJ)
        (enum-set=? . g$9021$1a@gJ)
        (enum-set-universe . g$9015$1a@gJ)
        (enum-set-union . g$9022$1a@gJ)
        (enum-set-subset? . g$9020$1a@gJ)
        (enum-set-projection . g$9026$1a@gJ)
        (enum-set-member? . g$9019$1a@gJ)
        (enum-set-intersection . g$9023$1a@gJ)
        (enum-set-indexer . g$9016$1a@gJ)
        (enum-set-difference . g$9024$1a@gJ)
        (enum-set-constructor . g$9017$1a@gJ)
        (enum-set-complement . g$9025$1a@gJ)
        (enum-set->list . g$9018$1a@gJ)
        (who-condition? . g$6722$1a@gJ)
        (warning? . g$6641$1a@gJ)
        (violation? . g$6680$1a@gJ)
        (undefined-violation? . g$6822$1a@gJ)
        (syntax-violation? . g$6807$1a@gJ)
        (syntax-violation-subform . g$6809$1a@gJ)
        (syntax-violation-form . g$6808$1a@gJ)
        (syntax-violation . g$10561$1a@gJ)
        (simple-conditions . g$13857$1a@gJ)
        (serious-condition? . g$6654$1a@gJ)
        (non-continuable-violation? . g$6766$1a@gJ)
        (message-condition? . g$6627$1a@gJ)
        (make-who-condition . g$6720$1a@gJ)
        (make-warning . g$6640$1a@gJ)
        (make-violation . g$6679$1a@gJ)
        (make-undefined-violation . g$6821$1a@gJ)
        (make-syntax-violation . g$6804$1a@gJ)
        (make-serious-condition . g$6653$1a@gJ)
        (make-non-continuable-violation . g$6765$1a@gJ)
        (make-message-condition . g$6625$1a@gJ)
        (make-lexical-violation . g$6791$1a@gJ)
        (make-irritants-condition . g$6705$1a@gJ)
        (make-implementation-restriction-violation . g$6778$1a@gJ)
        (make-error . g$6666$1a@gJ)
        (make-assertion-violation . g$6692$1a@gJ)
        (lexical-violation? . g$6792$1a@gJ)
        (irritants-condition? . g$6707$1a@gJ)
        (implementation-restriction-violation? . g$6779$1a@gJ)
        (error? . g$6667$1a@gJ)
        (condition-who . g$6723$1a@gJ)
        (condition-predicate . g$13856$1a@gJ)
        (condition-message . g$6628$1a@gJ)
        (condition-irritants . g$6708$1a@gJ)
        (condition-accessor . g$13855$1a@gJ)
        (condition . g$13854$1a@gJ)
        (assertion-violation? . g$6693$1a@gJ)
        (condition? . g$13853$1a@gJ)
        (utf32->string . g$5973$1a@gJ)
        (utf16->string . g$5972$1a@gJ)
        (utf8->string . g$5970$1a@gJ)
        (uint-list->bytevector . g$5974$1a@gJ)
        (u8-list->bytevector . g$5966$1a@gJ)
        (string->utf8 . g$5967$1a@gJ)
        (string->utf32 . g$5969$1a@gJ)
        (string->utf16 . g$5968$1a@gJ)
        (sint-list->bytevector . g$5975$1a@gJ)
        (native-endianness . g$5941$1a@gJ)
        (bytevector? . g$5555$1a@gJ)
        (bytevector=? . g$5957$1a@gJ)
        (bytevector-uint-set! . g$13852$1a@gJ)
        (bytevector-uint-ref . g$13851$1a@gJ)
        (bytevector-u8-set! . g$5962$1a@gJ)
        (bytevector-u8-ref . g$5961$1a@gJ)
        (bytevector-u64-set! . g$6003$1a@gJ)
        (bytevector-u64-ref . g$5999$1a@gJ)
        (bytevector-u64-native-set! . g$6005$1a@gJ)
        (bytevector-u64-native-ref . g$6001$1a@gJ)
        (bytevector-u32-set! . g$5995$1a@gJ)
        (bytevector-u32-ref . g$5991$1a@gJ)
        (bytevector-u32-native-set! . g$5997$1a@gJ)
        (bytevector-u32-native-ref . g$5993$1a@gJ)
        (bytevector-u16-set! . g$5987$1a@gJ)
        (bytevector-u16-ref . g$5983$1a@gJ)
        (bytevector-u16-native-set! . g$5989$1a@gJ)
        (bytevector-u16-native-ref . g$5985$1a@gJ)
        (bytevector-sint-set! . g$13850$1a@gJ)
        (bytevector-sint-ref . g$13849$1a@gJ)
        (bytevector-s8-set! . g$5964$1a@gJ)
        (bytevector-s8-ref . g$5963$1a@gJ)
        (bytevector-s64-set! . g$6004$1a@gJ)
        (bytevector-s64-ref . g$6000$1a@gJ)
        (bytevector-s64-native-set! . g$6006$1a@gJ)
        (bytevector-s64-native-ref . g$6002$1a@gJ)
        (bytevector-s32-set! . g$5996$1a@gJ)
        (bytevector-s32-ref . g$5992$1a@gJ)
        (bytevector-s32-native-set! . g$5998$1a@gJ)
        (bytevector-s32-native-ref . g$5994$1a@gJ)
        (bytevector-s16-set! . g$5988$1a@gJ)
        (bytevector-s16-ref . g$5984$1a@gJ)
        (bytevector-s16-native-set! . g$5990$1a@gJ)
        (bytevector-s16-native-ref . g$5986$1a@gJ)
        (bytevector-length . g$5956$1a@gJ)
        (bytevector-ieee-single-set! . g$5981$1a@gJ)
        (bytevector-ieee-single-ref . g$5979$1a@gJ)
        (bytevector-ieee-single-native-set! . g$6009$1a@gJ)
        (bytevector-ieee-single-native-ref . g$6007$1a@gJ)
        (bytevector-ieee-double-set! . g$5982$1a@gJ)
        (bytevector-ieee-double-ref . g$5980$1a@gJ)
        (bytevector-ieee-double-native-set! . g$6010$1a@gJ)
        (bytevector-ieee-double-native-ref . g$6008$1a@gJ)
        (bytevector-fill! . g$5958$1a@gJ)
        (bytevector-copy! . g$5959$1a@gJ)
        (bytevector-copy . g$5960$1a@gJ)
        (bytevector->uint-list . g$5976$1a@gJ)
        (bytevector->u8-list . g$5965$1a@gJ)
        (bytevector->sint-list . g$5977$1a@gJ)
        (no-nans-violation? . g$7012$1a@gJ)
        (no-infinities-violation? . g$6999$1a@gJ)
        (make-no-nans-violation . g$7011$1a@gJ)
        (make-no-infinities-violation . g$6998$1a@gJ)
        (real->flonum . g$6255$1a@gJ)
        (flzero? . g$8358$1a@gJ)
        (fltruncate . g$8353$1a@gJ)
        (fltan . g$8339$1a@gJ)
        (flsqrt . g$8344$1a@gJ)
        (flsin . g$8337$1a@gJ)
        (flround . g$8354$1a@gJ)
        (flpositive? . g$8356$1a@gJ)
        (flonum? . g$5560$1a@gJ)
        (flodd? . g$8360$1a@gJ)
        (flnumerator . g$8303$1a@gJ)
        (flnegative? . g$8357$1a@gJ)
        (flnan? . g$8336$1a@gJ)
        (flmod0 . g$8321$1a@gJ)
        (flmod . g$8320$1a@gJ)
        (flmin . g$8362$1a@gJ)
        (flmax . g$8361$1a@gJ)
        (fllog . g$8343$1a@gJ)
        (flinteger? . g$8329$1a@gJ)
        (flinfinite? . g$8335$1a@gJ)
        (flfloor . g$8352$1a@gJ)
        (flfinite? . g$8330$1a@gJ)
        (flexpt . g$8346$1a@gJ)
        (flexp . g$8345$1a@gJ)
        (fleven? . g$8359$1a@gJ)
        (fldiv0-and-mod0 . g$8328$1a@gJ)
        (fldiv0 . g$8315$1a@gJ)
        (fldiv-and-mod . g$8322$1a@gJ)
        (fldiv . g$8327$1a@gJ)
        (fldenominator . g$8302$1a@gJ)
        (flcos . g$8338$1a@gJ)
        (flceiling . g$8347$1a@gJ)
        (flatan . g$8342$1a@gJ)
        (flasin . g$8340$1a@gJ)
        (flacos . g$8341$1a@gJ)
        (flabs . g$8355$1a@gJ)
        (fl>? . g$8309$1a@gJ)
        (fl>=? . g$8310$1a@gJ)
        (fl=? . g$8306$1a@gJ)
        (fl<? . g$8307$1a@gJ)
        (fl<=? . g$8308$1a@gJ)
        (fl/ . g$8305$1a@gJ)
        (fl- . g$8304$1a@gJ)
        (fl+ . g$8300$1a@gJ)
        (fl* . g$8301$1a@gJ)
        (fixnum->flonum . g$6256$1a@gJ)
        (fxzero? . g$7403$1a@gJ)
        (fxxor . g$7366$1a@gJ)
        (fxrotate-bit-field . g$7441$1a@gJ)
        (fxreverse-bit-field . g$7442$1a@gJ)
        (fxpositive? . g$7393$1a@gJ)
        (fxodd? . g$7413$1a@gJ)
        (fxnot . g$7347$1a@gJ)
        (fxnegative? . g$7398$1a@gJ)
        (fxmod0 . g$7377$1a@gJ)
        (fxmod . g$7376$1a@gJ)
        (fxmin . g$7415$1a@gJ)
        (fxmax . g$7414$1a@gJ)
        (fxlength . g$7344$1a@gJ)
        (fxior . g$7365$1a@gJ)
        (fxif . g$7423$1a@gJ)
        (fxfirst-bit-set . g$7345$1a@gJ)
        (fxeven? . g$7408$1a@gJ)
        (fxdiv0-and-mod0 . g$7388$1a@gJ)
        (fxdiv0 . g$7383$1a@gJ)
        (fxdiv-and-mod . g$7378$1a@gJ)
        (fxdiv . g$7371$1a@gJ)
        (fxcopy-bit-field . g$7438$1a@gJ)
        (fxcopy-bit . g$7428$1a@gJ)
        (fxbit-set? . g$7346$1a@gJ)
        (fxbit-field . g$7433$1a@gJ)
        (fxbit-count . g$7339$1a@gJ)
        (fxarithmetic-shift-right . g$7440$1a@gJ)
        (fxarithmetic-shift-left . g$7439$1a@gJ)
        (fxarithmetic-shift . g$7334$1a@gJ)
        (fxand . g$7364$1a@gJ)
        (fx>? . g$7356$1a@gJ)
        (fx>=? . g$7357$1a@gJ)
        (fx=? . g$7353$1a@gJ)
        (fx<? . g$7354$1a@gJ)
        (fx<=? . g$7355$1a@gJ)
        (fx-/carry . g$7417$1a@gJ)
        (fx- . g$7328$1a@gJ)
        (fx+/carry . g$7418$1a@gJ)
        (fx+ . g$7326$1a@gJ)
        (fx*/carry . g$7416$1a@gJ)
        (fx* . g$7327$1a@gJ)
        (greatest-fixnum . g$7297$1a@gJ)
        (least-fixnum . g$7298$1a@gJ)
        (fixnum-width . g$5561$1a@gJ)
        (fixnum? . g$5559$1a@gJ)
        (bitwise-rotate-bit-field . g$7227$1a@gJ)
        (bitwise-reverse-bit-field . g$7228$1a@gJ)
        (bitwise-length . g$7218$1a@gJ)
        (bitwise-if . g$7221$1a@gJ)
        (bitwise-first-bit-set . g$7219$1a@gJ)
        (bitwise-copy-bit-field . g$7224$1a@gJ)
        (bitwise-copy-bit . g$7222$1a@gJ)
        (bitwise-bit-set? . g$7220$1a@gJ)
        (bitwise-bit-field . g$7223$1a@gJ)
        (bitwise-bit-count . g$7217$1a@gJ)
        (bitwise-xor . g$7216$1a@gJ)
        (bitwise-ior . g$7215$1a@gJ)
        (bitwise-and . g$7214$1a@gJ)
        (bitwise-not . g$7213$1a@gJ)
        (bitwise-arithmetic-shift-right . g$7226$1a@gJ)
        (bitwise-arithmetic-shift-left . g$7225$1a@gJ)
        (bitwise-arithmetic-shift . g$13848$1a@gJ)
        (zero? . g$6270$1a@gJ)
        (vector? . g$5554$1a@gJ)
        (vector-set! . g$5586$1a@gJ)
        (vector-ref . g$5585$1a@gJ)
        (vector-map . g$5653$1a@gJ)
        (vector-length . g$5588$1a@gJ)
        (vector-for-each . g$5654$1a@gJ)
        (vector-fill! . g$5589$1a@gJ)
        (vector->list . g$5590$1a@gJ)
        (vector . g$13847$1a@gJ)
        (values . g$13846$1a@gJ)
        (truncate . g$6322$1a@gJ)
        (tan . g$6314$1a@gJ)
        (symbol? . g$5556$1a@gJ)
        (symbol=? . g$5638$1a@gJ)
        (symbol->string . g$5576$1a@gJ)
        (substring . g$5573$1a@gJ)
        (string? . g$5552$1a@gJ)
        (string>? . g$5635$1a@gJ)
        (string>=? . g$5637$1a@gJ)
        (string=? . g$5633$1a@gJ)
        (string<? . g$5634$1a@gJ)
        (string<=? . g$5636$1a@gJ)
        (string-ref . g$5565$1a@gJ)
        (string-length . g$5568$1a@gJ)
        (string-for-each . g$5655$1a@gJ)
        (string-copy . g$5572$1a@gJ)
        (string-append . g$5574$1a@gJ)
        (string->symbol . g$5577$1a@gJ)
        (string->number . g$13845$1a@gJ)
        (string->list . g$5571$1a@gJ)
        (string . g$5570$1a@gJ)
        (sqrt . g$6324$1a@gJ)
        (sin . g$6308$1a@gJ)
        (round . g$6323$1a@gJ)
        (reverse . g$5592$1a@gJ)
        (real? . g$6264$1a@gJ)
        (real-valued? . g$6267$1a@gJ)
        (real-part . g$6301$1a@gJ)
        (rationalize . g$5650$1a@gJ)
        (rational? . g$6265$1a@gJ)
        (rational-valued? . g$6268$1a@gJ)
        (procedure? . g$5558$1a@gJ)
        (positive? . g$6271$1a@gJ)
        (pair? . g$13844$1a@gJ)
        (odd? . g$5622$1a@gJ)
        (numerator . g$6299$1a@gJ)
        (number? . g$6257$1a@gJ)
        (number->string . g$6278$1a@gJ)
        (null? . g$13843$1a@gJ)
        (not . g$13842$1a@gJ)
        (negative? . g$6272$1a@gJ)
        (nan? . g$6258$1a@gJ)
        (min . g$5624$1a@gJ)
        (max . g$5623$1a@gJ)
        (map . g$5391$1a@gJ)
        (make-vector . g$5587$1a@gJ)
        (make-string . g$5564$1a@gJ)
        (make-rectangular . g$6294$1a@gJ)
        (make-polar . g$6295$1a@gJ)
        (magnitude . g$6297$1a@gJ)
        (log . g$6317$1a@gJ)
        (list? . g$13841$1a@gJ)
        (list-tail . g$5371$1a@gJ)
        (list-ref . g$5372$1a@gJ)
        (list->vector . g$5583$1a@gJ)
        (list->string . g$5584$1a@gJ)
        (list . g$13840$1a@gJ)
        (length . g$13839$1a@gJ)
        (lcm . g$5626$1a@gJ)
        (integer? . g$6266$1a@gJ)
        (integer-valued? . g$6269$1a@gJ)
        (integer->char . g$5563$1a@gJ)
        (infinite? . g$6260$1a@gJ)
        (inexact? . g$6262$1a@gJ)
        (inexact . g$6273$1a@gJ)
        (imag-part . g$6302$1a@gJ)
        (gcd . g$5625$1a@gJ)
        (for-each . g$5392$1a@gJ)
        (floor . g$6320$1a@gJ)
        (finite? . g$6259$1a@gJ)
        (expt . g$6326$1a@gJ)
        (exp . g$6307$1a@gJ)
        (exact? . g$6261$1a@gJ)
        (exact-integer-sqrt . g$6325$1a@gJ)
        (exact . g$6274$1a@gJ)
        (even? . g$5621$1a@gJ)
        (error . g$13838$1a@gJ)
        (eqv? . g$13837$1a@gJ)
        (equal? . g$9146$1a@gJ)
        (eq? . g$13836$1a@gJ)
        (dynamic-wind . g$13835$1a@gJ)
        (div0-and-mod0 . g$5582$1a@gJ)
        (mod0 . g$5580$1a@gJ)
        (div0 . g$5578$1a@gJ)
        (div-and-mod . g$5581$1a@gJ)
        (mod . g$5579$1a@gJ)
        (div . g$6318$1a@gJ)
        (denominator . g$6300$1a@gJ)
        (cos . g$6311$1a@gJ)
        (cons . g$13834$1a@gJ)
        (complex? . g$6263$1a@gJ)
        (char? . g$5553$1a@gJ)
        (char>? . g$5647$1a@gJ)
        (char>=? . g$5649$1a@gJ)
        (char=? . g$5645$1a@gJ)
        (char<? . g$5646$1a@gJ)
        (char<=? . g$5648$1a@gJ)
        (char->integer . g$5562$1a@gJ)
        (ceiling . g$6321$1a@gJ)
        (call-with-values . g$13833$1a@gJ)
        (call/cc . g$13832$1a@gJ)
        (call-with-current-continuation . g$13831$1a@gJ)
        (cddddr . g$5620$1a@gJ)
        (cdddar . g$5619$1a@gJ)
        (cddadr . g$5618$1a@gJ)
        (cddaar . g$5617$1a@gJ)
        (cdaddr . g$5616$1a@gJ)
        (cdadar . g$5615$1a@gJ)
        (cdaadr . g$5614$1a@gJ)
        (cdaaar . g$5613$1a@gJ)
        (cadddr . g$5612$1a@gJ)
        (caddar . g$5611$1a@gJ)
        (cadadr . g$5610$1a@gJ)
        (cadaar . g$5609$1a@gJ)
        (caaddr . g$5608$1a@gJ)
        (caadar . g$5607$1a@gJ)
        (caaadr . g$5606$1a@gJ)
        (caaaar . g$5605$1a@gJ)
        (cdddr . g$5604$1a@gJ)
        (cddar . g$5603$1a@gJ)
        (cdadr . g$5602$1a@gJ)
        (cdaar . g$5601$1a@gJ)
        (caddr . g$5600$1a@gJ)
        (cadar . g$5599$1a@gJ)
        (caadr . g$5598$1a@gJ)
        (caaar . g$5597$1a@gJ)
        (cddr . g$5596$1a@gJ)
        (cdar . g$5595$1a@gJ)
        (cadr . g$5594$1a@gJ)
        (caar . g$5593$1a@gJ)
        (cdr . g$13830$1a@gJ)
        (car . g$13829$1a@gJ)
        (boolean? . g$5557$1a@gJ)
        (boolean=? . g$5639$1a@gJ)
        (atan . g$6316$1a@gJ)
        (assertion-violation . g$13828$1a@gJ)
        (asin . g$6309$1a@gJ)
        (apply . g$13827$1a@gJ)
        (append . g$5396$1a@gJ)
        (angle . g$6296$1a@gJ)
        (acos . g$6312$1a@gJ)
        (abs . g$6319$1a@gJ)
        (/ . g$13826$1a@gJ)
        (* . g$13825$1a@gJ)
        (- . g$13824$1a@gJ)
        (+ . g$13823$1a@gJ)
        (>= . g$6293$1a@gJ)
        (> . g$6292$1a@gJ)
        (= . g$6289$1a@gJ)
        (<= . g$6291$1a@gJ)
        (< . g$6290$1a@gJ)
        ($bytevector-set! . g$13822$1a@gJ)
        ($bytevector-ref . g$13821$1a@gJ)
        ($fl>=? . g$13820$1a@gJ)
        ($fl>? . g$13819$1a@gJ)
        ($fl<=? . g$13818$1a@gJ)
        ($fl<? . g$13817$1a@gJ)
        ($fl- . g$13816$1a@gJ)
        ($fl/ . g$13815$1a@gJ)
        ($fl* . g$13814$1a@gJ)
        ($fl+ . g$13813$1a@gJ)
        ($fl=? . g$13812$1a@gJ)
        ($try . g$13811$1a@gJ)
        ($fxarithmetic-shift-right . g$13810$1a@gJ)
        ($fxarithmetic-shift-left . g$13809$1a@gJ)
        ($$fx- . g$13808$1a@gJ)
        ($$fx* . g$13807$1a@gJ)
        ($$fx+ . g$13806$1a@gJ)
        ($fxnot . g$13805$1a@gJ)
        ($fxxor . g$13804$1a@gJ)
        ($fxior . g$13803$1a@gJ)
        ($fxand . g$13802$1a@gJ)
        ($fx>=? . g$13801$1a@gJ)
        ($fx>? . g$13800$1a@gJ)
        ($fx<=? . g$13799$1a@gJ)
        ($fx<? . g$13798$1a@gJ)
        ($fx- . g$13797$1a@gJ)
        ($fxmod0 . g$13796$1a@gJ)
        ($fxdiv0 . g$13795$1a@gJ)
        ($fx* . g$13794$1a@gJ)
        ($fx+ . g$13793$1a@gJ)
        ($fx=? . g$13792$1a@gJ)
        ($vector-set! . g$13791$1a@gJ)
        ($vector-ref . g$13790$1a@gJ)
        ($cdr . g$13789$1a@gJ)
        ($car . g$13788$1a@gJ)
        (make-record-printer . g$13787$1a@gJ)
        (eqv-hash . g$13786$1a@gJ)
        (reverse! . g$13785$1a@gJ)
        (deserialize-port . g$13784$1a@gJ)
        (serialize-port . g$13783$1a@gJ)
        (enum-set? . g$8991$1a@gJ)
        (make-promise . g$7038$1a@gJ)
        (load/unload . g$13587$1a@gJ)
        (load/args . g$13586$1a@gJ)
        (printf . g$9100$1a@gJ)
        (fprintf . g$9101$1a@gJ)
        (format . g$9102$1a@gJ)
        (procedure-form . g$13782$1a@gJ)
        (procedure-environment . g$13781$1a@gJ)
        (procedure-name . g$13780$1a@gJ)
        (procedure-arity . g$13779$1a@gJ)
        (gc-collect . g$13778$1a@gJ)
        (typeof . g$13777$1a@gJ)
        (clr-type? . g$13776$1a@gJ)
        (get-clr-type . g$13775$1a@gJ)
        (get-command-line . g$13774$1a@gJ)
        (vector-append . g$13773$1a@gJ)
        (vector-filter . g$13772$1a@gJ)
        (vector-reverse! . g$13771$1a@gJ)
        (vector-contains? . g$13770$1a@gJ)
        (vector-index-of . g$13769$1a@gJ)
        (vector-copy . g$13768$1a@gJ)
        (vector-binary-search . g$13767$1a@gJ)
        (string-ci-compare . g$13766$1a@gJ)
        (string-compare . g$13765$1a@gJ)
        (string-format . g$13764$1a@gJ)
        (trace-printer . g$13581$1a@gJ)
        (make-traced-procedure . g$13763$1a@gJ)
        (make-traced-macro . g$9122$1a@gJ)
        (assertion-error . g$10557$1a@gJ)
        (time-it . g$13762$1a@gJ)
        (make-parameter . g$9225$1a@gJ)
        (library-locator . g$13761$1a@gJ)
        (get-library-paths . g$13760$1a@gJ)
        (open-tcp-input/output-port . g$13759$1a@gJ)
        (hashtable-for-each . g$13758$1a@gJ)
        (hashtable-map . g$13757$1a@gJ)
        (environment-bindings . g$10534$1a@gJ)
        (environment-symbols . g$10537$1a@gJ)
        (interaction-environment-symbols . g$10533$1a@gJ)
        (optimization-level . g$13756$1a@gJ)
        (library-path . g$9863$1a@gJ)
        (make-compile-time-value . g$10242$1a@gJ)
        (expand->core . g$10543$1a@gJ)
        (expand . g$10541$1a@gJ)
        (emacs-mode? . g$13584$1a@gJ)
        (syntax-transpose . g$10480$1a@gJ)
        (convert->cps . g$9544$1a@gJ)
        (inexact=? . g$13755$1a@gJ)
        (bignum-sqrt-exact . g$13754$1a@gJ)
        (bignum-sqrt . g$13753$1a@gJ)
        (flonum->string . g$13752$1a@gJ)
        (inexact-compare . g$13751$1a@gJ)
        (exact-compare . g$13750$1a@gJ)
        (condition-stacktrace . g$6753$1a@gJ)
        (stacktrace-condition? . g$6752$1a@gJ)
        (stacktrace-enable? . g$13582$1a@gJ)
        (make-stacktrace-condition . g$6750$1a@gJ)
        (condition-where . g$6738$1a@gJ)
        (where-condition? . g$6737$1a@gJ)
        (make-where-condition . g$6735$1a@gJ)
        (installed-libraries . g$9884$1a@gJ)
        (uninstall-library . g$9875$1a@gJ)
        (pretty-gensyms . g$9308$1a@gJ)
        (pretty-width . g$9305$1a@gJ)
        (pretty-print . g$9310$1a@gJ)
        (pointer+ . g$13749$1a@gJ)
        (&stacktrace . g$13748$1a@gJ)
        (&where . g$13747$1a@gJ)
        (&no-nans . g$13746$1a@gJ)
        (&no-infinities . g$13745$1a@gJ)
        (&i/o-encoding . g$13744$1a@gJ)
        (&i/o-decoding . g$13743$1a@gJ)
        (&i/o-port . g$13742$1a@gJ)
        (&i/o-file-does-not-exist . g$13741$1a@gJ)
        (&i/o-file-already-exists . g$13740$1a@gJ)
        (&i/o-file-is-read-only . g$13739$1a@gJ)
        (&i/o-file-protection . g$13738$1a@gJ)
        (&i/o-filename . g$13737$1a@gJ)
        (&i/o-invalid-position . g$13736$1a@gJ)
        (&i/o-write . g$13735$1a@gJ)
        (&i/o-read . g$13734$1a@gJ)
        (&i/o . g$13733$1a@gJ)
        (&non-continuable . g$13732$1a@gJ)
        (&undefined . g$13731$1a@gJ)
        (&syntax . g$13730$1a@gJ)
        (&lexical . g$13729$1a@gJ)
        (&implementation-restriction . g$13728$1a@gJ)
        (&who . g$13727$1a@gJ)
        (&irritants . g$13726$1a@gJ)
        (&assertion . g$13725$1a@gJ)
        (&violation . g$13724$1a@gJ)
        (&error . g$13723$1a@gJ)
        (&serious . g$13722$1a@gJ)
        (&warning . g$13721$1a@gJ)
        (&message . g$13720$1a@gJ)
        (&condition . g$13719$1a@gJ)
        (define-condition-type . g$13718$1a@gJ)
        (define-enumeration . g$13717$1a@gJ)
        (define-record-type . g$13716$1a@gJ)
        (parent-rtd . g$13715$1a@gJ)
        (nongenerative . g$13714$1a@gJ)
        (opaque . g$13713$1a@gJ)
        (sealed . g$13712$1a@gJ)
        (protocol . g$13711$1a@gJ)
        (parent . g$13710$1a@gJ)
        (immutable . g$13709$1a@gJ)
        (mutable . g$13708$1a@gJ)
        (fields . g$13707$1a@gJ)
        (error-handling-mode . g$13706$1a@gJ)
        (file-options . g$13705$1a@gJ)
        (buffer-mode . g$13704$1a@gJ)
        (eol-style . g$13703$1a@gJ)
        (guard . g$13702$1a@gJ)
        (trace-letrec-syntax . g$13701$1a@gJ)
        (trace-let-syntax . g$13700$1a@gJ)
        (trace-define-syntax . g$13699$1a@gJ)
        (trace-define . g$13698$1a@gJ)
        (trace-lambda . g$13697$1a@gJ)
        (unsyntax-splicing . g$13696$1a@gJ)
        (unsyntax . g$13695$1a@gJ)
        (unquote-splicing . g$13694$1a@gJ)
        (unquote . g$13693$1a@gJ)
        (_ . g$13692$1a@gJ)
        (else . g$13691$1a@gJ)
        (=> . g$13690$1a@gJ)
        (... . g$13689$1a@gJ)
        (assert . g$13688$1a@gJ)
        (endianness . g$13687$1a@gJ)
        (delay . g$13686$1a@gJ)
        (time . g$13685$1a@gJ)
        (or . g$13684$1a@gJ)
        (and . g$13683$1a@gJ)
        (do . g$13682$1a@gJ)
        (cond . g$13681$1a@gJ)
        (let* . g$13680$1a@gJ)
        (let . g$13679$1a@gJ)
        (identifier-syntax . g$13678$1a@gJ)
        (with-syntax . g$13677$1a@gJ)
        (quasisyntax . g$13676$1a@gJ)
        (quasiquote . g$13675$1a@gJ)
        (syntax-rules . g$13674$1a@gJ)
        (include-into . g$13673$1a@gJ)
        (include . g$13672$1a@gJ)
        (define-struct . g$13671$1a@gJ)
        (let-values . g$13670$1a@gJ)
        (let*-values . g$13669$1a@gJ)
        (record-constructor-descriptor . g$13668$1a@gJ)
        (record-type-descriptor . g$13667$1a@gJ)
        (fluid-let-syntax . g$13666$1a@gJ)
        (case . g$13665$1a@gJ)
        (parameterize . g$13664$1a@gJ)
        (unless . g$13663$1a@gJ)
        (when . g$13662$1a@gJ)
        (if . g$13661$1a@gJ)
        (letrec* . g$13660$1a@gJ)
        (letrec . g$13659$1a@gJ)
        (type-descriptor . g$13658$1a@gJ)
        (case-lambda . g$13657$1a@gJ)
        (lambda . g$13656$1a@gJ)
        (syntax . g$13655$1a@gJ)
        (syntax-case . g$13654$1a@gJ)
        (quote . g$13653$1a@gJ)
        (foreign-call . g$13652$1a@gJ)
        (letrec-syntax . g$13651$1a@gJ)
        (let-syntax . g$13650$1a@gJ)
        (set! . g$13649$1a@gJ)
        (export . g$13648$1a@gJ)
        (import . g$13647$1a@gJ)
        (library . g$13646$1a@gJ)
        (begin . g$13645$1a@gJ)
        (module . g$13644$1a@gJ)
        (define-syntax . g$13643$1a@gJ)
        (define . g$13642$1a@gJ))
      '((g$10437$1a@gJ core-prim . ellipsis-map)
        (g$6755$1a@gJ core-prim . &stacktrace-rcd)
        (g$6754$1a@gJ core-prim . &stacktrace-rtd)
        (g$6740$1a@gJ core-prim . &where-rcd)
        (g$6739$1a@gJ core-prim . &where-rtd)
        (g$7014$1a@gJ core-prim . &no-nans-rcd)
        (g$7013$1a@gJ core-prim . &no-nans-rtd)
        (g$7001$1a@gJ core-prim . &no-infinities-rcd)
        (g$7000$1a@gJ core-prim . &no-infinities-rtd)
        (g$6988$1a@gJ core-prim . &i/o-encoding-rcd)
        (g$6987$1a@gJ core-prim . &i/o-encoding-rtd)
        (g$6973$1a@gJ core-prim . &i/o-decoding-rcd)
        (g$6972$1a@gJ core-prim . &i/o-decoding-rtd)
        (g$6960$1a@gJ core-prim . &i/o-port-rcd)
        (g$6959$1a@gJ core-prim . &i/o-port-rtd)
        (g$6945$1a@gJ core-prim . &i/o-file-does-not-exist-rcd)
        (g$6944$1a@gJ core-prim . &i/o-file-does-not-exist-rtd)
        (g$6932$1a@gJ core-prim . &i/o-file-already-exists-rcd)
        (g$6931$1a@gJ core-prim . &i/o-file-already-exists-rtd)
        (g$6919$1a@gJ core-prim . &i/o-file-is-read-only-rcd)
        (g$6918$1a@gJ core-prim . &i/o-file-is-read-only-rtd)
        (g$6906$1a@gJ core-prim . &i/o-file-protection-rcd)
        (g$6905$1a@gJ core-prim . &i/o-file-protection-rtd)
        (g$6893$1a@gJ core-prim . &i/o-filename-rcd)
        (g$6892$1a@gJ core-prim . &i/o-filename-rtd)
        (g$6878$1a@gJ core-prim . &i/o-invalid-position-rcd)
        (g$6877$1a@gJ core-prim . &i/o-invalid-position-rtd)
        (g$6863$1a@gJ core-prim . &i/o-write-rcd)
        (g$6862$1a@gJ core-prim . &i/o-write-rtd)
        (g$6850$1a@gJ core-prim . &i/o-read-rcd)
        (g$6849$1a@gJ core-prim . &i/o-read-rtd)
        (g$6837$1a@gJ core-prim . &i/o-rcd)
        (g$6836$1a@gJ core-prim . &i/o-rtd)
        (g$6824$1a@gJ core-prim . &undefined-rcd)
        (g$6823$1a@gJ core-prim . &undefined-rtd)
        (g$6811$1a@gJ core-prim . &syntax-rcd)
        (g$6810$1a@gJ core-prim . &syntax-rtd)
        (g$6794$1a@gJ core-prim . &lexical-rcd)
        (g$6793$1a@gJ core-prim . &lexical-rtd)
        (g$6781$1a@gJ core-prim . &implementation-restriction-rcd)
        (g$6780$1a@gJ core-prim . &implementation-restriction-rtd)
        (g$6768$1a@gJ core-prim . &non-continuable-rcd)
        (g$6767$1a@gJ core-prim . &non-continuable-rtd)
        (g$6725$1a@gJ core-prim . &who-rcd)
        (g$6724$1a@gJ core-prim . &who-rtd)
        (g$6710$1a@gJ core-prim . &irritants-rcd)
        (g$6709$1a@gJ core-prim . &irritants-rtd)
        (g$6695$1a@gJ core-prim . &assertion-rcd)
        (g$6694$1a@gJ core-prim . &assertion-rtd)
        (g$6682$1a@gJ core-prim . &violation-rcd)
        (g$6681$1a@gJ core-prim . &violation-rtd)
        (g$6669$1a@gJ core-prim . &error-rcd)
        (g$6668$1a@gJ core-prim . &error-rtd)
        (g$6656$1a@gJ core-prim . &serious-rcd)
        (g$6655$1a@gJ core-prim . &serious-rtd)
        (g$6643$1a@gJ core-prim . &warning-rcd)
        (g$6642$1a@gJ core-prim . &warning-rtd)
        (g$6630$1a@gJ core-prim . &message-rcd)
        (g$6629$1a@gJ core-prim . &message-rtd)
        (g$6590$1a@gJ core-prim . &condition-rcd)
        (g$6589$1a@gJ core-prim . &condition-rtd)
        (g$13992$1a@gJ core-prim . library-letrec*)
        (g$13991$1a@gJ core-prim . annotation-stripped)
        (g$13990$1a@gJ core-prim . annotation-source)
        (g$13989$1a@gJ core-prim . annotation-expression)
        (g$13988$1a@gJ core-prim . annotation?)
        (g$13987$1a@gJ core-prim . read-annotated)
        (g$6315$1a@gJ core-prim . tanh)
        (g$6313$1a@gJ core-prim . cosh)
        (g$6310$1a@gJ core-prim . sinh)
        (g$13986$1a@gJ core-prim . make-guid)
        (g$13985$1a@gJ core-prim . unspecified?)
        (g$5374$1a@gJ core-prim . make-list)
        (g$5373$1a@gJ core-prim . last-pair)
        (g$13984$1a@gJ core-prim . load-r5rs)
        (g$13983$1a@gJ core-prim . license)
        (g$13982$1a@gJ core-prim . stacktrace)
        (g$13589$1a@gJ core-prim . ironscheme-test)
        (g$13590$1a@gJ core-prim . ironscheme-build)
        (g$13981$1a@gJ core-prim . pinvoke-call-internal)
        (g$13980$1a@gJ core-prim . ffi-callback-internal)
        (g$13979$1a@gJ core-prim . ffi-callout-internal)
        (g$13978$1a@gJ core-prim . define-clr-class-internal)
        (g$13977$1a@gJ core-prim . clr-field-set!-internal)
        (g$13976$1a@gJ core-prim . clr-field-get-internal)
        (g$13975$1a@gJ core-prim . clr-cast-internal)
        (g$13974$1a@gJ core-prim . clr-call-internal)
        (g$13973$1a@gJ core-prim . clr-new-internal)
        (g$13972$1a@gJ core-prim . clr-new-array-internal)
        (g$13971$1a@gJ core-prim . clr-is-internal)
        (g$13970$1a@gJ core-prim . clr-reference-internal)
        (g$13969$1a@gJ core-prim . clr-using-internal)
        (g$10558$1a@gJ core-prim . syntax-error)
        (g$10432$1a@gJ core-prim . syntax-dispatch)
        (g$13968$1a@gJ core-prim . compile-core)
        (g$13967$1a@gJ core-prim . eval-core)
        (g$13966$1a@gJ core-prim . remove-location)
        (g$13965$1a@gJ core-prim . set-symbol-value!)
        (g$13964$1a@gJ core-prim . symbol-value)
        (g$13963$1a@gJ core-prim . symbol-bound?)
        (g$13962$1a@gJ core-prim . ungensym)
        (g$13961$1a@gJ core-prim . gensym)
        (g$13960$1a@gJ core-prim . void)
        (g$13959$1a@gJ core-prim . load-serialized-library)
        (g$13958$1a@gJ core-prim . serialize-library)
        (g$13594$1a@gJ core-prim . compile-system-libraries)
        (g$13596$1a@gJ core-prim . compile->closure)
        (g$13595$1a@gJ core-prim . compile)
        (g$13588$1a@gJ core-prim . load)
        (g$13957$1a@gJ core-prim . string-normalize)
        (g$10567$1a@gJ core-prim . new-interaction-environment)
        (g$10568$1a@gJ core-prim . interaction-environment)
        (g$13956$1a@gJ core-prim . char-ready?)
        (g$13955$1a@gJ core-prim . string-upcase)
        (g$7112$1a@gJ core-prim . string-titlecase)
        (g$7132$1a@gJ core-prim . string-normalize-nfkd)
        (g$7131$1a@gJ core-prim . string-normalize-nfkc)
        (g$7130$1a@gJ core-prim . string-normalize-nfd)
        (g$7129$1a@gJ core-prim . string-normalize-nfc)
        (g$7113$1a@gJ core-prim . string-foldcase)
        (g$13954$1a@gJ core-prim . string-downcase)
        (g$7109$1a@gJ core-prim . string-ci>?)
        (g$7111$1a@gJ core-prim . string-ci>=?)
        (g$7107$1a@gJ core-prim . string-ci=?)
        (g$7108$1a@gJ core-prim . string-ci<?)
        (g$7110$1a@gJ core-prim . string-ci<=?)
        (g$7089$1a@gJ core-prim . char-whitespace?)
        (g$7090$1a@gJ core-prim . char-upper-case?)
        (g$7092$1a@gJ core-prim . char-title-case?)
        (g$7088$1a@gJ core-prim . char-numeric?)
        (g$7091$1a@gJ core-prim . char-lower-case?)
        (g$7093$1a@gJ core-prim . char-general-category)
        (g$7083$1a@gJ core-prim . char-upcase)
        (g$7085$1a@gJ core-prim . char-titlecase)
        (g$7086$1a@gJ core-prim . char-foldcase)
        (g$7084$1a@gJ core-prim . char-downcase)
        (g$7121$1a@gJ core-prim . char-ci>?)
        (g$7123$1a@gJ core-prim . char-ci>=?)
        (g$7119$1a@gJ core-prim . char-ci=?)
        (g$7120$1a@gJ core-prim . char-ci<?)
        (g$7122$1a@gJ core-prim . char-ci<=?)
        (g$7087$1a@gJ core-prim . char-alphabetic?)
        (g$10244$1a@gJ core-prim . variable-transformer-procedure)
        (g$10243$1a@gJ core-prim . variable-transformer?)
        (g$10241$1a@gJ core-prim . make-variable-transformer)
        (g$10562$1a@gJ core-prim . identifier?)
        (g$10550$1a@gJ core-prim . generate-temporaries)
        (g$10551$1a@gJ core-prim . free-identifier=?)
        (g$10564$1a@gJ core-prim . syntax->datum)
        (g$10563$1a@gJ core-prim . datum->syntax)
        (g$10552$1a@gJ core-prim . bound-identifier=?)
        (g$13953$1a@gJ core-prim . record-type-descriptor?)
        (g$13952$1a@gJ core-prim . record-predicate)
        (g$13951$1a@gJ core-prim . record-mutator)
        (g$13950$1a@gJ core-prim . record-constructor)
        (g$13949$1a@gJ core-prim . record-accessor)
        (g$13948$1a@gJ core-prim . make-record-type-descriptor)
        (g$13947$1a@gJ core-prim . make-record-constructor-descriptor)
        (g$13946$1a@gJ core-prim . record?)
        (g$13945$1a@gJ core-prim . record-type-uid)
        (g$13944$1a@gJ core-prim . record-type-sealed?)
        (g$13943$1a@gJ core-prim . record-type-parent)
        (g$13942$1a@gJ core-prim . record-type-opaque?)
        (g$13941$1a@gJ core-prim . record-type-name)
        (g$13940$1a@gJ core-prim . record-type-generative?)
        (g$13939$1a@gJ core-prim . record-type-field-names)
        (g$13938$1a@gJ core-prim . record-rtd)
        (g$13937$1a@gJ core-prim . record-field-mutable?)
        (g$5935$1a@gJ core-prim . delete-file)
        (g$5934$1a@gJ core-prim . file-exists?)
        (g$13936$1a@gJ core-prim . vector-sort!)
        (g$13935$1a@gJ core-prim . vector-sort)
        (g$7056$1a@gJ core-prim . list-sort)
        (g$5905$1a@gJ core-prim . symbol-hash)
        (g$5904$1a@gJ core-prim . string-ci-hash)
        (g$5903$1a@gJ core-prim . string-hash)
        (g$13934$1a@gJ core-prim . equal-hash)
        (g$13933$1a@gJ core-prim . hashtable-equivalence-function)
        (g$13932$1a@gJ core-prim . make-hashtable)
        (g$13931$1a@gJ core-prim . hashtable-hash-function)
        (g$5895$1a@gJ core-prim . make-eqv-hashtable)
        (g$5894$1a@gJ core-prim . make-eq-hashtable)
        (g$5893$1a@gJ core-prim . hashtable?)
        (g$5901$1a@gJ core-prim . hashtable-update!)
        (g$5896$1a@gJ core-prim . hashtable-size)
        (g$5898$1a@gJ core-prim . hashtable-set!)
        (g$5897$1a@gJ core-prim . hashtable-ref)
        (g$13930$1a@gJ core-prim . hashtable-mutable?)
        (g$13929$1a@gJ core-prim . hashtable-keys)
        (g$13928$1a@gJ core-prim . hashtable-entries)
        (g$5899$1a@gJ core-prim . hashtable-delete!)
        (g$13927$1a@gJ core-prim . hashtable-copy)
        (g$5900$1a@gJ core-prim . hashtable-contains?)
        (g$5902$1a@gJ core-prim . hashtable-clear!)
        (g$8953$1a@gJ core-prim . call-with-output-file)
        (g$8952$1a@gJ core-prim . call-with-input-file)
        (g$8944$1a@gJ core-prim . write-char)
        (g$13926$1a@gJ core-prim . write)
        (g$8951$1a@gJ core-prim . with-output-to-file)
        (g$8950$1a@gJ core-prim . with-input-from-file)
        (g$8943$1a@gJ core-prim . read-char)
        (g$13925$1a@gJ core-prim . read)
        (g$8942$1a@gJ core-prim . peek-char)
        (g$13924$1a@gJ core-prim . open-output-file)
        (g$13923$1a@gJ core-prim . open-input-file)
        (g$8954$1a@gJ core-prim . newline)
        (g$13922$1a@gJ core-prim . display)
        (g$13921$1a@gJ core-prim . close-output-port)
        (g$13920$1a@gJ core-prim . close-input-port)
        (g$13919$1a@gJ core-prim . eof-object?)
        (g$13918$1a@gJ core-prim . eof-object)
        (g$13917$1a@gJ core-prim . current-error-port)
        (g$13916$1a@gJ core-prim . current-output-port)
        (g$13915$1a@gJ core-prim . current-input-port)
        (g$13914$1a@gJ core-prim . output-port?)
        (g$13913$1a@gJ core-prim . input-port?)
        (g$13912$1a@gJ core-prim . utf-8-codec)
        (g$13911$1a@gJ core-prim . utf-16-codec)
        (g$13910$1a@gJ core-prim . transcoder-error-handling-mode)
        (g$13909$1a@gJ core-prim . transcoder-eol-style)
        (g$13908$1a@gJ core-prim . transcoder-codec)
        (g$13907$1a@gJ core-prim . transcoded-port)
        (g$13906$1a@gJ core-prim . textual-port?)
        (g$13905$1a@gJ core-prim . string->bytevector)
        (g$8918$1a@gJ core-prim . standard-output-port)
        (g$8917$1a@gJ core-prim . standard-input-port)
        (g$8916$1a@gJ core-prim . standard-error-port)
        (g$13904$1a@gJ core-prim . set-port-position!)
        (g$13903$1a@gJ core-prim . put-u8)
        (g$13902$1a@gJ core-prim . put-string)
        (g$8921$1a@gJ core-prim . put-datum)
        (g$13901$1a@gJ core-prim . put-char)
        (g$13900$1a@gJ core-prim . put-bytevector)
        (g$8926$1a@gJ core-prim . port?)
        (g$13899$1a@gJ core-prim . port-transcoder)
        (g$13898$1a@gJ core-prim . port-position)
        (g$13897$1a@gJ core-prim . port-has-set-port-position!?)
        (g$13896$1a@gJ core-prim . port-has-port-position?)
        (g$13895$1a@gJ core-prim . port-eof?)
        (g$13894$1a@gJ core-prim . output-port-buffer-mode)
        (g$8925$1a@gJ core-prim . open-string-output-port)
        (g$13893$1a@gJ core-prim . open-string-input-port)
        (g$13892$1a@gJ core-prim . open-file-output-port)
        (g$13891$1a@gJ core-prim . open-file-input/output-port)
        (g$13890$1a@gJ core-prim . open-file-input-port)
        (g$13889$1a@gJ core-prim . open-bytevector-output-port)
        (g$13888$1a@gJ core-prim . open-bytevector-input-port)
        (g$13887$1a@gJ core-prim . native-transcoder)
        (g$8919$1a@gJ core-prim . native-eol-style)
        (g$13886$1a@gJ core-prim . make-transcoder)
        (g$13885$1a@gJ core-prim . latin-1-codec)
        (g$6860$1a@gJ core-prim . make-i/o-write-error)
        (g$6847$1a@gJ core-prim . make-i/o-read-error)
        (g$6955$1a@gJ core-prim . make-i/o-port-error)
        (g$6873$1a@gJ core-prim . make-i/o-invalid-position-error)
        (g$6888$1a@gJ core-prim . make-i/o-filename-error)
        (g$6903$1a@gJ core-prim . make-i/o-file-protection-error)
        (g$6916$1a@gJ core-prim . make-i/o-file-is-read-only-error)
        (g$6942$1a@gJ core-prim . make-i/o-file-does-not-exist-error)
        (g$6929$1a@gJ core-prim . make-i/o-file-already-exists-error)
        (g$6834$1a@gJ core-prim . make-i/o-error)
        (g$6983$1a@gJ core-prim . make-i/o-encoding-error)
        (g$6970$1a@gJ core-prim . make-i/o-decoding-error)
        (g$13884$1a@gJ core-prim . make-custom-textual-output-port)
        (g$13883$1a@gJ
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13882$1a@gJ core-prim . make-custom-textual-input-port)
        (g$13881$1a@gJ core-prim . make-custom-binary-output-port)
        (g$13880$1a@gJ core-prim . make-custom-binary-input/output-port)
        (g$13879$1a@gJ core-prim . make-custom-binary-input-port)
        (g$5955$1a@gJ core-prim . make-bytevector)
        (g$13878$1a@gJ core-prim . lookahead-u8)
        (g$13877$1a@gJ core-prim . lookahead-char)
        (g$6861$1a@gJ core-prim . i/o-write-error?)
        (g$6848$1a@gJ core-prim . i/o-read-error?)
        (g$6957$1a@gJ core-prim . i/o-port-error?)
        (g$6875$1a@gJ core-prim . i/o-invalid-position-error?)
        (g$6876$1a@gJ core-prim . i/o-error-position)
        (g$6890$1a@gJ core-prim . i/o-filename-error?)
        (g$6904$1a@gJ core-prim . i/o-file-protection-error?)
        (g$6917$1a@gJ core-prim . i/o-file-is-read-only-error?)
        (g$6943$1a@gJ core-prim . i/o-file-does-not-exist-error?)
        (g$6930$1a@gJ core-prim . i/o-file-already-exists-error?)
        (g$6835$1a@gJ core-prim . i/o-error?)
        (g$6958$1a@gJ core-prim . i/o-error-port)
        (g$6891$1a@gJ core-prim . i/o-error-filename)
        (g$6985$1a@gJ core-prim . i/o-encoding-error?)
        (g$6986$1a@gJ core-prim . i/o-encoding-error-char)
        (g$6971$1a@gJ core-prim . i/o-decoding-error?)
        (g$13876$1a@gJ core-prim . get-u8)
        (g$13875$1a@gJ core-prim . get-string-n!)
        (g$13874$1a@gJ core-prim . get-string-n)
        (g$13873$1a@gJ core-prim . get-string-all)
        (g$13872$1a@gJ core-prim . get-line)
        (g$8922$1a@gJ core-prim . get-datum)
        (g$13871$1a@gJ core-prim . get-char)
        (g$13870$1a@gJ core-prim . get-bytevector-some)
        (g$13869$1a@gJ core-prim . get-bytevector-n!)
        (g$13868$1a@gJ core-prim . get-bytevector-n)
        (g$13867$1a@gJ core-prim . get-bytevector-all)
        (g$13866$1a@gJ core-prim . flush-output-port)
        (g$13865$1a@gJ core-prim . close-port)
        (g$8927$1a@gJ core-prim . call-with-string-output-port)
        (g$8928$1a@gJ core-prim . call-with-port)
        (g$13864$1a@gJ core-prim . call-with-bytevector-output-port)
        (g$13863$1a@gJ core-prim . bytevector->string)
        (g$8920$1a@gJ core-prim . buffer-mode?)
        (g$13862$1a@gJ core-prim . binary-port?)
        (g$10540$1a@gJ core-prim . scheme-report-environment)
        (g$7035$1a@gJ core-prim . quotient)
        (g$10539$1a@gJ core-prim . null-environment)
        (g$7036$1a@gJ core-prim . remainder)
        (g$7037$1a@gJ core-prim . modulo)
        (g$7032$1a@gJ core-prim . inexact->exact)
        (g$7039$1a@gJ core-prim . force)
        (g$7033$1a@gJ core-prim . exact->inexact)
        (g$13861$1a@gJ core-prim . exit)
        (g$13583$1a@gJ core-prim . command-line)
        (g$5567$1a@gJ core-prim . string-fill!)
        (g$5566$1a@gJ core-prim . string-set!)
        (g$7018$1a@gJ core-prim . set-cdr!)
        (g$7017$1a@gJ core-prim . set-car!)
        (g$5399$1a@gJ core-prim . remove)
        (g$5400$1a@gJ core-prim . remv)
        (g$5377$1a@gJ core-prim . remp)
        (g$5401$1a@gJ core-prim . remq)
        (g$5376$1a@gJ core-prim . partition)
        (g$5384$1a@gJ core-prim . memv)
        (g$5383$1a@gJ core-prim . memq)
        (g$5386$1a@gJ core-prim . memp)
        (g$5385$1a@gJ core-prim . member)
        (g$5390$1a@gJ core-prim . exists)
        (g$5389$1a@gJ core-prim . for-all)
        (g$5398$1a@gJ core-prim . fold-right)
        (g$5397$1a@gJ core-prim . fold-left)
        (g$5375$1a@gJ core-prim . find)
        (g$5378$1a@gJ core-prim . filter)
        (g$5393$1a@gJ core-prim . cons*)
        (g$5380$1a@gJ core-prim . assv)
        (g$5379$1a@gJ core-prim . assq)
        (g$5382$1a@gJ core-prim . assp)
        (g$5381$1a@gJ core-prim . assoc)
        (g$13860$1a@gJ core-prim . with-exception-handler)
        (g$13859$1a@gJ core-prim . raise-continuable)
        (g$13858$1a@gJ core-prim . raise)
        (g$10542$1a@gJ core-prim . eval)
        (g$10538$1a@gJ core-prim . environment)
        (g$9014$1a@gJ core-prim . make-enumeration)
        (g$9021$1a@gJ core-prim . enum-set=?)
        (g$9015$1a@gJ core-prim . enum-set-universe)
        (g$9022$1a@gJ core-prim . enum-set-union)
        (g$9020$1a@gJ core-prim . enum-set-subset?)
        (g$9026$1a@gJ core-prim . enum-set-projection)
        (g$9019$1a@gJ core-prim . enum-set-member?)
        (g$9023$1a@gJ core-prim . enum-set-intersection)
        (g$9016$1a@gJ core-prim . enum-set-indexer)
        (g$9024$1a@gJ core-prim . enum-set-difference)
        (g$9017$1a@gJ core-prim . enum-set-constructor)
        (g$9025$1a@gJ core-prim . enum-set-complement)
        (g$9018$1a@gJ core-prim . enum-set->list)
        (g$6722$1a@gJ core-prim . who-condition?)
        (g$6641$1a@gJ core-prim . warning?)
        (g$6680$1a@gJ core-prim . violation?)
        (g$6822$1a@gJ core-prim . undefined-violation?)
        (g$6807$1a@gJ core-prim . syntax-violation?)
        (g$6809$1a@gJ core-prim . syntax-violation-subform)
        (g$6808$1a@gJ core-prim . syntax-violation-form)
        (g$10561$1a@gJ core-prim . syntax-violation)
        (g$13857$1a@gJ core-prim . simple-conditions)
        (g$6654$1a@gJ core-prim . serious-condition?)
        (g$6766$1a@gJ core-prim . non-continuable-violation?)
        (g$6627$1a@gJ core-prim . message-condition?)
        (g$6720$1a@gJ core-prim . make-who-condition)
        (g$6640$1a@gJ core-prim . make-warning)
        (g$6679$1a@gJ core-prim . make-violation)
        (g$6821$1a@gJ core-prim . make-undefined-violation)
        (g$6804$1a@gJ core-prim . make-syntax-violation)
        (g$6653$1a@gJ core-prim . make-serious-condition)
        (g$6765$1a@gJ core-prim . make-non-continuable-violation)
        (g$6625$1a@gJ core-prim . make-message-condition)
        (g$6791$1a@gJ core-prim . make-lexical-violation)
        (g$6705$1a@gJ core-prim . make-irritants-condition)
        (g$6778$1a@gJ
          core-prim
          .
          make-implementation-restriction-violation)
        (g$6666$1a@gJ core-prim . make-error)
        (g$6692$1a@gJ core-prim . make-assertion-violation)
        (g$6792$1a@gJ core-prim . lexical-violation?)
        (g$6707$1a@gJ core-prim . irritants-condition?)
        (g$6779$1a@gJ core-prim . implementation-restriction-violation?)
        (g$6667$1a@gJ core-prim . error?)
        (g$6723$1a@gJ core-prim . condition-who)
        (g$13856$1a@gJ core-prim . condition-predicate)
        (g$6628$1a@gJ core-prim . condition-message)
        (g$6708$1a@gJ core-prim . condition-irritants)
        (g$13855$1a@gJ core-prim . condition-accessor)
        (g$13854$1a@gJ core-prim . condition)
        (g$6693$1a@gJ core-prim . assertion-violation?)
        (g$13853$1a@gJ core-prim . condition?)
        (g$5973$1a@gJ core-prim . utf32->string)
        (g$5972$1a@gJ core-prim . utf16->string)
        (g$5970$1a@gJ core-prim . utf8->string)
        (g$5974$1a@gJ core-prim . uint-list->bytevector)
        (g$5966$1a@gJ core-prim . u8-list->bytevector)
        (g$5967$1a@gJ core-prim . string->utf8)
        (g$5969$1a@gJ core-prim . string->utf32)
        (g$5968$1a@gJ core-prim . string->utf16)
        (g$5975$1a@gJ core-prim . sint-list->bytevector)
        (g$5941$1a@gJ core-prim . native-endianness)
        (g$5555$1a@gJ core-prim . bytevector?)
        (g$5957$1a@gJ core-prim . bytevector=?)
        (g$13852$1a@gJ core-prim . bytevector-uint-set!)
        (g$13851$1a@gJ core-prim . bytevector-uint-ref)
        (g$5962$1a@gJ core-prim . bytevector-u8-set!)
        (g$5961$1a@gJ core-prim . bytevector-u8-ref)
        (g$6003$1a@gJ core-prim . bytevector-u64-set!)
        (g$5999$1a@gJ core-prim . bytevector-u64-ref)
        (g$6005$1a@gJ core-prim . bytevector-u64-native-set!)
        (g$6001$1a@gJ core-prim . bytevector-u64-native-ref)
        (g$5995$1a@gJ core-prim . bytevector-u32-set!)
        (g$5991$1a@gJ core-prim . bytevector-u32-ref)
        (g$5997$1a@gJ core-prim . bytevector-u32-native-set!)
        (g$5993$1a@gJ core-prim . bytevector-u32-native-ref)
        (g$5987$1a@gJ core-prim . bytevector-u16-set!)
        (g$5983$1a@gJ core-prim . bytevector-u16-ref)
        (g$5989$1a@gJ core-prim . bytevector-u16-native-set!)
        (g$5985$1a@gJ core-prim . bytevector-u16-native-ref)
        (g$13850$1a@gJ core-prim . bytevector-sint-set!)
        (g$13849$1a@gJ core-prim . bytevector-sint-ref)
        (g$5964$1a@gJ core-prim . bytevector-s8-set!)
        (g$5963$1a@gJ core-prim . bytevector-s8-ref)
        (g$6004$1a@gJ core-prim . bytevector-s64-set!)
        (g$6000$1a@gJ core-prim . bytevector-s64-ref)
        (g$6006$1a@gJ core-prim . bytevector-s64-native-set!)
        (g$6002$1a@gJ core-prim . bytevector-s64-native-ref)
        (g$5996$1a@gJ core-prim . bytevector-s32-set!)
        (g$5992$1a@gJ core-prim . bytevector-s32-ref)
        (g$5998$1a@gJ core-prim . bytevector-s32-native-set!)
        (g$5994$1a@gJ core-prim . bytevector-s32-native-ref)
        (g$5988$1a@gJ core-prim . bytevector-s16-set!)
        (g$5984$1a@gJ core-prim . bytevector-s16-ref)
        (g$5990$1a@gJ core-prim . bytevector-s16-native-set!)
        (g$5986$1a@gJ core-prim . bytevector-s16-native-ref)
        (g$5956$1a@gJ core-prim . bytevector-length)
        (g$5981$1a@gJ core-prim . bytevector-ieee-single-set!)
        (g$5979$1a@gJ core-prim . bytevector-ieee-single-ref)
        (g$6009$1a@gJ core-prim . bytevector-ieee-single-native-set!)
        (g$6007$1a@gJ core-prim . bytevector-ieee-single-native-ref)
        (g$5982$1a@gJ core-prim . bytevector-ieee-double-set!)
        (g$5980$1a@gJ core-prim . bytevector-ieee-double-ref)
        (g$6010$1a@gJ core-prim . bytevector-ieee-double-native-set!)
        (g$6008$1a@gJ core-prim . bytevector-ieee-double-native-ref)
        (g$5958$1a@gJ core-prim . bytevector-fill!)
        (g$5959$1a@gJ core-prim . bytevector-copy!)
        (g$5960$1a@gJ core-prim . bytevector-copy)
        (g$5976$1a@gJ core-prim . bytevector->uint-list)
        (g$5965$1a@gJ core-prim . bytevector->u8-list)
        (g$5977$1a@gJ core-prim . bytevector->sint-list)
        (g$7012$1a@gJ core-prim . no-nans-violation?)
        (g$6999$1a@gJ core-prim . no-infinities-violation?)
        (g$7011$1a@gJ core-prim . make-no-nans-violation)
        (g$6998$1a@gJ core-prim . make-no-infinities-violation)
        (g$6255$1a@gJ core-prim . real->flonum)
        (g$8358$1a@gJ core-prim . flzero?)
        (g$8353$1a@gJ core-prim . fltruncate)
        (g$8339$1a@gJ core-prim . fltan)
        (g$8344$1a@gJ core-prim . flsqrt)
        (g$8337$1a@gJ core-prim . flsin)
        (g$8354$1a@gJ core-prim . flround)
        (g$8356$1a@gJ core-prim . flpositive?)
        (g$5560$1a@gJ core-prim . flonum?)
        (g$8360$1a@gJ core-prim . flodd?)
        (g$8303$1a@gJ core-prim . flnumerator)
        (g$8357$1a@gJ core-prim . flnegative?)
        (g$8336$1a@gJ core-prim . flnan?)
        (g$8321$1a@gJ core-prim . flmod0)
        (g$8320$1a@gJ core-prim . flmod)
        (g$8362$1a@gJ core-prim . flmin)
        (g$8361$1a@gJ core-prim . flmax)
        (g$8343$1a@gJ core-prim . fllog)
        (g$8329$1a@gJ core-prim . flinteger?)
        (g$8335$1a@gJ core-prim . flinfinite?)
        (g$8352$1a@gJ core-prim . flfloor)
        (g$8330$1a@gJ core-prim . flfinite?)
        (g$8346$1a@gJ core-prim . flexpt)
        (g$8345$1a@gJ core-prim . flexp)
        (g$8359$1a@gJ core-prim . fleven?)
        (g$8328$1a@gJ core-prim . fldiv0-and-mod0)
        (g$8315$1a@gJ core-prim . fldiv0)
        (g$8322$1a@gJ core-prim . fldiv-and-mod)
        (g$8327$1a@gJ core-prim . fldiv)
        (g$8302$1a@gJ core-prim . fldenominator)
        (g$8338$1a@gJ core-prim . flcos)
        (g$8347$1a@gJ core-prim . flceiling)
        (g$8342$1a@gJ core-prim . flatan)
        (g$8340$1a@gJ core-prim . flasin)
        (g$8341$1a@gJ core-prim . flacos)
        (g$8355$1a@gJ core-prim . flabs)
        (g$8309$1a@gJ core-prim . fl>?)
        (g$8310$1a@gJ core-prim . fl>=?)
        (g$8306$1a@gJ core-prim . fl=?)
        (g$8307$1a@gJ core-prim . fl<?)
        (g$8308$1a@gJ core-prim . fl<=?)
        (g$8305$1a@gJ core-prim . fl/)
        (g$8304$1a@gJ core-prim . fl-)
        (g$8300$1a@gJ core-prim . fl+)
        (g$8301$1a@gJ core-prim . fl*)
        (g$6256$1a@gJ core-prim . fixnum->flonum)
        (g$7403$1a@gJ core-prim . fxzero?)
        (g$7366$1a@gJ core-prim . fxxor)
        (g$7441$1a@gJ core-prim . fxrotate-bit-field)
        (g$7442$1a@gJ core-prim . fxreverse-bit-field)
        (g$7393$1a@gJ core-prim . fxpositive?)
        (g$7413$1a@gJ core-prim . fxodd?)
        (g$7347$1a@gJ core-prim . fxnot)
        (g$7398$1a@gJ core-prim . fxnegative?)
        (g$7377$1a@gJ core-prim . fxmod0)
        (g$7376$1a@gJ core-prim . fxmod)
        (g$7415$1a@gJ core-prim . fxmin)
        (g$7414$1a@gJ core-prim . fxmax)
        (g$7344$1a@gJ core-prim . fxlength)
        (g$7365$1a@gJ core-prim . fxior)
        (g$7423$1a@gJ core-prim . fxif)
        (g$7345$1a@gJ core-prim . fxfirst-bit-set)
        (g$7408$1a@gJ core-prim . fxeven?)
        (g$7388$1a@gJ core-prim . fxdiv0-and-mod0)
        (g$7383$1a@gJ core-prim . fxdiv0)
        (g$7378$1a@gJ core-prim . fxdiv-and-mod)
        (g$7371$1a@gJ core-prim . fxdiv)
        (g$7438$1a@gJ core-prim . fxcopy-bit-field)
        (g$7428$1a@gJ core-prim . fxcopy-bit)
        (g$7346$1a@gJ core-prim . fxbit-set?)
        (g$7433$1a@gJ core-prim . fxbit-field)
        (g$7339$1a@gJ core-prim . fxbit-count)
        (g$7440$1a@gJ core-prim . fxarithmetic-shift-right)
        (g$7439$1a@gJ core-prim . fxarithmetic-shift-left)
        (g$7334$1a@gJ core-prim . fxarithmetic-shift)
        (g$7364$1a@gJ core-prim . fxand)
        (g$7356$1a@gJ core-prim . fx>?)
        (g$7357$1a@gJ core-prim . fx>=?)
        (g$7353$1a@gJ core-prim . fx=?)
        (g$7354$1a@gJ core-prim . fx<?)
        (g$7355$1a@gJ core-prim . fx<=?)
        (g$7417$1a@gJ core-prim . fx-/carry)
        (g$7328$1a@gJ core-prim . fx-)
        (g$7418$1a@gJ core-prim . fx+/carry)
        (g$7326$1a@gJ core-prim . fx+)
        (g$7416$1a@gJ core-prim . fx*/carry)
        (g$7327$1a@gJ core-prim . fx*)
        (g$7297$1a@gJ core-prim . greatest-fixnum)
        (g$7298$1a@gJ core-prim . least-fixnum)
        (g$5561$1a@gJ core-prim . fixnum-width)
        (g$5559$1a@gJ core-prim . fixnum?)
        (g$7227$1a@gJ core-prim . bitwise-rotate-bit-field)
        (g$7228$1a@gJ core-prim . bitwise-reverse-bit-field)
        (g$7218$1a@gJ core-prim . bitwise-length)
        (g$7221$1a@gJ core-prim . bitwise-if)
        (g$7219$1a@gJ core-prim . bitwise-first-bit-set)
        (g$7224$1a@gJ core-prim . bitwise-copy-bit-field)
        (g$7222$1a@gJ core-prim . bitwise-copy-bit)
        (g$7220$1a@gJ core-prim . bitwise-bit-set?)
        (g$7223$1a@gJ core-prim . bitwise-bit-field)
        (g$7217$1a@gJ core-prim . bitwise-bit-count)
        (g$7216$1a@gJ core-prim . bitwise-xor)
        (g$7215$1a@gJ core-prim . bitwise-ior)
        (g$7214$1a@gJ core-prim . bitwise-and)
        (g$7213$1a@gJ core-prim . bitwise-not)
        (g$7226$1a@gJ core-prim . bitwise-arithmetic-shift-right)
        (g$7225$1a@gJ core-prim . bitwise-arithmetic-shift-left)
        (g$13848$1a@gJ core-prim . bitwise-arithmetic-shift)
        (g$6270$1a@gJ core-prim . zero?)
        (g$5554$1a@gJ core-prim . vector?)
        (g$5586$1a@gJ core-prim . vector-set!)
        (g$5585$1a@gJ core-prim . vector-ref)
        (g$5653$1a@gJ core-prim . vector-map)
        (g$5588$1a@gJ core-prim . vector-length)
        (g$5654$1a@gJ core-prim . vector-for-each)
        (g$5589$1a@gJ core-prim . vector-fill!)
        (g$5590$1a@gJ core-prim . vector->list)
        (g$13847$1a@gJ core-prim . vector)
        (g$13846$1a@gJ core-prim . values)
        (g$6322$1a@gJ core-prim . truncate)
        (g$6314$1a@gJ core-prim . tan)
        (g$5556$1a@gJ core-prim . symbol?)
        (g$5638$1a@gJ core-prim . symbol=?)
        (g$5576$1a@gJ core-prim . symbol->string)
        (g$5573$1a@gJ core-prim . substring)
        (g$5552$1a@gJ core-prim . string?)
        (g$5635$1a@gJ core-prim . string>?)
        (g$5637$1a@gJ core-prim . string>=?)
        (g$5633$1a@gJ core-prim . string=?)
        (g$5634$1a@gJ core-prim . string<?)
        (g$5636$1a@gJ core-prim . string<=?)
        (g$5565$1a@gJ core-prim . string-ref)
        (g$5568$1a@gJ core-prim . string-length)
        (g$5655$1a@gJ core-prim . string-for-each)
        (g$5572$1a@gJ core-prim . string-copy)
        (g$5574$1a@gJ core-prim . string-append)
        (g$5577$1a@gJ core-prim . string->symbol)
        (g$13845$1a@gJ core-prim . string->number)
        (g$5571$1a@gJ core-prim . string->list)
        (g$5570$1a@gJ core-prim . string)
        (g$6324$1a@gJ core-prim . sqrt)
        (g$6308$1a@gJ core-prim . sin)
        (g$6323$1a@gJ core-prim . round)
        (g$5592$1a@gJ core-prim . reverse)
        (g$6264$1a@gJ core-prim . real?)
        (g$6267$1a@gJ core-prim . real-valued?)
        (g$6301$1a@gJ core-prim . real-part)
        (g$5650$1a@gJ core-prim . rationalize)
        (g$6265$1a@gJ core-prim . rational?)
        (g$6268$1a@gJ core-prim . rational-valued?)
        (g$5558$1a@gJ core-prim . procedure?)
        (g$6271$1a@gJ core-prim . positive?)
        (g$13844$1a@gJ core-prim . pair?)
        (g$5622$1a@gJ core-prim . odd?)
        (g$6299$1a@gJ core-prim . numerator)
        (g$6257$1a@gJ core-prim . number?)
        (g$6278$1a@gJ core-prim . number->string)
        (g$13843$1a@gJ core-prim . null?)
        (g$13842$1a@gJ core-prim . not)
        (g$6272$1a@gJ core-prim . negative?)
        (g$6258$1a@gJ core-prim . nan?)
        (g$5624$1a@gJ core-prim . min)
        (g$5623$1a@gJ core-prim . max)
        (g$5391$1a@gJ core-prim . map)
        (g$5587$1a@gJ core-prim . make-vector)
        (g$5564$1a@gJ core-prim . make-string)
        (g$6294$1a@gJ core-prim . make-rectangular)
        (g$6295$1a@gJ core-prim . make-polar)
        (g$6297$1a@gJ core-prim . magnitude)
        (g$6317$1a@gJ core-prim . log)
        (g$13841$1a@gJ core-prim . list?)
        (g$5371$1a@gJ core-prim . list-tail)
        (g$5372$1a@gJ core-prim . list-ref)
        (g$5583$1a@gJ core-prim . list->vector)
        (g$5584$1a@gJ core-prim . list->string)
        (g$13840$1a@gJ core-prim . list)
        (g$13839$1a@gJ core-prim . length)
        (g$5626$1a@gJ core-prim . lcm)
        (g$6266$1a@gJ core-prim . integer?)
        (g$6269$1a@gJ core-prim . integer-valued?)
        (g$5563$1a@gJ core-prim . integer->char)
        (g$6260$1a@gJ core-prim . infinite?)
        (g$6262$1a@gJ core-prim . inexact?)
        (g$6273$1a@gJ core-prim . inexact)
        (g$6302$1a@gJ core-prim . imag-part)
        (g$5625$1a@gJ core-prim . gcd)
        (g$5392$1a@gJ core-prim . for-each)
        (g$6320$1a@gJ core-prim . floor)
        (g$6259$1a@gJ core-prim . finite?)
        (g$6326$1a@gJ core-prim . expt)
        (g$6307$1a@gJ core-prim . exp)
        (g$6261$1a@gJ core-prim . exact?)
        (g$6325$1a@gJ core-prim . exact-integer-sqrt)
        (g$6274$1a@gJ core-prim . exact)
        (g$5621$1a@gJ core-prim . even?)
        (g$13838$1a@gJ core-prim . error)
        (g$13837$1a@gJ core-prim . eqv?)
        (g$9146$1a@gJ core-prim . equal?)
        (g$13836$1a@gJ core-prim . eq?)
        (g$13835$1a@gJ core-prim . dynamic-wind)
        (g$5582$1a@gJ core-prim . div0-and-mod0)
        (g$5580$1a@gJ core-prim . mod0)
        (g$5578$1a@gJ core-prim . div0)
        (g$5581$1a@gJ core-prim . div-and-mod)
        (g$5579$1a@gJ core-prim . mod)
        (g$6318$1a@gJ core-prim . div)
        (g$6300$1a@gJ core-prim . denominator)
        (g$6311$1a@gJ core-prim . cos)
        (g$13834$1a@gJ core-prim . cons)
        (g$6263$1a@gJ core-prim . complex?)
        (g$5553$1a@gJ core-prim . char?)
        (g$5647$1a@gJ core-prim . char>?)
        (g$5649$1a@gJ core-prim . char>=?)
        (g$5645$1a@gJ core-prim . char=?)
        (g$5646$1a@gJ core-prim . char<?)
        (g$5648$1a@gJ core-prim . char<=?)
        (g$5562$1a@gJ core-prim . char->integer)
        (g$6321$1a@gJ core-prim . ceiling)
        (g$13833$1a@gJ core-prim . call-with-values)
        (g$13832$1a@gJ core-prim . call/cc)
        (g$13831$1a@gJ core-prim . call-with-current-continuation)
        (g$5620$1a@gJ core-prim . cddddr)
        (g$5619$1a@gJ core-prim . cdddar)
        (g$5618$1a@gJ core-prim . cddadr)
        (g$5617$1a@gJ core-prim . cddaar)
        (g$5616$1a@gJ core-prim . cdaddr)
        (g$5615$1a@gJ core-prim . cdadar)
        (g$5614$1a@gJ core-prim . cdaadr)
        (g$5613$1a@gJ core-prim . cdaaar)
        (g$5612$1a@gJ core-prim . cadddr)
        (g$5611$1a@gJ core-prim . caddar)
        (g$5610$1a@gJ core-prim . cadadr)
        (g$5609$1a@gJ core-prim . cadaar)
        (g$5608$1a@gJ core-prim . caaddr)
        (g$5607$1a@gJ core-prim . caadar)
        (g$5606$1a@gJ core-prim . caaadr)
        (g$5605$1a@gJ core-prim . caaaar)
        (g$5604$1a@gJ core-prim . cdddr)
        (g$5603$1a@gJ core-prim . cddar)
        (g$5602$1a@gJ core-prim . cdadr)
        (g$5601$1a@gJ core-prim . cdaar)
        (g$5600$1a@gJ core-prim . caddr)
        (g$5599$1a@gJ core-prim . cadar)
        (g$5598$1a@gJ core-prim . caadr)
        (g$5597$1a@gJ core-prim . caaar)
        (g$5596$1a@gJ core-prim . cddr)
        (g$5595$1a@gJ core-prim . cdar)
        (g$5594$1a@gJ core-prim . cadr)
        (g$5593$1a@gJ core-prim . caar)
        (g$13830$1a@gJ core-prim . cdr)
        (g$13829$1a@gJ core-prim . car)
        (g$5557$1a@gJ core-prim . boolean?)
        (g$5639$1a@gJ core-prim . boolean=?)
        (g$6316$1a@gJ core-prim . atan)
        (g$13828$1a@gJ core-prim . assertion-violation)
        (g$6309$1a@gJ core-prim . asin)
        (g$13827$1a@gJ core-prim . apply)
        (g$5396$1a@gJ core-prim . append)
        (g$6296$1a@gJ core-prim . angle)
        (g$6312$1a@gJ core-prim . acos)
        (g$6319$1a@gJ core-prim . abs)
        (g$13826$1a@gJ core-prim . /)
        (g$13825$1a@gJ core-prim . *)
        (g$13824$1a@gJ core-prim . -)
        (g$13823$1a@gJ core-prim . +)
        (g$6293$1a@gJ core-prim . >=)
        (g$6292$1a@gJ core-prim . >)
        (g$6289$1a@gJ core-prim . =)
        (g$6291$1a@gJ core-prim . <=)
        (g$6290$1a@gJ core-prim . <)
        (g$13822$1a@gJ core-prim . $bytevector-set!)
        (g$13821$1a@gJ core-prim . $bytevector-ref)
        (g$13820$1a@gJ core-prim . $fl>=?)
        (g$13819$1a@gJ core-prim . $fl>?)
        (g$13818$1a@gJ core-prim . $fl<=?)
        (g$13817$1a@gJ core-prim . $fl<?)
        (g$13816$1a@gJ core-prim . $fl-)
        (g$13815$1a@gJ core-prim . $fl/)
        (g$13814$1a@gJ core-prim . $fl*)
        (g$13813$1a@gJ core-prim . $fl+)
        (g$13812$1a@gJ core-prim . $fl=?)
        (g$13811$1a@gJ core-prim . $try)
        (g$13810$1a@gJ core-prim . $fxarithmetic-shift-right)
        (g$13809$1a@gJ core-prim . $fxarithmetic-shift-left)
        (g$13808$1a@gJ core-prim . $$fx-)
        (g$13807$1a@gJ core-prim . $$fx*)
        (g$13806$1a@gJ core-prim . $$fx+)
        (g$13805$1a@gJ core-prim . $fxnot)
        (g$13804$1a@gJ core-prim . $fxxor)
        (g$13803$1a@gJ core-prim . $fxior)
        (g$13802$1a@gJ core-prim . $fxand)
        (g$13801$1a@gJ core-prim . $fx>=?)
        (g$13800$1a@gJ core-prim . $fx>?)
        (g$13799$1a@gJ core-prim . $fx<=?)
        (g$13798$1a@gJ core-prim . $fx<?)
        (g$13797$1a@gJ core-prim . $fx-)
        (g$13796$1a@gJ core-prim . $fxmod0)
        (g$13795$1a@gJ core-prim . $fxdiv0)
        (g$13794$1a@gJ core-prim . $fx*)
        (g$13793$1a@gJ core-prim . $fx+)
        (g$13792$1a@gJ core-prim . $fx=?)
        (g$13791$1a@gJ core-prim . $vector-set!)
        (g$13790$1a@gJ core-prim . $vector-ref)
        (g$13789$1a@gJ core-prim . $cdr)
        (g$13788$1a@gJ core-prim . $car)
        (g$13787$1a@gJ core-prim . make-record-printer)
        (g$13786$1a@gJ core-prim . eqv-hash)
        (g$13785$1a@gJ core-prim . reverse!)
        (g$13784$1a@gJ core-prim . deserialize-port)
        (g$13783$1a@gJ core-prim . serialize-port)
        (g$8991$1a@gJ core-prim . enum-set?)
        (g$7038$1a@gJ core-prim . make-promise)
        (g$13587$1a@gJ core-prim . load/unload)
        (g$13586$1a@gJ core-prim . load/args)
        (g$9100$1a@gJ core-prim . printf)
        (g$9101$1a@gJ core-prim . fprintf)
        (g$9102$1a@gJ core-prim . format)
        (g$13782$1a@gJ core-prim . procedure-form)
        (g$13781$1a@gJ core-prim . procedure-environment)
        (g$13780$1a@gJ core-prim . procedure-name)
        (g$13779$1a@gJ core-prim . procedure-arity)
        (g$13778$1a@gJ core-prim . gc-collect)
        (g$13777$1a@gJ core-prim . typeof)
        (g$13776$1a@gJ core-prim . clr-type?)
        (g$13775$1a@gJ core-prim . get-clr-type)
        (g$13774$1a@gJ core-prim . get-command-line)
        (g$13773$1a@gJ core-prim . vector-append)
        (g$13772$1a@gJ core-prim . vector-filter)
        (g$13771$1a@gJ core-prim . vector-reverse!)
        (g$13770$1a@gJ core-prim . vector-contains?)
        (g$13769$1a@gJ core-prim . vector-index-of)
        (g$13768$1a@gJ core-prim . vector-copy)
        (g$13767$1a@gJ core-prim . vector-binary-search)
        (g$13766$1a@gJ core-prim . string-ci-compare)
        (g$13765$1a@gJ core-prim . string-compare)
        (g$13764$1a@gJ core-prim . string-format)
        (g$13581$1a@gJ core-prim . trace-printer)
        (g$13763$1a@gJ core-prim . make-traced-procedure)
        (g$9122$1a@gJ core-prim . make-traced-macro)
        (g$10557$1a@gJ core-prim . assertion-error)
        (g$13762$1a@gJ core-prim . time-it)
        (g$9225$1a@gJ core-prim . make-parameter)
        (g$13761$1a@gJ core-prim . library-locator)
        (g$13760$1a@gJ core-prim . get-library-paths)
        (g$13759$1a@gJ core-prim . open-tcp-input/output-port)
        (g$13758$1a@gJ core-prim . hashtable-for-each)
        (g$13757$1a@gJ core-prim . hashtable-map)
        (g$10534$1a@gJ core-prim . environment-bindings)
        (g$10537$1a@gJ core-prim . environment-symbols)
        (g$10533$1a@gJ core-prim . interaction-environment-symbols)
        (g$13756$1a@gJ core-prim . optimization-level)
        (g$9863$1a@gJ core-prim . library-path)
        (g$10242$1a@gJ core-prim . make-compile-time-value)
        (g$10543$1a@gJ core-prim . expand->core)
        (g$10541$1a@gJ core-prim . expand)
        (g$13584$1a@gJ core-prim . emacs-mode?)
        (g$10480$1a@gJ core-prim . syntax-transpose)
        (g$9544$1a@gJ core-prim . convert->cps)
        (g$13755$1a@gJ core-prim . inexact=?)
        (g$13754$1a@gJ core-prim . bignum-sqrt-exact)
        (g$13753$1a@gJ core-prim . bignum-sqrt)
        (g$13752$1a@gJ core-prim . flonum->string)
        (g$13751$1a@gJ core-prim . inexact-compare)
        (g$13750$1a@gJ core-prim . exact-compare)
        (g$6753$1a@gJ core-prim . condition-stacktrace)
        (g$6752$1a@gJ core-prim . stacktrace-condition?)
        (g$13582$1a@gJ core-prim . stacktrace-enable?)
        (g$6750$1a@gJ core-prim . make-stacktrace-condition)
        (g$6738$1a@gJ core-prim . condition-where)
        (g$6737$1a@gJ core-prim . where-condition?)
        (g$6735$1a@gJ core-prim . make-where-condition)
        (g$9884$1a@gJ core-prim . installed-libraries)
        (g$9875$1a@gJ core-prim . uninstall-library)
        (g$9308$1a@gJ core-prim . pretty-gensyms)
        (g$9305$1a@gJ core-prim . pretty-width)
        (g$9310$1a@gJ core-prim . pretty-print)
        (g$13749$1a@gJ core-prim . pointer+)
        (g$13748$1a@gJ $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$13747$1a@gJ $core-rtd &where-rtd &where-rcd)
        (g$13746$1a@gJ $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13745$1a@gJ $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13744$1a@gJ $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13743$1a@gJ $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13742$1a@gJ $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13741$1a@gJ
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13740$1a@gJ
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13739$1a@gJ
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13738$1a@gJ
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13737$1a@gJ $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13736$1a@gJ
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13735$1a@gJ $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13734$1a@gJ $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13733$1a@gJ $core-rtd &i/o-rtd &i/o-rcd)
        (g$13732$1a@gJ
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13731$1a@gJ $core-rtd &undefined-rtd &undefined-rcd)
        (g$13730$1a@gJ $core-rtd &syntax-rtd &syntax-rcd)
        (g$13729$1a@gJ $core-rtd &lexical-rtd &lexical-rcd)
        (g$13728$1a@gJ
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13727$1a@gJ $core-rtd &who-rtd &who-rcd)
        (g$13726$1a@gJ $core-rtd &irritants-rtd &irritants-rcd)
        (g$13725$1a@gJ $core-rtd &assertion-rtd &assertion-rcd)
        (g$13724$1a@gJ $core-rtd &violation-rtd &violation-rcd)
        (g$13723$1a@gJ $core-rtd &error-rtd &error-rcd)
        (g$13722$1a@gJ $core-rtd &serious-rtd &serious-rcd)
        (g$13721$1a@gJ $core-rtd &warning-rtd &warning-rcd)
        (g$13720$1a@gJ $core-rtd &message-rtd &message-rcd)
        (g$13719$1a@gJ $core-rtd &condition-rtd &condition-rcd)
        (g$13718$1a@gJ macro . define-condition-type)
        (g$13717$1a@gJ macro . define-enumeration)
        (g$13716$1a@gJ macro . define-record-type)
        (g$13715$1a@gJ macro . parent-rtd)
        (g$13714$1a@gJ macro . nongenerative)
        (g$13713$1a@gJ macro . opaque)
        (g$13712$1a@gJ macro . sealed)
        (g$13711$1a@gJ macro . protocol)
        (g$13710$1a@gJ macro . parent)
        (g$13709$1a@gJ macro . immutable)
        (g$13708$1a@gJ macro . mutable)
        (g$13707$1a@gJ macro . fields)
        (g$13706$1a@gJ macro . error-handling-mode)
        (g$13705$1a@gJ macro . file-options)
        (g$13704$1a@gJ macro . buffer-mode)
        (g$13703$1a@gJ macro . eol-style)
        (g$13702$1a@gJ macro . guard)
        (g$13701$1a@gJ macro . trace-letrec-syntax)
        (g$13700$1a@gJ macro . trace-let-syntax)
        (g$13699$1a@gJ macro . trace-define-syntax)
        (g$13698$1a@gJ macro . trace-define)
        (g$13697$1a@gJ macro . trace-lambda)
        (g$13696$1a@gJ macro . unsyntax-splicing)
        (g$13695$1a@gJ macro . unsyntax)
        (g$13694$1a@gJ macro . unquote-splicing)
        (g$13693$1a@gJ macro . unquote)
        (g$13692$1a@gJ macro . _)
        (g$13691$1a@gJ macro . else)
        (g$13690$1a@gJ macro . =>)
        (g$13689$1a@gJ macro . ...)
        (g$13688$1a@gJ macro . assert)
        (g$13687$1a@gJ macro . endianness)
        (g$13686$1a@gJ macro . delay)
        (g$13685$1a@gJ macro . time)
        (g$13684$1a@gJ macro . or)
        (g$13683$1a@gJ macro . and)
        (g$13682$1a@gJ macro . do)
        (g$13681$1a@gJ macro . cond)
        (g$13680$1a@gJ macro . let*)
        (g$13679$1a@gJ macro . let)
        (g$13678$1a@gJ macro . identifier-syntax)
        (g$13677$1a@gJ macro . with-syntax)
        (g$13676$1a@gJ macro . quasisyntax)
        (g$13675$1a@gJ macro . quasiquote)
        (g$13674$1a@gJ macro . syntax-rules)
        (g$13673$1a@gJ macro . include-into)
        (g$13672$1a@gJ macro . include)
        (g$13671$1a@gJ macro . define-struct)
        (g$13670$1a@gJ macro . let-values)
        (g$13669$1a@gJ macro . let*-values)
        (g$13668$1a@gJ core-macro . record-constructor-descriptor)
        (g$13667$1a@gJ core-macro . record-type-descriptor)
        (g$13666$1a@gJ core-macro . fluid-let-syntax)
        (g$13665$1a@gJ macro . case)
        (g$13664$1a@gJ macro . parameterize)
        (g$13663$1a@gJ macro . unless)
        (g$13662$1a@gJ macro . when)
        (g$13661$1a@gJ core-macro . if)
        (g$13660$1a@gJ core-macro . letrec*)
        (g$13659$1a@gJ core-macro . letrec)
        (g$13658$1a@gJ core-macro . type-descriptor)
        (g$13657$1a@gJ core-macro . case-lambda)
        (g$13656$1a@gJ core-macro . lambda)
        (g$13655$1a@gJ core-macro . syntax)
        (g$13654$1a@gJ core-macro . syntax-case)
        (g$13653$1a@gJ core-macro . quote)
        (g$13652$1a@gJ core-macro . foreign-call)
        (g$13651$1a@gJ letrec-syntax)
        (g$13650$1a@gJ let-syntax)
        (g$13649$1a@gJ set!)
        (g$13648$1a@gJ export)
        (g$13647$1a@gJ import)
        (g$13646$1a@gJ library)
        (g$13645$1a@gJ begin)
        (g$13644$1a@gJ module)
        (g$13643$1a@gJ define-syntax)
        (g$13642$1a@gJ define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28115$1a@gJ
      'g$14030$1a@gJ
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$13968$1a@gJ)
        (eval-core . g$13967$1a@gJ)
        (set-symbol-value! . g$13965$1a@gJ)
        (symbol-value . g$13964$1a@gJ)
        (gensym . g$13961$1a@gJ)
        (void . g$13960$1a@gJ))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$32631$1a@gJ
     g$trace-printer$32699$1a@gJ
     (g$make-parameter$27252$1a@gJ g$pretty-print$27462$1a@gJ))
   (g$stacktrace-enable?$32632$1a@gJ
     g$stacktrace-enable?$32700$1a@gJ
     (g$make-parameter$27252$1a@gJ '#t))
   (g$command-line$32633$1a@gJ
     g$command-line$32701$1a@gJ
     (g$make-parameter$27252$1a@gJ (get-command-line)))
   (g$emacs-mode?$32634$1a@gJ
     g$emacs-mode?$32702$1a@gJ
     (g$make-parameter$27252$1a@gJ '#f))
   (g$local-library-path$32635$1a@gJ
     g$local-library-path$32703$1a@gJ
     (case-lambda
       ((g$filename$32650$1a@gJ)
        (cons
          (g$get-directory-name$20779$1a@gJ g$filename$32650$1a@gJ)
          (g$library-path$28099$1a@gJ)))))
   (g$load/args$32636$1a@gJ
     g$load/args$32704$1a@gJ
     (case-lambda
       ((g$filename$32651$1a@gJ . g$args$32652$1a@gJ)
        (begin
          (apply
            g$load-r6rs-top-level$32647$1a@gJ
            g$filename$32651$1a@gJ
            'load
            g$args$32652$1a@gJ)
          (void)))))
   (g$load/unload$32637$1a@gJ
     g$load/unload$32705$1a@gJ
     (case-lambda
       ((g$filename$32653$1a@gJ)
        ((case-lambda
           ((g$libs$32654$1a@gJ)
            (begin
              (g$load$32638$1a@gJ g$filename$32653$1a@gJ)
              (g$for-each$20196$1a@gJ
                (case-lambda
                  ((g$lib$32655$1a@gJ)
                   (if (not (g$memq$20187$1a@gJ
                              g$lib$32655$1a@gJ
                              g$libs$32654$1a@gJ))
                     (g$uninstall-library$28111$1a@gJ g$lib$32655$1a@gJ)
                     (void))))
                (g$installed-libraries$28120$1a@gJ)))))
         (g$installed-libraries$28120$1a@gJ)))))
   (g$load$32638$1a@gJ
     g$load$32706$1a@gJ
     (case-lambda
       ((g$filename$32656$1a@gJ)
        (begin
          (apply
            g$load-r6rs-top-level$32647$1a@gJ
            g$filename$32656$1a@gJ
            'load
            (cdr (g$command-line$32633$1a@gJ)))
          (void)))))
   (g$ironscheme-test$32639$1a@gJ
     g$ironscheme-test$32707$1a@gJ
     (case-lambda (() (g$load$32638$1a@gJ '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$32640$1a@gJ
     g$ironscheme-build$32708$1a@gJ
     (case-lambda
       (() (g$ironscheme-build$32640$1a@gJ '#f))
       ((g$cps?$32657$1a@gJ)
        (begin
          (g$call-with-output-file$26760$1a@gJ
            '"build-options.ss"
            (case-lambda
              ((g$p$32658$1a@gJ)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$32657$1a@gJ)
                   g$p$32658$1a@gJ)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$32657$1a@gJ))
                   g$p$32658$1a@gJ)
                 (g$newline$26761$1a@gJ g$p$32658$1a@gJ)))))
          (g$load$32638$1a@gJ '"ironscheme-buildscript.ss")))))
   (g$foreground-color$32641$1a@gJ
     g$foreground-color$32709$1a@gJ
     (case-lambda
       (()
        (if (not (g$emacs-mode?$32634$1a@gJ))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$32659$1a@gJ)
        (if (not (g$emacs-mode?$32634$1a@gJ))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$32659$1a@gJ))
          '#f))))
   (g$system-exception?$32642$1a@gJ
     g$system-exception?$32710$1a@gJ
     (case-lambda
       ((g$e$32660$1a@gJ)
        (clr-is-internal 'SystemException g$e$32660$1a@gJ))))
   (g$eval-top-level$32643$1a@gJ
     g$eval-top-level$32711$1a@gJ
     (case-lambda
       ((g$x$32661$1a@gJ)
        (call/cc
          (case-lambda
            ((g$k$32662$1a@gJ)
             (with-exception-handler
               (case-lambda
                 ((g$e$32663$1a@gJ)
                  ((case-lambda
                     ((g$serious?$32664$1a@gJ)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$32669$1a@gJ
                              g$current-output-port$32670$1a@gJ
                              g$foreground-color$32671$1a@gJ
                              g$current-output-port$32672$1a@gJ)
                            ((case-lambda
                               ((g$swap$32673$1a@gJ)
                                (dynamic-wind
                                  g$swap$32673$1a@gJ
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$32664$1a@gJ
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$32663$1a@gJ)
                                       (g$newline$26761$1a@gJ))))
                                  g$swap$32673$1a@gJ)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$32674$1a@gJ)
                                      (begin
                                        (g$foreground-color$32669$1a@gJ
                                          g$foreground-color$32671$1a@gJ)
                                        (set! g$foreground-color$32671$1a@gJ
                                          g$t$32674$1a@gJ))))
                                   (g$foreground-color$32669$1a@gJ))
                                  ((case-lambda
                                     ((g$t$32675$1a@gJ)
                                      (begin
                                        (g$current-output-port$32670$1a@gJ
                                          g$current-output-port$32672$1a@gJ)
                                        (set! g$current-output-port$32672$1a@gJ
                                          g$t$32675$1a@gJ))))
                                   (g$current-output-port$32670$1a@gJ))))))))
                         g$foreground-color$32641$1a@gJ
                         current-output-port
                         (if g$serious?$32664$1a@gJ 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$32664$1a@gJ
                          (g$k$32662$1a@gJ)
                          (void)))))
                   ((case-lambda
                      ((g$t$32676$1a@gJ)
                       (if g$t$32676$1a@gJ
                         g$t$32676$1a@gJ
                         (begin
                           '#f
                           (g$system-exception?$32642$1a@gJ
                             g$e$32663$1a@gJ)))))
                    (g$serious-condition?$22161$1a@gJ
                      g$e$32663$1a@gJ)))))
               (case-lambda
                 (()
                  (g$eval$32603$1a@gJ
                    g$x$32661$1a@gJ
                    (g$interaction-environment$32629$1a@gJ)))))))))))
   (g$compile-system-libraries$32644$1a@gJ
     g$compile-system-libraries$32712$1a@gJ
     (case-lambda
       (()
        (g$eval-top-level$32643$1a@gJ
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$32645$1a@gJ
     g$compile$32713$1a@gJ
     (case-lambda
       ((g$filename$32677$1a@gJ)
        (g$load-r6rs-top-level$32647$1a@gJ
          g$filename$32677$1a@gJ
          'compile))))
   (g$compile->closure$32646$1a@gJ
     g$compile->closure$32714$1a@gJ
     (case-lambda
       ((g$filename$32678$1a@gJ)
        (g$load-r6rs-top-level$32647$1a@gJ
          g$filename$32678$1a@gJ
          'closure))))
   (g$load-r6rs-top-level$32647$1a@gJ
     g$load-r6rs-top-level$32715$1a@gJ
     (case-lambda
       ((g$filename$32679$1a@gJ g$how$32680$1a@gJ . g$args$32681$1a@gJ)
        ((case-lambda
           ((g$library-path$32684$1a@gJ g$library-path$32685$1a@gJ)
            ((case-lambda
               ((g$swap$32686$1a@gJ)
                (dynamic-wind
                  g$swap$32686$1a@gJ
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$32687$1a@gJ)
                         ((case-lambda
                            ((g$t$32688$1a@gJ)
                             (if (eqv? g$t$32688$1a@gJ 'closure)
                               (g$pre-compile-r6rs-top-level$32627$1a@gJ
                                 g$x*$32687$1a@gJ)
                               (if (eqv? g$t$32688$1a@gJ 'load)
                                 ((case-lambda
                                    ((g$command-line$32691$1a@gJ
                                       g$command-line$32692$1a@gJ)
                                     ((case-lambda
                                        ((g$swap$32693$1a@gJ)
                                         (dynamic-wind
                                           g$swap$32693$1a@gJ
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$32626$1a@gJ
                                                 g$x*$32687$1a@gJ))))
                                           g$swap$32693$1a@gJ)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$32694$1a@gJ)
                                             (begin
                                               (g$command-line$32691$1a@gJ
                                                 g$command-line$32692$1a@gJ)
                                               (set! g$command-line$32692$1a@gJ
                                                 g$t$32694$1a@gJ))))
                                          (g$command-line$32691$1a@gJ)))))))
                                  g$command-line$32633$1a@gJ
                                  (cons
                                    g$filename$32679$1a@gJ
                                    (g$map$20195$1a@gJ
                                      (case-lambda
                                        ((g$x$32695$1a@gJ)
                                         (g$format$26935$1a@gJ
                                           '"~a"
                                           g$x$32695$1a@gJ)))
                                      g$args$32681$1a@gJ)))
                                 (if (eqv? g$t$32688$1a@gJ 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$32626$1a@gJ
                                       g$x*$32687$1a@gJ)
                                     (g$serialize-all$28103$1a@gJ
                                       serialize-library
                                       g$compile-core-expr$27850$1a@gJ))
                                   (if '#f '#f (void)))))))
                          g$how$32680$1a@gJ)))
                      (g$with-input-from-file$26757$1a@gJ
                        g$filename$32679$1a@gJ
                        (case-lambda
                          (()
                           ((letrec ((g$f$32696$1a@gJ
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$32697$1a@gJ)
                                              (if (eof-object?
                                                    g$x$32697$1a@gJ)
                                                '()
                                                (cons
                                                  g$x$32697$1a@gJ
                                                  (g$f$32696$1a@gJ)))))
                                           (read-annotated))))))
                              g$f$32696$1a@gJ))))))))
                  g$swap$32686$1a@gJ)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$32698$1a@gJ)
                    (begin
                      (g$library-path$32684$1a@gJ
                        g$library-path$32685$1a@gJ)
                      (set! g$library-path$32685$1a@gJ
                        g$t$32698$1a@gJ))))
                 (g$library-path$32684$1a@gJ)))))))
         g$library-path$28099$1a@gJ
         (g$local-library-path$32635$1a@gJ g$filename$32679$1a@gJ)))))
   (g$fo$32648$1a@gJ
     g$fo$32716$1a@gJ
     (g$make-enumeration$26897$1a@gJ '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$28104$1a@gJ
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$32649$1a@gJ)
         (if (g$serious-condition?$22161$1a@gJ g$ex$32649$1a@gJ)
           (raise g$ex$32649$1a@gJ)
           (begin
             '#f
             (display g$ex$32649$1a@gJ)
             (g$newline$26761$1a@gJ))))))
    (set-symbol-value! 'load g$load$32638$1a@gJ)
    (set-symbol-value! 'compile g$compile$32645$1a@gJ)
    (set-symbol-value! 'compile->closure g$compile->closure$32646$1a@gJ)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$32643$1a@gJ)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$32594$1a@gJ)
    (set-symbol-value! 'expanded2core g$expanded->core$27849$1a@gJ)
    (set-symbol-value! 'trace-printer g$trace-printer$32631$1a@gJ)
    (set-symbol-value! 'pretty-print g$pretty-print$27462$1a@gJ)
    (set-symbol-value! 'convert->cps g$convert->cps$27780$1a@gJ)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$32634$1a@gJ)
    (set-symbol-value!
      'stacktrace-enable?
      g$stacktrace-enable?$32632$1a@gJ)
    (g$file-options-constructor$27253$1a@gJ
      (g$enum-set-constructor$26900$1a@gJ g$fo$32648$1a@gJ))
    (g$library-path$28099$1a@gJ (get-library-paths))
    (g$library-extensions$28100$1a@gJ
      (cons '".ironscheme.sls" (g$library-extensions$28100$1a@gJ)))
    (g$enable-constant-fold/env$27800$1a@gJ
      '(only
         (rnrs)
         =
         <
         >
         <=
         >=
         negative?
         positive?
         zero?
         exp
         expt
         div
         mod
         div0
         mod0)
      '(except
         (rnrs arithmetic fixnums)
         fx*/carry
         fx-/carry
         fx+/carry
         fxdiv0-and-mod0
         fxdiv-and-mod)
      '(except (rnrs arithmetic flonums) fldiv0-and-mod0 fldiv-and-mod)
      '(rnrs arithmetic bitwise))
    (g$interaction-environment$32629$1a@gJ
      (g$new-interaction-environment$32628$1a@gJ))))

