;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$20173$1VmeqK
     g$list-tail$20329$1VmeqK
     (case-lambda
       ((g$lst$20201$1VmeqK g$index$20202$1VmeqK)
        (if ((case-lambda
               ((g$t$20203$1VmeqK)
                (if g$t$20203$1VmeqK
                  g$t$20203$1VmeqK
                  (begin
                    '#f
                    (g$negative?$22203$1VmeqK g$index$20202$1VmeqK)))))
             (null? g$lst$20201$1VmeqK))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$20201$1VmeqK
            g$index$20202$1VmeqK)
          (if (g$zero?$22201$1VmeqK g$index$20202$1VmeqK)
            g$lst$20201$1VmeqK
            (begin
              '#f
              (g$list-tail$20173$1VmeqK
                (cdr g$lst$20201$1VmeqK)
                (- g$index$20202$1VmeqK '1))))))))
   (g$list-ref$20174$1VmeqK
     g$list-ref$20330$1VmeqK
     (case-lambda
       ((g$lst$20204$1VmeqK g$index$20205$1VmeqK)
        (car (g$list-tail$20173$1VmeqK
               g$lst$20204$1VmeqK
               g$index$20205$1VmeqK)))))
   (g$last-pair$20175$1VmeqK
     g$last-pair$20331$1VmeqK
     (case-lambda
       ((g$lst$20206$1VmeqK)
        (if (null? g$lst$20206$1VmeqK)
          g$lst$20206$1VmeqK
          (if (null? (cdr g$lst$20206$1VmeqK))
            g$lst$20206$1VmeqK
            (begin
              '#f
              (g$last-pair$20175$1VmeqK (cdr g$lst$20206$1VmeqK))))))))
   (g$make-list$20176$1VmeqK
     g$make-list$20332$1VmeqK
     (case-lambda
       ((g$n$20207$1VmeqK)
        (vector->list (make-vector g$n$20207$1VmeqK)))
       ((g$n$20208$1VmeqK g$fill$20209$1VmeqK)
        (vector->list
          (make-vector g$n$20208$1VmeqK g$fill$20209$1VmeqK)))))
   (g$find$20177$1VmeqK
     g$find$20333$1VmeqK
     (case-lambda
       ((g$proc$20210$1VmeqK g$l$20211$1VmeqK)
        (if (null? g$l$20211$1VmeqK)
          '#f
          ((case-lambda
             ((g$e$20212$1VmeqK g$r$20213$1VmeqK g$proc$20214$1VmeqK)
              (if (g$proc$20214$1VmeqK g$e$20212$1VmeqK)
                g$e$20212$1VmeqK
                (g$find$20177$1VmeqK
                  g$proc$20214$1VmeqK
                  g$r$20213$1VmeqK))))
           (car g$l$20211$1VmeqK)
           (cdr g$l$20211$1VmeqK)
           g$proc$20210$1VmeqK)))))
   (g$partition$20178$1VmeqK
     g$partition$20334$1VmeqK
     (case-lambda
       ((g$proc$20215$1VmeqK g$l$20216$1VmeqK)
        ((letrec ((g$f$20217$1VmeqK
                    (case-lambda
                      ((g$l$20218$1VmeqK
                         g$a$20219$1VmeqK
                         g$b$20220$1VmeqK)
                       (if (null? g$l$20218$1VmeqK)
                         (values
                           (reverse! g$a$20219$1VmeqK)
                           (reverse! g$b$20220$1VmeqK))
                         ((case-lambda
                            ((g$e$20221$1VmeqK)
                             (if (g$proc$20215$1VmeqK g$e$20221$1VmeqK)
                               (g$f$20217$1VmeqK
                                 (cdr g$l$20218$1VmeqK)
                                 (cons
                                   g$e$20221$1VmeqK
                                   g$a$20219$1VmeqK)
                                 g$b$20220$1VmeqK)
                               (g$f$20217$1VmeqK
                                 (cdr g$l$20218$1VmeqK)
                                 g$a$20219$1VmeqK
                                 (cons
                                   g$e$20221$1VmeqK
                                   g$b$20220$1VmeqK)))))
                          (car g$l$20218$1VmeqK)))))))
           g$f$20217$1VmeqK)
         g$l$20216$1VmeqK
         '()
         '()))))
   (g$remp$20179$1VmeqK
     g$remp$20335$1VmeqK
     (case-lambda
       ((g$proc$20222$1VmeqK g$l$20223$1VmeqK)
        ((letrec ((g$f$20224$1VmeqK
                    (case-lambda
                      ((g$l$20225$1VmeqK g$a$20226$1VmeqK)
                       (if (null? g$l$20225$1VmeqK)
                         (reverse! g$a$20226$1VmeqK)
                         ((case-lambda
                            ((g$e$20227$1VmeqK)
                             (if (g$proc$20222$1VmeqK g$e$20227$1VmeqK)
                               (g$f$20224$1VmeqK
                                 (cdr g$l$20225$1VmeqK)
                                 g$a$20226$1VmeqK)
                               (g$f$20224$1VmeqK
                                 (cdr g$l$20225$1VmeqK)
                                 (cons
                                   g$e$20227$1VmeqK
                                   g$a$20226$1VmeqK)))))
                          (car g$l$20225$1VmeqK)))))))
           g$f$20224$1VmeqK)
         g$l$20223$1VmeqK
         '()))))
   (g$filter$20180$1VmeqK
     g$filter$20336$1VmeqK
     (case-lambda
       ((g$proc$20228$1VmeqK g$l$20229$1VmeqK)
        ((letrec ((g$f$20230$1VmeqK
                    (case-lambda
                      ((g$l$20231$1VmeqK g$a$20232$1VmeqK)
                       (if (null? g$l$20231$1VmeqK)
                         (reverse! g$a$20232$1VmeqK)
                         ((case-lambda
                            ((g$e$20233$1VmeqK)
                             (if (g$proc$20228$1VmeqK g$e$20233$1VmeqK)
                               (g$f$20230$1VmeqK
                                 (cdr g$l$20231$1VmeqK)
                                 (cons
                                   g$e$20233$1VmeqK
                                   g$a$20232$1VmeqK))
                               (g$f$20230$1VmeqK
                                 (cdr g$l$20231$1VmeqK)
                                 g$a$20232$1VmeqK))))
                          (car g$l$20231$1VmeqK)))))))
           g$f$20230$1VmeqK)
         g$l$20229$1VmeqK
         '()))))
   (g$assq$20181$1VmeqK
     g$assq$20337$1VmeqK
     (case-lambda
       ((g$obj$20234$1VmeqK g$lst$20235$1VmeqK)
        (if (null? g$lst$20235$1VmeqK)
          '#f
          ((case-lambda
             ((g$obj$20236$1VmeqK g$t$20237$1VmeqK g$r$20238$1VmeqK)
              (if (eq? g$obj$20236$1VmeqK (car g$t$20237$1VmeqK))
                g$t$20237$1VmeqK
                (g$assq$20181$1VmeqK
                  g$obj$20236$1VmeqK
                  g$r$20238$1VmeqK))))
           g$obj$20234$1VmeqK
           (car g$lst$20235$1VmeqK)
           (cdr g$lst$20235$1VmeqK))))))
   (g$assv$20182$1VmeqK
     g$assv$20338$1VmeqK
     (case-lambda
       ((g$obj$20239$1VmeqK g$lst$20240$1VmeqK)
        (if (null? g$lst$20240$1VmeqK)
          '#f
          ((case-lambda
             ((g$obj$20241$1VmeqK g$t$20242$1VmeqK g$r$20243$1VmeqK)
              (if (eqv? g$obj$20241$1VmeqK (car g$t$20242$1VmeqK))
                g$t$20242$1VmeqK
                (g$assv$20182$1VmeqK
                  g$obj$20241$1VmeqK
                  g$r$20243$1VmeqK))))
           g$obj$20239$1VmeqK
           (car g$lst$20240$1VmeqK)
           (cdr g$lst$20240$1VmeqK))))))
   (g$assoc$20183$1VmeqK
     g$assoc$20339$1VmeqK
     (case-lambda
       ((g$obj$20244$1VmeqK g$lst$20245$1VmeqK)
        (if (null? g$lst$20245$1VmeqK)
          '#f
          ((case-lambda
             ((g$obj$20246$1VmeqK g$t$20247$1VmeqK g$r$20248$1VmeqK)
              (if (equal? g$obj$20246$1VmeqK (car g$t$20247$1VmeqK))
                g$t$20247$1VmeqK
                (g$assoc$20183$1VmeqK
                  g$obj$20246$1VmeqK
                  g$r$20248$1VmeqK))))
           g$obj$20244$1VmeqK
           (car g$lst$20245$1VmeqK)
           (cdr g$lst$20245$1VmeqK))))))
   (g$assp$20184$1VmeqK
     g$assp$20340$1VmeqK
     (case-lambda
       ((g$p?$20249$1VmeqK g$lst$20250$1VmeqK)
        (if (null? g$lst$20250$1VmeqK)
          '#f
          ((case-lambda
             ((g$p?$20251$1VmeqK g$t$20252$1VmeqK g$r$20253$1VmeqK)
              (if (g$p?$20251$1VmeqK (car g$t$20252$1VmeqK))
                g$t$20252$1VmeqK
                (g$assp$20184$1VmeqK
                  g$p?$20251$1VmeqK
                  g$r$20253$1VmeqK))))
           g$p?$20249$1VmeqK
           (car g$lst$20250$1VmeqK)
           (cdr g$lst$20250$1VmeqK))))))
   (g$memq$20185$1VmeqK
     g$memq$20341$1VmeqK
     (case-lambda
       ((g$obj$20254$1VmeqK g$lst$20255$1VmeqK)
        (if (null? g$lst$20255$1VmeqK)
          '#f
          (if (eq? g$obj$20254$1VmeqK (car g$lst$20255$1VmeqK))
            g$lst$20255$1VmeqK
            (g$memq$20185$1VmeqK
              g$obj$20254$1VmeqK
              (cdr g$lst$20255$1VmeqK)))))))
   (g$memv$20186$1VmeqK
     g$memv$20342$1VmeqK
     (case-lambda
       ((g$obj$20256$1VmeqK g$lst$20257$1VmeqK)
        (if (null? g$lst$20257$1VmeqK)
          '#f
          (if (eqv? g$obj$20256$1VmeqK (car g$lst$20257$1VmeqK))
            g$lst$20257$1VmeqK
            (g$memv$20186$1VmeqK
              g$obj$20256$1VmeqK
              (cdr g$lst$20257$1VmeqK)))))))
   (g$member$20187$1VmeqK
     g$member$20343$1VmeqK
     (case-lambda
       ((g$obj$20258$1VmeqK g$lst$20259$1VmeqK)
        (if (null? g$lst$20259$1VmeqK)
          '#f
          (if (equal? g$obj$20258$1VmeqK (car g$lst$20259$1VmeqK))
            g$lst$20259$1VmeqK
            (g$member$20187$1VmeqK
              g$obj$20258$1VmeqK
              (cdr g$lst$20259$1VmeqK)))))))
   (g$memp$20188$1VmeqK
     g$memp$20344$1VmeqK
     (case-lambda
       ((g$p?$20260$1VmeqK g$lst$20261$1VmeqK)
        (if (null? g$lst$20261$1VmeqK)
          '#f
          (if (g$p?$20260$1VmeqK (car g$lst$20261$1VmeqK))
            g$lst$20261$1VmeqK
            (g$memp$20188$1VmeqK
              g$p?$20260$1VmeqK
              (cdr g$lst$20261$1VmeqK)))))))
   (g$all-empty?$20189$1VmeqK
     g$all-empty?$20345$1VmeqK
     (case-lambda
       ((g$ls$20262$1VmeqK)
        ((case-lambda
           ((g$t$20263$1VmeqK)
            (if g$t$20263$1VmeqK
              g$t$20263$1VmeqK
              (begin
                '#f
                (if (null? (car g$ls$20262$1VmeqK))
                  (begin
                    '#f
                    (g$all-empty?$20189$1VmeqK (cdr g$ls$20262$1VmeqK)))
                  '#f)))))
         (null? g$ls$20262$1VmeqK)))))
   (g$split$20190$1VmeqK
     g$split$20346$1VmeqK
     (case-lambda
       ((g$ls$20264$1VmeqK)
        (if (null? g$ls$20264$1VmeqK)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (() (g$split$20190$1VmeqK (cdr g$ls$20264$1VmeqK))))
              (case-lambda
                ((g$cars$20265$1VmeqK g$cdrs$20266$1VmeqK)
                 ((case-lambda
                    ((g$a$20267$1VmeqK)
                     (values
                       (cons (car g$a$20267$1VmeqK) g$cars$20265$1VmeqK)
                       (cons
                         (cdr g$a$20267$1VmeqK)
                         g$cdrs$20266$1VmeqK))))
                  (car g$ls$20264$1VmeqK))))))))))
   (g$for-all$20191$1VmeqK
     g$for-all$20347$1VmeqK
     (case-lambda
       ((g$f$20268$1VmeqK g$arg1$20269$1VmeqK)
        (if (null? g$arg1$20269$1VmeqK)
          '#t
          (if (null? (cdr g$arg1$20269$1VmeqK))
            (g$f$20268$1VmeqK (car g$arg1$20269$1VmeqK))
            (if (g$f$20268$1VmeqK (car g$arg1$20269$1VmeqK))
              (begin
                '#f
                (g$for-all$20191$1VmeqK
                  g$f$20268$1VmeqK
                  (cdr g$arg1$20269$1VmeqK)))
              '#f))))
       ((g$f$20270$1VmeqK g$arg1$20271$1VmeqK . g$args$20272$1VmeqK)
        ((case-lambda
           ((g$args$20273$1VmeqK)
            (if (g$all-empty?$20189$1VmeqK g$args$20273$1VmeqK)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$20190$1VmeqK g$args$20273$1VmeqK)))
                (case-lambda
                  ((g$cars$20274$1VmeqK g$cdrs$20275$1VmeqK)
                   (if (g$all-empty?$20189$1VmeqK g$cdrs$20275$1VmeqK)
                     (apply g$f$20270$1VmeqK g$cars$20274$1VmeqK)
                     (if (apply g$f$20270$1VmeqK g$cars$20274$1VmeqK)
                       (begin
                         '#f
                         (apply
                           g$for-all$20191$1VmeqK
                           g$f$20270$1VmeqK
                           g$cdrs$20275$1VmeqK))
                       '#f))))))))
         (cons g$arg1$20271$1VmeqK g$args$20272$1VmeqK)))))
   (g$exists$20192$1VmeqK
     g$exists$20348$1VmeqK
     (case-lambda
       ((g$f$20276$1VmeqK g$arg1$20277$1VmeqK)
        (if (null? g$arg1$20277$1VmeqK)
          '#f
          ((case-lambda
             ((g$t$20278$1VmeqK)
              (if g$t$20278$1VmeqK
                g$t$20278$1VmeqK
                (begin
                  '#f
                  (g$exists$20192$1VmeqK
                    g$f$20276$1VmeqK
                    (cdr g$arg1$20277$1VmeqK))))))
           (g$f$20276$1VmeqK (car g$arg1$20277$1VmeqK)))))
       ((g$f$20279$1VmeqK g$arg1$20280$1VmeqK . g$args$20281$1VmeqK)
        ((case-lambda
           ((g$args$20282$1VmeqK)
            (if (g$all-empty?$20189$1VmeqK g$args$20282$1VmeqK)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$20190$1VmeqK g$args$20282$1VmeqK)))
                (case-lambda
                  ((g$cars$20283$1VmeqK g$cdrs$20284$1VmeqK)
                   ((case-lambda
                      ((g$t$20285$1VmeqK)
                       (if g$t$20285$1VmeqK
                         g$t$20285$1VmeqK
                         (begin
                           '#f
                           (apply
                             g$exists$20192$1VmeqK
                             g$f$20279$1VmeqK
                             g$cdrs$20284$1VmeqK)))))
                    (apply g$f$20279$1VmeqK g$cars$20283$1VmeqK))))))))
         (cons g$arg1$20280$1VmeqK g$args$20281$1VmeqK)))))
   (g$map$20193$1VmeqK
     g$map$20349$1VmeqK
     (case-lambda
       ((g$proc$20286$1VmeqK g$list1$20287$1VmeqK)
        ((letrec ((g$f$20288$1VmeqK
                    (case-lambda
                      ((g$lst$20289$1VmeqK g$a$20290$1VmeqK)
                       (if (null? g$lst$20289$1VmeqK)
                         (reverse! g$a$20290$1VmeqK)
                         (g$f$20288$1VmeqK
                           (cdr g$lst$20289$1VmeqK)
                           (cons
                             (g$proc$20286$1VmeqK
                               (car g$lst$20289$1VmeqK))
                             g$a$20290$1VmeqK)))))))
           g$f$20288$1VmeqK)
         g$list1$20287$1VmeqK
         '()))
       ((g$proc$20291$1VmeqK
          g$list1$20292$1VmeqK
          .
          g$lists$20293$1VmeqK)
        ((letrec ((g$f$20294$1VmeqK
                    (case-lambda
                      ((g$lists$20295$1VmeqK g$a$20296$1VmeqK)
                       (if (g$all-empty?$20189$1VmeqK
                             g$lists$20295$1VmeqK)
                         (reverse! g$a$20296$1VmeqK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$20190$1VmeqK
                                g$lists$20295$1VmeqK)))
                           (case-lambda
                             ((g$cars$20297$1VmeqK g$cdrs$20298$1VmeqK)
                              (g$f$20294$1VmeqK
                                g$cdrs$20298$1VmeqK
                                (cons
                                  (apply
                                    g$proc$20291$1VmeqK
                                    g$cars$20297$1VmeqK)
                                  g$a$20296$1VmeqK))))))))))
           g$f$20294$1VmeqK)
         (cons g$list1$20292$1VmeqK g$lists$20293$1VmeqK)
         '()))))
   (g$for-each$20194$1VmeqK
     g$for-each$20350$1VmeqK
     (case-lambda
       ((g$f$20299$1VmeqK g$arg1$20300$1VmeqK)
        (if (not (null? g$arg1$20300$1VmeqK))
          (begin
            (g$f$20299$1VmeqK (car g$arg1$20300$1VmeqK))
            (g$for-each$20194$1VmeqK
              g$f$20299$1VmeqK
              (cdr g$arg1$20300$1VmeqK)))
          (void)))
       ((g$f$20301$1VmeqK g$arg1$20302$1VmeqK . g$args$20303$1VmeqK)
        ((case-lambda
           ((g$args$20304$1VmeqK)
            (if (not (g$all-empty?$20189$1VmeqK g$args$20304$1VmeqK))
              (call-with-values
                (case-lambda
                  (() (g$split$20190$1VmeqK g$args$20304$1VmeqK)))
                (case-lambda
                  ((g$cars$20305$1VmeqK g$cdrs$20306$1VmeqK)
                   (begin
                     (apply g$f$20301$1VmeqK g$cars$20305$1VmeqK)
                     (apply
                       g$for-each$20194$1VmeqK
                       g$f$20301$1VmeqK
                       g$cdrs$20306$1VmeqK)))))
              (void))))
         (cons g$arg1$20302$1VmeqK g$args$20303$1VmeqK)))))
   (g$cons*$20195$1VmeqK
     g$cons*$20351$1VmeqK
     (case-lambda
       ((g$a$20307$1VmeqK . g$rest$20308$1VmeqK)
        ((letrec ((g$f$20309$1VmeqK
                    (case-lambda
                      ((g$a$20310$1VmeqK g$rest$20311$1VmeqK)
                       (if (null? g$rest$20311$1VmeqK)
                         g$a$20310$1VmeqK
                         (cons
                           g$a$20310$1VmeqK
                           (g$f$20309$1VmeqK
                             (car g$rest$20311$1VmeqK)
                             (cdr g$rest$20311$1VmeqK))))))))
           g$f$20309$1VmeqK)
         g$a$20307$1VmeqK
         g$rest$20308$1VmeqK))))
   (g$fold-left$20196$1VmeqK
     g$fold-left$20352$1VmeqK
     (case-lambda
       ((g$combine$20312$1VmeqK
          g$nil$20313$1VmeqK
          g$list1$20314$1VmeqK
          .
          g$lists$20315$1VmeqK)
        (if (null? g$list1$20314$1VmeqK)
          g$nil$20313$1VmeqK
          (if (null? g$lists$20315$1VmeqK)
            (g$fold-left$20196$1VmeqK
              g$combine$20312$1VmeqK
              (g$combine$20312$1VmeqK
                g$nil$20313$1VmeqK
                (car g$list1$20314$1VmeqK))
              (cdr g$list1$20314$1VmeqK))
            (begin
              '#f
              (apply
                g$fold-left$20196$1VmeqK
                (g$cons*$20195$1VmeqK
                  g$combine$20312$1VmeqK
                  (apply
                    g$combine$20312$1VmeqK
                    (g$cons*$20195$1VmeqK
                      g$nil$20313$1VmeqK
                      (car g$list1$20314$1VmeqK)
                      (g$map$20193$1VmeqK car g$lists$20315$1VmeqK)))
                  (cdr g$list1$20314$1VmeqK)
                  (g$map$20193$1VmeqK cdr g$lists$20315$1VmeqK)))))))))
   (g$fold-right$20197$1VmeqK
     g$fold-right$20353$1VmeqK
     (case-lambda
       ((g$combine$20316$1VmeqK
          g$nil$20317$1VmeqK
          g$list1$20318$1VmeqK
          .
          g$lists$20319$1VmeqK)
        (if (null? g$list1$20318$1VmeqK)
          g$nil$20317$1VmeqK
          (if (null? g$lists$20319$1VmeqK)
            (g$combine$20316$1VmeqK
              (car g$list1$20318$1VmeqK)
              (g$fold-right$20197$1VmeqK
                g$combine$20316$1VmeqK
                g$nil$20317$1VmeqK
                (cdr g$list1$20318$1VmeqK)))
            (begin
              '#f
              (apply
                g$combine$20316$1VmeqK
                (append
                  (list (car g$list1$20318$1VmeqK))
                  (g$map$20193$1VmeqK car g$lists$20319$1VmeqK)
                  (list
                    (apply
                      g$fold-right$20197$1VmeqK
                      (g$cons*$20195$1VmeqK
                        g$combine$20316$1VmeqK
                        g$nil$20317$1VmeqK
                        (cdr g$list1$20318$1VmeqK)
                        (g$map$20193$1VmeqK
                          cdr
                          g$lists$20319$1VmeqK))))))))))))
   (g$remove$20198$1VmeqK
     g$remove$20354$1VmeqK
     (case-lambda
       ((g$obj$20320$1VmeqK g$list$20321$1VmeqK)
        (g$remp$20179$1VmeqK
          (case-lambda
            ((g$x$20322$1VmeqK)
             (equal? g$obj$20320$1VmeqK g$x$20322$1VmeqK)))
          g$list$20321$1VmeqK))))
   (g$remv$20199$1VmeqK
     g$remv$20355$1VmeqK
     (case-lambda
       ((g$obj$20323$1VmeqK g$list$20324$1VmeqK)
        (g$remp$20179$1VmeqK
          (case-lambda
            ((g$x$20325$1VmeqK)
             (eqv? g$obj$20323$1VmeqK g$x$20325$1VmeqK)))
          g$list$20324$1VmeqK))))
   (g$remq$20200$1VmeqK
     g$remq$20356$1VmeqK
     (case-lambda
       ((g$obj$20326$1VmeqK g$list$20327$1VmeqK)
        (g$remp$20179$1VmeqK
          (case-lambda
            ((g$x$20328$1VmeqK)
             (eq? g$obj$20326$1VmeqK g$x$20328$1VmeqK)))
          g$list$20327$1VmeqK)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$char?$20841$1VmeqK
     g$char?$21178$1VmeqK
     (case-lambda
       ((g$obj$20994$1VmeqK)
        (clr-is-internal 'system.char g$obj$20994$1VmeqK))))
   (g$vector?$20842$1VmeqK
     g$vector?$21179$1VmeqK
     (case-lambda
       ((g$obj$20995$1VmeqK)
        (clr-is-internal 'system.object[] g$obj$20995$1VmeqK))))
   (g$bytevector?$20843$1VmeqK
     g$bytevector?$21180$1VmeqK
     (case-lambda
       ((g$obj$20996$1VmeqK)
        (clr-is-internal 'system.byte[] g$obj$20996$1VmeqK))))
   (g$symbol?$20844$1VmeqK
     g$symbol?$21181$1VmeqK
     (case-lambda
       ((g$obj$20997$1VmeqK)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$20997$1VmeqK))))
   (g$boolean?$20845$1VmeqK
     g$boolean?$21182$1VmeqK
     (case-lambda
       ((g$obj$20998$1VmeqK)
        (clr-is-internal 'system.boolean g$obj$20998$1VmeqK))))
   (g$procedure?$20846$1VmeqK
     g$procedure?$21183$1VmeqK
     (case-lambda
       ((g$obj$20999$1VmeqK)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$20999$1VmeqK))))
   (g$fixnum?$20847$1VmeqK
     g$fixnum?$21184$1VmeqK
     (case-lambda
       ((g$obj$21000$1VmeqK)
        (clr-is-internal 'system.int32 g$obj$21000$1VmeqK))))
   (g$flonum?$20848$1VmeqK
     g$flonum?$21185$1VmeqK
     (case-lambda
       ((g$obj$21001$1VmeqK)
        (clr-is-internal 'system.double g$obj$21001$1VmeqK))))
   (g$fixnum-width$20849$1VmeqK
     g$fixnum-width$21186$1VmeqK
     (case-lambda (() '32)))
   (g$div0$20850$1VmeqK
     g$div0$21187$1VmeqK
     (case-lambda
       ((g$x1$21002$1VmeqK g$x2$21003$1VmeqK)
        ((case-lambda
           ((g$d$21004$1VmeqK)
            ((case-lambda
               ((g$m$21005$1VmeqK)
                (if (g$<$22211$1VmeqK
                      g$m$21005$1VmeqK
                      (g$magnitude$22218$1VmeqK
                        (/ g$x2$21003$1VmeqK '2)))
                  g$d$21004$1VmeqK
                  (if (g$positive?$22202$1VmeqK g$x2$21003$1VmeqK)
                    (+ g$d$21004$1VmeqK '1)
                    (begin '#f (- g$d$21004$1VmeqK '1))))))
             (- g$x1$21002$1VmeqK
                (* g$d$21004$1VmeqK g$x2$21003$1VmeqK)))))
         (g$div$22235$1VmeqK g$x1$21002$1VmeqK g$x2$21003$1VmeqK)))))
   (g$mod$20851$1VmeqK
     g$mod$21188$1VmeqK
     (case-lambda
       ((g$x1$21006$1VmeqK g$x2$21007$1VmeqK)
        (- g$x1$21006$1VmeqK
           (* (g$div$22235$1VmeqK g$x1$21006$1VmeqK g$x2$21007$1VmeqK)
              g$x2$21007$1VmeqK)))))
   (g$mod0$20852$1VmeqK
     g$mod0$21189$1VmeqK
     (case-lambda
       ((g$x1$21008$1VmeqK g$x2$21009$1VmeqK)
        (- g$x1$21008$1VmeqK
           (* (g$div0$20850$1VmeqK g$x1$21008$1VmeqK g$x2$21009$1VmeqK)
              g$x2$21009$1VmeqK)))))
   (g$div-and-mod$20853$1VmeqK
     g$div-and-mod$21190$1VmeqK
     (case-lambda
       ((g$x1$21010$1VmeqK g$x2$21011$1VmeqK)
        ((case-lambda
           ((g$d$21012$1VmeqK)
            (values
              g$d$21012$1VmeqK
              (- g$x1$21010$1VmeqK
                 (* g$d$21012$1VmeqK g$x2$21011$1VmeqK)))))
         (g$div$22235$1VmeqK g$x1$21010$1VmeqK g$x2$21011$1VmeqK)))))
   (g$div0-and-mod0$20854$1VmeqK
     g$div0-and-mod0$21191$1VmeqK
     (case-lambda
       ((g$x1$21013$1VmeqK g$x2$21014$1VmeqK)
        ((case-lambda
           ((g$d$21015$1VmeqK)
            (values
              g$d$21015$1VmeqK
              (- g$x1$21013$1VmeqK
                 (* g$d$21015$1VmeqK g$x2$21014$1VmeqK)))))
         (g$div0$20850$1VmeqK g$x1$21013$1VmeqK g$x2$21014$1VmeqK)))))
   (g$list->vector$20855$1VmeqK
     g$list->vector$21192$1VmeqK
     (case-lambda
       ((g$lst$21016$1VmeqK) (apply vector g$lst$21016$1VmeqK))))
   (g$list->string$20856$1VmeqK
     g$list->string$21193$1VmeqK
     (case-lambda
       ((g$lst$21017$1VmeqK) (apply string g$lst$21017$1VmeqK))))
   (g$vector-ref$20857$1VmeqK
     g$vector-ref$21194$1VmeqK
     (case-lambda
       ((g$x$21018$1VmeqK g$n$21019$1VmeqK)
        (begin
          (if (not (g$vector?$20842$1VmeqK g$x$21018$1VmeqK))
            (assertion-violation
              'vector-ref
              '"not a vector"
              g$x$21018$1VmeqK)
            (void))
          (if (not (g$integer?$22197$1VmeqK g$n$21019$1VmeqK))
            (assertion-violation
              'vector-ref
              '"not an integer"
              g$n$21019$1VmeqK)
            (void))
          (if (g$negative?$22203$1VmeqK g$n$21019$1VmeqK)
            (assertion-violation
              'vector-ref
              '"negative index"
              g$n$21019$1VmeqK)
            (void))
          ($vector-ref g$x$21018$1VmeqK g$n$21019$1VmeqK)))))
   (g$vector-set!$20858$1VmeqK
     g$vector-set!$21195$1VmeqK
     (case-lambda
       ((g$x$21020$1VmeqK g$n$21021$1VmeqK g$value$21022$1VmeqK)
        (begin
          (if (not (g$vector?$20842$1VmeqK g$x$21020$1VmeqK))
            (assertion-violation
              'vector-set!
              '"not a vector"
              g$x$21020$1VmeqK)
            (void))
          (if (not (g$integer?$22197$1VmeqK g$n$21021$1VmeqK))
            (assertion-violation
              'vector-set!
              '"not an integer"
              g$n$21021$1VmeqK)
            (void))
          (if (g$negative?$22203$1VmeqK g$n$21021$1VmeqK)
            (assertion-violation
              'vector-set!
              '"negative index"
              g$n$21021$1VmeqK)
            (void))
          ($vector-set!
            g$x$21020$1VmeqK
            g$n$21021$1VmeqK
            g$value$21022$1VmeqK)
          (void)))))
   (g$vector-fill!$20859$1VmeqK
     g$vector-fill!$21196$1VmeqK
     (case-lambda
       ((g$vec$21023$1VmeqK g$val$21024$1VmeqK)
        ((case-lambda
           ((g$len$21025$1VmeqK)
            (letrec ((g$loop$21026$1VmeqK
                       (case-lambda
                         ((g$i$21027$1VmeqK)
                          (if (g$fx=?$25493$1VmeqK
                                g$i$21027$1VmeqK
                                g$len$21025$1VmeqK)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$20858$1VmeqK
                                g$vec$21023$1VmeqK
                                g$i$21027$1VmeqK
                                g$val$21024$1VmeqK)
                              (g$loop$21026$1VmeqK
                                (g$fx+$25480$1VmeqK
                                  g$i$21027$1VmeqK
                                  '1))))))))
              (g$loop$21026$1VmeqK '0))))
         (vector-length g$vec$21023$1VmeqK)))))
   (g$xcons$20860$1VmeqK
     g$xcons$21197$1VmeqK
     (case-lambda
       ((g$x$21028$1VmeqK g$y$21029$1VmeqK)
        (cons g$y$21029$1VmeqK g$x$21028$1VmeqK))))
   (g$reverse$20861$1VmeqK
     g$reverse$21198$1VmeqK
     (case-lambda
       ((g$lst$21030$1VmeqK)
        (g$fold-left$20352$1VmeqK
          g$xcons$20860$1VmeqK
          '()
          g$lst$21030$1VmeqK))))
   (g$caar$20862$1VmeqK
     g$caar$21199$1VmeqK
     (case-lambda ((g$x$21031$1VmeqK) (car (car g$x$21031$1VmeqK)))))
   (g$cadr$20863$1VmeqK
     g$cadr$21200$1VmeqK
     (case-lambda ((g$x$21032$1VmeqK) (car (cdr g$x$21032$1VmeqK)))))
   (g$cdar$20864$1VmeqK
     g$cdar$21201$1VmeqK
     (case-lambda ((g$x$21033$1VmeqK) (cdr (car g$x$21033$1VmeqK)))))
   (g$cddr$20865$1VmeqK
     g$cddr$21202$1VmeqK
     (case-lambda ((g$x$21034$1VmeqK) (cdr (cdr g$x$21034$1VmeqK)))))
   (g$caaar$20866$1VmeqK
     g$caaar$21203$1VmeqK
     (case-lambda
       ((g$x$21035$1VmeqK)
        (g$caar$20862$1VmeqK (car g$x$21035$1VmeqK)))))
   (g$caadr$20867$1VmeqK
     g$caadr$21204$1VmeqK
     (case-lambda
       ((g$x$21036$1VmeqK)
        (g$caar$20862$1VmeqK (cdr g$x$21036$1VmeqK)))))
   (g$cadar$20868$1VmeqK
     g$cadar$21205$1VmeqK
     (case-lambda
       ((g$x$21037$1VmeqK)
        (g$cadr$20863$1VmeqK (car g$x$21037$1VmeqK)))))
   (g$caddr$20869$1VmeqK
     g$caddr$21206$1VmeqK
     (case-lambda
       ((g$x$21038$1VmeqK)
        (g$cadr$20863$1VmeqK (cdr g$x$21038$1VmeqK)))))
   (g$cdaar$20870$1VmeqK
     g$cdaar$21207$1VmeqK
     (case-lambda
       ((g$x$21039$1VmeqK)
        (g$cdar$20864$1VmeqK (car g$x$21039$1VmeqK)))))
   (g$cdadr$20871$1VmeqK
     g$cdadr$21208$1VmeqK
     (case-lambda
       ((g$x$21040$1VmeqK)
        (g$cdar$20864$1VmeqK (cdr g$x$21040$1VmeqK)))))
   (g$cddar$20872$1VmeqK
     g$cddar$21209$1VmeqK
     (case-lambda
       ((g$x$21041$1VmeqK)
        (g$cddr$20865$1VmeqK (car g$x$21041$1VmeqK)))))
   (g$cdddr$20873$1VmeqK
     g$cdddr$21210$1VmeqK
     (case-lambda
       ((g$x$21042$1VmeqK)
        (g$cddr$20865$1VmeqK (cdr g$x$21042$1VmeqK)))))
   (g$caaaar$20874$1VmeqK
     g$caaaar$21211$1VmeqK
     (case-lambda
       ((g$x$21043$1VmeqK)
        (g$caaar$20866$1VmeqK (car g$x$21043$1VmeqK)))))
   (g$caaadr$20875$1VmeqK
     g$caaadr$21212$1VmeqK
     (case-lambda
       ((g$x$21044$1VmeqK)
        (g$caaar$20866$1VmeqK (cdr g$x$21044$1VmeqK)))))
   (g$caadar$20876$1VmeqK
     g$caadar$21213$1VmeqK
     (case-lambda
       ((g$x$21045$1VmeqK)
        (g$caadr$20867$1VmeqK (car g$x$21045$1VmeqK)))))
   (g$caaddr$20877$1VmeqK
     g$caaddr$21214$1VmeqK
     (case-lambda
       ((g$x$21046$1VmeqK)
        (g$caadr$20867$1VmeqK (cdr g$x$21046$1VmeqK)))))
   (g$cadaar$20878$1VmeqK
     g$cadaar$21215$1VmeqK
     (case-lambda
       ((g$x$21047$1VmeqK)
        (g$cadar$20868$1VmeqK (car g$x$21047$1VmeqK)))))
   (g$cadadr$20879$1VmeqK
     g$cadadr$21216$1VmeqK
     (case-lambda
       ((g$x$21048$1VmeqK)
        (g$cadar$20868$1VmeqK (cdr g$x$21048$1VmeqK)))))
   (g$caddar$20880$1VmeqK
     g$caddar$21217$1VmeqK
     (case-lambda
       ((g$x$21049$1VmeqK)
        (g$caddr$20869$1VmeqK (car g$x$21049$1VmeqK)))))
   (g$cadddr$20881$1VmeqK
     g$cadddr$21218$1VmeqK
     (case-lambda
       ((g$x$21050$1VmeqK)
        (g$caddr$20869$1VmeqK (cdr g$x$21050$1VmeqK)))))
   (g$cdaaar$20882$1VmeqK
     g$cdaaar$21219$1VmeqK
     (case-lambda
       ((g$x$21051$1VmeqK)
        (g$cdaar$20870$1VmeqK (car g$x$21051$1VmeqK)))))
   (g$cdaadr$20883$1VmeqK
     g$cdaadr$21220$1VmeqK
     (case-lambda
       ((g$x$21052$1VmeqK)
        (g$cdaar$20870$1VmeqK (cdr g$x$21052$1VmeqK)))))
   (g$cdadar$20884$1VmeqK
     g$cdadar$21221$1VmeqK
     (case-lambda
       ((g$x$21053$1VmeqK)
        (g$cdadr$20871$1VmeqK (car g$x$21053$1VmeqK)))))
   (g$cdaddr$20885$1VmeqK
     g$cdaddr$21222$1VmeqK
     (case-lambda
       ((g$x$21054$1VmeqK)
        (g$cdadr$20871$1VmeqK (cdr g$x$21054$1VmeqK)))))
   (g$cddaar$20886$1VmeqK
     g$cddaar$21223$1VmeqK
     (case-lambda
       ((g$x$21055$1VmeqK)
        (g$cddar$20872$1VmeqK (car g$x$21055$1VmeqK)))))
   (g$cddadr$20887$1VmeqK
     g$cddadr$21224$1VmeqK
     (case-lambda
       ((g$x$21056$1VmeqK)
        (g$cddar$20872$1VmeqK (cdr g$x$21056$1VmeqK)))))
   (g$cdddar$20888$1VmeqK
     g$cdddar$21225$1VmeqK
     (case-lambda
       ((g$x$21057$1VmeqK)
        (g$cdddr$20873$1VmeqK (car g$x$21057$1VmeqK)))))
   (g$cddddr$20889$1VmeqK
     g$cddddr$21226$1VmeqK
     (case-lambda
       ((g$x$21058$1VmeqK)
        (g$cdddr$20873$1VmeqK (cdr g$x$21058$1VmeqK)))))
   (g$even?$20890$1VmeqK
     g$even?$21227$1VmeqK
     (case-lambda
       ((g$n$21059$1VmeqK)
        (begin
          (if (not (g$integer-valued?$22200$1VmeqK g$n$21059$1VmeqK))
            (assertion-violation
              'even?
              '"not a integer"
              g$n$21059$1VmeqK)
            (void))
          (g$=$22210$1VmeqK
            '0
            (g$mod$20851$1VmeqK g$n$21059$1VmeqK '2))))))
   (g$odd?$20891$1VmeqK
     g$odd?$21228$1VmeqK
     (case-lambda
       ((g$n$21060$1VmeqK)
        (begin
          (if (not (g$integer-valued?$22200$1VmeqK g$n$21060$1VmeqK))
            (assertion-violation
              'odd?
              '"not a integer"
              g$n$21060$1VmeqK)
            (void))
          (g$=$22210$1VmeqK
            '1
            (g$mod$20851$1VmeqK g$n$21060$1VmeqK '2))))))
   (g$max$20892$1VmeqK
     g$max$21229$1VmeqK
     (case-lambda
       ((g$a$21061$1VmeqK . g$rest$21062$1VmeqK)
        (begin
          (if (not (g$real-valued?$22198$1VmeqK g$a$21061$1VmeqK))
            (assertion-violation 'max '"not a real" g$a$21061$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            (case-lambda
              ((g$a$21063$1VmeqK g$b$21064$1VmeqK)
               ((case-lambda
                  ((g$r$21065$1VmeqK)
                   (if ((case-lambda
                          ((g$t$21066$1VmeqK)
                           (if g$t$21066$1VmeqK
                             g$t$21066$1VmeqK
                             (begin
                               '#f
                               (g$inexact?$22193$1VmeqK
                                 g$b$21064$1VmeqK)))))
                        (g$inexact?$22193$1VmeqK g$a$21063$1VmeqK))
                     (g$inexact$22204$1VmeqK g$r$21065$1VmeqK)
                     g$r$21065$1VmeqK)))
                (if (g$<$22211$1VmeqK g$a$21063$1VmeqK g$b$21064$1VmeqK)
                  g$b$21064$1VmeqK
                  g$a$21063$1VmeqK))))
            g$a$21061$1VmeqK
            g$rest$21062$1VmeqK)))))
   (g$min$20893$1VmeqK
     g$min$21230$1VmeqK
     (case-lambda
       ((g$a$21067$1VmeqK . g$rest$21068$1VmeqK)
        (begin
          (if (not (g$real-valued?$22198$1VmeqK g$a$21067$1VmeqK))
            (assertion-violation 'min '"not a real" g$a$21067$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            (case-lambda
              ((g$a$21069$1VmeqK g$b$21070$1VmeqK)
               ((case-lambda
                  ((g$r$21071$1VmeqK)
                   (if ((case-lambda
                          ((g$t$21072$1VmeqK)
                           (if g$t$21072$1VmeqK
                             g$t$21072$1VmeqK
                             (begin
                               '#f
                               (g$inexact?$22193$1VmeqK
                                 g$b$21070$1VmeqK)))))
                        (g$inexact?$22193$1VmeqK g$a$21069$1VmeqK))
                     (g$inexact$22204$1VmeqK g$r$21071$1VmeqK)
                     g$r$21071$1VmeqK)))
                (if (g$>$22213$1VmeqK g$a$21069$1VmeqK g$b$21070$1VmeqK)
                  g$b$21070$1VmeqK
                  g$a$21069$1VmeqK))))
            g$a$21067$1VmeqK
            g$rest$21068$1VmeqK)))))
   (g$gcd$20894$1VmeqK
     g$gcd$21231$1VmeqK
     (case-lambda
       (g$nums$21073$1VmeqK
        ((case-lambda
           ((g$t$21074$1VmeqK)
            (if (eqv? g$t$21074$1VmeqK '0)
              '0
              (if (eqv? g$t$21074$1VmeqK '1)
                ((case-lambda
                   ((g$n$21075$1VmeqK)
                    (begin
                      (if (not (g$integer-valued?$22200$1VmeqK
                                 g$n$21075$1VmeqK))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$21075$1VmeqK)
                        (void))
                      (g$abs$22236$1VmeqK g$n$21075$1VmeqK))))
                 (car g$nums$21073$1VmeqK))
                (if (eqv? g$t$21074$1VmeqK '2)
                  ((case-lambda
                     ((g$a$21076$1VmeqK g$b$21077$1VmeqK)
                      (begin
                        (if (not (g$integer-valued?$22200$1VmeqK
                                   g$a$21076$1VmeqK))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$21076$1VmeqK)
                          (void))
                        (if (not (g$integer-valued?$22200$1VmeqK
                                   g$b$21077$1VmeqK))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$21077$1VmeqK)
                          (void))
                        (if (g$zero?$22201$1VmeqK g$b$21077$1VmeqK)
                          (g$abs$22236$1VmeqK g$a$21076$1VmeqK)
                          (g$abs$22236$1VmeqK
                            (g$gcd$20894$1VmeqK
                              g$b$21077$1VmeqK
                              (g$mod$20851$1VmeqK
                                g$a$21076$1VmeqK
                                g$b$21077$1VmeqK)))))))
                   (car g$nums$21073$1VmeqK)
                   (g$cadr$20863$1VmeqK g$nums$21073$1VmeqK))
                  (begin
                    '#f
                    (g$fold-left$20352$1VmeqK
                      g$gcd$20894$1VmeqK
                      (g$abs$22236$1VmeqK (car g$nums$21073$1VmeqK))
                      (cdr g$nums$21073$1VmeqK))))))))
         (length g$nums$21073$1VmeqK)))))
   (g$lcm$20895$1VmeqK
     g$lcm$21232$1VmeqK
     (case-lambda
       (g$nums$21078$1VmeqK
        ((case-lambda
           ((g$t$21079$1VmeqK)
            (if (eqv? g$t$21079$1VmeqK '0)
              '1
              (if (eqv? g$t$21079$1VmeqK '1)
                ((case-lambda
                   ((g$n$21080$1VmeqK)
                    (begin
                      (if (not (g$integer-valued?$22200$1VmeqK
                                 g$n$21080$1VmeqK))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$21080$1VmeqK)
                        (void))
                      (g$abs$22236$1VmeqK g$n$21080$1VmeqK))))
                 (car g$nums$21078$1VmeqK))
                (if (eqv? g$t$21079$1VmeqK '2)
                  ((case-lambda
                     ((g$a$21081$1VmeqK g$b$21082$1VmeqK)
                      (begin
                        (if (not (g$integer-valued?$22200$1VmeqK
                                   g$a$21081$1VmeqK))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$21081$1VmeqK)
                          (void))
                        (if (not (g$integer-valued?$22200$1VmeqK
                                   g$b$21082$1VmeqK))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$21082$1VmeqK)
                          (void))
                        (if ((case-lambda
                               ((g$t$21083$1VmeqK)
                                (if g$t$21083$1VmeqK
                                  g$t$21083$1VmeqK
                                  (begin
                                    '#f
                                    (g$zero?$22201$1VmeqK
                                      g$b$21082$1VmeqK)))))
                             (g$zero?$22201$1VmeqK g$a$21081$1VmeqK))
                          '0
                          (g$abs$22236$1VmeqK
                            (* (/ g$a$21081$1VmeqK
                                  (g$gcd$20894$1VmeqK
                                    g$a$21081$1VmeqK
                                    g$b$21082$1VmeqK))
                               g$b$21082$1VmeqK))))))
                   (car g$nums$21078$1VmeqK)
                   (g$cadr$20863$1VmeqK g$nums$21078$1VmeqK))
                  (begin
                    '#f
                    (g$fold-left$20352$1VmeqK
                      g$lcm$20895$1VmeqK
                      (g$abs$22236$1VmeqK (car g$nums$21078$1VmeqK))
                      (cdr g$nums$21078$1VmeqK))))))))
         (length g$nums$21078$1VmeqK)))))
   (g$string=?$20936$1VmeqK
     g$string=?$21233$1VmeqK
     (case-lambda
       ((g$a$21084$1VmeqK g$b$21085$1VmeqK . g$rest$21086$1VmeqK)
        (begin
          (if (not (string? g$a$21084$1VmeqK))
            (assertion-violation
              'string=?
              '"not a string"
              g$a$21084$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21087$1VmeqK)
               (begin
                 (if (not (string? g$x$21087$1VmeqK))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$21087$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21088$1VmeqK)
                     (begin
                       (set! g$a$21084$1VmeqK g$x$21087$1VmeqK)
                       g$r$21088$1VmeqK)))
                  (g$fx=?$25493$1VmeqK
                    (string-compare g$a$21084$1VmeqK g$x$21087$1VmeqK)
                    '0)))))
            (cons g$b$21085$1VmeqK g$rest$21086$1VmeqK))))))
   (g$string<?$20937$1VmeqK
     g$string<?$21234$1VmeqK
     (case-lambda
       ((g$a$21089$1VmeqK g$b$21090$1VmeqK . g$rest$21091$1VmeqK)
        (begin
          (if (not (string? g$a$21089$1VmeqK))
            (assertion-violation
              'string<?
              '"not a string"
              g$a$21089$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21092$1VmeqK)
               (begin
                 (if (not (string? g$x$21092$1VmeqK))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$21092$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21093$1VmeqK)
                     (begin
                       (set! g$a$21089$1VmeqK g$x$21092$1VmeqK)
                       g$r$21093$1VmeqK)))
                  (g$fx<?$25494$1VmeqK
                    (string-compare g$a$21089$1VmeqK g$x$21092$1VmeqK)
                    '0)))))
            (cons g$b$21090$1VmeqK g$rest$21091$1VmeqK))))))
   (g$string>?$20938$1VmeqK
     g$string>?$21235$1VmeqK
     (case-lambda
       ((g$a$21094$1VmeqK g$b$21095$1VmeqK . g$rest$21096$1VmeqK)
        (begin
          (if (not (string? g$a$21094$1VmeqK))
            (assertion-violation
              'string>?
              '"not a string"
              g$a$21094$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21097$1VmeqK)
               (begin
                 (if (not (string? g$x$21097$1VmeqK))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$21097$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21098$1VmeqK)
                     (begin
                       (set! g$a$21094$1VmeqK g$x$21097$1VmeqK)
                       g$r$21098$1VmeqK)))
                  (g$fx>?$25496$1VmeqK
                    (string-compare g$a$21094$1VmeqK g$x$21097$1VmeqK)
                    '0)))))
            (cons g$b$21095$1VmeqK g$rest$21096$1VmeqK))))))
   (g$string<=?$20939$1VmeqK
     g$string<=?$21236$1VmeqK
     (case-lambda
       ((g$a$21099$1VmeqK g$b$21100$1VmeqK . g$rest$21101$1VmeqK)
        (begin
          (if (not (string? g$a$21099$1VmeqK))
            (assertion-violation
              'string<=?
              '"not a string"
              g$a$21099$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21102$1VmeqK)
               (begin
                 (if (not (string? g$x$21102$1VmeqK))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$21102$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21103$1VmeqK)
                     (begin
                       (set! g$a$21099$1VmeqK g$x$21102$1VmeqK)
                       g$r$21103$1VmeqK)))
                  (g$fx<=?$25495$1VmeqK
                    (string-compare g$a$21099$1VmeqK g$x$21102$1VmeqK)
                    '0)))))
            (cons g$b$21100$1VmeqK g$rest$21101$1VmeqK))))))
   (g$string>=?$20940$1VmeqK
     g$string>=?$21237$1VmeqK
     (case-lambda
       ((g$a$21104$1VmeqK g$b$21105$1VmeqK . g$rest$21106$1VmeqK)
        (begin
          (if (not (string? g$a$21104$1VmeqK))
            (assertion-violation
              'string>=?
              '"not a string"
              g$a$21104$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21107$1VmeqK)
               (begin
                 (if (not (string? g$x$21107$1VmeqK))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$21107$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21108$1VmeqK)
                     (begin
                       (set! g$a$21104$1VmeqK g$x$21107$1VmeqK)
                       g$r$21108$1VmeqK)))
                  (g$fx>=?$25497$1VmeqK
                    (string-compare g$a$21104$1VmeqK g$x$21107$1VmeqK)
                    '0)))))
            (cons g$b$21105$1VmeqK g$rest$21106$1VmeqK))))))
   (g$symbol=?$20941$1VmeqK
     g$symbol=?$21238$1VmeqK
     (case-lambda
       ((g$a$21109$1VmeqK g$b$21110$1VmeqK . g$rest$21111$1VmeqK)
        (begin
          (if (not (g$symbol?$20844$1VmeqK g$a$21109$1VmeqK))
            (assertion-violation
              'symbol=?
              '"not a symbol"
              g$a$21109$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21112$1VmeqK)
               (begin
                 (if (not (g$symbol?$20844$1VmeqK g$x$21112$1VmeqK))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$21112$1VmeqK)
                   (void))
                 (eq? g$a$21109$1VmeqK g$x$21112$1VmeqK))))
            (cons g$b$21110$1VmeqK g$rest$21111$1VmeqK))))))
   (g$boolean=?$20942$1VmeqK
     g$boolean=?$21239$1VmeqK
     (case-lambda
       ((g$a$21113$1VmeqK g$b$21114$1VmeqK . g$rest$21115$1VmeqK)
        (begin
          (if (not (g$boolean?$20845$1VmeqK g$a$21113$1VmeqK))
            (assertion-violation
              'boolean=?
              '"not a boolean"
              g$a$21113$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21116$1VmeqK)
               (begin
                 (if (not (g$boolean?$20845$1VmeqK g$x$21116$1VmeqK))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$21116$1VmeqK)
                   (void))
                 (eq? g$a$21113$1VmeqK g$x$21116$1VmeqK))))
            (cons g$b$21114$1VmeqK g$rest$21115$1VmeqK))))))
   (g$char=?$20983$1VmeqK
     g$char=?$21240$1VmeqK
     (case-lambda
       ((g$a$21117$1VmeqK g$b$21118$1VmeqK . g$rest$21119$1VmeqK)
        (begin
          (if (not (g$char?$20841$1VmeqK g$a$21117$1VmeqK))
            (assertion-violation 'char=? '"not a char" g$a$21117$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21120$1VmeqK)
               (begin
                 (if (not (g$char?$20841$1VmeqK g$x$21120$1VmeqK))
                   (assertion-violation
                     'char=?
                     '"not a char"
                     g$x$21120$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21121$1VmeqK)
                     (begin
                       (set! g$a$21117$1VmeqK g$x$21120$1VmeqK)
                       g$r$21121$1VmeqK)))
                  (g$fx=?$25493$1VmeqK
                    (char->integer g$a$21117$1VmeqK)
                    (char->integer g$x$21120$1VmeqK))))))
            (cons g$b$21118$1VmeqK g$rest$21119$1VmeqK))))))
   (g$char<?$20984$1VmeqK
     g$char<?$21241$1VmeqK
     (case-lambda
       ((g$a$21122$1VmeqK g$b$21123$1VmeqK . g$rest$21124$1VmeqK)
        (begin
          (if (not (g$char?$20841$1VmeqK g$a$21122$1VmeqK))
            (assertion-violation 'char<? '"not a char" g$a$21122$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21125$1VmeqK)
               (begin
                 (if (not (g$char?$20841$1VmeqK g$x$21125$1VmeqK))
                   (assertion-violation
                     'char<?
                     '"not a char"
                     g$x$21125$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21126$1VmeqK)
                     (begin
                       (set! g$a$21122$1VmeqK g$x$21125$1VmeqK)
                       g$r$21126$1VmeqK)))
                  (g$fx<?$25494$1VmeqK
                    (char->integer g$a$21122$1VmeqK)
                    (char->integer g$x$21125$1VmeqK))))))
            (cons g$b$21123$1VmeqK g$rest$21124$1VmeqK))))))
   (g$char>?$20985$1VmeqK
     g$char>?$21242$1VmeqK
     (case-lambda
       ((g$a$21127$1VmeqK g$b$21128$1VmeqK . g$rest$21129$1VmeqK)
        (begin
          (if (not (g$char?$20841$1VmeqK g$a$21127$1VmeqK))
            (assertion-violation 'char>? '"not a char" g$a$21127$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21130$1VmeqK)
               (begin
                 (if (not (g$char?$20841$1VmeqK g$x$21130$1VmeqK))
                   (assertion-violation
                     'char>?
                     '"not a char"
                     g$x$21130$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21131$1VmeqK)
                     (begin
                       (set! g$a$21127$1VmeqK g$x$21130$1VmeqK)
                       g$r$21131$1VmeqK)))
                  (g$fx>?$25496$1VmeqK
                    (char->integer g$a$21127$1VmeqK)
                    (char->integer g$x$21130$1VmeqK))))))
            (cons g$b$21128$1VmeqK g$rest$21129$1VmeqK))))))
   (g$char<=?$20986$1VmeqK
     g$char<=?$21243$1VmeqK
     (case-lambda
       ((g$a$21132$1VmeqK g$b$21133$1VmeqK . g$rest$21134$1VmeqK)
        (begin
          (if (not (g$char?$20841$1VmeqK g$a$21132$1VmeqK))
            (assertion-violation
              'char<=?
              '"not a char"
              g$a$21132$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21135$1VmeqK)
               (begin
                 (if (not (g$char?$20841$1VmeqK g$x$21135$1VmeqK))
                   (assertion-violation
                     'char<=?
                     '"not a char"
                     g$x$21135$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21136$1VmeqK)
                     (begin
                       (set! g$a$21132$1VmeqK g$x$21135$1VmeqK)
                       g$r$21136$1VmeqK)))
                  (g$fx<=?$25495$1VmeqK
                    (char->integer g$a$21132$1VmeqK)
                    (char->integer g$x$21135$1VmeqK))))))
            (cons g$b$21133$1VmeqK g$rest$21134$1VmeqK))))))
   (g$char>=?$20987$1VmeqK
     g$char>=?$21244$1VmeqK
     (case-lambda
       ((g$a$21137$1VmeqK g$b$21138$1VmeqK . g$rest$21139$1VmeqK)
        (begin
          (if (not (g$char?$20841$1VmeqK g$a$21137$1VmeqK))
            (assertion-violation
              'char>=?
              '"not a char"
              g$a$21137$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$21140$1VmeqK)
               (begin
                 (if (not (g$char?$20841$1VmeqK g$x$21140$1VmeqK))
                   (assertion-violation
                     'char>=?
                     '"not a char"
                     g$x$21140$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$21141$1VmeqK)
                     (begin
                       (set! g$a$21137$1VmeqK g$x$21140$1VmeqK)
                       g$r$21141$1VmeqK)))
                  (g$fx>=?$25497$1VmeqK
                    (char->integer g$a$21137$1VmeqK)
                    (char->integer g$x$21140$1VmeqK))))))
            (cons g$b$21138$1VmeqK g$rest$21139$1VmeqK))))))
   (g$rationalize$20988$1VmeqK
     g$rationalize$21245$1VmeqK
     (case-lambda
       ((g$x$21142$1VmeqK g$e$21143$1VmeqK)
        (if (if (g$infinite?$22191$1VmeqK g$x$21142$1VmeqK)
              (begin '#f (g$infinite?$22191$1VmeqK g$e$21143$1VmeqK))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$21144$1VmeqK)
              (if (if (g$exact?$22192$1VmeqK g$x$21142$1VmeqK)
                    (begin '#f (g$exact?$22192$1VmeqK g$e$21143$1VmeqK))
                    '#f)
                g$r$21144$1VmeqK
                (g$inexact$22204$1VmeqK g$r$21144$1VmeqK))))
           (apply
             /
             (g$find-ratio$20989$1VmeqK
               g$x$21142$1VmeqK
               g$e$21143$1VmeqK)))))))
   (g$find-ratio$20989$1VmeqK
     g$find-ratio$21246$1VmeqK
     (case-lambda
       ((g$x$21145$1VmeqK g$e$21146$1VmeqK)
        (g$find-ratio-between$20990$1VmeqK
          (- g$x$21145$1VmeqK g$e$21146$1VmeqK)
          (+ g$x$21145$1VmeqK g$e$21146$1VmeqK)))))
   (g$find-ratio-between$20990$1VmeqK
     g$find-ratio-between$21247$1VmeqK
     (case-lambda
       ((g$x$21147$1VmeqK g$y$21148$1VmeqK)
        (letrec* ((g$sr$21149$1VmeqK
                    (case-lambda
                      ((g$x$21151$1VmeqK g$y$21152$1VmeqK)
                       ((case-lambda
                          ((g$fx$21153$1VmeqK g$fy$21154$1VmeqK)
                           (if (g$>=$22214$1VmeqK
                                 g$fx$21153$1VmeqK
                                 g$x$21151$1VmeqK)
                             (list g$fx$21153$1VmeqK '1)
                             (if (g$=$22210$1VmeqK
                                   g$fx$21153$1VmeqK
                                   g$fy$21154$1VmeqK)
                               ((case-lambda
                                  ((g$rat$21155$1VmeqK)
                                   (list
                                     (+ (g$cadr$20863$1VmeqK
                                          g$rat$21155$1VmeqK)
                                        (* g$fx$21153$1VmeqK
                                           (car g$rat$21155$1VmeqK)))
                                     (car g$rat$21155$1VmeqK))))
                                (g$sr$21149$1VmeqK
                                  (/ (- g$y$21152$1VmeqK
                                        g$fy$21154$1VmeqK))
                                  (/ (- g$x$21151$1VmeqK
                                        g$fx$21153$1VmeqK))))
                               (begin
                                 '#f
                                 (list (+ '1 g$fx$21153$1VmeqK) '1))))))
                        (g$exact$22205$1VmeqK
                          (g$floor$22237$1VmeqK g$x$21151$1VmeqK))
                        (g$exact$22205$1VmeqK
                          (g$floor$22237$1VmeqK g$y$21152$1VmeqK)))))))
          (if (g$<$22211$1VmeqK g$y$21148$1VmeqK g$x$21147$1VmeqK)
            (g$find-ratio-between$20990$1VmeqK
              g$y$21148$1VmeqK
              g$x$21147$1VmeqK)
            (if (g$>=$22214$1VmeqK g$x$21147$1VmeqK g$y$21148$1VmeqK)
              (list g$x$21147$1VmeqK '1)
              (if (g$positive?$22202$1VmeqK g$x$21147$1VmeqK)
                (g$sr$21149$1VmeqK g$x$21147$1VmeqK g$y$21148$1VmeqK)
                (if (g$negative?$22203$1VmeqK g$y$21148$1VmeqK)
                  ((case-lambda
                     ((g$rat$21150$1VmeqK)
                      (list
                        (- (car g$rat$21150$1VmeqK))
                        (g$cadr$20863$1VmeqK g$rat$21150$1VmeqK))))
                   (g$sr$21149$1VmeqK
                     (- g$y$21148$1VmeqK)
                     (- g$x$21147$1VmeqK)))
                  (begin '#f '(0 1))))))))))
   (g$vector-map$20991$1VmeqK
     g$vector-map$21248$1VmeqK
     (case-lambda
       ((g$p$21156$1VmeqK g$vec1$21157$1VmeqK . g$vecs$21158$1VmeqK)
        ((case-lambda
           ((g$len$21159$1VmeqK)
            ((case-lambda
               ((g$res$21160$1VmeqK)
                (letrec ((g$loop$21161$1VmeqK
                           (case-lambda
                             ((g$i$21162$1VmeqK)
                              (if (g$fx=?$25493$1VmeqK
                                    g$i$21162$1VmeqK
                                    g$len$21159$1VmeqK)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$21160$1VmeqK)
                                (begin
                                  (g$vector-set!$20858$1VmeqK
                                    g$res$21160$1VmeqK
                                    g$i$21162$1VmeqK
                                    (if (null? g$vecs$21158$1VmeqK)
                                      (g$p$21156$1VmeqK
                                        (g$vector-ref$20857$1VmeqK
                                          g$vec1$21157$1VmeqK
                                          g$i$21162$1VmeqK))
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (apply
                                             values
                                             (g$map$20349$1VmeqK
                                               (case-lambda
                                                 ((g$x$21163$1VmeqK)
                                                  (g$vector-ref$20857$1VmeqK
                                                    g$x$21163$1VmeqK
                                                    g$i$21162$1VmeqK)))
                                               (cons
                                                 g$vec1$21157$1VmeqK
                                                 g$vecs$21158$1VmeqK)))))
                                        g$p$21156$1VmeqK)))
                                  (g$loop$21161$1VmeqK
                                    (g$fx+$25480$1VmeqK
                                      g$i$21162$1VmeqK
                                      '1))))))))
                  (g$loop$21161$1VmeqK '0))))
             (make-vector g$len$21159$1VmeqK '()))))
         (vector-length g$vec1$21157$1VmeqK)))))
   (g$vector-for-each$20992$1VmeqK
     g$vector-for-each$21249$1VmeqK
     (case-lambda
       ((g$p$21164$1VmeqK g$vec1$21165$1VmeqK . g$vecs$21166$1VmeqK)
        ((case-lambda
           ((g$len$21167$1VmeqK)
            (letrec ((g$loop$21168$1VmeqK
                       (case-lambda
                         ((g$i$21169$1VmeqK)
                          (if (g$fx=?$25493$1VmeqK
                                g$i$21169$1VmeqK
                                g$len$21167$1VmeqK)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$21166$1VmeqK)
                                (g$p$21164$1VmeqK
                                  (g$vector-ref$20857$1VmeqK
                                    g$vec1$21165$1VmeqK
                                    g$i$21169$1VmeqK))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$20349$1VmeqK
                                         (case-lambda
                                           ((g$x$21170$1VmeqK)
                                            (g$vector-ref$20857$1VmeqK
                                              g$x$21170$1VmeqK
                                              g$i$21169$1VmeqK)))
                                         (cons
                                           g$vec1$21165$1VmeqK
                                           g$vecs$21166$1VmeqK)))))
                                  g$p$21164$1VmeqK))
                              (g$loop$21168$1VmeqK
                                (g$fx+$25480$1VmeqK
                                  g$i$21169$1VmeqK
                                  '1))))))))
              (g$loop$21168$1VmeqK '0))))
         (vector-length g$vec1$21165$1VmeqK)))))
   (g$string-for-each$20993$1VmeqK
     g$string-for-each$21250$1VmeqK
     (case-lambda
       ((g$p$21171$1VmeqK g$str1$21172$1VmeqK . g$strs$21173$1VmeqK)
        ((case-lambda
           ((g$len$21174$1VmeqK)
            (letrec ((g$loop$21175$1VmeqK
                       (case-lambda
                         ((g$i$21176$1VmeqK)
                          (if (g$fx=?$25493$1VmeqK
                                g$i$21176$1VmeqK
                                g$len$21174$1VmeqK)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$21173$1VmeqK)
                                (g$p$21171$1VmeqK
                                  (string-ref
                                    g$str1$21172$1VmeqK
                                    g$i$21176$1VmeqK))
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (apply
                                       values
                                       (g$map$20349$1VmeqK
                                         (case-lambda
                                           ((g$x$21177$1VmeqK)
                                            (string-ref
                                              g$x$21177$1VmeqK
                                              g$i$21176$1VmeqK)))
                                         (cons
                                           g$str1$21172$1VmeqK
                                           g$strs$21173$1VmeqK)))))
                                  g$p$21171$1VmeqK))
                              (g$loop$21175$1VmeqK
                                (g$fx+$25480$1VmeqK
                                  g$i$21176$1VmeqK
                                  '1))))))))
              (g$loop$21175$1VmeqK '0))))
         (string-length g$str1$21172$1VmeqK))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$21252$1VmeqK
     g$using$21294$1VmeqK
     (clr-using-internal 'system))
   (g$using$21254$1VmeqK
     g$using$21295$1VmeqK
     (clr-using-internal 'system.collections))
   (g$hashtable?$21255$1VmeqK
     g$hashtable?$21296$1VmeqK
     (case-lambda
       ((g$obj$21268$1VmeqK)
        (clr-is-internal 'Hashtable g$obj$21268$1VmeqK))))
   (g$make-eq-hashtable$21256$1VmeqK
     g$make-eq-hashtable$21297$1VmeqK
     (case-lambda
       (() (g$make-eq-hashtable$21256$1VmeqK '32))
       ((g$k$21269$1VmeqK)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$21269$1VmeqK)))))
   (g$make-eqv-hashtable$21257$1VmeqK
     g$make-eqv-hashtable$21298$1VmeqK
     (case-lambda
       (() (g$make-eqv-hashtable$21257$1VmeqK '32))
       ((g$k$21270$1VmeqK)
        (make-hashtable eqv-hash eqv? g$k$21270$1VmeqK))))
   (g$hashtable-size$21258$1VmeqK
     g$hashtable-size$21299$1VmeqK
     (case-lambda
       ((g$ht$21271$1VmeqK)
        (clr-call-internal 'hashtable 'get_count g$ht$21271$1VmeqK))))
   (g$hashtable-ref$21259$1VmeqK
     g$hashtable-ref$21300$1VmeqK
     (case-lambda
       ((g$ht$21272$1VmeqK g$key$21273$1VmeqK g$default$21274$1VmeqK)
        ((case-lambda
           ((g$r$21275$1VmeqK)
            (if ((case-lambda
                   ((g$t$21276$1VmeqK)
                    (if g$t$21276$1VmeqK
                      g$t$21276$1VmeqK
                      (begin
                        '#f
                        (g$hashtable-contains?$21262$1VmeqK
                          g$ht$21272$1VmeqK
                          g$key$21273$1VmeqK)))))
                 (not (null? g$r$21275$1VmeqK)))
              g$r$21275$1VmeqK
              g$default$21274$1VmeqK)))
         (clr-call-internal
           'hashtable
           'get_item
           g$ht$21272$1VmeqK
           g$key$21273$1VmeqK)))))
   (g$hashtable-set!$21260$1VmeqK
     g$hashtable-set!$21301$1VmeqK
     (case-lambda
       ((g$ht$21277$1VmeqK g$key$21278$1VmeqK g$obj$21279$1VmeqK)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$21277$1VmeqK
          g$key$21278$1VmeqK
          g$obj$21279$1VmeqK))))
   (g$hashtable-delete!$21261$1VmeqK
     g$hashtable-delete!$21302$1VmeqK
     (case-lambda
       ((g$ht$21280$1VmeqK g$key$21281$1VmeqK)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$21280$1VmeqK
          g$key$21281$1VmeqK))))
   (g$hashtable-contains?$21262$1VmeqK
     g$hashtable-contains?$21303$1VmeqK
     (case-lambda
       ((g$ht$21282$1VmeqK g$key$21283$1VmeqK)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$21282$1VmeqK
          g$key$21283$1VmeqK))))
   (g$hashtable-update!$21263$1VmeqK
     g$hashtable-update!$21304$1VmeqK
     (case-lambda
       ((g$ht$21284$1VmeqK
          g$key$21285$1VmeqK
          g$proc$21286$1VmeqK
          g$default$21287$1VmeqK)
        (g$hashtable-set!$21260$1VmeqK
          g$ht$21284$1VmeqK
          g$key$21285$1VmeqK
          (g$proc$21286$1VmeqK
            (g$hashtable-ref$21259$1VmeqK
              g$ht$21284$1VmeqK
              g$key$21285$1VmeqK
              g$default$21287$1VmeqK))))))
   (g$hashtable-clear!$21264$1VmeqK
     g$hashtable-clear!$21305$1VmeqK
     (case-lambda
       ((g$ht$21288$1VmeqK)
        (g$hashtable-clear!$21264$1VmeqK g$ht$21288$1VmeqK '32))
       ((g$ht$21289$1VmeqK g$k$21290$1VmeqK)
        (clr-call-internal 'hashtable 'clear g$ht$21289$1VmeqK))))
   (g$string-hash$21265$1VmeqK
     g$string-hash$21306$1VmeqK
     (case-lambda
       ((g$str$21291$1VmeqK)
        (begin
          (if (not (string? g$str$21291$1VmeqK))
            (assertion-violation
              'string-hash
              '"not a string"
              g$str$21291$1VmeqK)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal 'StringComparer 'get_Ordinal '())
            (clr-call-internal
              'Object
              'ToString
              g$str$21291$1VmeqK))))))
   (g$string-ci-hash$21266$1VmeqK
     g$string-ci-hash$21307$1VmeqK
     (case-lambda
       ((g$str$21292$1VmeqK)
        (begin
          (if (not (string? g$str$21292$1VmeqK))
            (assertion-violation
              'string-ci-hash
              '"not a string"
              g$str$21292$1VmeqK)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal
              'StringComparer
              'get_InvariantCultureIgnoreCase
              '())
            (clr-call-internal
              'Object
              'ToString
              g$str$21292$1VmeqK))))))
   (g$symbol-hash$21267$1VmeqK
     g$symbol-hash$21308$1VmeqK
     (case-lambda
       ((g$sym$21293$1VmeqK)
        (begin
          (if (not (g$symbol?$21181$1VmeqK g$sym$21293$1VmeqK))
            (assertion-violation
              'symbol-hash
              '"not a symbol"
              g$sym$21293$1VmeqK)
            (void))
          (clr-call-internal
            'Object
            'GetHashCode
            g$sym$21293$1VmeqK))))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$21310$1VmeqK
     g$using$21317$1VmeqK
     (clr-using-internal 'system.io))
   (g$file-exists?$21311$1VmeqK
     g$file-exists?$21318$1VmeqK
     (case-lambda
       ((g$fn$21314$1VmeqK)
        (clr-call-internal 'file 'exists '() g$fn$21314$1VmeqK))))
   (g$delete-file$21312$1VmeqK
     g$delete-file$21319$1VmeqK
     (case-lambda
       ((g$fn$21315$1VmeqK)
        (clr-call-internal 'file 'delete '() g$fn$21315$1VmeqK))))
   (g$get-directory-name$21313$1VmeqK
     g$get-directory-name$21320$1VmeqK
     (case-lambda
       ((g$path$21316$1VmeqK)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$21316$1VmeqK)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$21321$1VmeqK
     g$native-endianness$21633$1VmeqK
     (case-lambda (() 'little)))
   (g$utf8$21322$1VmeqK
     g$utf8$21634$1VmeqK
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$21323$1VmeqK
     g$utf16le$21635$1VmeqK
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$21324$1VmeqK
     g$utf16be$21636$1VmeqK
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$21325$1VmeqK
     g$utf32le$21637$1VmeqK
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$21326$1VmeqK
     g$utf32be$21638$1VmeqK
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$get-bytes$21327$1VmeqK
     g$get-bytes$21639$1VmeqK
     (case-lambda
       ((g$enc$21403$1VmeqK g$str$21404$1VmeqK)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$21403$1VmeqK
          g$str$21404$1VmeqK))))
   (g$get-string$21328$1VmeqK
     g$get-string$21640$1VmeqK
     (case-lambda
       ((g$enc$21405$1VmeqK g$bv$21406$1VmeqK)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$21405$1VmeqK
          g$bv$21406$1VmeqK))))
   (g$byte->sbyte$21329$1VmeqK
     g$byte->sbyte$21641$1VmeqK
     (case-lambda
       ((g$b$21407$1VmeqK)
        (clr-cast-internal
          'System.SByte
          (clr-cast-internal 'System.Byte g$b$21407$1VmeqK)))))
   (g$->byte$21330$1VmeqK
     g$->byte$21642$1VmeqK
     (case-lambda
       ((g$k$21408$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$k$21408$1VmeqK))
            (assertion-violation '#f '"not a fixnum" g$k$21408$1VmeqK)
            (void))
          (if ((case-lambda
                 ((g$t$21409$1VmeqK)
                  (if g$t$21409$1VmeqK
                    g$t$21409$1VmeqK
                    (begin
                      '#f
                      (g$fx>?$25496$1VmeqK g$k$21408$1VmeqK '255)))))
               (g$fx<?$25494$1VmeqK g$k$21408$1VmeqK '-128))
            (assertion-violation
              '#f
              '"too big or small for octect or byte"
              g$k$21408$1VmeqK)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$21408$1VmeqK))))))
   (g$residual-->fixnum$21346$1VmeqK
     g$residual-->fixnum$21643$1VmeqK
     (case-lambda
       ((g$b$21430$1VmeqK)
        (clr-cast-internal
          'System.Int32
          (clr-cast-internal 'System.Byte g$b$21430$1VmeqK)))))
   (g$make-bytevector$21347$1VmeqK
     g$make-bytevector$21644$1VmeqK
     (case-lambda
       ((g$k$21431$1VmeqK)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$21431$1VmeqK)))
       ((g$k$21432$1VmeqK g$fill$21433$1VmeqK)
        ((case-lambda
           ((g$bv$21434$1VmeqK)
            (begin
              (g$bytevector-fill!$21350$1VmeqK
                g$bv$21434$1VmeqK
                g$fill$21433$1VmeqK)
              g$bv$21434$1VmeqK)))
         (g$make-bytevector$21347$1VmeqK g$k$21432$1VmeqK)))))
   (g$bytevector-length$21348$1VmeqK
     g$bytevector-length$21645$1VmeqK
     (case-lambda
       ((g$bv$21435$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21435$1VmeqK))
            (assertion-violation
              'bytevector-length
              '"not a bytevector"
              g$bv$21435$1VmeqK)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$21435$1VmeqK)))))
   (g$bytevector=?$21349$1VmeqK
     g$bytevector=?$21646$1VmeqK
     (case-lambda
       ((g$bv1$21436$1VmeqK g$bv2$21437$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv1$21436$1VmeqK))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv1$21436$1VmeqK)
            (void))
          (if (not (g$bytevector?$21180$1VmeqK g$bv2$21437$1VmeqK))
            (assertion-violation
              'bytevector=?
              '"not a bytevector"
              g$bv2$21437$1VmeqK)
            (void))
          (if (eq? g$bv1$21436$1VmeqK g$bv2$21437$1VmeqK)
            '#t
            ((case-lambda
               ((g$t$21438$1VmeqK)
                (if g$t$21438$1VmeqK
                  g$t$21438$1VmeqK
                  (begin '#f (begin '#f '#f)))))
             ((case-lambda
                ((g$bl$21439$1VmeqK)
                 (if (g$=$22210$1VmeqK
                       g$bl$21439$1VmeqK
                       (g$bytevector-length$21348$1VmeqK
                         g$bv2$21437$1VmeqK))
                   ((letrec ((g$f$21440$1VmeqK
                               (case-lambda
                                 ((g$i$21441$1VmeqK)
                                  (if (g$=$22210$1VmeqK
                                        g$i$21441$1VmeqK
                                        g$bl$21439$1VmeqK)
                                    '#t
                                    (if (g$=$22210$1VmeqK
                                          (g$bytevector-u8-ref$21353$1VmeqK
                                            g$bv1$21436$1VmeqK
                                            g$i$21441$1VmeqK)
                                          (g$bytevector-u8-ref$21353$1VmeqK
                                            g$bv2$21437$1VmeqK
                                            g$i$21441$1VmeqK))
                                      (g$f$21440$1VmeqK
                                        (+ g$i$21441$1VmeqK '1))
                                      (begin '#f '#f)))))))
                      g$f$21440$1VmeqK)
                    '0)
                   '#f)))
              (g$bytevector-length$21348$1VmeqK
                g$bv1$21436$1VmeqK))))))))
   (g$bytevector-fill!$21350$1VmeqK
     g$bytevector-fill!$21647$1VmeqK
     (case-lambda
       ((g$bv$21442$1VmeqK g$fill$21443$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21442$1VmeqK))
            (assertion-violation
              'bytevector-fill!
              '"not a bytevector"
              g$bv$21442$1VmeqK)
            (void))
          ((case-lambda
             ((g$fill$21444$1VmeqK g$k$21445$1VmeqK)
              ((letrec ((g$f$21446$1VmeqK
                          (case-lambda
                            ((g$i$21447$1VmeqK)
                             (if (not (g$=$22210$1VmeqK
                                        g$i$21447$1VmeqK
                                        g$k$21445$1VmeqK))
                               (begin
                                 (g$bytevector-u8-set!$21354$1VmeqK
                                   g$bv$21442$1VmeqK
                                   g$i$21447$1VmeqK
                                   g$fill$21444$1VmeqK)
                                 (g$f$21446$1VmeqK
                                   (+ g$i$21447$1VmeqK '1)))
                               (void))))))
                 g$f$21446$1VmeqK)
               '0)))
           (g$->byte$21330$1VmeqK g$fill$21443$1VmeqK)
           (g$bytevector-length$21348$1VmeqK g$bv$21442$1VmeqK))))))
   (g$bytevector-copy!$21351$1VmeqK
     g$bytevector-copy!$21648$1VmeqK
     (case-lambda
       ((g$bv1$21448$1VmeqK
          g$s1$21449$1VmeqK
          g$bv2$21450$1VmeqK
          g$s2$21451$1VmeqK
          g$len$21452$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv1$21448$1VmeqK))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$21448$1VmeqK)
            (void))
          (if (not (g$bytevector?$21180$1VmeqK g$bv2$21450$1VmeqK))
            (assertion-violation
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$21450$1VmeqK)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$21448$1VmeqK
            g$s1$21449$1VmeqK
            g$bv2$21450$1VmeqK
            g$s2$21451$1VmeqK
            g$len$21452$1VmeqK)))))
   (g$bytevector-copy$21352$1VmeqK
     g$bytevector-copy$21649$1VmeqK
     (case-lambda
       ((g$bv$21453$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21453$1VmeqK))
            (assertion-violation
              'bytevector-copy
              '"not a bytevector"
              g$bv$21453$1VmeqK)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$21453$1VmeqK)))))
   (g$bytevector-u8-ref$21353$1VmeqK
     g$bytevector-u8-ref$21650$1VmeqK
     (case-lambda
       ((g$bv$21454$1VmeqK g$k$21455$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21454$1VmeqK))
            (assertion-violation
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$21454$1VmeqK)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$21454$1VmeqK g$k$21455$1VmeqK))))))
   (g$bytevector-u8-set!$21354$1VmeqK
     g$bytevector-u8-set!$21651$1VmeqK
     (case-lambda
       ((g$bv$21456$1VmeqK g$k$21457$1VmeqK g$value$21458$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21456$1VmeqK))
            (assertion-violation
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$21456$1VmeqK)
            (void))
          ($bytevector-set!
            g$bv$21456$1VmeqK
            g$k$21457$1VmeqK
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$21458$1VmeqK))))))
   (g$bytevector-s8-ref$21355$1VmeqK
     g$bytevector-s8-ref$21652$1VmeqK
     (case-lambda
       ((g$bv$21459$1VmeqK g$k$21460$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21459$1VmeqK))
            (assertion-violation
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$21459$1VmeqK)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(SByte)"
            '()
            (g$byte->sbyte$21329$1VmeqK
              ($bytevector-ref g$bv$21459$1VmeqK g$k$21460$1VmeqK)))))))
   (g$bytevector-s8-set!$21356$1VmeqK
     g$bytevector-s8-set!$21653$1VmeqK
     (case-lambda
       ((g$bv$21461$1VmeqK g$k$21462$1VmeqK g$value$21463$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21461$1VmeqK))
            (assertion-violation
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$21461$1VmeqK)
            (void))
          ($bytevector-set!
            g$bv$21461$1VmeqK
            g$k$21462$1VmeqK
            (g$->byte$21330$1VmeqK g$value$21463$1VmeqK))))))
   (g$bytevector->u8-list$21357$1VmeqK
     g$bytevector->u8-list$21654$1VmeqK
     (case-lambda
       ((g$bv$21464$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21464$1VmeqK))
            (assertion-violation
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$21464$1VmeqK)
            (void))
          ((case-lambda
             ((g$l$21465$1VmeqK)
              ((letrec ((g$f$21466$1VmeqK
                          (case-lambda
                            ((g$i$21467$1VmeqK g$a$21468$1VmeqK)
                             (if (g$negative?$22203$1VmeqK
                                   g$i$21467$1VmeqK)
                               g$a$21468$1VmeqK
                               (g$f$21466$1VmeqK
                                 (- g$i$21467$1VmeqK '1)
                                 (cons
                                   (g$bytevector-u8-ref$21353$1VmeqK
                                     g$bv$21464$1VmeqK
                                     g$i$21467$1VmeqK)
                                   g$a$21468$1VmeqK)))))))
                 g$f$21466$1VmeqK)
               (- g$l$21465$1VmeqK '1)
               '())))
           (g$bytevector-length$21348$1VmeqK g$bv$21464$1VmeqK))))))
   (g$u8-list->bytevector$21358$1VmeqK
     g$u8-list->bytevector$21655$1VmeqK
     (case-lambda
       ((g$lst$21469$1VmeqK)
        (begin
          (if (not (list? g$lst$21469$1VmeqK))
            (assertion-violation
              'u8-list->bytevector
              '"not a list"
              g$lst$21469$1VmeqK)
            (void))
          ((case-lambda
             ((g$l$21470$1VmeqK)
              ((case-lambda
                 ((g$bv$21471$1VmeqK)
                  ((letrec ((g$f$21472$1VmeqK
                              (case-lambda
                                ((g$i$21473$1VmeqK g$lst$21474$1VmeqK)
                                 (if (g$=$22210$1VmeqK
                                       g$i$21473$1VmeqK
                                       g$l$21470$1VmeqK)
                                   g$bv$21471$1VmeqK
                                   (begin
                                     (g$bytevector-u8-set!$21354$1VmeqK
                                       g$bv$21471$1VmeqK
                                       g$i$21473$1VmeqK
                                       (car g$lst$21474$1VmeqK))
                                     (g$f$21472$1VmeqK
                                       (+ g$i$21473$1VmeqK '1)
                                       (cdr g$lst$21474$1VmeqK))))))))
                     g$f$21472$1VmeqK)
                   '0
                   g$lst$21469$1VmeqK)))
               (g$make-bytevector$21347$1VmeqK g$l$21470$1VmeqK))))
           (length g$lst$21469$1VmeqK))))))
   (g$string->utf8$21359$1VmeqK
     g$string->utf8$21656$1VmeqK
     (case-lambda
       ((g$s$21475$1VmeqK)
        (begin
          (if (not (string? g$s$21475$1VmeqK))
            (assertion-violation
              'string->utf8
              '"not a string"
              g$s$21475$1VmeqK)
            (void))
          (g$get-bytes$21327$1VmeqK
            g$utf8$21322$1VmeqK
            g$s$21475$1VmeqK)))))
   (g$string->utf16$21360$1VmeqK
     g$string->utf16$21657$1VmeqK
     (case-lambda
       ((g$s$21476$1VmeqK)
        (g$string->utf16$21360$1VmeqK g$s$21476$1VmeqK 'big))
       ((g$s$21477$1VmeqK g$end$21478$1VmeqK)
        (begin
          (if (not (string? g$s$21477$1VmeqK))
            (assertion-violation
              'string->utf16
              '"not a string"
              g$s$21477$1VmeqK)
            (void))
          ((case-lambda
             ((g$t$21479$1VmeqK)
              (if (eqv? g$t$21479$1VmeqK 'big)
                (g$get-bytes$21327$1VmeqK
                  g$utf16be$21324$1VmeqK
                  g$s$21477$1VmeqK)
                (if (eqv? g$t$21479$1VmeqK 'little)
                  (g$get-bytes$21327$1VmeqK
                    g$utf16le$21323$1VmeqK
                    g$s$21477$1VmeqK)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf16
                      '"unknown endianness"
                      g$end$21478$1VmeqK))))))
           g$end$21478$1VmeqK)))))
   (g$string->utf32$21361$1VmeqK
     g$string->utf32$21658$1VmeqK
     (case-lambda
       ((g$s$21480$1VmeqK)
        (g$string->utf32$21361$1VmeqK g$s$21480$1VmeqK 'big))
       ((g$s$21481$1VmeqK g$end$21482$1VmeqK)
        (begin
          (if (not (string? g$s$21481$1VmeqK))
            (assertion-violation
              'string->utf32
              '"not a string"
              g$s$21481$1VmeqK)
            (void))
          ((case-lambda
             ((g$t$21483$1VmeqK)
              (if (eqv? g$t$21483$1VmeqK 'big)
                (g$get-bytes$21327$1VmeqK
                  g$utf32be$21326$1VmeqK
                  g$s$21481$1VmeqK)
                (if (eqv? g$t$21483$1VmeqK 'little)
                  (g$get-bytes$21327$1VmeqK
                    g$utf32le$21325$1VmeqK
                    g$s$21481$1VmeqK)
                  (begin
                    '#f
                    (assertion-violation
                      'string->utf32
                      '"unknown endianness"
                      g$end$21482$1VmeqK))))))
           g$end$21482$1VmeqK)))))
   (g$utf8->string$21362$1VmeqK
     g$utf8->string$21659$1VmeqK
     (case-lambda
       ((g$bv$21484$1VmeqK)
        (begin
          (if (not (g$bytevector?$21180$1VmeqK g$bv$21484$1VmeqK))
            (assertion-violation
              'utf8->string
              '"not a bytevector"
              g$bv$21484$1VmeqK)
            (void))
          (g$get-string$21328$1VmeqK
            g$utf8$21322$1VmeqK
            g$bv$21484$1VmeqK)))))
   (g$trim-front$21363$1VmeqK
     g$trim-front$21660$1VmeqK
     (case-lambda
       ((g$bv$21485$1VmeqK g$k$21486$1VmeqK)
        ((case-lambda
           ((g$d$21487$1VmeqK)
            (begin
              (g$bytevector-copy!$21351$1VmeqK
                g$bv$21485$1VmeqK
                g$k$21486$1VmeqK
                g$d$21487$1VmeqK
                '0
                (g$bytevector-length$21348$1VmeqK g$d$21487$1VmeqK))
              g$d$21487$1VmeqK)))
         (g$make-bytevector$21347$1VmeqK
           (- (g$bytevector-length$21348$1VmeqK g$bv$21485$1VmeqK)
              g$k$21486$1VmeqK))))))
   (g$utf16->string$21364$1VmeqK
     g$utf16->string$21661$1VmeqK
     (case-lambda
       ((g$bv$21488$1VmeqK g$end$21489$1VmeqK)
        (g$utf16->string$21364$1VmeqK
          g$bv$21488$1VmeqK
          g$end$21489$1VmeqK
          '#f))
       ((g$bv$21490$1VmeqK g$end$21491$1VmeqK g$endman?$21492$1VmeqK)
        (if g$endman?$21492$1VmeqK
          (if (eq? g$end$21491$1VmeqK 'big)
            (g$get-string$21328$1VmeqK
              g$utf16be$21324$1VmeqK
              g$bv$21490$1VmeqK)
            (g$get-string$21328$1VmeqK
              g$utf16le$21323$1VmeqK
              g$bv$21490$1VmeqK))
          ((case-lambda
             ((g$b0$21493$1VmeqK g$b1$21494$1VmeqK)
              (if (if (g$=$22210$1VmeqK '255 g$b0$21493$1VmeqK)
                    (begin
                      '#f
                      (g$=$22210$1VmeqK g$b1$21494$1VmeqK '254))
                    '#f)
                (g$utf16->string$21364$1VmeqK
                  (g$trim-front$21363$1VmeqK g$bv$21490$1VmeqK '2)
                  'little
                  '#t)
                (if (if (g$=$22210$1VmeqK '254 g$b0$21493$1VmeqK)
                      (begin
                        '#f
                        (g$=$22210$1VmeqK g$b1$21494$1VmeqK '255))
                      '#f)
                  (g$utf16->string$21364$1VmeqK
                    (g$trim-front$21363$1VmeqK g$bv$21490$1VmeqK '2)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf16->string$21364$1VmeqK
                      g$bv$21490$1VmeqK
                      g$end$21491$1VmeqK
                      '#t))))))
           (g$bytevector-u8-ref$21353$1VmeqK g$bv$21490$1VmeqK '0)
           (g$bytevector-u8-ref$21353$1VmeqK g$bv$21490$1VmeqK '1))))))
   (g$utf32->string$21365$1VmeqK
     g$utf32->string$21662$1VmeqK
     (case-lambda
       ((g$bv$21495$1VmeqK g$end$21496$1VmeqK)
        (g$utf32->string$21365$1VmeqK
          g$bv$21495$1VmeqK
          g$end$21496$1VmeqK
          '#f))
       ((g$bv$21497$1VmeqK g$end$21498$1VmeqK g$endman?$21499$1VmeqK)
        (if g$endman?$21499$1VmeqK
          (if (eq? g$end$21498$1VmeqK 'big)
            (g$get-string$21328$1VmeqK
              g$utf32be$21326$1VmeqK
              g$bv$21497$1VmeqK)
            (g$get-string$21328$1VmeqK
              g$utf32le$21325$1VmeqK
              g$bv$21497$1VmeqK))
          ((case-lambda
             ((g$b0$21500$1VmeqK
                g$b1$21501$1VmeqK
                g$b2$21502$1VmeqK
                g$b3$21503$1VmeqK)
              (if (if (g$=$22210$1VmeqK '255 g$b0$21500$1VmeqK)
                    (if (g$=$22210$1VmeqK g$b1$21501$1VmeqK '254)
                      (if (g$zero?$22201$1VmeqK g$b2$21502$1VmeqK)
                        (begin
                          '#f
                          (g$zero?$22201$1VmeqK g$b3$21503$1VmeqK))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$21365$1VmeqK
                  (g$trim-front$21363$1VmeqK g$bv$21497$1VmeqK '4)
                  'little
                  '#t)
                (if (if (g$zero?$22201$1VmeqK g$b0$21500$1VmeqK)
                      (if (g$zero?$22201$1VmeqK g$b1$21501$1VmeqK)
                        (if (g$=$22210$1VmeqK '254 g$b2$21502$1VmeqK)
                          (begin
                            '#f
                            (g$=$22210$1VmeqK g$b3$21503$1VmeqK '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$21365$1VmeqK
                    (g$trim-front$21363$1VmeqK g$bv$21497$1VmeqK '4)
                    'big
                    '#t)
                  (begin
                    '#f
                    (g$utf32->string$21365$1VmeqK
                      g$bv$21497$1VmeqK
                      g$end$21498$1VmeqK
                      '#t))))))
           (g$bytevector-u8-ref$21353$1VmeqK g$bv$21497$1VmeqK '0)
           (g$bytevector-u8-ref$21353$1VmeqK g$bv$21497$1VmeqK '1)
           (g$bytevector-u8-ref$21353$1VmeqK g$bv$21497$1VmeqK '2)
           (g$bytevector-u8-ref$21353$1VmeqK g$bv$21497$1VmeqK '3))))))
   (g$uint-list->bytevector$21366$1VmeqK
     g$uint-list->bytevector$21663$1VmeqK
     (case-lambda
       ((g$lst$21504$1VmeqK g$end$21505$1VmeqK g$size$21506$1VmeqK)
        (begin
          (if (g$negative?$22203$1VmeqK g$size$21506$1VmeqK)
            (assertion-violation
              'uint-list->bytevector
              '"invalid size"
              g$size$21506$1VmeqK)
            (void))
          ((case-lambda
             ((g$bv$21507$1VmeqK)
              ((letrec ((g$f$21508$1VmeqK
                          (case-lambda
                            ((g$i$21509$1VmeqK g$lst$21510$1VmeqK)
                             (if (null? g$lst$21510$1VmeqK)
                               g$bv$21507$1VmeqK
                               (begin
                                 (bytevector-uint-set!
                                   g$bv$21507$1VmeqK
                                   g$i$21509$1VmeqK
                                   (car g$lst$21510$1VmeqK)
                                   g$end$21505$1VmeqK
                                   g$size$21506$1VmeqK)
                                 (g$f$21508$1VmeqK
                                   (+ g$i$21509$1VmeqK
                                      g$size$21506$1VmeqK)
                                   (cdr g$lst$21510$1VmeqK))))))))
                 g$f$21508$1VmeqK)
               '0
               g$lst$21504$1VmeqK)))
           (g$make-bytevector$21347$1VmeqK
             (* (length g$lst$21504$1VmeqK) g$size$21506$1VmeqK)))))))
   (g$sint-list->bytevector$21367$1VmeqK
     g$sint-list->bytevector$21664$1VmeqK
     (case-lambda
       ((g$lst$21511$1VmeqK g$end$21512$1VmeqK g$size$21513$1VmeqK)
        (begin
          (if (g$negative?$22203$1VmeqK g$size$21513$1VmeqK)
            (assertion-violation
              'sint-list->bytevector
              '"invalid size"
              g$size$21513$1VmeqK)
            (void))
          ((case-lambda
             ((g$bv$21514$1VmeqK)
              ((letrec ((g$f$21515$1VmeqK
                          (case-lambda
                            ((g$i$21516$1VmeqK g$lst$21517$1VmeqK)
                             (if (null? g$lst$21517$1VmeqK)
                               g$bv$21514$1VmeqK
                               (begin
                                 (bytevector-sint-set!
                                   g$bv$21514$1VmeqK
                                   g$i$21516$1VmeqK
                                   (car g$lst$21517$1VmeqK)
                                   g$end$21512$1VmeqK
                                   g$size$21513$1VmeqK)
                                 (g$f$21515$1VmeqK
                                   (+ g$i$21516$1VmeqK
                                      g$size$21513$1VmeqK)
                                   (cdr g$lst$21517$1VmeqK))))))))
                 g$f$21515$1VmeqK)
               '0
               g$lst$21511$1VmeqK)))
           (g$make-bytevector$21347$1VmeqK
             (* (length g$lst$21511$1VmeqK) g$size$21513$1VmeqK)))))))
   (g$bytevector->uint-list$21368$1VmeqK
     g$bytevector->uint-list$21665$1VmeqK
     (case-lambda
       ((g$bv$21518$1VmeqK g$end$21519$1VmeqK g$size$21520$1VmeqK)
        (begin
          (if (g$negative?$22203$1VmeqK g$size$21520$1VmeqK)
            (assertion-violation
              'bytevector->uint-list
              '"invalid size"
              g$size$21520$1VmeqK)
            (void))
          ((letrec ((g$f$21521$1VmeqK
                      (case-lambda
                        ((g$l$21522$1VmeqK g$a$21523$1VmeqK)
                         (if (g$zero?$22201$1VmeqK g$l$21522$1VmeqK)
                           g$a$21523$1VmeqK
                           (g$f$21521$1VmeqK
                             (- g$l$21522$1VmeqK g$size$21520$1VmeqK)
                             (cons
                               (bytevector-uint-ref
                                 g$bv$21518$1VmeqK
                                 (- g$l$21522$1VmeqK
                                    g$size$21520$1VmeqK)
                                 g$end$21519$1VmeqK
                                 g$size$21520$1VmeqK)
                               g$a$21523$1VmeqK)))))))
             g$f$21521$1VmeqK)
           (g$bytevector-length$21348$1VmeqK g$bv$21518$1VmeqK)
           '())))))
   (g$bytevector->sint-list$21369$1VmeqK
     g$bytevector->sint-list$21666$1VmeqK
     (case-lambda
       ((g$bv$21524$1VmeqK g$end$21525$1VmeqK g$size$21526$1VmeqK)
        (begin
          (if (g$negative?$22203$1VmeqK g$size$21526$1VmeqK)
            (assertion-violation
              'bytevector->sint-list
              '"invalid size"
              g$size$21526$1VmeqK)
            (void))
          ((letrec ((g$f$21527$1VmeqK
                      (case-lambda
                        ((g$l$21528$1VmeqK g$a$21529$1VmeqK)
                         (if (g$zero?$22201$1VmeqK g$l$21528$1VmeqK)
                           g$a$21529$1VmeqK
                           (g$f$21527$1VmeqK
                             (- g$l$21528$1VmeqK g$size$21526$1VmeqK)
                             (cons
                               (bytevector-sint-ref
                                 g$bv$21524$1VmeqK
                                 (- g$l$21528$1VmeqK
                                    g$size$21526$1VmeqK)
                                 g$end$21525$1VmeqK
                                 g$size$21526$1VmeqK)
                               g$a$21529$1VmeqK)))))))
             g$f$21527$1VmeqK)
           (g$bytevector-length$21348$1VmeqK g$bv$21524$1VmeqK)
           '())))))
   (g$single->double$21370$1VmeqK
     g$single->double$21667$1VmeqK
     (case-lambda
       ((g$s$21530$1VmeqK)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$21530$1VmeqK))))
   (g$bytevector-ieee-single-ref$21371$1VmeqK
     g$bytevector-ieee-single-ref$21668$1VmeqK
     (case-lambda
       ((g$bv$21531$1VmeqK g$k$21532$1VmeqK g$end$21533$1VmeqK)
        ((case-lambda
           ((g$d$21534$1VmeqK)
            (begin
              (g$bytevector-copy!$21351$1VmeqK
                g$bv$21531$1VmeqK
                g$k$21532$1VmeqK
                g$d$21534$1VmeqK
                '0
                '4)
              (if (eq? g$end$21533$1VmeqK 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$21534$1VmeqK)
                (void))
              (g$single->double$21370$1VmeqK
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$21534$1VmeqK
                  '0)))))
         (g$make-bytevector$21347$1VmeqK '4)))))
   (g$bytevector-ieee-double-ref$21372$1VmeqK
     g$bytevector-ieee-double-ref$21669$1VmeqK
     (case-lambda
       ((g$bv$21535$1VmeqK g$k$21536$1VmeqK g$end$21537$1VmeqK)
        ((case-lambda
           ((g$d$21538$1VmeqK)
            (begin
              (g$bytevector-copy!$21351$1VmeqK
                g$bv$21535$1VmeqK
                g$k$21536$1VmeqK
                g$d$21538$1VmeqK
                '0
                '8)
              (if (eq? g$end$21537$1VmeqK 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$21538$1VmeqK)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$21538$1VmeqK
                '0))))
         (g$make-bytevector$21347$1VmeqK '8)))))
   (g$bytevector-ieee-single-set!$21373$1VmeqK
     g$bytevector-ieee-single-set!$21670$1VmeqK
     (case-lambda
       ((g$bv$21539$1VmeqK
          g$k$21540$1VmeqK
          g$value$21541$1VmeqK
          g$end$21542$1VmeqK)
        ((case-lambda
           ((g$value$21543$1VmeqK)
            ((case-lambda
               ((g$data$21544$1VmeqK)
                (begin
                  (if (eq? g$end$21542$1VmeqK 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$21544$1VmeqK)
                    (void))
                  (g$bytevector-copy!$21351$1VmeqK
                    g$data$21544$1VmeqK
                    '0
                    g$bv$21539$1VmeqK
                    g$k$21540$1VmeqK
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$21543$1VmeqK))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$21541$1VmeqK)))))
   (g$bytevector-ieee-double-set!$21374$1VmeqK
     g$bytevector-ieee-double-set!$21671$1VmeqK
     (case-lambda
       ((g$bv$21545$1VmeqK
          g$k$21546$1VmeqK
          g$value$21547$1VmeqK
          g$end$21548$1VmeqK)
        ((case-lambda
           ((g$value$21549$1VmeqK)
            ((case-lambda
               ((g$data$21550$1VmeqK)
                (begin
                  (if (eq? g$end$21548$1VmeqK 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$21550$1VmeqK)
                    (void))
                  (g$bytevector-copy!$21351$1VmeqK
                    g$data$21550$1VmeqK
                    '0
                    g$bv$21545$1VmeqK
                    g$k$21546$1VmeqK
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$21549$1VmeqK))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$21547$1VmeqK)))))
   (g$bytevector-u16-ref$21375$1VmeqK
     g$bytevector-u16-ref$21672$1VmeqK
     (case-lambda
       ((g$bytevector$21551$1VmeqK
          g$k$21552$1VmeqK
          g$endianness$21553$1VmeqK)
        (bytevector-uint-ref
          g$bytevector$21551$1VmeqK
          g$k$21552$1VmeqK
          g$endianness$21553$1VmeqK
          '2))))
   (g$bytevector-s16-ref$21376$1VmeqK
     g$bytevector-s16-ref$21673$1VmeqK
     (case-lambda
       ((g$bytevector$21554$1VmeqK
          g$k$21555$1VmeqK
          g$endianness$21556$1VmeqK)
        (bytevector-sint-ref
          g$bytevector$21554$1VmeqK
          g$k$21555$1VmeqK
          g$endianness$21556$1VmeqK
          '2))))
   (g$bytevector-u16-native-ref$21377$1VmeqK
     g$bytevector-u16-native-ref$21674$1VmeqK
     (case-lambda
       ((g$bytevector$21557$1VmeqK g$k$21558$1VmeqK)
        (bytevector-uint-ref
          g$bytevector$21557$1VmeqK
          g$k$21558$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '2))))
   (g$bytevector-s16-native-ref$21378$1VmeqK
     g$bytevector-s16-native-ref$21675$1VmeqK
     (case-lambda
       ((g$bytevector$21559$1VmeqK g$k$21560$1VmeqK)
        (bytevector-sint-ref
          g$bytevector$21559$1VmeqK
          g$k$21560$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '2))))
   (g$bytevector-u16-set!$21379$1VmeqK
     g$bytevector-u16-set!$21676$1VmeqK
     (case-lambda
       ((g$bytevector$21561$1VmeqK
          g$k$21562$1VmeqK
          g$n$21563$1VmeqK
          g$endianness$21564$1VmeqK)
        (bytevector-uint-set!
          g$bytevector$21561$1VmeqK
          g$k$21562$1VmeqK
          g$n$21563$1VmeqK
          g$endianness$21564$1VmeqK
          '2))))
   (g$bytevector-s16-set!$21380$1VmeqK
     g$bytevector-s16-set!$21677$1VmeqK
     (case-lambda
       ((g$bytevector$21565$1VmeqK
          g$k$21566$1VmeqK
          g$n$21567$1VmeqK
          g$endianness$21568$1VmeqK)
        (bytevector-sint-set!
          g$bytevector$21565$1VmeqK
          g$k$21566$1VmeqK
          g$n$21567$1VmeqK
          g$endianness$21568$1VmeqK
          '2))))
   (g$bytevector-u16-native-set!$21381$1VmeqK
     g$bytevector-u16-native-set!$21678$1VmeqK
     (case-lambda
       ((g$bytevector$21569$1VmeqK g$k$21570$1VmeqK g$n$21571$1VmeqK)
        (bytevector-uint-set!
          g$bytevector$21569$1VmeqK
          g$k$21570$1VmeqK
          g$n$21571$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '2))))
   (g$bytevector-s16-native-set!$21382$1VmeqK
     g$bytevector-s16-native-set!$21679$1VmeqK
     (case-lambda
       ((g$bytevector$21572$1VmeqK g$k$21573$1VmeqK g$n$21574$1VmeqK)
        (bytevector-sint-set!
          g$bytevector$21572$1VmeqK
          g$k$21573$1VmeqK
          g$n$21574$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '2))))
   (g$bytevector-u32-ref$21383$1VmeqK
     g$bytevector-u32-ref$21680$1VmeqK
     (case-lambda
       ((g$bytevector$21575$1VmeqK
          g$k$21576$1VmeqK
          g$endianness$21577$1VmeqK)
        (bytevector-uint-ref
          g$bytevector$21575$1VmeqK
          g$k$21576$1VmeqK
          g$endianness$21577$1VmeqK
          '4))))
   (g$bytevector-s32-ref$21384$1VmeqK
     g$bytevector-s32-ref$21681$1VmeqK
     (case-lambda
       ((g$bytevector$21578$1VmeqK
          g$k$21579$1VmeqK
          g$endianness$21580$1VmeqK)
        (bytevector-sint-ref
          g$bytevector$21578$1VmeqK
          g$k$21579$1VmeqK
          g$endianness$21580$1VmeqK
          '4))))
   (g$bytevector-u32-native-ref$21385$1VmeqK
     g$bytevector-u32-native-ref$21682$1VmeqK
     (case-lambda
       ((g$bytevector$21581$1VmeqK g$k$21582$1VmeqK)
        (bytevector-uint-ref
          g$bytevector$21581$1VmeqK
          g$k$21582$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '4))))
   (g$bytevector-s32-native-ref$21386$1VmeqK
     g$bytevector-s32-native-ref$21683$1VmeqK
     (case-lambda
       ((g$bytevector$21583$1VmeqK g$k$21584$1VmeqK)
        (bytevector-sint-ref
          g$bytevector$21583$1VmeqK
          g$k$21584$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '4))))
   (g$bytevector-u32-set!$21387$1VmeqK
     g$bytevector-u32-set!$21684$1VmeqK
     (case-lambda
       ((g$bytevector$21585$1VmeqK
          g$k$21586$1VmeqK
          g$n$21587$1VmeqK
          g$endianness$21588$1VmeqK)
        (bytevector-uint-set!
          g$bytevector$21585$1VmeqK
          g$k$21586$1VmeqK
          g$n$21587$1VmeqK
          g$endianness$21588$1VmeqK
          '4))))
   (g$bytevector-s32-set!$21388$1VmeqK
     g$bytevector-s32-set!$21685$1VmeqK
     (case-lambda
       ((g$bytevector$21589$1VmeqK
          g$k$21590$1VmeqK
          g$n$21591$1VmeqK
          g$endianness$21592$1VmeqK)
        (bytevector-sint-set!
          g$bytevector$21589$1VmeqK
          g$k$21590$1VmeqK
          g$n$21591$1VmeqK
          g$endianness$21592$1VmeqK
          '4))))
   (g$bytevector-u32-native-set!$21389$1VmeqK
     g$bytevector-u32-native-set!$21686$1VmeqK
     (case-lambda
       ((g$bytevector$21593$1VmeqK g$k$21594$1VmeqK g$n$21595$1VmeqK)
        (bytevector-uint-set!
          g$bytevector$21593$1VmeqK
          g$k$21594$1VmeqK
          g$n$21595$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '4))))
   (g$bytevector-s32-native-set!$21390$1VmeqK
     g$bytevector-s32-native-set!$21687$1VmeqK
     (case-lambda
       ((g$bytevector$21596$1VmeqK g$k$21597$1VmeqK g$n$21598$1VmeqK)
        (bytevector-sint-set!
          g$bytevector$21596$1VmeqK
          g$k$21597$1VmeqK
          g$n$21598$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '4))))
   (g$bytevector-u64-ref$21391$1VmeqK
     g$bytevector-u64-ref$21688$1VmeqK
     (case-lambda
       ((g$bytevector$21599$1VmeqK
          g$k$21600$1VmeqK
          g$endianness$21601$1VmeqK)
        (bytevector-uint-ref
          g$bytevector$21599$1VmeqK
          g$k$21600$1VmeqK
          g$endianness$21601$1VmeqK
          '8))))
   (g$bytevector-s64-ref$21392$1VmeqK
     g$bytevector-s64-ref$21689$1VmeqK
     (case-lambda
       ((g$bytevector$21602$1VmeqK
          g$k$21603$1VmeqK
          g$endianness$21604$1VmeqK)
        (bytevector-sint-ref
          g$bytevector$21602$1VmeqK
          g$k$21603$1VmeqK
          g$endianness$21604$1VmeqK
          '8))))
   (g$bytevector-u64-native-ref$21393$1VmeqK
     g$bytevector-u64-native-ref$21690$1VmeqK
     (case-lambda
       ((g$bytevector$21605$1VmeqK g$k$21606$1VmeqK)
        (bytevector-uint-ref
          g$bytevector$21605$1VmeqK
          g$k$21606$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '8))))
   (g$bytevector-s64-native-ref$21394$1VmeqK
     g$bytevector-s64-native-ref$21691$1VmeqK
     (case-lambda
       ((g$bytevector$21607$1VmeqK g$k$21608$1VmeqK)
        (bytevector-sint-ref
          g$bytevector$21607$1VmeqK
          g$k$21608$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '8))))
   (g$bytevector-u64-set!$21395$1VmeqK
     g$bytevector-u64-set!$21692$1VmeqK
     (case-lambda
       ((g$bytevector$21609$1VmeqK
          g$k$21610$1VmeqK
          g$n$21611$1VmeqK
          g$endianness$21612$1VmeqK)
        (bytevector-uint-set!
          g$bytevector$21609$1VmeqK
          g$k$21610$1VmeqK
          g$n$21611$1VmeqK
          g$endianness$21612$1VmeqK
          '8))))
   (g$bytevector-s64-set!$21396$1VmeqK
     g$bytevector-s64-set!$21693$1VmeqK
     (case-lambda
       ((g$bytevector$21613$1VmeqK
          g$k$21614$1VmeqK
          g$n$21615$1VmeqK
          g$endianness$21616$1VmeqK)
        (bytevector-sint-set!
          g$bytevector$21613$1VmeqK
          g$k$21614$1VmeqK
          g$n$21615$1VmeqK
          g$endianness$21616$1VmeqK
          '8))))
   (g$bytevector-u64-native-set!$21397$1VmeqK
     g$bytevector-u64-native-set!$21694$1VmeqK
     (case-lambda
       ((g$bytevector$21617$1VmeqK g$k$21618$1VmeqK g$n$21619$1VmeqK)
        (bytevector-uint-set!
          g$bytevector$21617$1VmeqK
          g$k$21618$1VmeqK
          g$n$21619$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '8))))
   (g$bytevector-s64-native-set!$21398$1VmeqK
     g$bytevector-s64-native-set!$21695$1VmeqK
     (case-lambda
       ((g$bytevector$21620$1VmeqK g$k$21621$1VmeqK g$n$21622$1VmeqK)
        (bytevector-sint-set!
          g$bytevector$21620$1VmeqK
          g$k$21621$1VmeqK
          g$n$21622$1VmeqK
          (g$native-endianness$21321$1VmeqK)
          '8))))
   (g$bytevector-ieee-single-native-ref$21399$1VmeqK
     g$bytevector-ieee-single-native-ref$21696$1VmeqK
     (case-lambda
       ((g$bytevector$21623$1VmeqK g$k$21624$1VmeqK)
        (if (not (g$zero?$22201$1VmeqK
                   (g$mod$21188$1VmeqK g$k$21624$1VmeqK '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$21624$1VmeqK)
          (g$bytevector-ieee-single-ref$21371$1VmeqK
            g$bytevector$21623$1VmeqK
            g$k$21624$1VmeqK
            (g$native-endianness$21321$1VmeqK))))))
   (g$bytevector-ieee-double-native-ref$21400$1VmeqK
     g$bytevector-ieee-double-native-ref$21697$1VmeqK
     (case-lambda
       ((g$bytevector$21625$1VmeqK g$k$21626$1VmeqK)
        (if (not (g$zero?$22201$1VmeqK
                   (g$mod$21188$1VmeqK g$k$21626$1VmeqK '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$21626$1VmeqK)
          (g$bytevector-ieee-double-ref$21372$1VmeqK
            g$bytevector$21625$1VmeqK
            g$k$21626$1VmeqK
            (g$native-endianness$21321$1VmeqK))))))
   (g$bytevector-ieee-single-native-set!$21401$1VmeqK
     g$bytevector-ieee-single-native-set!$21698$1VmeqK
     (case-lambda
       ((g$bytevector$21627$1VmeqK g$k$21628$1VmeqK g$x$21629$1VmeqK)
        (if (not (g$zero?$22201$1VmeqK
                   (g$mod$21188$1VmeqK g$k$21628$1VmeqK '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$21628$1VmeqK)
          (g$bytevector-ieee-single-set!$21373$1VmeqK
            g$bytevector$21627$1VmeqK
            g$k$21628$1VmeqK
            g$x$21629$1VmeqK
            (g$native-endianness$21321$1VmeqK))))))
   (g$bytevector-ieee-double-native-set!$21402$1VmeqK
     g$bytevector-ieee-double-native-set!$21699$1VmeqK
     (case-lambda
       ((g$bytevector$21630$1VmeqK g$k$21631$1VmeqK g$x$21632$1VmeqK)
        (if (not (g$zero?$22201$1VmeqK
                   (g$mod$21188$1VmeqK g$k$21631$1VmeqK '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$21631$1VmeqK)
          (g$bytevector-ieee-double-set!$21374$1VmeqK
            g$bytevector$21630$1VmeqK
            g$k$21631$1VmeqK
            g$x$21632$1VmeqK
            (g$native-endianness$21321$1VmeqK)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$21700$1VmeqK
     g$bignum?$22162$1VmeqK
     (case-lambda
       ((g$obj$21913$1VmeqK)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$21913$1VmeqK))))
   (g$rectnum?$21701$1VmeqK
     g$rectnum?$22163$1VmeqK
     (case-lambda
       ((g$obj$21914$1VmeqK)
        (clr-is-internal
          'IronScheme.Runtime.ComplexFraction
          g$obj$21914$1VmeqK))))
   (g$make-rectnum$21702$1VmeqK
     g$make-rectnum$22164$1VmeqK
     (case-lambda
       ((g$r1$21915$1VmeqK g$r2$21916$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'Make
          '()
          g$r1$21915$1VmeqK
          g$r2$21916$1VmeqK))))
   (g$rectnum-imag-part$21703$1VmeqK
     g$rectnum-imag-part$22165$1VmeqK
     (case-lambda
       ((g$c$21917$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Imag
          g$c$21917$1VmeqK))))
   (g$rectnum-real-part$21704$1VmeqK
     g$rectnum-real-part$22166$1VmeqK
     (case-lambda
       ((g$c$21918$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Real
          g$c$21918$1VmeqK))))
   (g$ratnum?$21705$1VmeqK
     g$ratnum?$22167$1VmeqK
     (case-lambda
       ((g$obj$21919$1VmeqK)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$21919$1VmeqK))))
   (g$ratnum-denominator$21706$1VmeqK
     g$ratnum-denominator$22168$1VmeqK
     (case-lambda
       ((g$rat$21920$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$21920$1VmeqK))))
   (g$ratnum-numerator$21707$1VmeqK
     g$ratnum-numerator$22169$1VmeqK
     (case-lambda
       ((g$rat$21921$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$21921$1VmeqK))))
   (g$complexnum?$21708$1VmeqK
     g$complexnum?$22170$1VmeqK
     (case-lambda
       ((g$obj$21922$1VmeqK)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$21922$1VmeqK))))
   (g$make-complexnum$21709$1VmeqK
     g$make-complexnum$22171$1VmeqK
     (case-lambda
       ((g$r1$21923$1VmeqK g$r2$21924$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$21923$1VmeqK
          g$r2$21924$1VmeqK))))
   (g$complexnum-imag-part$21710$1VmeqK
     g$complexnum-imag-part$22172$1VmeqK
     (case-lambda
       ((g$c$21925$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$21925$1VmeqK))))
   (g$complexnum-real-part$21711$1VmeqK
     g$complexnum-real-part$22173$1VmeqK
     (case-lambda
       ((g$c$21926$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$21926$1VmeqK))))
   (g$bignum/$21712$1VmeqK
     g$bignum/$22174$1VmeqK
     (case-lambda
       ((g$a$21927$1VmeqK g$b$21928$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$21927$1VmeqK
          g$b$21928$1VmeqK))))
   (g$bignum%$21713$1VmeqK
     g$bignum%$22175$1VmeqK
     (case-lambda
       ((g$a$21929$1VmeqK g$b$21930$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$21929$1VmeqK
          g$b$21930$1VmeqK))))
   (g$bignum->fixnum$21714$1VmeqK
     g$bignum->fixnum$22176$1VmeqK
     (case-lambda
       ((g$b$21931$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$21931$1VmeqK))))
   (g$flonum->ratnum$21715$1VmeqK
     g$flonum->ratnum$22177$1VmeqK
     (case-lambda
       ((g$f$21932$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$21932$1VmeqK))))
   (g$ratnum->flonum$21716$1VmeqK
     g$ratnum->flonum$22178$1VmeqK
     (case-lambda
       ((g$r$21933$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$21933$1VmeqK
          '()))))
   (g$fixnum->bignum$21717$1VmeqK
     g$fixnum->bignum$22179$1VmeqK
     (case-lambda
       ((g$f$21934$1VmeqK)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$21934$1VmeqK))))
   (g$real->complexnum$21718$1VmeqK
     g$real->complexnum$22180$1VmeqK
     (case-lambda
       ((g$num$21935$1VmeqK)
        (if (g$complexnum?$21708$1VmeqK g$num$21935$1VmeqK)
          g$num$21935$1VmeqK
          (g$make-complexnum$21709$1VmeqK
            (g$inexact$21742$1VmeqK g$num$21935$1VmeqK)
            '0.0)))))
   (g$complexnum->rectnum$21719$1VmeqK
     g$complexnum->rectnum$22181$1VmeqK
     (case-lambda
       ((g$num$21936$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          '"op_Implicit(Microsoft.Scripting.Math.Complex64)"
          '()
          g$num$21936$1VmeqK))))
   (g$rectnum->complexnum$21720$1VmeqK
     g$rectnum->complexnum$22182$1VmeqK
     (case-lambda
       ((g$num$21937$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'ToComplex64
          g$num$21937$1VmeqK))))
   (g$->fixnum$21721$1VmeqK
     g$->fixnum$22183$1VmeqK
     (case-lambda
       ((g$num$21938$1VmeqK)
        (if (g$fixnum?$21184$1VmeqK g$num$21938$1VmeqK)
          g$num$21938$1VmeqK
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$21938$1VmeqK)))))
   (g$->ratnum$21722$1VmeqK
     g$->ratnum$22184$1VmeqK
     (case-lambda
       ((g$num$21939$1VmeqK)
        (if (g$ratnum?$21705$1VmeqK g$num$21939$1VmeqK)
          g$num$21939$1VmeqK
          (if (g$real?$21733$1VmeqK g$num$21939$1VmeqK)
            (g$flonum->ratnum$21715$1VmeqK
              (g$real->flonum$21724$1VmeqK g$num$21939$1VmeqK))
            (begin
              '#f
              (assertion-violation
                '->ratnum
                '"not a real"
                g$num$21939$1VmeqK)))))))
   (g$->bignum$21723$1VmeqK
     g$->bignum$22185$1VmeqK
     (case-lambda
       ((g$num$21940$1VmeqK)
        (if (g$bignum?$21700$1VmeqK g$num$21940$1VmeqK)
          g$num$21940$1VmeqK
          (if (g$fixnum?$21184$1VmeqK g$num$21940$1VmeqK)
            (g$fixnum->bignum$21717$1VmeqK g$num$21940$1VmeqK)
            (begin
              '#f
              (assertion-violation
                '->bignum
                '"not an integer"
                g$num$21940$1VmeqK)))))))
   (g$real->flonum$21724$1VmeqK
     g$real->flonum$22186$1VmeqK
     (case-lambda
       ((g$x$21941$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x$21941$1VmeqK))
            (assertion-violation
              'real->flonum
              '"not a real"
              g$x$21941$1VmeqK)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$21941$1VmeqK)))))
   (g$fixnum->flonum$21725$1VmeqK
     g$fixnum->flonum$22187$1VmeqK
     (case-lambda
       ((g$x$21942$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x$21942$1VmeqK))
            (assertion-violation
              'fixnum->flonum
              '"not a fixnum"
              g$x$21942$1VmeqK)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$21942$1VmeqK))))))
   (g$number?$21726$1VmeqK
     g$number?$22188$1VmeqK
     (case-lambda
       ((g$obj$21943$1VmeqK)
        ((case-lambda
           ((g$t$21944$1VmeqK)
            (if g$t$21944$1VmeqK
              g$t$21944$1VmeqK
              ((case-lambda
                 ((g$t$21945$1VmeqK)
                  (if g$t$21945$1VmeqK
                    g$t$21945$1VmeqK
                    ((case-lambda
                       ((g$t$21946$1VmeqK)
                        (if g$t$21946$1VmeqK
                          g$t$21946$1VmeqK
                          ((case-lambda
                             ((g$t$21947$1VmeqK)
                              (if g$t$21947$1VmeqK
                                g$t$21947$1VmeqK
                                ((case-lambda
                                   ((g$t$21948$1VmeqK)
                                    (if g$t$21948$1VmeqK
                                      g$t$21948$1VmeqK
                                      (begin
                                        '#f
                                        (g$rectnum?$21701$1VmeqK
                                          g$obj$21943$1VmeqK)))))
                                 (g$complexnum?$21708$1VmeqK
                                   g$obj$21943$1VmeqK)))))
                           (g$ratnum?$21705$1VmeqK
                             g$obj$21943$1VmeqK)))))
                     (g$bignum?$21700$1VmeqK g$obj$21943$1VmeqK)))))
               (g$flonum?$21185$1VmeqK g$obj$21943$1VmeqK)))))
         (g$fixnum?$21184$1VmeqK g$obj$21943$1VmeqK)))))
   (g$nan?$21727$1VmeqK
     g$nan?$22189$1VmeqK
     (case-lambda
       ((g$num$21949$1VmeqK)
        (if ((case-lambda
               ((g$t$21950$1VmeqK)
                (if g$t$21950$1VmeqK
                  g$t$21950$1VmeqK
                  ((case-lambda
                     ((g$t$21951$1VmeqK)
                      (if g$t$21951$1VmeqK
                        g$t$21951$1VmeqK
                        ((case-lambda
                           ((g$t$21952$1VmeqK)
                            (if g$t$21952$1VmeqK
                              g$t$21952$1VmeqK
                              (begin
                                '#f
                                (g$rectnum?$21701$1VmeqK
                                  g$num$21949$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$num$21949$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$num$21949$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$num$21949$1VmeqK))
          '#f
          (if (g$flonum?$21185$1VmeqK g$num$21949$1VmeqK)
            (g$flnan?$27055$1VmeqK g$num$21949$1VmeqK)
            (if (g$complexnum?$21708$1VmeqK g$num$21949$1VmeqK)
              ((case-lambda
                 ((g$t$21953$1VmeqK)
                  (if g$t$21953$1VmeqK
                    g$t$21953$1VmeqK
                    (begin
                      '#f
                      (g$flnan?$27055$1VmeqK
                        (g$complexnum-imag-part$21710$1VmeqK
                          g$num$21949$1VmeqK))))))
               (g$flnan?$27055$1VmeqK
                 (g$complexnum-real-part$21711$1VmeqK
                   g$num$21949$1VmeqK)))
              (begin
                '#f
                (assertion-violation
                  'nan?
                  '"not a number"
                  g$num$21949$1VmeqK))))))))
   (g$finite?$21728$1VmeqK
     g$finite?$22190$1VmeqK
     (case-lambda
       ((g$num$21954$1VmeqK)
        (if ((case-lambda
               ((g$t$21955$1VmeqK)
                (if g$t$21955$1VmeqK
                  g$t$21955$1VmeqK
                  ((case-lambda
                     ((g$t$21956$1VmeqK)
                      (if g$t$21956$1VmeqK
                        g$t$21956$1VmeqK
                        ((case-lambda
                           ((g$t$21957$1VmeqK)
                            (if g$t$21957$1VmeqK
                              g$t$21957$1VmeqK
                              (begin
                                '#f
                                (g$rectnum?$21701$1VmeqK
                                  g$num$21954$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$num$21954$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$num$21954$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$num$21954$1VmeqK))
          '#t
          (if (g$flonum?$21185$1VmeqK g$num$21954$1VmeqK)
            (g$flfinite?$27052$1VmeqK g$num$21954$1VmeqK)
            (if (g$complexnum?$21708$1VmeqK g$num$21954$1VmeqK)
              (if (g$flfinite?$27052$1VmeqK
                    (g$complexnum-real-part$21711$1VmeqK
                      g$num$21954$1VmeqK))
                (begin
                  '#f
                  (g$flfinite?$27052$1VmeqK
                    (g$complexnum-imag-part$21710$1VmeqK
                      g$num$21954$1VmeqK)))
                '#f)
              (begin
                '#f
                (assertion-violation
                  'finite?
                  '"not a number"
                  g$num$21954$1VmeqK))))))))
   (g$infinite?$21729$1VmeqK
     g$infinite?$22191$1VmeqK
     (case-lambda
       ((g$num$21958$1VmeqK)
        (if ((case-lambda
               ((g$t$21959$1VmeqK)
                (if g$t$21959$1VmeqK
                  g$t$21959$1VmeqK
                  ((case-lambda
                     ((g$t$21960$1VmeqK)
                      (if g$t$21960$1VmeqK
                        g$t$21960$1VmeqK
                        ((case-lambda
                           ((g$t$21961$1VmeqK)
                            (if g$t$21961$1VmeqK
                              g$t$21961$1VmeqK
                              (begin
                                '#f
                                (g$rectnum?$21701$1VmeqK
                                  g$num$21958$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$num$21958$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$num$21958$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$num$21958$1VmeqK))
          '#f
          (if (g$flonum?$21185$1VmeqK g$num$21958$1VmeqK)
            (g$flinfinite?$27054$1VmeqK g$num$21958$1VmeqK)
            (if (g$complexnum?$21708$1VmeqK g$num$21958$1VmeqK)
              ((case-lambda
                 ((g$t$21962$1VmeqK)
                  (if g$t$21962$1VmeqK
                    g$t$21962$1VmeqK
                    (begin
                      '#f
                      (g$flinfinite?$27054$1VmeqK
                        (g$complexnum-imag-part$21710$1VmeqK
                          g$num$21958$1VmeqK))))))
               (g$flinfinite?$27054$1VmeqK
                 (g$complexnum-real-part$21711$1VmeqK
                   g$num$21958$1VmeqK)))
              (begin
                '#f
                (assertion-violation
                  'infinite?
                  '"not a number"
                  g$num$21958$1VmeqK))))))))
   (g$exact?$21730$1VmeqK
     g$exact?$22192$1VmeqK
     (case-lambda
       ((g$obj$21963$1VmeqK)
        (if ((case-lambda
               ((g$t$21964$1VmeqK)
                (if g$t$21964$1VmeqK
                  g$t$21964$1VmeqK
                  ((case-lambda
                     ((g$t$21965$1VmeqK)
                      (if g$t$21965$1VmeqK
                        g$t$21965$1VmeqK
                        ((case-lambda
                           ((g$t$21966$1VmeqK)
                            (if g$t$21966$1VmeqK
                              g$t$21966$1VmeqK
                              (begin
                                '#f
                                (g$rectnum?$21701$1VmeqK
                                  g$obj$21963$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$obj$21963$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$obj$21963$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21963$1VmeqK))
          '#t
          (if ((case-lambda
                 ((g$t$21967$1VmeqK)
                  (if g$t$21967$1VmeqK
                    g$t$21967$1VmeqK
                    (begin
                      '#f
                      (g$complexnum?$21708$1VmeqK
                        g$obj$21963$1VmeqK)))))
               (g$flonum?$21185$1VmeqK g$obj$21963$1VmeqK))
            '#f
            (begin
              '#f
              (assertion-violation
                'exact
                '"not a number"
                g$obj$21963$1VmeqK)))))))
   (g$inexact?$21731$1VmeqK
     g$inexact?$22193$1VmeqK
     (case-lambda
       ((g$obj$21968$1VmeqK)
        (if ((case-lambda
               ((g$t$21969$1VmeqK)
                (if g$t$21969$1VmeqK
                  g$t$21969$1VmeqK
                  ((case-lambda
                     ((g$t$21970$1VmeqK)
                      (if g$t$21970$1VmeqK
                        g$t$21970$1VmeqK
                        ((case-lambda
                           ((g$t$21971$1VmeqK)
                            (if g$t$21971$1VmeqK
                              g$t$21971$1VmeqK
                              (begin
                                '#f
                                (g$rectnum?$21701$1VmeqK
                                  g$obj$21968$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$obj$21968$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$obj$21968$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21968$1VmeqK))
          '#f
          (if ((case-lambda
                 ((g$t$21972$1VmeqK)
                  (if g$t$21972$1VmeqK
                    g$t$21972$1VmeqK
                    (begin
                      '#f
                      (g$complexnum?$21708$1VmeqK
                        g$obj$21968$1VmeqK)))))
               (g$flonum?$21185$1VmeqK g$obj$21968$1VmeqK))
            '#t
            (begin
              '#f
              (assertion-violation
                'inexact
                '"not a number"
                g$obj$21968$1VmeqK)))))))
   (g$complex?$21732$1VmeqK
     g$complex?$22194$1VmeqK
     (case-lambda
       ((g$obj$21973$1VmeqK)
        (g$number?$21726$1VmeqK g$obj$21973$1VmeqK))))
   (g$real?$21733$1VmeqK
     g$real?$22195$1VmeqK
     (case-lambda
       ((g$obj$21974$1VmeqK)
        (if ((case-lambda
               ((g$t$21975$1VmeqK)
                (if g$t$21975$1VmeqK
                  g$t$21975$1VmeqK
                  ((case-lambda
                     ((g$t$21976$1VmeqK)
                      (if g$t$21976$1VmeqK
                        g$t$21976$1VmeqK
                        ((case-lambda
                           ((g$t$21977$1VmeqK)
                            (if g$t$21977$1VmeqK
                              g$t$21977$1VmeqK
                              (begin
                                '#f
                                (g$flonum?$21185$1VmeqK
                                  g$obj$21974$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$obj$21974$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$obj$21974$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21974$1VmeqK))
          '#t
          (if ((case-lambda
                 ((g$t$21978$1VmeqK)
                  (if g$t$21978$1VmeqK
                    g$t$21978$1VmeqK
                    (begin
                      '#f
                      (g$rectnum?$21701$1VmeqK g$obj$21974$1VmeqK)))))
               (g$complexnum?$21708$1VmeqK g$obj$21974$1VmeqK))
            ((case-lambda
               ((g$i$21979$1VmeqK)
                (if (g$zero?$21739$1VmeqK g$i$21979$1VmeqK)
                  (begin '#f (g$exact?$21730$1VmeqK g$i$21979$1VmeqK))
                  '#f)))
             (g$imag-part$21859$1VmeqK g$obj$21974$1VmeqK))
            (begin '#f '#f))))))
   (g$rational?$21734$1VmeqK
     g$rational?$22196$1VmeqK
     (case-lambda
       ((g$obj$21980$1VmeqK)
        (if ((case-lambda
               ((g$t$21981$1VmeqK)
                (if g$t$21981$1VmeqK
                  g$t$21981$1VmeqK
                  ((case-lambda
                     ((g$t$21982$1VmeqK)
                      (if g$t$21982$1VmeqK
                        g$t$21982$1VmeqK
                        (begin
                          '#f
                          (g$ratnum?$21705$1VmeqK
                            g$obj$21980$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$obj$21980$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21980$1VmeqK))
          '#t
          (if (if ((case-lambda
                     ((g$t$21983$1VmeqK)
                      (if g$t$21983$1VmeqK
                        g$t$21983$1VmeqK
                        ((case-lambda
                           ((g$t$21984$1VmeqK)
                            (if g$t$21984$1VmeqK
                              g$t$21984$1VmeqK
                              (begin
                                '#f
                                (g$flonum?$21185$1VmeqK
                                  g$obj$21980$1VmeqK)))))
                         (g$rectnum?$21701$1VmeqK
                           g$obj$21980$1VmeqK)))))
                   (g$complexnum?$21708$1VmeqK g$obj$21980$1VmeqK))
                (if (g$finite?$21728$1VmeqK g$obj$21980$1VmeqK)
                  (begin
                    '#f
                    (not (g$nan?$21727$1VmeqK g$obj$21980$1VmeqK)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21985$1VmeqK)
                (if (g$exact?$21730$1VmeqK g$i$21985$1VmeqK)
                  (begin '#f (g$zero?$21739$1VmeqK g$i$21985$1VmeqK))
                  '#f)))
             (g$imag-part$21859$1VmeqK g$obj$21980$1VmeqK))
            (begin '#f '#f))))))
   (g$integer?$21735$1VmeqK
     g$integer?$22197$1VmeqK
     (case-lambda
       ((g$obj$21986$1VmeqK)
        (if ((case-lambda
               ((g$t$21987$1VmeqK)
                (if g$t$21987$1VmeqK
                  g$t$21987$1VmeqK
                  (begin
                    '#f
                    (g$bignum?$21700$1VmeqK g$obj$21986$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21986$1VmeqK))
          '#t
          (if (if ((case-lambda
                     ((g$t$21988$1VmeqK)
                      (if g$t$21988$1VmeqK
                        g$t$21988$1VmeqK
                        ((case-lambda
                           ((g$t$21989$1VmeqK)
                            (if g$t$21989$1VmeqK
                              g$t$21989$1VmeqK
                              ((case-lambda
                                 ((g$t$21990$1VmeqK)
                                  (if g$t$21990$1VmeqK
                                    g$t$21990$1VmeqK
                                    (begin
                                      '#f
                                      (g$flonum?$21185$1VmeqK
                                        g$obj$21986$1VmeqK)))))
                               (g$rectnum?$21701$1VmeqK
                                 g$obj$21986$1VmeqK)))))
                         (g$complexnum?$21708$1VmeqK
                           g$obj$21986$1VmeqK)))))
                   (g$ratnum?$21705$1VmeqK g$obj$21986$1VmeqK))
                (if (g$finite?$21728$1VmeqK g$obj$21986$1VmeqK)
                  (begin
                    '#f
                    (not (g$nan?$21727$1VmeqK g$obj$21986$1VmeqK)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$21991$1VmeqK)
                (if (g$exact?$21730$1VmeqK g$i$21991$1VmeqK)
                  (if (g$zero?$21739$1VmeqK g$i$21991$1VmeqK)
                    (begin
                      '#f
                      (g$=$21846$1VmeqK
                        (g$denominator$21857$1VmeqK
                          (g$real-part$21858$1VmeqK g$obj$21986$1VmeqK))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$21859$1VmeqK g$obj$21986$1VmeqK))
            (begin '#f '#f))))))
   (g$real-valued?$21736$1VmeqK
     g$real-valued?$22198$1VmeqK
     (case-lambda
       ((g$obj$21992$1VmeqK)
        (if ((case-lambda
               ((g$t$21993$1VmeqK)
                (if g$t$21993$1VmeqK
                  g$t$21993$1VmeqK
                  ((case-lambda
                     ((g$t$21994$1VmeqK)
                      (if g$t$21994$1VmeqK
                        g$t$21994$1VmeqK
                        ((case-lambda
                           ((g$t$21995$1VmeqK)
                            (if g$t$21995$1VmeqK
                              g$t$21995$1VmeqK
                              (begin
                                '#f
                                (g$flonum?$21185$1VmeqK
                                  g$obj$21992$1VmeqK)))))
                         (g$ratnum?$21705$1VmeqK g$obj$21992$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$obj$21992$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21992$1VmeqK))
          '#t
          (if ((case-lambda
                 ((g$t$21996$1VmeqK)
                  (if g$t$21996$1VmeqK
                    g$t$21996$1VmeqK
                    (begin
                      '#f
                      (g$rectnum?$21701$1VmeqK g$obj$21992$1VmeqK)))))
               (g$complexnum?$21708$1VmeqK g$obj$21992$1VmeqK))
            ((case-lambda
               ((g$i$21997$1VmeqK)
                (g$zero?$21739$1VmeqK g$i$21997$1VmeqK)))
             (g$imag-part$21859$1VmeqK g$obj$21992$1VmeqK))
            (begin '#f '#f))))))
   (g$rational-valued?$21737$1VmeqK
     g$rational-valued?$22199$1VmeqK
     (case-lambda
       ((g$obj$21998$1VmeqK)
        (if ((case-lambda
               ((g$t$21999$1VmeqK)
                (if g$t$21999$1VmeqK
                  g$t$21999$1VmeqK
                  ((case-lambda
                     ((g$t$22000$1VmeqK)
                      (if g$t$22000$1VmeqK
                        g$t$22000$1VmeqK
                        (begin
                          '#f
                          (g$ratnum?$21705$1VmeqK
                            g$obj$21998$1VmeqK)))))
                   (g$bignum?$21700$1VmeqK g$obj$21998$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$21998$1VmeqK))
          '#t
          (if (if ((case-lambda
                     ((g$t$22001$1VmeqK)
                      (if g$t$22001$1VmeqK
                        g$t$22001$1VmeqK
                        ((case-lambda
                           ((g$t$22002$1VmeqK)
                            (if g$t$22002$1VmeqK
                              g$t$22002$1VmeqK
                              (begin
                                '#f
                                (g$flonum?$21185$1VmeqK
                                  g$obj$21998$1VmeqK)))))
                         (g$rectnum?$21701$1VmeqK
                           g$obj$21998$1VmeqK)))))
                   (g$complexnum?$21708$1VmeqK g$obj$21998$1VmeqK))
                (if (g$finite?$21728$1VmeqK g$obj$21998$1VmeqK)
                  (begin
                    '#f
                    (not (g$nan?$21727$1VmeqK g$obj$21998$1VmeqK)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$22003$1VmeqK)
                (g$zero?$21739$1VmeqK g$i$22003$1VmeqK)))
             (g$imag-part$21859$1VmeqK g$obj$21998$1VmeqK))
            (begin '#f '#f))))))
   (g$integer-valued?$21738$1VmeqK
     g$integer-valued?$22200$1VmeqK
     (case-lambda
       ((g$obj$22004$1VmeqK)
        (if ((case-lambda
               ((g$t$22005$1VmeqK)
                (if g$t$22005$1VmeqK
                  g$t$22005$1VmeqK
                  (begin
                    '#f
                    (g$bignum?$21700$1VmeqK g$obj$22004$1VmeqK)))))
             (g$fixnum?$21184$1VmeqK g$obj$22004$1VmeqK))
          '#t
          (if (if ((case-lambda
                     ((g$t$22006$1VmeqK)
                      (if g$t$22006$1VmeqK
                        g$t$22006$1VmeqK
                        ((case-lambda
                           ((g$t$22007$1VmeqK)
                            (if g$t$22007$1VmeqK
                              g$t$22007$1VmeqK
                              ((case-lambda
                                 ((g$t$22008$1VmeqK)
                                  (if g$t$22008$1VmeqK
                                    g$t$22008$1VmeqK
                                    (begin
                                      '#f
                                      (g$flonum?$21185$1VmeqK
                                        g$obj$22004$1VmeqK)))))
                               (g$rectnum?$21701$1VmeqK
                                 g$obj$22004$1VmeqK)))))
                         (g$complexnum?$21708$1VmeqK
                           g$obj$22004$1VmeqK)))))
                   (g$ratnum?$21705$1VmeqK g$obj$22004$1VmeqK))
                (if (g$finite?$21728$1VmeqK g$obj$22004$1VmeqK)
                  (begin
                    '#f
                    (not (g$nan?$21727$1VmeqK g$obj$22004$1VmeqK)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$22009$1VmeqK)
                (if (g$zero?$21739$1VmeqK g$i$22009$1VmeqK)
                  (begin
                    '#f
                    (g$=$21846$1VmeqK
                      (g$denominator$21857$1VmeqK
                        (g$real-part$21858$1VmeqK g$obj$22004$1VmeqK))
                      '1))
                  '#f)))
             (g$imag-part$21859$1VmeqK g$obj$22004$1VmeqK))
            (begin '#f '#f))))))
   (g$zero?$21739$1VmeqK
     g$zero?$22201$1VmeqK
     (case-lambda
       ((g$num$22010$1VmeqK)
        (begin
          (if (not (g$number?$21726$1VmeqK g$num$22010$1VmeqK))
            (assertion-violation
              'zero?
              '"not a number"
              g$num$22010$1VmeqK)
            (void))
          (g$=$21846$1VmeqK g$num$22010$1VmeqK '0)))))
   (g$positive?$21740$1VmeqK
     g$positive?$22202$1VmeqK
     (case-lambda
       ((g$num$22011$1VmeqK)
        (begin
          (if (not (g$number?$21726$1VmeqK g$num$22011$1VmeqK))
            (assertion-violation
              'positive?
              '"not a number"
              g$num$22011$1VmeqK)
            (void))
          (g$>$21849$1VmeqK g$num$22011$1VmeqK '0)))))
   (g$negative?$21741$1VmeqK
     g$negative?$22203$1VmeqK
     (case-lambda
       ((g$num$22012$1VmeqK)
        (begin
          (if (not (g$number?$21726$1VmeqK g$num$22012$1VmeqK))
            (assertion-violation
              'negative?
              '"not a number"
              g$num$22012$1VmeqK)
            (void))
          (g$<$21847$1VmeqK g$num$22012$1VmeqK '0)))))
   (g$inexact$21742$1VmeqK
     g$inexact$22204$1VmeqK
     (case-lambda
       ((g$num$22013$1VmeqK)
        (if ((case-lambda
               ((g$t$22014$1VmeqK)
                (if g$t$22014$1VmeqK
                  g$t$22014$1VmeqK
                  (begin
                    '#f
                    (g$flonum?$21185$1VmeqK g$num$22013$1VmeqK)))))
             (g$complexnum?$21708$1VmeqK g$num$22013$1VmeqK))
          g$num$22013$1VmeqK
          (if ((case-lambda
                 ((g$t$22015$1VmeqK)
                  (if g$t$22015$1VmeqK
                    g$t$22015$1VmeqK
                    (begin
                      '#f
                      (g$ratnum?$21705$1VmeqK g$num$22013$1VmeqK)))))
               (g$exact-integer?$21855$1VmeqK g$num$22013$1VmeqK))
            (g$real->flonum$21724$1VmeqK g$num$22013$1VmeqK)
            (if (g$rectnum?$21701$1VmeqK g$num$22013$1VmeqK)
              (g$rectnum->complexnum$21720$1VmeqK g$num$22013$1VmeqK)
              (begin
                '#f
                (assertion-violation
                  'inexact
                  '"not a number"
                  g$num$22013$1VmeqK))))))))
   (g$exact$21743$1VmeqK
     g$exact$22205$1VmeqK
     (case-lambda
       ((g$num$22016$1VmeqK)
        (if (g$complexnum?$21708$1VmeqK g$num$22016$1VmeqK)
          (if (g$zero?$21739$1VmeqK
                (g$complexnum-imag-part$21710$1VmeqK
                  g$num$22016$1VmeqK))
            (g$exact$21743$1VmeqK
              (g$complexnum-real-part$21711$1VmeqK g$num$22016$1VmeqK))
            ((case-lambda
               ((g$t$22017$1VmeqK)
                (if g$t$22017$1VmeqK
                  g$t$22017$1VmeqK
                  (begin
                    '#f
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"no exact equivalent"
                        g$num$22016$1VmeqK))))))
             ((case-lambda
                ((g$i$22018$1VmeqK g$r$22019$1VmeqK)
                 (if (g$rational?$21734$1VmeqK g$r$22019$1VmeqK)
                   (if (g$rational?$21734$1VmeqK g$i$22018$1VmeqK)
                     (begin
                       '#f
                       (g$make-rectnum$21702$1VmeqK
                         (g$flonum->ratnum$21715$1VmeqK
                           g$r$22019$1VmeqK)
                         (g$flonum->ratnum$21715$1VmeqK
                           g$i$22018$1VmeqK)))
                     '#f)
                   '#f)))
              (g$complexnum-imag-part$21710$1VmeqK g$num$22016$1VmeqK)
              (g$complexnum-real-part$21711$1VmeqK
                g$num$22016$1VmeqK))))
          (if (g$flonum?$21185$1VmeqK g$num$22016$1VmeqK)
            (if ((case-lambda
                   ((g$t$22020$1VmeqK)
                    (if g$t$22020$1VmeqK
                      g$t$22020$1VmeqK
                      (begin
                        '#f
                        (g$flinfinite?$27054$1VmeqK
                          g$num$22016$1VmeqK)))))
                 (g$flnan?$27055$1VmeqK g$num$22016$1VmeqK))
              (assertion-violation
                'exact
                '"no exact equivalent"
                g$num$22016$1VmeqK)
              (g$flonum->ratnum$21715$1VmeqK g$num$22016$1VmeqK))
            (if (g$bignum?$21700$1VmeqK g$num$22016$1VmeqK)
              (if (g$fx<=?$25495$1VmeqK
                    (g$fixnum-width$21186$1VmeqK)
                    (g$bitwise-length$23239$1VmeqK g$num$22016$1VmeqK))
                g$num$22016$1VmeqK
                (g$bignum->fixnum$21714$1VmeqK g$num$22016$1VmeqK))
              (if (g$ratnum?$21705$1VmeqK g$num$22016$1VmeqK)
                (if (g$=$21846$1VmeqK
                      (g$ratnum-denominator$21706$1VmeqK
                        g$num$22016$1VmeqK)
                      '1)
                  (g$exact$21743$1VmeqK
                    (g$ratnum-numerator$21707$1VmeqK
                      g$num$22016$1VmeqK))
                  g$num$22016$1VmeqK)
                (if (g$rectnum?$21701$1VmeqK g$num$22016$1VmeqK)
                  (if (g$zero?$21739$1VmeqK
                        (g$rectnum-imag-part$21703$1VmeqK
                          g$num$22016$1VmeqK))
                    (g$exact$21743$1VmeqK
                      (g$rectnum-real-part$21704$1VmeqK
                        g$num$22016$1VmeqK))
                    g$num$22016$1VmeqK)
                  (if (g$fixnum?$21184$1VmeqK g$num$22016$1VmeqK)
                    g$num$22016$1VmeqK
                    (begin
                      '#f
                      (assertion-violation
                        'exact
                        '"not a number"
                        g$num$22016$1VmeqK)))))))))))
   (g$hex-char$21744$1VmeqK
     g$hex-char$22206$1VmeqK
     (case-lambda
       ((g$num$22021$1VmeqK)
        (integer->char
          (+ g$num$22021$1VmeqK
             (char->integer
               (if (g$fx<?$25494$1VmeqK g$num$22021$1VmeqK '10)
                 '#\0
                 '#\W)))))))
   (g$fixnum->string$21745$1VmeqK
     g$fixnum->string$22207$1VmeqK
     (case-lambda
       ((g$num$22022$1VmeqK g$radix$22023$1VmeqK)
        (if (g$fxnegative?$25514$1VmeqK g$num$22022$1VmeqK)
          (string-append
            '"-"
            (g$number->string$21747$1VmeqK
              (g$abs$21905$1VmeqK g$num$22022$1VmeqK)
              g$radix$22023$1VmeqK))
          (clr-call-internal
            'System.Convert
            '"ToString(Int32,Int32)"
            '()
            g$num$22022$1VmeqK
            g$radix$22023$1VmeqK)))))
   (g$bignum->string$21746$1VmeqK
     g$bignum->string$22208$1VmeqK
     (case-lambda
       ((g$num$22024$1VmeqK g$radix$22025$1VmeqK)
        ((case-lambda
           ((g$neg?$22026$1VmeqK)
            ((case-lambda
               ((g$num$22027$1VmeqK)
                ((case-lambda
                   ((g$out$22028$1VmeqK)
                    (if g$neg?$22026$1VmeqK
                      (string-append '"-" g$out$22028$1VmeqK)
                      g$out$22028$1VmeqK)))
                 ((letrec ((g$f$22029$1VmeqK
                             (case-lambda
                               ((g$num$22030$1VmeqK g$a$22031$1VmeqK)
                                (if (g$zero?$21739$1VmeqK
                                      g$num$22030$1VmeqK)
                                  (apply string g$a$22031$1VmeqK)
                                  (g$f$22029$1VmeqK
                                    (g$div$21904$1VmeqK
                                      g$num$22030$1VmeqK
                                      g$radix$22025$1VmeqK)
                                    (cons
                                      (g$hex-char$21744$1VmeqK
                                        (g$mod$21188$1VmeqK
                                          g$num$22030$1VmeqK
                                          g$radix$22025$1VmeqK))
                                      g$a$22031$1VmeqK)))))))
                    g$f$22029$1VmeqK)
                  g$num$22027$1VmeqK
                  '()))))
             (g$abs$21905$1VmeqK g$num$22024$1VmeqK))))
         (g$negative?$21741$1VmeqK g$num$22024$1VmeqK)))))
   (g$number->string$21747$1VmeqK
     g$number->string$22209$1VmeqK
     (case-lambda
       ((g$num$22032$1VmeqK)
        (g$number->string$21747$1VmeqK g$num$22032$1VmeqK '10))
       ((g$num$22033$1VmeqK g$radix$22034$1VmeqK g$prec$22035$1VmeqK)
        (g$number->string$21747$1VmeqK
          g$num$22033$1VmeqK
          g$radix$22034$1VmeqK))
       ((g$num$22036$1VmeqK g$radix$22037$1VmeqK)
        (if (g$fixnum?$21184$1VmeqK g$num$22036$1VmeqK)
          (g$fixnum->string$21745$1VmeqK
            g$num$22036$1VmeqK
            g$radix$22037$1VmeqK)
          (if (g$flonum?$21185$1VmeqK g$num$22036$1VmeqK)
            (begin
              (if (not (g$=$21846$1VmeqK g$radix$22037$1VmeqK '10))
                (assertion-violation
                  'number->string
                  '"invalid radix"
                  g$radix$22037$1VmeqK)
                (void))
              (flonum->string g$num$22036$1VmeqK))
            (if (g$ratnum?$21705$1VmeqK g$num$22036$1VmeqK)
              (string-append
                (if (g$negative?$21741$1VmeqK g$num$22036$1VmeqK)
                  '"-"
                  '"")
                (g$number->string$21747$1VmeqK
                  (g$abs$21905$1VmeqK
                    (g$ratnum-numerator$21707$1VmeqK
                      g$num$22036$1VmeqK))
                  g$radix$22037$1VmeqK)
                '"/"
                (g$number->string$21747$1VmeqK
                  (g$abs$21905$1VmeqK
                    (g$ratnum-denominator$21706$1VmeqK
                      g$num$22036$1VmeqK))
                  g$radix$22037$1VmeqK))
              (if (g$bignum?$21700$1VmeqK g$num$22036$1VmeqK)
                (g$bignum->string$21746$1VmeqK
                  g$num$22036$1VmeqK
                  g$radix$22037$1VmeqK)
                (if (g$complexnum?$21708$1VmeqK g$num$22036$1VmeqK)
                  (begin
                    (if (not (g$=$21846$1VmeqK
                               g$radix$22037$1VmeqK
                               '10))
                      (assertion-violation
                        'number->string
                        '"invalid radix"
                        g$radix$22037$1VmeqK)
                      (void))
                    (string-append
                      (if (g$zero?$21739$1VmeqK
                            (g$real-part$21858$1VmeqK
                              g$num$22036$1VmeqK))
                        '""
                        (g$number->string$21747$1VmeqK
                          (g$real-part$21858$1VmeqK g$num$22036$1VmeqK)
                          g$radix$22037$1VmeqK))
                      (if ((case-lambda
                             ((g$i$22038$1VmeqK)
                              ((case-lambda
                                 ((g$t$22039$1VmeqK)
                                  (if g$t$22039$1VmeqK
                                    g$t$22039$1VmeqK
                                    ((case-lambda
                                       ((g$t$22040$1VmeqK)
                                        (if g$t$22040$1VmeqK
                                          g$t$22040$1VmeqK
                                          (begin
                                            '#f
                                            (g$infinite?$21729$1VmeqK
                                              g$i$22038$1VmeqK)))))
                                     (g$nan?$21727$1VmeqK
                                       g$i$22038$1VmeqK)))))
                               (g$negative?$21741$1VmeqK
                                 g$i$22038$1VmeqK))))
                           (g$imag-part$21859$1VmeqK
                             g$num$22036$1VmeqK))
                        '""
                        '"+")
                      (if (g$=$21846$1VmeqK
                            '1.0
                            (g$imag-part$21859$1VmeqK
                              g$num$22036$1VmeqK))
                        '""
                        (g$number->string$21747$1VmeqK
                          (g$imag-part$21859$1VmeqK g$num$22036$1VmeqK)
                          g$radix$22037$1VmeqK))
                      '"i"))
                  (if (g$rectnum?$21701$1VmeqK g$num$22036$1VmeqK)
                    (string-append
                      (if (g$zero?$21739$1VmeqK
                            (g$real-part$21858$1VmeqK
                              g$num$22036$1VmeqK))
                        '""
                        (g$number->string$21747$1VmeqK
                          (g$real-part$21858$1VmeqK g$num$22036$1VmeqK)
                          g$radix$22037$1VmeqK))
                      (if (g$negative?$21741$1VmeqK
                            (g$imag-part$21859$1VmeqK
                              g$num$22036$1VmeqK))
                        '""
                        '"+")
                      (if (g$=$21846$1VmeqK
                            '1
                            (g$imag-part$21859$1VmeqK
                              g$num$22036$1VmeqK))
                        '""
                        (g$number->string$21747$1VmeqK
                          (g$imag-part$21859$1VmeqK g$num$22036$1VmeqK)
                          g$radix$22037$1VmeqK))
                      '"i")
                    (begin
                      '#f
                      (assertion-violation
                        'number->string
                        '"not a number"
                        g$num$22036$1VmeqK)))))))))))
   (g$=$21846$1VmeqK
     g$=$22210$1VmeqK
     (case-lambda
       ((g$a$22041$1VmeqK g$b$22042$1VmeqK)
        (if (if (g$real?$21733$1VmeqK g$a$22041$1VmeqK)
              (if (g$real?$21733$1VmeqK g$b$22042$1VmeqK)
                (if (g$finite?$21728$1VmeqK g$a$22041$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$b$22042$1VmeqK)
                    (if (not (g$nan?$21727$1VmeqK g$a$22041$1VmeqK))
                      (begin
                        '#f
                        (not (g$nan?$21727$1VmeqK g$b$22042$1VmeqK)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$21743$1VmeqK g$a$22041$1VmeqK)
              (g$exact$21743$1VmeqK g$b$22042$1VmeqK))
            '0)
          (if ((case-lambda
                 ((g$t$22043$1VmeqK)
                  (if g$t$22043$1VmeqK
                    g$t$22043$1VmeqK
                    (begin
                      '#f
                      (if (g$real?$21733$1VmeqK g$b$22042$1VmeqK)
                        (begin
                          '#f
                          (g$nan?$21727$1VmeqK g$b$22042$1VmeqK))
                        '#f)))))
               (if (g$real?$21733$1VmeqK g$a$22041$1VmeqK)
                 (begin '#f (g$nan?$21727$1VmeqK g$a$22041$1VmeqK))
                 '#f))
            '#f
            (if (if (g$number?$21726$1VmeqK g$a$22041$1VmeqK)
                  (begin '#f (g$number?$21726$1VmeqK g$b$22042$1VmeqK))
                  '#f)
              (inexact=?
                (g$inexact$21742$1VmeqK g$a$22041$1VmeqK)
                (g$inexact$21742$1VmeqK g$b$22042$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  '=
                  '"not number arguments"
                  g$a$22041$1VmeqK
                  g$b$22042$1VmeqK))))))
       ((g$x1$22044$1VmeqK g$x2$22045$1VmeqK . g$rest$22046$1VmeqK)
        ((letrec ((g$f$22047$1VmeqK
                    (case-lambda
                      ((g$a$22048$1VmeqK g$b$22049$1VmeqK)
                       (if (null? g$b$22049$1VmeqK)
                         '#t
                         (if (g$=$21846$1VmeqK
                               g$a$22048$1VmeqK
                               ($car g$b$22049$1VmeqK))
                           (g$f$22047$1VmeqK
                             ($car g$b$22049$1VmeqK)
                             ($cdr g$b$22049$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$22047$1VmeqK)
         g$x1$22044$1VmeqK
         (cons g$x2$22045$1VmeqK g$rest$22046$1VmeqK)))))
   (g$<$21847$1VmeqK
     g$<$22211$1VmeqK
     (case-lambda
       ((g$a$22050$1VmeqK g$b$22051$1VmeqK)
        (if (if (g$real?$21733$1VmeqK g$a$22050$1VmeqK)
              (if (g$real?$21733$1VmeqK g$b$22051$1VmeqK)
                (if (g$finite?$21728$1VmeqK g$a$22050$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$b$22051$1VmeqK)
                    (if (not (g$nan?$21727$1VmeqK g$a$22050$1VmeqK))
                      (begin
                        '#f
                        (not (g$nan?$21727$1VmeqK g$b$22051$1VmeqK)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$21743$1VmeqK g$a$22050$1VmeqK)
              (g$exact$21743$1VmeqK g$b$22051$1VmeqK))
            '0)
          (if ((case-lambda
                 ((g$t$22052$1VmeqK)
                  (if g$t$22052$1VmeqK
                    g$t$22052$1VmeqK
                    (begin
                      '#f
                      (if (g$real?$21733$1VmeqK g$b$22051$1VmeqK)
                        (begin
                          '#f
                          (g$nan?$21727$1VmeqK g$b$22051$1VmeqK))
                        '#f)))))
               (if (g$real?$21733$1VmeqK g$a$22050$1VmeqK)
                 (begin '#f (g$nan?$21727$1VmeqK g$a$22050$1VmeqK))
                 '#f))
            '#f
            (if (if (g$real?$21733$1VmeqK g$a$22050$1VmeqK)
                  (begin '#f (g$real?$21733$1VmeqK g$b$22051$1VmeqK))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$21742$1VmeqK g$a$22050$1VmeqK)
                  (g$inexact$21742$1VmeqK g$b$22051$1VmeqK))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<
                  '"not real arguments"
                  g$a$22050$1VmeqK
                  g$b$22051$1VmeqK))))))
       ((g$x1$22053$1VmeqK g$x2$22054$1VmeqK . g$rest$22055$1VmeqK)
        ((letrec ((g$f$22056$1VmeqK
                    (case-lambda
                      ((g$a$22057$1VmeqK g$b$22058$1VmeqK)
                       (if (null? g$b$22058$1VmeqK)
                         '#t
                         (if (g$<$21847$1VmeqK
                               g$a$22057$1VmeqK
                               ($car g$b$22058$1VmeqK))
                           (g$f$22056$1VmeqK
                             ($car g$b$22058$1VmeqK)
                             ($cdr g$b$22058$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$22056$1VmeqK)
         g$x1$22053$1VmeqK
         (cons g$x2$22054$1VmeqK g$rest$22055$1VmeqK)))))
   (g$<=$21848$1VmeqK
     g$<=$22212$1VmeqK
     (case-lambda
       ((g$a$22059$1VmeqK g$b$22060$1VmeqK)
        (if (if (g$real?$21733$1VmeqK g$a$22059$1VmeqK)
              (if (g$real?$21733$1VmeqK g$b$22060$1VmeqK)
                (if (g$finite?$21728$1VmeqK g$a$22059$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$b$22060$1VmeqK)
                    (if (not (g$nan?$21727$1VmeqK g$a$22059$1VmeqK))
                      (begin
                        '#f
                        (not (g$nan?$21727$1VmeqK g$b$22060$1VmeqK)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$21743$1VmeqK g$a$22059$1VmeqK)
              (g$exact$21743$1VmeqK g$b$22060$1VmeqK))
            '0)
          (if ((case-lambda
                 ((g$t$22061$1VmeqK)
                  (if g$t$22061$1VmeqK
                    g$t$22061$1VmeqK
                    (begin
                      '#f
                      (if (g$real?$21733$1VmeqK g$b$22060$1VmeqK)
                        (begin
                          '#f
                          (g$nan?$21727$1VmeqK g$b$22060$1VmeqK))
                        '#f)))))
               (if (g$real?$21733$1VmeqK g$a$22059$1VmeqK)
                 (begin '#f (g$nan?$21727$1VmeqK g$a$22059$1VmeqK))
                 '#f))
            '#f
            (if (if (g$real?$21733$1VmeqK g$a$22059$1VmeqK)
                  (begin '#f (g$real?$21733$1VmeqK g$b$22060$1VmeqK))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$21742$1VmeqK g$a$22059$1VmeqK)
                  (g$inexact$21742$1VmeqK g$b$22060$1VmeqK))
                '0)
              (begin
                '#f
                (assertion-violation
                  '<=
                  '"not real arguments"
                  g$a$22059$1VmeqK
                  g$b$22060$1VmeqK))))))
       ((g$x1$22062$1VmeqK g$x2$22063$1VmeqK . g$rest$22064$1VmeqK)
        ((letrec ((g$f$22065$1VmeqK
                    (case-lambda
                      ((g$a$22066$1VmeqK g$b$22067$1VmeqK)
                       (if (null? g$b$22067$1VmeqK)
                         '#t
                         (if (g$<=$21848$1VmeqK
                               g$a$22066$1VmeqK
                               ($car g$b$22067$1VmeqK))
                           (g$f$22065$1VmeqK
                             ($car g$b$22067$1VmeqK)
                             ($cdr g$b$22067$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$22065$1VmeqK)
         g$x1$22062$1VmeqK
         (cons g$x2$22063$1VmeqK g$rest$22064$1VmeqK)))))
   (g$>$21849$1VmeqK
     g$>$22213$1VmeqK
     (case-lambda
       ((g$a$22068$1VmeqK g$b$22069$1VmeqK)
        (if (if (g$real?$21733$1VmeqK g$a$22068$1VmeqK)
              (if (g$real?$21733$1VmeqK g$b$22069$1VmeqK)
                (if (g$finite?$21728$1VmeqK g$a$22068$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$b$22069$1VmeqK)
                    (if (not (g$nan?$21727$1VmeqK g$a$22068$1VmeqK))
                      (begin
                        '#f
                        (not (g$nan?$21727$1VmeqK g$b$22069$1VmeqK)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$21743$1VmeqK g$a$22068$1VmeqK)
              (g$exact$21743$1VmeqK g$b$22069$1VmeqK))
            '0)
          (if ((case-lambda
                 ((g$t$22070$1VmeqK)
                  (if g$t$22070$1VmeqK
                    g$t$22070$1VmeqK
                    (begin
                      '#f
                      (if (g$real?$21733$1VmeqK g$b$22069$1VmeqK)
                        (begin
                          '#f
                          (g$nan?$21727$1VmeqK g$b$22069$1VmeqK))
                        '#f)))))
               (if (g$real?$21733$1VmeqK g$a$22068$1VmeqK)
                 (begin '#f (g$nan?$21727$1VmeqK g$a$22068$1VmeqK))
                 '#f))
            '#f
            (if (if (g$real?$21733$1VmeqK g$a$22068$1VmeqK)
                  (begin '#f (g$real?$21733$1VmeqK g$b$22069$1VmeqK))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$21742$1VmeqK g$a$22068$1VmeqK)
                  (g$inexact$21742$1VmeqK g$b$22069$1VmeqK))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>
                  '"not real arguments"
                  g$a$22068$1VmeqK
                  g$b$22069$1VmeqK))))))
       ((g$x1$22071$1VmeqK g$x2$22072$1VmeqK . g$rest$22073$1VmeqK)
        ((letrec ((g$f$22074$1VmeqK
                    (case-lambda
                      ((g$a$22075$1VmeqK g$b$22076$1VmeqK)
                       (if (null? g$b$22076$1VmeqK)
                         '#t
                         (if (g$>$21849$1VmeqK
                               g$a$22075$1VmeqK
                               ($car g$b$22076$1VmeqK))
                           (g$f$22074$1VmeqK
                             ($car g$b$22076$1VmeqK)
                             ($cdr g$b$22076$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$22074$1VmeqK)
         g$x1$22071$1VmeqK
         (cons g$x2$22072$1VmeqK g$rest$22073$1VmeqK)))))
   (g$>=$21850$1VmeqK
     g$>=$22214$1VmeqK
     (case-lambda
       ((g$a$22077$1VmeqK g$b$22078$1VmeqK)
        (if (if (g$real?$21733$1VmeqK g$a$22077$1VmeqK)
              (if (g$real?$21733$1VmeqK g$b$22078$1VmeqK)
                (if (g$finite?$21728$1VmeqK g$a$22077$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$b$22078$1VmeqK)
                    (if (not (g$nan?$21727$1VmeqK g$a$22077$1VmeqK))
                      (begin
                        '#f
                        (not (g$nan?$21727$1VmeqK g$b$22078$1VmeqK)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$21743$1VmeqK g$a$22077$1VmeqK)
              (g$exact$21743$1VmeqK g$b$22078$1VmeqK))
            '0)
          (if ((case-lambda
                 ((g$t$22079$1VmeqK)
                  (if g$t$22079$1VmeqK
                    g$t$22079$1VmeqK
                    (begin
                      '#f
                      (if (g$real?$21733$1VmeqK g$b$22078$1VmeqK)
                        (begin
                          '#f
                          (g$nan?$21727$1VmeqK g$b$22078$1VmeqK))
                        '#f)))))
               (if (g$real?$21733$1VmeqK g$a$22077$1VmeqK)
                 (begin '#f (g$nan?$21727$1VmeqK g$a$22077$1VmeqK))
                 '#f))
            '#f
            (if (if (g$real?$21733$1VmeqK g$a$22077$1VmeqK)
                  (begin '#f (g$real?$21733$1VmeqK g$b$22078$1VmeqK))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$21742$1VmeqK g$a$22077$1VmeqK)
                  (g$inexact$21742$1VmeqK g$b$22078$1VmeqK))
                '0)
              (begin
                '#f
                (assertion-violation
                  '>=
                  '"not real arguments"
                  g$a$22077$1VmeqK
                  g$b$22078$1VmeqK))))))
       ((g$x1$22080$1VmeqK g$x2$22081$1VmeqK . g$rest$22082$1VmeqK)
        ((letrec ((g$f$22083$1VmeqK
                    (case-lambda
                      ((g$a$22084$1VmeqK g$b$22085$1VmeqK)
                       (if (null? g$b$22085$1VmeqK)
                         '#t
                         (if (g$>=$21850$1VmeqK
                               g$a$22084$1VmeqK
                               ($car g$b$22085$1VmeqK))
                           (g$f$22083$1VmeqK
                             ($car g$b$22085$1VmeqK)
                             ($cdr g$b$22085$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$22083$1VmeqK)
         g$x1$22080$1VmeqK
         (cons g$x2$22081$1VmeqK g$rest$22082$1VmeqK)))))
   (g$make-rectangular$21851$1VmeqK
     g$make-rectangular$22215$1VmeqK
     (case-lambda
       ((g$r1$22086$1VmeqK g$r2$22087$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$r1$22086$1VmeqK))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r1$22086$1VmeqK)
            (void))
          (if (not (g$real?$21733$1VmeqK g$r2$22087$1VmeqK))
            (assertion-violation
              'make-rectangular
              '"not a real"
              g$r2$22087$1VmeqK)
            (void))
          (if (if (g$exact?$21730$1VmeqK g$r1$22086$1VmeqK)
                (begin '#f (g$exact?$21730$1VmeqK g$r2$22087$1VmeqK))
                '#f)
            (g$make-rectnum$21702$1VmeqK
              (g$->ratnum$21722$1VmeqK g$r1$22086$1VmeqK)
              (g$->ratnum$21722$1VmeqK g$r2$22087$1VmeqK))
            (if (if (g$exact?$21730$1VmeqK g$r2$22087$1VmeqK)
                  (begin '#f (g$zero?$21739$1VmeqK g$r2$22087$1VmeqK))
                  '#f)
              g$r1$22086$1VmeqK
              (begin
                '#f
                (g$make-complexnum$21709$1VmeqK
                  (g$inexact$21742$1VmeqK g$r1$22086$1VmeqK)
                  (g$inexact$21742$1VmeqK g$r2$22087$1VmeqK)))))))))
   (g$make-polar$21852$1VmeqK
     g$make-polar$22216$1VmeqK
     (case-lambda
       ((g$r1$22088$1VmeqK g$r2$22089$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$r1$22088$1VmeqK))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r1$22088$1VmeqK)
            (void))
          (if (not (g$real?$21733$1VmeqK g$r2$22089$1VmeqK))
            (assertion-violation
              'make-polar
              '"not a real"
              g$r2$22089$1VmeqK)
            (void))
          (if (if (g$exact?$21730$1VmeqK g$r2$22089$1VmeqK)
                (begin '#f (g$zero?$21739$1VmeqK g$r2$22089$1VmeqK))
                '#f)
            g$r1$22088$1VmeqK
            (* g$r1$22088$1VmeqK
               (g$make-rectangular$21851$1VmeqK
                 (g$cos$21897$1VmeqK g$r2$22089$1VmeqK)
                 (g$sin$21894$1VmeqK g$r2$22089$1VmeqK))))))))
   (g$angle$21853$1VmeqK
     g$angle$22217$1VmeqK
     (case-lambda
       ((g$num$22090$1VmeqK)
        (begin
          (if (not (g$number?$21726$1VmeqK g$num$22090$1VmeqK))
            (assertion-violation
              'angle
              '"not a number"
              g$num$22090$1VmeqK)
            (void))
          (if (g$rectnum?$21701$1VmeqK g$num$22090$1VmeqK)
            (g$angle$21853$1VmeqK
              (g$inexact$21742$1VmeqK g$num$22090$1VmeqK))
            (g$atan$21902$1VmeqK
              (g$imag-part$21859$1VmeqK g$num$22090$1VmeqK)
              (g$real-part$21858$1VmeqK g$num$22090$1VmeqK)))))))
   (g$magnitude$21854$1VmeqK
     g$magnitude$22218$1VmeqK
     (case-lambda
       ((g$num$22091$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22091$1VmeqK)
          (g$magnitude$21854$1VmeqK
            (g$inexact$21742$1VmeqK g$num$22091$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22091$1VmeqK)
            ((case-lambda
               ((g$i$22092$1VmeqK g$r$22093$1VmeqK)
                (g$sqrt$21910$1VmeqK
                  (+ (* g$i$22092$1VmeqK g$i$22092$1VmeqK)
                     (* g$r$22093$1VmeqK g$r$22093$1VmeqK)))))
             (g$imag-part$21859$1VmeqK g$num$22091$1VmeqK)
             (g$real-part$21858$1VmeqK g$num$22091$1VmeqK))
            (if (g$real?$21733$1VmeqK g$num$22091$1VmeqK)
              (g$abs$21905$1VmeqK g$num$22091$1VmeqK)
              (begin
                '#f
                (assertion-violation
                  'magnitude
                  '"not a number"
                  g$num$22091$1VmeqK))))))))
   (g$exact-integer?$21855$1VmeqK
     g$exact-integer?$22219$1VmeqK
     (case-lambda
       ((g$obj$22094$1VmeqK)
        ((case-lambda
           ((g$t$22095$1VmeqK)
            (if g$t$22095$1VmeqK
              g$t$22095$1VmeqK
              (begin '#f (g$bignum?$21700$1VmeqK g$obj$22094$1VmeqK)))))
         (g$fixnum?$21184$1VmeqK g$obj$22094$1VmeqK)))))
   (g$numerator$21856$1VmeqK
     g$numerator$22220$1VmeqK
     (case-lambda
       ((g$num$22096$1VmeqK)
        (if (g$exact-integer?$21855$1VmeqK g$num$22096$1VmeqK)
          g$num$22096$1VmeqK
          (if (g$ratnum?$21705$1VmeqK g$num$22096$1VmeqK)
            (g$exact$21743$1VmeqK
              (g$ratnum-numerator$21707$1VmeqK g$num$22096$1VmeqK))
            (if (if (g$real?$21733$1VmeqK g$num$22096$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$num$22096$1VmeqK)
                    (begin
                      '#f
                      (not (g$nan?$21727$1VmeqK g$num$22096$1VmeqK)))
                    '#f)
                  '#f)
              (g$inexact$21742$1VmeqK
                (g$numerator$21856$1VmeqK
                  (g$exact$21743$1VmeqK g$num$22096$1VmeqK)))
              (begin
                '#f
                (assertion-violation
                  'numerator
                  '"not a real"
                  g$num$22096$1VmeqK))))))))
   (g$denominator$21857$1VmeqK
     g$denominator$22221$1VmeqK
     (case-lambda
       ((g$num$22097$1VmeqK)
        (if (g$exact-integer?$21855$1VmeqK g$num$22097$1VmeqK)
          '1
          (if (g$ratnum?$21705$1VmeqK g$num$22097$1VmeqK)
            (g$exact$21743$1VmeqK
              (g$ratnum-denominator$21706$1VmeqK g$num$22097$1VmeqK))
            (if (if (g$real?$21733$1VmeqK g$num$22097$1VmeqK)
                  (if (g$finite?$21728$1VmeqK g$num$22097$1VmeqK)
                    (begin
                      '#f
                      (not (g$nan?$21727$1VmeqK g$num$22097$1VmeqK)))
                    '#f)
                  '#f)
              (g$inexact$21742$1VmeqK
                (g$denominator$21857$1VmeqK
                  (g$exact$21743$1VmeqK g$num$22097$1VmeqK)))
              (begin
                '#f
                (assertion-violation
                  'denominator
                  '"not a real"
                  g$num$22097$1VmeqK))))))))
   (g$real-part$21858$1VmeqK
     g$real-part$22222$1VmeqK
     (case-lambda
       ((g$num$22098$1VmeqK)
        (if (g$complexnum?$21708$1VmeqK g$num$22098$1VmeqK)
          (g$complexnum-real-part$21711$1VmeqK g$num$22098$1VmeqK)
          (if (g$rectnum?$21701$1VmeqK g$num$22098$1VmeqK)
            (g$exact$21743$1VmeqK
              (g$rectnum-real-part$21704$1VmeqK g$num$22098$1VmeqK))
            (if (g$real?$21733$1VmeqK g$num$22098$1VmeqK)
              g$num$22098$1VmeqK
              (begin
                '#f
                (assertion-violation
                  'real-part
                  '"not a number"
                  g$num$22098$1VmeqK))))))))
   (g$imag-part$21859$1VmeqK
     g$imag-part$22223$1VmeqK
     (case-lambda
       ((g$num$22099$1VmeqK)
        (if (g$complexnum?$21708$1VmeqK g$num$22099$1VmeqK)
          (g$complexnum-imag-part$21710$1VmeqK g$num$22099$1VmeqK)
          (if (g$rectnum?$21701$1VmeqK g$num$22099$1VmeqK)
            (g$exact$21743$1VmeqK
              (g$rectnum-imag-part$21703$1VmeqK g$num$22099$1VmeqK))
            (if (g$real?$21733$1VmeqK g$num$22099$1VmeqK)
              '0
              (begin
                '#f
                (assertion-violation
                  'imag-part
                  '"not a number"
                  g$num$22099$1VmeqK))))))))
   (g$exp$21893$1VmeqK
     g$exp$22224$1VmeqK
     (case-lambda
       ((g$num$22100$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22100$1VmeqK)
          (g$exp$21893$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22100$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22100$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'exp
              '()
              g$num$22100$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22100$1VmeqK)
              (clr-call-internal
                'System.Math
                'exp
                '()
                (g$inexact$21742$1VmeqK g$num$22100$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'exp
                  '"not a number"
                  g$num$22100$1VmeqK))))))))
   (g$sin$21894$1VmeqK
     g$sin$22225$1VmeqK
     (case-lambda
       ((g$num$22101$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22101$1VmeqK)
          (g$sin$21894$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22101$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22101$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sin
              '()
              g$num$22101$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22101$1VmeqK)
              (clr-call-internal
                'System.Math
                'sin
                '()
                (g$inexact$21742$1VmeqK g$num$22101$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'sin
                  '"not a number"
                  g$num$22101$1VmeqK))))))))
   (g$asin$21895$1VmeqK
     g$asin$22226$1VmeqK
     (case-lambda
       ((g$num$22102$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22102$1VmeqK)
          (g$asin$21895$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22102$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22102$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'asin
              '()
              g$num$22102$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22102$1VmeqK)
              (clr-call-internal
                'System.Math
                'asin
                '()
                (g$inexact$21742$1VmeqK g$num$22102$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'asin
                  '"not a number"
                  g$num$22102$1VmeqK))))))))
   (g$sinh$21896$1VmeqK
     g$sinh$22227$1VmeqK
     (case-lambda
       ((g$num$22103$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22103$1VmeqK)
          (g$sinh$21896$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22103$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22103$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sinh
              '()
              g$num$22103$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22103$1VmeqK)
              (clr-call-internal
                'System.Math
                'sinh
                '()
                (g$inexact$21742$1VmeqK g$num$22103$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'sinh
                  '"not a number"
                  g$num$22103$1VmeqK))))))))
   (g$cos$21897$1VmeqK
     g$cos$22228$1VmeqK
     (case-lambda
       ((g$num$22104$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22104$1VmeqK)
          (g$cos$21897$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22104$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22104$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cos
              '()
              g$num$22104$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22104$1VmeqK)
              (clr-call-internal
                'System.Math
                'cos
                '()
                (g$inexact$21742$1VmeqK g$num$22104$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'cos
                  '"not a number"
                  g$num$22104$1VmeqK))))))))
   (g$acos$21898$1VmeqK
     g$acos$22229$1VmeqK
     (case-lambda
       ((g$num$22105$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22105$1VmeqK)
          (g$acos$21898$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22105$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22105$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'acos
              '()
              g$num$22105$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22105$1VmeqK)
              (clr-call-internal
                'System.Math
                'acos
                '()
                (g$inexact$21742$1VmeqK g$num$22105$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'acos
                  '"not a number"
                  g$num$22105$1VmeqK))))))))
   (g$cosh$21899$1VmeqK
     g$cosh$22230$1VmeqK
     (case-lambda
       ((g$num$22106$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22106$1VmeqK)
          (g$cosh$21899$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22106$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22106$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cosh
              '()
              g$num$22106$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22106$1VmeqK)
              (clr-call-internal
                'System.Math
                'cosh
                '()
                (g$inexact$21742$1VmeqK g$num$22106$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'cosh
                  '"not a number"
                  g$num$22106$1VmeqK))))))))
   (g$tan$21900$1VmeqK
     g$tan$22231$1VmeqK
     (case-lambda
       ((g$num$22107$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22107$1VmeqK)
          (g$tan$21900$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22107$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22107$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tan
              '()
              g$num$22107$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22107$1VmeqK)
              (clr-call-internal
                'System.Math
                'tan
                '()
                (g$inexact$21742$1VmeqK g$num$22107$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'tan
                  '"not a number"
                  g$num$22107$1VmeqK))))))))
   (g$tanh$21901$1VmeqK
     g$tanh$22232$1VmeqK
     (case-lambda
       ((g$num$22108$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22108$1VmeqK)
          (g$tanh$21901$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22108$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22108$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tanh
              '()
              g$num$22108$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22108$1VmeqK)
              (clr-call-internal
                'System.Math
                'tanh
                '()
                (g$inexact$21742$1VmeqK g$num$22108$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'tanh
                  '"not a number"
                  g$num$22108$1VmeqK))))))))
   (g$atan$21902$1VmeqK
     g$atan$22233$1VmeqK
     (case-lambda
       ((g$num$22109$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22109$1VmeqK)
          (g$atan$21902$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22109$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22109$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Atan
              '()
              g$num$22109$1VmeqK)
            (if (g$real?$21733$1VmeqK g$num$22109$1VmeqK)
              (clr-call-internal
                'System.Math
                'Atan
                '()
                (g$inexact$21742$1VmeqK g$num$22109$1VmeqK))
              (begin
                '#f
                (assertion-violation
                  'atan
                  '"not a number"
                  g$num$22109$1VmeqK))))))
       ((g$num1$22110$1VmeqK g$num2$22111$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$num1$22110$1VmeqK))
            (assertion-violation
              'atan
              '"not a real"
              g$num1$22110$1VmeqK)
            (void))
          (if (not (g$real?$21733$1VmeqK g$num2$22111$1VmeqK))
            (assertion-violation
              'atan
              '"not a real"
              g$num2$22111$1VmeqK)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$21742$1VmeqK g$num1$22110$1VmeqK)
            (g$inexact$21742$1VmeqK g$num2$22111$1VmeqK))))))
   (g$log$21903$1VmeqK
     g$log$22234$1VmeqK
     (case-lambda
       ((g$num$22112$1VmeqK)
        (begin
          (if (not (g$number?$21726$1VmeqK g$num$22112$1VmeqK))
            (assertion-violation
              'atan
              '"not a number"
              g$num$22112$1VmeqK)
            (void))
          (if (g$rectnum?$21701$1VmeqK g$num$22112$1VmeqK)
            (g$log$21903$1VmeqK
              (g$rectnum->complexnum$21720$1VmeqK g$num$22112$1VmeqK))
            (if (g$complexnum?$21708$1VmeqK g$num$22112$1VmeqK)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                g$num$22112$1VmeqK)
              (if (g$negative?$21741$1VmeqK g$num$22112$1VmeqK)
                (clr-call-internal
                  'Microsoft.Scripting.Math.Complex64
                  'Log
                  '()
                  (g$make-complexnum$21709$1VmeqK
                    (g$inexact$21742$1VmeqK g$num$22112$1VmeqK)
                    '0.0))
                (if (g$zero?$21739$1VmeqK g$num$22112$1VmeqK)
                  (if (g$exact?$21730$1VmeqK g$num$22112$1VmeqK)
                    (assertion-violation
                      'log
                      '"not possible"
                      g$num$22112$1VmeqK)
                    '-inf.0)
                  (if (g$infinite?$21729$1VmeqK g$num$22112$1VmeqK)
                    (if (g$negative?$21741$1VmeqK g$num$22112$1VmeqK)
                      (g$make-complexnum$21709$1VmeqK
                        (g$inexact$21742$1VmeqK
                          (g$abs$21905$1VmeqK g$num$22112$1VmeqK))
                        '0)
                      g$num$22112$1VmeqK)
                    (begin
                      '#f
                      (clr-call-internal
                        'System.Math
                        'Log
                        '()
                        (g$inexact$21742$1VmeqK
                          g$num$22112$1VmeqK))))))))))
       ((g$num1$22113$1VmeqK g$num2$22114$1VmeqK)
        (/ (g$log$21903$1VmeqK g$num1$22113$1VmeqK)
           (g$log$21903$1VmeqK g$num2$22114$1VmeqK)))))
   (g$div$21904$1VmeqK
     g$div$22235$1VmeqK
     (case-lambda
       ((g$x1$22115$1VmeqK g$x2$22116$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x1$22115$1VmeqK))
            (assertion-violation 'div '"not a real" g$x1$22115$1VmeqK)
            (void))
          (if (not (g$real?$21733$1VmeqK g$x2$22116$1VmeqK))
            (assertion-violation 'div '"not a real" g$x2$22116$1VmeqK)
            (void))
          (if (g$zero?$21739$1VmeqK g$x2$22116$1VmeqK)
            (assertion-violation
              'div
              '"divide by zero"
              g$x1$22115$1VmeqK
              g$x2$22116$1VmeqK)
            (void))
          (if ((case-lambda
                 ((g$t$22117$1VmeqK)
                  (if g$t$22117$1VmeqK
                    g$t$22117$1VmeqK
                    (begin
                      '#f
                      (g$infinite?$21729$1VmeqK g$x1$22115$1VmeqK)))))
               (g$nan?$21727$1VmeqK g$x1$22115$1VmeqK))
            (assertion-violation
              'div
              '"cannot be nan or infinite"
              g$x1$22115$1VmeqK
              g$x2$22116$1VmeqK)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$21730$1VmeqK g$x1$22115$1VmeqK)
                     (begin
                       '#f
                       (g$exact?$21730$1VmeqK g$x2$22116$1VmeqK))
                     '#f)
                 ((case-lambda
                    ((g$scale$22121$1VmeqK)
                     (values
                       (* g$x1$22115$1VmeqK g$scale$22121$1VmeqK)
                       (* g$x2$22116$1VmeqK g$scale$22121$1VmeqK)
                       '#t)))
                  (* (g$denominator$21857$1VmeqK g$x1$22115$1VmeqK)
                     (g$denominator$21857$1VmeqK g$x2$22116$1VmeqK)))
                 (values g$x1$22115$1VmeqK g$x2$22116$1VmeqK '#f))))
            (case-lambda
              ((g$x1$22122$1VmeqK
                 g$x2$22123$1VmeqK
                 g$exact-args?$22124$1VmeqK)
               ((case-lambda
                  ((g$exact-args?$22125$1VmeqK
                     g$x2$22126$1VmeqK
                     g$x1$22127$1VmeqK)
                   ((case-lambda
                      ((g$d$22128$1VmeqK)
                       (if (if g$exact-args?$22125$1VmeqK
                             (begin
                               '#f
                               (g$rational-valued?$21737$1VmeqK
                                 g$d$22128$1VmeqK))
                             '#f)
                         (g$exact$21743$1VmeqK g$d$22128$1VmeqK)
                         g$d$22128$1VmeqK)))
                    (if (g$positive?$21740$1VmeqK g$x2$22126$1VmeqK)
                      (g$floor$21906$1VmeqK
                        (/ g$x1$22127$1VmeqK g$x2$22126$1VmeqK))
                      (- (g$floor$21906$1VmeqK
                           (/ g$x1$22127$1VmeqK
                              (- g$x2$22126$1VmeqK))))))))
                g$exact-args?$22124$1VmeqK
                g$x2$22123$1VmeqK
                g$x1$22122$1VmeqK))))))))
   (g$abs$21905$1VmeqK
     g$abs$22236$1VmeqK
     (case-lambda
       ((g$x1$22129$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x1$22129$1VmeqK))
            (assertion-violation 'abs '"not a real" g$x1$22129$1VmeqK)
            (void))
          (if (g$negative?$21741$1VmeqK g$x1$22129$1VmeqK)
            (- g$x1$22129$1VmeqK)
            g$x1$22129$1VmeqK)))))
   (g$floor$21906$1VmeqK
     g$floor$22237$1VmeqK
     (case-lambda
       ((g$x$22130$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x$22130$1VmeqK))
            (assertion-violation 'floor '"not a real" g$x$22130$1VmeqK)
            (void))
          (if (g$exact-integer?$21855$1VmeqK g$x$22130$1VmeqK)
            g$x$22130$1VmeqK
            (if (g$ratnum?$21705$1VmeqK g$x$22130$1VmeqK)
              ((case-lambda
                 ((g$r$22131$1VmeqK)
                  (g$exact$21743$1VmeqK
                    (if (g$negative?$21741$1VmeqK g$x$22130$1VmeqK)
                      (- g$r$22131$1VmeqK '1)
                      g$r$22131$1VmeqK))))
               (g$bignum/$21712$1VmeqK
                 (g$ratnum-numerator$21707$1VmeqK g$x$22130$1VmeqK)
                 (g$ratnum-denominator$21706$1VmeqK g$x$22130$1VmeqK)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Floor(System.Double)"
                  '()
                  (g$inexact$21742$1VmeqK g$x$22130$1VmeqK)))))))))
   (g$ceiling$21907$1VmeqK
     g$ceiling$22238$1VmeqK
     (case-lambda
       ((g$x$22132$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x$22132$1VmeqK))
            (assertion-violation
              'ceiling
              '"not a real"
              g$x$22132$1VmeqK)
            (void))
          (if (g$exact-integer?$21855$1VmeqK g$x$22132$1VmeqK)
            g$x$22132$1VmeqK
            (if (g$ratnum?$21705$1VmeqK g$x$22132$1VmeqK)
              ((case-lambda
                 ((g$r$22133$1VmeqK)
                  (g$exact$21743$1VmeqK
                    (if (g$positive?$21740$1VmeqK g$r$22133$1VmeqK)
                      (+ g$r$22133$1VmeqK '1)
                      g$r$22133$1VmeqK))))
               (g$bignum/$21712$1VmeqK
                 (g$ratnum-numerator$21707$1VmeqK g$x$22132$1VmeqK)
                 (g$ratnum-denominator$21706$1VmeqK g$x$22132$1VmeqK)))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Ceiling(System.Double)"
                  '()
                  (g$inexact$21742$1VmeqK g$x$22132$1VmeqK)))))))))
   (g$truncate$21908$1VmeqK
     g$truncate$22239$1VmeqK
     (case-lambda
       ((g$x$22134$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x$22134$1VmeqK))
            (assertion-violation
              'truncate
              '"not a real"
              g$x$22134$1VmeqK)
            (void))
          (if (g$exact-integer?$21855$1VmeqK g$x$22134$1VmeqK)
            g$x$22134$1VmeqK
            (begin
              '#f
              ((case-lambda
                 ((g$r$22135$1VmeqK)
                  (if (g$exact?$21730$1VmeqK g$x$22134$1VmeqK)
                    (g$exact$21743$1VmeqK g$r$22135$1VmeqK)
                    g$r$22135$1VmeqK)))
               (clr-call-internal
                 'System.Math
                 '"Truncate(System.Double)"
                 '()
                 (g$inexact$21742$1VmeqK g$x$22134$1VmeqK)))))))))
   (g$round$21909$1VmeqK
     g$round$22240$1VmeqK
     (case-lambda
       ((g$x$22136$1VmeqK)
        (begin
          (if (not (g$real?$21733$1VmeqK g$x$22136$1VmeqK))
            (assertion-violation 'round '"not a real" g$x$22136$1VmeqK)
            (void))
          (if (g$exact-integer?$21855$1VmeqK g$x$22136$1VmeqK)
            g$x$22136$1VmeqK
            (if (g$ratnum?$21705$1VmeqK g$x$22136$1VmeqK)
              ((case-lambda
                 ((g$num$22137$1VmeqK)
                  ((case-lambda
                     ((g$den$22138$1VmeqK)
                      ((case-lambda
                         ((g$d$22139$1VmeqK)
                          ((case-lambda
                             ((g$r$22140$1VmeqK)
                              ((case-lambda
                                 ((g$hd$22141$1VmeqK)
                                  (if (g$negative?$21741$1VmeqK
                                        g$r$22140$1VmeqK)
                                    (g$exact$21743$1VmeqK
                                      (if (g$>$21849$1VmeqK
                                            (- g$r$22140$1VmeqK)
                                            g$hd$22141$1VmeqK)
                                        (- g$d$22139$1VmeqK '1)
                                        (if (g$<$21847$1VmeqK
                                              (- g$r$22140$1VmeqK)
                                              g$hd$22141$1VmeqK)
                                          g$d$22139$1VmeqK
                                          (if (g$even?$21227$1VmeqK
                                                g$d$22139$1VmeqK)
                                            g$d$22139$1VmeqK
                                            (begin
                                              '#f
                                              (+ g$d$22139$1VmeqK
                                                 '1))))))
                                    (if (g$positive?$21740$1VmeqK
                                          g$r$22140$1VmeqK)
                                      (g$exact$21743$1VmeqK
                                        (if (g$>$21849$1VmeqK
                                              g$r$22140$1VmeqK
                                              g$hd$22141$1VmeqK)
                                          (+ g$d$22139$1VmeqK '1)
                                          (if (g$<$21847$1VmeqK
                                                g$r$22140$1VmeqK
                                                g$hd$22141$1VmeqK)
                                            g$d$22139$1VmeqK
                                            (if (g$even?$21227$1VmeqK
                                                  g$d$22139$1VmeqK)
                                              g$d$22139$1VmeqK
                                              (begin
                                                '#f
                                                (+ g$d$22139$1VmeqK
                                                   '1))))))
                                      (begin '#f g$d$22139$1VmeqK)))))
                               (g$div$21904$1VmeqK
                                 g$d$22139$1VmeqK
                                 '2))))
                           (g$bignum%$21713$1VmeqK
                             g$num$22137$1VmeqK
                             g$den$22138$1VmeqK))))
                       (g$bignum/$21712$1VmeqK
                         g$num$22137$1VmeqK
                         g$den$22138$1VmeqK))))
                   (g$ratnum-denominator$21706$1VmeqK
                     g$x$22136$1VmeqK))))
               (g$ratnum-numerator$21707$1VmeqK g$x$22136$1VmeqK))
              (begin
                '#f
                (clr-call-internal
                  'System.Math
                  '"Round(System.Double)"
                  '()
                  (g$inexact$21742$1VmeqK g$x$22136$1VmeqK)))))))))
   (g$sqrt$21910$1VmeqK
     g$sqrt$22241$1VmeqK
     (case-lambda
       ((g$num$22142$1VmeqK)
        (if (g$rectnum?$21701$1VmeqK g$num$22142$1VmeqK)
          (g$sqrt$21910$1VmeqK
            (g$rectnum->complexnum$21720$1VmeqK g$num$22142$1VmeqK))
          (if (g$complexnum?$21708$1VmeqK g$num$22142$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Sqrt
              '()
              g$num$22142$1VmeqK)
            (if (g$negative?$21741$1VmeqK g$num$22142$1VmeqK)
              (g$make-rectangular$21851$1VmeqK
                '0
                (g$sqrt$21910$1VmeqK (- g$num$22142$1VmeqK)))
              (if (g$bignum?$21700$1VmeqK g$num$22142$1VmeqK)
                (bignum-sqrt g$num$22142$1VmeqK)
                (if (g$infinite?$21729$1VmeqK g$num$22142$1VmeqK)
                  g$num$22142$1VmeqK
                  (begin
                    '#f
                    ((case-lambda
                       ((g$r$22143$1VmeqK)
                        (if (g$exact?$21730$1VmeqK g$num$22142$1VmeqK)
                          (g$exact$21743$1VmeqK g$r$22143$1VmeqK)
                          g$r$22143$1VmeqK)))
                     (clr-call-internal
                       'System.Math
                       'Sqrt
                       '()
                       (g$inexact$21742$1VmeqK
                         g$num$22142$1VmeqK))))))))))))
   (g$exact-integer-sqrt$21911$1VmeqK
     g$exact-integer-sqrt$22242$1VmeqK
     (case-lambda
       ((g$num$22144$1VmeqK)
        (if (g$bignum?$21700$1VmeqK g$num$22144$1VmeqK)
          (bignum-sqrt-exact g$num$22144$1VmeqK)
          ((case-lambda
             ((g$r$22145$1VmeqK)
              ((case-lambda
                 ((g$rf$22146$1VmeqK)
                  ((case-lambda
                     ((g$rest$22147$1VmeqK)
                      (values g$rf$22146$1VmeqK g$rest$22147$1VmeqK)))
                   (- g$num$22144$1VmeqK
                      (* g$rf$22146$1VmeqK g$rf$22146$1VmeqK)))))
               (g$exact$21743$1VmeqK
                 (g$floor$21906$1VmeqK g$r$22145$1VmeqK)))))
           (g$sqrt$21910$1VmeqK g$num$22144$1VmeqK))))))
   (g$expt$21912$1VmeqK
     g$expt$22243$1VmeqK
     (case-lambda
       ((g$obj1$22148$1VmeqK g$obj2$22149$1VmeqK)
        (letrec* ((g$make-restriction-violation$22150$1VmeqK
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$22781$1VmeqK)
                         (g$make-who-condition$22743$1VmeqK 'expt)
                         (g$make-message-condition$22683$1VmeqK
                           '"not supported")
                         (g$make-irritants-condition$22733$1VmeqK
                           g$obj1$22148$1VmeqK
                           g$obj2$22149$1VmeqK))))))
          (if (g$rectnum?$21701$1VmeqK g$obj1$22148$1VmeqK)
            (g$expt$21912$1VmeqK
              (g$rectnum->complexnum$21720$1VmeqK g$obj1$22148$1VmeqK)
              g$obj2$22149$1VmeqK)
            (if ((case-lambda
                   ((g$t$22151$1VmeqK)
                    (if g$t$22151$1VmeqK
                      g$t$22151$1VmeqK
                      (begin
                        '#f
                        (g$negative?$21741$1VmeqK
                          g$obj1$22148$1VmeqK)))))
                 (g$complexnum?$21708$1VmeqK g$obj1$22148$1VmeqK))
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Pow
                '()
                (g$real->complexnum$21718$1VmeqK g$obj1$22148$1VmeqK)
                (g$real->complexnum$21718$1VmeqK g$obj2$22149$1VmeqK))
              (begin
                '#f
                ((case-lambda
                   ((g$e$22152$1VmeqK
                      g$z1$22153$1VmeqK
                      g$z2$22154$1VmeqK)
                    (if (if g$z1$22153$1VmeqK
                          (begin '#f (not g$z2$22154$1VmeqK))
                          '#f)
                      (if g$e$22152$1VmeqK '0 '0.0)
                      (if ((case-lambda
                             ((g$t$22155$1VmeqK)
                              (if g$t$22155$1VmeqK
                                g$t$22155$1VmeqK
                                (begin
                                  '#f
                                  (g$=$21846$1VmeqK
                                    g$obj1$22148$1VmeqK
                                    '1)))))
                           g$z2$22154$1VmeqK)
                        (if g$e$22152$1VmeqK '1 '1.0)
                        (if (g$=$21846$1VmeqK g$obj2$22149$1VmeqK '1)
                          (if g$e$22152$1VmeqK
                            g$obj1$22148$1VmeqK
                            (g$inexact$21742$1VmeqK
                              g$obj1$22148$1VmeqK))
                          (begin
                            '#f
                            ((case-lambda
                               ((g$neg?$22156$1VmeqK)
                                ((case-lambda
                                   ((g$obj2$22157$1VmeqK)
                                    (if (if (g$integer?$21735$1VmeqK
                                              g$obj1$22148$1VmeqK)
                                          (begin
                                            '#f
                                            (g$integer?$21735$1VmeqK
                                              g$obj2$22157$1VmeqK))
                                          '#f)
                                      ((case-lambda
                                         ((g$a$22158$1VmeqK)
                                          ((case-lambda
                                             ((g$r$22159$1VmeqK)
                                              (if g$neg?$22156$1VmeqK
                                                (if (g$zero?$21739$1VmeqK
                                                      g$r$22159$1VmeqK)
                                                  (raise
                                                    (g$make-restriction-violation$22150$1VmeqK))
                                                  (/ '1
                                                     g$r$22159$1VmeqK))
                                                (g$exact$21743$1VmeqK
                                                  g$r$22159$1VmeqK))))
                                           (clr-call-internal
                                             'Microsoft.Scripting.Math.BigInteger
                                             'Power
                                             g$a$22158$1VmeqK
                                             (g$->fixnum$21721$1VmeqK
                                               g$obj2$22157$1VmeqK)))))
                                       (g$->bignum$21723$1VmeqK
                                         g$obj1$22148$1VmeqK))
                                      (if (if (g$rational?$21734$1VmeqK
                                                g$obj1$22148$1VmeqK)
                                            (begin
                                              '#f
                                              (g$integer?$21735$1VmeqK
                                                g$obj2$22157$1VmeqK))
                                            '#f)
                                        ((case-lambda
                                           ((g$f$22160$1VmeqK)
                                            (if g$neg?$22156$1VmeqK
                                              (/ (g$expt$21912$1VmeqK
                                                   (g$denominator$21857$1VmeqK
                                                     g$f$22160$1VmeqK)
                                                   g$obj2$22157$1VmeqK)
                                                 (g$expt$21912$1VmeqK
                                                   (g$numerator$21856$1VmeqK
                                                     g$f$22160$1VmeqK)
                                                   g$obj2$22157$1VmeqK))
                                              (/ (g$expt$21912$1VmeqK
                                                   (g$numerator$21856$1VmeqK
                                                     g$f$22160$1VmeqK)
                                                   g$obj2$22157$1VmeqK)
                                                 (g$expt$21912$1VmeqK
                                                   (g$denominator$21857$1VmeqK
                                                     g$f$22160$1VmeqK)
                                                   g$obj2$22157$1VmeqK)))))
                                         (g$->ratnum$21722$1VmeqK
                                           g$obj1$22148$1VmeqK))
                                        (if (if (g$real?$21733$1VmeqK
                                                  g$obj1$22148$1VmeqK)
                                              (begin
                                                '#f
                                                (g$real?$21733$1VmeqK
                                                  g$obj2$22157$1VmeqK))
                                              '#f)
                                          ((case-lambda
                                             ((g$r$22161$1VmeqK)
                                              (if g$neg?$22156$1VmeqK
                                                (/ '1 g$r$22161$1VmeqK)
                                                g$r$22161$1VmeqK)))
                                           (clr-call-internal
                                             'System.Math
                                             'Pow
                                             '()
                                             (g$inexact$21742$1VmeqK
                                               g$obj1$22148$1VmeqK)
                                             (g$inexact$21742$1VmeqK
                                               g$obj2$22157$1VmeqK)))
                                          (begin
                                            '#f
                                            (raise
                                              (g$make-restriction-violation$22150$1VmeqK))))))))
                                 (if g$neg?$22156$1VmeqK
                                   (g$abs$21905$1VmeqK
                                     g$obj2$22149$1VmeqK)
                                   g$obj2$22149$1VmeqK))))
                             (g$negative?$21741$1VmeqK
                               g$obj2$22149$1VmeqK))))))))
                 (if (g$exact?$21730$1VmeqK g$obj1$22148$1VmeqK)
                   (begin
                     '#f
                     (g$exact?$21730$1VmeqK g$obj2$22149$1VmeqK))
                   '#f)
                 (g$zero?$21739$1VmeqK g$obj1$22148$1VmeqK)
                 (g$zero?$21739$1VmeqK g$obj2$22149$1VmeqK))))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$8539$22244$1VmeqK
     g$8539$22672$1VmeqK
     (make-record-type-descriptor
       '&condition
       '#f
       'g$8542$1VmeqK
       '#f
       '#f
       '#()))
   (g$8541$22245$1VmeqK g$8541$22673$1VmeqK '#f)
   (g$8540$22246$1VmeqK
     g$8540$22674$1VmeqK
     (make-record-constructor-descriptor
       g$8539$22244$1VmeqK
       '#f
       g$8541$22245$1VmeqK))
   (g$&condition?$22249$1VmeqK
     g$&condition?$22675$1VmeqK
     (record-predicate g$8539$22244$1VmeqK))
   (g$make-&condition$22250$1VmeqK
     g$make-&condition$22676$1VmeqK
     (record-constructor g$8540$22246$1VmeqK))
   (g$&condition-rtd$22251$1VmeqK
     g$&condition-rtd$22677$1VmeqK
     g$8539$22244$1VmeqK)
   (g$&condition-rcd$22252$1VmeqK
     g$&condition-rcd$22678$1VmeqK
     g$8540$22246$1VmeqK)
   (g$8576$22350$1VmeqK
     g$8576$22679$1VmeqK
     (make-record-type-descriptor
       '&message
       g$8539$22244$1VmeqK
       'g$8579$1VmeqK
       '#f
       '#f
       '#((immutable message))))
   (g$8578$22351$1VmeqK g$8578$22680$1VmeqK '#f)
   (g$8577$22352$1VmeqK
     g$8577$22681$1VmeqK
     (make-record-constructor-descriptor
       g$8576$22350$1VmeqK
       g$8540$22246$1VmeqK
       g$8578$22351$1VmeqK))
   (g$p?$22355$1VmeqK
     g$p?$22682$1VmeqK
     (record-predicate g$8576$22350$1VmeqK))
   (g$make-message-condition$22356$1VmeqK
     g$make-message-condition$22683$1VmeqK
     (record-constructor g$8577$22352$1VmeqK))
   (g$condition-message$22357$1VmeqK
     g$condition-message$22684$1VmeqK
     (record-accessor g$8576$22350$1VmeqK '0))
   (g$message-condition?$22358$1VmeqK
     g$message-condition?$22685$1VmeqK
     (condition-predicate g$8576$22350$1VmeqK))
   (g$condition-message$22359$1VmeqK
     g$condition-message$22686$1VmeqK
     (condition-accessor
       g$8576$22350$1VmeqK
       g$condition-message$22357$1VmeqK))
   (g$&message-rtd$22360$1VmeqK
     g$&message-rtd$22687$1VmeqK
     g$8576$22350$1VmeqK)
   (g$&message-rcd$22361$1VmeqK
     g$&message-rcd$22688$1VmeqK
     g$8577$22352$1VmeqK)
   (g$8591$22362$1VmeqK
     g$8591$22689$1VmeqK
     (make-record-type-descriptor
       '&warning
       g$8539$22244$1VmeqK
       'g$8594$1VmeqK
       '#f
       '#f
       '#()))
   (g$8593$22363$1VmeqK g$8593$22690$1VmeqK '#f)
   (g$8592$22364$1VmeqK
     g$8592$22691$1VmeqK
     (make-record-constructor-descriptor
       g$8591$22362$1VmeqK
       g$8540$22246$1VmeqK
       g$8593$22363$1VmeqK))
   (g$p?$22367$1VmeqK
     g$p?$22692$1VmeqK
     (record-predicate g$8591$22362$1VmeqK))
   (g$make-warning$22368$1VmeqK
     g$make-warning$22693$1VmeqK
     (record-constructor g$8592$22364$1VmeqK))
   (g$warning?$22369$1VmeqK
     g$warning?$22694$1VmeqK
     (condition-predicate g$8591$22362$1VmeqK))
   (g$&warning-rtd$22370$1VmeqK
     g$&warning-rtd$22695$1VmeqK
     g$8591$22362$1VmeqK)
   (g$&warning-rcd$22371$1VmeqK
     g$&warning-rcd$22696$1VmeqK
     g$8592$22364$1VmeqK)
   (g$8604$22372$1VmeqK
     g$8604$22697$1VmeqK
     (make-record-type-descriptor
       '&serious
       g$8539$22244$1VmeqK
       'g$8607$1VmeqK
       '#f
       '#f
       '#()))
   (g$8606$22373$1VmeqK g$8606$22698$1VmeqK '#f)
   (g$8605$22374$1VmeqK
     g$8605$22699$1VmeqK
     (make-record-constructor-descriptor
       g$8604$22372$1VmeqK
       g$8540$22246$1VmeqK
       g$8606$22373$1VmeqK))
   (g$p?$22377$1VmeqK
     g$p?$22700$1VmeqK
     (record-predicate g$8604$22372$1VmeqK))
   (g$make-serious-condition$22378$1VmeqK
     g$make-serious-condition$22701$1VmeqK
     (record-constructor g$8605$22374$1VmeqK))
   (g$serious-condition?$22379$1VmeqK
     g$serious-condition?$22702$1VmeqK
     (condition-predicate g$8604$22372$1VmeqK))
   (g$&serious-rtd$22380$1VmeqK
     g$&serious-rtd$22703$1VmeqK
     g$8604$22372$1VmeqK)
   (g$&serious-rcd$22381$1VmeqK
     g$&serious-rcd$22704$1VmeqK
     g$8605$22374$1VmeqK)
   (g$8617$22382$1VmeqK
     g$8617$22705$1VmeqK
     (make-record-type-descriptor
       '&error
       g$8604$22372$1VmeqK
       'g$8620$1VmeqK
       '#f
       '#f
       '#()))
   (g$8619$22383$1VmeqK g$8619$22706$1VmeqK '#f)
   (g$8618$22384$1VmeqK
     g$8618$22707$1VmeqK
     (make-record-constructor-descriptor
       g$8617$22382$1VmeqK
       g$8605$22374$1VmeqK
       g$8619$22383$1VmeqK))
   (g$p?$22387$1VmeqK
     g$p?$22708$1VmeqK
     (record-predicate g$8617$22382$1VmeqK))
   (g$make-error$22388$1VmeqK
     g$make-error$22709$1VmeqK
     (record-constructor g$8618$22384$1VmeqK))
   (g$error?$22389$1VmeqK
     g$error?$22710$1VmeqK
     (condition-predicate g$8617$22382$1VmeqK))
   (g$&error-rtd$22390$1VmeqK
     g$&error-rtd$22711$1VmeqK
     g$8617$22382$1VmeqK)
   (g$&error-rcd$22391$1VmeqK
     g$&error-rcd$22712$1VmeqK
     g$8618$22384$1VmeqK)
   (g$8630$22392$1VmeqK
     g$8630$22713$1VmeqK
     (make-record-type-descriptor
       '&violation
       g$8604$22372$1VmeqK
       'g$8633$1VmeqK
       '#f
       '#f
       '#()))
   (g$8632$22393$1VmeqK g$8632$22714$1VmeqK '#f)
   (g$8631$22394$1VmeqK
     g$8631$22715$1VmeqK
     (make-record-constructor-descriptor
       g$8630$22392$1VmeqK
       g$8605$22374$1VmeqK
       g$8632$22393$1VmeqK))
   (g$p?$22397$1VmeqK
     g$p?$22716$1VmeqK
     (record-predicate g$8630$22392$1VmeqK))
   (g$make-violation$22398$1VmeqK
     g$make-violation$22717$1VmeqK
     (record-constructor g$8631$22394$1VmeqK))
   (g$violation?$22399$1VmeqK
     g$violation?$22718$1VmeqK
     (condition-predicate g$8630$22392$1VmeqK))
   (g$&violation-rtd$22400$1VmeqK
     g$&violation-rtd$22719$1VmeqK
     g$8630$22392$1VmeqK)
   (g$&violation-rcd$22401$1VmeqK
     g$&violation-rcd$22720$1VmeqK
     g$8631$22394$1VmeqK)
   (g$8643$22402$1VmeqK
     g$8643$22721$1VmeqK
     (make-record-type-descriptor
       '&assertion
       g$8630$22392$1VmeqK
       'g$8646$1VmeqK
       '#f
       '#f
       '#()))
   (g$8645$22403$1VmeqK g$8645$22722$1VmeqK '#f)
   (g$8644$22404$1VmeqK
     g$8644$22723$1VmeqK
     (make-record-constructor-descriptor
       g$8643$22402$1VmeqK
       g$8631$22394$1VmeqK
       g$8645$22403$1VmeqK))
   (g$p?$22407$1VmeqK
     g$p?$22724$1VmeqK
     (record-predicate g$8643$22402$1VmeqK))
   (g$make-assertion-violation$22408$1VmeqK
     g$make-assertion-violation$22725$1VmeqK
     (record-constructor g$8644$22404$1VmeqK))
   (g$assertion-violation?$22409$1VmeqK
     g$assertion-violation?$22726$1VmeqK
     (condition-predicate g$8643$22402$1VmeqK))
   (g$&assertion-rtd$22410$1VmeqK
     g$&assertion-rtd$22727$1VmeqK
     g$8643$22402$1VmeqK)
   (g$&assertion-rcd$22411$1VmeqK
     g$&assertion-rcd$22728$1VmeqK
     g$8644$22404$1VmeqK)
   (g$8656$22413$1VmeqK
     g$8656$22729$1VmeqK
     (make-record-type-descriptor
       '&irritants
       g$8539$22244$1VmeqK
       'g$8659$1VmeqK
       '#f
       '#f
       '#((immutable irritants))))
   (g$8658$22414$1VmeqK g$8658$22730$1VmeqK '#f)
   (g$8657$22415$1VmeqK
     g$8657$22731$1VmeqK
     (make-record-constructor-descriptor
       g$8656$22413$1VmeqK
       g$8540$22246$1VmeqK
       g$8658$22414$1VmeqK))
   (g$p?$22418$1VmeqK
     g$p?$22732$1VmeqK
     (record-predicate g$8656$22413$1VmeqK))
   (g$make-irritants-condition$22419$1VmeqK
     g$make-irritants-condition$22733$1VmeqK
     (record-constructor g$8657$22415$1VmeqK))
   (g$condition-irritants$22420$1VmeqK
     g$condition-irritants$22734$1VmeqK
     (record-accessor g$8656$22413$1VmeqK '0))
   (g$irritants-condition?$22421$1VmeqK
     g$irritants-condition?$22735$1VmeqK
     (condition-predicate g$8656$22413$1VmeqK))
   (g$condition-irritants$22422$1VmeqK
     g$condition-irritants$22736$1VmeqK
     (condition-accessor
       g$8656$22413$1VmeqK
       g$condition-irritants$22420$1VmeqK))
   (g$&irritants-rtd$22423$1VmeqK
     g$&irritants-rtd$22737$1VmeqK
     g$8656$22413$1VmeqK)
   (g$&irritants-rcd$22424$1VmeqK
     g$&irritants-rcd$22738$1VmeqK
     g$8657$22415$1VmeqK)
   (g$8671$22426$1VmeqK
     g$8671$22739$1VmeqK
     (make-record-type-descriptor
       '&who
       g$8539$22244$1VmeqK
       'g$8674$1VmeqK
       '#f
       '#f
       '#((immutable who))))
   (g$8673$22427$1VmeqK g$8673$22740$1VmeqK '#f)
   (g$8672$22428$1VmeqK
     g$8672$22741$1VmeqK
     (make-record-constructor-descriptor
       g$8671$22426$1VmeqK
       g$8540$22246$1VmeqK
       g$8673$22427$1VmeqK))
   (g$p?$22431$1VmeqK
     g$p?$22742$1VmeqK
     (record-predicate g$8671$22426$1VmeqK))
   (g$make-who-condition$22432$1VmeqK
     g$make-who-condition$22743$1VmeqK
     (record-constructor g$8672$22428$1VmeqK))
   (g$condition-who$22433$1VmeqK
     g$condition-who$22744$1VmeqK
     (record-accessor g$8671$22426$1VmeqK '0))
   (g$who-condition?$22434$1VmeqK
     g$who-condition?$22745$1VmeqK
     (condition-predicate g$8671$22426$1VmeqK))
   (g$condition-who$22435$1VmeqK
     g$condition-who$22746$1VmeqK
     (condition-accessor
       g$8671$22426$1VmeqK
       g$condition-who$22433$1VmeqK))
   (g$&who-rtd$22436$1VmeqK g$&who-rtd$22747$1VmeqK g$8671$22426$1VmeqK)
   (g$&who-rcd$22437$1VmeqK g$&who-rcd$22748$1VmeqK g$8672$22428$1VmeqK)
   (g$8686$22439$1VmeqK
     g$8686$22749$1VmeqK
     (make-record-type-descriptor
       '&where
       g$8539$22244$1VmeqK
       'g$8689$1VmeqK
       '#f
       '#f
       '#((immutable where))))
   (g$8688$22440$1VmeqK g$8688$22750$1VmeqK '#f)
   (g$8687$22441$1VmeqK
     g$8687$22751$1VmeqK
     (make-record-constructor-descriptor
       g$8686$22439$1VmeqK
       g$8540$22246$1VmeqK
       g$8688$22440$1VmeqK))
   (g$p?$22444$1VmeqK
     g$p?$22752$1VmeqK
     (record-predicate g$8686$22439$1VmeqK))
   (g$make-where-condition$22445$1VmeqK
     g$make-where-condition$22753$1VmeqK
     (record-constructor g$8687$22441$1VmeqK))
   (g$condition-where$22446$1VmeqK
     g$condition-where$22754$1VmeqK
     (record-accessor g$8686$22439$1VmeqK '0))
   (g$where-condition?$22447$1VmeqK
     g$where-condition?$22755$1VmeqK
     (condition-predicate g$8686$22439$1VmeqK))
   (g$condition-where$22448$1VmeqK
     g$condition-where$22756$1VmeqK
     (condition-accessor
       g$8686$22439$1VmeqK
       g$condition-where$22446$1VmeqK))
   (g$&where-rtd$22449$1VmeqK
     g$&where-rtd$22757$1VmeqK
     g$8686$22439$1VmeqK)
   (g$&where-rcd$22450$1VmeqK
     g$&where-rcd$22758$1VmeqK
     g$8687$22441$1VmeqK)
   (g$8701$22452$1VmeqK
     g$8701$22759$1VmeqK
     (make-record-type-descriptor
       '&stacktrace
       g$8539$22244$1VmeqK
       'g$8704$1VmeqK
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$8703$22453$1VmeqK g$8703$22760$1VmeqK '#f)
   (g$8702$22454$1VmeqK
     g$8702$22761$1VmeqK
     (make-record-constructor-descriptor
       g$8701$22452$1VmeqK
       g$8540$22246$1VmeqK
       g$8703$22453$1VmeqK))
   (g$p?$22457$1VmeqK
     g$p?$22762$1VmeqK
     (record-predicate g$8701$22452$1VmeqK))
   (g$make-stacktrace-condition$22458$1VmeqK
     g$make-stacktrace-condition$22763$1VmeqK
     (record-constructor g$8702$22454$1VmeqK))
   (g$condition-stacktrace$22459$1VmeqK
     g$condition-stacktrace$22764$1VmeqK
     (record-accessor g$8701$22452$1VmeqK '0))
   (g$stacktrace-condition?$22460$1VmeqK
     g$stacktrace-condition?$22765$1VmeqK
     (condition-predicate g$8701$22452$1VmeqK))
   (g$condition-stacktrace$22461$1VmeqK
     g$condition-stacktrace$22766$1VmeqK
     (condition-accessor
       g$8701$22452$1VmeqK
       g$condition-stacktrace$22459$1VmeqK))
   (g$&stacktrace-rtd$22462$1VmeqK
     g$&stacktrace-rtd$22767$1VmeqK
     g$8701$22452$1VmeqK)
   (g$&stacktrace-rcd$22463$1VmeqK
     g$&stacktrace-rcd$22768$1VmeqK
     g$8702$22454$1VmeqK)
   (g$8716$22464$1VmeqK
     g$8716$22769$1VmeqK
     (make-record-type-descriptor
       '&non-continuable
       g$8630$22392$1VmeqK
       'g$8719$1VmeqK
       '#f
       '#f
       '#()))
   (g$8718$22465$1VmeqK g$8718$22770$1VmeqK '#f)
   (g$8717$22466$1VmeqK
     g$8717$22771$1VmeqK
     (make-record-constructor-descriptor
       g$8716$22464$1VmeqK
       g$8631$22394$1VmeqK
       g$8718$22465$1VmeqK))
   (g$p?$22469$1VmeqK
     g$p?$22772$1VmeqK
     (record-predicate g$8716$22464$1VmeqK))
   (g$make-non-continuable-violation$22470$1VmeqK
     g$make-non-continuable-violation$22773$1VmeqK
     (record-constructor g$8717$22466$1VmeqK))
   (g$non-continuable-violation?$22471$1VmeqK
     g$non-continuable-violation?$22774$1VmeqK
     (condition-predicate g$8716$22464$1VmeqK))
   (g$&non-continuable-rtd$22472$1VmeqK
     g$&non-continuable-rtd$22775$1VmeqK
     g$8716$22464$1VmeqK)
   (g$&non-continuable-rcd$22473$1VmeqK
     g$&non-continuable-rcd$22776$1VmeqK
     g$8717$22466$1VmeqK)
   (g$8729$22474$1VmeqK
     g$8729$22777$1VmeqK
     (make-record-type-descriptor
       '&implementation-restriction
       g$8630$22392$1VmeqK
       'g$8732$1VmeqK
       '#f
       '#f
       '#()))
   (g$8731$22475$1VmeqK g$8731$22778$1VmeqK '#f)
   (g$8730$22476$1VmeqK
     g$8730$22779$1VmeqK
     (make-record-constructor-descriptor
       g$8729$22474$1VmeqK
       g$8631$22394$1VmeqK
       g$8731$22475$1VmeqK))
   (g$p?$22479$1VmeqK
     g$p?$22780$1VmeqK
     (record-predicate g$8729$22474$1VmeqK))
   (g$make-implementation-restriction-violation$22480$1VmeqK
     g$make-implementation-restriction-violation$22781$1VmeqK
     (record-constructor g$8730$22476$1VmeqK))
   (g$implementation-restriction-violation?$22481$1VmeqK
     g$implementation-restriction-violation?$22782$1VmeqK
     (condition-predicate g$8729$22474$1VmeqK))
   (g$&implementation-restriction-rtd$22482$1VmeqK
     g$&implementation-restriction-rtd$22783$1VmeqK
     g$8729$22474$1VmeqK)
   (g$&implementation-restriction-rcd$22483$1VmeqK
     g$&implementation-restriction-rcd$22784$1VmeqK
     g$8730$22476$1VmeqK)
   (g$8742$22484$1VmeqK
     g$8742$22785$1VmeqK
     (make-record-type-descriptor
       '&lexical
       g$8630$22392$1VmeqK
       'g$8745$1VmeqK
       '#f
       '#f
       '#()))
   (g$8744$22485$1VmeqK g$8744$22786$1VmeqK '#f)
   (g$8743$22486$1VmeqK
     g$8743$22787$1VmeqK
     (make-record-constructor-descriptor
       g$8742$22484$1VmeqK
       g$8631$22394$1VmeqK
       g$8744$22485$1VmeqK))
   (g$p?$22489$1VmeqK
     g$p?$22788$1VmeqK
     (record-predicate g$8742$22484$1VmeqK))
   (g$make-lexical-violation$22490$1VmeqK
     g$make-lexical-violation$22789$1VmeqK
     (record-constructor g$8743$22486$1VmeqK))
   (g$lexical-violation?$22491$1VmeqK
     g$lexical-violation?$22790$1VmeqK
     (condition-predicate g$8742$22484$1VmeqK))
   (g$&lexical-rtd$22492$1VmeqK
     g$&lexical-rtd$22791$1VmeqK
     g$8742$22484$1VmeqK)
   (g$&lexical-rcd$22493$1VmeqK
     g$&lexical-rcd$22792$1VmeqK
     g$8743$22486$1VmeqK)
   (g$8755$22496$1VmeqK
     g$8755$22793$1VmeqK
     (make-record-type-descriptor
       '&syntax
       g$8630$22392$1VmeqK
       'g$8758$1VmeqK
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$8757$22497$1VmeqK g$8757$22794$1VmeqK '#f)
   (g$8756$22498$1VmeqK
     g$8756$22795$1VmeqK
     (make-record-constructor-descriptor
       g$8755$22496$1VmeqK
       g$8631$22394$1VmeqK
       g$8757$22497$1VmeqK))
   (g$p?$22501$1VmeqK
     g$p?$22796$1VmeqK
     (record-predicate g$8755$22496$1VmeqK))
   (g$make-syntax-violation$22502$1VmeqK
     g$make-syntax-violation$22797$1VmeqK
     (record-constructor g$8756$22498$1VmeqK))
   (g$syntax-violation-form$22503$1VmeqK
     g$syntax-violation-form$22798$1VmeqK
     (record-accessor g$8755$22496$1VmeqK '0))
   (g$syntax-violation-subform$22504$1VmeqK
     g$syntax-violation-subform$22799$1VmeqK
     (record-accessor g$8755$22496$1VmeqK '1))
   (g$syntax-violation?$22505$1VmeqK
     g$syntax-violation?$22800$1VmeqK
     (condition-predicate g$8755$22496$1VmeqK))
   (g$syntax-violation-form$22506$1VmeqK
     g$syntax-violation-form$22801$1VmeqK
     (condition-accessor
       g$8755$22496$1VmeqK
       g$syntax-violation-form$22503$1VmeqK))
   (g$syntax-violation-subform$22507$1VmeqK
     g$syntax-violation-subform$22802$1VmeqK
     (condition-accessor
       g$8755$22496$1VmeqK
       g$syntax-violation-subform$22504$1VmeqK))
   (g$&syntax-rtd$22508$1VmeqK
     g$&syntax-rtd$22803$1VmeqK
     g$8755$22496$1VmeqK)
   (g$&syntax-rcd$22509$1VmeqK
     g$&syntax-rcd$22804$1VmeqK
     g$8756$22498$1VmeqK)
   (g$8772$22510$1VmeqK
     g$8772$22805$1VmeqK
     (make-record-type-descriptor
       '&undefined
       g$8630$22392$1VmeqK
       'g$8775$1VmeqK
       '#f
       '#f
       '#()))
   (g$8774$22511$1VmeqK g$8774$22806$1VmeqK '#f)
   (g$8773$22512$1VmeqK
     g$8773$22807$1VmeqK
     (make-record-constructor-descriptor
       g$8772$22510$1VmeqK
       g$8631$22394$1VmeqK
       g$8774$22511$1VmeqK))
   (g$p?$22515$1VmeqK
     g$p?$22808$1VmeqK
     (record-predicate g$8772$22510$1VmeqK))
   (g$make-undefined-violation$22516$1VmeqK
     g$make-undefined-violation$22809$1VmeqK
     (record-constructor g$8773$22512$1VmeqK))
   (g$undefined-violation?$22517$1VmeqK
     g$undefined-violation?$22810$1VmeqK
     (condition-predicate g$8772$22510$1VmeqK))
   (g$&undefined-rtd$22518$1VmeqK
     g$&undefined-rtd$22811$1VmeqK
     g$8772$22510$1VmeqK)
   (g$&undefined-rcd$22519$1VmeqK
     g$&undefined-rcd$22812$1VmeqK
     g$8773$22512$1VmeqK)
   (g$8785$22520$1VmeqK
     g$8785$22813$1VmeqK
     (make-record-type-descriptor
       '&i/o
       g$8617$22382$1VmeqK
       'g$8788$1VmeqK
       '#f
       '#f
       '#()))
   (g$8787$22521$1VmeqK g$8787$22814$1VmeqK '#f)
   (g$8786$22522$1VmeqK
     g$8786$22815$1VmeqK
     (make-record-constructor-descriptor
       g$8785$22520$1VmeqK
       g$8618$22384$1VmeqK
       g$8787$22521$1VmeqK))
   (g$p?$22525$1VmeqK
     g$p?$22816$1VmeqK
     (record-predicate g$8785$22520$1VmeqK))
   (g$make-i/o-error$22526$1VmeqK
     g$make-i/o-error$22817$1VmeqK
     (record-constructor g$8786$22522$1VmeqK))
   (g$i/o-error?$22527$1VmeqK
     g$i/o-error?$22818$1VmeqK
     (condition-predicate g$8785$22520$1VmeqK))
   (g$&i/o-rtd$22528$1VmeqK g$&i/o-rtd$22819$1VmeqK g$8785$22520$1VmeqK)
   (g$&i/o-rcd$22529$1VmeqK g$&i/o-rcd$22820$1VmeqK g$8786$22522$1VmeqK)
   (g$8798$22530$1VmeqK
     g$8798$22821$1VmeqK
     (make-record-type-descriptor
       '&i/o-read
       g$8785$22520$1VmeqK
       'g$8801$1VmeqK
       '#f
       '#f
       '#()))
   (g$8800$22531$1VmeqK g$8800$22822$1VmeqK '#f)
   (g$8799$22532$1VmeqK
     g$8799$22823$1VmeqK
     (make-record-constructor-descriptor
       g$8798$22530$1VmeqK
       g$8786$22522$1VmeqK
       g$8800$22531$1VmeqK))
   (g$p?$22535$1VmeqK
     g$p?$22824$1VmeqK
     (record-predicate g$8798$22530$1VmeqK))
   (g$make-i/o-read-error$22536$1VmeqK
     g$make-i/o-read-error$22825$1VmeqK
     (record-constructor g$8799$22532$1VmeqK))
   (g$i/o-read-error?$22537$1VmeqK
     g$i/o-read-error?$22826$1VmeqK
     (condition-predicate g$8798$22530$1VmeqK))
   (g$&i/o-read-rtd$22538$1VmeqK
     g$&i/o-read-rtd$22827$1VmeqK
     g$8798$22530$1VmeqK)
   (g$&i/o-read-rcd$22539$1VmeqK
     g$&i/o-read-rcd$22828$1VmeqK
     g$8799$22532$1VmeqK)
   (g$8811$22540$1VmeqK
     g$8811$22829$1VmeqK
     (make-record-type-descriptor
       '&i/o-write
       g$8785$22520$1VmeqK
       'g$8814$1VmeqK
       '#f
       '#f
       '#()))
   (g$8813$22541$1VmeqK g$8813$22830$1VmeqK '#f)
   (g$8812$22542$1VmeqK
     g$8812$22831$1VmeqK
     (make-record-constructor-descriptor
       g$8811$22540$1VmeqK
       g$8786$22522$1VmeqK
       g$8813$22541$1VmeqK))
   (g$p?$22545$1VmeqK
     g$p?$22832$1VmeqK
     (record-predicate g$8811$22540$1VmeqK))
   (g$make-i/o-write-error$22546$1VmeqK
     g$make-i/o-write-error$22833$1VmeqK
     (record-constructor g$8812$22542$1VmeqK))
   (g$i/o-write-error?$22547$1VmeqK
     g$i/o-write-error?$22834$1VmeqK
     (condition-predicate g$8811$22540$1VmeqK))
   (g$&i/o-write-rtd$22548$1VmeqK
     g$&i/o-write-rtd$22835$1VmeqK
     g$8811$22540$1VmeqK)
   (g$&i/o-write-rcd$22549$1VmeqK
     g$&i/o-write-rcd$22836$1VmeqK
     g$8812$22542$1VmeqK)
   (g$8824$22551$1VmeqK
     g$8824$22837$1VmeqK
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$8785$22520$1VmeqK
       'g$8827$1VmeqK
       '#f
       '#f
       '#((immutable position))))
   (g$8826$22552$1VmeqK g$8826$22838$1VmeqK '#f)
   (g$8825$22553$1VmeqK
     g$8825$22839$1VmeqK
     (make-record-constructor-descriptor
       g$8824$22551$1VmeqK
       g$8786$22522$1VmeqK
       g$8826$22552$1VmeqK))
   (g$p?$22556$1VmeqK
     g$p?$22840$1VmeqK
     (record-predicate g$8824$22551$1VmeqK))
   (g$make-i/o-invalid-position-error$22557$1VmeqK
     g$make-i/o-invalid-position-error$22841$1VmeqK
     (record-constructor g$8825$22553$1VmeqK))
   (g$i/o-error-position$22558$1VmeqK
     g$i/o-error-position$22842$1VmeqK
     (record-accessor g$8824$22551$1VmeqK '0))
   (g$i/o-invalid-position-error?$22559$1VmeqK
     g$i/o-invalid-position-error?$22843$1VmeqK
     (condition-predicate g$8824$22551$1VmeqK))
   (g$i/o-error-position$22560$1VmeqK
     g$i/o-error-position$22844$1VmeqK
     (condition-accessor
       g$8824$22551$1VmeqK
       g$i/o-error-position$22558$1VmeqK))
   (g$&i/o-invalid-position-rtd$22561$1VmeqK
     g$&i/o-invalid-position-rtd$22845$1VmeqK
     g$8824$22551$1VmeqK)
   (g$&i/o-invalid-position-rcd$22562$1VmeqK
     g$&i/o-invalid-position-rcd$22846$1VmeqK
     g$8825$22553$1VmeqK)
   (g$8839$22564$1VmeqK
     g$8839$22847$1VmeqK
     (make-record-type-descriptor
       '&i/o-filename
       g$8785$22520$1VmeqK
       'g$8842$1VmeqK
       '#f
       '#f
       '#((immutable filename))))
   (g$8841$22565$1VmeqK g$8841$22848$1VmeqK '#f)
   (g$8840$22566$1VmeqK
     g$8840$22849$1VmeqK
     (make-record-constructor-descriptor
       g$8839$22564$1VmeqK
       g$8786$22522$1VmeqK
       g$8841$22565$1VmeqK))
   (g$p?$22569$1VmeqK
     g$p?$22850$1VmeqK
     (record-predicate g$8839$22564$1VmeqK))
   (g$make-i/o-filename-error$22570$1VmeqK
     g$make-i/o-filename-error$22851$1VmeqK
     (record-constructor g$8840$22566$1VmeqK))
   (g$i/o-error-filename$22571$1VmeqK
     g$i/o-error-filename$22852$1VmeqK
     (record-accessor g$8839$22564$1VmeqK '0))
   (g$i/o-filename-error?$22572$1VmeqK
     g$i/o-filename-error?$22853$1VmeqK
     (condition-predicate g$8839$22564$1VmeqK))
   (g$i/o-error-filename$22573$1VmeqK
     g$i/o-error-filename$22854$1VmeqK
     (condition-accessor
       g$8839$22564$1VmeqK
       g$i/o-error-filename$22571$1VmeqK))
   (g$&i/o-filename-rtd$22574$1VmeqK
     g$&i/o-filename-rtd$22855$1VmeqK
     g$8839$22564$1VmeqK)
   (g$&i/o-filename-rcd$22575$1VmeqK
     g$&i/o-filename-rcd$22856$1VmeqK
     g$8840$22566$1VmeqK)
   (g$8854$22576$1VmeqK
     g$8854$22857$1VmeqK
     (make-record-type-descriptor
       '&i/o-file-protection
       g$8839$22564$1VmeqK
       'g$8857$1VmeqK
       '#f
       '#f
       '#()))
   (g$8856$22577$1VmeqK g$8856$22858$1VmeqK '#f)
   (g$8855$22578$1VmeqK
     g$8855$22859$1VmeqK
     (make-record-constructor-descriptor
       g$8854$22576$1VmeqK
       g$8840$22566$1VmeqK
       g$8856$22577$1VmeqK))
   (g$p?$22581$1VmeqK
     g$p?$22860$1VmeqK
     (record-predicate g$8854$22576$1VmeqK))
   (g$make-i/o-file-protection-error$22582$1VmeqK
     g$make-i/o-file-protection-error$22861$1VmeqK
     (record-constructor g$8855$22578$1VmeqK))
   (g$i/o-file-protection-error?$22583$1VmeqK
     g$i/o-file-protection-error?$22862$1VmeqK
     (condition-predicate g$8854$22576$1VmeqK))
   (g$&i/o-file-protection-rtd$22584$1VmeqK
     g$&i/o-file-protection-rtd$22863$1VmeqK
     g$8854$22576$1VmeqK)
   (g$&i/o-file-protection-rcd$22585$1VmeqK
     g$&i/o-file-protection-rcd$22864$1VmeqK
     g$8855$22578$1VmeqK)
   (g$8867$22586$1VmeqK
     g$8867$22865$1VmeqK
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$8854$22576$1VmeqK
       'g$8870$1VmeqK
       '#f
       '#f
       '#()))
   (g$8869$22587$1VmeqK g$8869$22866$1VmeqK '#f)
   (g$8868$22588$1VmeqK
     g$8868$22867$1VmeqK
     (make-record-constructor-descriptor
       g$8867$22586$1VmeqK
       g$8855$22578$1VmeqK
       g$8869$22587$1VmeqK))
   (g$p?$22591$1VmeqK
     g$p?$22868$1VmeqK
     (record-predicate g$8867$22586$1VmeqK))
   (g$make-i/o-file-is-read-only-error$22592$1VmeqK
     g$make-i/o-file-is-read-only-error$22869$1VmeqK
     (record-constructor g$8868$22588$1VmeqK))
   (g$i/o-file-is-read-only-error?$22593$1VmeqK
     g$i/o-file-is-read-only-error?$22870$1VmeqK
     (condition-predicate g$8867$22586$1VmeqK))
   (g$&i/o-file-is-read-only-rtd$22594$1VmeqK
     g$&i/o-file-is-read-only-rtd$22871$1VmeqK
     g$8867$22586$1VmeqK)
   (g$&i/o-file-is-read-only-rcd$22595$1VmeqK
     g$&i/o-file-is-read-only-rcd$22872$1VmeqK
     g$8868$22588$1VmeqK)
   (g$8880$22596$1VmeqK
     g$8880$22873$1VmeqK
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$8839$22564$1VmeqK
       'g$8883$1VmeqK
       '#f
       '#f
       '#()))
   (g$8882$22597$1VmeqK g$8882$22874$1VmeqK '#f)
   (g$8881$22598$1VmeqK
     g$8881$22875$1VmeqK
     (make-record-constructor-descriptor
       g$8880$22596$1VmeqK
       g$8840$22566$1VmeqK
       g$8882$22597$1VmeqK))
   (g$p?$22601$1VmeqK
     g$p?$22876$1VmeqK
     (record-predicate g$8880$22596$1VmeqK))
   (g$make-i/o-file-already-exists-error$22602$1VmeqK
     g$make-i/o-file-already-exists-error$22877$1VmeqK
     (record-constructor g$8881$22598$1VmeqK))
   (g$i/o-file-already-exists-error?$22603$1VmeqK
     g$i/o-file-already-exists-error?$22878$1VmeqK
     (condition-predicate g$8880$22596$1VmeqK))
   (g$&i/o-file-already-exists-rtd$22604$1VmeqK
     g$&i/o-file-already-exists-rtd$22879$1VmeqK
     g$8880$22596$1VmeqK)
   (g$&i/o-file-already-exists-rcd$22605$1VmeqK
     g$&i/o-file-already-exists-rcd$22880$1VmeqK
     g$8881$22598$1VmeqK)
   (g$8893$22606$1VmeqK
     g$8893$22881$1VmeqK
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$8839$22564$1VmeqK
       'g$8896$1VmeqK
       '#f
       '#f
       '#()))
   (g$8895$22607$1VmeqK g$8895$22882$1VmeqK '#f)
   (g$8894$22608$1VmeqK
     g$8894$22883$1VmeqK
     (make-record-constructor-descriptor
       g$8893$22606$1VmeqK
       g$8840$22566$1VmeqK
       g$8895$22607$1VmeqK))
   (g$p?$22611$1VmeqK
     g$p?$22884$1VmeqK
     (record-predicate g$8893$22606$1VmeqK))
   (g$make-i/o-file-does-not-exist-error$22612$1VmeqK
     g$make-i/o-file-does-not-exist-error$22885$1VmeqK
     (record-constructor g$8894$22608$1VmeqK))
   (g$i/o-file-does-not-exist-error?$22613$1VmeqK
     g$i/o-file-does-not-exist-error?$22886$1VmeqK
     (condition-predicate g$8893$22606$1VmeqK))
   (g$&i/o-file-does-not-exist-rtd$22614$1VmeqK
     g$&i/o-file-does-not-exist-rtd$22887$1VmeqK
     g$8893$22606$1VmeqK)
   (g$&i/o-file-does-not-exist-rcd$22615$1VmeqK
     g$&i/o-file-does-not-exist-rcd$22888$1VmeqK
     g$8894$22608$1VmeqK)
   (g$8906$22617$1VmeqK
     g$8906$22889$1VmeqK
     (make-record-type-descriptor
       '&i/o-port
       g$8785$22520$1VmeqK
       'g$8909$1VmeqK
       '#f
       '#f
       '#((immutable port))))
   (g$8908$22618$1VmeqK g$8908$22890$1VmeqK '#f)
   (g$8907$22619$1VmeqK
     g$8907$22891$1VmeqK
     (make-record-constructor-descriptor
       g$8906$22617$1VmeqK
       g$8786$22522$1VmeqK
       g$8908$22618$1VmeqK))
   (g$p?$22622$1VmeqK
     g$p?$22892$1VmeqK
     (record-predicate g$8906$22617$1VmeqK))
   (g$make-i/o-port-error$22623$1VmeqK
     g$make-i/o-port-error$22893$1VmeqK
     (record-constructor g$8907$22619$1VmeqK))
   (g$i/o-error-port$22624$1VmeqK
     g$i/o-error-port$22894$1VmeqK
     (record-accessor g$8906$22617$1VmeqK '0))
   (g$i/o-port-error?$22625$1VmeqK
     g$i/o-port-error?$22895$1VmeqK
     (condition-predicate g$8906$22617$1VmeqK))
   (g$i/o-error-port$22626$1VmeqK
     g$i/o-error-port$22896$1VmeqK
     (condition-accessor
       g$8906$22617$1VmeqK
       g$i/o-error-port$22624$1VmeqK))
   (g$&i/o-port-rtd$22627$1VmeqK
     g$&i/o-port-rtd$22897$1VmeqK
     g$8906$22617$1VmeqK)
   (g$&i/o-port-rcd$22628$1VmeqK
     g$&i/o-port-rcd$22898$1VmeqK
     g$8907$22619$1VmeqK)
   (g$8921$22629$1VmeqK
     g$8921$22899$1VmeqK
     (make-record-type-descriptor
       '&i/o-decoding
       g$8906$22617$1VmeqK
       'g$8924$1VmeqK
       '#f
       '#f
       '#()))
   (g$8923$22630$1VmeqK g$8923$22900$1VmeqK '#f)
   (g$8922$22631$1VmeqK
     g$8922$22901$1VmeqK
     (make-record-constructor-descriptor
       g$8921$22629$1VmeqK
       g$8907$22619$1VmeqK
       g$8923$22630$1VmeqK))
   (g$p?$22634$1VmeqK
     g$p?$22902$1VmeqK
     (record-predicate g$8921$22629$1VmeqK))
   (g$make-i/o-decoding-error$22635$1VmeqK
     g$make-i/o-decoding-error$22903$1VmeqK
     (record-constructor g$8922$22631$1VmeqK))
   (g$i/o-decoding-error?$22636$1VmeqK
     g$i/o-decoding-error?$22904$1VmeqK
     (condition-predicate g$8921$22629$1VmeqK))
   (g$&i/o-decoding-rtd$22637$1VmeqK
     g$&i/o-decoding-rtd$22905$1VmeqK
     g$8921$22629$1VmeqK)
   (g$&i/o-decoding-rcd$22638$1VmeqK
     g$&i/o-decoding-rcd$22906$1VmeqK
     g$8922$22631$1VmeqK)
   (g$8934$22640$1VmeqK
     g$8934$22907$1VmeqK
     (make-record-type-descriptor
       '&i/o-encoding
       g$8906$22617$1VmeqK
       'g$8937$1VmeqK
       '#f
       '#f
       '#((immutable char))))
   (g$8936$22641$1VmeqK g$8936$22908$1VmeqK '#f)
   (g$8935$22642$1VmeqK
     g$8935$22909$1VmeqK
     (make-record-constructor-descriptor
       g$8934$22640$1VmeqK
       g$8907$22619$1VmeqK
       g$8936$22641$1VmeqK))
   (g$p?$22645$1VmeqK
     g$p?$22910$1VmeqK
     (record-predicate g$8934$22640$1VmeqK))
   (g$make-i/o-encoding-error$22646$1VmeqK
     g$make-i/o-encoding-error$22911$1VmeqK
     (record-constructor g$8935$22642$1VmeqK))
   (g$i/o-encoding-error-char$22647$1VmeqK
     g$i/o-encoding-error-char$22912$1VmeqK
     (record-accessor g$8934$22640$1VmeqK '0))
   (g$i/o-encoding-error?$22648$1VmeqK
     g$i/o-encoding-error?$22913$1VmeqK
     (condition-predicate g$8934$22640$1VmeqK))
   (g$i/o-encoding-error-char$22649$1VmeqK
     g$i/o-encoding-error-char$22914$1VmeqK
     (condition-accessor
       g$8934$22640$1VmeqK
       g$i/o-encoding-error-char$22647$1VmeqK))
   (g$&i/o-encoding-rtd$22650$1VmeqK
     g$&i/o-encoding-rtd$22915$1VmeqK
     g$8934$22640$1VmeqK)
   (g$&i/o-encoding-rcd$22651$1VmeqK
     g$&i/o-encoding-rcd$22916$1VmeqK
     g$8935$22642$1VmeqK)
   (g$8949$22652$1VmeqK
     g$8949$22917$1VmeqK
     (make-record-type-descriptor
       '&no-infinities
       g$8729$22474$1VmeqK
       'g$8952$1VmeqK
       '#f
       '#f
       '#()))
   (g$8951$22653$1VmeqK g$8951$22918$1VmeqK '#f)
   (g$8950$22654$1VmeqK
     g$8950$22919$1VmeqK
     (make-record-constructor-descriptor
       g$8949$22652$1VmeqK
       g$8730$22476$1VmeqK
       g$8951$22653$1VmeqK))
   (g$p?$22657$1VmeqK
     g$p?$22920$1VmeqK
     (record-predicate g$8949$22652$1VmeqK))
   (g$make-no-infinities-violation$22658$1VmeqK
     g$make-no-infinities-violation$22921$1VmeqK
     (record-constructor g$8950$22654$1VmeqK))
   (g$no-infinities-violation?$22659$1VmeqK
     g$no-infinities-violation?$22922$1VmeqK
     (condition-predicate g$8949$22652$1VmeqK))
   (g$&no-infinities-rtd$22660$1VmeqK
     g$&no-infinities-rtd$22923$1VmeqK
     g$8949$22652$1VmeqK)
   (g$&no-infinities-rcd$22661$1VmeqK
     g$&no-infinities-rcd$22924$1VmeqK
     g$8950$22654$1VmeqK)
   (g$8962$22662$1VmeqK
     g$8962$22925$1VmeqK
     (make-record-type-descriptor
       '&no-nans
       g$8729$22474$1VmeqK
       'g$8965$1VmeqK
       '#f
       '#f
       '#()))
   (g$8964$22663$1VmeqK g$8964$22926$1VmeqK '#f)
   (g$8963$22664$1VmeqK
     g$8963$22927$1VmeqK
     (make-record-constructor-descriptor
       g$8962$22662$1VmeqK
       g$8730$22476$1VmeqK
       g$8964$22663$1VmeqK))
   (g$p?$22667$1VmeqK
     g$p?$22928$1VmeqK
     (record-predicate g$8962$22662$1VmeqK))
   (g$make-no-nans-violation$22668$1VmeqK
     g$make-no-nans-violation$22929$1VmeqK
     (record-constructor g$8963$22664$1VmeqK))
   (g$no-nans-violation?$22669$1VmeqK
     g$no-nans-violation?$22930$1VmeqK
     (condition-predicate g$8962$22662$1VmeqK))
   (g$&no-nans-rtd$22670$1VmeqK
     g$&no-nans-rtd$22931$1VmeqK
     g$8962$22662$1VmeqK)
   (g$&no-nans-rcd$22671$1VmeqK
     g$&no-nans-rcd$22932$1VmeqK
     g$8963$22664$1VmeqK))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$22933$1VmeqK
     g$append!$22939$1VmeqK
     (case-lambda
       ((g$a$22934$1VmeqK . g$b$22935$1VmeqK)
        (if (null? g$a$22934$1VmeqK)
          g$b$22935$1VmeqK
          (if (null? g$b$22935$1VmeqK)
            g$a$22934$1VmeqK
            (begin
              '#f
              ((letrec ((g$f$22936$1VmeqK
                          (case-lambda
                            ((g$a$22937$1VmeqK)
                             ((case-lambda
                                ((g$n$22938$1VmeqK)
                                 (if (null? g$n$22938$1VmeqK)
                                   (set-cdr!
                                     g$a$22937$1VmeqK
                                     g$b$22935$1VmeqK)
                                   (g$f$22936$1VmeqK
                                     g$n$22938$1VmeqK))))
                              (cdr g$a$22937$1VmeqK))))))
                 g$f$22936$1VmeqK)
               g$a$22934$1VmeqK)
              g$a$22934$1VmeqK)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$22940$1VmeqK
     g$inexact->exact$22960$1VmeqK
     g$exact$22205$1VmeqK)
   (g$exact->inexact$22941$1VmeqK
     g$exact->inexact$22961$1VmeqK
     g$inexact$22204$1VmeqK)
   (g$sign$22942$1VmeqK
     g$sign$22962$1VmeqK
     (case-lambda
       ((g$n$22948$1VmeqK)
        (if (g$>$22213$1VmeqK g$n$22948$1VmeqK '0)
          '1
          (if (g$<$22211$1VmeqK g$n$22948$1VmeqK '0)
            '-1
            (begin '#f '0))))))
   (g$quotient$22943$1VmeqK
     g$quotient$22963$1VmeqK
     (case-lambda
       ((g$n1$22949$1VmeqK g$n2$22950$1VmeqK)
        (begin
          (if (not (g$integer-valued?$22200$1VmeqK g$n1$22949$1VmeqK))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n1$22949$1VmeqK)
            (void))
          (if (not (g$integer-valued?$22200$1VmeqK g$n2$22950$1VmeqK))
            (assertion-violation
              'quotient
              '"not an integer"
              g$n2$22950$1VmeqK)
            (void))
          (* (g$sign$22942$1VmeqK g$n1$22949$1VmeqK)
             (g$sign$22942$1VmeqK g$n2$22950$1VmeqK)
             (g$div$22235$1VmeqK
               (g$abs$22236$1VmeqK g$n1$22949$1VmeqK)
               (g$abs$22236$1VmeqK g$n2$22950$1VmeqK)))))))
   (g$remainder$22944$1VmeqK
     g$remainder$22964$1VmeqK
     (case-lambda
       ((g$n1$22951$1VmeqK g$n2$22952$1VmeqK)
        (begin
          (if (not (g$integer-valued?$22200$1VmeqK g$n1$22951$1VmeqK))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n1$22951$1VmeqK)
            (void))
          (if (not (g$integer-valued?$22200$1VmeqK g$n2$22952$1VmeqK))
            (assertion-violation
              'remainder
              '"not an integer"
              g$n2$22952$1VmeqK)
            (void))
          (* (g$sign$22942$1VmeqK g$n1$22951$1VmeqK)
             (g$mod$21188$1VmeqK
               (g$abs$22236$1VmeqK g$n1$22951$1VmeqK)
               (g$abs$22236$1VmeqK g$n2$22952$1VmeqK)))))))
   (g$modulo$22945$1VmeqK
     g$modulo$22965$1VmeqK
     (case-lambda
       ((g$n1$22953$1VmeqK g$n2$22954$1VmeqK)
        (begin
          (if (not (g$integer-valued?$22200$1VmeqK g$n1$22953$1VmeqK))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n1$22953$1VmeqK)
            (void))
          (if (not (g$integer-valued?$22200$1VmeqK g$n2$22954$1VmeqK))
            (assertion-violation
              'modulo
              '"not an integer"
              g$n2$22954$1VmeqK)
            (void))
          (* (g$sign$22942$1VmeqK g$n2$22954$1VmeqK)
             (g$mod$21188$1VmeqK
               (* (g$sign$22942$1VmeqK g$n2$22954$1VmeqK)
                  g$n1$22953$1VmeqK)
               (g$abs$22236$1VmeqK g$n2$22954$1VmeqK)))))))
   (g$make-promise$22946$1VmeqK
     g$make-promise$22966$1VmeqK
     (case-lambda
       ((g$proc$22955$1VmeqK)
        ((case-lambda
           ((g$result-ready?$22956$1VmeqK g$result$22957$1VmeqK)
            (case-lambda
              (()
               (if g$result-ready?$22956$1VmeqK
                 g$result$22957$1VmeqK
                 ((case-lambda
                    ((g$x$22958$1VmeqK)
                     (if g$result-ready?$22956$1VmeqK
                       g$result$22957$1VmeqK
                       (begin
                         (set! g$result-ready?$22956$1VmeqK '#t)
                         (set! g$result$22957$1VmeqK g$x$22958$1VmeqK)
                         g$result$22957$1VmeqK))))
                  (g$proc$22955$1VmeqK)))))))
         '#f
         '#f))))
   (g$force$22947$1VmeqK
     g$force$22967$1VmeqK
     (case-lambda ((g$object$22959$1VmeqK) (g$object$22959$1VmeqK)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$22968$1VmeqK
     g$split$22993$1VmeqK
     (case-lambda
       ((g$ls$22972$1VmeqK)
        ((letrec ((g$loop$22973$1VmeqK
                    (case-lambda
                      ((g$rest$22974$1VmeqK
                         g$left$22975$1VmeqK
                         g$right$22976$1VmeqK)
                       (if (null? g$rest$22974$1VmeqK)
                         (cons g$left$22975$1VmeqK g$right$22976$1VmeqK)
                         (if (null? (cdr g$rest$22974$1VmeqK))
                           (cons
                             (cons
                               (car g$rest$22974$1VmeqK)
                               g$left$22975$1VmeqK)
                             g$right$22976$1VmeqK)
                           (begin
                             '#f
                             (g$loop$22973$1VmeqK
                               (g$cddr$21202$1VmeqK g$rest$22974$1VmeqK)
                               (cons
                                 (car g$rest$22974$1VmeqK)
                                 g$left$22975$1VmeqK)
                               (cons
                                 (g$cadr$21200$1VmeqK
                                   g$rest$22974$1VmeqK)
                                 g$right$22976$1VmeqK)))))))))
           g$loop$22973$1VmeqK)
         g$ls$22972$1VmeqK
         '()
         '()))))
   (g$reverse-it$22969$1VmeqK
     g$reverse-it$22994$1VmeqK
     (case-lambda
       ((g$head$22977$1VmeqK g$tail$22978$1VmeqK)
        (if (null? g$head$22977$1VmeqK)
          g$tail$22978$1VmeqK
          (g$reverse-it$22969$1VmeqK
            (cdr g$head$22977$1VmeqK)
            (cons (car g$head$22977$1VmeqK) g$tail$22978$1VmeqK))))))
   (g$merge$22970$1VmeqK
     g$merge$22995$1VmeqK
     (case-lambda
       ((g$list-1$22979$1VmeqK
          g$list-2$22980$1VmeqK
          g$precedes?$22981$1VmeqK)
        ((letrec ((g$loop$22982$1VmeqK
                    (case-lambda
                      ((g$source-1$22983$1VmeqK
                         g$source-2$22984$1VmeqK
                         g$so-far$22985$1VmeqK)
                       (if (null? g$source-1$22983$1VmeqK)
                         (g$reverse-it$22969$1VmeqK
                           g$so-far$22985$1VmeqK
                           g$source-2$22984$1VmeqK)
                         (if (null? g$source-2$22984$1VmeqK)
                           (g$reverse-it$22969$1VmeqK
                             g$so-far$22985$1VmeqK
                             g$source-1$22983$1VmeqK)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$car-1$22986$1VmeqK
                                   g$car-2$22987$1VmeqK)
                                 (if (g$precedes?$22981$1VmeqK
                                       g$car-2$22987$1VmeqK
                                       g$car-1$22986$1VmeqK)
                                   (g$loop$22982$1VmeqK
                                     g$source-1$22983$1VmeqK
                                     (cdr g$source-2$22984$1VmeqK)
                                     (cons
                                       g$car-2$22987$1VmeqK
                                       g$so-far$22985$1VmeqK))
                                   (g$loop$22982$1VmeqK
                                     g$source-2$22984$1VmeqK
                                     (cdr g$source-1$22983$1VmeqK)
                                     (cons
                                       g$car-1$22986$1VmeqK
                                       g$so-far$22985$1VmeqK)))))
                              (car g$source-1$22983$1VmeqK)
                              (car g$source-2$22984$1VmeqK)))))))))
           g$loop$22982$1VmeqK)
         g$list-1$22979$1VmeqK
         g$list-2$22980$1VmeqK
         '()))))
   (g$list-sort$22971$1VmeqK
     g$list-sort$22996$1VmeqK
     (case-lambda
       ((g$precedes?$22988$1VmeqK g$ls$22989$1VmeqK)
        (if (null? g$ls$22989$1VmeqK)
          '()
          ((letrec ((g$helper$22990$1VmeqK
                      (case-lambda
                        ((g$piece$22991$1VmeqK)
                         (if (null? (cdr g$piece$22991$1VmeqK))
                           g$piece$22991$1VmeqK
                           ((case-lambda
                              ((g$parts$22992$1VmeqK)
                               (g$merge$22970$1VmeqK
                                 (g$helper$22990$1VmeqK
                                   (car g$parts$22992$1VmeqK))
                                 (g$helper$22990$1VmeqK
                                   (cdr g$parts$22992$1VmeqK))
                                 g$precedes?$22988$1VmeqK)))
                            (g$split$22968$1VmeqK
                              g$piece$22991$1VmeqK)))))))
             g$helper$22990$1VmeqK)
           g$ls$22989$1VmeqK))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$23035$1VmeqK
     g$string-ci=?$23141$1VmeqK
     (case-lambda
       ((g$a$23087$1VmeqK g$b$23088$1VmeqK . g$rest$23089$1VmeqK)
        (begin
          (if (not (string? g$a$23087$1VmeqK))
            (assertion-violation
              'string-ci=?
              '"not a string"
              g$a$23087$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23090$1VmeqK)
               (begin
                 (if (not (string? g$x$23090$1VmeqK))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$23090$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23091$1VmeqK)
                     (begin
                       (set! g$a$23087$1VmeqK g$x$23090$1VmeqK)
                       g$r$23091$1VmeqK)))
                  (g$=$22210$1VmeqK
                    (string-ci-compare
                      g$a$23087$1VmeqK
                      g$x$23090$1VmeqK)
                    '0)))))
            (cons g$b$23088$1VmeqK g$rest$23089$1VmeqK))))))
   (g$string-ci<?$23036$1VmeqK
     g$string-ci<?$23142$1VmeqK
     (case-lambda
       ((g$a$23092$1VmeqK g$b$23093$1VmeqK . g$rest$23094$1VmeqK)
        (begin
          (if (not (string? g$a$23092$1VmeqK))
            (assertion-violation
              'string-ci<?
              '"not a string"
              g$a$23092$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23095$1VmeqK)
               (begin
                 (if (not (string? g$x$23095$1VmeqK))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$23095$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23096$1VmeqK)
                     (begin
                       (set! g$a$23092$1VmeqK g$x$23095$1VmeqK)
                       g$r$23096$1VmeqK)))
                  (g$<$22211$1VmeqK
                    (string-ci-compare
                      g$a$23092$1VmeqK
                      g$x$23095$1VmeqK)
                    '0)))))
            (cons g$b$23093$1VmeqK g$rest$23094$1VmeqK))))))
   (g$string-ci>?$23037$1VmeqK
     g$string-ci>?$23143$1VmeqK
     (case-lambda
       ((g$a$23097$1VmeqK g$b$23098$1VmeqK . g$rest$23099$1VmeqK)
        (begin
          (if (not (string? g$a$23097$1VmeqK))
            (assertion-violation
              'string-ci>?
              '"not a string"
              g$a$23097$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23100$1VmeqK)
               (begin
                 (if (not (string? g$x$23100$1VmeqK))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$23100$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23101$1VmeqK)
                     (begin
                       (set! g$a$23097$1VmeqK g$x$23100$1VmeqK)
                       g$r$23101$1VmeqK)))
                  (g$>$22213$1VmeqK
                    (string-ci-compare
                      g$a$23097$1VmeqK
                      g$x$23100$1VmeqK)
                    '0)))))
            (cons g$b$23098$1VmeqK g$rest$23099$1VmeqK))))))
   (g$string-ci<=?$23038$1VmeqK
     g$string-ci<=?$23144$1VmeqK
     (case-lambda
       ((g$a$23102$1VmeqK g$b$23103$1VmeqK . g$rest$23104$1VmeqK)
        (begin
          (if (not (string? g$a$23102$1VmeqK))
            (assertion-violation
              'string-ci<=?
              '"not a string"
              g$a$23102$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23105$1VmeqK)
               (begin
                 (if (not (string? g$x$23105$1VmeqK))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$23105$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23106$1VmeqK)
                     (begin
                       (set! g$a$23102$1VmeqK g$x$23105$1VmeqK)
                       g$r$23106$1VmeqK)))
                  (g$<=$22212$1VmeqK
                    (string-ci-compare
                      g$a$23102$1VmeqK
                      g$x$23105$1VmeqK)
                    '0)))))
            (cons g$b$23103$1VmeqK g$rest$23104$1VmeqK))))))
   (g$string-ci>=?$23039$1VmeqK
     g$string-ci>=?$23145$1VmeqK
     (case-lambda
       ((g$a$23107$1VmeqK g$b$23108$1VmeqK . g$rest$23109$1VmeqK)
        (begin
          (if (not (string? g$a$23107$1VmeqK))
            (assertion-violation
              'string-ci>=?
              '"not a string"
              g$a$23107$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23110$1VmeqK)
               (begin
                 (if (not (string? g$x$23110$1VmeqK))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$23110$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23111$1VmeqK)
                     (begin
                       (set! g$a$23107$1VmeqK g$x$23110$1VmeqK)
                       g$r$23111$1VmeqK)))
                  (g$>=$22214$1VmeqK
                    (string-ci-compare
                      g$a$23107$1VmeqK
                      g$x$23110$1VmeqK)
                    '0)))))
            (cons g$b$23108$1VmeqK g$rest$23109$1VmeqK))))))
   (g$char-ci=?$23078$1VmeqK
     g$char-ci=?$23146$1VmeqK
     (case-lambda
       ((g$a$23112$1VmeqK g$b$23113$1VmeqK . g$rest$23114$1VmeqK)
        (begin
          (if (not (g$char?$21178$1VmeqK g$a$23112$1VmeqK))
            (assertion-violation
              'char-ci=?
              '"not a char"
              g$a$23112$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23115$1VmeqK)
               (begin
                 (if (not (g$char?$21178$1VmeqK g$x$23115$1VmeqK))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$23115$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23116$1VmeqK)
                     (begin
                       (set! g$a$23112$1VmeqK g$x$23115$1VmeqK)
                       g$r$23116$1VmeqK)))
                  (g$=$22210$1VmeqK
                    (char->integer (char-upcase g$a$23112$1VmeqK))
                    (char->integer (char-upcase g$x$23115$1VmeqK)))))))
            (cons g$b$23113$1VmeqK g$rest$23114$1VmeqK))))))
   (g$char-ci<?$23079$1VmeqK
     g$char-ci<?$23147$1VmeqK
     (case-lambda
       ((g$a$23117$1VmeqK g$b$23118$1VmeqK . g$rest$23119$1VmeqK)
        (begin
          (if (not (g$char?$21178$1VmeqK g$a$23117$1VmeqK))
            (assertion-violation
              'char-ci<?
              '"not a char"
              g$a$23117$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23120$1VmeqK)
               (begin
                 (if (not (g$char?$21178$1VmeqK g$x$23120$1VmeqK))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$23120$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23121$1VmeqK)
                     (begin
                       (set! g$a$23117$1VmeqK g$x$23120$1VmeqK)
                       g$r$23121$1VmeqK)))
                  (g$<$22211$1VmeqK
                    (char->integer (char-upcase g$a$23117$1VmeqK))
                    (char->integer (char-upcase g$x$23120$1VmeqK)))))))
            (cons g$b$23118$1VmeqK g$rest$23119$1VmeqK))))))
   (g$char-ci>?$23080$1VmeqK
     g$char-ci>?$23148$1VmeqK
     (case-lambda
       ((g$a$23122$1VmeqK g$b$23123$1VmeqK . g$rest$23124$1VmeqK)
        (begin
          (if (not (g$char?$21178$1VmeqK g$a$23122$1VmeqK))
            (assertion-violation
              'char-ci>?
              '"not a char"
              g$a$23122$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23125$1VmeqK)
               (begin
                 (if (not (g$char?$21178$1VmeqK g$x$23125$1VmeqK))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$23125$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23126$1VmeqK)
                     (begin
                       (set! g$a$23122$1VmeqK g$x$23125$1VmeqK)
                       g$r$23126$1VmeqK)))
                  (g$>$22213$1VmeqK
                    (char->integer (char-upcase g$a$23122$1VmeqK))
                    (char->integer (char-upcase g$x$23125$1VmeqK)))))))
            (cons g$b$23123$1VmeqK g$rest$23124$1VmeqK))))))
   (g$char-ci<=?$23081$1VmeqK
     g$char-ci<=?$23149$1VmeqK
     (case-lambda
       ((g$a$23127$1VmeqK g$b$23128$1VmeqK . g$rest$23129$1VmeqK)
        (begin
          (if (not (g$char?$21178$1VmeqK g$a$23127$1VmeqK))
            (assertion-violation
              'char-ci<=?
              '"not a char"
              g$a$23127$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23130$1VmeqK)
               (begin
                 (if (not (g$char?$21178$1VmeqK g$x$23130$1VmeqK))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$23130$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23131$1VmeqK)
                     (begin
                       (set! g$a$23127$1VmeqK g$x$23130$1VmeqK)
                       g$r$23131$1VmeqK)))
                  (g$<=$22212$1VmeqK
                    (char->integer (char-upcase g$a$23127$1VmeqK))
                    (char->integer (char-upcase g$x$23130$1VmeqK)))))))
            (cons g$b$23128$1VmeqK g$rest$23129$1VmeqK))))))
   (g$char-ci>=?$23082$1VmeqK
     g$char-ci>=?$23150$1VmeqK
     (case-lambda
       ((g$a$23132$1VmeqK g$b$23133$1VmeqK . g$rest$23134$1VmeqK)
        (begin
          (if (not (g$char?$21178$1VmeqK g$a$23132$1VmeqK))
            (assertion-violation
              'char-ci>=?
              '"not a char"
              g$a$23132$1VmeqK)
            (void))
          (g$for-all$20347$1VmeqK
            (case-lambda
              ((g$x$23135$1VmeqK)
               (begin
                 (if (not (g$char?$21178$1VmeqK g$x$23135$1VmeqK))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$23135$1VmeqK)
                   (void))
                 ((case-lambda
                    ((g$r$23136$1VmeqK)
                     (begin
                       (set! g$a$23132$1VmeqK g$x$23135$1VmeqK)
                       g$r$23136$1VmeqK)))
                  (g$>=$22214$1VmeqK
                    (char->integer (char-upcase g$a$23132$1VmeqK))
                    (char->integer (char-upcase g$x$23135$1VmeqK)))))))
            (cons g$b$23133$1VmeqK g$rest$23134$1VmeqK))))))
   (g$string-normalize-nfc$23083$1VmeqK
     g$string-normalize-nfc$23151$1VmeqK
     (case-lambda
       ((g$s$23137$1VmeqK) (string-normalize g$s$23137$1VmeqK 'formc))))
   (g$string-normalize-nfd$23084$1VmeqK
     g$string-normalize-nfd$23152$1VmeqK
     (case-lambda
       ((g$s$23138$1VmeqK) (string-normalize g$s$23138$1VmeqK 'formd))))
   (g$string-normalize-nfkc$23085$1VmeqK
     g$string-normalize-nfkc$23153$1VmeqK
     (case-lambda
       ((g$s$23139$1VmeqK)
        (string-normalize g$s$23139$1VmeqK 'formkc))))
   (g$string-normalize-nfkd$23086$1VmeqK
     g$string-normalize-nfkd$23154$1VmeqK
     (case-lambda
       ((g$s$23140$1VmeqK)
        (string-normalize g$s$23140$1VmeqK 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$23155$1VmeqK
     g$bignum?$23232$1VmeqK
     (case-lambda
       ((g$obj$23172$1VmeqK)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$23172$1VmeqK))))
   (g$->bignum$23156$1VmeqK
     g$->bignum$23233$1VmeqK
     (case-lambda
       ((g$ei$23173$1VmeqK)
        (if (g$bignum?$23155$1VmeqK g$ei$23173$1VmeqK)
          g$ei$23173$1VmeqK
          (if (g$fixnum?$21184$1VmeqK g$ei$23173$1VmeqK)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$23173$1VmeqK)
            (begin
              '#f
              (assertion-violation
                '#f
                '"not a exact integer"
                g$ei$23173$1VmeqK)))))))
   (g$bitwise-not$23157$1VmeqK
     g$bitwise-not$23234$1VmeqK
     (case-lambda
       ((g$ei$23174$1VmeqK)
        (g$exact$22205$1VmeqK
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$23156$1VmeqK g$ei$23174$1VmeqK))))))
   (g$bitwise-and$23158$1VmeqK
     g$bitwise-and$23235$1VmeqK
     (case-lambda
       (() '-1)
       ((g$ei$23175$1VmeqK) (g$->bignum$23156$1VmeqK g$ei$23175$1VmeqK))
       ((g$ei1$23176$1VmeqK g$ei2$23177$1VmeqK)
        (g$exact$22205$1VmeqK
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$23156$1VmeqK g$ei1$23176$1VmeqK)
            (g$->bignum$23156$1VmeqK g$ei2$23177$1VmeqK))))
       ((g$ei1$23178$1VmeqK g$ei2$23179$1VmeqK . g$rest$23180$1VmeqK)
        (g$fold-left$20352$1VmeqK
          g$bitwise-and$23158$1VmeqK
          (g$->bignum$23156$1VmeqK g$ei1$23178$1VmeqK)
          (cons g$ei2$23179$1VmeqK g$rest$23180$1VmeqK)))))
   (g$bitwise-ior$23159$1VmeqK
     g$bitwise-ior$23236$1VmeqK
     (case-lambda
       (() '0)
       ((g$ei$23181$1VmeqK) (g$->bignum$23156$1VmeqK g$ei$23181$1VmeqK))
       ((g$ei1$23182$1VmeqK g$ei2$23183$1VmeqK)
        (g$exact$22205$1VmeqK
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$23156$1VmeqK g$ei1$23182$1VmeqK)
            (g$->bignum$23156$1VmeqK g$ei2$23183$1VmeqK))))
       ((g$ei1$23184$1VmeqK g$ei2$23185$1VmeqK . g$rest$23186$1VmeqK)
        (g$fold-left$20352$1VmeqK
          g$bitwise-ior$23159$1VmeqK
          (g$->bignum$23156$1VmeqK g$ei1$23184$1VmeqK)
          (cons g$ei2$23185$1VmeqK g$rest$23186$1VmeqK)))))
   (g$bitwise-xor$23160$1VmeqK
     g$bitwise-xor$23237$1VmeqK
     (case-lambda
       (() '0)
       ((g$ei$23187$1VmeqK) (g$->bignum$23156$1VmeqK g$ei$23187$1VmeqK))
       ((g$ei1$23188$1VmeqK g$ei2$23189$1VmeqK)
        (g$exact$22205$1VmeqK
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$23156$1VmeqK g$ei1$23188$1VmeqK)
            (g$->bignum$23156$1VmeqK g$ei2$23189$1VmeqK))))
       ((g$ei1$23190$1VmeqK g$ei2$23191$1VmeqK . g$rest$23192$1VmeqK)
        (g$fold-left$20352$1VmeqK
          g$bitwise-xor$23160$1VmeqK
          (g$->bignum$23156$1VmeqK g$ei1$23190$1VmeqK)
          (cons g$ei2$23191$1VmeqK g$rest$23192$1VmeqK)))))
   (g$bitwise-bit-count$23161$1VmeqK
     g$bitwise-bit-count$23238$1VmeqK
     (case-lambda
       ((g$ei$23193$1VmeqK)
        (if (g$positive?$22202$1VmeqK g$ei$23193$1VmeqK)
          ((letrec ((g$f$23194$1VmeqK
                      (case-lambda
                        ((g$c$23195$1VmeqK g$ei$23196$1VmeqK)
                         (if (g$positive?$22202$1VmeqK
                               g$ei$23196$1VmeqK)
                           (g$f$23194$1VmeqK
                             (+ g$c$23195$1VmeqK
                                (g$bitwise-and$23158$1VmeqK
                                  g$ei$23196$1VmeqK
                                  '1))
                             (g$bitwise-arithmetic-shift-right$23170$1VmeqK
                               g$ei$23196$1VmeqK
                               '1))
                           g$c$23195$1VmeqK)))))
             g$f$23194$1VmeqK)
           '0
           (g$->bignum$23156$1VmeqK g$ei$23193$1VmeqK))
          (g$bitwise-not$23157$1VmeqK
            (g$bitwise-bit-count$23161$1VmeqK
              (g$bitwise-not$23157$1VmeqK g$ei$23193$1VmeqK)))))))
   (g$bitwise-length$23162$1VmeqK
     g$bitwise-length$23239$1VmeqK
     (case-lambda
       ((g$ei$23197$1VmeqK)
        ((case-lambda
           ((g$ei$23198$1VmeqK)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$23198$1VmeqK
                  (g$->bignum$23156$1VmeqK '0))
              (g$bitwise-length$23162$1VmeqK
                (g$bitwise-not$23157$1VmeqK g$ei$23198$1VmeqK))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$23198$1VmeqK))))
         (g$->bignum$23156$1VmeqK g$ei$23197$1VmeqK)))))
   (g$bitwise-first-bit-set$23163$1VmeqK
     g$bitwise-first-bit-set$23240$1VmeqK
     (case-lambda
       ((g$ei$23199$1VmeqK)
        ((case-lambda
           ((g$ei$23200$1VmeqK)
            (if (g$zero?$22201$1VmeqK g$ei$23200$1VmeqK)
              '-1
              ((letrec ((g$f$23201$1VmeqK
                          (case-lambda
                            ((g$c$23202$1VmeqK g$ei$23203$1VmeqK)
                             (if (g$=$22210$1VmeqK
                                   '1
                                   (g$bitwise-and$23158$1VmeqK
                                     g$ei$23203$1VmeqK
                                     '1))
                               g$c$23202$1VmeqK
                               (g$f$23201$1VmeqK
                                 (+ g$c$23202$1VmeqK '1)
                                 (g$bitwise-arithmetic-shift-right$23170$1VmeqK
                                   g$ei$23203$1VmeqK
                                   '1)))))))
                 g$f$23201$1VmeqK)
               '0
               g$ei$23200$1VmeqK))))
         (g$->bignum$23156$1VmeqK g$ei$23199$1VmeqK)))))
   (g$bitwise-bit-set?$23164$1VmeqK
     g$bitwise-bit-set?$23241$1VmeqK
     (case-lambda
       ((g$ei$23204$1VmeqK g$k$23205$1VmeqK)
        ((case-lambda
           ((g$ei$23206$1VmeqK g$k$23207$1VmeqK)
            (begin
              (if (g$negative?$22203$1VmeqK g$k$23207$1VmeqK)
                (assertion-violation
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$23207$1VmeqK)
                (void))
              (if (g$=$22210$1VmeqK '-1 g$ei$23206$1VmeqK)
                '#t
                (begin
                  '#f
                  (g$=$22210$1VmeqK
                    '1
                    (g$bitwise-and$23158$1VmeqK
                      '1
                      (g$bitwise-arithmetic-shift-right$23170$1VmeqK
                        g$ei$23206$1VmeqK
                        g$k$23207$1VmeqK))))))))
         (g$->bignum$23156$1VmeqK g$ei$23204$1VmeqK)
         (g$->bignum$23156$1VmeqK g$k$23205$1VmeqK)))))
   (g$bitwise-if$23165$1VmeqK
     g$bitwise-if$23242$1VmeqK
     (case-lambda
       ((g$ei1$23208$1VmeqK g$ei2$23209$1VmeqK g$ei3$23210$1VmeqK)
        (g$bitwise-ior$23159$1VmeqK
          (g$bitwise-and$23158$1VmeqK
            g$ei1$23208$1VmeqK
            g$ei2$23209$1VmeqK)
          (g$bitwise-and$23158$1VmeqK
            (g$bitwise-not$23157$1VmeqK g$ei1$23208$1VmeqK)
            g$ei3$23210$1VmeqK)))))
   (g$bitwise-copy-bit$23166$1VmeqK
     g$bitwise-copy-bit$23243$1VmeqK
     (case-lambda
       ((g$ei1$23211$1VmeqK g$ei2$23212$1VmeqK g$ei3$23213$1VmeqK)
        (g$bitwise-if$23165$1VmeqK
          (g$bitwise-arithmetic-shift-left$23169$1VmeqK
            '1
            g$ei2$23212$1VmeqK)
          (g$bitwise-arithmetic-shift-left$23169$1VmeqK
            g$ei3$23213$1VmeqK
            g$ei2$23212$1VmeqK)
          g$ei1$23211$1VmeqK))))
   (g$bitwise-bit-field$23167$1VmeqK
     g$bitwise-bit-field$23244$1VmeqK
     (case-lambda
       ((g$ei1$23214$1VmeqK g$ei2$23215$1VmeqK g$ei3$23216$1VmeqK)
        (g$bitwise-arithmetic-shift-right$23170$1VmeqK
          (g$bitwise-and$23158$1VmeqK
            g$ei1$23214$1VmeqK
            (g$bitwise-not$23157$1VmeqK
              (g$bitwise-arithmetic-shift-left$23169$1VmeqK
                '-1
                g$ei3$23216$1VmeqK)))
          g$ei2$23215$1VmeqK))))
   (g$bitwise-copy-bit-field$23168$1VmeqK
     g$bitwise-copy-bit-field$23245$1VmeqK
     (case-lambda
       ((g$to$23217$1VmeqK
          g$start$23218$1VmeqK
          g$end$23219$1VmeqK
          g$from$23220$1VmeqK)
        (g$bitwise-if$23165$1VmeqK
          (g$bitwise-and$23158$1VmeqK
            (g$bitwise-arithmetic-shift-left$23169$1VmeqK
              '-1
              g$start$23218$1VmeqK)
            (g$bitwise-not$23157$1VmeqK
              (g$bitwise-arithmetic-shift-left$23169$1VmeqK
                '-1
                g$end$23219$1VmeqK)))
          (g$bitwise-arithmetic-shift-left$23169$1VmeqK
            g$from$23220$1VmeqK
            g$start$23218$1VmeqK)
          g$to$23217$1VmeqK))))
   (g$bitwise-arithmetic-shift-left$23169$1VmeqK
     g$bitwise-arithmetic-shift-left$23246$1VmeqK
     (case-lambda
       ((g$ei1$23221$1VmeqK g$ei2$23222$1VmeqK)
        (bitwise-arithmetic-shift
          g$ei1$23221$1VmeqK
          g$ei2$23222$1VmeqK))))
   (g$bitwise-arithmetic-shift-right$23170$1VmeqK
     g$bitwise-arithmetic-shift-right$23247$1VmeqK
     (case-lambda
       ((g$ei1$23223$1VmeqK g$ei2$23224$1VmeqK)
        (bitwise-arithmetic-shift
          g$ei1$23223$1VmeqK
          (- g$ei2$23224$1VmeqK)))))
   (g$bitwise-rotate-bit-field$23171$1VmeqK
     g$bitwise-rotate-bit-field$23248$1VmeqK
     (case-lambda
       ((g$n$23225$1VmeqK
          g$start$23226$1VmeqK
          g$end$23227$1VmeqK
          g$count$23228$1VmeqK)
        ((case-lambda
           ((g$width$23229$1VmeqK)
            (if (g$positive?$22202$1VmeqK g$width$23229$1VmeqK)
              ((case-lambda
                 ((g$count$23230$1VmeqK g$field$23231$1VmeqK)
                  (g$bitwise-copy-bit-field$23168$1VmeqK
                    g$n$23225$1VmeqK
                    g$start$23226$1VmeqK
                    g$end$23227$1VmeqK
                    (g$bitwise-ior$23159$1VmeqK
                      (g$bitwise-arithmetic-shift-left$23169$1VmeqK
                        g$field$23231$1VmeqK
                        g$count$23230$1VmeqK)
                      (g$bitwise-arithmetic-shift-right$23170$1VmeqK
                        g$field$23231$1VmeqK
                        (- g$width$23229$1VmeqK
                           g$count$23230$1VmeqK))))))
               (g$mod$21188$1VmeqK
                 g$count$23228$1VmeqK
                 g$width$23229$1VmeqK)
               (g$bitwise-bit-field$23167$1VmeqK
                 g$n$23225$1VmeqK
                 g$start$23226$1VmeqK
                 g$end$23227$1VmeqK))
              g$n$23225$1VmeqK)))
         (- g$end$23227$1VmeqK g$start$23226$1VmeqK))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$23249$1VmeqK
     g$greatest-fixnum$25478$1VmeqK
     (case-lambda (() '2147483647)))
   (g$least-fixnum$23250$1VmeqK
     g$least-fixnum$25479$1VmeqK
     (case-lambda (() '-2147483648)))
   (g$fx+$23356$1VmeqK
     g$fx+$25480$1VmeqK
     (case-lambda
       ((g$x1$23751$1VmeqK g$x2$23752$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23751$1VmeqK))
            (assertion-violation 'fx+ '"not a fixnum" g$x1$23751$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23752$1VmeqK))
            (assertion-violation 'fx+ '"not a fixnum" g$x2$23752$1VmeqK)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$23751$1VmeqK g$x2$23752$1VmeqK)
                (g$overflow-error$23359$1VmeqK '#f)))))))))
   (g$fx*$23357$1VmeqK
     g$fx*$25481$1VmeqK
     (case-lambda
       ((g$x1$23753$1VmeqK g$x2$23754$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23753$1VmeqK))
            (assertion-violation 'fx* '"not a fixnum" g$x1$23753$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23754$1VmeqK))
            (assertion-violation 'fx* '"not a fixnum" g$x2$23754$1VmeqK)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$23753$1VmeqK g$x2$23754$1VmeqK)
                (g$overflow-error$23359$1VmeqK '#f)))))))))
   (g$fx-$23358$1VmeqK
     g$fx-$25482$1VmeqK
     (case-lambda
       ((g$x1$23755$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23755$1VmeqK))
            (assertion-violation 'fx- '"not a fixnum" g$x1$23755$1VmeqK)
            (void))
          (if ($fx=? (g$least-fixnum$23250$1VmeqK) g$x1$23755$1VmeqK)
            (g$overflow-error$23359$1VmeqK 'fx- g$x1$23755$1VmeqK)
            (void))
          ($$fx- g$x1$23755$1VmeqK)))
       ((g$x1$23756$1VmeqK g$x2$23757$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23756$1VmeqK))
            (assertion-violation 'fx- '"not a fixnum" g$x1$23756$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23757$1VmeqK))
            (assertion-violation 'fx- '"not a fixnum" g$x2$23757$1VmeqK)
            (void))
          ($try
            ($fx- g$x1$23756$1VmeqK g$x2$23757$1VmeqK)
            (g$overflow-error$23359$1VmeqK '#f))))))
   (g$overflow-error$23359$1VmeqK
     g$overflow-error$25483$1VmeqK
     (case-lambda
       ((g$name$23758$1VmeqK . g$irritants$23759$1VmeqK)
        (raise
          (condition
            (g$make-implementation-restriction-violation$22781$1VmeqK)
            (g$make-who-condition$22743$1VmeqK g$name$23758$1VmeqK)
            (g$make-message-condition$22683$1VmeqK
              '"arithmetic overflow")
            (g$make-irritants-condition$22733$1VmeqK
              g$irritants$23759$1VmeqK))))))
   (g$residual-fxarithmetic-shift*$23375$1VmeqK
     g$residual-fxarithmetic-shift*$25484$1VmeqK
     (case-lambda
       ((g$x$23780$1VmeqK g$k$23781$1VmeqK)
        (if ($fx=? g$k$23781$1VmeqK '0)
          g$x$23780$1VmeqK
          (if ($fx<? g$k$23781$1VmeqK '0)
            ($fxarithmetic-shift-right
              g$x$23780$1VmeqK
              ($$fx- g$k$23781$1VmeqK))
            (begin
              '#f
              ((case-lambda
                 ((g$i$23782$1VmeqK)
                  (begin
                    (if ($fx>?
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$x$23780$1VmeqK)
                          (clr-call-internal
                            'System.Math
                            '"abs(int32)"
                            '()
                            g$i$23782$1VmeqK))
                      (g$overflow-error$23359$1VmeqK
                        'fxarithmetic-shift
                        g$x$23780$1VmeqK
                        g$k$23781$1VmeqK)
                      (void))
                    g$i$23782$1VmeqK)))
               ($fxarithmetic-shift-left
                 g$x$23780$1VmeqK
                 g$k$23781$1VmeqK))))))))
   (g$fxarithmetic-shift$23376$1VmeqK
     g$fxarithmetic-shift$25485$1VmeqK
     (case-lambda
       ((g$x$23783$1VmeqK g$k$23784$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x$23783$1VmeqK))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$23783$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$k$23784$1VmeqK))
            (assertion-violation
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$23784$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23805$1VmeqK g$k$23806$1VmeqK)
                  (if ($fx=? g$k$23806$1VmeqK '0)
                    g$x$23805$1VmeqK
                    (if ($fx<? g$k$23806$1VmeqK '0)
                      ($fxarithmetic-shift-right
                        g$x$23805$1VmeqK
                        ($$fx- g$k$23806$1VmeqK))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$23807$1VmeqK)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$23805$1VmeqK)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$23807$1VmeqK))
                                (g$overflow-error$23359$1VmeqK
                                  'fxarithmetic-shift
                                  g$x$23805$1VmeqK
                                  g$k$23806$1VmeqK)
                                (void))
                              g$i$23807$1VmeqK)))
                         ($fxarithmetic-shift-left
                           g$x$23805$1VmeqK
                           g$k$23806$1VmeqK)))))))
               g$x$23783$1VmeqK
               g$k$23784$1VmeqK))))))))
   (g$residual-fxbit-count*$23392$1VmeqK
     g$residual-fxbit-count*$25486$1VmeqK
     (case-lambda
       ((g$x$23828$1VmeqK)
        (if ($fx<=? g$x$23828$1VmeqK '0)
          ($fxnot
            (g$residual-fxbit-count*$23392$1VmeqK
              ($fxnot g$x$23828$1VmeqK)))
          ((letrec ((g$f$23829$1VmeqK
                      (case-lambda
                        ((g$count$23830$1VmeqK g$x$23831$1VmeqK)
                         (if ($fx<? '0 g$x$23831$1VmeqK)
                           (g$f$23829$1VmeqK
                             ($$fx+
                               g$count$23830$1VmeqK
                               ($fxand g$x$23831$1VmeqK '1))
                             ($fxarithmetic-shift-right
                               g$x$23831$1VmeqK
                               '1))
                           g$count$23830$1VmeqK)))))
             g$f$23829$1VmeqK)
           '0
           g$x$23828$1VmeqK)))))
   (g$fxbit-count$23393$1VmeqK
     g$fxbit-count$25487$1VmeqK
     (case-lambda
       ((g$x$23832$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x$23832$1VmeqK))
            (assertion-violation
              'fxbit-count
              '"not a fixnum"
              g$x$23832$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23853$1VmeqK)
                  (if ($fx<=? g$x$23853$1VmeqK '0)
                    ($fxnot
                      (g$residual-fxbit-count*$23392$1VmeqK
                        ($fxnot g$x$23853$1VmeqK)))
                    ((letrec ((g$f$23854$1VmeqK
                                (case-lambda
                                  ((g$count$23855$1VmeqK
                                     g$x$23856$1VmeqK)
                                   (if ($fx<? '0 g$x$23856$1VmeqK)
                                     (g$f$23854$1VmeqK
                                       ($$fx+
                                         g$count$23855$1VmeqK
                                         ($fxand g$x$23856$1VmeqK '1))
                                       ($fxarithmetic-shift-right
                                         g$x$23856$1VmeqK
                                         '1))
                                     g$count$23855$1VmeqK)))))
                       g$f$23854$1VmeqK)
                     '0
                     g$x$23853$1VmeqK))))
               g$x$23832$1VmeqK))))))))
   (g$residual-fxlength*$23409$1VmeqK
     g$residual-fxlength*$25488$1VmeqK
     (case-lambda
       ((g$x$23877$1VmeqK)
        (if ($fx<? g$x$23877$1VmeqK '0)
          (g$residual-fxlength*$23409$1VmeqK ($fxnot g$x$23877$1VmeqK))
          ((letrec ((g$f$23878$1VmeqK
                      (case-lambda
                        ((g$count$23879$1VmeqK g$x$23880$1VmeqK)
                         (if ($fx<? '0 g$x$23880$1VmeqK)
                           (g$f$23878$1VmeqK
                             ($$fx+ g$count$23879$1VmeqK '1)
                             ($fxarithmetic-shift-right
                               g$x$23880$1VmeqK
                               '1))
                           g$count$23879$1VmeqK)))))
             g$f$23878$1VmeqK)
           '0
           g$x$23877$1VmeqK)))))
   (g$fxlength$23410$1VmeqK
     g$fxlength$25489$1VmeqK
     (case-lambda
       ((g$x$23881$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x$23881$1VmeqK))
            (assertion-violation
              'fxlength
              '"not a fixnum"
              g$x$23881$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23902$1VmeqK)
                  (if ($fx<? g$x$23902$1VmeqK '0)
                    (g$residual-fxlength*$23409$1VmeqK
                      ($fxnot g$x$23902$1VmeqK))
                    ((letrec ((g$f$23903$1VmeqK
                                (case-lambda
                                  ((g$count$23904$1VmeqK
                                     g$x$23905$1VmeqK)
                                   (if ($fx<? '0 g$x$23905$1VmeqK)
                                     (g$f$23903$1VmeqK
                                       ($$fx+ g$count$23904$1VmeqK '1)
                                       ($fxarithmetic-shift-right
                                         g$x$23905$1VmeqK
                                         '1))
                                     g$count$23904$1VmeqK)))))
                       g$f$23903$1VmeqK)
                     '0
                     g$x$23902$1VmeqK))))
               g$x$23881$1VmeqK))))))))
   (g$fxfirst-bit-set$23411$1VmeqK
     g$fxfirst-bit-set$25490$1VmeqK
     (case-lambda
       ((g$x$23906$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x$23906$1VmeqK))
            (assertion-violation
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$23906$1VmeqK)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$23906$1VmeqK '0)
                '-1
                ((letrec ((g$f$23907$1VmeqK
                            (case-lambda
                              ((g$count$23908$1VmeqK g$x$23909$1VmeqK)
                               (if (not ($fx=? '0 g$x$23909$1VmeqK))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$23909$1VmeqK))
                                   g$count$23908$1VmeqK
                                   (g$f$23907$1VmeqK
                                     ($$fx+ g$count$23908$1VmeqK '1)
                                     ($fxarithmetic-shift-right
                                       g$x$23909$1VmeqK
                                       '1)))
                                 g$count$23908$1VmeqK)))))
                   g$f$23907$1VmeqK)
                 '0
                 g$x$23906$1VmeqK)))))))))
   (g$fxbit-set?$23412$1VmeqK
     g$fxbit-set?$25491$1VmeqK
     (case-lambda
       ((g$x$23910$1VmeqK g$k$23911$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x$23910$1VmeqK))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$x$23910$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$k$23911$1VmeqK))
            (assertion-violation
              'fxbit-set?
              '"not a fixnum"
              g$k$23911$1VmeqK)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$23911$1VmeqK '0)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$23911$1VmeqK)
                  (void))
                (if ($fx>=? g$k$23911$1VmeqK '32)
                  (assertion-violation
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$23911$1VmeqK)
                  (void))
                (if ($fx=? '0 g$x$23910$1VmeqK)
                  '#f
                  ($fx=?
                    '1
                    ($fxand
                      '1
                      ($fxarithmetic-shift-right
                        g$x$23910$1VmeqK
                        g$k$23911$1VmeqK))))))))))))
   (g$fxnot$23413$1VmeqK
     g$fxnot$25492$1VmeqK
     (case-lambda
       ((g$x1$23912$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23912$1VmeqK))
            (assertion-violation
              'fxnot
              '"not a fixnum"
              g$x1$23912$1VmeqK)
            (void))
          ((case-lambda (() ($fxnot g$x1$23912$1VmeqK))))))))
   (g$fx=?$23464$1VmeqK
     g$fx=?$25493$1VmeqK
     (case-lambda
       ((g$x1$23913$1VmeqK g$x2$23914$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23913$1VmeqK))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x1$23913$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23914$1VmeqK))
            (assertion-violation
              'fx=?
              '"not a fixnum"
              g$x2$23914$1VmeqK)
            (void))
          ($fx=? g$x1$23913$1VmeqK g$x2$23914$1VmeqK)))
       ((g$x1$23915$1VmeqK g$x2$23916$1VmeqK . g$rest$23917$1VmeqK)
        ((letrec ((g$f$23918$1VmeqK
                    (case-lambda
                      ((g$a$23919$1VmeqK g$b$23920$1VmeqK)
                       (if (null? g$b$23920$1VmeqK)
                         '#t
                         (if (g$fx=?$23464$1VmeqK
                               g$a$23919$1VmeqK
                               ($car g$b$23920$1VmeqK))
                           (g$f$23918$1VmeqK
                             ($car g$b$23920$1VmeqK)
                             ($cdr g$b$23920$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$23918$1VmeqK)
         g$x1$23915$1VmeqK
         (cons g$x2$23916$1VmeqK g$rest$23917$1VmeqK)))))
   (g$fx<?$23465$1VmeqK
     g$fx<?$25494$1VmeqK
     (case-lambda
       ((g$x1$23921$1VmeqK g$x2$23922$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23921$1VmeqK))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x1$23921$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23922$1VmeqK))
            (assertion-violation
              'fx<?
              '"not a fixnum"
              g$x2$23922$1VmeqK)
            (void))
          ($fx<? g$x1$23921$1VmeqK g$x2$23922$1VmeqK)))
       ((g$x1$23923$1VmeqK g$x2$23924$1VmeqK . g$rest$23925$1VmeqK)
        ((letrec ((g$f$23926$1VmeqK
                    (case-lambda
                      ((g$a$23927$1VmeqK g$b$23928$1VmeqK)
                       (if (null? g$b$23928$1VmeqK)
                         '#t
                         (if (g$fx<?$23465$1VmeqK
                               g$a$23927$1VmeqK
                               ($car g$b$23928$1VmeqK))
                           (g$f$23926$1VmeqK
                             ($car g$b$23928$1VmeqK)
                             ($cdr g$b$23928$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$23926$1VmeqK)
         g$x1$23923$1VmeqK
         (cons g$x2$23924$1VmeqK g$rest$23925$1VmeqK)))))
   (g$fx<=?$23466$1VmeqK
     g$fx<=?$25495$1VmeqK
     (case-lambda
       ((g$x1$23929$1VmeqK g$x2$23930$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23929$1VmeqK))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x1$23929$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23930$1VmeqK))
            (assertion-violation
              'fx<=?
              '"not a fixnum"
              g$x2$23930$1VmeqK)
            (void))
          ($fx<=? g$x1$23929$1VmeqK g$x2$23930$1VmeqK)))
       ((g$x1$23931$1VmeqK g$x2$23932$1VmeqK . g$rest$23933$1VmeqK)
        ((letrec ((g$f$23934$1VmeqK
                    (case-lambda
                      ((g$a$23935$1VmeqK g$b$23936$1VmeqK)
                       (if (null? g$b$23936$1VmeqK)
                         '#t
                         (if (g$fx<=?$23466$1VmeqK
                               g$a$23935$1VmeqK
                               ($car g$b$23936$1VmeqK))
                           (g$f$23934$1VmeqK
                             ($car g$b$23936$1VmeqK)
                             ($cdr g$b$23936$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$23934$1VmeqK)
         g$x1$23931$1VmeqK
         (cons g$x2$23932$1VmeqK g$rest$23933$1VmeqK)))))
   (g$fx>?$23467$1VmeqK
     g$fx>?$25496$1VmeqK
     (case-lambda
       ((g$x1$23937$1VmeqK g$x2$23938$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23937$1VmeqK))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x1$23937$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23938$1VmeqK))
            (assertion-violation
              'fx>?
              '"not a fixnum"
              g$x2$23938$1VmeqK)
            (void))
          ($fx>? g$x1$23937$1VmeqK g$x2$23938$1VmeqK)))
       ((g$x1$23939$1VmeqK g$x2$23940$1VmeqK . g$rest$23941$1VmeqK)
        ((letrec ((g$f$23942$1VmeqK
                    (case-lambda
                      ((g$a$23943$1VmeqK g$b$23944$1VmeqK)
                       (if (null? g$b$23944$1VmeqK)
                         '#t
                         (if (g$fx>?$23467$1VmeqK
                               g$a$23943$1VmeqK
                               ($car g$b$23944$1VmeqK))
                           (g$f$23942$1VmeqK
                             ($car g$b$23944$1VmeqK)
                             ($cdr g$b$23944$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$23942$1VmeqK)
         g$x1$23939$1VmeqK
         (cons g$x2$23940$1VmeqK g$rest$23941$1VmeqK)))))
   (g$fx>=?$23468$1VmeqK
     g$fx>=?$25497$1VmeqK
     (case-lambda
       ((g$x1$23945$1VmeqK g$x2$23946$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23945$1VmeqK))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x1$23945$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23946$1VmeqK))
            (assertion-violation
              'fx>=?
              '"not a fixnum"
              g$x2$23946$1VmeqK)
            (void))
          ($fx>=? g$x1$23945$1VmeqK g$x2$23946$1VmeqK)))
       ((g$x1$23947$1VmeqK g$x2$23948$1VmeqK . g$rest$23949$1VmeqK)
        ((letrec ((g$f$23950$1VmeqK
                    (case-lambda
                      ((g$a$23951$1VmeqK g$b$23952$1VmeqK)
                       (if (null? g$b$23952$1VmeqK)
                         '#t
                         (if (g$fx>=?$23468$1VmeqK
                               g$a$23951$1VmeqK
                               ($car g$b$23952$1VmeqK))
                           (g$f$23950$1VmeqK
                             ($car g$b$23952$1VmeqK)
                             ($cdr g$b$23952$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$23950$1VmeqK)
         g$x1$23947$1VmeqK
         (cons g$x2$23948$1VmeqK g$rest$23949$1VmeqK)))))
   (g$fxand$23516$1VmeqK
     g$fxand$25498$1VmeqK
     (case-lambda
       (() '-1)
       ((g$x1$23953$1VmeqK g$x2$23954$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23953$1VmeqK))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x1$23953$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23954$1VmeqK))
            (assertion-violation
              'fxand
              '"not a fixnum"
              g$x2$23954$1VmeqK)
            (void))
          ($fxand g$x1$23953$1VmeqK g$x2$23954$1VmeqK)))
       (g$args$23955$1VmeqK
        (g$fold-left$20352$1VmeqK
          g$fxand$23516$1VmeqK
          (g$fxand$23516$1VmeqK)
          g$args$23955$1VmeqK))))
   (g$fxior$23517$1VmeqK
     g$fxior$25499$1VmeqK
     (case-lambda
       (() '0)
       ((g$x1$23956$1VmeqK g$x2$23957$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23956$1VmeqK))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x1$23956$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23957$1VmeqK))
            (assertion-violation
              'fxior
              '"not a fixnum"
              g$x2$23957$1VmeqK)
            (void))
          ($fxior g$x1$23956$1VmeqK g$x2$23957$1VmeqK)))
       (g$args$23958$1VmeqK
        (g$fold-left$20352$1VmeqK
          g$fxior$23517$1VmeqK
          (g$fxior$23517$1VmeqK)
          g$args$23958$1VmeqK))))
   (g$fxxor$23518$1VmeqK
     g$fxxor$25500$1VmeqK
     (case-lambda
       (() '0)
       ((g$x1$23959$1VmeqK g$x2$23960$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$23959$1VmeqK))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x1$23959$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$23960$1VmeqK))
            (assertion-violation
              'fxxor
              '"not a fixnum"
              g$x2$23960$1VmeqK)
            (void))
          ($fxxor g$x1$23959$1VmeqK g$x2$23960$1VmeqK)))
       (g$args$23961$1VmeqK
        (g$fold-left$20352$1VmeqK
          g$fxxor$23518$1VmeqK
          (g$fxxor$23518$1VmeqK)
          g$args$23961$1VmeqK))))
   (g$residual-fxdiv*$23534$1VmeqK
     g$residual-fxdiv*$25501$1VmeqK
     (case-lambda
       ((g$x1$23982$1VmeqK g$x2$23983$1VmeqK)
        (begin
          (if ($fx=? '0 g$x2$23983$1VmeqK)
            (assertion-violation
              'fxdiv
              '"divide by zero"
              g$x1$23982$1VmeqK
              g$x2$23983$1VmeqK)
            (void))
          (if (if ($fx=? '-1 g$x2$23983$1VmeqK)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$23250$1VmeqK)
                    g$x1$23982$1VmeqK))
                '#f)
            (g$overflow-error$23359$1VmeqK
              'fxdiv
              g$x1$23982$1VmeqK
              g$x2$23983$1VmeqK)
            (void))
          (if ($fx=? '0 g$x1$23982$1VmeqK)
            '0
            (if ($fx<? '0 g$x1$23982$1VmeqK)
              ((case-lambda
                 ((g$x1$24004$1VmeqK g$x2$24005$1VmeqK)
                  ($fxdiv0 g$x1$24004$1VmeqK g$x2$24005$1VmeqK)))
               g$x1$23982$1VmeqK
               g$x2$23983$1VmeqK)
              (if ($fx<? '0 g$x2$23983$1VmeqK)
                ((case-lambda
                   ((g$x1$24026$1VmeqK g$x2$24027$1VmeqK)
                    ($fxdiv0 g$x1$24026$1VmeqK g$x2$24027$1VmeqK)))
                 ($$fx- g$x1$23982$1VmeqK ($$fx- g$x2$23983$1VmeqK '1))
                 g$x2$23983$1VmeqK)
                (begin
                  '#f
                  ((case-lambda
                     ((g$x1$24048$1VmeqK g$x2$24049$1VmeqK)
                      ($fxdiv0 g$x1$24048$1VmeqK g$x2$24049$1VmeqK)))
                   ($$fx+
                     g$x1$23982$1VmeqK
                     ($$fx+ g$x2$23983$1VmeqK '1))
                   g$x2$23983$1VmeqK)))))))))
   (g$fxdiv$23535$1VmeqK
     g$fxdiv$25502$1VmeqK
     (case-lambda
       ((g$x1$24050$1VmeqK g$x2$24051$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$24050$1VmeqK))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x1$24050$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$24051$1VmeqK))
            (assertion-violation
              'fxdiv
              '"not a fixnum"
              g$x2$24051$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$24072$1VmeqK g$x2$24073$1VmeqK)
                  (begin
                    (if ($fx=? '0 g$x2$24073$1VmeqK)
                      (assertion-violation
                        'fxdiv
                        '"divide by zero"
                        g$x1$24072$1VmeqK
                        g$x2$24073$1VmeqK)
                      (void))
                    (if (if ($fx=? '-1 g$x2$24073$1VmeqK)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$23250$1VmeqK)
                              g$x1$24072$1VmeqK))
                          '#f)
                      (g$overflow-error$23359$1VmeqK
                        'fxdiv
                        g$x1$24072$1VmeqK
                        g$x2$24073$1VmeqK)
                      (void))
                    (if ($fx=? '0 g$x1$24072$1VmeqK)
                      '0
                      (if ($fx<? '0 g$x1$24072$1VmeqK)
                        ((case-lambda
                           ((g$x1$24094$1VmeqK g$x2$24095$1VmeqK)
                            ($fxdiv0
                              g$x1$24094$1VmeqK
                              g$x2$24095$1VmeqK)))
                         g$x1$24072$1VmeqK
                         g$x2$24073$1VmeqK)
                        (if ($fx<? '0 g$x2$24073$1VmeqK)
                          ((case-lambda
                             ((g$x1$24116$1VmeqK g$x2$24117$1VmeqK)
                              ($fxdiv0
                                g$x1$24116$1VmeqK
                                g$x2$24117$1VmeqK)))
                           ($$fx-
                             g$x1$24072$1VmeqK
                             ($$fx- g$x2$24073$1VmeqK '1))
                           g$x2$24073$1VmeqK)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$x1$24138$1VmeqK g$x2$24139$1VmeqK)
                                ($fxdiv0
                                  g$x1$24138$1VmeqK
                                  g$x2$24139$1VmeqK)))
                             ($$fx+
                               g$x1$24072$1VmeqK
                               ($$fx+ g$x2$24073$1VmeqK '1))
                             g$x2$24073$1VmeqK))))))))
               g$x1$24050$1VmeqK
               g$x2$24051$1VmeqK))))))))
   (g$residual-fxmod*$23551$1VmeqK
     g$residual-fxmod*$25503$1VmeqK
     (case-lambda
       ((g$x1$24160$1VmeqK g$x2$24161$1VmeqK)
        ($$fx-
          g$x1$24160$1VmeqK
          ($$fx*
            ((case-lambda
               ((g$x1$24182$1VmeqK g$x2$24183$1VmeqK)
                (begin
                  (if ($fx=? '0 g$x2$24183$1VmeqK)
                    (assertion-violation
                      'fxdiv
                      '"divide by zero"
                      g$x1$24182$1VmeqK
                      g$x2$24183$1VmeqK)
                    (void))
                  (if (if ($fx=? '-1 g$x2$24183$1VmeqK)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$23250$1VmeqK)
                            g$x1$24182$1VmeqK))
                        '#f)
                    (g$overflow-error$23359$1VmeqK
                      'fxdiv
                      g$x1$24182$1VmeqK
                      g$x2$24183$1VmeqK)
                    (void))
                  (if ($fx=? '0 g$x1$24182$1VmeqK)
                    '0
                    (if ($fx<? '0 g$x1$24182$1VmeqK)
                      ((case-lambda
                         ((g$x1$24204$1VmeqK g$x2$24205$1VmeqK)
                          ($fxdiv0
                            g$x1$24204$1VmeqK
                            g$x2$24205$1VmeqK)))
                       g$x1$24182$1VmeqK
                       g$x2$24183$1VmeqK)
                      (if ($fx<? '0 g$x2$24183$1VmeqK)
                        ((case-lambda
                           ((g$x1$24226$1VmeqK g$x2$24227$1VmeqK)
                            ($fxdiv0
                              g$x1$24226$1VmeqK
                              g$x2$24227$1VmeqK)))
                         ($$fx-
                           g$x1$24182$1VmeqK
                           ($$fx- g$x2$24183$1VmeqK '1))
                         g$x2$24183$1VmeqK)
                        (begin
                          '#f
                          ((case-lambda
                             ((g$x1$24248$1VmeqK g$x2$24249$1VmeqK)
                              ($fxdiv0
                                g$x1$24248$1VmeqK
                                g$x2$24249$1VmeqK)))
                           ($$fx+
                             g$x1$24182$1VmeqK
                             ($$fx+ g$x2$24183$1VmeqK '1))
                           g$x2$24183$1VmeqK))))))))
             g$x1$24160$1VmeqK
             g$x2$24161$1VmeqK)
            g$x2$24161$1VmeqK)))))
   (g$fxmod$23552$1VmeqK
     g$fxmod$25504$1VmeqK
     (case-lambda
       ((g$x1$24250$1VmeqK g$x2$24251$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$24250$1VmeqK))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x1$24250$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$24251$1VmeqK))
            (assertion-violation
              'fxmod
              '"not a fixnum"
              g$x2$24251$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$24272$1VmeqK g$x2$24273$1VmeqK)
                  ($$fx-
                    g$x1$24272$1VmeqK
                    ($$fx*
                      ((case-lambda
                         ((g$x1$24294$1VmeqK g$x2$24295$1VmeqK)
                          (begin
                            (if ($fx=? '0 g$x2$24295$1VmeqK)
                              (assertion-violation
                                'fxdiv
                                '"divide by zero"
                                g$x1$24294$1VmeqK
                                g$x2$24295$1VmeqK)
                              (void))
                            (if (if ($fx=? '-1 g$x2$24295$1VmeqK)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$23250$1VmeqK)
                                      g$x1$24294$1VmeqK))
                                  '#f)
                              (g$overflow-error$23359$1VmeqK
                                'fxdiv
                                g$x1$24294$1VmeqK
                                g$x2$24295$1VmeqK)
                              (void))
                            (if ($fx=? '0 g$x1$24294$1VmeqK)
                              '0
                              (if ($fx<? '0 g$x1$24294$1VmeqK)
                                ((case-lambda
                                   ((g$x1$24316$1VmeqK
                                      g$x2$24317$1VmeqK)
                                    ($fxdiv0
                                      g$x1$24316$1VmeqK
                                      g$x2$24317$1VmeqK)))
                                 g$x1$24294$1VmeqK
                                 g$x2$24295$1VmeqK)
                                (if ($fx<? '0 g$x2$24295$1VmeqK)
                                  ((case-lambda
                                     ((g$x1$24338$1VmeqK
                                        g$x2$24339$1VmeqK)
                                      ($fxdiv0
                                        g$x1$24338$1VmeqK
                                        g$x2$24339$1VmeqK)))
                                   ($$fx-
                                     g$x1$24294$1VmeqK
                                     ($$fx- g$x2$24295$1VmeqK '1))
                                   g$x2$24295$1VmeqK)
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$x1$24360$1VmeqK
                                          g$x2$24361$1VmeqK)
                                        ($fxdiv0
                                          g$x1$24360$1VmeqK
                                          g$x2$24361$1VmeqK)))
                                     ($$fx+
                                       g$x1$24294$1VmeqK
                                       ($$fx+ g$x2$24295$1VmeqK '1))
                                     g$x2$24295$1VmeqK))))))))
                       g$x1$24272$1VmeqK
                       g$x2$24273$1VmeqK)
                      g$x2$24273$1VmeqK))))
               g$x1$24250$1VmeqK
               g$x2$24251$1VmeqK))))))))
   (g$fxmod0$23553$1VmeqK
     g$fxmod0$25505$1VmeqK
     (case-lambda
       ((g$x1$24362$1VmeqK g$x2$24363$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$24362$1VmeqK))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x1$24362$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$24363$1VmeqK))
            (assertion-violation
              'fxmod0
              '"not a fixnum"
              g$x2$24363$1VmeqK)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$24363$1VmeqK)
                  (assertion-violation
                    'fxmod0
                    '"divide by zero"
                    g$x1$24362$1VmeqK
                    g$x2$24363$1VmeqK)
                  (void))
                (if (if ($fx=? '-1 g$x2$24363$1VmeqK)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$23250$1VmeqK)
                          g$x1$24362$1VmeqK))
                      '#f)
                  (g$overflow-error$23359$1VmeqK
                    'fxmod0
                    g$x1$24362$1VmeqK
                    g$x2$24363$1VmeqK)
                  (void))
                ($fxmod0 g$x1$24362$1VmeqK g$x2$24363$1VmeqK)))))))))
   (g$fxdiv-and-mod$23554$1VmeqK
     g$fxdiv-and-mod$25506$1VmeqK
     (case-lambda
       ((g$x1$24364$1VmeqK g$x2$24365$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$24364$1VmeqK))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$24364$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$24365$1VmeqK))
            (assertion-violation
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$24365$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$24366$1VmeqK)
                  (values
                    g$d$24366$1VmeqK
                    ($$fx-
                      g$x1$24364$1VmeqK
                      ($$fx* g$d$24366$1VmeqK g$x2$24365$1VmeqK)))))
               ((case-lambda
                  ((g$x1$24387$1VmeqK g$x2$24388$1VmeqK)
                   (begin
                     (if ($fx=? '0 g$x2$24388$1VmeqK)
                       (assertion-violation
                         'fxdiv
                         '"divide by zero"
                         g$x1$24387$1VmeqK
                         g$x2$24388$1VmeqK)
                       (void))
                     (if (if ($fx=? '-1 g$x2$24388$1VmeqK)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$23250$1VmeqK)
                               g$x1$24387$1VmeqK))
                           '#f)
                       (g$overflow-error$23359$1VmeqK
                         'fxdiv
                         g$x1$24387$1VmeqK
                         g$x2$24388$1VmeqK)
                       (void))
                     (if ($fx=? '0 g$x1$24387$1VmeqK)
                       '0
                       (if ($fx<? '0 g$x1$24387$1VmeqK)
                         ((case-lambda
                            ((g$x1$24409$1VmeqK g$x2$24410$1VmeqK)
                             ($fxdiv0
                               g$x1$24409$1VmeqK
                               g$x2$24410$1VmeqK)))
                          g$x1$24387$1VmeqK
                          g$x2$24388$1VmeqK)
                         (if ($fx<? '0 g$x2$24388$1VmeqK)
                           ((case-lambda
                              ((g$x1$24431$1VmeqK g$x2$24432$1VmeqK)
                               ($fxdiv0
                                 g$x1$24431$1VmeqK
                                 g$x2$24432$1VmeqK)))
                            ($$fx-
                              g$x1$24387$1VmeqK
                              ($$fx- g$x2$24388$1VmeqK '1))
                            g$x2$24388$1VmeqK)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x1$24453$1VmeqK g$x2$24454$1VmeqK)
                                 ($fxdiv0
                                   g$x1$24453$1VmeqK
                                   g$x2$24454$1VmeqK)))
                              ($$fx+
                                g$x1$24387$1VmeqK
                                ($$fx+ g$x2$24388$1VmeqK '1))
                              g$x2$24388$1VmeqK))))))))
                g$x1$24364$1VmeqK
                g$x2$24365$1VmeqK)))))))))
   (g$residual-fxdiv0*$23570$1VmeqK
     g$residual-fxdiv0*$25507$1VmeqK
     (case-lambda
       ((g$x1$24475$1VmeqK g$x2$24476$1VmeqK)
        (begin
          (if ($fx=? '0 g$x2$24476$1VmeqK)
            (assertion-violation
              'fxdiv0
              '"divide by zero"
              g$x1$24475$1VmeqK
              g$x2$24476$1VmeqK)
            (void))
          (if (if ($fx=? '-1 g$x2$24476$1VmeqK)
                (begin
                  '#f
                  ($fx=?
                    (g$least-fixnum$23250$1VmeqK)
                    g$x1$24475$1VmeqK))
                '#f)
            (g$overflow-error$23359$1VmeqK
              'fxdiv0
              g$x1$24475$1VmeqK
              g$x2$24476$1VmeqK)
            (void))
          ((case-lambda
             ((g$x1$24497$1VmeqK g$x2$24498$1VmeqK)
              ($fxdiv0 g$x1$24497$1VmeqK g$x2$24498$1VmeqK)))
           g$x1$24475$1VmeqK
           g$x2$24476$1VmeqK)))))
   (g$fxdiv0$23571$1VmeqK
     g$fxdiv0$25508$1VmeqK
     (case-lambda
       ((g$x1$24499$1VmeqK g$x2$24500$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$24499$1VmeqK))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x1$24499$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$24500$1VmeqK))
            (assertion-violation
              'fxdiv0
              '"not a fixnum"
              g$x2$24500$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$24521$1VmeqK g$x2$24522$1VmeqK)
                  (begin
                    (if ($fx=? '0 g$x2$24522$1VmeqK)
                      (assertion-violation
                        'fxdiv0
                        '"divide by zero"
                        g$x1$24521$1VmeqK
                        g$x2$24522$1VmeqK)
                      (void))
                    (if (if ($fx=? '-1 g$x2$24522$1VmeqK)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$23250$1VmeqK)
                              g$x1$24521$1VmeqK))
                          '#f)
                      (g$overflow-error$23359$1VmeqK
                        'fxdiv0
                        g$x1$24521$1VmeqK
                        g$x2$24522$1VmeqK)
                      (void))
                    ((case-lambda
                       ((g$x1$24543$1VmeqK g$x2$24544$1VmeqK)
                        ($fxdiv0 g$x1$24543$1VmeqK g$x2$24544$1VmeqK)))
                     g$x1$24521$1VmeqK
                     g$x2$24522$1VmeqK))))
               g$x1$24499$1VmeqK
               g$x2$24500$1VmeqK))))))))
   (g$residual-%%fxdiv0$23587$1VmeqK
     g$residual-%%fxdiv0$25509$1VmeqK
     (case-lambda
       ((g$x1$24565$1VmeqK g$x2$24566$1VmeqK)
        ($fxdiv0 g$x1$24565$1VmeqK g$x2$24566$1VmeqK))))
   (g$fxdiv0-and-mod0$23588$1VmeqK
     g$fxdiv0-and-mod0$25510$1VmeqK
     (case-lambda
       ((g$x1$24567$1VmeqK g$x2$24568$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$24567$1VmeqK))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$24567$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$x2$24568$1VmeqK))
            (assertion-violation
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$24568$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$24569$1VmeqK)
                  (values
                    g$d$24569$1VmeqK
                    ($$fx-
                      g$x1$24567$1VmeqK
                      ($$fx* g$d$24569$1VmeqK g$x2$24568$1VmeqK)))))
               ((case-lambda
                  ((g$x1$24590$1VmeqK g$x2$24591$1VmeqK)
                   (begin
                     (if ($fx=? '0 g$x2$24591$1VmeqK)
                       (assertion-violation
                         'fxdiv0
                         '"divide by zero"
                         g$x1$24590$1VmeqK
                         g$x2$24591$1VmeqK)
                       (void))
                     (if (if ($fx=? '-1 g$x2$24591$1VmeqK)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$23250$1VmeqK)
                               g$x1$24590$1VmeqK))
                           '#f)
                       (g$overflow-error$23359$1VmeqK
                         'fxdiv0
                         g$x1$24590$1VmeqK
                         g$x2$24591$1VmeqK)
                       (void))
                     ((case-lambda
                        ((g$x1$24612$1VmeqK g$x2$24613$1VmeqK)
                         ($fxdiv0 g$x1$24612$1VmeqK g$x2$24613$1VmeqK)))
                      g$x1$24590$1VmeqK
                      g$x2$24591$1VmeqK))))
                g$x1$24567$1VmeqK
                g$x2$24568$1VmeqK)))))))))
   (g$residual-fxpositive?*$23604$1VmeqK
     g$residual-fxpositive?*$25511$1VmeqK
     (case-lambda ((g$r$24634$1VmeqK) ($fx<? '0 g$r$24634$1VmeqK))))
   (g$fxpositive?$23605$1VmeqK
     g$fxpositive?$25512$1VmeqK
     (case-lambda
       ((g$r$24635$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$r$24635$1VmeqK))
            (assertion-violation
              'fxpositive?
              '"not a fixnum"
              g$r$24635$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24656$1VmeqK) ($fx<? '0 g$r$24656$1VmeqK)))
               g$r$24635$1VmeqK))))))))
   (g$residual-fxnegative?*$23621$1VmeqK
     g$residual-fxnegative?*$25513$1VmeqK
     (case-lambda ((g$r$24677$1VmeqK) ($fx>? '0 g$r$24677$1VmeqK))))
   (g$fxnegative?$23622$1VmeqK
     g$fxnegative?$25514$1VmeqK
     (case-lambda
       ((g$r$24678$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$r$24678$1VmeqK))
            (assertion-violation
              'fxnegative?
              '"not a fixnum"
              g$r$24678$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24699$1VmeqK) ($fx>? '0 g$r$24699$1VmeqK)))
               g$r$24678$1VmeqK))))))))
   (g$residual-fxzero?*$23638$1VmeqK
     g$residual-fxzero?*$25515$1VmeqK
     (case-lambda ((g$r$24720$1VmeqK) ($fx=? '0 g$r$24720$1VmeqK))))
   (g$fxzero?$23639$1VmeqK
     g$fxzero?$25516$1VmeqK
     (case-lambda
       ((g$r$24721$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$r$24721$1VmeqK))
            (assertion-violation
              'fxzero?
              '"not a fixnum"
              g$r$24721$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$24742$1VmeqK) ($fx=? '0 g$r$24742$1VmeqK)))
               g$r$24721$1VmeqK))))))))
   (g$residual-fxeven?*$23655$1VmeqK
     g$residual-fxeven?*$25517$1VmeqK
     (case-lambda
       ((g$n$24763$1VmeqK) ($fx=? '0 ($fxand g$n$24763$1VmeqK '1)))))
   (g$fxeven?$23656$1VmeqK
     g$fxeven?$25518$1VmeqK
     (case-lambda
       ((g$n$24764$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$n$24764$1VmeqK))
            (assertion-violation
              'fxeven?
              '"not a fixnum"
              g$n$24764$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$24785$1VmeqK)
                  ($fx=? '0 ($fxand g$n$24785$1VmeqK '1))))
               g$n$24764$1VmeqK))))))))
   (g$residual-fxodd?*$23672$1VmeqK
     g$residual-fxodd?*$25519$1VmeqK
     (case-lambda
       ((g$n$24806$1VmeqK) ($fx=? '1 ($fxand g$n$24806$1VmeqK '1)))))
   (g$fxodd?$23673$1VmeqK
     g$fxodd?$25520$1VmeqK
     (case-lambda
       ((g$n$24807$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$n$24807$1VmeqK))
            (assertion-violation
              'fxodd?
              '"not a fixnum"
              g$n$24807$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$24828$1VmeqK)
                  ($fx=? '1 ($fxand g$n$24828$1VmeqK '1))))
               g$n$24807$1VmeqK))))))))
   (g$fxmax$23674$1VmeqK
     g$fxmax$25521$1VmeqK
     (case-lambda
       ((g$a$24829$1VmeqK . g$rest$24830$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$a$24829$1VmeqK))
            (assertion-violation
              'fxmax
              '"not a fixnum"
              g$a$24829$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            (case-lambda
              ((g$a$24831$1VmeqK g$b$24832$1VmeqK)
               (if (g$fx<?$23465$1VmeqK
                     g$a$24831$1VmeqK
                     g$b$24832$1VmeqK)
                 g$b$24832$1VmeqK
                 g$a$24831$1VmeqK)))
            g$a$24829$1VmeqK
            g$rest$24830$1VmeqK)))))
   (g$fxmin$23675$1VmeqK
     g$fxmin$25522$1VmeqK
     (case-lambda
       ((g$a$24833$1VmeqK . g$rest$24834$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$a$24833$1VmeqK))
            (assertion-violation
              'fxmin
              '"not a fixnum"
              g$a$24833$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            (case-lambda
              ((g$a$24835$1VmeqK g$b$24836$1VmeqK)
               (if (g$fx>?$23467$1VmeqK
                     g$a$24835$1VmeqK
                     g$b$24836$1VmeqK)
                 g$b$24836$1VmeqK
                 g$a$24835$1VmeqK)))
            g$a$24833$1VmeqK
            g$rest$24834$1VmeqK)))))
   (g$fx*/carry$23676$1VmeqK
     g$fx*/carry$25523$1VmeqK
     (case-lambda
       ((g$fx1$24837$1VmeqK g$fx2$24838$1VmeqK g$fx3$24839$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$24837$1VmeqK))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx1$24837$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$24838$1VmeqK))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx2$24838$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx3$24839$1VmeqK))
            (assertion-violation
              'fx*/carry
              '"not a fixnum"
              g$fx3$24839$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24840$1VmeqK g$e$24841$1VmeqK)
                  (values
                    (g$mod0$21189$1VmeqK
                      g$s$24840$1VmeqK
                      g$e$24841$1VmeqK)
                    (g$div0$21187$1VmeqK
                      g$s$24840$1VmeqK
                      g$e$24841$1VmeqK))))
               (+ (* g$fx1$24837$1VmeqK g$fx2$24838$1VmeqK)
                  g$fx3$24839$1VmeqK)
               (g$expt$22243$1VmeqK
                 '2
                 (g$fixnum-width$21186$1VmeqK))))))))))
   (g$fx-/carry$23677$1VmeqK
     g$fx-/carry$25524$1VmeqK
     (case-lambda
       ((g$fx1$24842$1VmeqK g$fx2$24843$1VmeqK g$fx3$24844$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$24842$1VmeqK))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx1$24842$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$24843$1VmeqK))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx2$24843$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx3$24844$1VmeqK))
            (assertion-violation
              'fx-/carry
              '"not a fixnum"
              g$fx3$24844$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24845$1VmeqK g$e$24846$1VmeqK)
                  (values
                    (g$mod0$21189$1VmeqK
                      g$s$24845$1VmeqK
                      g$e$24846$1VmeqK)
                    (g$div0$21187$1VmeqK
                      g$s$24845$1VmeqK
                      g$e$24846$1VmeqK))))
               (- g$fx1$24842$1VmeqK
                  g$fx2$24843$1VmeqK
                  g$fx3$24844$1VmeqK)
               (g$expt$22243$1VmeqK
                 '2
                 (g$fixnum-width$21186$1VmeqK))))))))))
   (g$fx+/carry$23678$1VmeqK
     g$fx+/carry$25525$1VmeqK
     (case-lambda
       ((g$fx1$24847$1VmeqK g$fx2$24848$1VmeqK g$fx3$24849$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$24847$1VmeqK))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx1$24847$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$24848$1VmeqK))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx2$24848$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx3$24849$1VmeqK))
            (assertion-violation
              'fx+/carry
              '"not a fixnum"
              g$fx3$24849$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$24850$1VmeqK g$e$24851$1VmeqK)
                  (values
                    (g$mod0$21189$1VmeqK
                      g$s$24850$1VmeqK
                      g$e$24851$1VmeqK)
                    (g$div0$21187$1VmeqK
                      g$s$24850$1VmeqK
                      g$e$24851$1VmeqK))))
               (+ g$fx1$24847$1VmeqK
                  g$fx2$24848$1VmeqK
                  g$fx3$24849$1VmeqK)
               (g$expt$22243$1VmeqK
                 '2
                 (g$fixnum-width$21186$1VmeqK))))))))))
   (g$residual-fxif*$23694$1VmeqK
     g$residual-fxif*$25526$1VmeqK
     (case-lambda
       ((g$fx1$24872$1VmeqK g$fx2$24873$1VmeqK g$fx3$24874$1VmeqK)
        ($fxior
          ($fxand g$fx1$24872$1VmeqK g$fx2$24873$1VmeqK)
          ($fxand ($fxnot g$fx1$24872$1VmeqK) g$fx3$24874$1VmeqK)))))
   (g$fxif$23695$1VmeqK
     g$fxif$25527$1VmeqK
     (case-lambda
       ((g$fx1$24875$1VmeqK g$fx2$24876$1VmeqK g$fx3$24877$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$24875$1VmeqK))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx1$24875$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$24876$1VmeqK))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx2$24876$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx3$24877$1VmeqK))
            (assertion-violation
              'fxif
              '"not a fixnum"
              g$fx3$24877$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24898$1VmeqK
                    g$fx2$24899$1VmeqK
                    g$fx3$24900$1VmeqK)
                  ($fxior
                    ($fxand g$fx1$24898$1VmeqK g$fx2$24899$1VmeqK)
                    ($fxand
                      ($fxnot g$fx1$24898$1VmeqK)
                      g$fx3$24900$1VmeqK))))
               g$fx1$24875$1VmeqK
               g$fx2$24876$1VmeqK
               g$fx3$24877$1VmeqK))))))))
   (g$residual-fxcopy-bit*$23711$1VmeqK
     g$residual-fxcopy-bit*$25528$1VmeqK
     (case-lambda
       ((g$fx1$24921$1VmeqK g$fx2$24922$1VmeqK g$fx3$24923$1VmeqK)
        ((case-lambda
           ((g$fx1$24944$1VmeqK g$fx2$24945$1VmeqK g$fx3$24946$1VmeqK)
            ($fxior
              ($fxand g$fx1$24944$1VmeqK g$fx2$24945$1VmeqK)
              ($fxand ($fxnot g$fx1$24944$1VmeqK) g$fx3$24946$1VmeqK))))
         ($fxarithmetic-shift-left '1 g$fx2$24922$1VmeqK)
         ($fxarithmetic-shift-left
           g$fx3$24923$1VmeqK
           g$fx2$24922$1VmeqK)
         g$fx1$24921$1VmeqK))))
   (g$fxcopy-bit$23712$1VmeqK
     g$fxcopy-bit$25529$1VmeqK
     (case-lambda
       ((g$fx1$24947$1VmeqK g$fx2$24948$1VmeqK g$fx3$24949$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$24947$1VmeqK))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$24947$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$24948$1VmeqK))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$24948$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx3$24949$1VmeqK))
            (assertion-violation
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$24949$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$24970$1VmeqK
                    g$fx2$24971$1VmeqK
                    g$fx3$24972$1VmeqK)
                  ((case-lambda
                     ((g$fx1$24993$1VmeqK
                        g$fx2$24994$1VmeqK
                        g$fx3$24995$1VmeqK)
                      ($fxior
                        ($fxand g$fx1$24993$1VmeqK g$fx2$24994$1VmeqK)
                        ($fxand
                          ($fxnot g$fx1$24993$1VmeqK)
                          g$fx3$24995$1VmeqK))))
                   ($fxarithmetic-shift-left '1 g$fx2$24971$1VmeqK)
                   ($fxarithmetic-shift-left
                     g$fx3$24972$1VmeqK
                     g$fx2$24971$1VmeqK)
                   g$fx1$24970$1VmeqK)))
               g$fx1$24947$1VmeqK
               g$fx2$24948$1VmeqK
               g$fx3$24949$1VmeqK))))))))
   (g$residual-fxbit-field*$23728$1VmeqK
     g$residual-fxbit-field*$25530$1VmeqK
     (case-lambda
       ((g$fx1$25016$1VmeqK g$fx2$25017$1VmeqK g$fx3$25018$1VmeqK)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$25016$1VmeqK
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$25018$1VmeqK)))
          g$fx2$25017$1VmeqK))))
   (g$fxbit-field$23729$1VmeqK
     g$fxbit-field$25531$1VmeqK
     (case-lambda
       ((g$fx1$25019$1VmeqK g$fx2$25020$1VmeqK g$fx3$25021$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$25019$1VmeqK))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx1$25019$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$25020$1VmeqK))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx2$25020$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx3$25021$1VmeqK))
            (assertion-violation
              'fxbit-field
              '"not a fixnum"
              g$fx3$25021$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$25042$1VmeqK
                    g$fx2$25043$1VmeqK
                    g$fx3$25044$1VmeqK)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$25042$1VmeqK
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$25044$1VmeqK)))
                    g$fx2$25043$1VmeqK)))
               g$fx1$25019$1VmeqK
               g$fx2$25020$1VmeqK
               g$fx3$25021$1VmeqK))))))))
   (g$residual-fxcopy-bit-field*$23745$1VmeqK
     g$residual-fxcopy-bit-field*$25532$1VmeqK
     (case-lambda
       ((g$to$25065$1VmeqK
          g$start$25066$1VmeqK
          g$end$25067$1VmeqK
          g$from$25068$1VmeqK)
        ((case-lambda
           ((g$fx1$25089$1VmeqK g$fx2$25090$1VmeqK g$fx3$25091$1VmeqK)
            ($fxior
              ($fxand g$fx1$25089$1VmeqK g$fx2$25090$1VmeqK)
              ($fxand ($fxnot g$fx1$25089$1VmeqK) g$fx3$25091$1VmeqK))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$25066$1VmeqK)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$25067$1VmeqK)))
         ($fxarithmetic-shift-left
           g$from$25068$1VmeqK
           g$start$25066$1VmeqK)
         g$to$25065$1VmeqK))))
   (g$fxcopy-bit-field$23746$1VmeqK
     g$fxcopy-bit-field$25533$1VmeqK
     (case-lambda
       ((g$to$25092$1VmeqK
          g$start$25093$1VmeqK
          g$end$25094$1VmeqK
          g$from$25095$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$to$25092$1VmeqK))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$25092$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$start$25093$1VmeqK))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$25093$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$end$25094$1VmeqK))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$25094$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$from$25095$1VmeqK))
            (assertion-violation
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$25095$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$25116$1VmeqK
                    g$start$25117$1VmeqK
                    g$end$25118$1VmeqK
                    g$from$25119$1VmeqK)
                  ((case-lambda
                     ((g$fx1$25140$1VmeqK
                        g$fx2$25141$1VmeqK
                        g$fx3$25142$1VmeqK)
                      ($fxior
                        ($fxand g$fx1$25140$1VmeqK g$fx2$25141$1VmeqK)
                        ($fxand
                          ($fxnot g$fx1$25140$1VmeqK)
                          g$fx3$25142$1VmeqK))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$25117$1VmeqK)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$25118$1VmeqK)))
                   ($fxarithmetic-shift-left
                     g$from$25119$1VmeqK
                     g$start$25117$1VmeqK)
                   g$to$25116$1VmeqK)))
               g$to$25092$1VmeqK
               g$start$25093$1VmeqK
               g$end$25094$1VmeqK
               g$from$25095$1VmeqK))))))))
   (g$fxarithmetic-shift-left$23747$1VmeqK
     g$fxarithmetic-shift-left$25534$1VmeqK
     (case-lambda
       ((g$fx1$25143$1VmeqK g$fx2$25144$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$25143$1VmeqK))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$25143$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$25144$1VmeqK))
            (assertion-violation
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$25144$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$25165$1VmeqK g$k$25166$1VmeqK)
                  (if ($fx=? g$k$25166$1VmeqK '0)
                    g$x$25165$1VmeqK
                    (if ($fx<? g$k$25166$1VmeqK '0)
                      ($fxarithmetic-shift-right
                        g$x$25165$1VmeqK
                        ($$fx- g$k$25166$1VmeqK))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$25167$1VmeqK)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$25165$1VmeqK)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$25167$1VmeqK))
                                (g$overflow-error$23359$1VmeqK
                                  'fxarithmetic-shift
                                  g$x$25165$1VmeqK
                                  g$k$25166$1VmeqK)
                                (void))
                              g$i$25167$1VmeqK)))
                         ($fxarithmetic-shift-left
                           g$x$25165$1VmeqK
                           g$k$25166$1VmeqK)))))))
               g$fx1$25143$1VmeqK
               g$fx2$25144$1VmeqK))))))))
   (g$fxarithmetic-shift-right$23748$1VmeqK
     g$fxarithmetic-shift-right$25535$1VmeqK
     (case-lambda
       ((g$fx1$25168$1VmeqK g$fx2$25169$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$fx1$25168$1VmeqK))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$25168$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$fx2$25169$1VmeqK))
            (assertion-violation
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$25169$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$25190$1VmeqK g$k$25191$1VmeqK)
                  (if ($fx=? g$k$25191$1VmeqK '0)
                    g$x$25190$1VmeqK
                    (if ($fx<? g$k$25191$1VmeqK '0)
                      ($fxarithmetic-shift-right
                        g$x$25190$1VmeqK
                        ($$fx- g$k$25191$1VmeqK))
                      (begin
                        '#f
                        ((case-lambda
                           ((g$i$25192$1VmeqK)
                            (begin
                              (if ($fx>?
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$x$25190$1VmeqK)
                                    (clr-call-internal
                                      'System.Math
                                      '"abs(int32)"
                                      '()
                                      g$i$25192$1VmeqK))
                                (g$overflow-error$23359$1VmeqK
                                  'fxarithmetic-shift
                                  g$x$25190$1VmeqK
                                  g$k$25191$1VmeqK)
                                (void))
                              g$i$25192$1VmeqK)))
                         ($fxarithmetic-shift-left
                           g$x$25190$1VmeqK
                           g$k$25191$1VmeqK)))))))
               g$fx1$25168$1VmeqK
               ($$fx- g$fx2$25169$1VmeqK)))))))))
   (g$fxrotate-bit-field$23749$1VmeqK
     g$fxrotate-bit-field$25536$1VmeqK
     (case-lambda
       ((g$n$25193$1VmeqK
          g$start$25194$1VmeqK
          g$end$25195$1VmeqK
          g$count$25196$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$n$25193$1VmeqK))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$25193$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$start$25194$1VmeqK))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$25194$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$end$25195$1VmeqK))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$25195$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$count$25196$1VmeqK))
            (assertion-violation
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$25196$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$25197$1VmeqK)
                  (if ((case-lambda
                         ((g$r$25218$1VmeqK)
                          ($fx<? '0 g$r$25218$1VmeqK)))
                       g$width$25197$1VmeqK)
                    ((case-lambda
                       ((g$count$25219$1VmeqK g$field$25220$1VmeqK)
                        ((case-lambda
                           ((g$to$25241$1VmeqK
                              g$start$25242$1VmeqK
                              g$end$25243$1VmeqK
                              g$from$25244$1VmeqK)
                            ((case-lambda
                               ((g$fx1$25265$1VmeqK
                                  g$fx2$25266$1VmeqK
                                  g$fx3$25267$1VmeqK)
                                ($fxior
                                  ($fxand
                                    g$fx1$25265$1VmeqK
                                    g$fx2$25266$1VmeqK)
                                  ($fxand
                                    ($fxnot g$fx1$25265$1VmeqK)
                                    g$fx3$25267$1VmeqK))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$25242$1VmeqK)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$25243$1VmeqK)))
                             ($fxarithmetic-shift-left
                               g$from$25244$1VmeqK
                               g$start$25242$1VmeqK)
                             g$to$25241$1VmeqK)))
                         g$n$25193$1VmeqK
                         g$start$25194$1VmeqK
                         g$end$25195$1VmeqK
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$25220$1VmeqK
                             g$count$25219$1VmeqK)
                           ($fxarithmetic-shift-right
                             g$field$25220$1VmeqK
                             ($$fx-
                               g$width$25197$1VmeqK
                               g$count$25219$1VmeqK))))))
                     ((case-lambda
                        ((g$x1$25288$1VmeqK g$x2$25289$1VmeqK)
                         ($$fx-
                           g$x1$25288$1VmeqK
                           ($$fx*
                             ((case-lambda
                                ((g$x1$25310$1VmeqK g$x2$25311$1VmeqK)
                                 (begin
                                   (if ($fx=? '0 g$x2$25311$1VmeqK)
                                     (assertion-violation
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$25310$1VmeqK
                                       g$x2$25311$1VmeqK)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$25311$1VmeqK)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$23250$1VmeqK)
                                             g$x1$25310$1VmeqK))
                                         '#f)
                                     (g$overflow-error$23359$1VmeqK
                                       'fxdiv
                                       g$x1$25310$1VmeqK
                                       g$x2$25311$1VmeqK)
                                     (void))
                                   (if ($fx=? '0 g$x1$25310$1VmeqK)
                                     '0
                                     (if ($fx<? '0 g$x1$25310$1VmeqK)
                                       ((case-lambda
                                          ((g$x1$25332$1VmeqK
                                             g$x2$25333$1VmeqK)
                                           ($fxdiv0
                                             g$x1$25332$1VmeqK
                                             g$x2$25333$1VmeqK)))
                                        g$x1$25310$1VmeqK
                                        g$x2$25311$1VmeqK)
                                       (if ($fx<? '0 g$x2$25311$1VmeqK)
                                         ((case-lambda
                                            ((g$x1$25354$1VmeqK
                                               g$x2$25355$1VmeqK)
                                             ($fxdiv0
                                               g$x1$25354$1VmeqK
                                               g$x2$25355$1VmeqK)))
                                          ($$fx-
                                            g$x1$25310$1VmeqK
                                            ($$fx-
                                              g$x2$25311$1VmeqK
                                              '1))
                                          g$x2$25311$1VmeqK)
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$x1$25376$1VmeqK
                                                 g$x2$25377$1VmeqK)
                                               ($fxdiv0
                                                 g$x1$25376$1VmeqK
                                                 g$x2$25377$1VmeqK)))
                                            ($$fx+
                                              g$x1$25310$1VmeqK
                                              ($$fx+
                                                g$x2$25311$1VmeqK
                                                '1))
                                            g$x2$25311$1VmeqK))))))))
                              g$x1$25288$1VmeqK
                              g$x2$25289$1VmeqK)
                             g$x2$25289$1VmeqK))))
                      g$count$25196$1VmeqK
                      g$width$25197$1VmeqK)
                     ((case-lambda
                        ((g$fx1$25398$1VmeqK
                           g$fx2$25399$1VmeqK
                           g$fx3$25400$1VmeqK)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$25398$1VmeqK
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$25400$1VmeqK)))
                           g$fx2$25399$1VmeqK)))
                      g$n$25193$1VmeqK
                      g$start$25194$1VmeqK
                      g$end$25195$1VmeqK))
                    g$n$25193$1VmeqK)))
               ($$fx- g$end$25195$1VmeqK g$start$25194$1VmeqK)))))))))
   (g$fxreverse-bit-field$23750$1VmeqK
     g$fxreverse-bit-field$25537$1VmeqK
     (case-lambda
       ((g$x1$25401$1VmeqK g$start$25402$1VmeqK g$end$25403$1VmeqK)
        (begin
          (if (not (g$fixnum?$21184$1VmeqK g$x1$25401$1VmeqK))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$25401$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$start$25402$1VmeqK))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$25402$1VmeqK)
            (void))
          (if (not (g$fixnum?$21184$1VmeqK g$end$25403$1VmeqK))
            (assertion-violation
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$25403$1VmeqK)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=?
                           g$start$25402$1VmeqK
                           g$end$25403$1VmeqK))
                  (assertion-violation
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$25402$1VmeqK
                    g$end$25403$1VmeqK)
                  (void))
                (letrec ((g$loop$25404$1VmeqK
                           (case-lambda
                             ((g$width$25428$1VmeqK
                                g$bits$25429$1VmeqK
                                g$rbits$25430$1VmeqK)
                              (if ($fx=? g$width$25428$1VmeqK '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$25451$1VmeqK
                                        g$start$25452$1VmeqK
                                        g$end$25453$1VmeqK
                                        g$from$25454$1VmeqK)
                                      ((case-lambda
                                         ((g$fx1$25475$1VmeqK
                                            g$fx2$25476$1VmeqK
                                            g$fx3$25477$1VmeqK)
                                          ($fxior
                                            ($fxand
                                              g$fx1$25475$1VmeqK
                                              g$fx2$25476$1VmeqK)
                                            ($fxand
                                              ($fxnot
                                                g$fx1$25475$1VmeqK)
                                              g$fx3$25477$1VmeqK))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$25452$1VmeqK)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$25453$1VmeqK)))
                                       ($fxarithmetic-shift-left
                                         g$from$25454$1VmeqK
                                         g$start$25452$1VmeqK)
                                       g$to$25451$1VmeqK)))
                                   g$x1$25401$1VmeqK
                                   g$start$25402$1VmeqK
                                   g$end$25403$1VmeqK
                                   g$rbits$25430$1VmeqK))
                                (g$loop$25404$1VmeqK
                                  ($$fx- g$width$25428$1VmeqK '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$25429$1VmeqK
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$25430$1VmeqK
                                      '1)
                                    ($fxand
                                      g$bits$25429$1VmeqK
                                      '1))))))))
                  (g$loop$25404$1VmeqK
                    ($$fx- g$end$25403$1VmeqK g$start$25402$1VmeqK)
                    ((case-lambda
                       ((g$fx1$25425$1VmeqK
                          g$fx2$25426$1VmeqK
                          g$fx3$25427$1VmeqK)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$25425$1VmeqK
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$25427$1VmeqK)))
                          g$fx2$25426$1VmeqK)))
                     g$x1$25401$1VmeqK
                     g$start$25402$1VmeqK
                     g$end$25403$1VmeqK)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$25716$1VmeqK
     g$fl+$27031$1VmeqK
     (case-lambda
       (() '0.0)
       ((g$x1$25839$1VmeqK g$x2$25840$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25839$1VmeqK))
            (assertion-violation 'fl+ '"not a flonum" g$x1$25839$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25840$1VmeqK))
            (assertion-violation 'fl+ '"not a flonum" g$x2$25840$1VmeqK)
            (void))
          ($fl+ g$x1$25839$1VmeqK g$x2$25840$1VmeqK)))
       (g$args$25841$1VmeqK
        (g$fold-left$20352$1VmeqK
          g$fl+$25716$1VmeqK
          (g$fl+$25716$1VmeqK)
          g$args$25841$1VmeqK))))
   (g$fl*$25717$1VmeqK
     g$fl*$27032$1VmeqK
     (case-lambda
       (() '1.0)
       ((g$x1$25842$1VmeqK g$x2$25843$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25842$1VmeqK))
            (assertion-violation 'fl* '"not a flonum" g$x1$25842$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25843$1VmeqK))
            (assertion-violation 'fl* '"not a flonum" g$x2$25843$1VmeqK)
            (void))
          ($fl* g$x1$25842$1VmeqK g$x2$25843$1VmeqK)))
       (g$args$25844$1VmeqK
        (g$fold-left$20352$1VmeqK
          g$fl*$25717$1VmeqK
          (g$fl*$25717$1VmeqK)
          g$args$25844$1VmeqK))))
   (g$fldenominator$25718$1VmeqK
     g$fldenominator$27033$1VmeqK
     (case-lambda
       ((g$fl$25845$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$25845$1VmeqK))
            (assertion-violation
              'fldenominator
              '"not a flonum"
              g$fl$25845$1VmeqK)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25846$1VmeqK)
                      (if g$t$25846$1VmeqK
                        g$t$25846$1VmeqK
                        (begin
                          '#f
                          (g$flinfinite?$25799$1VmeqK
                            g$fl$25845$1VmeqK)))))
                   (g$flnan?$25800$1VmeqK g$fl$25845$1VmeqK))
                '1.0
                (g$real->flonum$22186$1VmeqK
                  (g$denominator$22221$1VmeqK
                    g$fl$25845$1VmeqK))))))))))
   (g$flnumerator$25719$1VmeqK
     g$flnumerator$27034$1VmeqK
     (case-lambda
       ((g$fl$25847$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$25847$1VmeqK))
            (assertion-violation
              'flnumerator
              '"not a flonum"
              g$fl$25847$1VmeqK)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25848$1VmeqK)
                      (if g$t$25848$1VmeqK
                        g$t$25848$1VmeqK
                        (begin
                          '#f
                          (g$flinfinite?$25799$1VmeqK
                            g$fl$25847$1VmeqK)))))
                   (g$flnan?$25800$1VmeqK g$fl$25847$1VmeqK))
                g$fl$25847$1VmeqK
                (g$real->flonum$22186$1VmeqK
                  (g$numerator$22220$1VmeqK g$fl$25847$1VmeqK))))))))))
   (g$fl-$25720$1VmeqK
     g$fl-$27035$1VmeqK
     (case-lambda
       ((g$x1$25849$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25849$1VmeqK))
            (assertion-violation 'fl- '"not a flonum" g$x1$25849$1VmeqK)
            (void))
          ($fl- g$x1$25849$1VmeqK)))
       ((g$x1$25850$1VmeqK g$x2$25851$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25850$1VmeqK))
            (assertion-violation 'fl- '"not a flonum" g$x1$25850$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25851$1VmeqK))
            (assertion-violation 'fl- '"not a flonum" g$x2$25851$1VmeqK)
            (void))
          ($fl- g$x1$25850$1VmeqK g$x2$25851$1VmeqK)))
       ((g$x1$25852$1VmeqK g$x2$25853$1VmeqK . g$rest$25854$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25852$1VmeqK))
            (assertion-violation 'fl- '"not a flonum" g$x1$25852$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            g$fl-$25720$1VmeqK
            g$x1$25852$1VmeqK
            (cons g$x2$25853$1VmeqK g$rest$25854$1VmeqK))))))
   (g$fl/$25721$1VmeqK
     g$fl/$27036$1VmeqK
     (case-lambda
       ((g$x1$25855$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25855$1VmeqK))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25855$1VmeqK)
            (void))
          ($fl/ '1.0 g$x1$25855$1VmeqK)))
       ((g$x1$25856$1VmeqK g$x2$25857$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25856$1VmeqK))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25856$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25857$1VmeqK))
            (assertion-violation 'fl/ '"not a flonum" g$x2$25857$1VmeqK)
            (void))
          ($fl/ g$x1$25856$1VmeqK g$x2$25857$1VmeqK)))
       ((g$x1$25858$1VmeqK g$x2$25859$1VmeqK . g$rest$25860$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25858$1VmeqK))
            (assertion-violation 'fl/ '"not a flonum" g$x1$25858$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            g$fl/$25721$1VmeqK
            g$x1$25858$1VmeqK
            (cons g$x2$25859$1VmeqK g$rest$25860$1VmeqK))))))
   (g$fl=?$25722$1VmeqK
     g$fl=?$27037$1VmeqK
     (case-lambda
       ((g$x1$25861$1VmeqK g$x2$25862$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25861$1VmeqK))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x1$25861$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25862$1VmeqK))
            (assertion-violation
              'fl=?
              '"not a flonum"
              g$x2$25862$1VmeqK)
            (void))
          ($fl=? g$x1$25861$1VmeqK g$x2$25862$1VmeqK)))
       ((g$x1$25863$1VmeqK g$x2$25864$1VmeqK . g$rest$25865$1VmeqK)
        ((letrec ((g$f$25866$1VmeqK
                    (case-lambda
                      ((g$a$25867$1VmeqK g$b$25868$1VmeqK)
                       (if (null? g$b$25868$1VmeqK)
                         '#t
                         (if (g$fl=?$25722$1VmeqK
                               g$a$25867$1VmeqK
                               ($car g$b$25868$1VmeqK))
                           (g$f$25866$1VmeqK
                             ($car g$b$25868$1VmeqK)
                             ($cdr g$b$25868$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$25866$1VmeqK)
         g$x1$25863$1VmeqK
         (cons g$x2$25864$1VmeqK g$rest$25865$1VmeqK)))))
   (g$fl<?$25723$1VmeqK
     g$fl<?$27038$1VmeqK
     (case-lambda
       ((g$x1$25869$1VmeqK g$x2$25870$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25869$1VmeqK))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x1$25869$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25870$1VmeqK))
            (assertion-violation
              'fl<?
              '"not a flonum"
              g$x2$25870$1VmeqK)
            (void))
          ($fl<? g$x1$25869$1VmeqK g$x2$25870$1VmeqK)))
       ((g$x1$25871$1VmeqK g$x2$25872$1VmeqK . g$rest$25873$1VmeqK)
        ((letrec ((g$f$25874$1VmeqK
                    (case-lambda
                      ((g$a$25875$1VmeqK g$b$25876$1VmeqK)
                       (if (null? g$b$25876$1VmeqK)
                         '#t
                         (if (g$fl<?$25723$1VmeqK
                               g$a$25875$1VmeqK
                               ($car g$b$25876$1VmeqK))
                           (g$f$25874$1VmeqK
                             ($car g$b$25876$1VmeqK)
                             ($cdr g$b$25876$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$25874$1VmeqK)
         g$x1$25871$1VmeqK
         (cons g$x2$25872$1VmeqK g$rest$25873$1VmeqK)))))
   (g$fl<=?$25724$1VmeqK
     g$fl<=?$27039$1VmeqK
     (case-lambda
       ((g$x1$25877$1VmeqK g$x2$25878$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25877$1VmeqK))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x1$25877$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25878$1VmeqK))
            (assertion-violation
              'fl<=?
              '"not a flonum"
              g$x2$25878$1VmeqK)
            (void))
          ($fl<=? g$x1$25877$1VmeqK g$x2$25878$1VmeqK)))
       ((g$x1$25879$1VmeqK g$x2$25880$1VmeqK . g$rest$25881$1VmeqK)
        ((letrec ((g$f$25882$1VmeqK
                    (case-lambda
                      ((g$a$25883$1VmeqK g$b$25884$1VmeqK)
                       (if (null? g$b$25884$1VmeqK)
                         '#t
                         (if (g$fl<=?$25724$1VmeqK
                               g$a$25883$1VmeqK
                               ($car g$b$25884$1VmeqK))
                           (g$f$25882$1VmeqK
                             ($car g$b$25884$1VmeqK)
                             ($cdr g$b$25884$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$25882$1VmeqK)
         g$x1$25879$1VmeqK
         (cons g$x2$25880$1VmeqK g$rest$25881$1VmeqK)))))
   (g$fl>?$25725$1VmeqK
     g$fl>?$27040$1VmeqK
     (case-lambda
       ((g$x1$25885$1VmeqK g$x2$25886$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25885$1VmeqK))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x1$25885$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25886$1VmeqK))
            (assertion-violation
              'fl>?
              '"not a flonum"
              g$x2$25886$1VmeqK)
            (void))
          ($fl>? g$x1$25885$1VmeqK g$x2$25886$1VmeqK)))
       ((g$x1$25887$1VmeqK g$x2$25888$1VmeqK . g$rest$25889$1VmeqK)
        ((letrec ((g$f$25890$1VmeqK
                    (case-lambda
                      ((g$a$25891$1VmeqK g$b$25892$1VmeqK)
                       (if (null? g$b$25892$1VmeqK)
                         '#t
                         (if (g$fl>?$25725$1VmeqK
                               g$a$25891$1VmeqK
                               ($car g$b$25892$1VmeqK))
                           (g$f$25890$1VmeqK
                             ($car g$b$25892$1VmeqK)
                             ($cdr g$b$25892$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$25890$1VmeqK)
         g$x1$25887$1VmeqK
         (cons g$x2$25888$1VmeqK g$rest$25889$1VmeqK)))))
   (g$fl>=?$25726$1VmeqK
     g$fl>=?$27041$1VmeqK
     (case-lambda
       ((g$x1$25893$1VmeqK g$x2$25894$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25893$1VmeqK))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x1$25893$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25894$1VmeqK))
            (assertion-violation
              'fl>=?
              '"not a flonum"
              g$x2$25894$1VmeqK)
            (void))
          ($fl>=? g$x1$25893$1VmeqK g$x2$25894$1VmeqK)))
       ((g$x1$25895$1VmeqK g$x2$25896$1VmeqK . g$rest$25897$1VmeqK)
        ((letrec ((g$f$25898$1VmeqK
                    (case-lambda
                      ((g$a$25899$1VmeqK g$b$25900$1VmeqK)
                       (if (null? g$b$25900$1VmeqK)
                         '#t
                         (if (g$fl>=?$25726$1VmeqK
                               g$a$25899$1VmeqK
                               ($car g$b$25900$1VmeqK))
                           (g$f$25898$1VmeqK
                             ($car g$b$25900$1VmeqK)
                             ($cdr g$b$25900$1VmeqK))
                           (begin '#f '#f)))))))
           g$f$25898$1VmeqK)
         g$x1$25895$1VmeqK
         (cons g$x2$25896$1VmeqK g$rest$25897$1VmeqK)))))
   (g$residual-fldiv0*$25742$1VmeqK
     g$residual-fldiv0*$27042$1VmeqK
     (case-lambda
       ((g$x1$25921$1VmeqK g$x2$25922$1VmeqK)
        ((case-lambda
           ((g$d$25923$1VmeqK)
            ((case-lambda
               ((g$m$25924$1VmeqK)
                (if ($fl<?
                      g$m$25924$1VmeqK
                      (g$magnitude$22218$1VmeqK
                        ($fl/ g$x2$25922$1VmeqK '2.0)))
                  g$d$25923$1VmeqK
                  (if ($fl<? '0.0 g$x2$25922$1VmeqK)
                    ($fl+ g$d$25923$1VmeqK '1.0)
                    (begin '#f ($fl- g$d$25923$1VmeqK '1.0))))))
             ($fl-
               g$x1$25921$1VmeqK
               ($fl* g$d$25923$1VmeqK g$x2$25922$1VmeqK)))))
         ((case-lambda
            ((g$x1$25945$1VmeqK g$x2$25946$1VmeqK)
             (if ($fl<? '0.0 g$x2$25946$1VmeqK)
               ((case-lambda
                  ((g$fl$25967$1VmeqK)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$25967$1VmeqK)))
                ($fl/ g$x1$25945$1VmeqK g$x2$25946$1VmeqK))
               ($fl-
                 ((case-lambda
                    ((g$fl$25988$1VmeqK)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$25988$1VmeqK)))
                  ($fl/ g$x1$25945$1VmeqK ($fl- g$x2$25946$1VmeqK)))))))
          g$x1$25921$1VmeqK
          g$x2$25922$1VmeqK)))))
   (g$fldiv0$25743$1VmeqK
     g$fldiv0$27043$1VmeqK
     (case-lambda
       ((g$x1$25989$1VmeqK g$x2$25990$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$25989$1VmeqK))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x1$25989$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$25990$1VmeqK))
            (assertion-violation
              'fldiv0
              '"not a flonum"
              g$x2$25990$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26011$1VmeqK g$x2$26012$1VmeqK)
                  ((case-lambda
                     ((g$d$26013$1VmeqK)
                      ((case-lambda
                         ((g$m$26014$1VmeqK)
                          (if ($fl<?
                                g$m$26014$1VmeqK
                                (g$magnitude$22218$1VmeqK
                                  ($fl/ g$x2$26012$1VmeqK '2.0)))
                            g$d$26013$1VmeqK
                            (if ($fl<? '0.0 g$x2$26012$1VmeqK)
                              ($fl+ g$d$26013$1VmeqK '1.0)
                              (begin
                                '#f
                                ($fl- g$d$26013$1VmeqK '1.0))))))
                       ($fl-
                         g$x1$26011$1VmeqK
                         ($fl* g$d$26013$1VmeqK g$x2$26012$1VmeqK)))))
                   ((case-lambda
                      ((g$x1$26035$1VmeqK g$x2$26036$1VmeqK)
                       (if ($fl<? '0.0 g$x2$26036$1VmeqK)
                         ((case-lambda
                            ((g$fl$26057$1VmeqK)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$26057$1VmeqK)))
                          ($fl/ g$x1$26035$1VmeqK g$x2$26036$1VmeqK))
                         ($fl-
                           ((case-lambda
                              ((g$fl$26078$1VmeqK)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$26078$1VmeqK)))
                            ($fl/
                              g$x1$26035$1VmeqK
                              ($fl- g$x2$26036$1VmeqK)))))))
                    g$x1$26011$1VmeqK
                    g$x2$26012$1VmeqK))))
               g$x1$25989$1VmeqK
               g$x2$25990$1VmeqK))))))))
   (g$residual-flmod*$25759$1VmeqK
     g$residual-flmod*$27044$1VmeqK
     (case-lambda
       ((g$x1$26099$1VmeqK g$x2$26100$1VmeqK)
        ($fl-
          g$x1$26099$1VmeqK
          ($fl*
            ((case-lambda
               ((g$x1$26121$1VmeqK g$x2$26122$1VmeqK)
                (if ($fl<? '0.0 g$x2$26122$1VmeqK)
                  ((case-lambda
                     ((g$fl$26143$1VmeqK)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$26143$1VmeqK)))
                   ($fl/ g$x1$26121$1VmeqK g$x2$26122$1VmeqK))
                  ($fl-
                    ((case-lambda
                       ((g$fl$26164$1VmeqK)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$26164$1VmeqK)))
                     ($fl/
                       g$x1$26121$1VmeqK
                       ($fl- g$x2$26122$1VmeqK)))))))
             g$x1$26099$1VmeqK
             g$x2$26100$1VmeqK)
            g$x2$26100$1VmeqK)))))
   (g$flmod$25760$1VmeqK
     g$flmod$27045$1VmeqK
     (case-lambda
       ((g$x1$26165$1VmeqK g$x2$26166$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$26165$1VmeqK))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x1$26165$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$26166$1VmeqK))
            (assertion-violation
              'flmod
              '"not a flonum"
              g$x2$26166$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26187$1VmeqK g$x2$26188$1VmeqK)
                  ($fl-
                    g$x1$26187$1VmeqK
                    ($fl*
                      ((case-lambda
                         ((g$x1$26209$1VmeqK g$x2$26210$1VmeqK)
                          (if ($fl<? '0.0 g$x2$26210$1VmeqK)
                            ((case-lambda
                               ((g$fl$26231$1VmeqK)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$26231$1VmeqK)))
                             ($fl/ g$x1$26209$1VmeqK g$x2$26210$1VmeqK))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$26252$1VmeqK)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$26252$1VmeqK)))
                               ($fl/
                                 g$x1$26209$1VmeqK
                                 ($fl- g$x2$26210$1VmeqK)))))))
                       g$x1$26187$1VmeqK
                       g$x2$26188$1VmeqK)
                      g$x2$26188$1VmeqK))))
               g$x1$26165$1VmeqK
               g$x2$26166$1VmeqK))))))))
   (g$flmod0$25761$1VmeqK
     g$flmod0$27046$1VmeqK
     (case-lambda
       ((g$x1$26253$1VmeqK g$x2$26254$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$26253$1VmeqK))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x1$26253$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$26254$1VmeqK))
            (assertion-violation
              'flmod0
              '"not a flonum"
              g$x2$26254$1VmeqK)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$26253$1VmeqK
                ($fl*
                  ((case-lambda
                     ((g$x1$26275$1VmeqK g$x2$26276$1VmeqK)
                      ((case-lambda
                         ((g$d$26277$1VmeqK)
                          ((case-lambda
                             ((g$m$26278$1VmeqK)
                              (if ($fl<?
                                    g$m$26278$1VmeqK
                                    (g$magnitude$22218$1VmeqK
                                      ($fl/ g$x2$26276$1VmeqK '2.0)))
                                g$d$26277$1VmeqK
                                (if ($fl<? '0.0 g$x2$26276$1VmeqK)
                                  ($fl+ g$d$26277$1VmeqK '1.0)
                                  (begin
                                    '#f
                                    ($fl- g$d$26277$1VmeqK '1.0))))))
                           ($fl-
                             g$x1$26275$1VmeqK
                             ($fl*
                               g$d$26277$1VmeqK
                               g$x2$26276$1VmeqK)))))
                       ((case-lambda
                          ((g$x1$26299$1VmeqK g$x2$26300$1VmeqK)
                           (if ($fl<? '0.0 g$x2$26300$1VmeqK)
                             ((case-lambda
                                ((g$fl$26321$1VmeqK)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$26321$1VmeqK)))
                              ($fl/
                                g$x1$26299$1VmeqK
                                g$x2$26300$1VmeqK))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$26342$1VmeqK)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$26342$1VmeqK)))
                                ($fl/
                                  g$x1$26299$1VmeqK
                                  ($fl- g$x2$26300$1VmeqK)))))))
                        g$x1$26275$1VmeqK
                        g$x2$26276$1VmeqK))))
                   g$x1$26253$1VmeqK
                   g$x2$26254$1VmeqK)
                  g$x2$26254$1VmeqK)))))))))
   (g$fldiv-and-mod$25762$1VmeqK
     g$fldiv-and-mod$27047$1VmeqK
     (case-lambda
       ((g$x1$26343$1VmeqK g$x2$26344$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$26343$1VmeqK))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x1$26343$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$26344$1VmeqK))
            (assertion-violation
              'fldiv-and-mod
              '"not a flonum"
              g$x2$26344$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$26345$1VmeqK)
                  (values
                    g$d$26345$1VmeqK
                    ($fl-
                      g$x1$26343$1VmeqK
                      ($fl* g$d$26345$1VmeqK g$x2$26344$1VmeqK)))))
               ((case-lambda
                  ((g$x1$26366$1VmeqK g$x2$26367$1VmeqK)
                   (if ($fl<? '0.0 g$x2$26367$1VmeqK)
                     ((case-lambda
                        ((g$fl$26388$1VmeqK)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$26388$1VmeqK)))
                      ($fl/ g$x1$26366$1VmeqK g$x2$26367$1VmeqK))
                     ($fl-
                       ((case-lambda
                          ((g$fl$26409$1VmeqK)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$26409$1VmeqK)))
                        ($fl/
                          g$x1$26366$1VmeqK
                          ($fl- g$x2$26367$1VmeqK)))))))
                g$x1$26343$1VmeqK
                g$x2$26344$1VmeqK)))))))))
   (g$residual-fldiv*$25778$1VmeqK
     g$residual-fldiv*$27048$1VmeqK
     (case-lambda
       ((g$x1$26430$1VmeqK g$x2$26431$1VmeqK)
        (if ($fl<? '0.0 g$x2$26431$1VmeqK)
          ((case-lambda
             ((g$fl$26452$1VmeqK)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$26452$1VmeqK)))
           ($fl/ g$x1$26430$1VmeqK g$x2$26431$1VmeqK))
          ($fl-
            ((case-lambda
               ((g$fl$26473$1VmeqK)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$26473$1VmeqK)))
             ($fl/ g$x1$26430$1VmeqK ($fl- g$x2$26431$1VmeqK))))))))
   (g$fldiv$25779$1VmeqK
     g$fldiv$27049$1VmeqK
     (case-lambda
       ((g$x1$26474$1VmeqK g$x2$26475$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$26474$1VmeqK))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x1$26474$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$26475$1VmeqK))
            (assertion-violation
              'fldiv
              '"not a flonum"
              g$x2$26475$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26496$1VmeqK g$x2$26497$1VmeqK)
                  (if ($fl<? '0.0 g$x2$26497$1VmeqK)
                    ((case-lambda
                       ((g$fl$26518$1VmeqK)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$26518$1VmeqK)))
                     ($fl/ g$x1$26496$1VmeqK g$x2$26497$1VmeqK))
                    ($fl-
                      ((case-lambda
                         ((g$fl$26539$1VmeqK)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$26539$1VmeqK)))
                       ($fl/
                         g$x1$26496$1VmeqK
                         ($fl- g$x2$26497$1VmeqK)))))))
               g$x1$26474$1VmeqK
               g$x2$26475$1VmeqK))))))))
   (g$fldiv0-and-mod0$25780$1VmeqK
     g$fldiv0-and-mod0$27050$1VmeqK
     (case-lambda
       ((g$x1$26540$1VmeqK g$x2$26541$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$x1$26540$1VmeqK))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$26540$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$x2$26541$1VmeqK))
            (assertion-violation
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$26541$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$26542$1VmeqK)
                  (values
                    g$d$26542$1VmeqK
                    ($fl-
                      g$x1$26540$1VmeqK
                      ($fl* g$d$26542$1VmeqK g$x2$26541$1VmeqK)))))
               ((case-lambda
                  ((g$x1$26563$1VmeqK g$x2$26564$1VmeqK)
                   ((case-lambda
                      ((g$d$26565$1VmeqK)
                       ((case-lambda
                          ((g$m$26566$1VmeqK)
                           (if ($fl<?
                                 g$m$26566$1VmeqK
                                 (g$magnitude$22218$1VmeqK
                                   ($fl/ g$x2$26564$1VmeqK '2.0)))
                             g$d$26565$1VmeqK
                             (if ($fl<? '0.0 g$x2$26564$1VmeqK)
                               ($fl+ g$d$26565$1VmeqK '1.0)
                               (begin
                                 '#f
                                 ($fl- g$d$26565$1VmeqK '1.0))))))
                        ($fl-
                          g$x1$26563$1VmeqK
                          ($fl* g$d$26565$1VmeqK g$x2$26564$1VmeqK)))))
                    ((case-lambda
                       ((g$x1$26587$1VmeqK g$x2$26588$1VmeqK)
                        (if ($fl<? '0.0 g$x2$26588$1VmeqK)
                          ((case-lambda
                             ((g$fl$26609$1VmeqK)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$26609$1VmeqK)))
                           ($fl/ g$x1$26587$1VmeqK g$x2$26588$1VmeqK))
                          ($fl-
                            ((case-lambda
                               ((g$fl$26630$1VmeqK)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$26630$1VmeqK)))
                             ($fl/
                               g$x1$26587$1VmeqK
                               ($fl- g$x2$26588$1VmeqK)))))))
                     g$x1$26563$1VmeqK
                     g$x2$26564$1VmeqK))))
                g$x1$26540$1VmeqK
                g$x2$26541$1VmeqK)))))))))
   (g$flinteger?$25781$1VmeqK
     g$flinteger?$27051$1VmeqK
     (case-lambda
       ((g$fl$26631$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26631$1VmeqK))
            (assertion-violation
              'flinteger?
              '"not a flonum"
              g$fl$26631$1VmeqK)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$26652$1VmeqK g$x2$26653$1VmeqK)
                    ($fl-
                      g$x1$26652$1VmeqK
                      ($fl*
                        ((case-lambda
                           ((g$x1$26674$1VmeqK g$x2$26675$1VmeqK)
                            (if ($fl<? '0.0 g$x2$26675$1VmeqK)
                              ((case-lambda
                                 ((g$fl$26696$1VmeqK)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$26696$1VmeqK)))
                               ($fl/
                                 g$x1$26674$1VmeqK
                                 g$x2$26675$1VmeqK))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$26717$1VmeqK)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26717$1VmeqK)))
                                 ($fl/
                                   g$x1$26674$1VmeqK
                                   ($fl- g$x2$26675$1VmeqK)))))))
                         g$x1$26652$1VmeqK
                         g$x2$26653$1VmeqK)
                        g$x2$26653$1VmeqK))))
                 g$fl$26631$1VmeqK
                 '1.0)))))))))
   (g$flfinite?$25782$1VmeqK
     g$flfinite?$27052$1VmeqK
     (case-lambda
       ((g$fl$26718$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26718$1VmeqK))
            (assertion-violation
              'flfinite?
              '"not a flonum"
              g$fl$26718$1VmeqK)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$26739$1VmeqK)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$26739$1VmeqK)))
                    g$fl$26718$1VmeqK)))))))))
   (g$residual-flinfinite?*$25798$1VmeqK
     g$residual-flinfinite?*$27053$1VmeqK
     (case-lambda
       ((g$fl$26760$1VmeqK)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$26760$1VmeqK))))
   (g$flinfinite?$25799$1VmeqK
     g$flinfinite?$27054$1VmeqK
     (case-lambda
       ((g$fl$26761$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26761$1VmeqK))
            (assertion-violation
              'flinfinite?
              '"not a flonum"
              g$fl$26761$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26782$1VmeqK)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$26782$1VmeqK)))
               g$fl$26761$1VmeqK))))))))
   (g$flnan?$25800$1VmeqK
     g$flnan?$27055$1VmeqK
     (case-lambda
       ((g$fl$26783$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26783$1VmeqK))
            (assertion-violation
              'flnan?
              '"not a flonum"
              g$fl$26783$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$26783$1VmeqK))))))))
   (g$flsin$25801$1VmeqK
     g$flsin$27056$1VmeqK
     (case-lambda
       ((g$fl$26784$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26784$1VmeqK))
            (assertion-violation
              'flsin
              '"not a flonum"
              g$fl$26784$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$26784$1VmeqK))))))))
   (g$flcos$25802$1VmeqK
     g$flcos$27057$1VmeqK
     (case-lambda
       ((g$fl$26785$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26785$1VmeqK))
            (assertion-violation
              'flcos
              '"not a flonum"
              g$fl$26785$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$26785$1VmeqK))))))))
   (g$fltan$25803$1VmeqK
     g$fltan$27058$1VmeqK
     (case-lambda
       ((g$fl$26786$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26786$1VmeqK))
            (assertion-violation
              'fltan
              '"not a flonum"
              g$fl$26786$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$26786$1VmeqK))))))))
   (g$flasin$25804$1VmeqK
     g$flasin$27059$1VmeqK
     (case-lambda
       ((g$fl$26787$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26787$1VmeqK))
            (assertion-violation
              'flasin
              '"not a flonum"
              g$fl$26787$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$26787$1VmeqK))))))))
   (g$flacos$25805$1VmeqK
     g$flacos$27060$1VmeqK
     (case-lambda
       ((g$fl$26788$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26788$1VmeqK))
            (assertion-violation
              'flacos
              '"not a flonum"
              g$fl$26788$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$26788$1VmeqK))))))))
   (g$flatan$25806$1VmeqK
     g$flatan$27061$1VmeqK
     (case-lambda
       ((g$fl$26789$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26789$1VmeqK))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl$26789$1VmeqK)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$26789$1VmeqK)))
       ((g$fl1$26790$1VmeqK g$fl2$26791$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl1$26790$1VmeqK))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl1$26790$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$fl2$26791$1VmeqK))
            (assertion-violation
              'flatan
              '"not a flonum"
              g$fl2$26791$1VmeqK)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$26790$1VmeqK
            g$fl2$26791$1VmeqK)))))
   (g$fllog$25807$1VmeqK
     g$fllog$27062$1VmeqK
     (case-lambda
       ((g$fl$26792$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26792$1VmeqK))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl$26792$1VmeqK)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$26792$1VmeqK)))
       ((g$fl1$26793$1VmeqK g$fl2$26794$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl1$26793$1VmeqK))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl1$26793$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$fl2$26794$1VmeqK))
            (assertion-violation
              'fllog
              '"not a flonum"
              g$fl2$26794$1VmeqK)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$26793$1VmeqK
            g$fl2$26794$1VmeqK)))))
   (g$flsqrt$25808$1VmeqK
     g$flsqrt$27063$1VmeqK
     (case-lambda
       ((g$fl$26795$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26795$1VmeqK))
            (assertion-violation
              'flsqrt
              '"not a flonum"
              g$fl$26795$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$26795$1VmeqK))))))))
   (g$flexp$25809$1VmeqK
     g$flexp$27064$1VmeqK
     (case-lambda
       ((g$fl$26796$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26796$1VmeqK))
            (assertion-violation
              'flexp
              '"not a flonum"
              g$fl$26796$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$26796$1VmeqK))))))))
   (g$flexpt$25810$1VmeqK
     g$flexpt$27065$1VmeqK
     (case-lambda
       ((g$fl$26797$1VmeqK g$n$26798$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26797$1VmeqK))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$fl$26797$1VmeqK)
            (void))
          (if (not (g$flonum?$21185$1VmeqK g$n$26798$1VmeqK))
            (assertion-violation
              'flexpt
              '"not a flonum"
              g$n$26798$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$26797$1VmeqK
                g$n$26798$1VmeqK))))))))
   (g$flceiling$25811$1VmeqK
     g$flceiling$27066$1VmeqK
     (case-lambda
       ((g$fl$26799$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26799$1VmeqK))
            (assertion-violation
              'flceiling
              '"not a flonum"
              g$fl$26799$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$26799$1VmeqK))))))))
   (g$residual-flfloor*$25827$1VmeqK
     g$residual-flfloor*$27067$1VmeqK
     (case-lambda
       ((g$fl$26820$1VmeqK)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$26820$1VmeqK))))
   (g$flfloor$25828$1VmeqK
     g$flfloor$27068$1VmeqK
     (case-lambda
       ((g$fl$26821$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26821$1VmeqK))
            (assertion-violation
              'flfloor
              '"not a flonum"
              g$fl$26821$1VmeqK)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26842$1VmeqK)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$26842$1VmeqK)))
               g$fl$26821$1VmeqK))))))))
   (g$fltruncate$25829$1VmeqK
     g$fltruncate$27069$1VmeqK
     (case-lambda
       ((g$fl$26843$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26843$1VmeqK))
            (assertion-violation
              'fltruncate
              '"not a flonum"
              g$fl$26843$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$26843$1VmeqK))))))))
   (g$flround$25830$1VmeqK
     g$flround$27070$1VmeqK
     (case-lambda
       ((g$fl$26844$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26844$1VmeqK))
            (assertion-violation
              'flround
              '"not a flonum"
              g$fl$26844$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$26844$1VmeqK))))))))
   (g$flabs$25831$1VmeqK
     g$flabs$27071$1VmeqK
     (case-lambda
       ((g$fl$26845$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$fl$26845$1VmeqK))
            (assertion-violation
              'flabs
              '"not a flonum"
              g$fl$26845$1VmeqK)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$26845$1VmeqK))))))))
   (g$flpositive?$25832$1VmeqK
     g$flpositive?$27072$1VmeqK
     (case-lambda
       ((g$r$26846$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$r$26846$1VmeqK))
            (assertion-violation
              'flpositive?
              '"not a flonum"
              g$r$26846$1VmeqK)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$26846$1VmeqK))))))))
   (g$flnegative?$25833$1VmeqK
     g$flnegative?$27073$1VmeqK
     (case-lambda
       ((g$r$26847$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$r$26847$1VmeqK))
            (assertion-violation
              'flnegative?
              '"not a flonum"
              g$r$26847$1VmeqK)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$26847$1VmeqK))))))))
   (g$flzero?$25834$1VmeqK
     g$flzero?$27074$1VmeqK
     (case-lambda
       ((g$r$26848$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$r$26848$1VmeqK))
            (assertion-violation
              'flzero?
              '"not a flonum"
              g$r$26848$1VmeqK)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$26848$1VmeqK))))))))
   (g$fleven?$25835$1VmeqK
     g$fleven?$27075$1VmeqK
     (case-lambda
       ((g$n$26849$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$n$26849$1VmeqK))
            (assertion-violation
              'fleven?
              '"not a flonum"
              g$n$26849$1VmeqK)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$22200$1VmeqK
                           g$n$26849$1VmeqK))
                  (assertion-violation
                    'fleven?
                    '"not integer valued"
                    g$n$26849$1VmeqK)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$26870$1VmeqK g$x2$26871$1VmeqK)
                      ($fl-
                        g$x1$26870$1VmeqK
                        ($fl*
                          ((case-lambda
                             ((g$x1$26892$1VmeqK g$x2$26893$1VmeqK)
                              (if ($fl<? '0.0 g$x2$26893$1VmeqK)
                                ((case-lambda
                                   ((g$fl$26914$1VmeqK)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26914$1VmeqK)))
                                 ($fl/
                                   g$x1$26892$1VmeqK
                                   g$x2$26893$1VmeqK))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$26935$1VmeqK)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$26935$1VmeqK)))
                                   ($fl/
                                     g$x1$26892$1VmeqK
                                     ($fl- g$x2$26893$1VmeqK)))))))
                           g$x1$26870$1VmeqK
                           g$x2$26871$1VmeqK)
                          g$x2$26871$1VmeqK))))
                   g$n$26849$1VmeqK
                   '2.0))))))))))
   (g$flodd?$25836$1VmeqK
     g$flodd?$27076$1VmeqK
     (case-lambda
       ((g$n$26936$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$n$26936$1VmeqK))
            (assertion-violation
              'flodd?
              '"not a flonum"
              g$n$26936$1VmeqK)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$22200$1VmeqK
                           g$n$26936$1VmeqK))
                  (assertion-violation
                    'flodd?
                    '"not integer valued"
                    g$n$26936$1VmeqK)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$26957$1VmeqK g$x2$26958$1VmeqK)
                      ($fl-
                        g$x1$26957$1VmeqK
                        ($fl*
                          ((case-lambda
                             ((g$x1$26979$1VmeqK g$x2$26980$1VmeqK)
                              (if ($fl<? '0.0 g$x2$26980$1VmeqK)
                                ((case-lambda
                                   ((g$fl$27001$1VmeqK)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$27001$1VmeqK)))
                                 ($fl/
                                   g$x1$26979$1VmeqK
                                   g$x2$26980$1VmeqK))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$27022$1VmeqK)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$27022$1VmeqK)))
                                   ($fl/
                                     g$x1$26979$1VmeqK
                                     ($fl- g$x2$26980$1VmeqK)))))))
                           g$x1$26957$1VmeqK
                           g$x2$26958$1VmeqK)
                          g$x2$26958$1VmeqK))))
                   g$n$26936$1VmeqK
                   '2.0))))))))))
   (g$flmax$25837$1VmeqK
     g$flmax$27077$1VmeqK
     (case-lambda
       ((g$a$27023$1VmeqK . g$rest$27024$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$a$27023$1VmeqK))
            (assertion-violation
              'flmax
              '"not a flonum"
              g$a$27023$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            (case-lambda
              ((g$a$27025$1VmeqK g$b$27026$1VmeqK)
               (if (g$fl<?$25723$1VmeqK
                     g$a$27025$1VmeqK
                     g$b$27026$1VmeqK)
                 g$b$27026$1VmeqK
                 g$a$27025$1VmeqK)))
            g$a$27023$1VmeqK
            g$rest$27024$1VmeqK)))))
   (g$flmin$25838$1VmeqK
     g$flmin$27078$1VmeqK
     (case-lambda
       ((g$a$27027$1VmeqK . g$rest$27028$1VmeqK)
        (begin
          (if (not (g$flonum?$21185$1VmeqK g$a$27027$1VmeqK))
            (assertion-violation
              'flmin
              '"not a flonum"
              g$a$27027$1VmeqK)
            (void))
          (g$fold-left$20352$1VmeqK
            (case-lambda
              ((g$a$27029$1VmeqK g$b$27030$1VmeqK)
               (if (g$fl>?$25725$1VmeqK
                     g$a$27029$1VmeqK
                     g$b$27030$1VmeqK)
                 g$b$27030$1VmeqK
                 g$a$27029$1VmeqK)))
            g$a$27027$1VmeqK
            g$rest$27028$1VmeqK))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$27080$1VmeqK
     g$using$27106$1VmeqK
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$27081$1VmeqK
     g$standard-error-port$27107$1VmeqK
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$27082$1VmeqK
     g$standard-input-port$27108$1VmeqK
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$27083$1VmeqK
     g$standard-output-port$27109$1VmeqK
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$27084$1VmeqK
     g$native-eol-style$27110$1VmeqK
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$27085$1VmeqK
     g$buffer-mode?$27111$1VmeqK
     (case-lambda
       ((g$obj$27094$1VmeqK)
        (if (g$symbol?$21181$1VmeqK g$obj$27094$1VmeqK)
          (if (g$memq$20341$1VmeqK
                g$obj$27094$1VmeqK
                '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$27086$1VmeqK
     g$put-datum$27112$1VmeqK
     (case-lambda
       ((g$p$27095$1VmeqK g$datum$27096$1VmeqK)
        (write g$datum$27096$1VmeqK g$p$27095$1VmeqK))))
   (g$get-datum$27087$1VmeqK g$get-datum$27113$1VmeqK read)
   (g$get-output-string$27088$1VmeqK
     g$get-output-string$27114$1VmeqK
     (case-lambda
       ((g$port$27097$1VmeqK)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$27097$1VmeqK))))
   (g$open-output-string$27089$1VmeqK
     g$open-output-string$27115$1VmeqK
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$27090$1VmeqK
     g$open-string-output-port$27116$1VmeqK
     (case-lambda
       (()
        ((case-lambda
           ((g$p$27098$1VmeqK)
            (values
              g$p$27098$1VmeqK
              (case-lambda
                (()
                 (g$get-output-string$27088$1VmeqK
                   g$p$27098$1VmeqK))))))
         (g$open-output-string$27089$1VmeqK)))))
   (g$port?$27091$1VmeqK
     g$port?$27117$1VmeqK
     (case-lambda
       ((g$obj$27099$1VmeqK)
        ((case-lambda
           ((g$t$27100$1VmeqK)
            (if g$t$27100$1VmeqK
              g$t$27100$1VmeqK
              (begin '#f (binary-port? g$obj$27099$1VmeqK)))))
         (textual-port? g$obj$27099$1VmeqK)))))
   (g$call-with-string-output-port$27092$1VmeqK
     g$call-with-string-output-port$27118$1VmeqK
     (case-lambda
       ((g$proc$27101$1VmeqK)
        ((case-lambda
           ((g$p$27102$1VmeqK)
            (begin
              (g$call-with-port$27093$1VmeqK
                g$p$27102$1VmeqK
                g$proc$27101$1VmeqK)
              (g$get-output-string$27088$1VmeqK g$p$27102$1VmeqK))))
         (g$open-output-string$27089$1VmeqK)))))
   (g$call-with-port$27093$1VmeqK
     g$call-with-port$27119$1VmeqK
     (case-lambda
       ((g$port$27103$1VmeqK g$proc$27104$1VmeqK)
        ((case-lambda
           ((g$r$27105$1VmeqK)
            (begin (close-port g$port$27103$1VmeqK) g$r$27105$1VmeqK)))
         (g$proc$27104$1VmeqK g$port$27103$1VmeqK))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$27120$1VmeqK
     g$peek-char$27175$1VmeqK
     (case-lambda
       (() (g$peek-char$27120$1VmeqK (current-input-port)))
       ((g$port$27147$1VmeqK) (lookahead-char g$port$27147$1VmeqK))))
   (g$read-char$27121$1VmeqK
     g$read-char$27176$1VmeqK
     (case-lambda
       (() (g$read-char$27121$1VmeqK (current-input-port)))
       ((g$port$27148$1VmeqK) (get-char g$port$27148$1VmeqK))))
   (g$write-char$27122$1VmeqK
     g$write-char$27177$1VmeqK
     (case-lambda
       ((g$chr$27149$1VmeqK)
        (g$write-char$27122$1VmeqK
          g$chr$27149$1VmeqK
          (current-output-port)))
       ((g$chr$27150$1VmeqK g$port$27151$1VmeqK)
        (put-char g$port$27151$1VmeqK g$chr$27150$1VmeqK))))
   (g$with-input-from-file$27142$1VmeqK
     g$with-input-from-file$27178$1VmeqK
     (case-lambda
       ((g$filename$27152$1VmeqK g$thunk$27153$1VmeqK)
        ((case-lambda
           ((g$current-input-port$27156$1VmeqK g$t$27157$1VmeqK)
            ((case-lambda
               ((g$swap$27158$1VmeqK)
                (dynamic-wind
                  g$swap$27158$1VmeqK
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$27153$1VmeqK)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$27158$1VmeqK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$27159$1VmeqK)
                    (begin
                      (g$current-input-port$27156$1VmeqK
                        g$t$27157$1VmeqK)
                      (set! g$t$27157$1VmeqK g$t$27159$1VmeqK))))
                 (g$current-input-port$27156$1VmeqK)))))))
         current-input-port
         (open-input-file g$filename$27152$1VmeqK)))))
   (g$with-output-to-file$27143$1VmeqK
     g$with-output-to-file$27179$1VmeqK
     (case-lambda
       ((g$filename$27160$1VmeqK g$thunk$27161$1VmeqK)
        ((case-lambda
           ((g$current-output-port$27164$1VmeqK g$t$27165$1VmeqK)
            ((case-lambda
               ((g$swap$27166$1VmeqK)
                (dynamic-wind
                  g$swap$27166$1VmeqK
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$27161$1VmeqK)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$27166$1VmeqK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$27167$1VmeqK)
                    (begin
                      (g$current-output-port$27164$1VmeqK
                        g$t$27165$1VmeqK)
                      (set! g$t$27165$1VmeqK g$t$27167$1VmeqK))))
                 (g$current-output-port$27164$1VmeqK)))))))
         current-output-port
         (open-output-file g$filename$27160$1VmeqK)))))
   (g$call-with-input-file$27144$1VmeqK
     g$call-with-input-file$27180$1VmeqK
     (case-lambda
       ((g$filename$27168$1VmeqK g$proc$27169$1VmeqK)
        ((case-lambda
           ((g$p$27170$1VmeqK)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$27169$1VmeqK g$p$27170$1VmeqK)))
              (case-lambda (() (close-input-port g$p$27170$1VmeqK))))))
         (open-input-file g$filename$27168$1VmeqK)))))
   (g$call-with-output-file$27145$1VmeqK
     g$call-with-output-file$27181$1VmeqK
     (case-lambda
       ((g$filename$27171$1VmeqK g$proc$27172$1VmeqK)
        ((case-lambda
           ((g$p$27173$1VmeqK)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$27172$1VmeqK g$p$27173$1VmeqK)))
              (case-lambda (() (close-output-port g$p$27173$1VmeqK))))))
         (open-output-file g$filename$27171$1VmeqK)))))
   (g$newline$27146$1VmeqK
     g$newline$27182$1VmeqK
     (case-lambda
       (() (g$newline$27146$1VmeqK (current-output-port)))
       ((g$port$27174$1VmeqK) (display '"
" g$port$27174$1VmeqK)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$10880$27183$1VmeqK
     g$10880$27296$1VmeqK
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$10882$27184$1VmeqK g$10882$27297$1VmeqK '#f)
   (g$10881$27185$1VmeqK
     g$10881$27298$1VmeqK
     (make-record-constructor-descriptor
       g$10880$27183$1VmeqK
       '#f
       g$10882$27184$1VmeqK))
   (g$enum?$27188$1VmeqK
     g$enum?$27299$1VmeqK
     (record-predicate g$10880$27183$1VmeqK))
   (g$make-enum$27189$1VmeqK
     g$make-enum$27300$1VmeqK
     (record-constructor g$10881$27185$1VmeqK))
   (g$enum-value$27190$1VmeqK
     g$enum-value$27301$1VmeqK
     (record-accessor g$10880$27183$1VmeqK '0))
   (g$enum-info$27191$1VmeqK
     g$enum-info$27302$1VmeqK
     (record-accessor g$10880$27183$1VmeqK '1))
   (g$10891$27192$1VmeqK
     g$10891$27303$1VmeqK
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$10893$27193$1VmeqK g$10893$27304$1VmeqK '#f)
   (g$10892$27194$1VmeqK
     g$10892$27305$1VmeqK
     (make-record-constructor-descriptor
       g$10891$27192$1VmeqK
       '#f
       g$10893$27193$1VmeqK))
   (g$enum-universe?$27197$1VmeqK
     g$enum-universe?$27306$1VmeqK
     (record-predicate g$10891$27192$1VmeqK))
   (g$make-enum-universe$27198$1VmeqK
     g$make-enum-universe$27307$1VmeqK
     (record-constructor g$10892$27194$1VmeqK))
   (g$enum-universe-id$27199$1VmeqK
     g$enum-universe-id$27308$1VmeqK
     (record-accessor g$10891$27192$1VmeqK '0))
   (g$enum-universe-symbols$27200$1VmeqK
     g$enum-universe-symbols$27309$1VmeqK
     (record-accessor g$10891$27192$1VmeqK '1))
   (g$enum-universe-mapping$27201$1VmeqK
     g$enum-universe-mapping$27310$1VmeqK
     (record-accessor g$10891$27192$1VmeqK '2))
   (g$enum-universe-value$27202$1VmeqK
     g$enum-universe-value$27311$1VmeqK
     (record-accessor g$10891$27192$1VmeqK '3))
   (g$enum-type=?$27203$1VmeqK
     g$enum-type=?$27312$1VmeqK
     (case-lambda
       ((g$enumset1$27225$1VmeqK g$enumset2$27226$1VmeqK)
        (eq? (g$enum-universe-id$27199$1VmeqK
               (g$enum-info$27191$1VmeqK g$enumset1$27225$1VmeqK))
             (g$enum-universe-id$27199$1VmeqK
               (g$enum-info$27191$1VmeqK g$enumset2$27226$1VmeqK))))))
   (g$get-symbols$27204$1VmeqK
     g$get-symbols$27313$1VmeqK
     (case-lambda
       ((g$enumset$27227$1VmeqK)
        (g$enum-universe-symbols$27200$1VmeqK
          (g$enum-info$27191$1VmeqK g$enumset$27227$1VmeqK)))))
   (g$get-value$27205$1VmeqK
     g$get-value$27314$1VmeqK
     (case-lambda
       ((g$enumset$27228$1VmeqK g$s$27229$1VmeqK)
        (g$hashtable-ref$21300$1VmeqK
          (g$enum-universe-mapping$27201$1VmeqK
            (g$enum-info$27191$1VmeqK g$enumset$27228$1VmeqK))
          g$s$27229$1VmeqK
          '#f))))
   (g$assert-enum$27206$1VmeqK
     g$assert-enum$27315$1VmeqK
     (case-lambda
       ((g$who$27230$1VmeqK g$enumset$27231$1VmeqK)
        (if (not (g$enum?$27188$1VmeqK g$enumset$27231$1VmeqK))
          (assertion-violation
            g$who$27230$1VmeqK
            '"not an enumeration"
            g$enumset$27231$1VmeqK)
          (void)))))
   (g$make-info$27207$1VmeqK
     g$make-info$27316$1VmeqK
     (case-lambda
       ((g$symbols$27232$1VmeqK)
        ((case-lambda
           ((g$ht$27233$1VmeqK)
            ((letrec ((g$f$27234$1VmeqK
                        (case-lambda
                          ((g$s$27235$1VmeqK
                             g$a$27236$1VmeqK
                             g$mask$27237$1VmeqK)
                           (if (null? g$s$27235$1VmeqK)
                             (values
                               (reverse! g$a$27236$1VmeqK)
                               g$ht$27233$1VmeqK
                               (- g$mask$27237$1VmeqK '1))
                             ((case-lambda
                                ((g$n$27238$1VmeqK)
                                 (if (g$symbol?$21181$1VmeqK
                                       g$n$27238$1VmeqK)
                                   (if (g$hashtable-contains?$21303$1VmeqK
                                         g$ht$27233$1VmeqK
                                         g$n$27238$1VmeqK)
                                     (g$f$27234$1VmeqK
                                       (cdr g$s$27235$1VmeqK)
                                       g$a$27236$1VmeqK
                                       g$mask$27237$1VmeqK)
                                     (begin
                                       (g$hashtable-set!$21301$1VmeqK
                                         g$ht$27233$1VmeqK
                                         g$n$27238$1VmeqK
                                         g$mask$27237$1VmeqK)
                                       (g$f$27234$1VmeqK
                                         (cdr g$s$27235$1VmeqK)
                                         (cons
                                           g$n$27238$1VmeqK
                                           g$a$27236$1VmeqK)
                                         (g$bitwise-arithmetic-shift-left$23246$1VmeqK
                                           g$mask$27237$1VmeqK
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$27238$1VmeqK))))
                              (car g$s$27235$1VmeqK)))))))
               g$f$27234$1VmeqK)
             g$symbols$27232$1VmeqK
             '()
             '1)))
         (g$make-eq-hashtable$21297$1VmeqK)))))
   (g$make-name$27208$1VmeqK
     g$make-name$27317$1VmeqK
     (case-lambda
       ((g$symbols$27239$1VmeqK)
        (string->symbol
          (g$format$27356$1VmeqK '"~a" g$symbols$27239$1VmeqK)))))
   (g$make-enumeration$27209$1VmeqK
     g$make-enumeration$27318$1VmeqK
     (case-lambda
       ((g$symbols$27240$1VmeqK)
        (call-with-values
          (case-lambda
            (() (g$make-info$27207$1VmeqK g$symbols$27240$1VmeqK)))
          (case-lambda
            ((g$s$27244$1VmeqK
               g$mapping$27245$1VmeqK
               g$mask$27246$1VmeqK)
             ((case-lambda
                ((g$mask$27247$1VmeqK
                   g$mapping$27248$1VmeqK
                   g$s$27249$1VmeqK)
                 (g$make-enum$27189$1VmeqK
                   g$mask$27247$1VmeqK
                   (g$make-enum-universe$27198$1VmeqK
                     (g$make-name$27208$1VmeqK g$s$27249$1VmeqK)
                     g$s$27249$1VmeqK
                     g$mapping$27248$1VmeqK
                     g$mask$27247$1VmeqK))))
              g$mask$27246$1VmeqK
              g$mapping$27245$1VmeqK
              g$s$27244$1VmeqK)))))))
   (g$enum-set-universe$27210$1VmeqK
     g$enum-set-universe$27319$1VmeqK
     (case-lambda
       ((g$enumset$27250$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-universe
            g$enumset$27250$1VmeqK)
          ((case-lambda
             ((g$ei$27251$1VmeqK)
              (g$make-enum$27189$1VmeqK
                (g$enum-universe-value$27202$1VmeqK g$ei$27251$1VmeqK)
                g$ei$27251$1VmeqK)))
           (g$enum-info$27191$1VmeqK g$enumset$27250$1VmeqK))))))
   (g$enum-set-indexer$27211$1VmeqK
     g$enum-set-indexer$27320$1VmeqK
     (case-lambda
       ((g$enumset$27252$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-indexer
            g$enumset$27252$1VmeqK)
          (case-lambda
            ((g$symbol$27253$1VmeqK)
             (begin
               (if (not (g$symbol?$21181$1VmeqK g$symbol$27253$1VmeqK))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$27253$1VmeqK)
                 (void))
               ((case-lambda
                  ((g$v$27254$1VmeqK)
                   (if g$v$27254$1VmeqK
                     (- (g$bitwise-length$23239$1VmeqK g$v$27254$1VmeqK)
                        '1)
                     '#f)))
                (g$get-value$27205$1VmeqK
                  g$enumset$27252$1VmeqK
                  g$symbol$27253$1VmeqK)))))))))
   (g$enum-set-constructor$27212$1VmeqK
     g$enum-set-constructor$27321$1VmeqK
     (case-lambda
       ((g$enumset$27255$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-constructor
            g$enumset$27255$1VmeqK)
          (case-lambda
            ((g$symbols$27256$1VmeqK)
             ((letrec ((g$f$27257$1VmeqK
                         (case-lambda
                           ((g$v$27258$1VmeqK g$s$27259$1VmeqK)
                            (if (null? g$s$27259$1VmeqK)
                              (g$make-enum$27189$1VmeqK
                                g$v$27258$1VmeqK
                                (g$enum-info$27191$1VmeqK
                                  g$enumset$27255$1VmeqK))
                              ((case-lambda
                                 ((g$n$27260$1VmeqK)
                                  (if (g$symbol?$21181$1VmeqK
                                        g$n$27260$1VmeqK)
                                    ((case-lambda
                                       ((g$v*$27261$1VmeqK)
                                        (if g$v*$27261$1VmeqK
                                          (g$f$27257$1VmeqK
                                            (g$bitwise-ior$23236$1VmeqK
                                              g$v$27258$1VmeqK
                                              g$v*$27261$1VmeqK)
                                            (cdr g$s$27259$1VmeqK))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$27260$1VmeqK))))
                                     (g$get-value$27205$1VmeqK
                                       g$enumset$27255$1VmeqK
                                       g$n$27260$1VmeqK))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$27260$1VmeqK))))
                               (car g$s$27259$1VmeqK)))))))
                g$f$27257$1VmeqK)
              '0
              g$symbols$27256$1VmeqK)))))))
   (g$enum-set->list$27213$1VmeqK
     g$enum-set->list$27322$1VmeqK
     (case-lambda
       ((g$enumset$27262$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set->list
            g$enumset$27262$1VmeqK)
          ((case-lambda
             ((g$value$27263$1VmeqK)
              ((letrec ((g$f$27264$1VmeqK
                          (case-lambda
                            ((g$s$27265$1VmeqK g$l$27266$1VmeqK)
                             (if (null? g$s$27265$1VmeqK)
                               (reverse! g$l$27266$1VmeqK)
                               (if (g$zero?$22201$1VmeqK
                                     (g$bitwise-and$23235$1VmeqK
                                       (g$get-value$27205$1VmeqK
                                         g$enumset$27262$1VmeqK
                                         (car g$s$27265$1VmeqK))
                                       g$value$27263$1VmeqK))
                                 (g$f$27264$1VmeqK
                                   (cdr g$s$27265$1VmeqK)
                                   g$l$27266$1VmeqK)
                                 (g$f$27264$1VmeqK
                                   (cdr g$s$27265$1VmeqK)
                                   (cons
                                     (car g$s$27265$1VmeqK)
                                     g$l$27266$1VmeqK))))))))
                 g$f$27264$1VmeqK)
               (g$get-symbols$27204$1VmeqK g$enumset$27262$1VmeqK)
               '())))
           (g$enum-value$27190$1VmeqK g$enumset$27262$1VmeqK))))))
   (g$enum-set-member?$27214$1VmeqK
     g$enum-set-member?$27323$1VmeqK
     (case-lambda
       ((g$symbol$27267$1VmeqK g$enumset$27268$1VmeqK)
        (begin
          (if (not (g$symbol?$21181$1VmeqK g$symbol$27267$1VmeqK))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$27267$1VmeqK)
            (void))
          (g$assert-enum$27206$1VmeqK
            'enum-set-member?
            g$enumset$27268$1VmeqK)
          ((case-lambda
             ((g$v$27269$1VmeqK)
              (if g$v$27269$1VmeqK
                (not (g$zero?$22201$1VmeqK
                       (g$bitwise-and$23235$1VmeqK
                         g$v$27269$1VmeqK
                         (g$enum-value$27190$1VmeqK
                           g$enumset$27268$1VmeqK))))
                '#f)))
           (g$get-value$27205$1VmeqK
             g$enumset$27268$1VmeqK
             g$symbol$27267$1VmeqK))))))
   (g$enum-set-subset?$27215$1VmeqK
     g$enum-set-subset?$27324$1VmeqK
     (case-lambda
       ((g$enumset1$27270$1VmeqK g$enumset2$27271$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-subset?
            g$enumset1$27270$1VmeqK)
          (g$assert-enum$27206$1VmeqK
            'enum-set-subset?
            g$enumset2$27271$1VmeqK)
          ((case-lambda
             ((g$v1$27272$1VmeqK g$v2$27273$1VmeqK)
              (if (g$enum-type=?$27203$1VmeqK
                    g$enumset1$27270$1VmeqK
                    g$enumset2$27271$1VmeqK)
                (g$=$22210$1VmeqK
                  (g$bitwise-and$23235$1VmeqK
                    g$v1$27272$1VmeqK
                    g$v2$27273$1VmeqK)
                  g$v1$27272$1VmeqK)
                ((letrec ((g$f$27274$1VmeqK
                            (case-lambda
                              ((g$s$27275$1VmeqK)
                               (if (null? g$s$27275$1VmeqK)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$27276$1VmeqK
                                       g$v2*$27277$1VmeqK)
                                     (if g$v2*$27277$1VmeqK
                                       ((case-lambda
                                          ((g$has1$27278$1VmeqK
                                             g$has2$27279$1VmeqK)
                                           (if (if g$has1$27278$1VmeqK
                                                 (begin
                                                   '#f
                                                   (not g$has2$27279$1VmeqK))
                                                 '#f)
                                             '#f
                                             (g$f$27274$1VmeqK
                                               (cdr g$s$27275$1VmeqK)))))
                                        (not (g$zero?$22201$1VmeqK
                                               (g$bitwise-and$23235$1VmeqK
                                                 g$v1$27272$1VmeqK
                                                 g$v1*$27276$1VmeqK)))
                                        (not (g$zero?$22201$1VmeqK
                                               (g$bitwise-and$23235$1VmeqK
                                                 g$v2$27273$1VmeqK
                                                 g$v2*$27277$1VmeqK))))
                                       '#f)))
                                  (g$get-value$27205$1VmeqK
                                    g$enumset1$27270$1VmeqK
                                    (car g$s$27275$1VmeqK))
                                  (g$get-value$27205$1VmeqK
                                    g$enumset2$27271$1VmeqK
                                    (car g$s$27275$1VmeqK))))))))
                   g$f$27274$1VmeqK)
                 (g$get-symbols$27204$1VmeqK
                   g$enumset1$27270$1VmeqK)))))
           (g$enum-value$27190$1VmeqK g$enumset1$27270$1VmeqK)
           (g$enum-value$27190$1VmeqK g$enumset2$27271$1VmeqK))))))
   (g$enum-set=?$27216$1VmeqK
     g$enum-set=?$27325$1VmeqK
     (case-lambda
       ((g$enumset1$27280$1VmeqK g$enumset2$27281$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set=?
            g$enumset1$27280$1VmeqK)
          (g$assert-enum$27206$1VmeqK
            'enum-set=?
            g$enumset2$27281$1VmeqK)
          (if (g$enum-set-subset?$27215$1VmeqK
                g$enumset1$27280$1VmeqK
                g$enumset2$27281$1VmeqK)
            (begin
              '#f
              (g$enum-set-subset?$27215$1VmeqK
                g$enumset2$27281$1VmeqK
                g$enumset1$27280$1VmeqK))
            '#f)))))
   (g$enum-set-union$27217$1VmeqK
     g$enum-set-union$27326$1VmeqK
     (case-lambda
       ((g$enumset1$27282$1VmeqK g$enumset2$27283$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-union
            g$enumset1$27282$1VmeqK)
          (g$assert-enum$27206$1VmeqK
            'enum-set-union
            g$enumset2$27283$1VmeqK)
          (if (g$enum-type=?$27203$1VmeqK
                g$enumset1$27282$1VmeqK
                g$enumset2$27283$1VmeqK)
            (g$make-enum$27189$1VmeqK
              (g$bitwise-ior$23236$1VmeqK
                (g$enum-value$27190$1VmeqK g$enumset1$27282$1VmeqK)
                (g$enum-value$27190$1VmeqK g$enumset2$27283$1VmeqK))
              (g$enum-info$27191$1VmeqK g$enumset1$27282$1VmeqK))
            '#f)))))
   (g$enum-set-intersection$27218$1VmeqK
     g$enum-set-intersection$27327$1VmeqK
     (case-lambda
       ((g$enumset1$27284$1VmeqK g$enumset2$27285$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-intersection
            g$enumset1$27284$1VmeqK)
          (g$assert-enum$27206$1VmeqK
            'enum-set-intersection
            g$enumset2$27285$1VmeqK)
          (if (g$enum-type=?$27203$1VmeqK
                g$enumset1$27284$1VmeqK
                g$enumset2$27285$1VmeqK)
            (g$make-enum$27189$1VmeqK
              (g$bitwise-and$23235$1VmeqK
                (g$enum-value$27190$1VmeqK g$enumset1$27284$1VmeqK)
                (g$enum-value$27190$1VmeqK g$enumset2$27285$1VmeqK))
              (g$enum-info$27191$1VmeqK g$enumset1$27284$1VmeqK))
            '#f)))))
   (g$enum-set-difference$27219$1VmeqK
     g$enum-set-difference$27328$1VmeqK
     (case-lambda
       ((g$enumset1$27286$1VmeqK g$enumset2$27287$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-difference
            g$enumset1$27286$1VmeqK)
          (g$assert-enum$27206$1VmeqK
            'enum-set-difference
            g$enumset2$27287$1VmeqK)
          (if (g$enum-type=?$27203$1VmeqK
                g$enumset1$27286$1VmeqK
                g$enumset2$27287$1VmeqK)
            (g$make-enum$27189$1VmeqK
              (g$bitwise-and$23235$1VmeqK
                (g$enum-value$27190$1VmeqK g$enumset1$27286$1VmeqK)
                (g$bitwise-not$23234$1VmeqK
                  (g$enum-value$27190$1VmeqK g$enumset2$27287$1VmeqK)))
              (g$enum-info$27191$1VmeqK g$enumset1$27286$1VmeqK))
            '#f)))))
   (g$enum-set-complement$27220$1VmeqK
     g$enum-set-complement$27329$1VmeqK
     (case-lambda
       ((g$enumset$27288$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-complement
            g$enumset$27288$1VmeqK)
          (g$make-enum$27189$1VmeqK
            (g$bitwise-not$23234$1VmeqK
              (g$enum-value$27190$1VmeqK g$enumset$27288$1VmeqK))
            (g$enum-info$27191$1VmeqK g$enumset$27288$1VmeqK))))))
   (g$enum-set-projection$27221$1VmeqK
     g$enum-set-projection$27330$1VmeqK
     (case-lambda
       ((g$enumset1$27289$1VmeqK g$enumset2$27290$1VmeqK)
        (begin
          (g$assert-enum$27206$1VmeqK
            'enum-set-projection
            g$enumset1$27289$1VmeqK)
          (g$assert-enum$27206$1VmeqK
            'enum-set-projection
            g$enumset2$27290$1VmeqK)
          ((case-lambda
             ((g$v1$27291$1VmeqK)
              ((letrec ((g$f$27292$1VmeqK
                          (case-lambda
                            ((g$s$27293$1VmeqK g$v$27294$1VmeqK)
                             (if (null? g$s$27293$1VmeqK)
                               (g$make-enum$27189$1VmeqK
                                 g$v$27294$1VmeqK
                                 (g$enum-info$27191$1VmeqK
                                   g$enumset2$27290$1VmeqK))
                               (if (g$zero?$22201$1VmeqK
                                     (g$bitwise-and$23235$1VmeqK
                                       g$v1$27291$1VmeqK
                                       (g$get-value$27205$1VmeqK
                                         g$enumset1$27289$1VmeqK
                                         (car g$s$27293$1VmeqK))))
                                 (g$f$27292$1VmeqK
                                   (cdr g$s$27293$1VmeqK)
                                   g$v$27294$1VmeqK)
                                 ((case-lambda
                                    ((g$v2$27295$1VmeqK)
                                     (if g$v2$27295$1VmeqK
                                       (g$f$27292$1VmeqK
                                         (cdr g$s$27293$1VmeqK)
                                         (g$bitwise-ior$23236$1VmeqK
                                           g$v$27294$1VmeqK
                                           g$v2$27295$1VmeqK))
                                       (g$f$27292$1VmeqK
                                         (cdr g$s$27293$1VmeqK)
                                         g$v$27294$1VmeqK))))
                                  (g$get-value$27205$1VmeqK
                                    g$enumset2$27290$1VmeqK
                                    (car g$s$27293$1VmeqK)))))))))
                 g$f$27292$1VmeqK)
               (g$get-symbols$27204$1VmeqK g$enumset1$27289$1VmeqK)
               '0)))
           (g$enum-value$27190$1VmeqK g$enumset1$27289$1VmeqK)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$27222$1VmeqK g$p$27223$1VmeqK g$wr$27224$1VmeqK)
       (g$fprintf$27355$1VmeqK
         g$p$27223$1VmeqK
         '"#[enum-set ~a]"
         (g$enum-set->list$27213$1VmeqK g$x$27222$1VmeqK))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$27331$1VmeqK
     g$dofmt$27353$1VmeqK
     (case-lambda
       ((g$p$27335$1VmeqK g$cntl$27336$1VmeqK g$args$27337$1VmeqK)
        ((case-lambda
           ((g$nmax$27338$1VmeqK)
            ((letrec ((g$loop$27339$1VmeqK
                        (case-lambda
                          ((g$n$27340$1VmeqK g$a$27341$1VmeqK)
                           (if (g$fx<=?$25495$1VmeqK
                                 g$n$27340$1VmeqK
                                 g$nmax$27338$1VmeqK)
                             ((case-lambda
                                ((g$c$27342$1VmeqK)
                                 (if (if (g$char=?$21240$1VmeqK
                                           g$c$27342$1VmeqK
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$25494$1VmeqK
                                           g$n$27340$1VmeqK
                                           g$nmax$27338$1VmeqK))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$27343$1VmeqK)
                                       (if (eqv? g$t$27343$1VmeqK '#\a)
                                         (begin
                                           (display
                                             (car g$a$27341$1VmeqK)
                                             g$p$27335$1VmeqK)
                                           (g$loop$27339$1VmeqK
                                             (g$fx+$25480$1VmeqK
                                               g$n$27340$1VmeqK
                                               '2)
                                             (cdr g$a$27341$1VmeqK)))
                                         (if (eqv?
                                               g$t$27343$1VmeqK
                                               '#\s)
                                           (begin
                                             (write
                                               (car g$a$27341$1VmeqK)
                                               g$p$27335$1VmeqK)
                                             (g$loop$27339$1VmeqK
                                               (g$fx+$25480$1VmeqK
                                                 g$n$27340$1VmeqK
                                                 '2)
                                               (cdr g$a$27341$1VmeqK)))
                                           (if (eqv?
                                                 g$t$27343$1VmeqK
                                                 '#\b)
                                             (begin
                                               (write
                                                 (g$number->string$22209$1VmeqK
                                                   (car g$a$27341$1VmeqK)
                                                   '2)
                                                 g$p$27335$1VmeqK)
                                               (g$loop$27339$1VmeqK
                                                 (g$fx+$25480$1VmeqK
                                                   g$n$27340$1VmeqK
                                                   '2)
                                                 (cdr g$a$27341$1VmeqK)))
                                             (if (eqv?
                                                   g$t$27343$1VmeqK
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (g$number->string$22209$1VmeqK
                                                     (car g$a$27341$1VmeqK)
                                                     '8)
                                                   g$p$27335$1VmeqK)
                                                 (g$loop$27339$1VmeqK
                                                   (g$fx+$25480$1VmeqK
                                                     g$n$27340$1VmeqK
                                                     '2)
                                                   (cdr g$a$27341$1VmeqK)))
                                               (if (eqv?
                                                     g$t$27343$1VmeqK
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (g$number->string$22209$1VmeqK
                                                       (car g$a$27341$1VmeqK)
                                                       '16)
                                                     g$p$27335$1VmeqK)
                                                   (g$loop$27339$1VmeqK
                                                     (g$fx+$25480$1VmeqK
                                                       g$n$27340$1VmeqK
                                                       '2)
                                                     (cdr g$a$27341$1VmeqK)))
                                                 (if (eqv?
                                                       g$t$27343$1VmeqK
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (g$number->string$22209$1VmeqK
                                                         (car g$a$27341$1VmeqK)
                                                         '10)
                                                       g$p$27335$1VmeqK)
                                                     (g$loop$27339$1VmeqK
                                                       (g$fx+$25480$1VmeqK
                                                         g$n$27340$1VmeqK
                                                         '2)
                                                       (cdr g$a$27341$1VmeqK)))
                                                   (if (eqv?
                                                         g$t$27343$1VmeqK
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$27177$1VmeqK
                                                         '#\~
                                                         g$p$27335$1VmeqK)
                                                       (g$loop$27339$1VmeqK
                                                         (g$fx+$25480$1VmeqK
                                                           g$n$27340$1VmeqK
                                                           '2)
                                                         g$a$27341$1VmeqK))
                                                     (begin
                                                       '#f
                                                       (g$write-char$27177$1VmeqK
                                                         g$c$27342$1VmeqK
                                                         g$p$27335$1VmeqK)
                                                       (g$loop$27339$1VmeqK
                                                         (g$fx+$25480$1VmeqK
                                                           g$n$27340$1VmeqK
                                                           '1)
                                                         g$a$27341$1VmeqK)))))))))))
                                    (string-ref
                                      g$cntl$27336$1VmeqK
                                      (g$fx+$25480$1VmeqK
                                        g$n$27340$1VmeqK
                                        '1)))
                                   (begin
                                     (g$write-char$27177$1VmeqK
                                       g$c$27342$1VmeqK
                                       g$p$27335$1VmeqK)
                                     (g$loop$27339$1VmeqK
                                       (g$fx+$25480$1VmeqK
                                         g$n$27340$1VmeqK
                                         '1)
                                       g$a$27341$1VmeqK)))))
                              (string-ref
                                g$cntl$27336$1VmeqK
                                g$n$27340$1VmeqK))
                             (void))))))
               g$loop$27339$1VmeqK)
             '0
             g$args$27337$1VmeqK)))
         (g$fx-$25482$1VmeqK (string-length g$cntl$27336$1VmeqK) '1)))))
   (g$printf$27332$1VmeqK
     g$printf$27354$1VmeqK
     (case-lambda
       ((g$control$27344$1VmeqK . g$args$27345$1VmeqK)
        (g$dofmt$27331$1VmeqK
          (current-output-port)
          g$control$27344$1VmeqK
          g$args$27345$1VmeqK))))
   (g$fprintf$27333$1VmeqK
     g$fprintf$27355$1VmeqK
     (case-lambda
       ((g$p$27346$1VmeqK g$control$27347$1VmeqK . g$args$27348$1VmeqK)
        (g$dofmt$27331$1VmeqK
          g$p$27346$1VmeqK
          g$control$27347$1VmeqK
          g$args$27348$1VmeqK))))
   (g$format$27334$1VmeqK
     g$format$27356$1VmeqK
     (case-lambda
       ((g$control$27349$1VmeqK . g$args$27350$1VmeqK)
        (call-with-values
          g$open-string-output-port$27116$1VmeqK
          (case-lambda
            ((g$p$27351$1VmeqK g$c$27352$1VmeqK)
             (begin
               (g$dofmt$27331$1VmeqK
                 g$p$27351$1VmeqK
                 g$control$27349$1VmeqK
                 g$args$27350$1VmeqK)
               (g$c$27352$1VmeqK)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$27357$1VmeqK
     g$make-traced-macro$27360$1VmeqK
     (case-lambda
       ((g$name$27358$1VmeqK g$x$27359$1VmeqK)
        (if (g$procedure?$21183$1VmeqK g$x$27359$1VmeqK)
          (make-traced-procedure
            g$name$27358$1VmeqK
            g$x$27359$1VmeqK
            g$syntax->datum$32933$1VmeqK)
          (if (g$variable-transformer?$32754$1VmeqK g$x$27359$1VmeqK)
            (g$make-variable-transformer$32752$1VmeqK
              (make-traced-procedure
                g$name$27358$1VmeqK
                (g$variable-transformer-procedure$32755$1VmeqK
                  g$x$27359$1VmeqK)
                g$syntax->datum$32933$1VmeqK))
            (begin '#f g$x$27359$1VmeqK)))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$27361$1VmeqK
     g$library-version-mismatch-warning$27562$1VmeqK
     (case-lambda
       ((g$name$27534$1VmeqK
          g$depname$27535$1VmeqK
          g$filename$27536$1VmeqK)
        (g$fprintf$27355$1VmeqK
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$27534$1VmeqK
          g$depname$27535$1VmeqK
          g$filename$27536$1VmeqK))))
   (g$file-locator-resolution-error$27362$1VmeqK
     g$file-locator-resolution-error$27563$1VmeqK
     (case-lambda
       ((g$libname$27537$1VmeqK g$failed-list$27538$1VmeqK)
        (letrec* ((g$11069$27539$1VmeqK
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$22677$1VmeqK
                      'g$11072$1VmeqK
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$11071$27540$1VmeqK '#f)
                  (g$11070$27541$1VmeqK
                    (make-record-constructor-descriptor
                      g$11069$27539$1VmeqK
                      g$&condition-rcd$22678$1VmeqK
                      g$11071$27540$1VmeqK))
                  (g$11068$27544$1VmeqK
                    (record-predicate g$11069$27539$1VmeqK))
                  (g$make-library-resolution-condition$27545$1VmeqK
                    (record-constructor g$11070$27541$1VmeqK))
                  (g$11066$27546$1VmeqK
                    (record-accessor g$11069$27539$1VmeqK '0))
                  (g$11067$27547$1VmeqK
                    (record-accessor g$11069$27539$1VmeqK '1))
                  (g$library-resolution-condition?$27548$1VmeqK
                    (condition-predicate g$11069$27539$1VmeqK))
                  (g$condition-library$27549$1VmeqK
                    (condition-accessor
                      g$11069$27539$1VmeqK
                      g$11066$27546$1VmeqK))
                  (g$condition-files$27550$1VmeqK
                    (condition-accessor
                      g$11069$27539$1VmeqK
                      g$11067$27547$1VmeqK)))
          (raise
            (condition
              (g$make-error$22709$1VmeqK)
              (g$make-who-condition$22743$1VmeqK 'expander)
              (g$make-message-condition$22683$1VmeqK
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$27545$1VmeqK
                g$libname$27537$1VmeqK
                g$failed-list$27538$1VmeqK)))))))
   (g$read-library-source-file$27363$1VmeqK
     g$read-library-source-file$27564$1VmeqK
     (case-lambda
       ((g$file-name$27551$1VmeqK)
        (g$with-input-from-file$27178$1VmeqK
          g$file-name$27551$1VmeqK
          read-annotated))))
   (g$make-parameter$27364$1VmeqK
     g$make-parameter$27565$1VmeqK
     (case-lambda
       ((g$x$27552$1VmeqK)
        (g$make-parameter$27364$1VmeqK
          g$x$27552$1VmeqK
          (case-lambda ((g$x$27553$1VmeqK) g$x$27553$1VmeqK))))
       ((g$x$27554$1VmeqK g$fender$27555$1VmeqK)
        (begin
          (if (not (g$procedure?$21183$1VmeqK g$fender$27555$1VmeqK))
            (g$assertion-error$32926$1VmeqK
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$27556$1VmeqK)
              (case-lambda
                (() g$x$27556$1VmeqK)
                ((g$v$27557$1VmeqK)
                 (set! g$x$27556$1VmeqK
                   (g$fender$27555$1VmeqK g$v$27557$1VmeqK))))))
           (g$fender$27555$1VmeqK g$x$27554$1VmeqK))))))
   (g$file-options-constructor$27530$1VmeqK
     g$file-options-constructor$27566$1VmeqK
     (g$make-parameter$27364$1VmeqK '#f))
   (g$file-options-spec$27531$1VmeqK
     g$file-options-spec$27567$1VmeqK
     (case-lambda
       ((g$x$27558$1VmeqK)
        ((g$file-options-constructor$27530$1VmeqK) g$x$27558$1VmeqK))))
   (g$set-label-binding!$27532$1VmeqK
     g$set-label-binding!$27568$1VmeqK
     (case-lambda
       ((g$label$27559$1VmeqK g$binding$27560$1VmeqK)
        (set-symbol-value!
          g$label$27559$1VmeqK
          g$binding$27560$1VmeqK))))
   (g$label-binding$27533$1VmeqK
     g$label-binding$27569$1VmeqK
     (case-lambda
       ((g$label$27561$1VmeqK)
        (if (symbol-bound? g$label$27561$1VmeqK)
          (begin '#f (symbol-value g$label$27561$1VmeqK))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$27570$1VmeqK
     g$genwrite:newline-str$27763$1VmeqK
     (make-string '1 '#\newline))
   (g$symbol->string$27571$1VmeqK
     g$symbol->string$27764$1VmeqK
     (case-lambda
       ((g$s$27583$1VmeqK)
        (symbol->string
          (if (g$pretty-gensyms$27580$1VmeqK)
            (ungensym g$s$27583$1VmeqK)
            g$s$27583$1VmeqK)))))
   (g$read-macro-body$27572$1VmeqK
     g$read-macro-body$27765$1VmeqK
     (case-lambda
       ((g$l$27584$1VmeqK) (g$cadr$21200$1VmeqK g$l$27584$1VmeqK))))
   (g$read-macro-prefix$27573$1VmeqK
     g$read-macro-prefix$27766$1VmeqK
     (case-lambda
       ((g$l$27585$1VmeqK)
        ((case-lambda
           ((g$head$27586$1VmeqK g$tail$27587$1VmeqK)
            ((case-lambda
               ((g$t$27588$1VmeqK)
                (if (eqv? g$t$27588$1VmeqK 'syntax)
                  '"#'"
                  (if (eqv? g$t$27588$1VmeqK 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$27588$1VmeqK 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$27588$1VmeqK 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$27588$1VmeqK 'quote)
                          '"'"
                          (if (eqv? g$t$27588$1VmeqK 'quasiquote)
                            '"`"
                            (if (eqv? g$t$27588$1VmeqK 'unquote)
                              '","
                              (if (eqv?
                                    g$t$27588$1VmeqK
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$27586$1VmeqK)))
         (car g$l$27585$1VmeqK)
         (cdr g$l$27585$1VmeqK)))))
   (g$length1?$27574$1VmeqK
     g$length1?$27767$1VmeqK
     (case-lambda
       ((g$l$27589$1VmeqK)
        (if (pair? g$l$27589$1VmeqK)
          (begin '#f (null? (cdr g$l$27589$1VmeqK)))
          '#f))))
   (g$read-macro?$27575$1VmeqK
     g$read-macro?$27768$1VmeqK
     (case-lambda
       ((g$l$27590$1VmeqK)
        ((case-lambda
           ((g$head$27591$1VmeqK g$tail$27592$1VmeqK)
            ((case-lambda
               ((g$t$27593$1VmeqK)
                (if (g$memv$20342$1VmeqK
                      g$t$27593$1VmeqK
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$27574$1VmeqK g$tail$27592$1VmeqK)
                  (begin '#f '#f))))
             g$head$27591$1VmeqK)))
         (car g$l$27590$1VmeqK)
         (cdr g$l$27590$1VmeqK)))))
   (g$generic-write$27576$1VmeqK
     g$generic-write$27769$1VmeqK
     (case-lambda
       ((g$obj$27594$1VmeqK
          g$display?$27595$1VmeqK
          g$width$27596$1VmeqK
          g$output$27597$1VmeqK)
        (letrec* ((g$out$27598$1VmeqK
                    (case-lambda
                      ((g$str$27747$1VmeqK g$col$27748$1VmeqK)
                       (if g$col$27748$1VmeqK
                         (if (g$output$27597$1VmeqK g$str$27747$1VmeqK)
                           (begin
                             '#f
                             (g$fx+$25480$1VmeqK
                               g$col$27748$1VmeqK
                               (string-length g$str$27747$1VmeqK)))
                           '#f)
                         '#f))))
                  (g$wr$27599$1VmeqK
                    (case-lambda
                      ((g$obj$27730$1VmeqK g$col$27731$1VmeqK)
                       (letrec* ((g$wr-expr$27732$1VmeqK
                                   (case-lambda
                                     ((g$expr$27745$1VmeqK
                                        g$col$27746$1VmeqK)
                                      (if (g$read-macro?$27575$1VmeqK
                                            g$expr$27745$1VmeqK)
                                        (g$wr$27599$1VmeqK
                                          (g$read-macro-body$27572$1VmeqK
                                            g$expr$27745$1VmeqK)
                                          (g$out$27598$1VmeqK
                                            (g$read-macro-prefix$27573$1VmeqK
                                              g$expr$27745$1VmeqK)
                                            g$col$27746$1VmeqK))
                                        (g$wr-lst$27733$1VmeqK
                                          g$expr$27745$1VmeqK
                                          g$col$27746$1VmeqK)))))
                                 (g$wr-lst$27733$1VmeqK
                                   (case-lambda
                                     ((g$l$27740$1VmeqK
                                        g$col$27741$1VmeqK)
                                      (if (pair? g$l$27740$1VmeqK)
                                        ((letrec ((g$loop$27742$1VmeqK
                                                    (case-lambda
                                                      ((g$l$27743$1VmeqK
                                                         g$col$27744$1VmeqK)
                                                       (if (not g$col$27744$1VmeqK)
                                                         g$col$27744$1VmeqK
                                                         (if (pair?
                                                               g$l$27743$1VmeqK)
                                                           (g$loop$27742$1VmeqK
                                                             (cdr g$l$27743$1VmeqK)
                                                             (g$wr$27599$1VmeqK
                                                               (car g$l$27743$1VmeqK)
                                                               (g$out$27598$1VmeqK
                                                                 '" "
                                                                 g$col$27744$1VmeqK)))
                                                           (if (null?
                                                                 g$l$27743$1VmeqK)
                                                             (g$out$27598$1VmeqK
                                                               '")"
                                                               g$col$27744$1VmeqK)
                                                             (begin
                                                               '#f
                                                               (g$out$27598$1VmeqK
                                                                 '")"
                                                                 (g$wr$27599$1VmeqK
                                                                   g$l$27743$1VmeqK
                                                                   (g$out$27598$1VmeqK
                                                                     '" . "
                                                                     g$col$27744$1VmeqK)))))))))))
                                           g$loop$27742$1VmeqK)
                                         (cdr g$l$27740$1VmeqK)
                                         (if g$col$27741$1VmeqK
                                           (begin
                                             '#f
                                             (g$wr$27599$1VmeqK
                                               (car g$l$27740$1VmeqK)
                                               (g$out$27598$1VmeqK
                                                 '"("
                                                 g$col$27741$1VmeqK)))
                                           '#f))
                                        (g$out$27598$1VmeqK
                                          '"()"
                                          g$col$27741$1VmeqK))))))
                         (if (pair? g$obj$27730$1VmeqK)
                           (g$wr-expr$27732$1VmeqK
                             g$obj$27730$1VmeqK
                             g$col$27731$1VmeqK)
                           (if (null? g$obj$27730$1VmeqK)
                             (g$wr-lst$27733$1VmeqK
                               g$obj$27730$1VmeqK
                               g$col$27731$1VmeqK)
                             (if (g$vector?$21179$1VmeqK
                                   g$obj$27730$1VmeqK)
                               (g$wr-lst$27733$1VmeqK
                                 (vector->list g$obj$27730$1VmeqK)
                                 (g$out$27598$1VmeqK
                                   '"#"
                                   g$col$27731$1VmeqK))
                               (if (g$boolean?$21182$1VmeqK
                                     g$obj$27730$1VmeqK)
                                 (g$out$27598$1VmeqK
                                   (if g$obj$27730$1VmeqK '"#t" '"#f")
                                   g$col$27731$1VmeqK)
                                 (if (g$number?$22188$1VmeqK
                                       g$obj$27730$1VmeqK)
                                   (g$out$27598$1VmeqK
                                     (g$number->string$22209$1VmeqK
                                       g$obj$27730$1VmeqK)
                                     g$col$27731$1VmeqK)
                                   (if (g$symbol?$21181$1VmeqK
                                         g$obj$27730$1VmeqK)
                                     (g$out$27598$1VmeqK
                                       (g$symbol->string$27571$1VmeqK
                                         g$obj$27730$1VmeqK)
                                       g$col$27731$1VmeqK)
                                     (if (string? g$obj$27730$1VmeqK)
                                       (if g$display?$27595$1VmeqK
                                         (g$out$27598$1VmeqK
                                           g$obj$27730$1VmeqK
                                           g$col$27731$1VmeqK)
                                         ((letrec ((g$loop$27734$1VmeqK
                                                     (case-lambda
                                                       ((g$i$27735$1VmeqK
                                                          g$j$27736$1VmeqK
                                                          g$col$27737$1VmeqK)
                                                        (if (if g$col$27737$1VmeqK
                                                              (begin
                                                                '#f
                                                                (g$fx<?$25494$1VmeqK
                                                                  g$j$27736$1VmeqK
                                                                  (string-length
                                                                    g$obj$27730$1VmeqK)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$27738$1VmeqK)
                                                              (if ((case-lambda
                                                                     ((g$t$27739$1VmeqK)
                                                                      (if g$t$27739$1VmeqK
                                                                        g$t$27739$1VmeqK
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$21240$1VmeqK
                                                                            g$c$27738$1VmeqK
                                                                            '#\")))))
                                                                   (g$char=?$21240$1VmeqK
                                                                     g$c$27738$1VmeqK
                                                                     '#\\))
                                                                (g$loop$27734$1VmeqK
                                                                  g$j$27736$1VmeqK
                                                                  (g$fx+$25480$1VmeqK
                                                                    g$j$27736$1VmeqK
                                                                    '1)
                                                                  (g$out$27598$1VmeqK
                                                                    '"\\"
                                                                    (g$out$27598$1VmeqK
                                                                      (substring
                                                                        g$obj$27730$1VmeqK
                                                                        g$i$27735$1VmeqK
                                                                        g$j$27736$1VmeqK)
                                                                      g$col$27737$1VmeqK)))
                                                                (g$loop$27734$1VmeqK
                                                                  g$i$27735$1VmeqK
                                                                  (g$fx+$25480$1VmeqK
                                                                    g$j$27736$1VmeqK
                                                                    '1)
                                                                  g$col$27737$1VmeqK))))
                                                           (string-ref
                                                             g$obj$27730$1VmeqK
                                                             g$j$27736$1VmeqK))
                                                          (g$out$27598$1VmeqK
                                                            '"\""
                                                            (g$out$27598$1VmeqK
                                                              (substring
                                                                g$obj$27730$1VmeqK
                                                                g$i$27735$1VmeqK
                                                                g$j$27736$1VmeqK)
                                                              g$col$27737$1VmeqK)))))))
                                            g$loop$27734$1VmeqK)
                                          '0
                                          '0
                                          (g$out$27598$1VmeqK
                                            '"\""
                                            g$col$27731$1VmeqK)))
                                       (begin
                                         '#f
                                         (g$out$27598$1VmeqK
                                           (g$format$27356$1VmeqK
                                             (if g$display?$27595$1VmeqK
                                               '"~a"
                                               '"~s")
                                             g$obj$27730$1VmeqK)
                                           g$col$27731$1VmeqK)))))))))))))
                  (g$pp$27600$1VmeqK
                    (case-lambda
                      ((g$obj$27601$1VmeqK g$col$27602$1VmeqK)
                       (letrec* ((g$spaces$27603$1VmeqK
                                   (case-lambda
                                     ((g$n$27728$1VmeqK
                                        g$col$27729$1VmeqK)
                                      (if (g$fx>?$25496$1VmeqK
                                            g$n$27728$1VmeqK
                                            '0)
                                        (if (g$fx>?$25496$1VmeqK
                                              g$n$27728$1VmeqK
                                              '7)
                                          (g$spaces$27603$1VmeqK
                                            (g$fx-$25482$1VmeqK
                                              g$n$27728$1VmeqK
                                              '8)
                                            (g$out$27598$1VmeqK
                                              '"        "
                                              g$col$27729$1VmeqK))
                                          (g$out$27598$1VmeqK
                                            (substring
                                              '"        "
                                              '0
                                              g$n$27728$1VmeqK)
                                            g$col$27729$1VmeqK))
                                        g$col$27729$1VmeqK))))
                                 (g$indent$27604$1VmeqK
                                   (case-lambda
                                     ((g$to$27726$1VmeqK
                                        g$col$27727$1VmeqK)
                                      (if g$col$27727$1VmeqK
                                        (begin
                                          '#f
                                          (if (g$fx<?$25494$1VmeqK
                                                g$to$27726$1VmeqK
                                                g$col$27727$1VmeqK)
                                            (if (g$out$27598$1VmeqK
                                                  g$genwrite:newline-str$27570$1VmeqK
                                                  g$col$27727$1VmeqK)
                                              (begin
                                                '#f
                                                (g$spaces$27603$1VmeqK
                                                  g$to$27726$1VmeqK
                                                  '0))
                                              '#f)
                                            (g$spaces$27603$1VmeqK
                                              (g$fx-$25482$1VmeqK
                                                g$to$27726$1VmeqK
                                                g$col$27727$1VmeqK)
                                              g$col$27727$1VmeqK)))
                                        '#f))))
                                 (g$pr$27605$1VmeqK
                                   (case-lambda
                                     ((g$obj$27718$1VmeqK
                                        g$col$27719$1VmeqK
                                        g$extra$27720$1VmeqK
                                        g$pp-pair$27721$1VmeqK)
                                      (if ((case-lambda
                                             ((g$t$27722$1VmeqK)
                                              (if g$t$27722$1VmeqK
                                                g$t$27722$1VmeqK
                                                (begin
                                                  '#f
                                                  (g$vector?$21179$1VmeqK
                                                    g$obj$27718$1VmeqK)))))
                                           (pair? g$obj$27718$1VmeqK))
                                        ((case-lambda
                                           ((g$result$27723$1VmeqK
                                              g$left$27724$1VmeqK)
                                            (begin
                                              (g$generic-write$27576$1VmeqK
                                                g$obj$27718$1VmeqK
                                                g$display?$27595$1VmeqK
                                                '#f
                                                (case-lambda
                                                  ((g$str$27725$1VmeqK)
                                                   (begin
                                                     (set! g$result$27723$1VmeqK
                                                       (cons
                                                         g$str$27725$1VmeqK
                                                         g$result$27723$1VmeqK))
                                                     (set! g$left$27724$1VmeqK
                                                       (g$fx-$25482$1VmeqK
                                                         g$left$27724$1VmeqK
                                                         (string-length
                                                           g$str$27725$1VmeqK)))
                                                     (g$fx>?$25496$1VmeqK
                                                       g$left$27724$1VmeqK
                                                       '0)))))
                                              (if (g$fx>?$25496$1VmeqK
                                                    g$left$27724$1VmeqK
                                                    '0)
                                                (g$out$27598$1VmeqK
                                                  (g$reverse-string-append$27581$1VmeqK
                                                    g$result$27723$1VmeqK)
                                                  g$col$27719$1VmeqK)
                                                (if (pair?
                                                      g$obj$27718$1VmeqK)
                                                  (g$pp-pair$27721$1VmeqK
                                                    g$obj$27718$1VmeqK
                                                    g$col$27719$1VmeqK
                                                    g$extra$27720$1VmeqK)
                                                  (g$pp-list$27608$1VmeqK
                                                    (vector->list
                                                      g$obj$27718$1VmeqK)
                                                    (g$out$27598$1VmeqK
                                                      '"#"
                                                      g$col$27719$1VmeqK)
                                                    g$extra$27720$1VmeqK
                                                    g$pp-expr$27606$1VmeqK))))))
                                         '()
                                         (g$min$21230$1VmeqK
                                           (g$fx+$25480$1VmeqK
                                             (g$fx-$25482$1VmeqK
                                               (g$fx-$25482$1VmeqK
                                                 g$width$27596$1VmeqK
                                                 g$col$27719$1VmeqK)
                                               g$extra$27720$1VmeqK)
                                             '1)
                                           (g$pretty-width$27577$1VmeqK)))
                                        (g$wr$27599$1VmeqK
                                          g$obj$27718$1VmeqK
                                          g$col$27719$1VmeqK)))))
                                 (g$pp-expr$27606$1VmeqK
                                   (case-lambda
                                     ((g$expr$27713$1VmeqK
                                        g$col$27714$1VmeqK
                                        g$extra$27715$1VmeqK)
                                      (if (g$read-macro?$27575$1VmeqK
                                            g$expr$27713$1VmeqK)
                                        (g$pr$27605$1VmeqK
                                          (g$read-macro-body$27572$1VmeqK
                                            g$expr$27713$1VmeqK)
                                          (g$out$27598$1VmeqK
                                            (g$read-macro-prefix$27573$1VmeqK
                                              g$expr$27713$1VmeqK)
                                            g$col$27714$1VmeqK)
                                          g$extra$27715$1VmeqK
                                          g$pp-expr$27606$1VmeqK)
                                        ((case-lambda
                                           ((g$head$27716$1VmeqK)
                                            (if (g$symbol?$21181$1VmeqK
                                                  g$head$27716$1VmeqK)
                                              ((case-lambda
                                                 ((g$proc$27717$1VmeqK)
                                                  (if g$proc$27717$1VmeqK
                                                    (g$proc$27717$1VmeqK
                                                      g$expr$27713$1VmeqK
                                                      g$col$27714$1VmeqK
                                                      g$extra$27715$1VmeqK)
                                                    (if (g$fx>?$25496$1VmeqK
                                                          (string-length
                                                            (g$symbol->string$27571$1VmeqK
                                                              g$head$27716$1VmeqK))
                                                          (g$max-call-head-width$27579$1VmeqK))
                                                      (g$pp-general$27610$1VmeqK
                                                        g$expr$27713$1VmeqK
                                                        g$col$27714$1VmeqK
                                                        g$extra$27715$1VmeqK
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$27606$1VmeqK)
                                                      (g$pp-call$27607$1VmeqK
                                                        g$expr$27713$1VmeqK
                                                        g$col$27714$1VmeqK
                                                        g$extra$27715$1VmeqK
                                                        g$pp-expr$27606$1VmeqK)))))
                                               (g$style$27622$1VmeqK
                                                 g$head$27716$1VmeqK))
                                              (g$pp-list$27608$1VmeqK
                                                g$expr$27713$1VmeqK
                                                g$col$27714$1VmeqK
                                                g$extra$27715$1VmeqK
                                                g$pp-expr$27606$1VmeqK))))
                                         (car g$expr$27713$1VmeqK))))))
                                 (g$pp-call$27607$1VmeqK
                                   (case-lambda
                                     ((g$expr$27708$1VmeqK
                                        g$col$27709$1VmeqK
                                        g$extra$27710$1VmeqK
                                        g$pp-item$27711$1VmeqK)
                                      ((case-lambda
                                         ((g$col*$27712$1VmeqK)
                                          (if g$col$27709$1VmeqK
                                            (begin
                                              '#f
                                              (g$pp-down$27609$1VmeqK
                                                (cdr g$expr$27708$1VmeqK)
                                                g$col*$27712$1VmeqK
                                                (g$fx+$25480$1VmeqK
                                                  g$col*$27712$1VmeqK
                                                  '1)
                                                g$extra$27710$1VmeqK
                                                g$pp-item$27711$1VmeqK))
                                            '#f)))
                                       (g$wr$27599$1VmeqK
                                         (car g$expr$27708$1VmeqK)
                                         (g$out$27598$1VmeqK
                                           '"("
                                           g$col$27709$1VmeqK))))))
                                 (g$pp-list$27608$1VmeqK
                                   (case-lambda
                                     ((g$l$27703$1VmeqK
                                        g$col$27704$1VmeqK
                                        g$extra$27705$1VmeqK
                                        g$pp-item$27706$1VmeqK)
                                      ((case-lambda
                                         ((g$col$27707$1VmeqK)
                                          (g$pp-down$27609$1VmeqK
                                            g$l$27703$1VmeqK
                                            g$col$27707$1VmeqK
                                            g$col$27707$1VmeqK
                                            g$extra$27705$1VmeqK
                                            g$pp-item$27706$1VmeqK)))
                                       (g$out$27598$1VmeqK
                                         '"("
                                         g$col$27704$1VmeqK)))))
                                 (g$pp-down$27609$1VmeqK
                                   (case-lambda
                                     ((g$l$27693$1VmeqK
                                        g$col1$27694$1VmeqK
                                        g$col2$27695$1VmeqK
                                        g$extra$27696$1VmeqK
                                        g$pp-item$27697$1VmeqK)
                                      ((letrec ((g$loop$27698$1VmeqK
                                                  (case-lambda
                                                    ((g$l$27699$1VmeqK
                                                       g$col$27700$1VmeqK)
                                                     (if g$col$27700$1VmeqK
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$27699$1VmeqK)
                                                           ((case-lambda
                                                              ((g$rest$27701$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$extra$27702$1VmeqK)
                                                                   (g$loop$27698$1VmeqK
                                                                     g$rest$27701$1VmeqK
                                                                     (g$pr$27605$1VmeqK
                                                                       (car g$l$27699$1VmeqK)
                                                                       (g$indent$27604$1VmeqK
                                                                         g$col2$27695$1VmeqK
                                                                         g$col$27700$1VmeqK)
                                                                       g$extra$27702$1VmeqK
                                                                       g$pp-item$27697$1VmeqK))))
                                                                (if (null?
                                                                      g$rest$27701$1VmeqK)
                                                                  (g$fx+$25480$1VmeqK
                                                                    g$extra$27696$1VmeqK
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$27699$1VmeqK))
                                                           (if (null?
                                                                 g$l$27699$1VmeqK)
                                                             (g$out$27598$1VmeqK
                                                               '")"
                                                               g$col$27700$1VmeqK)
                                                             (begin
                                                               '#f
                                                               (g$out$27598$1VmeqK
                                                                 '")"
                                                                 (g$pr$27605$1VmeqK
                                                                   g$l$27699$1VmeqK
                                                                   (g$indent$27604$1VmeqK
                                                                     g$col2$27695$1VmeqK
                                                                     (g$out$27598$1VmeqK
                                                                       '"."
                                                                       (g$indent$27604$1VmeqK
                                                                         g$col2$27695$1VmeqK
                                                                         g$col$27700$1VmeqK)))
                                                                   (g$fx+$25480$1VmeqK
                                                                     g$extra$27696$1VmeqK
                                                                     '1)
                                                                   g$pp-item$27697$1VmeqK))))))
                                                       '#f)))))
                                         g$loop$27698$1VmeqK)
                                       g$l$27693$1VmeqK
                                       g$col1$27694$1VmeqK))))
                                 (g$pp-general$27610$1VmeqK
                                   (case-lambda
                                     ((g$expr$27660$1VmeqK
                                        g$col$27661$1VmeqK
                                        g$extra$27662$1VmeqK
                                        g$named?$27663$1VmeqK
                                        g$pp-1$27664$1VmeqK
                                        g$pp-2$27665$1VmeqK
                                        g$pp-3$27666$1VmeqK)
                                      (letrec* ((g$tail1$27667$1VmeqK
                                                  (case-lambda
                                                    ((g$rest$27686$1VmeqK
                                                       g$col1$27687$1VmeqK
                                                       g$col2$27688$1VmeqK
                                                       g$col3$27689$1VmeqK)
                                                     (if (if g$pp-1$27664$1VmeqK
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27686$1VmeqK))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27690$1VmeqK)
                                                           ((case-lambda
                                                              ((g$rest$27691$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$extra$27692$1VmeqK)
                                                                   (g$tail2$27668$1VmeqK
                                                                     g$rest$27691$1VmeqK
                                                                     g$col1$27687$1VmeqK
                                                                     (g$pr$27605$1VmeqK
                                                                       g$val1$27690$1VmeqK
                                                                       (g$indent$27604$1VmeqK
                                                                         g$col3$27689$1VmeqK
                                                                         g$col2$27688$1VmeqK)
                                                                       g$extra$27692$1VmeqK
                                                                       g$pp-1$27664$1VmeqK)
                                                                     g$col3$27689$1VmeqK)))
                                                                (if (null?
                                                                      g$rest$27691$1VmeqK)
                                                                  (g$fx+$25480$1VmeqK
                                                                    g$extra$27662$1VmeqK
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27686$1VmeqK))))
                                                        (car g$rest$27686$1VmeqK))
                                                       (g$tail2$27668$1VmeqK
                                                         g$rest$27686$1VmeqK
                                                         g$col1$27687$1VmeqK
                                                         g$col2$27688$1VmeqK
                                                         g$col3$27689$1VmeqK)))))
                                                (g$tail2$27668$1VmeqK
                                                  (case-lambda
                                                    ((g$rest$27679$1VmeqK
                                                       g$col1$27680$1VmeqK
                                                       g$col2$27681$1VmeqK
                                                       g$col3$27682$1VmeqK)
                                                     (if (if g$pp-2$27665$1VmeqK
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27679$1VmeqK))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27683$1VmeqK)
                                                           ((case-lambda
                                                              ((g$rest$27684$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$extra$27685$1VmeqK)
                                                                   (g$tail3$27669$1VmeqK
                                                                     g$rest$27684$1VmeqK
                                                                     g$col1$27680$1VmeqK
                                                                     (g$pr$27605$1VmeqK
                                                                       g$val1$27683$1VmeqK
                                                                       (g$indent$27604$1VmeqK
                                                                         g$col3$27682$1VmeqK
                                                                         g$col2$27681$1VmeqK)
                                                                       g$extra$27685$1VmeqK
                                                                       g$pp-2$27665$1VmeqK))))
                                                                (if (null?
                                                                      g$rest$27684$1VmeqK)
                                                                  (g$fx+$25480$1VmeqK
                                                                    g$extra$27662$1VmeqK
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27679$1VmeqK))))
                                                        (car g$rest$27679$1VmeqK))
                                                       (g$tail3$27669$1VmeqK
                                                         g$rest$27679$1VmeqK
                                                         g$col1$27680$1VmeqK
                                                         g$col2$27681$1VmeqK)))))
                                                (g$tail3$27669$1VmeqK
                                                  (case-lambda
                                                    ((g$rest$27676$1VmeqK
                                                       g$col1$27677$1VmeqK
                                                       g$col2$27678$1VmeqK)
                                                     (g$pp-down$27609$1VmeqK
                                                       g$rest$27676$1VmeqK
                                                       g$col2$27678$1VmeqK
                                                       g$col1$27677$1VmeqK
                                                       g$extra$27662$1VmeqK
                                                       g$pp-3$27666$1VmeqK)))))
                                        ((case-lambda
                                           ((g$head$27670$1VmeqK)
                                            ((case-lambda
                                               ((g$rest$27671$1VmeqK)
                                                ((case-lambda
                                                   ((g$col*$27672$1VmeqK)
                                                    (if (if g$named?$27663$1VmeqK
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$27671$1VmeqK))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$27673$1VmeqK)
                                                          ((case-lambda
                                                             ((g$rest$27674$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$col**$27675$1VmeqK)
                                                                  (g$tail1$27667$1VmeqK
                                                                    g$rest$27674$1VmeqK
                                                                    (g$fx+$25480$1VmeqK
                                                                      g$col$27661$1VmeqK
                                                                      (g$indent-general$27578$1VmeqK))
                                                                    g$col**$27675$1VmeqK
                                                                    (g$fx+$25480$1VmeqK
                                                                      g$col**$27675$1VmeqK
                                                                      '1))))
                                                               (g$wr$27599$1VmeqK
                                                                 g$name$27673$1VmeqK
                                                                 (g$out$27598$1VmeqK
                                                                   '" "
                                                                   g$col*$27672$1VmeqK)))))
                                                           (cdr g$rest$27671$1VmeqK))))
                                                       (car g$rest$27671$1VmeqK))
                                                      (g$tail1$27667$1VmeqK
                                                        g$rest$27671$1VmeqK
                                                        (g$fx+$25480$1VmeqK
                                                          g$col$27661$1VmeqK
                                                          (g$indent-general$27578$1VmeqK))
                                                        g$col*$27672$1VmeqK
                                                        (g$fx+$25480$1VmeqK
                                                          g$col*$27672$1VmeqK
                                                          '1)))))
                                                 (g$wr$27599$1VmeqK
                                                   g$head$27670$1VmeqK
                                                   (g$out$27598$1VmeqK
                                                     '"("
                                                     g$col$27661$1VmeqK)))))
                                             (cdr g$expr$27660$1VmeqK))))
                                         (car g$expr$27660$1VmeqK))))))
                                 (g$pp-expr-list$27611$1VmeqK
                                   (case-lambda
                                     ((g$l$27657$1VmeqK
                                        g$col$27658$1VmeqK
                                        g$extra$27659$1VmeqK)
                                      (g$pp-list$27608$1VmeqK
                                        g$l$27657$1VmeqK
                                        g$col$27658$1VmeqK
                                        g$extra$27659$1VmeqK
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$pp-SYNTAX-CASE$27612$1VmeqK
                                   (case-lambda
                                     ((g$expr$27654$1VmeqK
                                        g$col$27655$1VmeqK
                                        g$extra$27656$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27654$1VmeqK
                                        g$col$27655$1VmeqK
                                        g$extra$27656$1VmeqK
                                        '#t
                                        g$pp-expr-list$27611$1VmeqK
                                        '#f
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$pp-LAMBDA$27613$1VmeqK
                                   (case-lambda
                                     ((g$expr$27651$1VmeqK
                                        g$col$27652$1VmeqK
                                        g$extra$27653$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27651$1VmeqK
                                        g$col$27652$1VmeqK
                                        g$extra$27653$1VmeqK
                                        '#f
                                        g$pp-expr-list$27611$1VmeqK
                                        '#f
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$pp-IF$27614$1VmeqK
                                   (case-lambda
                                     ((g$expr$27648$1VmeqK
                                        g$col$27649$1VmeqK
                                        g$extra$27650$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27648$1VmeqK
                                        g$col$27649$1VmeqK
                                        g$extra$27650$1VmeqK
                                        '#f
                                        g$pp-expr$27606$1VmeqK
                                        '#f
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$pp-COND$27615$1VmeqK
                                   (case-lambda
                                     ((g$expr$27645$1VmeqK
                                        g$col$27646$1VmeqK
                                        g$extra$27647$1VmeqK)
                                      (g$pp-call$27607$1VmeqK
                                        g$expr$27645$1VmeqK
                                        g$col$27646$1VmeqK
                                        g$extra$27647$1VmeqK
                                        g$pp-expr-list$27611$1VmeqK))))
                                 (g$pp-CASE$27616$1VmeqK
                                   (case-lambda
                                     ((g$expr$27642$1VmeqK
                                        g$col$27643$1VmeqK
                                        g$extra$27644$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27642$1VmeqK
                                        g$col$27643$1VmeqK
                                        g$extra$27644$1VmeqK
                                        '#f
                                        g$pp-expr$27606$1VmeqK
                                        '#f
                                        g$pp-expr-list$27611$1VmeqK))))
                                 (g$pp-CASE-LAMBDA$27617$1VmeqK
                                   (case-lambda
                                     ((g$expr$27639$1VmeqK
                                        g$col$27640$1VmeqK
                                        g$extra$27641$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27639$1VmeqK
                                        g$col$27640$1VmeqK
                                        g$extra$27641$1VmeqK
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$27611$1VmeqK))))
                                 (g$pp-AND$27618$1VmeqK
                                   (case-lambda
                                     ((g$expr$27636$1VmeqK
                                        g$col$27637$1VmeqK
                                        g$extra$27638$1VmeqK)
                                      (g$pp-call$27607$1VmeqK
                                        g$expr$27636$1VmeqK
                                        g$col$27637$1VmeqK
                                        g$extra$27638$1VmeqK
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$pp-LET$27619$1VmeqK
                                   (case-lambda
                                     ((g$expr$27631$1VmeqK
                                        g$col$27632$1VmeqK
                                        g$extra$27633$1VmeqK)
                                      ((case-lambda
                                         ((g$rest$27634$1VmeqK)
                                          ((case-lambda
                                             ((g$named?$27635$1VmeqK)
                                              (g$pp-general$27610$1VmeqK
                                                g$expr$27631$1VmeqK
                                                g$col$27632$1VmeqK
                                                g$extra$27633$1VmeqK
                                                g$named?$27635$1VmeqK
                                                g$pp-expr-list$27611$1VmeqK
                                                '#f
                                                g$pp-expr$27606$1VmeqK)))
                                           (if (pair?
                                                 g$rest$27634$1VmeqK)
                                             (begin
                                               '#f
                                               (g$symbol?$21181$1VmeqK
                                                 (car g$rest$27634$1VmeqK)))
                                             '#f))))
                                       (cdr g$expr$27631$1VmeqK)))))
                                 (g$pp-BEGIN$27620$1VmeqK
                                   (case-lambda
                                     ((g$expr$27628$1VmeqK
                                        g$col$27629$1VmeqK
                                        g$extra$27630$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27628$1VmeqK
                                        g$col$27629$1VmeqK
                                        g$extra$27630$1VmeqK
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$pp-DO$27621$1VmeqK
                                   (case-lambda
                                     ((g$expr$27625$1VmeqK
                                        g$col$27626$1VmeqK
                                        g$extra$27627$1VmeqK)
                                      (g$pp-general$27610$1VmeqK
                                        g$expr$27625$1VmeqK
                                        g$col$27626$1VmeqK
                                        g$extra$27627$1VmeqK
                                        '#f
                                        g$pp-expr-list$27611$1VmeqK
                                        g$pp-expr-list$27611$1VmeqK
                                        g$pp-expr$27606$1VmeqK))))
                                 (g$style$27622$1VmeqK
                                   (case-lambda
                                     ((g$head$27623$1VmeqK)
                                      ((case-lambda
                                         ((g$t$27624$1VmeqK)
                                          (if (g$memv$20342$1VmeqK
                                                g$t$27624$1VmeqK
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$27613$1VmeqK
                                            (if (eqv?
                                                  g$t$27624$1VmeqK
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$27612$1VmeqK
                                              (if (g$memv$20342$1VmeqK
                                                    g$t$27624$1VmeqK
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$27614$1VmeqK
                                                (if (eqv?
                                                      g$t$27624$1VmeqK
                                                      'cond)
                                                  g$pp-COND$27615$1VmeqK
                                                  (if (eqv?
                                                        g$t$27624$1VmeqK
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$27617$1VmeqK
                                                    (if (eqv?
                                                          g$t$27624$1VmeqK
                                                          'case)
                                                      g$pp-CASE$27616$1VmeqK
                                                      (if (g$memv$20342$1VmeqK
                                                            g$t$27624$1VmeqK
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$27618$1VmeqK
                                                        (if (eqv?
                                                              g$t$27624$1VmeqK
                                                              'let)
                                                          g$pp-LET$27619$1VmeqK
                                                          (if (eqv?
                                                                g$t$27624$1VmeqK
                                                                'begin)
                                                            g$pp-BEGIN$27620$1VmeqK
                                                            (if (eqv?
                                                                  g$t$27624$1VmeqK
                                                                  'do)
                                                              g$pp-DO$27621$1VmeqK
                                                              (begin
                                                                '#f
                                                                '#f)))))))))))))
                                       g$head$27623$1VmeqK)))))
                         (g$pr$27605$1VmeqK
                           g$obj$27601$1VmeqK
                           g$col$27602$1VmeqK
                           '0
                           g$pp-expr$27606$1VmeqK))))))
          (if g$width$27596$1VmeqK
            (g$out$27598$1VmeqK
              g$genwrite:newline-str$27570$1VmeqK
              (g$pp$27600$1VmeqK g$obj$27594$1VmeqK '0))
            (g$wr$27599$1VmeqK g$obj$27594$1VmeqK '0))))))
   (g$pretty-width$27577$1VmeqK
     g$pretty-width$27770$1VmeqK
     (g$make-parameter$27565$1VmeqK '72))
   (g$indent-general$27578$1VmeqK
     g$indent-general$27771$1VmeqK
     (g$make-parameter$27565$1VmeqK '2))
   (g$max-call-head-width$27579$1VmeqK
     g$max-call-head-width$27772$1VmeqK
     (g$make-parameter$27565$1VmeqK '3))
   (g$pretty-gensyms$27580$1VmeqK
     g$pretty-gensyms$27773$1VmeqK
     (g$make-parameter$27565$1VmeqK '#f))
   (g$reverse-string-append$27581$1VmeqK
     g$reverse-string-append$27774$1VmeqK
     (case-lambda
       ((g$l$27749$1VmeqK)
        (letrec* ((g$rev-string-append$27750$1VmeqK
                    (case-lambda
                      ((g$l$27751$1VmeqK g$i$27752$1VmeqK)
                       (if (pair? g$l$27751$1VmeqK)
                         ((case-lambda
                            ((g$str$27753$1VmeqK)
                             ((case-lambda
                                ((g$len$27754$1VmeqK)
                                 ((case-lambda
                                    ((g$result$27755$1VmeqK)
                                     ((letrec ((g$loop$27756$1VmeqK
                                                 (case-lambda
                                                   ((g$j$27757$1VmeqK
                                                      g$k$27758$1VmeqK)
                                                    (if (g$fx<?$25494$1VmeqK
                                                          g$j$27757$1VmeqK
                                                          g$len$27754$1VmeqK)
                                                      (begin
                                                        (string-set!
                                                          g$result$27755$1VmeqK
                                                          g$k$27758$1VmeqK
                                                          (string-ref
                                                            g$str$27753$1VmeqK
                                                            g$j$27757$1VmeqK))
                                                        (g$loop$27756$1VmeqK
                                                          (g$fx+$25480$1VmeqK
                                                            g$j$27757$1VmeqK
                                                            '1)
                                                          (g$fx+$25480$1VmeqK
                                                            g$k$27758$1VmeqK
                                                            '1)))
                                                      g$result$27755$1VmeqK)))))
                                        g$loop$27756$1VmeqK)
                                      '0
                                      (g$fx-$25482$1VmeqK
                                        (g$fx-$25482$1VmeqK
                                          (string-length
                                            g$result$27755$1VmeqK)
                                          g$i$27752$1VmeqK)
                                        g$len$27754$1VmeqK))))
                                  (g$rev-string-append$27750$1VmeqK
                                    (cdr g$l$27751$1VmeqK)
                                    (g$fx+$25480$1VmeqK
                                      g$i$27752$1VmeqK
                                      g$len$27754$1VmeqK)))))
                              (string-length g$str$27753$1VmeqK))))
                          (car g$l$27751$1VmeqK))
                         (make-string g$i$27752$1VmeqK))))))
          (g$rev-string-append$27750$1VmeqK g$l$27749$1VmeqK '0)))))
   (g$pretty-print$27582$1VmeqK
     g$pretty-print$27775$1VmeqK
     (case-lambda
       ((g$obj$27759$1VmeqK . g$opt$27760$1VmeqK)
        ((case-lambda
           ((g$port$27761$1VmeqK)
            (g$generic-write$27576$1VmeqK
              g$obj$27759$1VmeqK
              '#f
              (g$pretty-width$27577$1VmeqK)
              (case-lambda
                ((g$s$27762$1VmeqK)
                 (begin
                   (display g$s$27762$1VmeqK g$port$27761$1VmeqK)
                   '#t))))))
         (if (pair? g$opt$27760$1VmeqK)
           (car g$opt$27760$1VmeqK)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$27776$1VmeqK
     g$cps/generate-reference$28041$1VmeqK
     (case-lambda
       ((g$variable$27829$1VmeqK)
        (g$cps/generate-operand$27780$1VmeqK
          (g$make-reference$27806$1VmeqK g$variable$27829$1VmeqK)))))
   (g$cps/generate-literal$27777$1VmeqK
     g$cps/generate-literal$28042$1VmeqK
     (case-lambda
       ((g$datum$27830$1VmeqK)
        (g$cps/generate-operand$27780$1VmeqK
          (g$make-literal$27805$1VmeqK g$datum$27830$1VmeqK)))))
   (g$cps/generate-abstraction$27778$1VmeqK
     g$cps/generate-abstraction$28043$1VmeqK
     (case-lambda
       ((g$bvl$27831$1VmeqK g$body-generator$27832$1VmeqK)
        (g$cps/generate-operand$27780$1VmeqK
          (g$make-user-abstraction$27807$1VmeqK
            g$bvl$27831$1VmeqK
            (case-lambda
              ((g$continuation-variable$27833$1VmeqK)
               (g$body-generator$27832$1VmeqK
                 (g$variable-continuator$27793$1VmeqK
                   g$continuation-variable$27833$1VmeqK)))))))))
   (g$cps/generate-abstractions$27779$1VmeqK
     g$cps/generate-abstractions$28044$1VmeqK
     (case-lambda
       ((g$bvls$27834$1VmeqK g$body-generators$27835$1VmeqK)
        (g$cps/generate-operand$27780$1VmeqK
          (g$make-user-abstractions$27808$1VmeqK
            g$bvls$27834$1VmeqK
            (g$map$20349$1VmeqK
              (case-lambda
                ((g$body-generator$27836$1VmeqK)
                 (case-lambda
                   ((g$continuation-variable$27837$1VmeqK)
                    (g$body-generator$27836$1VmeqK
                      (g$variable-continuator$27793$1VmeqK
                        g$continuation-variable$27837$1VmeqK))))))
              g$body-generators$27835$1VmeqK))))))
   (g$cps/generate-operand$27780$1VmeqK
     g$cps/generate-operand$28045$1VmeqK
     (case-lambda
       ((g$operand$27838$1VmeqK)
        (case-lambda
          ((g$continuator$27839$1VmeqK)
           (g$continue-with-operand$27796$1VmeqK
             g$continuator$27839$1VmeqK
             g$operand$27838$1VmeqK))))))
   (g$cps/generate-conditional$27781$1VmeqK
     g$cps/generate-conditional$28046$1VmeqK
     (case-lambda
       ((g$condition-generator$27840$1VmeqK
          g$consequent-generator$27841$1VmeqK
          g$alternative-generator$27842$1VmeqK)
        (case-lambda
          ((g$continuator$27843$1VmeqK)
           (letrec* ((g$if-variable$27844$1VmeqK
                       (case-lambda
                         ((g$continuation-variable$27846$1VmeqK)
                          ((case-lambda
                             ((g$continuator*$27847$1VmeqK)
                              (g$condition-generator$27840$1VmeqK
                                (g$conditional-continuator$27792$1VmeqK
                                  (case-lambda
                                    ((g$condition$27848$1VmeqK)
                                     (g$make-conditional$27815$1VmeqK
                                       g$condition$27848$1VmeqK
                                       (g$consequent-generator$27841$1VmeqK
                                         g$continuator*$27847$1VmeqK)
                                       (g$alternative-generator$27842$1VmeqK
                                         g$continuator*$27847$1VmeqK))))))))
                           (g$variable-continuator$27793$1VmeqK
                             g$continuation-variable$27846$1VmeqK))))))
             (g$reify-continuation*$27798$1VmeqK
               g$continuator$27843$1VmeqK
               g$if-variable$27844$1VmeqK
               (case-lambda
                 ((g$continuation-abstraction$27845$1VmeqK)
                  (g$make-conditional-join$27816$1VmeqK
                    g$continuation-abstraction$27845$1VmeqK
                    g$if-variable$27844$1VmeqK))))))))))
   (g$cps/generate-recursive-bind$27782$1VmeqK
     g$cps/generate-recursive-bind$28047$1VmeqK
     (case-lambda
       ((g$variables$27849$1VmeqK
          g$generators$27850$1VmeqK
          g$body-generator$27851$1VmeqK)
        (case-lambda
          ((g$continuator$27852$1VmeqK)
           (g$make-recursive-bind$27810$1VmeqK
             g$variables$27849$1VmeqK
             (g$map$20349$1VmeqK
               (case-lambda
                 ((g$generator$27853$1VmeqK)
                  (case-lambda
                    ((g$continuation-variable$27854$1VmeqK)
                     (g$generator$27853$1VmeqK
                       (g$variable-continuator$27793$1VmeqK
                         g$continuation-variable$27854$1VmeqK))))))
               g$generators$27850$1VmeqK)
             (g$body-generator$27851$1VmeqK
               (g$reified-continuator$27795$1VmeqK
                 g$continuator$27852$1VmeqK))))))))
   (g$cps/generate-recursive*-bind$27783$1VmeqK
     g$cps/generate-recursive*-bind$28048$1VmeqK
     (case-lambda
       ((g$variables$27855$1VmeqK
          g$generators$27856$1VmeqK
          g$body-generator$27857$1VmeqK)
        (case-lambda
          ((g$continuator$27858$1VmeqK)
           (g$make-recursive*-bind$27811$1VmeqK
             g$variables$27855$1VmeqK
             (g$map$20349$1VmeqK
               (case-lambda
                 ((g$generator$27859$1VmeqK)
                  (case-lambda
                    ((g$continuation-variable$27860$1VmeqK)
                     (g$generator$27859$1VmeqK
                       (g$variable-continuator$27793$1VmeqK
                         g$continuation-variable$27860$1VmeqK))))))
               g$generators$27856$1VmeqK)
             (g$body-generator$27857$1VmeqK
               (g$reified-continuator$27795$1VmeqK
                 g$continuator$27858$1VmeqK))))))))
   (g$cps/generate-recursive*-library-bind$27784$1VmeqK
     g$cps/generate-recursive*-library-bind$28049$1VmeqK
     (case-lambda
       ((g$name$27861$1VmeqK
          g$variables$27862$1VmeqK
          g$variables*$27863$1VmeqK
          g$generators$27864$1VmeqK
          g$body-generator$27865$1VmeqK)
        (case-lambda
          ((g$continuator$27866$1VmeqK)
           (g$make-recursive*-library-bind$27812$1VmeqK
             g$name$27861$1VmeqK
             g$variables$27862$1VmeqK
             g$variables*$27863$1VmeqK
             (g$map$20349$1VmeqK
               (case-lambda
                 ((g$generator$27867$1VmeqK)
                  (case-lambda
                    ((g$continuation-variable$27868$1VmeqK)
                     (g$generator$27867$1VmeqK
                       (g$variable-continuator$27793$1VmeqK
                         g$continuation-variable$27868$1VmeqK))))))
               g$generators$27864$1VmeqK)
             (g$body-generator$27865$1VmeqK
               (g$reified-continuator$27795$1VmeqK
                 g$continuator$27866$1VmeqK))))))))
   (g$cps/generate-sequence$27785$1VmeqK
     g$cps/generate-sequence$28050$1VmeqK
     (case-lambda
       ((g$generators$27869$1VmeqK)
        (case-lambda
          ((g$continuator$27870$1VmeqK)
           ((letrec ((g$recur$27871$1VmeqK
                       (case-lambda
                         ((g$generators$27872$1VmeqK)
                          ((car g$generators$27872$1VmeqK)
                           ((case-lambda
                              ((g$generators$27873$1VmeqK)
                               (if (pair? g$generators$27873$1VmeqK)
                                 (g$effect-continuator$27791$1VmeqK
                                   (case-lambda
                                     (()
                                      (g$recur$27871$1VmeqK
                                        g$generators$27873$1VmeqK))))
                                 g$continuator$27870$1VmeqK)))
                            (cdr g$generators$27872$1VmeqK)))))))
              g$recur$27871$1VmeqK)
            g$generators$27869$1VmeqK))))))
   (g$cps/generate-assignment$27786$1VmeqK
     g$cps/generate-assignment$28051$1VmeqK
     (case-lambda
       ((g$location$27874$1VmeqK g$expression-generator$27875$1VmeqK)
        (case-lambda
          ((g$continuator$27876$1VmeqK)
           (g$expression-generator$27875$1VmeqK
             (g$operand-continuator$27790$1VmeqK
               (case-lambda
                 ((g$operand$27877$1VmeqK)
                  (g$make-assignment$27818$1VmeqK
                    g$location$27874$1VmeqK
                    g$operand$27877$1VmeqK
                    (g$continue-with-operand$27796$1VmeqK
                      g$continuator$27876$1VmeqK
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$27787$1VmeqK
     g$cps/generate-declaration$28052$1VmeqK
     (case-lambda
       ((g$location$27878$1VmeqK g$expression-generator$27879$1VmeqK)
        (case-lambda
          ((g$continuator$27880$1VmeqK)
           (g$expression-generator$27879$1VmeqK
             (g$operand-continuator$27790$1VmeqK
               (case-lambda
                 ((g$operand$27881$1VmeqK)
                  (g$make-declaration$27819$1VmeqK
                    g$location$27878$1VmeqK
                    g$operand$27881$1VmeqK
                    (g$continue-with-operand$27796$1VmeqK
                      g$continuator$27880$1VmeqK
                      '(cps-void))))))))))))
   (g$cps/generate-combination$27788$1VmeqK
     g$cps/generate-combination$28053$1VmeqK
     (case-lambda
       ((g$operator-generator$27882$1VmeqK
          g$operand-generators$27883$1VmeqK)
        (g$cps/generate-subproblems$27789$1VmeqK
          (g$reverse$21198$1VmeqK
            (cons
              g$operator-generator$27882$1VmeqK
              g$operand-generators$27883$1VmeqK))
          (case-lambda
            ((g$operands$27884$1VmeqK g$continuator$27885$1VmeqK)
             (g$make-combination$27813$1VmeqK
               (car g$operands$27884$1VmeqK)
               (g$reify-continuation$27797$1VmeqK
                 g$continuator$27885$1VmeqK)
               (cdr g$operands$27884$1VmeqK))))))))
   (g$cps/generate-subproblems$27789$1VmeqK
     g$cps/generate-subproblems$28054$1VmeqK
     (case-lambda
       ((g$generators$27886$1VmeqK g$combiner$27887$1VmeqK)
        (case-lambda
          ((g$continuator$27888$1VmeqK)
           ((letrec ((g$recur$27889$1VmeqK
                       (case-lambda
                         ((g$generators$27890$1VmeqK
                            g$operands$27891$1VmeqK)
                          (if (pair? g$generators$27890$1VmeqK)
                            ((car g$generators$27890$1VmeqK)
                             ((case-lambda
                                ((g$generators$27892$1VmeqK)
                                 (g$operand-continuator$27790$1VmeqK
                                   (case-lambda
                                     ((g$operand$27893$1VmeqK)
                                      (g$recur$27889$1VmeqK
                                        g$generators$27892$1VmeqK
                                        (cons
                                          g$operand$27893$1VmeqK
                                          g$operands$27891$1VmeqK)))))))
                              (cdr g$generators$27890$1VmeqK)))
                            (g$combiner$27887$1VmeqK
                              g$operands$27891$1VmeqK
                              g$continuator$27888$1VmeqK))))))
              g$recur$27889$1VmeqK)
            g$generators$27886$1VmeqK
            '()))))))
   (g$operand-continuator$27790$1VmeqK
     g$operand-continuator$28055$1VmeqK
     (case-lambda
       ((g$generator$27894$1VmeqK)
        (case-lambda
          ((g$if-operand$27895$1VmeqK
             g$if-effect$27896$1VmeqK
             g$if-conditional$27897$1VmeqK
             g$if-variable$27898$1VmeqK
             g$if-inline$27899$1VmeqK)
           (begin
             g$if-effect$27896$1VmeqK
             g$if-conditional$27897$1VmeqK
             g$if-variable$27898$1VmeqK
             g$if-inline$27899$1VmeqK
             (g$if-operand$27895$1VmeqK g$generator$27894$1VmeqK)))))))
   (g$effect-continuator$27791$1VmeqK
     g$effect-continuator$28056$1VmeqK
     (case-lambda
       ((g$generator$27900$1VmeqK)
        (case-lambda
          ((g$if-operand$27901$1VmeqK
             g$if-effect$27902$1VmeqK
             g$if-conditional$27903$1VmeqK
             g$if-variable$27904$1VmeqK
             g$if-inline$27905$1VmeqK)
           (begin
             g$if-operand$27901$1VmeqK
             g$if-conditional$27903$1VmeqK
             g$if-variable$27904$1VmeqK
             g$if-inline$27905$1VmeqK
             (g$if-effect$27902$1VmeqK g$generator$27900$1VmeqK)))))))
   (g$conditional-continuator$27792$1VmeqK
     g$conditional-continuator$28057$1VmeqK
     (case-lambda
       ((g$generator$27906$1VmeqK)
        (case-lambda
          ((g$if-operand$27907$1VmeqK
             g$if-effect$27908$1VmeqK
             g$if-conditional$27909$1VmeqK
             g$if-variable$27910$1VmeqK
             g$if-inline$27911$1VmeqK)
           (begin
             g$if-operand$27907$1VmeqK
             g$if-effect$27908$1VmeqK
             g$if-variable$27910$1VmeqK
             g$if-inline$27911$1VmeqK
             (g$if-conditional$27909$1VmeqK
               g$generator$27906$1VmeqK)))))))
   (g$variable-continuator$27793$1VmeqK
     g$variable-continuator$28058$1VmeqK
     (case-lambda
       ((g$variable$27912$1VmeqK)
        (case-lambda
          ((g$if-operand$27913$1VmeqK
             g$if-effect$27914$1VmeqK
             g$if-conditional$27915$1VmeqK
             g$if-variable$27916$1VmeqK
             g$if-inline$27917$1VmeqK)
           (begin
             g$if-operand$27913$1VmeqK
             g$if-effect$27914$1VmeqK
             g$if-variable$27916$1VmeqK
             g$if-inline$27917$1VmeqK
             (g$if-variable$27916$1VmeqK g$variable$27912$1VmeqK)))))))
   (g$inline-continuator$27794$1VmeqK
     g$inline-continuator$28059$1VmeqK
     (case-lambda
       ((g$continuation$27918$1VmeqK)
        (case-lambda
          ((g$if-operand$27919$1VmeqK
             g$if-effect$27920$1VmeqK
             g$if-conditional$27921$1VmeqK
             g$if-variable$27922$1VmeqK
             g$if-inline$27923$1VmeqK)
           (begin
             g$if-operand$27919$1VmeqK
             g$if-effect$27920$1VmeqK
             g$if-conditional$27921$1VmeqK
             g$if-variable$27922$1VmeqK
             (g$if-inline$27923$1VmeqK
               g$continuation$27918$1VmeqK)))))))
   (g$reified-continuator$27795$1VmeqK
     g$reified-continuator$28060$1VmeqK
     (case-lambda
       ((g$continuator$27924$1VmeqK)
        (case-lambda
          ((g$if-operand$27925$1VmeqK
             g$if-effect$27926$1VmeqK
             g$if-conditional$27927$1VmeqK
             g$if-variable$27928$1VmeqK
             g$if-inline$27929$1VmeqK)
           (begin
             g$if-operand$27925$1VmeqK
             g$if-effect$27926$1VmeqK
             g$if-conditional$27927$1VmeqK
             (g$reify-continuation*$27798$1VmeqK
               g$continuator$27924$1VmeqK
               g$if-variable$27928$1VmeqK
               g$if-inline$27929$1VmeqK)))))))
   (g$continue-with-operand$27796$1VmeqK
     g$continue-with-operand$28061$1VmeqK
     (case-lambda
       ((g$continuator$27930$1VmeqK g$operand$27931$1VmeqK)
        (g$continuator$27930$1VmeqK
          (case-lambda
            ((g$generator$27932$1VmeqK)
             (g$generator$27932$1VmeqK g$operand$27931$1VmeqK)))
          (case-lambda
            ((g$generator$27933$1VmeqK) (g$generator$27933$1VmeqK)))
          (case-lambda
            ((g$generator$27934$1VmeqK)
             (g$generator$27934$1VmeqK
               (g$make-truth-test$27820$1VmeqK
                 g$operand$27931$1VmeqK))))
          (case-lambda
            ((g$continuation-variable$27935$1VmeqK)
             (g$make-return$27814$1VmeqK
               (g$make-reference$27806$1VmeqK
                 g$continuation-variable$27935$1VmeqK)
               (list g$operand$27931$1VmeqK))))
          (case-lambda
            ((g$continuation-abstraction$27936$1VmeqK)
             (g$make-return$27814$1VmeqK
               g$continuation-abstraction$27936$1VmeqK
               (list g$operand$27931$1VmeqK))))))))
   (g$reify-continuation$27797$1VmeqK
     g$reify-continuation$28062$1VmeqK
     (case-lambda
       ((g$continuator$27937$1VmeqK)
        (g$continuator$27937$1VmeqK
          g$operand-continuation-reifier$27800$1VmeqK
          g$effect-continuation-reifier$27802$1VmeqK
          g$conditional-continuation-reifier$27804$1VmeqK
          (case-lambda
            ((g$variable$27938$1VmeqK)
             (g$make-reference$27806$1VmeqK g$variable$27938$1VmeqK)))
          (case-lambda
            ((g$continuation$27939$1VmeqK)
             g$continuation$27939$1VmeqK))))))
   (g$reify-continuation*$27798$1VmeqK
     g$reify-continuation*$28063$1VmeqK
     (case-lambda
       ((g$continuator$27940$1VmeqK
          g$if-variable$27941$1VmeqK
          g$if-inline$27942$1VmeqK)
        (g$continuator$27940$1VmeqK
          (g$operand-continuation-reifier*$27799$1VmeqK
            g$if-inline$27942$1VmeqK)
          (g$effect-continuation-reifier*$27801$1VmeqK
            g$if-inline$27942$1VmeqK)
          (g$conditional-continuation-reifier*$27803$1VmeqK
            g$if-inline$27942$1VmeqK)
          g$if-variable$27941$1VmeqK
          g$if-inline$27942$1VmeqK))))
   (g$operand-continuation-reifier*$27799$1VmeqK
     g$operand-continuation-reifier*$28064$1VmeqK
     (case-lambda
       ((g$receiver$27943$1VmeqK)
        (case-lambda
          ((g$generator$27944$1VmeqK)
           (g$receiver$27943$1VmeqK
             ((case-lambda
                ((g$variable$27945$1VmeqK)
                 (g$make-continuation-abstraction$27809$1VmeqK
                   (list g$variable$27945$1VmeqK)
                   (g$generator$27944$1VmeqK
                     (g$make-reference$27806$1VmeqK
                       g$variable$27945$1VmeqK)))))
              (g$generate-variable$27821$1VmeqK 'V))))))))
   (g$operand-continuation-reifier$27800$1VmeqK
     g$operand-continuation-reifier$28065$1VmeqK
     (g$operand-continuation-reifier*$27799$1VmeqK values))
   (g$effect-continuation-reifier*$27801$1VmeqK
     g$effect-continuation-reifier*$28066$1VmeqK
     (case-lambda
       ((g$receiver$27946$1VmeqK)
        (case-lambda
          ((g$generator$27947$1VmeqK)
           (g$receiver$27946$1VmeqK
             ((case-lambda
                ((g$variable$27948$1VmeqK)
                 (g$make-continuation-abstraction$27809$1VmeqK
                   g$variable$27948$1VmeqK
                   (g$generator$27947$1VmeqK))))
              (g$generate-variable$27821$1VmeqK 'IGNORE))))))))
   (g$effect-continuation-reifier$27802$1VmeqK
     g$effect-continuation-reifier$28067$1VmeqK
     (g$effect-continuation-reifier*$27801$1VmeqK values))
   (g$conditional-continuation-reifier*$27803$1VmeqK
     g$conditional-continuation-reifier*$28068$1VmeqK
     (case-lambda
       ((g$receiver$27949$1VmeqK)
        (case-lambda
          ((g$generator$27950$1VmeqK)
           (g$receiver$27949$1VmeqK
             ((case-lambda
                ((g$variable$27951$1VmeqK)
                 (g$make-continuation-abstraction$27809$1VmeqK
                   (list g$variable$27951$1VmeqK)
                   (g$generator$27950$1VmeqK
                     (g$make-truth-test$27820$1VmeqK
                       (g$make-reference$27806$1VmeqK
                         g$variable$27951$1VmeqK))))))
              (g$generate-variable$27821$1VmeqK 'T))))))))
   (g$conditional-continuation-reifier$27804$1VmeqK
     g$conditional-continuation-reifier$28069$1VmeqK
     (g$conditional-continuation-reifier*$27803$1VmeqK values))
   (g$make-literal$27805$1VmeqK
     g$make-literal$28070$1VmeqK
     (case-lambda
       ((g$datum$27952$1VmeqK) (list 'quote g$datum$27952$1VmeqK))))
   (g$make-reference$27806$1VmeqK
     g$make-reference$28071$1VmeqK
     (case-lambda ((g$variable$27953$1VmeqK) g$variable$27953$1VmeqK)))
   (g$make-user-abstraction$27807$1VmeqK
     g$make-user-abstraction$28072$1VmeqK
     (case-lambda
       ((g$bvl$27954$1VmeqK g$body-constructor$27955$1VmeqK)
        ((case-lambda
           ((g$continuation$27956$1VmeqK)
            (list
              'case-lambda
              (list
                (cons g$continuation$27956$1VmeqK g$bvl$27954$1VmeqK)
                (g$body-constructor$27955$1VmeqK
                  g$continuation$27956$1VmeqK)))))
         (g$generate-variable$27821$1VmeqK 'C)))))
   (g$make-user-abstractions$27808$1VmeqK
     g$make-user-abstractions$28073$1VmeqK
     (case-lambda
       ((g$bvls$27957$1VmeqK g$body-constructors$27958$1VmeqK)
        ((case-lambda
           ((g$continuation$27959$1VmeqK)
            (cons
              'case-lambda
              (g$map$20349$1VmeqK
                (case-lambda
                  ((g$bvl$27960$1VmeqK g$body-constructor$27961$1VmeqK)
                   (list
                     (cons
                       g$continuation$27959$1VmeqK
                       g$bvl$27960$1VmeqK)
                     (g$body-constructor$27961$1VmeqK
                       g$continuation$27959$1VmeqK))))
                g$bvls$27957$1VmeqK
                g$body-constructors$27958$1VmeqK))))
         (g$generate-variable$27821$1VmeqK 'C)))))
   (g$make-continuation-abstraction$27809$1VmeqK
     g$make-continuation-abstraction$28074$1VmeqK
     (case-lambda
       ((g$bvl$27962$1VmeqK g$body$27963$1VmeqK)
        (list
          'case-lambda
          (list g$bvl$27962$1VmeqK g$body$27963$1VmeqK)))))
   (g$make-recursive-bind$27810$1VmeqK
     g$make-recursive-bind$28075$1VmeqK
     (case-lambda
       ((g$variables$27964$1VmeqK
          g$constructors$27965$1VmeqK
          g$body$27966$1VmeqK)
        (list
          'letrec
          (g$map$20349$1VmeqK
            (case-lambda
              ((g$variable$27967$1VmeqK g$constructor$27968$1VmeqK)
               (list
                 g$variable$27967$1VmeqK
                 (list
                   (g$make-user-abstraction$27807$1VmeqK
                     '()
                     g$constructor$27968$1VmeqK)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$27967$1VmeqK))))))
            g$variables$27964$1VmeqK
            g$constructors$27965$1VmeqK)
          g$body$27966$1VmeqK))))
   (g$make-recursive*-bind$27811$1VmeqK
     g$make-recursive*-bind$28076$1VmeqK
     (case-lambda
       ((g$variables$27969$1VmeqK
          g$constructors$27970$1VmeqK
          g$body$27971$1VmeqK)
        (list
          'letrec*
          (g$map$20349$1VmeqK
            (case-lambda
              ((g$variable$27972$1VmeqK g$constructor$27973$1VmeqK)
               (list
                 g$variable$27972$1VmeqK
                 (list
                   (g$make-user-abstraction$27807$1VmeqK
                     '()
                     g$constructor$27973$1VmeqK)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$27972$1VmeqK))))))
            g$variables$27969$1VmeqK
            g$constructors$27970$1VmeqK)
          g$body$27971$1VmeqK))))
   (g$make-recursive*-library-bind$27812$1VmeqK
     g$make-recursive*-library-bind$28077$1VmeqK
     (case-lambda
       ((g$name$27974$1VmeqK
          g$variables$27975$1VmeqK
          g$variables*$27976$1VmeqK
          g$constructors$27977$1VmeqK
          g$body$27978$1VmeqK)
        (list
          'library-letrec*
          g$name$27974$1VmeqK
          (g$map$20349$1VmeqK
            (case-lambda
              ((g$variable$27979$1VmeqK
                 g$variable*$27980$1VmeqK
                 g$constructor$27981$1VmeqK)
               (list
                 g$variable$27979$1VmeqK
                 g$variable*$27980$1VmeqK
                 (list
                   (g$make-user-abstraction$27807$1VmeqK
                     '()
                     g$constructor$27981$1VmeqK)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$27979$1VmeqK))))))
            g$variables$27975$1VmeqK
            g$variables*$27976$1VmeqK
            g$constructors$27977$1VmeqK)
          g$body$27978$1VmeqK))))
   (g$make-combination$27813$1VmeqK
     g$make-combination$28078$1VmeqK
     (case-lambda
       ((g$operator$27982$1VmeqK
          g$continuation$27983$1VmeqK
          g$operands$27984$1VmeqK)
        (cons
          g$operator$27982$1VmeqK
          (cons g$continuation$27983$1VmeqK g$operands$27984$1VmeqK)))))
   (g$make-return$27814$1VmeqK
     g$make-return$28079$1VmeqK
     (case-lambda
       ((g$continuation$27985$1VmeqK g$operands$27986$1VmeqK)
        (cons g$continuation$27985$1VmeqK g$operands$27986$1VmeqK))))
   (g$make-conditional$27815$1VmeqK
     g$make-conditional$28080$1VmeqK
     (case-lambda
       ((g$condition$27987$1VmeqK
          g$consequent$27988$1VmeqK
          g$alternative$27989$1VmeqK)
        (list
          'if
          g$condition$27987$1VmeqK
          g$consequent$27988$1VmeqK
          g$alternative$27989$1VmeqK))))
   (g$make-conditional-join$27816$1VmeqK
     g$make-conditional-join$28081$1VmeqK
     (case-lambda
       ((g$continuation$27990$1VmeqK g$constructor$27991$1VmeqK)
        ((case-lambda
           ((g$variable$27992$1VmeqK)
            (g$make-let$27817$1VmeqK
              (list g$variable$27992$1VmeqK)
              (list g$continuation$27990$1VmeqK)
              (g$constructor$27991$1VmeqK g$variable$27992$1VmeqK))))
         (g$generate-variable$27821$1VmeqK 'J)))))
   (g$make-let$27817$1VmeqK
     g$make-let$28082$1VmeqK
     (case-lambda
       ((g$variables$27993$1VmeqK
          g$expressions$27994$1VmeqK
          g$body$27995$1VmeqK)
        (cons
          (list
            'case-lambda
            (list g$variables$27993$1VmeqK g$body$27995$1VmeqK))
          g$expressions$27994$1VmeqK))))
   (g$make-assignment$27818$1VmeqK
     g$make-assignment$28083$1VmeqK
     (case-lambda
       ((g$location$27996$1VmeqK
          g$operand$27997$1VmeqK
          g$expression$27998$1VmeqK)
        (list
          'begin
          (list 'set! g$location$27996$1VmeqK g$operand$27997$1VmeqK)
          g$expression$27998$1VmeqK))))
   (g$make-declaration$27819$1VmeqK
     g$make-declaration$28084$1VmeqK
     (case-lambda
       ((g$location$27999$1VmeqK
          g$operand$28000$1VmeqK
          g$expression$28001$1VmeqK)
        (list
          'begin
          (list 'define g$location$27999$1VmeqK g$operand$28000$1VmeqK)
          g$expression$28001$1VmeqK))))
   (g$make-truth-test$27820$1VmeqK
     g$make-truth-test$28085$1VmeqK
     (case-lambda ((g$operand$28002$1VmeqK) g$operand$28002$1VmeqK)))
   (g$generate-variable$27821$1VmeqK
     g$generate-variable$28086$1VmeqK
     (case-lambda ((g$name$28003$1VmeqK) (gensym g$name$28003$1VmeqK))))
   (g$parse$27822$1VmeqK
     g$parse$28087$1VmeqK
     (case-lambda
       ((g$x$28004$1VmeqK)
        (if (pair? g$x$28004$1VmeqK)
          ((case-lambda
             ((g$t$28005$1VmeqK)
              (if (eqv? g$t$28005$1VmeqK 'quote)
                (g$cps/generate-literal$27777$1VmeqK
                  (g$cadr$21200$1VmeqK g$x$28004$1VmeqK))
                (if (eqv? g$t$28005$1VmeqK 'if)
                  (g$cps/generate-conditional$27781$1VmeqK
                    (g$parse$27822$1VmeqK
                      (g$cadr$21200$1VmeqK g$x$28004$1VmeqK))
                    (g$parse$27822$1VmeqK
                      (g$caddr$21206$1VmeqK g$x$28004$1VmeqK))
                    (g$parse$27822$1VmeqK
                      (g$cadddr$21218$1VmeqK g$x$28004$1VmeqK)))
                  (if (eqv? g$t$28005$1VmeqK 'case-lambda)
                    ((case-lambda
                       ((g$d$28006$1VmeqK)
                        (g$cps/generate-abstractions$27779$1VmeqK
                          (g$map$20349$1VmeqK car g$d$28006$1VmeqK)
                          (g$map$20349$1VmeqK
                            (case-lambda
                              ((g$e$28007$1VmeqK)
                               (g$cps/generate-sequence$27785$1VmeqK
                                 (g$map$20349$1VmeqK
                                   g$parse$27822$1VmeqK
                                   (cdr g$e$28007$1VmeqK)))))
                            g$d$28006$1VmeqK))))
                     (cdr g$x$28004$1VmeqK))
                    (if (eqv? g$t$28005$1VmeqK 'letrec)
                      ((case-lambda
                         ((g$bindings$28008$1VmeqK g$body*$28009$1VmeqK)
                          ((case-lambda
                             ((g$lhs*$28010$1VmeqK g$rhs*$28011$1VmeqK)
                              ((case-lambda
                                 ((g$t*$28012$1VmeqK
                                    g$tmps$28013$1VmeqK)
                                  ((case-lambda
                                     ((g$s*$28014$1VmeqK)
                                      (g$parse$27822$1VmeqK
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$28010$1VmeqK
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$28012$1VmeqK
                                                    (append
                                                      g$s*$28014$1VmeqK
                                                      g$body*$28009$1VmeqK)))
                                                g$rhs*$28011$1VmeqK)))
                                          g$tmps$28013$1VmeqK))))
                                   (g$map$20349$1VmeqK
                                     (case-lambda
                                       ((g$i$28015$1VmeqK
                                          g$t$28016$1VmeqK)
                                        (list
                                          'set!
                                          g$i$28015$1VmeqK
                                          g$t$28016$1VmeqK)))
                                     g$lhs*$28010$1VmeqK
                                     g$t*$28012$1VmeqK))))
                               (g$map$20349$1VmeqK
                                 gensym
                                 g$lhs*$28010$1VmeqK)
                               (g$map$20349$1VmeqK
                                 (case-lambda
                                   ((g$x$28017$1VmeqK) 'uninitialized))
                                 g$lhs*$28010$1VmeqK))))
                           (g$map$20349$1VmeqK
                             car
                             g$bindings$28008$1VmeqK)
                           (g$map$20349$1VmeqK
                             g$cadr$21200$1VmeqK
                             g$bindings$28008$1VmeqK))))
                       (g$cadr$21200$1VmeqK g$x$28004$1VmeqK)
                       (g$cddr$21202$1VmeqK g$x$28004$1VmeqK))
                      (if (eqv? g$t$28005$1VmeqK 'letrec*)
                        ((case-lambda
                           ((g$bindings$28018$1VmeqK
                              g$body*$28019$1VmeqK)
                            ((case-lambda
                               ((g$lhs*$28020$1VmeqK
                                  g$rhs*$28021$1VmeqK)
                                (g$cps/generate-recursive*-bind$27783$1VmeqK
                                  g$lhs*$28020$1VmeqK
                                  (g$map$20349$1VmeqK
                                    g$parse$27822$1VmeqK
                                    g$rhs*$28021$1VmeqK)
                                  (g$parse$27822$1VmeqK
                                    (cons
                                      'begin
                                      g$body*$28019$1VmeqK)))))
                             (g$map$20349$1VmeqK
                               car
                               g$bindings$28018$1VmeqK)
                             (g$map$20349$1VmeqK
                               g$cadr$21200$1VmeqK
                               g$bindings$28018$1VmeqK))))
                         (g$cadr$21200$1VmeqK g$x$28004$1VmeqK)
                         (g$cddr$21202$1VmeqK g$x$28004$1VmeqK))
                        (if (eqv? g$t$28005$1VmeqK 'library-letrec*)
                          ((case-lambda
                             ((g$name$28022$1VmeqK g$x$28023$1VmeqK)
                              ((case-lambda
                                 ((g$bindings$28024$1VmeqK
                                    g$body*$28025$1VmeqK)
                                  ((case-lambda
                                     ((g$lhs*$28026$1VmeqK
                                        g$lhs**$28027$1VmeqK
                                        g$rhs*$28028$1VmeqK)
                                      (g$cps/generate-recursive*-library-bind$27784$1VmeqK
                                        g$name$28022$1VmeqK
                                        g$lhs*$28026$1VmeqK
                                        g$lhs**$28027$1VmeqK
                                        (g$map$20349$1VmeqK
                                          g$parse$27822$1VmeqK
                                          g$rhs*$28028$1VmeqK)
                                        (g$parse$27822$1VmeqK
                                          (cons
                                            'begin
                                            g$body*$28025$1VmeqK)))))
                                   (g$map$20349$1VmeqK
                                     car
                                     g$bindings$28024$1VmeqK)
                                   (g$map$20349$1VmeqK
                                     g$cadr$21200$1VmeqK
                                     g$bindings$28024$1VmeqK)
                                   (g$map$20349$1VmeqK
                                     g$caddr$21206$1VmeqK
                                     g$bindings$28024$1VmeqK))))
                               (g$cadr$21200$1VmeqK g$x$28023$1VmeqK)
                               (g$cddr$21202$1VmeqK g$x$28023$1VmeqK))))
                           (g$cadr$21200$1VmeqK g$x$28004$1VmeqK)
                           (cdr g$x$28004$1VmeqK))
                          (if (eqv? g$t$28005$1VmeqK 'begin)
                            (g$cps/generate-sequence$27785$1VmeqK
                              (g$map$20349$1VmeqK
                                g$parse$27822$1VmeqK
                                (cdr g$x$28004$1VmeqK)))
                            (if (eqv? g$t$28005$1VmeqK 'set!)
                              (g$cps/generate-assignment$27786$1VmeqK
                                (g$cadr$21200$1VmeqK g$x$28004$1VmeqK)
                                (g$parse$27822$1VmeqK
                                  (g$caddr$21206$1VmeqK
                                    g$x$28004$1VmeqK)))
                              (if (eqv? g$t$28005$1VmeqK 'define)
                                (g$cps/generate-declaration$27787$1VmeqK
                                  (g$cadr$21200$1VmeqK g$x$28004$1VmeqK)
                                  (g$parse$27822$1VmeqK
                                    (g$caddr$21206$1VmeqK
                                      g$x$28004$1VmeqK)))
                                (begin
                                  '#f
                                  (if (list? g$x$28004$1VmeqK)
                                    (g$cps/generate-combination$27788$1VmeqK
                                      (g$parse$27822$1VmeqK
                                        (car g$x$28004$1VmeqK))
                                      (g$map$20349$1VmeqK
                                        g$parse$27822$1VmeqK
                                        (cdr g$x$28004$1VmeqK)))
                                    (error
                                      'rewrite
                                      '"invalid form ~s ~s"
                                      g$x$28004$1VmeqK
                                      (list?
                                        g$x$28004$1VmeqK)))))))))))))))
           (car g$x$28004$1VmeqK))
          (if (g$symbol?$21181$1VmeqK g$x$28004$1VmeqK)
            (g$cps/generate-reference$27776$1VmeqK g$x$28004$1VmeqK)
            (begin
              '#f
              (g$cps/generate-literal$27777$1VmeqK
                g$x$28004$1VmeqK)))))))
   (g$starts-with?$27823$1VmeqK
     g$starts-with?$28088$1VmeqK
     (case-lambda
       ((g$str$28029$1VmeqK g$sub$28030$1VmeqK)
        (clr-call-internal
          'system.string
          'startswith
          g$str$28029$1VmeqK
          g$sub$28030$1VmeqK))))
   (g$ends-with?$27824$1VmeqK
     g$ends-with?$28089$1VmeqK
     (case-lambda
       ((g$str$28031$1VmeqK g$sub$28032$1VmeqK)
        (clr-call-internal
          'system.string
          'endswith
          g$str$28031$1VmeqK
          g$sub$28032$1VmeqK))))
   (g$clr-generator?$27825$1VmeqK
     g$clr-generator?$28090$1VmeqK
     (case-lambda
       ((g$o$28033$1VmeqK)
        (if (g$symbol?$21181$1VmeqK g$o$28033$1VmeqK)
          (begin
            '#f
            ((case-lambda
               ((g$o$28034$1VmeqK)
                (if (g$starts-with?$27823$1VmeqK
                      g$o$28034$1VmeqK
                      '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$27824$1VmeqK
                      g$o$28034$1VmeqK
                      '"-internal"))
                  '#f)))
             (symbol->string g$o$28033$1VmeqK)))
          '#f))))
   (g$fix-primitives$27826$1VmeqK
     g$fix-primitives$28091$1VmeqK
     (case-lambda
       ((g$e$28035$1VmeqK)
        (if (if (pair? g$e$28035$1VmeqK)
              (begin '#f (list? g$e$28035$1VmeqK))
              '#f)
          ((case-lambda
             ((g$o$28036$1VmeqK)
              (if (eq? g$o$28036$1VmeqK 'quote)
                g$e$28035$1VmeqK
                (if (begin
                      '#f
                      (g$clr-generator?$27825$1VmeqK g$o$28036$1VmeqK))
                  (if (pair? (cdr g$e$28035$1VmeqK))
                    (list
                      (g$fix-primitives$27826$1VmeqK
                        (g$cadr$21200$1VmeqK g$e$28035$1VmeqK))
                      (cons
                        g$o$28036$1VmeqK
                        (g$map$20349$1VmeqK
                          g$fix-primitives$27826$1VmeqK
                          (g$cddr$21202$1VmeqK g$e$28035$1VmeqK))))
                    g$e$28035$1VmeqK)
                  (begin
                    '#f
                    (cons
                      (g$fix-primitives$27826$1VmeqK g$o$28036$1VmeqK)
                      (g$map$20349$1VmeqK
                        g$fix-primitives$27826$1VmeqK
                        (cdr g$e$28035$1VmeqK))))))))
           (car g$e$28035$1VmeqK))
          g$e$28035$1VmeqK))))
   (g$parse->cps$27827$1VmeqK
     g$parse->cps$28092$1VmeqK
     (case-lambda
       ((g$e$28037$1VmeqK g$var$28038$1VmeqK)
        ((g$parse$27822$1VmeqK g$e$28037$1VmeqK)
         (g$variable-continuator$27793$1VmeqK g$var$28038$1VmeqK)))))
   (g$convert->cps$27828$1VmeqK
     g$convert->cps$28093$1VmeqK
     (case-lambda
       ((g$e$28039$1VmeqK g$var$28040$1VmeqK)
        (g$fix-primitives$27826$1VmeqK
          (g$parse->cps$27827$1VmeqK
            g$e$28039$1VmeqK
            g$var$28040$1VmeqK))))))
  (void))

(library-letrec* (ironscheme constant-fold)
  ((g$allow-constant-fold?$28094$1VmeqK
     g$allow-constant-fold?$28109$1VmeqK
     (case-lambda
       ((g$proc$28099$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'get_AllowConstantFold
          g$proc$28099$1VmeqK))))
   (g$set-allow-constant-fold!$28095$1VmeqK
     g$set-allow-constant-fold!$28110$1VmeqK
     (case-lambda
       ((g$proc$28100$1VmeqK g$bool$28101$1VmeqK)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'set_AllowConstantFold
          g$proc$28100$1VmeqK
          g$bool$28101$1VmeqK))))
   (g$enable-constant-fold$28096$1VmeqK
     g$enable-constant-fold$28111$1VmeqK
     (case-lambda
       (g$procs$28102$1VmeqK
        (g$for-each$20350$1VmeqK
          (case-lambda
            ((g$proc$28103$1VmeqK)
             (g$set-allow-constant-fold!$28095$1VmeqK
               g$proc$28103$1VmeqK
               '#t)))
          g$procs$28102$1VmeqK))))
   (g$proc-filter$28097$1VmeqK
     g$proc-filter$28112$1VmeqK
     (case-lambda
       ((g$b$28104$1VmeqK) (eq? 'procedure (cdr g$b$28104$1VmeqK)))))
   (g$enable-constant-fold/env$28098$1VmeqK
     g$enable-constant-fold/env$28113$1VmeqK
     (case-lambda
       (g$import-spec$28105$1VmeqK
        ((case-lambda
           ((g$env$28106$1VmeqK g$env*$28107$1VmeqK)
            ((case-lambda
               ((g$b$28108$1VmeqK)
                (apply
                  g$enable-constant-fold$28096$1VmeqK
                  (g$eval$32912$1VmeqK
                    (cons 'list g$b$28108$1VmeqK)
                    g$env*$28107$1VmeqK))))
             (g$map$20349$1VmeqK
               car
               (g$filter$20336$1VmeqK
                 g$proc-filter$28097$1VmeqK
                 (g$environment-bindings$32904$1VmeqK
                   g$env$28106$1VmeqK))))))
         (apply g$environment$32908$1VmeqK g$import-spec$28105$1VmeqK)
         (apply
           g$environment$32908$1VmeqK
           '(only (rnrs) list)
           g$import-spec$28105$1VmeqK))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$28114$1VmeqK
     g$current-primitive-locations$28159$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda ((g$x$28120$1VmeqK) '#f))
       (case-lambda
         ((g$p$28121$1VmeqK)
          (begin
            (if (not (g$procedure?$21183$1VmeqK g$p$28121$1VmeqK))
              (g$assertion-error$32926$1VmeqK
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$28121$1VmeqK)))))
   (g$mutable?$28115$1VmeqK
     g$mutable?$28160$1VmeqK
     (case-lambda
       ((g$x$28122$1VmeqK)
        (letrec* ((g$simple?$28123$1VmeqK
                    (case-lambda
                      ((g$x$28124$1VmeqK)
                       ((case-lambda
                          ((g$t$28125$1VmeqK)
                           (if g$t$28125$1VmeqK
                             g$t$28125$1VmeqK
                             ((case-lambda
                                ((g$t$28126$1VmeqK)
                                 (if g$t$28126$1VmeqK
                                   g$t$28126$1VmeqK
                                   ((case-lambda
                                      ((g$t$28127$1VmeqK)
                                       (if g$t$28127$1VmeqK
                                         g$t$28127$1VmeqK
                                         ((case-lambda
                                            ((g$t$28128$1VmeqK)
                                             (if g$t$28128$1VmeqK
                                               g$t$28128$1VmeqK
                                               ((case-lambda
                                                  ((g$t$28129$1VmeqK)
                                                   (if g$t$28129$1VmeqK
                                                     g$t$28129$1VmeqK
                                                     ((case-lambda
                                                        ((g$t$28130$1VmeqK)
                                                         (if g$t$28130$1VmeqK
                                                           g$t$28130$1VmeqK
                                                           (begin
                                                             '#f
                                                             (g$number?$22188$1VmeqK
                                                               g$x$28124$1VmeqK)))))
                                                      (g$bytevector?$21180$1VmeqK
                                                        g$x$28124$1VmeqK)))))
                                                (string?
                                                  g$x$28124$1VmeqK)))))
                                          (g$boolean?$21182$1VmeqK
                                            g$x$28124$1VmeqK)))))
                                    (g$symbol?$21181$1VmeqK
                                      g$x$28124$1VmeqK)))))
                              (g$char?$21178$1VmeqK
                                g$x$28124$1VmeqK)))))
                        (null? g$x$28124$1VmeqK))))))
          (not (g$simple?$28123$1VmeqK g$x$28122$1VmeqK))))))
   (g$rewriter$28116$1VmeqK
     g$rewriter$28161$1VmeqK
     (case-lambda
       ((g$quote-hack?$28131$1VmeqK)
        (letrec* ((g$f$28132$1VmeqK
                    (case-lambda
                      ((g$x$28133$1VmeqK)
                       (if (pair? g$x$28133$1VmeqK)
                         ((case-lambda
                            ((g$t$28134$1VmeqK)
                             (if (eqv? g$t$28134$1VmeqK 'quote)
                               (if (if g$quote-hack?$28131$1VmeqK
                                     (begin
                                       '#f
                                       (g$mutable?$28115$1VmeqK
                                         (g$cadr$21200$1VmeqK
                                           g$x$28133$1VmeqK)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$28135$1VmeqK)
                                     (begin
                                       (set-symbol-value!
                                         g$g$28135$1VmeqK
                                         (g$cadr$21200$1VmeqK
                                           g$x$28133$1VmeqK))
                                       g$g$28135$1VmeqK)))
                                  (gensym 'weak-temp))
                                 (begin '#f g$x$28133$1VmeqK))
                               (if (eqv? g$t$28134$1VmeqK 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$20349$1VmeqK
                                     (case-lambda
                                       ((g$x$28136$1VmeqK)
                                        (cons
                                          (car g$x$28136$1VmeqK)
                                          (g$map$20349$1VmeqK
                                            g$f$28132$1VmeqK
                                            (cdr g$x$28136$1VmeqK)))))
                                     (cdr g$x$28133$1VmeqK)))
                                 (if (eqv? g$t$28134$1VmeqK 'lambda)
                                   (g$cons*$20351$1VmeqK
                                     'lambda
                                     (g$cadr$21200$1VmeqK
                                       g$x$28133$1VmeqK)
                                     (g$map$20349$1VmeqK
                                       g$f$28132$1VmeqK
                                       (g$cddr$21202$1VmeqK
                                         g$x$28133$1VmeqK)))
                                   (if (eqv? g$t$28134$1VmeqK 'letrec)
                                     ((case-lambda
                                        ((g$bindings$28137$1VmeqK
                                           g$body*$28138$1VmeqK)
                                         ((case-lambda
                                            ((g$lhs*$28139$1VmeqK
                                               g$rhs*$28140$1VmeqK)
                                             (g$cons*$20351$1VmeqK
                                               'letrec
                                               (g$map$20349$1VmeqK
                                                 list
                                                 g$lhs*$28139$1VmeqK
                                                 (g$map$20349$1VmeqK
                                                   g$f$28132$1VmeqK
                                                   g$rhs*$28140$1VmeqK))
                                               (g$map$20349$1VmeqK
                                                 g$f$28132$1VmeqK
                                                 g$body*$28138$1VmeqK))))
                                          (g$map$20349$1VmeqK
                                            car
                                            g$bindings$28137$1VmeqK)
                                          (g$map$20349$1VmeqK
                                            g$cadr$21200$1VmeqK
                                            g$bindings$28137$1VmeqK))))
                                      (g$cadr$21200$1VmeqK
                                        g$x$28133$1VmeqK)
                                      (g$cddr$21202$1VmeqK
                                        g$x$28133$1VmeqK))
                                     (if (eqv?
                                           g$t$28134$1VmeqK
                                           'letrec*)
                                       ((case-lambda
                                          ((g$bindings$28141$1VmeqK
                                             g$body*$28142$1VmeqK)
                                           ((case-lambda
                                              ((g$lhs*$28143$1VmeqK
                                                 g$rhs*$28144$1VmeqK)
                                               (g$cons*$20351$1VmeqK
                                                 'letrec*
                                                 (g$map$20349$1VmeqK
                                                   list
                                                   g$lhs*$28143$1VmeqK
                                                   (g$map$20349$1VmeqK
                                                     g$f$28132$1VmeqK
                                                     g$rhs*$28144$1VmeqK))
                                                 (g$map$20349$1VmeqK
                                                   g$f$28132$1VmeqK
                                                   g$body*$28142$1VmeqK))))
                                            (g$map$20349$1VmeqK
                                              car
                                              g$bindings$28141$1VmeqK)
                                            (g$map$20349$1VmeqK
                                              g$cadr$21200$1VmeqK
                                              g$bindings$28141$1VmeqK))))
                                        (g$cadr$21200$1VmeqK
                                          g$x$28133$1VmeqK)
                                        (g$cddr$21202$1VmeqK
                                          g$x$28133$1VmeqK))
                                       (if (eqv?
                                             g$t$28134$1VmeqK
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$28145$1VmeqK
                                               g$x$28146$1VmeqK)
                                             ((case-lambda
                                                ((g$bindings$28147$1VmeqK
                                                   g$body*$28148$1VmeqK)
                                                 ((case-lambda
                                                    ((g$lhs*$28149$1VmeqK
                                                       g$lhs**$28150$1VmeqK
                                                       g$rhs*$28151$1VmeqK)
                                                     (g$cons*$20351$1VmeqK
                                                       'library-letrec*
                                                       g$name$28145$1VmeqK
                                                       (g$map$20349$1VmeqK
                                                         list
                                                         g$lhs*$28149$1VmeqK
                                                         g$lhs**$28150$1VmeqK
                                                         (g$map$20349$1VmeqK
                                                           g$f$28132$1VmeqK
                                                           g$rhs*$28151$1VmeqK))
                                                       (g$map$20349$1VmeqK
                                                         g$f$28132$1VmeqK
                                                         g$body*$28148$1VmeqK))))
                                                  (g$map$20349$1VmeqK
                                                    car
                                                    g$bindings$28147$1VmeqK)
                                                  (g$map$20349$1VmeqK
                                                    g$cadr$21200$1VmeqK
                                                    g$bindings$28147$1VmeqK)
                                                  (g$map$20349$1VmeqK
                                                    g$caddr$21206$1VmeqK
                                                    g$bindings$28147$1VmeqK))))
                                              (g$cadr$21200$1VmeqK
                                                g$x$28146$1VmeqK)
                                              (g$cddr$21202$1VmeqK
                                                g$x$28146$1VmeqK))))
                                          (g$cadr$21200$1VmeqK
                                            g$x$28133$1VmeqK)
                                          (cdr g$x$28133$1VmeqK))
                                         (if (eqv?
                                               g$t$28134$1VmeqK
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$20349$1VmeqK
                                               g$f$28132$1VmeqK
                                               (cdr g$x$28133$1VmeqK)))
                                           (if (eqv?
                                                 g$t$28134$1VmeqK
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$21200$1VmeqK
                                                 g$x$28133$1VmeqK)
                                               (g$f$28132$1VmeqK
                                                 (g$caddr$21206$1VmeqK
                                                   g$x$28133$1VmeqK)))
                                             (if (eqv?
                                                   g$t$28134$1VmeqK
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$28152$1VmeqK)
                                                   ((case-lambda
                                                      ((g$t$28153$1VmeqK)
                                                       (if g$t$28153$1VmeqK
                                                         ((case-lambda
                                                            ((g$loc$28154$1VmeqK)
                                                             g$loc$28154$1VmeqK))
                                                          g$t$28153$1VmeqK)
                                                         (begin
                                                           '#f
                                                           g$op$28152$1VmeqK))))
                                                    ((g$current-primitive-locations$28114$1VmeqK)
                                                     g$op$28152$1VmeqK))))
                                                (g$cadr$21200$1VmeqK
                                                  g$x$28133$1VmeqK))
                                               (if (eqv?
                                                     g$t$28134$1VmeqK
                                                     'define)
                                                 g$x$28133$1VmeqK
                                                 (begin
                                                   '#f
                                                   (if (list?
                                                         g$x$28133$1VmeqK)
                                                     (g$map$20349$1VmeqK
                                                       g$f$28132$1VmeqK
                                                       g$x$28133$1VmeqK)
                                                     (error
                                                       'rewrite
                                                       '"invalid form ~s ~s"
                                                       g$x$28133$1VmeqK
                                                       (list?
                                                         g$x$28133$1VmeqK))))))))))))))))
                          (car g$x$28133$1VmeqK))
                         (begin '#f g$x$28133$1VmeqK))))))
          g$f$28132$1VmeqK))))
   (g$expanded->core$28117$1VmeqK
     g$expanded->core$28162$1VmeqK
     (case-lambda
       ((g$x$28155$1VmeqK)
        ((g$rewriter$28116$1VmeqK '#t) g$x$28155$1VmeqK))))
   (g$compile-core-expr$28118$1VmeqK
     g$compile-core-expr$28163$1VmeqK
     (case-lambda
       ((g$x$28156$1VmeqK)
        ((g$rewriter$28116$1VmeqK '#f) g$x$28156$1VmeqK))))
   (g$compile-core-expr-to-port$28119$1VmeqK
     g$compile-core-expr-to-port$28164$1VmeqK
     (case-lambda
       ((g$x$28157$1VmeqK g$p$28158$1VmeqK)
        (g$pretty-print$27775$1VmeqK
          ((g$rewriter$28116$1VmeqK '#f) g$x$28157$1VmeqK)
          g$p$28158$1VmeqK)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$28165$1VmeqK
     g$make-collection$28374$1VmeqK
     (case-lambda
       (()
        ((case-lambda
           ((g$set$28228$1VmeqK)
            (letrec* ((g$set-cons$28229$1VmeqK
                        (case-lambda
                          ((g$x$28233$1VmeqK g$ls$28234$1VmeqK)
                           (if (g$memq$20341$1VmeqK
                                 g$x$28233$1VmeqK
                                 g$ls$28234$1VmeqK)
                             g$ls$28234$1VmeqK
                             (begin
                               '#f
                               (cons
                                 g$x$28233$1VmeqK
                                 g$ls$28234$1VmeqK)))))))
              (case-lambda
                (() g$set$28228$1VmeqK)
                ((g$x$28230$1VmeqK)
                 (set! g$set$28228$1VmeqK
                   (g$set-cons$28229$1VmeqK
                     g$x$28230$1VmeqK
                     g$set$28228$1VmeqK)))
                ((g$x$28231$1VmeqK g$del?$28232$1VmeqK)
                 (if g$del?$28232$1VmeqK
                   (set! g$set$28228$1VmeqK
                     (g$remq$20356$1VmeqK
                       g$x$28231$1VmeqK
                       g$set$28228$1VmeqK))
                   (set! g$set$28228$1VmeqK
                     (g$set-cons$28229$1VmeqK
                       g$x$28231$1VmeqK
                       g$set$28228$1VmeqK))))))))
         '()))))
   (g$current-library-collection$28166$1VmeqK
     g$current-library-collection$28375$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (g$make-collection$28165$1VmeqK)
       (case-lambda
         ((g$x$28235$1VmeqK)
          (begin
            (if (not (g$procedure?$21183$1VmeqK g$x$28235$1VmeqK))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$28235$1VmeqK)
              (void))
            g$x$28235$1VmeqK)))))
   (g$11622$28167$1VmeqK
     g$11622$28376$1VmeqK
     (make-record-type-descriptor
       'library
       '#f
       'g$11625$1VmeqK
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$11624$28168$1VmeqK g$11624$28377$1VmeqK '#f)
   (g$11623$28169$1VmeqK
     g$11623$28378$1VmeqK
     (make-record-constructor-descriptor
       g$11622$28167$1VmeqK
       '#f
       g$11624$28168$1VmeqK))
   (g$library?$28172$1VmeqK
     g$library?$28379$1VmeqK
     (record-predicate g$11622$28167$1VmeqK))
   (g$make-library$28173$1VmeqK
     g$make-library$28380$1VmeqK
     (record-constructor g$11623$28169$1VmeqK))
   (g$library-id$28174$1VmeqK
     g$library-id$28381$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '0))
   (g$library-name$28175$1VmeqK
     g$library-name$28382$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '1))
   (g$library-version$28176$1VmeqK
     g$library-version$28383$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '2))
   (g$library-imp*$28177$1VmeqK
     g$library-imp*$28384$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '3))
   (g$library-vis*$28178$1VmeqK
     g$library-vis*$28385$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '4))
   (g$library-inv*$28179$1VmeqK
     g$library-inv*$28386$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '5))
   (g$library-subst$28180$1VmeqK
     g$library-subst$28387$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '6))
   (g$library-env$28181$1VmeqK
     g$library-env$28388$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '7))
   (g$library-visit-state$28182$1VmeqK
     g$library-visit-state$28389$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '8))
   (g$library-invoke-state$28183$1VmeqK
     g$library-invoke-state$28390$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '9))
   (g$library-visit-code$28184$1VmeqK
     g$library-visit-code$28391$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '10))
   (g$library-invoke-code$28185$1VmeqK
     g$library-invoke-code$28392$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '11))
   (g$library-visible?$28186$1VmeqK
     g$library-visible?$28393$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '12))
   (g$library-source-file-name$28187$1VmeqK
     g$library-source-file-name$28394$1VmeqK
     (record-accessor g$11622$28167$1VmeqK '13))
   (g$set-library-id!$28188$1VmeqK
     g$set-library-id!$28395$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '0))
   (g$set-library-name!$28189$1VmeqK
     g$set-library-name!$28396$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '1))
   (g$set-library-version!$28190$1VmeqK
     g$set-library-version!$28397$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '2))
   (g$set-library-imp*!$28191$1VmeqK
     g$set-library-imp*!$28398$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '3))
   (g$set-library-vis*!$28192$1VmeqK
     g$set-library-vis*!$28399$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '4))
   (g$set-library-inv*!$28193$1VmeqK
     g$set-library-inv*!$28400$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '5))
   (g$set-library-subst!$28194$1VmeqK
     g$set-library-subst!$28401$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '6))
   (g$set-library-env!$28195$1VmeqK
     g$set-library-env!$28402$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '7))
   (g$set-library-visit-state!$28196$1VmeqK
     g$set-library-visit-state!$28403$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '8))
   (g$set-library-invoke-state!$28197$1VmeqK
     g$set-library-invoke-state!$28404$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '9))
   (g$set-library-visit-code!$28198$1VmeqK
     g$set-library-visit-code!$28405$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '10))
   (g$set-library-invoke-code!$28199$1VmeqK
     g$set-library-invoke-code!$28406$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '11))
   (g$set-library-visible?!$28200$1VmeqK
     g$set-library-visible?!$28407$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '12))
   (g$set-library-source-file-name!$28201$1VmeqK
     g$set-library-source-file-name!$28408$1VmeqK
     (record-mutator g$11622$28167$1VmeqK '13))
   (g$rp$28202$1VmeqK
     g$rp$28409$1VmeqK
     (make-record-printer
       'library
       (case-lambda
         ((g$x$28236$1VmeqK g$p$28237$1VmeqK g$wr$28238$1VmeqK)
          (begin
            (if (not (g$library?$28172$1VmeqK g$x$28236$1VmeqK))
              (assertion-violation
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$27356$1VmeqK
                '"#<library ~s>"
                (if (null?
                      (g$library-version$28176$1VmeqK g$x$28236$1VmeqK))
                  (g$library-name$28175$1VmeqK g$x$28236$1VmeqK)
                  (append
                    (g$library-name$28175$1VmeqK g$x$28236$1VmeqK)
                    (list
                      (g$library-version$28176$1VmeqK
                        g$x$28236$1VmeqK)))))
              g$p$28237$1VmeqK))))))
   (g$find-dependencies$28203$1VmeqK
     g$find-dependencies$28410$1VmeqK
     (case-lambda
       ((g$ls$28239$1VmeqK)
        (if (null? g$ls$28239$1VmeqK)
          '()
          (begin
            '#f
            (assertion-violation
              'find-dependencies
              '"cannot handle deps yet"))))))
   (g$find-library-by$28204$1VmeqK
     g$find-library-by$28411$1VmeqK
     (case-lambda
       ((g$pred$28240$1VmeqK)
        ((letrec ((g$f$28241$1VmeqK
                    (case-lambda
                      ((g$ls$28242$1VmeqK)
                       (if (null? g$ls$28242$1VmeqK)
                         '#f
                         (if (g$pred$28240$1VmeqK
                               (car g$ls$28242$1VmeqK))
                           (car g$ls$28242$1VmeqK)
                           (begin
                             '#f
                             (g$f$28241$1VmeqK
                               (cdr g$ls$28242$1VmeqK)))))))))
           g$f$28241$1VmeqK)
         ((g$current-library-collection$28166$1VmeqK))))))
   (g$library-path$28205$1VmeqK
     g$library-path$28412$1VmeqK
     (g$make-parameter$27565$1VmeqK
       '(".")
       (case-lambda
         ((g$x$28243$1VmeqK)
          (if (if (list? g$x$28243$1VmeqK)
                (begin
                  '#f
                  (g$for-all$20347$1VmeqK string? g$x$28243$1VmeqK))
                '#f)
            (g$map$20349$1VmeqK
              (case-lambda ((g$x$28244$1VmeqK) g$x$28244$1VmeqK))
              g$x$28243$1VmeqK)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$28243$1VmeqK))))))
   (g$library-extensions$28206$1VmeqK
     g$library-extensions$28413$1VmeqK
     (g$make-parameter$27565$1VmeqK
       '(".sls" ".ss")
       (case-lambda
         ((g$x$28245$1VmeqK)
          (if (if (list? g$x$28245$1VmeqK)
                (begin
                  '#f
                  (g$for-all$20347$1VmeqK string? g$x$28245$1VmeqK))
                '#f)
            (g$map$20349$1VmeqK
              (case-lambda ((g$x$28246$1VmeqK) g$x$28246$1VmeqK))
              g$x$28245$1VmeqK)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$28245$1VmeqK))))))
   (g$library-name->file-name$28207$1VmeqK
     g$library-name->file-name$28414$1VmeqK
     (case-lambda
       ((g$x$28247$1VmeqK)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$27116$1VmeqK)))
          (case-lambda
            ((g$p$28250$1VmeqK g$extract$28251$1VmeqK)
             ((case-lambda
                ((g$extract$28252$1VmeqK g$p$28253$1VmeqK)
                 (letrec* ((g$display-hex$28254$1VmeqK
                             (case-lambda
                               ((g$n$28262$1VmeqK)
                                (if (g$<=$22212$1VmeqK
                                      '0
                                      g$n$28262$1VmeqK
                                      '9)
                                  (display
                                    g$n$28262$1VmeqK
                                    g$p$28253$1VmeqK)
                                  (begin
                                    '#f
                                    (display
                                      (integer->char
                                        (+ (char->integer '#\A)
                                           (- g$n$28262$1VmeqK '10)))
                                      g$p$28253$1VmeqK)))))))
                   (begin
                     ((letrec ((g$f$28255$1VmeqK
                                 (case-lambda
                                   ((g$ls$28256$1VmeqK)
                                    (if (not (null? g$ls$28256$1VmeqK))
                                      (begin
                                        (display '"/" g$p$28253$1VmeqK)
                                        (g$for-each$20350$1VmeqK
                                          (case-lambda
                                            ((g$c$28257$1VmeqK)
                                             (if ((case-lambda
                                                    ((g$t$28258$1VmeqK)
                                                     (if g$t$28258$1VmeqK
                                                       g$t$28258$1VmeqK
                                                       ((case-lambda
                                                          ((g$t$28259$1VmeqK)
                                                           (if g$t$28259$1VmeqK
                                                             g$t$28259$1VmeqK
                                                             ((case-lambda
                                                                ((g$t$28260$1VmeqK)
                                                                 (if g$t$28260$1VmeqK
                                                                   g$t$28260$1VmeqK
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$20342$1VmeqK
                                                                       g$c$28257$1VmeqK
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$21243$1VmeqK
                                                                '#\0
                                                                g$c$28257$1VmeqK
                                                                '#\9)))))
                                                        (g$char<=?$21243$1VmeqK
                                                          '#\A
                                                          g$c$28257$1VmeqK
                                                          '#\Z)))))
                                                  (g$char<=?$21243$1VmeqK
                                                    '#\a
                                                    g$c$28257$1VmeqK
                                                    '#\z))
                                               (display
                                                 g$c$28257$1VmeqK
                                                 g$p$28253$1VmeqK)
                                               (begin
                                                 '#f
                                                 (display
                                                   '"%"
                                                   g$p$28253$1VmeqK)
                                                 ((case-lambda
                                                    ((g$n$28261$1VmeqK)
                                                     (begin
                                                       (g$display-hex$28254$1VmeqK
                                                         (g$quotient$22963$1VmeqK
                                                           g$n$28261$1VmeqK
                                                           '16))
                                                       (g$display-hex$28254$1VmeqK
                                                         (g$remainder$22964$1VmeqK
                                                           g$n$28261$1VmeqK
                                                           '16)))))
                                                  (char->integer
                                                    g$c$28257$1VmeqK))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$28256$1VmeqK))))
                                        (g$f$28255$1VmeqK
                                          (cdr g$ls$28256$1VmeqK)))
                                      (void))))))
                        g$f$28255$1VmeqK)
                      g$x$28247$1VmeqK)
                     (g$extract$28252$1VmeqK)))))
              g$extract$28251$1VmeqK
              g$p$28250$1VmeqK)))))))
   (g$file-locator$28208$1VmeqK
     g$file-locator$28415$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda
         ((g$x$28263$1VmeqK)
          ((case-lambda
             ((g$str$28264$1VmeqK)
              ((letrec ((g$f$28265$1VmeqK
                          (case-lambda
                            ((g$ls$28266$1VmeqK
                               g$exts$28267$1VmeqK
                               g$failed-list$28268$1VmeqK)
                             (if (null? g$ls$28266$1VmeqK)
                               (g$file-locator-resolution-error$27563$1VmeqK
                                 g$x$28263$1VmeqK
                                 (g$reverse$21198$1VmeqK
                                   g$failed-list$28268$1VmeqK)
                                 ((case-lambda
                                    ((g$ls$28269$1VmeqK)
                                     (if (null? g$ls$28269$1VmeqK)
                                       (error 'library-manager '"BUG")
                                       (cdr g$ls$28269$1VmeqK))))
                                  (g$external-pending-libraries$28214$1VmeqK)))
                               (if (null? g$exts$28267$1VmeqK)
                                 (g$f$28265$1VmeqK
                                   (cdr g$ls$28266$1VmeqK)
                                   (g$library-extensions$28206$1VmeqK)
                                   g$failed-list$28268$1VmeqK)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$name$28270$1VmeqK)
                                       (if (g$file-exists?$21318$1VmeqK
                                             g$name$28270$1VmeqK)
                                         g$name$28270$1VmeqK
                                         (g$f$28265$1VmeqK
                                           g$ls$28266$1VmeqK
                                           (cdr g$exts$28267$1VmeqK)
                                           (cons
                                             g$name$28270$1VmeqK
                                             g$failed-list$28268$1VmeqK)))))
                                    (string-append
                                      (car g$ls$28266$1VmeqK)
                                      g$str$28264$1VmeqK
                                      (car g$exts$28267$1VmeqK))))))))))
                 g$f$28265$1VmeqK)
               (g$library-path$28205$1VmeqK)
               (g$library-extensions$28206$1VmeqK)
               '())))
           (g$library-name->file-name$28207$1VmeqK g$x$28263$1VmeqK))))
       (case-lambda
         ((g$f$28271$1VmeqK)
          (if (g$procedure?$21183$1VmeqK g$f$28271$1VmeqK)
            g$f$28271$1VmeqK
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$28271$1VmeqK))))))
   (g$serialize-all$28209$1VmeqK
     g$serialize-all$28416$1VmeqK
     (case-lambda
       ((g$serialize$28272$1VmeqK g$compile$28273$1VmeqK)
        (letrec* ((g$library-desc$28274$1VmeqK
                    (case-lambda
                      ((g$x$28276$1VmeqK)
                       (list
                         (g$library-id$28174$1VmeqK g$x$28276$1VmeqK)
                         (g$library-name$28175$1VmeqK
                           g$x$28276$1VmeqK))))))
          (g$for-each$20350$1VmeqK
            (case-lambda
              ((g$x$28275$1VmeqK)
               (if (g$library-source-file-name$28187$1VmeqK
                     g$x$28275$1VmeqK)
                 (g$serialize$28272$1VmeqK
                   (g$library-source-file-name$28187$1VmeqK
                     g$x$28275$1VmeqK)
                   (list
                     (g$library-id$28174$1VmeqK g$x$28275$1VmeqK)
                     (g$library-name$28175$1VmeqK g$x$28275$1VmeqK)
                     (g$library-version$28176$1VmeqK g$x$28275$1VmeqK)
                     (g$map$20349$1VmeqK
                       g$library-desc$28274$1VmeqK
                       (g$library-imp*$28177$1VmeqK g$x$28275$1VmeqK))
                     (g$map$20349$1VmeqK
                       g$library-desc$28274$1VmeqK
                       (g$library-vis*$28178$1VmeqK g$x$28275$1VmeqK))
                     (g$map$20349$1VmeqK
                       g$library-desc$28274$1VmeqK
                       (g$library-inv*$28179$1VmeqK g$x$28275$1VmeqK))
                     (g$library-subst$28180$1VmeqK g$x$28275$1VmeqK)
                     (g$library-env$28181$1VmeqK g$x$28275$1VmeqK)
                     (g$compile$28273$1VmeqK
                       (g$library-visit-code$28184$1VmeqK
                         g$x$28275$1VmeqK))
                     (g$compile$28273$1VmeqK
                       (g$library-invoke-code$28185$1VmeqK
                         g$x$28275$1VmeqK))
                     (g$library-visible?$28186$1VmeqK
                       g$x$28275$1VmeqK)))
                 (void))))
            ((g$current-library-collection$28166$1VmeqK)))))))
   (g$current-precompiled-library-loader$28210$1VmeqK
     g$current-precompiled-library-loader$28417$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda ((g$filename$28277$1VmeqK g$sk$28278$1VmeqK) '#f))))
   (g$try-load-from-file$28211$1VmeqK
     g$try-load-from-file$28418$1VmeqK
     (case-lambda
       ((g$filename$28279$1VmeqK)
        ((g$current-precompiled-library-loader$28210$1VmeqK)
         g$filename$28279$1VmeqK
         (case-lambda
           ((g$id$28280$1VmeqK
              g$name$28281$1VmeqK
              g$ver$28282$1VmeqK
              g$imp*$28283$1VmeqK
              g$vis*$28284$1VmeqK
              g$inv*$28285$1VmeqK
              g$exp-subst$28286$1VmeqK
              g$exp-env$28287$1VmeqK
              g$visit-proc$28288$1VmeqK
              g$invoke-proc$28289$1VmeqK
              g$visible?$28290$1VmeqK)
            ((letrec ((g$f$28291$1VmeqK
                        (case-lambda
                          ((g$deps$28292$1VmeqK)
                           (if (null? g$deps$28292$1VmeqK)
                             (begin
                               (g$install-library$28221$1VmeqK
                                 g$id$28280$1VmeqK
                                 g$name$28281$1VmeqK
                                 g$ver$28282$1VmeqK
                                 g$imp*$28283$1VmeqK
                                 g$vis*$28284$1VmeqK
                                 g$inv*$28285$1VmeqK
                                 g$exp-subst$28286$1VmeqK
                                 g$exp-env$28287$1VmeqK
                                 g$visit-proc$28288$1VmeqK
                                 g$invoke-proc$28289$1VmeqK
                                 '#f
                                 '#f
                                 g$visible?$28290$1VmeqK
                                 '#f)
                               '#t)
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$d$28293$1VmeqK)
                                   ((case-lambda
                                      ((g$label$28294$1VmeqK
                                         g$dname$28295$1VmeqK)
                                       ((case-lambda
                                          ((g$l$28296$1VmeqK)
                                           (if (if (g$library?$28172$1VmeqK
                                                     g$l$28296$1VmeqK)
                                                 (begin
                                                   '#f
                                                   (eq? g$label$28294$1VmeqK
                                                        (g$library-id$28174$1VmeqK
                                                          g$l$28296$1VmeqK)))
                                                 '#f)
                                             (g$f$28291$1VmeqK
                                               (cdr g$deps$28292$1VmeqK))
                                             (begin
                                               '#f
                                               (g$library-version-mismatch-warning$27562$1VmeqK
                                                 g$name$28281$1VmeqK
                                                 g$dname$28295$1VmeqK
                                                 g$filename$28279$1VmeqK)
                                               '#f))))
                                        (g$find-library-by-name$28216$1VmeqK
                                          g$dname$28295$1VmeqK))))
                                    (car g$d$28293$1VmeqK)
                                    (g$cadr$21200$1VmeqK
                                      g$d$28293$1VmeqK))))
                                (car g$deps$28292$1VmeqK))))))))
               g$f$28291$1VmeqK)
             (append
               g$imp*$28283$1VmeqK
               g$vis*$28284$1VmeqK
               g$inv*$28285$1VmeqK)))
           (g$others$28297$1VmeqK '#f))))))
   (g$library-loader$28212$1VmeqK
     g$library-loader$28419$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda
         ((g$x$28298$1VmeqK)
          ((case-lambda
             ((g$file-name$28299$1VmeqK)
              (if (not g$file-name$28299$1VmeqK)
                (assertion-violation
                  '#f
                  '"cannot find library"
                  g$x$28298$1VmeqK)
                ((case-lambda
                   ((g$t$28300$1VmeqK)
                    (if g$t$28300$1VmeqK
                      g$t$28300$1VmeqK
                      (begin
                        '#f
                        (begin
                          '#f
                          ((g$current-library-expander$28213$1VmeqK)
                           (g$read-library-source-file$27564$1VmeqK
                             g$file-name$28299$1VmeqK)
                           g$file-name$28299$1VmeqK
                           (case-lambda
                             ((g$name$28301$1VmeqK)
                              (if (not (equal?
                                         g$name$28301$1VmeqK
                                         g$x$28298$1VmeqK))
                                (assertion-violation
                                  'import
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$open-string-output-port$27116$1VmeqK)))
                                    (case-lambda
                                      ((g$p$28304$1VmeqK
                                         g$e$28305$1VmeqK)
                                       ((case-lambda
                                          ((g$e$28306$1VmeqK
                                             g$p$28307$1VmeqK)
                                           (begin
                                             (display
                                               '"expected to find library "
                                               g$p$28307$1VmeqK)
                                             (write
                                               g$x$28298$1VmeqK
                                               g$p$28307$1VmeqK)
                                             (display
                                               '" in file "
                                               g$p$28307$1VmeqK)
                                             (display
                                               g$file-name$28299$1VmeqK
                                               g$p$28307$1VmeqK)
                                             (display
                                               '", found "
                                               g$p$28307$1VmeqK)
                                             (write
                                               g$name$28301$1VmeqK
                                               g$p$28307$1VmeqK)
                                             (display
                                               '" instead"
                                               g$p$28307$1VmeqK)
                                             (g$e$28306$1VmeqK))))
                                        g$e$28305$1VmeqK
                                        g$p$28304$1VmeqK)))))
                                (void))))))))))
                 (g$try-load-from-file$28211$1VmeqK
                   g$file-name$28299$1VmeqK)))))
           ((g$file-locator$28208$1VmeqK) g$x$28298$1VmeqK))))
       (case-lambda
         ((g$f$28308$1VmeqK)
          (if (g$procedure?$21183$1VmeqK g$f$28308$1VmeqK)
            g$f$28308$1VmeqK
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$28308$1VmeqK))))))
   (g$current-library-expander$28213$1VmeqK
     g$current-library-expander$28420$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda
         ((g$x$28309$1VmeqK)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$28310$1VmeqK)
          (if (g$procedure?$21183$1VmeqK g$f$28310$1VmeqK)
            g$f$28310$1VmeqK
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$28310$1VmeqK))))))
   (g$external-pending-libraries$28214$1VmeqK
     g$external-pending-libraries$28421$1VmeqK
     (g$make-parameter$27565$1VmeqK '()))
   (g$find-external-library$28215$1VmeqK
     g$find-external-library$28422$1VmeqK
     (case-lambda
       ((g$name$28311$1VmeqK)
        (begin
          (if (g$member$20343$1VmeqK
                g$name$28311$1VmeqK
                (g$external-pending-libraries$28214$1VmeqK))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$28311$1VmeqK)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$28314$1VmeqK
                g$external-pending-libraries$28315$1VmeqK)
              ((case-lambda
                 ((g$swap$28316$1VmeqK)
                  (dynamic-wind
                    g$swap$28316$1VmeqK
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$28212$1VmeqK)
                          g$name$28311$1VmeqK)
                         ((case-lambda
                            ((g$t$28317$1VmeqK)
                             (if g$t$28317$1VmeqK
                               g$t$28317$1VmeqK
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$28311$1VmeqK)))))
                          (g$find-library-by$28204$1VmeqK
                            (case-lambda
                              ((g$x$28318$1VmeqK)
                               (equal?
                                 (g$library-name$28175$1VmeqK
                                   g$x$28318$1VmeqK)
                                 g$name$28311$1VmeqK))))))))
                    g$swap$28316$1VmeqK)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$28319$1VmeqK)
                      (begin
                        (g$external-pending-libraries$28314$1VmeqK
                          g$external-pending-libraries$28315$1VmeqK)
                        (set! g$external-pending-libraries$28315$1VmeqK
                          g$t$28319$1VmeqK))))
                   (g$external-pending-libraries$28314$1VmeqK)))))))
           g$external-pending-libraries$28214$1VmeqK
           (cons
             g$name$28311$1VmeqK
             (g$external-pending-libraries$28214$1VmeqK)))))))
   (g$find-library-by-name$28216$1VmeqK
     g$find-library-by-name$28423$1VmeqK
     (case-lambda
       ((g$name$28320$1VmeqK)
        ((case-lambda
           ((g$t$28321$1VmeqK)
            (if g$t$28321$1VmeqK
              g$t$28321$1VmeqK
              (begin
                '#f
                (g$find-external-library$28215$1VmeqK
                  g$name$28320$1VmeqK)))))
         (g$find-library-by$28204$1VmeqK
           (case-lambda
             ((g$x$28322$1VmeqK)
              (equal?
                (g$library-name$28175$1VmeqK g$x$28322$1VmeqK)
                g$name$28320$1VmeqK))))))))
   (g$uninstall-library$28217$1VmeqK
     g$uninstall-library$28424$1VmeqK
     (case-lambda
       ((g$name$28323$1VmeqK g$err?$28324$1VmeqK)
        (letrec* ((g$who$28325$1VmeqK 'uninstall-library))
          ((case-lambda
             ((g$lib$28326$1VmeqK)
              (begin
                (if (if g$err?$28324$1VmeqK
                      (begin '#f (not g$lib$28326$1VmeqK))
                      '#f)
                  (assertion-violation
                    g$who$28325$1VmeqK
                    '"library not installed"
                    g$name$28323$1VmeqK)
                  (void))
                ((g$current-library-collection$28166$1VmeqK)
                 g$lib$28326$1VmeqK
                 '#t)
                (g$for-each$20350$1VmeqK
                  (case-lambda
                    ((g$x$28327$1VmeqK)
                     ((case-lambda
                        ((g$label$28328$1VmeqK g$binding$28329$1VmeqK)
                         (begin
                           (remove-location g$label$28328$1VmeqK)
                           (if (g$memq$20341$1VmeqK
                                 (car g$binding$28329$1VmeqK)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$28329$1VmeqK))
                             (void)))))
                      (car g$x$28327$1VmeqK)
                      (cdr g$x$28327$1VmeqK))))
                  (g$library-env$28181$1VmeqK g$lib$28326$1VmeqK)))))
           (g$find-library-by$28204$1VmeqK
             (case-lambda
               ((g$x$28330$1VmeqK)
                (equal?
                  (g$library-name$28175$1VmeqK g$x$28330$1VmeqK)
                  g$name$28323$1VmeqK)))))))
       ((g$name$28331$1VmeqK)
        (g$uninstall-library$28217$1VmeqK g$name$28331$1VmeqK '#t))))
   (g$library-exists?$28218$1VmeqK
     g$library-exists?$28425$1VmeqK
     (case-lambda
       ((g$name$28332$1VmeqK)
        (if (g$find-library-by$28204$1VmeqK
              (case-lambda
                ((g$x$28333$1VmeqK)
                 (equal?
                   (g$library-name$28175$1VmeqK g$x$28333$1VmeqK)
                   g$name$28332$1VmeqK))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$28219$1VmeqK
     g$find-library-by-spec/die$28426$1VmeqK
     (case-lambda
       ((g$spec$28334$1VmeqK)
        ((case-lambda
           ((g$id$28335$1VmeqK)
            ((case-lambda
               ((g$t$28336$1VmeqK)
                (if g$t$28336$1VmeqK
                  g$t$28336$1VmeqK
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$28334$1VmeqK)))))
             (g$find-library-by$28204$1VmeqK
               (case-lambda
                 ((g$x$28337$1VmeqK)
                  (eq? g$id$28335$1VmeqK
                       (g$library-id$28174$1VmeqK
                         g$x$28337$1VmeqK))))))))
         (car g$spec$28334$1VmeqK)))))
   (g$install-library-record$28220$1VmeqK
     g$install-library-record$28427$1VmeqK
     (case-lambda
       ((g$lib$28338$1VmeqK)
        (begin
          ((case-lambda
             ((g$exp-env$28339$1VmeqK)
              (g$for-each$20350$1VmeqK
                (case-lambda
                  ((g$x$28340$1VmeqK)
                   ((case-lambda
                      ((g$label$28341$1VmeqK g$binding$28342$1VmeqK)
                       ((case-lambda
                          ((g$binding$28343$1VmeqK)
                           (g$set-label-binding!$27568$1VmeqK
                             g$label$28341$1VmeqK
                             g$binding$28343$1VmeqK)))
                        ((case-lambda
                           ((g$t$28344$1VmeqK)
                            (if (eqv? g$t$28344$1VmeqK 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$28338$1VmeqK
                                  (cdr g$binding$28342$1VmeqK)))
                              (if (eqv? g$t$28344$1VmeqK 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$28338$1VmeqK
                                    (cdr g$binding$28342$1VmeqK)))
                                (if (eqv?
                                      g$t$28344$1VmeqK
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$28338$1VmeqK
                                      (cdr g$binding$28342$1VmeqK)))
                                  (if (eqv?
                                        g$t$28344$1VmeqK
                                        'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$28338$1VmeqK
                                        (cdr g$binding$28342$1VmeqK)))
                                    (begin
                                      '#f
                                      g$binding$28342$1VmeqK)))))))
                         (car g$binding$28342$1VmeqK)))))
                    (car g$x$28340$1VmeqK)
                    (cdr g$x$28340$1VmeqK))))
                g$exp-env$28339$1VmeqK)))
           (g$library-env$28181$1VmeqK g$lib$28338$1VmeqK))
          ((g$current-library-collection$28166$1VmeqK)
           g$lib$28338$1VmeqK)))))
   (g$install-library$28221$1VmeqK
     g$install-library$28428$1VmeqK
     (case-lambda
       ((g$id$28345$1VmeqK
          g$name$28346$1VmeqK
          g$ver$28347$1VmeqK
          g$imp*$28348$1VmeqK
          g$vis*$28349$1VmeqK
          g$inv*$28350$1VmeqK
          g$exp-subst$28351$1VmeqK
          g$exp-env$28352$1VmeqK
          g$visit-proc$28353$1VmeqK
          g$invoke-proc$28354$1VmeqK
          g$visit-code$28355$1VmeqK
          g$invoke-code$28356$1VmeqK
          g$visible?$28357$1VmeqK
          g$source-file-name$28358$1VmeqK)
        ((case-lambda
           ((g$imp-lib*$28359$1VmeqK
              g$vis-lib*$28360$1VmeqK
              g$inv-lib*$28361$1VmeqK)
            (begin
              (if (not (if (g$symbol?$21181$1VmeqK g$id$28345$1VmeqK)
                         (if (list? g$name$28346$1VmeqK)
                           (begin '#f (list? g$ver$28347$1VmeqK))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$28345$1VmeqK
                  g$name$28346$1VmeqK
                  g$ver$28347$1VmeqK)
                (void))
              (if (g$library-exists?$28218$1VmeqK g$name$28346$1VmeqK)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$28346$1VmeqK)
                (void))
              ((case-lambda
                 ((g$lib$28362$1VmeqK)
                  (g$install-library-record$28220$1VmeqK
                    g$lib$28362$1VmeqK)))
               (g$make-library$28173$1VmeqK
                 g$id$28345$1VmeqK
                 g$name$28346$1VmeqK
                 g$ver$28347$1VmeqK
                 g$imp-lib*$28359$1VmeqK
                 g$vis-lib*$28360$1VmeqK
                 g$inv-lib*$28361$1VmeqK
                 g$exp-subst$28351$1VmeqK
                 g$exp-env$28352$1VmeqK
                 g$visit-proc$28353$1VmeqK
                 g$invoke-proc$28354$1VmeqK
                 g$visit-code$28355$1VmeqK
                 g$invoke-code$28356$1VmeqK
                 g$visible?$28357$1VmeqK
                 g$source-file-name$28358$1VmeqK)))))
         (g$map$20349$1VmeqK
           g$find-library-by-spec/die$28219$1VmeqK
           g$imp*$28348$1VmeqK)
         (g$map$20349$1VmeqK
           g$find-library-by-spec/die$28219$1VmeqK
           g$vis*$28349$1VmeqK)
         (g$map$20349$1VmeqK
           g$find-library-by-spec/die$28219$1VmeqK
           g$inv*$28350$1VmeqK)))))
   (g$imported-label->binding$28222$1VmeqK
     g$imported-label->binding$28429$1VmeqK
     (case-lambda
       ((g$lab$28363$1VmeqK)
        (g$label-binding$27569$1VmeqK g$lab$28363$1VmeqK))))
   (g$invoke-library$28223$1VmeqK
     g$invoke-library$28430$1VmeqK
     (case-lambda
       ((g$lib$28364$1VmeqK)
        ((case-lambda
           ((g$invoke$28365$1VmeqK)
            (if (g$procedure?$21183$1VmeqK g$invoke$28365$1VmeqK)
              (begin
                (g$set-library-invoke-state!$28197$1VmeqK
                  g$lib$28364$1VmeqK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$28364$1VmeqK))))
                (g$for-each$20350$1VmeqK
                  g$invoke-library$28223$1VmeqK
                  (g$library-inv*$28179$1VmeqK g$lib$28364$1VmeqK))
                (g$set-library-invoke-state!$28197$1VmeqK
                  g$lib$28364$1VmeqK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$28364$1VmeqK))))
                (g$invoke$28365$1VmeqK)
                (g$set-library-invoke-state!$28197$1VmeqK
                  g$lib$28364$1VmeqK
                  '#t))
              (void))))
         (g$library-invoke-state$28183$1VmeqK g$lib$28364$1VmeqK)))))
   (g$visit-library$28224$1VmeqK
     g$visit-library$28431$1VmeqK
     (case-lambda
       ((g$lib$28366$1VmeqK)
        ((case-lambda
           ((g$visit$28367$1VmeqK)
            (if (g$procedure?$21183$1VmeqK g$visit$28367$1VmeqK)
              (begin
                (g$set-library-visit-state!$28196$1VmeqK
                  g$lib$28366$1VmeqK
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$28366$1VmeqK))))
                (g$for-each$20350$1VmeqK
                  g$invoke-library$28223$1VmeqK
                  (g$library-vis*$28178$1VmeqK g$lib$28366$1VmeqK))
                (g$set-library-visit-state!$28196$1VmeqK
                  g$lib$28366$1VmeqK
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$28366$1VmeqK))))
                (g$visit$28367$1VmeqK)
                (g$set-library-visit-state!$28196$1VmeqK
                  g$lib$28366$1VmeqK
                  '#t))
              (void))))
         (g$library-visit-state$28182$1VmeqK g$lib$28366$1VmeqK)))))
   (g$invoke-library-by-spec$28225$1VmeqK
     g$invoke-library-by-spec$28432$1VmeqK
     (case-lambda
       ((g$spec$28368$1VmeqK)
        (g$invoke-library$28223$1VmeqK
          (g$find-library-by-spec/die$28219$1VmeqK
            g$spec$28368$1VmeqK)))))
   (g$installed-libraries$28226$1VmeqK
     g$installed-libraries$28433$1VmeqK
     (case-lambda
       ((g$all?$28369$1VmeqK)
        ((letrec ((g$f$28370$1VmeqK
                    (case-lambda
                      ((g$ls$28371$1VmeqK)
                       (if (null? g$ls$28371$1VmeqK)
                         '()
                         (if ((case-lambda
                                ((g$t$28372$1VmeqK)
                                 (if g$t$28372$1VmeqK
                                   g$t$28372$1VmeqK
                                   (begin
                                     '#f
                                     (g$library-visible?$28186$1VmeqK
                                       (car g$ls$28371$1VmeqK))))))
                              g$all?$28369$1VmeqK)
                           (cons
                             (g$library-name$28175$1VmeqK
                               (car g$ls$28371$1VmeqK))
                             (g$f$28370$1VmeqK (cdr g$ls$28371$1VmeqK)))
                           (begin
                             '#f
                             (g$f$28370$1VmeqK
                               (cdr g$ls$28371$1VmeqK)))))))))
           g$f$28370$1VmeqK)
         ((g$current-library-collection$28166$1VmeqK))))
       (() (g$installed-libraries$28226$1VmeqK '#f))))
   (g$library-spec$28227$1VmeqK
     g$library-spec$28434$1VmeqK
     (case-lambda
       ((g$x$28373$1VmeqK)
        (begin
          (if (not (g$library?$28172$1VmeqK g$x$28373$1VmeqK))
            (assertion-violation
              'library-spec
              '"not a library"
              g$x$28373$1VmeqK)
            (void))
          (list
            (g$library-id$28174$1VmeqK g$x$28373$1VmeqK)
            (g$library-name$28175$1VmeqK g$x$28373$1VmeqK)
            (g$library-version$28176$1VmeqK g$x$28373$1VmeqK)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$28435$1VmeqK
     g$build-global-define$28645$1VmeqK
     (case-lambda ((g$x$28616$1VmeqK) (g$build-void$28612$1VmeqK))))
   (g$build-lambda$28546$1VmeqK
     g$build-lambda$28646$1VmeqK
     (case-lambda
       ((g$ae$28617$1VmeqK g$vars$28618$1VmeqK g$exp$28619$1VmeqK)
        (list
          'case-lambda
          (list g$vars$28618$1VmeqK g$exp$28619$1VmeqK)))))
   (g$build-case-lambda$28547$1VmeqK
     g$build-case-lambda$28647$1VmeqK
     (case-lambda
       ((g$ae$28620$1VmeqK g$vars*$28621$1VmeqK g$exp*$28622$1VmeqK)
        (cons
          'case-lambda
          (g$map$20349$1VmeqK
            list
            g$vars*$28621$1VmeqK
            g$exp*$28622$1VmeqK)))))
   (g$build-let$28548$1VmeqK
     g$build-let$28648$1VmeqK
     (case-lambda
       ((g$ae$28623$1VmeqK
          g$lhs*$28624$1VmeqK
          g$rhs*$28625$1VmeqK
          g$body$28626$1VmeqK)
        (cons
          (g$build-lambda$28546$1VmeqK
            g$ae$28623$1VmeqK
            g$lhs*$28624$1VmeqK
            g$body$28626$1VmeqK)
          g$rhs*$28625$1VmeqK))))
   (g$build-sequence$28611$1VmeqK
     g$build-sequence$28649$1VmeqK
     (case-lambda
       ((g$ae$28627$1VmeqK g$exps$28628$1VmeqK)
        ((letrec ((g$loop$28629$1VmeqK
                    (case-lambda
                      ((g$exps$28630$1VmeqK)
                       (if (null? (cdr g$exps$28630$1VmeqK))
                         (car g$exps$28630$1VmeqK)
                         (if (equal?
                               (car g$exps$28630$1VmeqK)
                               (g$build-void$28612$1VmeqK))
                           (g$loop$28629$1VmeqK
                             (cdr g$exps$28630$1VmeqK))
                           (cons 'begin g$exps$28630$1VmeqK)))))))
           g$loop$28629$1VmeqK)
         g$exps$28628$1VmeqK))))
   (g$build-void$28612$1VmeqK
     g$build-void$28650$1VmeqK
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$28613$1VmeqK
     g$build-letrec$28651$1VmeqK
     (case-lambda
       ((g$ae$28631$1VmeqK
          g$vars$28632$1VmeqK
          g$val-exps$28633$1VmeqK
          g$body-exp$28634$1VmeqK)
        (if (null? g$vars$28632$1VmeqK)
          g$body-exp$28634$1VmeqK
          (list
            'letrec
            (g$map$20349$1VmeqK
              list
              g$vars$28632$1VmeqK
              g$val-exps$28633$1VmeqK)
            g$body-exp$28634$1VmeqK)))))
   (g$build-letrec*$28614$1VmeqK
     g$build-letrec*$28652$1VmeqK
     (case-lambda
       ((g$ae$28635$1VmeqK
          g$vars$28636$1VmeqK
          g$val-exps$28637$1VmeqK
          g$body-exp$28638$1VmeqK)
        (if (null? g$vars$28636$1VmeqK)
          g$body-exp$28638$1VmeqK
          (begin
            '#f
            (list
              'letrec*
              (g$map$20349$1VmeqK
                list
                g$vars$28636$1VmeqK
                g$val-exps$28637$1VmeqK)
              g$body-exp$28638$1VmeqK))))))
   (g$build-library-letrec*$28615$1VmeqK
     g$build-library-letrec*$28653$1VmeqK
     (case-lambda
       ((g$ae$28639$1VmeqK
          g$name$28640$1VmeqK
          g$vars$28641$1VmeqK
          g$locs$28642$1VmeqK
          g$val-exps$28643$1VmeqK
          g$body-exp$28644$1VmeqK)
        (list
          'library-letrec*
          g$name$28640$1VmeqK
          (g$map$20349$1VmeqK
            list
            g$vars$28641$1VmeqK
            g$locs$28642$1VmeqK
            g$val-exps$28643$1VmeqK)
          g$body-exp$28644$1VmeqK)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$28654$1VmeqK
     g$set-cons$32665$1VmeqK
     (case-lambda
       ((g$x$29350$1VmeqK g$ls$29351$1VmeqK)
        (if (g$memq$20341$1VmeqK g$x$29350$1VmeqK g$ls$29351$1VmeqK)
          g$ls$29351$1VmeqK
          (begin '#f (cons g$x$29350$1VmeqK g$ls$29351$1VmeqK))))))
   (g$set-union$28655$1VmeqK
     g$set-union$32666$1VmeqK
     (case-lambda
       ((g$ls1$29352$1VmeqK g$ls2$29353$1VmeqK)
        (if (null? g$ls1$29352$1VmeqK)
          g$ls2$29353$1VmeqK
          (if (g$memq$20341$1VmeqK
                (car g$ls1$29352$1VmeqK)
                g$ls2$29353$1VmeqK)
            (g$set-union$28655$1VmeqK
              (cdr g$ls1$29352$1VmeqK)
              g$ls2$29353$1VmeqK)
            (begin
              '#f
              (cons
                (car g$ls1$29352$1VmeqK)
                (g$set-union$28655$1VmeqK
                  (cdr g$ls1$29352$1VmeqK)
                  g$ls2$29353$1VmeqK))))))))
   (g$top-mark*$28657$1VmeqK g$top-mark*$32667$1VmeqK '(top))
   (g$top-marked?$28658$1VmeqK
     g$top-marked?$32668$1VmeqK
     (case-lambda
       ((g$m*$29354$1VmeqK)
        (g$memq$20341$1VmeqK 'top g$m*$29354$1VmeqK))))
   (g$gen-lexical$28659$1VmeqK
     g$gen-lexical$32669$1VmeqK
     (case-lambda
       ((g$sym$29355$1VmeqK)
        (if (g$symbol?$21181$1VmeqK g$sym$29355$1VmeqK)
          (gensym g$sym$29355$1VmeqK)
          (if (g$stx?$28696$1VmeqK g$sym$29355$1VmeqK)
            (g$gen-lexical$28659$1VmeqK
              (g$id->sym$28725$1VmeqK g$sym$29355$1VmeqK))
            (begin
              '#f
              (assertion-violation
                'gen-lexical
                '"BUG: invalid arg"
                g$sym$29355$1VmeqK)))))))
   (g$gen-global$28660$1VmeqK
     g$gen-global$32670$1VmeqK
     (case-lambda
       ((g$x$29356$1VmeqK)
        (g$gen-lexical$28659$1VmeqK g$x$29356$1VmeqK))))
   (g$gen-label$28661$1VmeqK
     g$gen-label$32671$1VmeqK
     (case-lambda ((g$_$29357$1VmeqK) (gensym))))
   (g$gen-top-level-label$28662$1VmeqK
     g$gen-top-level-label$32672$1VmeqK
     (case-lambda
       ((g$id$29358$1VmeqK g$rib$29359$1VmeqK)
        (letrec* ((g$find$29360$1VmeqK
                    (case-lambda
                      ((g$sym$29366$1VmeqK
                         g$mark*$29367$1VmeqK
                         g$sym*$29368$1VmeqK
                         g$mark**$29369$1VmeqK
                         g$label*$29370$1VmeqK)
                       (if (pair? g$sym*$29368$1VmeqK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$29366$1VmeqK
                                        (car g$sym*$29368$1VmeqK))
                                 (begin
                                   '#f
                                   (g$same-marks?$28726$1VmeqK
                                     g$mark*$29367$1VmeqK
                                     (car g$mark**$29369$1VmeqK)))
                                 '#f)
                             (car g$label*$29370$1VmeqK)
                             (g$find$29360$1VmeqK
                               g$sym$29366$1VmeqK
                               g$mark*$29367$1VmeqK
                               (cdr g$sym*$29368$1VmeqK)
                               (cdr g$mark**$29369$1VmeqK)
                               (cdr g$label*$29370$1VmeqK))))
                         '#f)))))
          ((case-lambda
             ((g$sym$29361$1VmeqK g$mark*$29362$1VmeqK)
              ((case-lambda
                 ((g$sym*$29363$1VmeqK)
                  ((case-lambda
                     ((g$t$29364$1VmeqK)
                      (if g$t$29364$1VmeqK
                        ((case-lambda
                           ((g$label$29365$1VmeqK)
                            (if (g$imported-label->binding$28429$1VmeqK
                                  g$label$29365$1VmeqK)
                              (gensym)
                              (begin '#f g$label$29365$1VmeqK))))
                         g$t$29364$1VmeqK)
                        (begin '#f (gensym)))))
                   (if (g$memq$20341$1VmeqK
                         g$sym$29361$1VmeqK
                         (g$rib-sym*$28672$1VmeqK g$rib$29359$1VmeqK))
                     (begin
                       '#f
                       (g$find$29360$1VmeqK
                         g$sym$29361$1VmeqK
                         g$mark*$29362$1VmeqK
                         g$sym*$29363$1VmeqK
                         (g$rib-mark**$28673$1VmeqK g$rib$29359$1VmeqK)
                         (g$rib-label*$28674$1VmeqK
                           g$rib$29359$1VmeqK)))
                     '#f))))
               (g$rib-sym*$28672$1VmeqK g$rib$29359$1VmeqK))))
           (g$id->sym$28725$1VmeqK g$id$29358$1VmeqK)
           (g$stx-mark*$28699$1VmeqK g$id$29358$1VmeqK))))))
   (g$gen-define-label+loc$28663$1VmeqK
     g$gen-define-label+loc$32673$1VmeqK
     (case-lambda
       ((g$id$29371$1VmeqK g$rib$29372$1VmeqK g$sd?$29373$1VmeqK)
        (if g$sd?$29373$1VmeqK
          (values
            (gensym)
            (g$gen-lexical$28659$1VmeqK g$id$29371$1VmeqK))
          ((case-lambda
             ((g$env$29374$1VmeqK)
              ((case-lambda
                 ((g$label$29375$1VmeqK g$locs$29376$1VmeqK)
                  (values
                    g$label$29375$1VmeqK
                    ((case-lambda
                       ((g$t$29377$1VmeqK)
                        (if g$t$29377$1VmeqK
                          (cdr g$t$29377$1VmeqK)
                          (begin
                            '#f
                            ((case-lambda
                               ((g$loc$29378$1VmeqK)
                                (begin
                                  (g$set-interaction-env-locs!$29312$1VmeqK
                                    g$env$29374$1VmeqK
                                    (cons
                                      (cons
                                        g$label$29375$1VmeqK
                                        g$loc$29378$1VmeqK)
                                      g$locs$29376$1VmeqK))
                                  g$loc$29378$1VmeqK)))
                             (g$gen-lexical$28659$1VmeqK
                               g$id$29371$1VmeqK))))))
                     (g$assq$20337$1VmeqK
                       g$label$29375$1VmeqK
                       g$locs$29376$1VmeqK)))))
               (g$gen-top-level-label$28662$1VmeqK
                 g$id$29371$1VmeqK
                 g$rib$29372$1VmeqK)
               (g$interaction-env-locs$29309$1VmeqK
                 g$env$29374$1VmeqK))))
           (g$top-level-context$29349$1VmeqK))))))
   (g$gen-define-label$28664$1VmeqK
     g$gen-define-label$32674$1VmeqK
     (case-lambda
       ((g$id$29379$1VmeqK g$rib$29380$1VmeqK g$sd?$29381$1VmeqK)
        (if g$sd?$29381$1VmeqK
          (gensym)
          (g$gen-top-level-label$28662$1VmeqK
            g$id$29379$1VmeqK
            g$rib$29380$1VmeqK)))))
   (g$11949$28665$1VmeqK
     g$11949$32675$1VmeqK
     (make-record-type-descriptor
       'rib
       '#f
       'g$11952$1VmeqK
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$11951$28666$1VmeqK g$11951$32676$1VmeqK '#f)
   (g$11950$28667$1VmeqK
     g$11950$32677$1VmeqK
     (make-record-constructor-descriptor
       g$11949$28665$1VmeqK
       '#f
       g$11951$28666$1VmeqK))
   (g$rib?$28670$1VmeqK
     g$rib?$32678$1VmeqK
     (record-predicate g$11949$28665$1VmeqK))
   (g$make-rib$28671$1VmeqK
     g$make-rib$32679$1VmeqK
     (record-constructor g$11950$28667$1VmeqK))
   (g$rib-sym*$28672$1VmeqK
     g$rib-sym*$32680$1VmeqK
     (record-accessor g$11949$28665$1VmeqK '0))
   (g$rib-mark**$28673$1VmeqK
     g$rib-mark**$32681$1VmeqK
     (record-accessor g$11949$28665$1VmeqK '1))
   (g$rib-label*$28674$1VmeqK
     g$rib-label*$32682$1VmeqK
     (record-accessor g$11949$28665$1VmeqK '2))
   (g$rib-sealed/freq$28675$1VmeqK
     g$rib-sealed/freq$32683$1VmeqK
     (record-accessor g$11949$28665$1VmeqK '3))
   (g$rib-cache$28676$1VmeqK
     g$rib-cache$32684$1VmeqK
     (record-accessor g$11949$28665$1VmeqK '4))
   (g$set-rib-sym*!$28677$1VmeqK
     g$set-rib-sym*!$32685$1VmeqK
     (record-mutator g$11949$28665$1VmeqK '0))
   (g$set-rib-mark**!$28678$1VmeqK
     g$set-rib-mark**!$32686$1VmeqK
     (record-mutator g$11949$28665$1VmeqK '1))
   (g$set-rib-label*!$28679$1VmeqK
     g$set-rib-label*!$32687$1VmeqK
     (record-mutator g$11949$28665$1VmeqK '2))
   (g$set-rib-sealed/freq!$28680$1VmeqK
     g$set-rib-sealed/freq!$32688$1VmeqK
     (record-mutator g$11949$28665$1VmeqK '3))
   (g$set-rib-cache!$28681$1VmeqK
     g$set-rib-cache!$32689$1VmeqK
     (record-mutator g$11949$28665$1VmeqK '4))
   (g$make-empty-rib$28682$1VmeqK
     g$make-empty-rib$32690$1VmeqK
     (case-lambda (() (g$make-rib$28671$1VmeqK '() '() '() '#f '#f))))
   (g$make-cache-rib$28683$1VmeqK
     g$make-cache-rib$32691$1VmeqK
     (case-lambda
       (()
        (g$make-rib$28671$1VmeqK
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$21297$1VmeqK)))))
   (g$find-label$28684$1VmeqK
     g$find-label$32692$1VmeqK
     (case-lambda
       ((g$rib$29382$1VmeqK g$sym$29383$1VmeqK g$mark*$29384$1VmeqK)
        ((case-lambda
           ((g$ht$29385$1VmeqK)
            (if g$ht$29385$1VmeqK
              (begin
                '#f
                ((case-lambda
                   ((g$cv$29386$1VmeqK)
                    ((case-lambda
                       ((g$t$29387$1VmeqK)
                        (if g$t$29387$1VmeqK
                          (cdr g$t$29387$1VmeqK)
                          (begin '#f '#f))))
                     (if g$cv$29386$1VmeqK
                       (begin
                         '#f
                         (g$assp$20340$1VmeqK
                           (case-lambda
                             ((g$m$29388$1VmeqK)
                              (g$same-marks?$28726$1VmeqK
                                g$mark*$29384$1VmeqK
                                g$m$29388$1VmeqK)))
                           g$cv$29386$1VmeqK))
                       '#f))))
                 (g$hashtable-ref$21300$1VmeqK
                   g$ht$29385$1VmeqK
                   g$sym$29383$1VmeqK
                   '#f)))
              '#f)))
         (g$rib-cache$28676$1VmeqK g$rib$29382$1VmeqK)))))
   (g$extend-rib!$28685$1VmeqK
     g$extend-rib!$32693$1VmeqK
     (case-lambda
       ((g$rib$29389$1VmeqK
          g$id$29390$1VmeqK
          g$label$29391$1VmeqK
          g$sd?$29392$1VmeqK)
        (letrec* ((g$find$29393$1VmeqK
                    (case-lambda
                      ((g$sym$29402$1VmeqK
                         g$mark*$29403$1VmeqK
                         g$sym*$29404$1VmeqK
                         g$mark**$29405$1VmeqK
                         g$label*$29406$1VmeqK)
                       (if (pair? g$sym*$29404$1VmeqK)
                         (begin
                           '#f
                           (if (if (eq? g$sym$29402$1VmeqK
                                        (car g$sym*$29404$1VmeqK))
                                 (begin
                                   '#f
                                   (g$same-marks?$28726$1VmeqK
                                     g$mark*$29403$1VmeqK
                                     (car g$mark**$29405$1VmeqK)))
                                 '#f)
                             g$label*$29406$1VmeqK
                             (g$find$29393$1VmeqK
                               g$sym$29402$1VmeqK
                               g$mark*$29403$1VmeqK
                               (cdr g$sym*$29404$1VmeqK)
                               (cdr g$mark**$29405$1VmeqK)
                               (cdr g$label*$29406$1VmeqK))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$28675$1VmeqK g$rib$29389$1VmeqK)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$29389$1VmeqK)
              (void))
            ((case-lambda
               ((g$sym$29394$1VmeqK g$mark*$29395$1VmeqK)
                ((case-lambda
                   ((g$sym*$29396$1VmeqK)
                    ((case-lambda
                       ((g$t$29397$1VmeqK)
                        (if g$t$29397$1VmeqK
                          ((case-lambda
                             ((g$p$29398$1VmeqK)
                              (if (not (eq? g$label$29391$1VmeqK
                                            g$p$29398$1VmeqK))
                                (g$syntax-violation$29341$1VmeqK
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$29390$1VmeqK)
                                (void))))
                           g$t$29397$1VmeqK)
                          ((case-lambda
                             ((g$t$29399$1VmeqK)
                              (if g$t$29399$1VmeqK
                                ((case-lambda
                                   ((g$p$29400$1VmeqK)
                                    (if (not (eq? g$label$29391$1VmeqK
                                                  (car g$p$29400$1VmeqK)))
                                      (if (not g$sd?$29392$1VmeqK)
                                        (set-car!
                                          g$p$29400$1VmeqK
                                          g$label$29391$1VmeqK)
                                        (begin
                                          '#f
                                          (g$syntax-violation$29341$1VmeqK
                                            '#f
                                            '"multiple definitions of identifier"
                                            g$id$29390$1VmeqK)))
                                      (void))))
                                 g$t$29399$1VmeqK)
                                (begin
                                  '#f
                                  (if (g$rib-cache$28676$1VmeqK
                                        g$rib$29389$1VmeqK)
                                    (g$hashtable-update!$21304$1VmeqK
                                      (g$rib-cache$28676$1VmeqK
                                        g$rib$29389$1VmeqK)
                                      g$sym$29394$1VmeqK
                                      (case-lambda
                                        ((g$e$29401$1VmeqK)
                                         (cons
                                           (cons
                                             g$mark*$29395$1VmeqK
                                             g$label$29391$1VmeqK)
                                           g$e$29401$1VmeqK)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$28677$1VmeqK
                                    g$rib$29389$1VmeqK
                                    (cons
                                      g$sym$29394$1VmeqK
                                      g$sym*$29396$1VmeqK))
                                  (g$set-rib-mark**!$28678$1VmeqK
                                    g$rib$29389$1VmeqK
                                    (cons
                                      g$mark*$29395$1VmeqK
                                      (g$rib-mark**$28673$1VmeqK
                                        g$rib$29389$1VmeqK)))
                                  (g$set-rib-label*!$28679$1VmeqK
                                    g$rib$29389$1VmeqK
                                    (cons
                                      g$label$29391$1VmeqK
                                      (g$rib-label*$28674$1VmeqK
                                        g$rib$29389$1VmeqK)))))))
                           (if (g$memq$20341$1VmeqK
                                 g$sym$29394$1VmeqK
                                 (g$rib-sym*$28672$1VmeqK
                                   g$rib$29389$1VmeqK))
                             (begin
                               '#f
                               (g$find$29393$1VmeqK
                                 g$sym$29394$1VmeqK
                                 g$mark*$29395$1VmeqK
                                 g$sym*$29396$1VmeqK
                                 (g$rib-mark**$28673$1VmeqK
                                   g$rib$29389$1VmeqK)
                                 (g$rib-label*$28674$1VmeqK
                                   g$rib$29389$1VmeqK)))
                             '#f)))))
                     (g$find-label$28684$1VmeqK
                       g$rib$29389$1VmeqK
                       g$sym$29394$1VmeqK
                       g$mark*$29395$1VmeqK))))
                 (g$rib-sym*$28672$1VmeqK g$rib$29389$1VmeqK))))
             (g$id->sym$28725$1VmeqK g$id$29390$1VmeqK)
             (g$stx-mark*$28699$1VmeqK g$id$29390$1VmeqK)))))))
   (g$extend-rib/nc!$28686$1VmeqK
     g$extend-rib/nc!$32694$1VmeqK
     (case-lambda
       ((g$rib$29407$1VmeqK g$id$29408$1VmeqK g$label$29409$1VmeqK)
        ((case-lambda
           ((g$sym$29410$1VmeqK g$mark*$29411$1VmeqK)
            ((case-lambda
               ((g$sym*$29412$1VmeqK)
                (begin
                  (if (g$rib-cache$28676$1VmeqK g$rib$29407$1VmeqK)
                    (g$hashtable-update!$21304$1VmeqK
                      (g$rib-cache$28676$1VmeqK g$rib$29407$1VmeqK)
                      g$sym$29410$1VmeqK
                      (case-lambda
                        ((g$e$29413$1VmeqK)
                         (cons
                           (cons
                             g$mark*$29411$1VmeqK
                             g$label$29409$1VmeqK)
                           g$e$29413$1VmeqK)))
                      '())
                    (void))
                  (g$set-rib-sym*!$28677$1VmeqK
                    g$rib$29407$1VmeqK
                    (cons g$sym$29410$1VmeqK g$sym*$29412$1VmeqK))
                  (g$set-rib-mark**!$28678$1VmeqK
                    g$rib$29407$1VmeqK
                    (cons
                      g$mark*$29411$1VmeqK
                      (g$rib-mark**$28673$1VmeqK g$rib$29407$1VmeqK)))
                  (g$set-rib-label*!$28679$1VmeqK
                    g$rib$29407$1VmeqK
                    (cons
                      g$label$29409$1VmeqK
                      (g$rib-label*$28674$1VmeqK
                        g$rib$29407$1VmeqK))))))
             (g$rib-sym*$28672$1VmeqK g$rib$29407$1VmeqK))))
         (g$id->sym$28725$1VmeqK g$id$29408$1VmeqK)
         (g$stx-mark*$28699$1VmeqK g$id$29408$1VmeqK)))))
   (g$make-rib-map$28687$1VmeqK
     g$make-rib-map$32695$1VmeqK
     (case-lambda
       ((g$sym*$29414$1VmeqK)
        ((case-lambda
           ((g$ht$29415$1VmeqK)
            ((letrec ((g$f$29416$1VmeqK
                        (case-lambda
                          ((g$i$29417$1VmeqK g$sym*$29418$1VmeqK)
                           (if (null? g$sym*$29418$1VmeqK)
                             g$ht$29415$1VmeqK
                             (begin
                               (g$hashtable-update!$21304$1VmeqK
                                 g$ht$29415$1VmeqK
                                 (car g$sym*$29418$1VmeqK)
                                 (case-lambda
                                   ((g$x$29419$1VmeqK)
                                    (cons
                                      g$i$29417$1VmeqK
                                      g$x$29419$1VmeqK)))
                                 '())
                               (g$f$29416$1VmeqK
                                 (+ g$i$29417$1VmeqK '1)
                                 (cdr g$sym*$29418$1VmeqK))))))))
               g$f$29416$1VmeqK)
             '0
             g$sym*$29414$1VmeqK)))
         (g$make-eq-hashtable$21297$1VmeqK)))))
   (g$seal-rib!$28688$1VmeqK
     g$seal-rib!$32696$1VmeqK
     (case-lambda
       ((g$rib$29420$1VmeqK)
        ((case-lambda
           ((g$sym*$29421$1VmeqK)
            (if (not (null? g$sym*$29421$1VmeqK))
              (begin
                (g$set-rib-sym*!$28677$1VmeqK
                  g$rib$29420$1VmeqK
                  (g$list->vector$21192$1VmeqK g$sym*$29421$1VmeqK))
                (g$set-rib-mark**!$28678$1VmeqK
                  g$rib$29420$1VmeqK
                  (g$list->vector$21192$1VmeqK
                    (g$rib-mark**$28673$1VmeqK g$rib$29420$1VmeqK)))
                (g$set-rib-label*!$28679$1VmeqK
                  g$rib$29420$1VmeqK
                  (g$list->vector$21192$1VmeqK
                    (g$rib-label*$28674$1VmeqK g$rib$29420$1VmeqK)))
                (g$set-rib-sealed/freq!$28680$1VmeqK
                  g$rib$29420$1VmeqK
                  (g$make-rib-map$28687$1VmeqK g$sym*$29421$1VmeqK)))
              (void))))
         (g$rib-sym*$28672$1VmeqK g$rib$29420$1VmeqK)))))
   (g$unseal-rib!$28689$1VmeqK
     g$unseal-rib!$32697$1VmeqK
     (case-lambda
       ((g$rib$29422$1VmeqK)
        (if (g$rib-sealed/freq$28675$1VmeqK g$rib$29422$1VmeqK)
          (begin
            (g$set-rib-sealed/freq!$28680$1VmeqK g$rib$29422$1VmeqK '#f)
            (g$set-rib-sym*!$28677$1VmeqK
              g$rib$29422$1VmeqK
              (vector->list
                (g$rib-sym*$28672$1VmeqK g$rib$29422$1VmeqK)))
            (g$set-rib-mark**!$28678$1VmeqK
              g$rib$29422$1VmeqK
              (vector->list
                (g$rib-mark**$28673$1VmeqK g$rib$29422$1VmeqK)))
            (g$set-rib-label*!$28679$1VmeqK
              g$rib$29422$1VmeqK
              (vector->list
                (g$rib-label*$28674$1VmeqK g$rib$29422$1VmeqK))))
          (void)))))
   (g$make-full-rib$28690$1VmeqK
     g$make-full-rib$32698$1VmeqK
     (case-lambda
       ((g$id*$29423$1VmeqK g$label*$29424$1VmeqK)
        ((case-lambda
           ((g$r$29425$1VmeqK)
            (begin
              (g$seal-rib!$28688$1VmeqK g$r$29425$1VmeqK)
              g$r$29425$1VmeqK)))
         (g$make-rib$28671$1VmeqK
           (g$map$20349$1VmeqK
             g$id->sym$28725$1VmeqK
             g$id*$29423$1VmeqK)
           (g$map$20349$1VmeqK
             g$stx-mark*$28699$1VmeqK
             g$id*$29423$1VmeqK)
           g$label*$29424$1VmeqK
           '#f
           '#f)))))
   (g$11978$28691$1VmeqK
     g$11978$32699$1VmeqK
     (make-record-type-descriptor
       'stx
       '#f
       'g$11981$1VmeqK
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$11980$28692$1VmeqK g$11980$32700$1VmeqK '#f)
   (g$11979$28693$1VmeqK
     g$11979$32701$1VmeqK
     (make-record-constructor-descriptor
       g$11978$28691$1VmeqK
       '#f
       g$11980$28692$1VmeqK))
   (g$stx?$28696$1VmeqK
     g$stx?$32702$1VmeqK
     (record-predicate g$11978$28691$1VmeqK))
   (g$make-stx$28697$1VmeqK
     g$make-stx$32703$1VmeqK
     (record-constructor g$11979$28693$1VmeqK))
   (g$stx-expr$28698$1VmeqK
     g$stx-expr$32704$1VmeqK
     (record-accessor g$11978$28691$1VmeqK '0))
   (g$stx-mark*$28699$1VmeqK
     g$stx-mark*$32705$1VmeqK
     (record-accessor g$11978$28691$1VmeqK '1))
   (g$stx-subst*$28700$1VmeqK
     g$stx-subst*$32706$1VmeqK
     (record-accessor g$11978$28691$1VmeqK '2))
   (g$stx-ae*$28701$1VmeqK
     g$stx-ae*$32707$1VmeqK
     (record-accessor g$11978$28691$1VmeqK '3))
   (g$set-stx-expr!$28702$1VmeqK
     g$set-stx-expr!$32708$1VmeqK
     (record-mutator g$11978$28691$1VmeqK '0))
   (g$set-stx-mark*!$28703$1VmeqK
     g$set-stx-mark*!$32709$1VmeqK
     (record-mutator g$11978$28691$1VmeqK '1))
   (g$set-stx-subst*!$28704$1VmeqK
     g$set-stx-subst*!$32710$1VmeqK
     (record-mutator g$11978$28691$1VmeqK '2))
   (g$set-stx-ae*!$28705$1VmeqK
     g$set-stx-ae*!$32711$1VmeqK
     (record-mutator g$11978$28691$1VmeqK '3))
   (g$rp$28706$1VmeqK
     g$rp$32712$1VmeqK
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$29426$1VmeqK g$p$29427$1VmeqK g$wr$29428$1VmeqK)
          (begin
            (display '"#<syntax " g$p$29427$1VmeqK)
            (write
              (g$stx->datum$28735$1VmeqK g$x$29426$1VmeqK)
              g$p$29427$1VmeqK)
            ((case-lambda
               ((g$expr$29429$1VmeqK)
                (if (annotation? g$expr$29429$1VmeqK)
                  ((case-lambda
                     ((g$src$29430$1VmeqK)
                      (if (pair? g$src$29430$1VmeqK)
                        (begin
                          (display '" (" g$p$29427$1VmeqK)
                          (display
                            (cdr g$src$29430$1VmeqK)
                            g$p$29427$1VmeqK)
                          (display '" of " g$p$29427$1VmeqK)
                          (display
                            (car g$src$29430$1VmeqK)
                            g$p$29427$1VmeqK)
                          (display '")" g$p$29427$1VmeqK))
                        (void))))
                   (annotation-source g$expr$29429$1VmeqK))
                  (void))))
             (g$stx-expr$28698$1VmeqK g$x$29426$1VmeqK))
            (display '">" g$p$29427$1VmeqK))))))
   (g$datum->stx$28707$1VmeqK
     g$datum->stx$32713$1VmeqK
     (case-lambda
       ((g$id$29431$1VmeqK g$datum$29432$1VmeqK)
        (g$make-stx$28697$1VmeqK
          g$datum$29432$1VmeqK
          (g$stx-mark*$28699$1VmeqK g$id$29431$1VmeqK)
          (g$stx-subst*$28700$1VmeqK g$id$29431$1VmeqK)
          (g$stx-ae*$28701$1VmeqK g$id$29431$1VmeqK)))))
   (g$gen-mark$28708$1VmeqK
     g$gen-mark$32714$1VmeqK
     (case-lambda (() (string '#\m))))
   (g$anti-mark$28709$1VmeqK g$anti-mark$32715$1VmeqK '#f)
   (g$anti-mark?$28710$1VmeqK g$anti-mark?$32716$1VmeqK not)
   (g$join-wraps$28711$1VmeqK
     g$join-wraps$32717$1VmeqK
     (case-lambda
       ((g$m1*$29433$1VmeqK
          g$s1*$29434$1VmeqK
          g$ae1*$29435$1VmeqK
          g$e$29436$1VmeqK)
        (letrec* ((g$cancel$29437$1VmeqK
                    (case-lambda
                      ((g$ls1$29441$1VmeqK g$ls2$29442$1VmeqK)
                       ((letrec ((g$f$29443$1VmeqK
                                   (case-lambda
                                     ((g$x$29444$1VmeqK
                                        g$ls1$29445$1VmeqK)
                                      (if (null? g$ls1$29445$1VmeqK)
                                        (cdr g$ls2$29442$1VmeqK)
                                        (cons
                                          g$x$29444$1VmeqK
                                          (g$f$29443$1VmeqK
                                            (car g$ls1$29445$1VmeqK)
                                            (cdr g$ls1$29445$1VmeqK))))))))
                          g$f$29443$1VmeqK)
                        (car g$ls1$29441$1VmeqK)
                        (cdr g$ls1$29441$1VmeqK))))))
          ((case-lambda
             ((g$m2*$29438$1VmeqK
                g$s2*$29439$1VmeqK
                g$ae2*$29440$1VmeqK)
              (if (if (not (null? g$m1*$29433$1VmeqK))
                    (if (not (null? g$m2*$29438$1VmeqK))
                      (begin
                        '#f
                        (g$anti-mark?$28710$1VmeqK
                          (car g$m2*$29438$1VmeqK)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$29437$1VmeqK
                    g$m1*$29433$1VmeqK
                    g$m2*$29438$1VmeqK)
                  (g$cancel$29437$1VmeqK
                    g$s1*$29434$1VmeqK
                    g$s2*$29439$1VmeqK)
                  (g$cancel$29437$1VmeqK
                    g$ae1*$29435$1VmeqK
                    g$ae2*$29440$1VmeqK))
                (values
                  (append g$m1*$29433$1VmeqK g$m2*$29438$1VmeqK)
                  (append g$s1*$29434$1VmeqK g$s2*$29439$1VmeqK)
                  (append g$ae1*$29435$1VmeqK g$ae2*$29440$1VmeqK)))))
           (g$stx-mark*$28699$1VmeqK g$e$29436$1VmeqK)
           (g$stx-subst*$28700$1VmeqK g$e$29436$1VmeqK)
           (g$stx-ae*$28701$1VmeqK g$e$29436$1VmeqK))))))
   (g$mkstx$28712$1VmeqK
     g$mkstx$32718$1VmeqK
     (case-lambda
       ((g$e$29446$1VmeqK
          g$m*$29447$1VmeqK
          g$s*$29448$1VmeqK
          g$ae*$29449$1VmeqK)
        (if (if (g$stx?$28696$1VmeqK g$e$29446$1VmeqK)
              (begin
                '#f
                (not (g$top-marked?$28658$1VmeqK g$m*$29447$1VmeqK)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$28711$1VmeqK
                 g$m*$29447$1VmeqK
                 g$s*$29448$1VmeqK
                 g$ae*$29449$1VmeqK
                 g$e$29446$1VmeqK)))
            (case-lambda
              ((g$m*$29453$1VmeqK g$s*$29454$1VmeqK g$ae*$29455$1VmeqK)
               ((case-lambda
                  ((g$ae*$29456$1VmeqK
                     g$s*$29457$1VmeqK
                     g$m*$29458$1VmeqK)
                   (g$make-stx$28697$1VmeqK
                     (g$stx-expr$28698$1VmeqK g$e$29446$1VmeqK)
                     g$m*$29458$1VmeqK
                     g$s*$29457$1VmeqK
                     g$ae*$29456$1VmeqK)))
                g$ae*$29455$1VmeqK
                g$s*$29454$1VmeqK
                g$m*$29453$1VmeqK))))
          (g$make-stx$28697$1VmeqK
            g$e$29446$1VmeqK
            g$m*$29447$1VmeqK
            g$s*$29448$1VmeqK
            g$ae*$29449$1VmeqK)))))
   (g$add-mark$28713$1VmeqK
     g$add-mark$32719$1VmeqK
     (case-lambda
       ((g$m$29459$1VmeqK g$e$29460$1VmeqK g$ae$29461$1VmeqK)
        (g$mkstx$28712$1VmeqK
          g$e$29460$1VmeqK
          (list g$m$29459$1VmeqK)
          '(shift)
          (list g$ae$29461$1VmeqK)))))
   (g$add-subst$28714$1VmeqK
     g$add-subst$32720$1VmeqK
     (case-lambda
       ((g$subst$29462$1VmeqK g$e$29463$1VmeqK)
        (g$mkstx$28712$1VmeqK
          g$e$29463$1VmeqK
          '()
          (list g$subst$29462$1VmeqK)
          '()))))
   (g$syntax-kind?$28715$1VmeqK
     g$syntax-kind?$32721$1VmeqK
     (case-lambda
       ((g$x$29464$1VmeqK g$p?$29465$1VmeqK)
        (if (g$stx?$28696$1VmeqK g$x$29464$1VmeqK)
          (g$syntax-kind?$28715$1VmeqK
            (g$stx-expr$28698$1VmeqK g$x$29464$1VmeqK)
            g$p?$29465$1VmeqK)
          (if (annotation? g$x$29464$1VmeqK)
            (g$syntax-kind?$28715$1VmeqK
              (annotation-expression g$x$29464$1VmeqK)
              g$p?$29465$1VmeqK)
            (begin '#f (g$p?$29465$1VmeqK g$x$29464$1VmeqK)))))))
   (g$syntax-vector->list$28716$1VmeqK
     g$syntax-vector->list$32722$1VmeqK
     (case-lambda
       ((g$x$29466$1VmeqK)
        (if (g$stx?$28696$1VmeqK g$x$29466$1VmeqK)
          ((case-lambda
             ((g$ls$29467$1VmeqK
                g$m*$29468$1VmeqK
                g$s*$29469$1VmeqK
                g$ae*$29470$1VmeqK)
              (g$map$20349$1VmeqK
                (case-lambda
                  ((g$x$29471$1VmeqK)
                   (g$mkstx$28712$1VmeqK
                     g$x$29471$1VmeqK
                     g$m*$29468$1VmeqK
                     g$s*$29469$1VmeqK
                     g$ae*$29470$1VmeqK)))
                g$ls$29467$1VmeqK)))
           (g$syntax-vector->list$28716$1VmeqK
             (g$stx-expr$28698$1VmeqK g$x$29466$1VmeqK))
           (g$stx-mark*$28699$1VmeqK g$x$29466$1VmeqK)
           (g$stx-subst*$28700$1VmeqK g$x$29466$1VmeqK)
           (g$stx-ae*$28701$1VmeqK g$x$29466$1VmeqK))
          (if (annotation? g$x$29466$1VmeqK)
            (g$syntax-vector->list$28716$1VmeqK
              (annotation-expression g$x$29466$1VmeqK))
            (if (g$vector?$21179$1VmeqK g$x$29466$1VmeqK)
              (vector->list g$x$29466$1VmeqK)
              (begin
                '#f
                (assertion-violation
                  'syntax-vector->list
                  '"BUG: not a syntax vector"
                  g$x$29466$1VmeqK))))))))
   (g$syntax-pair?$28717$1VmeqK
     g$syntax-pair?$32723$1VmeqK
     (case-lambda
       ((g$x$29472$1VmeqK)
        (g$syntax-kind?$28715$1VmeqK g$x$29472$1VmeqK pair?))))
   (g$syntax-vector?$28718$1VmeqK
     g$syntax-vector?$32724$1VmeqK
     (case-lambda
       ((g$x$29473$1VmeqK)
        (g$syntax-kind?$28715$1VmeqK
          g$x$29473$1VmeqK
          g$vector?$21179$1VmeqK))))
   (g$syntax-null?$28719$1VmeqK
     g$syntax-null?$32725$1VmeqK
     (case-lambda
       ((g$x$29474$1VmeqK)
        (g$syntax-kind?$28715$1VmeqK g$x$29474$1VmeqK null?))))
   (g$syntax-list?$28720$1VmeqK
     g$syntax-list?$32726$1VmeqK
     (case-lambda
       ((g$x$29475$1VmeqK)
        ((case-lambda
           ((g$t$29476$1VmeqK)
            (if g$t$29476$1VmeqK
              g$t$29476$1VmeqK
              (begin
                '#f
                (if (g$syntax-pair?$28717$1VmeqK g$x$29475$1VmeqK)
                  (begin
                    '#f
                    (g$syntax-list?$28720$1VmeqK
                      (g$syntax-cdr$28722$1VmeqK g$x$29475$1VmeqK)))
                  '#f)))))
         (g$syntax-null?$28719$1VmeqK g$x$29475$1VmeqK)))))
   (g$syntax-car$28721$1VmeqK
     g$syntax-car$32727$1VmeqK
     (case-lambda
       ((g$x$29477$1VmeqK)
        (if (g$stx?$28696$1VmeqK g$x$29477$1VmeqK)
          (g$mkstx$28712$1VmeqK
            (g$syntax-car$28721$1VmeqK
              (g$stx-expr$28698$1VmeqK g$x$29477$1VmeqK))
            (g$stx-mark*$28699$1VmeqK g$x$29477$1VmeqK)
            (g$stx-subst*$28700$1VmeqK g$x$29477$1VmeqK)
            (g$stx-ae*$28701$1VmeqK g$x$29477$1VmeqK))
          (if (annotation? g$x$29477$1VmeqK)
            (g$syntax-car$28721$1VmeqK
              (annotation-expression g$x$29477$1VmeqK))
            (if (pair? g$x$29477$1VmeqK)
              (car g$x$29477$1VmeqK)
              (begin
                '#f
                (assertion-violation
                  'syntax-car
                  '"BUG: not a pair"
                  g$x$29477$1VmeqK))))))))
   (g$syntax-cdr$28722$1VmeqK
     g$syntax-cdr$32728$1VmeqK
     (case-lambda
       ((g$x$29478$1VmeqK)
        (if (g$stx?$28696$1VmeqK g$x$29478$1VmeqK)
          (g$mkstx$28712$1VmeqK
            (g$syntax-cdr$28722$1VmeqK
              (g$stx-expr$28698$1VmeqK g$x$29478$1VmeqK))
            (g$stx-mark*$28699$1VmeqK g$x$29478$1VmeqK)
            (g$stx-subst*$28700$1VmeqK g$x$29478$1VmeqK)
            (g$stx-ae*$28701$1VmeqK g$x$29478$1VmeqK))
          (if (annotation? g$x$29478$1VmeqK)
            (g$syntax-cdr$28722$1VmeqK
              (annotation-expression g$x$29478$1VmeqK))
            (if (pair? g$x$29478$1VmeqK)
              (cdr g$x$29478$1VmeqK)
              (begin
                '#f
                (assertion-violation
                  'syntax-cdr
                  '"BUG: not a pair"
                  g$x$29478$1VmeqK))))))))
   (g$syntax->list$28723$1VmeqK
     g$syntax->list$32729$1VmeqK
     (case-lambda
       ((g$x$29479$1VmeqK)
        (if (g$syntax-pair?$28717$1VmeqK g$x$29479$1VmeqK)
          (cons
            (g$syntax-car$28721$1VmeqK g$x$29479$1VmeqK)
            (g$syntax->list$28723$1VmeqK
              (g$syntax-cdr$28722$1VmeqK g$x$29479$1VmeqK)))
          (if (g$syntax-null?$28719$1VmeqK g$x$29479$1VmeqK)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$29479$1VmeqK))))))
   (g$id?$28724$1VmeqK
     g$id?$32730$1VmeqK
     (case-lambda
       ((g$x$29480$1VmeqK)
        (if (g$stx?$28696$1VmeqK g$x$29480$1VmeqK)
          (begin
            '#f
            ((case-lambda
               ((g$expr$29481$1VmeqK)
                (g$symbol?$21181$1VmeqK
                  (if (annotation? g$expr$29481$1VmeqK)
                    (annotation-stripped g$expr$29481$1VmeqK)
                    g$expr$29481$1VmeqK))))
             (g$stx-expr$28698$1VmeqK g$x$29480$1VmeqK)))
          '#f))))
   (g$id->sym$28725$1VmeqK
     g$id->sym$32731$1VmeqK
     (case-lambda
       ((g$x$29482$1VmeqK)
        (begin
          (if (not (g$stx?$28696$1VmeqK g$x$29482$1VmeqK))
            (error
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$29482$1VmeqK)
            (void))
          ((case-lambda
             ((g$expr$29483$1VmeqK)
              ((case-lambda
                 ((g$sym$29484$1VmeqK)
                  (if (g$symbol?$21181$1VmeqK g$sym$29484$1VmeqK)
                    g$sym$29484$1VmeqK
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$29482$1VmeqK))))
               (if (annotation? g$expr$29483$1VmeqK)
                 (annotation-stripped g$expr$29483$1VmeqK)
                 g$expr$29483$1VmeqK))))
           (g$stx-expr$28698$1VmeqK g$x$29482$1VmeqK))))))
   (g$same-marks?$28726$1VmeqK
     g$same-marks?$32732$1VmeqK
     (case-lambda
       ((g$x$29485$1VmeqK g$y$29486$1VmeqK)
        ((case-lambda
           ((g$t$29487$1VmeqK)
            (if g$t$29487$1VmeqK
              g$t$29487$1VmeqK
              (begin
                '#f
                (if (pair? g$x$29485$1VmeqK)
                  (if (pair? g$y$29486$1VmeqK)
                    (if (eq? (car g$x$29485$1VmeqK)
                             (car g$y$29486$1VmeqK))
                      (begin
                        '#f
                        (g$same-marks?$28726$1VmeqK
                          (cdr g$x$29485$1VmeqK)
                          (cdr g$y$29486$1VmeqK)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$29485$1VmeqK)
           (begin '#f (null? g$y$29486$1VmeqK))
           '#f)))))
   (g$bound-id=?$28727$1VmeqK
     g$bound-id=?$32733$1VmeqK
     (case-lambda
       ((g$x$29488$1VmeqK g$y$29489$1VmeqK)
        (if (eq? (g$id->sym$28725$1VmeqK g$x$29488$1VmeqK)
                 (g$id->sym$28725$1VmeqK g$y$29489$1VmeqK))
          (begin
            '#f
            (g$same-marks?$28726$1VmeqK
              (g$stx-mark*$28699$1VmeqK g$x$29488$1VmeqK)
              (g$stx-mark*$28699$1VmeqK g$y$29489$1VmeqK)))
          '#f))))
   (g$free-id=?$28728$1VmeqK
     g$free-id=?$32734$1VmeqK
     (case-lambda
       ((g$i$29490$1VmeqK g$j$29491$1VmeqK)
        ((case-lambda
           ((g$t0$29492$1VmeqK g$t1$29493$1VmeqK)
            (if ((case-lambda
                   ((g$t$29494$1VmeqK)
                    (if g$t$29494$1VmeqK
                      g$t$29494$1VmeqK
                      (begin '#f g$t1$29493$1VmeqK))))
                 g$t0$29492$1VmeqK)
              (eq? g$t0$29492$1VmeqK g$t1$29493$1VmeqK)
              (eq? (g$id->sym$28725$1VmeqK g$i$29490$1VmeqK)
                   (g$id->sym$28725$1VmeqK g$j$29491$1VmeqK)))))
         (g$id->real-label$28738$1VmeqK g$i$29490$1VmeqK)
         (g$id->real-label$28738$1VmeqK g$j$29491$1VmeqK)))))
   (g$valid-bound-ids?$28729$1VmeqK
     g$valid-bound-ids?$32735$1VmeqK
     (case-lambda
       ((g$id*$29495$1VmeqK)
        (if (g$for-all$20347$1VmeqK
              g$id?$28724$1VmeqK
              g$id*$29495$1VmeqK)
          (begin
            '#f
            (g$distinct-bound-ids?$28730$1VmeqK g$id*$29495$1VmeqK))
          '#f))))
   (g$distinct-bound-ids?$28730$1VmeqK
     g$distinct-bound-ids?$32736$1VmeqK
     (case-lambda
       ((g$id*$29496$1VmeqK)
        ((case-lambda
           ((g$t$29497$1VmeqK)
            (if g$t$29497$1VmeqK
              g$t$29497$1VmeqK
              (begin
                '#f
                (if (not (g$bound-id-member?$28731$1VmeqK
                           (car g$id*$29496$1VmeqK)
                           (cdr g$id*$29496$1VmeqK)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$28730$1VmeqK
                      (cdr g$id*$29496$1VmeqK)))
                  '#f)))))
         (null? g$id*$29496$1VmeqK)))))
   (g$bound-id-member?$28731$1VmeqK
     g$bound-id-member?$32737$1VmeqK
     (case-lambda
       ((g$id$29498$1VmeqK g$id*$29499$1VmeqK)
        (if (pair? g$id*$29499$1VmeqK)
          (begin
            '#f
            ((case-lambda
               ((g$t$29500$1VmeqK)
                (if g$t$29500$1VmeqK
                  g$t$29500$1VmeqK
                  (begin
                    '#f
                    (g$bound-id-member?$28731$1VmeqK
                      g$id$29498$1VmeqK
                      (cdr g$id*$29499$1VmeqK))))))
             (g$bound-id=?$28727$1VmeqK
               g$id$29498$1VmeqK
               (car g$id*$29499$1VmeqK))))
          '#f))))
   (g$self-evaluating?$28732$1VmeqK
     g$self-evaluating?$32738$1VmeqK
     (case-lambda
       ((g$x$29501$1VmeqK)
        ((case-lambda
           ((g$t$29502$1VmeqK)
            (if g$t$29502$1VmeqK
              g$t$29502$1VmeqK
              ((case-lambda
                 ((g$t$29503$1VmeqK)
                  (if g$t$29503$1VmeqK
                    g$t$29503$1VmeqK
                    ((case-lambda
                       ((g$t$29504$1VmeqK)
                        (if g$t$29504$1VmeqK
                          g$t$29504$1VmeqK
                          ((case-lambda
                             ((g$t$29505$1VmeqK)
                              (if g$t$29505$1VmeqK
                                g$t$29505$1VmeqK
                                (begin
                                  '#f
                                  (g$bytevector?$21180$1VmeqK
                                    g$x$29501$1VmeqK)))))
                           (g$boolean?$21182$1VmeqK
                             g$x$29501$1VmeqK)))))
                     (g$char?$21178$1VmeqK g$x$29501$1VmeqK)))))
               (string? g$x$29501$1VmeqK)))))
         (g$number?$22188$1VmeqK g$x$29501$1VmeqK)))))
   (g$strip-annotations$28733$1VmeqK
     g$strip-annotations$32739$1VmeqK
     (case-lambda
       ((g$x$29506$1VmeqK)
        (if (pair? g$x$29506$1VmeqK)
          (cons
            (g$strip-annotations$28733$1VmeqK (car g$x$29506$1VmeqK))
            (g$strip-annotations$28733$1VmeqK (cdr g$x$29506$1VmeqK)))
          (if (g$vector?$21179$1VmeqK g$x$29506$1VmeqK)
            (g$vector-map$21248$1VmeqK
              g$strip-annotations$28733$1VmeqK
              g$x$29506$1VmeqK)
            (if (annotation? g$x$29506$1VmeqK)
              (annotation-stripped g$x$29506$1VmeqK)
              (begin '#f g$x$29506$1VmeqK)))))))
   (g$strip$28734$1VmeqK
     g$strip$32740$1VmeqK
     (case-lambda
       ((g$x$29507$1VmeqK g$m*$29508$1VmeqK)
        (if (g$top-marked?$28658$1VmeqK g$m*$29508$1VmeqK)
          (if ((case-lambda
                 ((g$t$29509$1VmeqK)
                  (if g$t$29509$1VmeqK
                    g$t$29509$1VmeqK
                    ((case-lambda
                       ((g$t$29510$1VmeqK)
                        (if g$t$29510$1VmeqK
                          g$t$29510$1VmeqK
                          (begin
                            '#f
                            (if (g$vector?$21179$1VmeqK
                                  g$x$29507$1VmeqK)
                              (if (g$>$22213$1VmeqK
                                    (vector-length g$x$29507$1VmeqK)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$21194$1VmeqK
                                      g$x$29507$1VmeqK
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$29507$1VmeqK)
                       (begin '#f (annotation? (car g$x$29507$1VmeqK)))
                       '#f)))))
               (annotation? g$x$29507$1VmeqK))
            (g$strip-annotations$28733$1VmeqK g$x$29507$1VmeqK)
            g$x$29507$1VmeqK)
          ((letrec ((g$f$29511$1VmeqK
                      (case-lambda
                        ((g$x$29512$1VmeqK)
                         (if (g$stx?$28696$1VmeqK g$x$29512$1VmeqK)
                           (g$strip$28734$1VmeqK
                             (g$stx-expr$28698$1VmeqK g$x$29512$1VmeqK)
                             (g$stx-mark*$28699$1VmeqK
                               g$x$29512$1VmeqK))
                           (if (annotation? g$x$29512$1VmeqK)
                             (annotation-stripped g$x$29512$1VmeqK)
                             (if (pair? g$x$29512$1VmeqK)
                               ((case-lambda
                                  ((g$a$29513$1VmeqK g$d$29514$1VmeqK)
                                   (if (if (eq? g$a$29513$1VmeqK
                                                (car g$x$29512$1VmeqK))
                                         (begin
                                           '#f
                                           (eq? g$d$29514$1VmeqK
                                                (cdr g$x$29512$1VmeqK)))
                                         '#f)
                                     g$x$29512$1VmeqK
                                     (cons
                                       g$a$29513$1VmeqK
                                       g$d$29514$1VmeqK))))
                                (g$f$29511$1VmeqK
                                  (car g$x$29512$1VmeqK))
                                (g$f$29511$1VmeqK
                                  (cdr g$x$29512$1VmeqK)))
                               (if (g$vector?$21179$1VmeqK
                                     g$x$29512$1VmeqK)
                                 ((case-lambda
                                    ((g$old$29515$1VmeqK)
                                     ((case-lambda
                                        ((g$new$29516$1VmeqK)
                                         (if (g$for-all$20347$1VmeqK
                                               eq?
                                               g$old$29515$1VmeqK
                                               g$new$29516$1VmeqK)
                                           g$x$29512$1VmeqK
                                           (g$list->vector$21192$1VmeqK
                                             g$new$29516$1VmeqK))))
                                      (g$map$20349$1VmeqK
                                        g$f$29511$1VmeqK
                                        g$old$29515$1VmeqK))))
                                  (vector->list g$x$29512$1VmeqK))
                                 (begin '#f g$x$29512$1VmeqK)))))))))
             g$f$29511$1VmeqK)
           g$x$29507$1VmeqK)))))
   (g$stx->datum$28735$1VmeqK
     g$stx->datum$32741$1VmeqK
     (case-lambda
       ((g$x$29517$1VmeqK)
        (g$strip$28734$1VmeqK g$x$29517$1VmeqK '()))))
   (g$same-marks*?$28736$1VmeqK
     g$same-marks*?$32742$1VmeqK
     (case-lambda
       ((g$mark*$29518$1VmeqK g$mark**$29519$1VmeqK g$si$29520$1VmeqK)
        (if (null? g$si$29520$1VmeqK)
          '#f
          (if (g$same-marks?$28726$1VmeqK
                g$mark*$29518$1VmeqK
                (g$vector-ref$21194$1VmeqK
                  g$mark**$29519$1VmeqK
                  (car g$si$29520$1VmeqK)))
            (car g$si$29520$1VmeqK)
            (g$same-marks*?$28736$1VmeqK
              g$mark*$29518$1VmeqK
              g$mark**$29519$1VmeqK
              (cdr g$si$29520$1VmeqK)))))))
   (g$id->label$28737$1VmeqK
     g$id->label$32743$1VmeqK
     (case-lambda
       ((g$id$29521$1VmeqK)
        ((case-lambda
           ((g$t$29522$1VmeqK)
            (if g$t$29522$1VmeqK
              g$t$29522$1VmeqK
              (begin
                '#f
                ((case-lambda
                   ((g$t$29523$1VmeqK)
                    (if g$t$29523$1VmeqK
                      ((case-lambda
                         ((g$env$29524$1VmeqK)
                          ((case-lambda
                             ((g$rib$29525$1VmeqK)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$28663$1VmeqK
                                     g$id$29521$1VmeqK
                                     g$rib$29525$1VmeqK
                                     '#f)))
                                (case-lambda
                                  ((g$lab$29528$1VmeqK
                                     g$_loc$29529$1VmeqK)
                                   ((case-lambda
                                      ((g$_loc$29530$1VmeqK
                                         g$lab$29531$1VmeqK)
                                       (begin
                                         (g$extend-rib!$28685$1VmeqK
                                           g$rib$29525$1VmeqK
                                           g$id$29521$1VmeqK
                                           g$lab$29531$1VmeqK
                                           '#t)
                                         g$lab$29531$1VmeqK)))
                                    g$_loc$29529$1VmeqK
                                    g$lab$29528$1VmeqK))))))
                           (g$interaction-env-rib$29307$1VmeqK
                             g$env$29524$1VmeqK))))
                       g$t$29523$1VmeqK)
                      (begin '#f '#f))))
                 (g$top-level-context$29349$1VmeqK))))))
         (g$id->real-label$28738$1VmeqK g$id$29521$1VmeqK)))))
   (g$id->real-label$28738$1VmeqK
     g$id->real-label$32744$1VmeqK
     (case-lambda
       ((g$id$29532$1VmeqK)
        ((case-lambda
           ((g$sym$29533$1VmeqK)
            ((letrec ((g$search$29534$1VmeqK
                        (case-lambda
                          ((g$subst*$29535$1VmeqK g$mark*$29536$1VmeqK)
                           (if (null? g$subst*$29535$1VmeqK)
                             '#f
                             (if (eq? (car g$subst*$29535$1VmeqK)
                                      'shift)
                               (g$search$29534$1VmeqK
                                 (cdr g$subst*$29535$1VmeqK)
                                 (cdr g$mark*$29536$1VmeqK))
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rib$29537$1VmeqK)
                                     ((case-lambda
                                        ((g$t$29538$1VmeqK)
                                         (if g$t$29538$1VmeqK
                                           ((case-lambda
                                              ((g$ht$29539$1VmeqK)
                                               ((case-lambda
                                                  ((g$si$29540$1VmeqK)
                                                   ((case-lambda
                                                      ((g$i$29541$1VmeqK)
                                                       (if g$i$29541$1VmeqK
                                                         (g$vector-ref$21194$1VmeqK
                                                           (g$rib-label*$28674$1VmeqK
                                                             g$rib$29537$1VmeqK)
                                                           g$i$29541$1VmeqK)
                                                         (g$search$29534$1VmeqK
                                                           (cdr g$subst*$29535$1VmeqK)
                                                           g$mark*$29536$1VmeqK))))
                                                    (if g$si$29540$1VmeqK
                                                      (begin
                                                        '#f
                                                        (g$same-marks*?$28736$1VmeqK
                                                          g$mark*$29536$1VmeqK
                                                          (g$rib-mark**$28673$1VmeqK
                                                            g$rib$29537$1VmeqK)
                                                          (g$reverse$21198$1VmeqK
                                                            g$si$29540$1VmeqK)))
                                                      '#f))))
                                                (g$hashtable-ref$21300$1VmeqK
                                                  g$ht$29539$1VmeqK
                                                  g$sym$29533$1VmeqK
                                                  '#f))))
                                            g$t$29538$1VmeqK)
                                           ((case-lambda
                                              ((g$t$29542$1VmeqK)
                                               (if g$t$29542$1VmeqK
                                                 g$t$29542$1VmeqK
                                                 (begin
                                                   '#f
                                                   (begin
                                                     '#f
                                                     ((letrec ((g$f$29543$1VmeqK
                                                                 (case-lambda
                                                                   ((g$sym*$29544$1VmeqK
                                                                      g$mark**$29545$1VmeqK
                                                                      g$label*$29546$1VmeqK)
                                                                    (if (null?
                                                                          g$sym*$29544$1VmeqK)
                                                                      (g$search$29534$1VmeqK
                                                                        (cdr g$subst*$29535$1VmeqK)
                                                                        g$mark*$29536$1VmeqK)
                                                                      (if (if (eq? (car g$sym*$29544$1VmeqK)
                                                                                   g$sym$29533$1VmeqK)
                                                                            (begin
                                                                              '#f
                                                                              (g$same-marks?$28726$1VmeqK
                                                                                (car g$mark**$29545$1VmeqK)
                                                                                g$mark*$29536$1VmeqK))
                                                                            '#f)
                                                                        (car g$label*$29546$1VmeqK)
                                                                        (begin
                                                                          '#f
                                                                          (g$f$29543$1VmeqK
                                                                            (cdr g$sym*$29544$1VmeqK)
                                                                            (cdr g$mark**$29545$1VmeqK)
                                                                            (cdr g$label*$29546$1VmeqK)))))))))
                                                        g$f$29543$1VmeqK)
                                                      (g$rib-sym*$28672$1VmeqK
                                                        g$rib$29537$1VmeqK)
                                                      (g$rib-mark**$28673$1VmeqK
                                                        g$rib$29537$1VmeqK)
                                                      (g$rib-label*$28674$1VmeqK
                                                        g$rib$29537$1VmeqK)))))))
                                            (g$find-label$28684$1VmeqK
                                              g$rib$29537$1VmeqK
                                              g$sym$29533$1VmeqK
                                              g$mark*$29536$1VmeqK)))))
                                      (g$rib-sealed/freq$28675$1VmeqK
                                        g$rib$29537$1VmeqK))))
                                  (car g$subst*$29535$1VmeqK)))))))))
               g$search$29534$1VmeqK)
             (g$stx-subst*$28700$1VmeqK g$id$29532$1VmeqK)
             (g$stx-mark*$28699$1VmeqK g$id$29532$1VmeqK))))
         (g$id->sym$28725$1VmeqK g$id$29532$1VmeqK)))))
   (g$label->binding$28739$1VmeqK
     g$label->binding$32745$1VmeqK
     (case-lambda
       ((g$x$29547$1VmeqK g$r$29548$1VmeqK)
        (if (not g$x$29547$1VmeqK)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$29549$1VmeqK)
              (if g$t$29549$1VmeqK
                ((case-lambda
                   ((g$b$29550$1VmeqK)
                    (if (if (pair? g$b$29550$1VmeqK)
                          (begin
                            '#f
                            (eq? (car g$b$29550$1VmeqK) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$20349$1VmeqK
                          g$bless$29185$1VmeqK
                          (cdr g$b$29550$1VmeqK)))
                      (if (if (pair? g$b$29550$1VmeqK)
                            (begin
                              '#f
                              (eq? (car g$b$29550$1VmeqK) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$29551$1VmeqK g$loc$29552$1VmeqK)
                            (cons
                              '$rtd
                              (symbol-value g$loc$29552$1VmeqK))))
                         (g$cadr$21200$1VmeqK g$b$29550$1VmeqK)
                         (g$cddr$21202$1VmeqK g$b$29550$1VmeqK))
                        (begin '#f g$b$29550$1VmeqK)))))
                 g$t$29549$1VmeqK)
                ((case-lambda
                   ((g$t$29553$1VmeqK)
                    (if g$t$29553$1VmeqK
                      (cdr g$t$29553$1VmeqK)
                      ((case-lambda
                         ((g$t$29554$1VmeqK)
                          (if g$t$29554$1VmeqK
                            ((case-lambda
                               ((g$env$29555$1VmeqK)
                                ((case-lambda
                                   ((g$t$29556$1VmeqK)
                                    (if g$t$29556$1VmeqK
                                      ((case-lambda
                                         ((g$p$29557$1VmeqK)
                                          (g$cons*$20351$1VmeqK
                                            'lexical
                                            (cdr g$p$29557$1VmeqK)
                                            '#f)))
                                       g$t$29556$1VmeqK)
                                      (begin
                                        '#f
                                        '(displaced-lexical . #f)))))
                                 (g$assq$20337$1VmeqK
                                   g$x$29547$1VmeqK
                                   (g$interaction-env-locs$29309$1VmeqK
                                     g$env$29555$1VmeqK)))))
                             g$t$29554$1VmeqK)
                            (begin '#f '(displaced-lexical . #f)))))
                       (g$top-level-context$29349$1VmeqK)))))
                 (g$assq$20337$1VmeqK
                   g$x$29547$1VmeqK
                   g$r$29548$1VmeqK)))))
           (g$imported-label->binding$28429$1VmeqK
             g$x$29547$1VmeqK))))))
   (g$make-binding$28740$1VmeqK g$make-binding$32746$1VmeqK cons)
   (g$binding-type$28741$1VmeqK g$binding-type$32747$1VmeqK car)
   (g$binding-value$28742$1VmeqK g$binding-value$32748$1VmeqK cdr)
   (g$raise-unbound-error$28743$1VmeqK
     g$raise-unbound-error$32749$1VmeqK
     (case-lambda
       ((g$id$29558$1VmeqK)
        (g$syntax-violation*$29340$1VmeqK
          '#f
          '"unbound identifier"
          g$id$29558$1VmeqK
          (g$make-undefined-violation$22809$1VmeqK)))))
   (g$syntax-type$28744$1VmeqK
     g$syntax-type$32750$1VmeqK
     (case-lambda
       ((g$e$29559$1VmeqK g$r$29560$1VmeqK)
        (if (g$id?$28724$1VmeqK g$e$29559$1VmeqK)
          ((case-lambda
             ((g$id$29561$1VmeqK)
              ((case-lambda
                 ((g$label$29562$1VmeqK)
                  ((case-lambda
                     ((g$b$29563$1VmeqK)
                      ((case-lambda
                         ((g$type$29564$1VmeqK)
                          (begin
                            (if (not g$label$29562$1VmeqK)
                              (g$raise-unbound-error$28743$1VmeqK
                                g$id$29561$1VmeqK)
                              (void))
                            ((case-lambda
                               ((g$t$29565$1VmeqK)
                                (if (g$memv$20342$1VmeqK
                                      g$t$29565$1VmeqK
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$29564$1VmeqK
                                    (g$binding-value$28742$1VmeqK
                                      g$b$29563$1VmeqK)
                                    g$id$29561$1VmeqK)
                                  (begin '#f (values 'other '#f '#f)))))
                             g$type$29564$1VmeqK))))
                       (g$binding-type$28741$1VmeqK g$b$29563$1VmeqK))))
                   (g$label->binding$28739$1VmeqK
                     g$label$29562$1VmeqK
                     g$r$29560$1VmeqK))))
               (g$id->label$28737$1VmeqK g$id$29561$1VmeqK))))
           g$e$29559$1VmeqK)
          (if (g$syntax-pair?$28717$1VmeqK g$e$29559$1VmeqK)
            ((case-lambda
               ((g$id$29566$1VmeqK)
                (if (g$id?$28724$1VmeqK g$id$29566$1VmeqK)
                  ((case-lambda
                     ((g$label$29567$1VmeqK)
                      ((case-lambda
                         ((g$b$29568$1VmeqK)
                          ((case-lambda
                             ((g$type$29569$1VmeqK)
                              (begin
                                (if (not g$label$29567$1VmeqK)
                                  (g$raise-unbound-error$28743$1VmeqK
                                    g$id$29566$1VmeqK)
                                  (void))
                                ((case-lambda
                                   ((g$t$29570$1VmeqK)
                                    (if (g$memv$20342$1VmeqK
                                          g$t$29570$1VmeqK
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$29569$1VmeqK
                                        (g$binding-value$28742$1VmeqK
                                          g$b$29568$1VmeqK)
                                        g$id$29566$1VmeqK)
                                      (begin
                                        '#f
                                        (values 'call '#f '#f)))))
                                 g$type$29569$1VmeqK))))
                           (g$binding-type$28741$1VmeqK
                             g$b$29568$1VmeqK))))
                       (g$label->binding$28739$1VmeqK
                         g$label$29567$1VmeqK
                         g$r$29560$1VmeqK))))
                   (g$id->label$28737$1VmeqK g$id$29566$1VmeqK))
                  (values 'call '#f '#f))))
             (g$syntax-car$28721$1VmeqK g$e$29559$1VmeqK))
            (begin
              '#f
              ((case-lambda
                 ((g$d$29571$1VmeqK)
                  (if (g$self-evaluating?$28732$1VmeqK g$d$29571$1VmeqK)
                    (values 'constant g$d$29571$1VmeqK '#f)
                    (values 'other '#f '#f))))
               (g$stx->datum$28735$1VmeqK g$e$29559$1VmeqK))))))))
   (g$sanitize-binding$28767$1VmeqK
     g$sanitize-binding$32751$1VmeqK
     (case-lambda
       ((g$x$29572$1VmeqK g$src$29573$1VmeqK)
        (if (g$procedure?$21183$1VmeqK g$x$29572$1VmeqK)
          (g$cons*$20351$1VmeqK
            'local-macro
            g$x$29572$1VmeqK
            g$src$29573$1VmeqK)
          (if (if (pair? g$x$29572$1VmeqK)
                (if (eq? (car g$x$29572$1VmeqK) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$21183$1VmeqK (cdr g$x$29572$1VmeqK)))
                  '#f)
                '#f)
            (g$cons*$20351$1VmeqK
              'local-macro!
              (cdr g$x$29572$1VmeqK)
              g$src$29573$1VmeqK)
            (if (if (pair? g$x$29572$1VmeqK)
                  (begin '#f (eq? (car g$x$29572$1VmeqK) '$rtd))
                  '#f)
              g$x$29572$1VmeqK
              (if (if (pair? g$x$29572$1VmeqK)
                    (begin '#f (eq? (car g$x$29572$1VmeqK) 'ctv))
                    '#f)
                (g$cons*$20351$1VmeqK
                  'local-ctv
                  (cdr g$x$29572$1VmeqK)
                  g$src$29573$1VmeqK)
                (begin
                  '#f
                  (assertion-violation
                    'expand
                    '"invalid transformer"
                    g$x$29572$1VmeqK)))))))))
   (g$make-variable-transformer$28768$1VmeqK
     g$make-variable-transformer$32752$1VmeqK
     (case-lambda
       ((g$x$29574$1VmeqK)
        (if (g$procedure?$21183$1VmeqK g$x$29574$1VmeqK)
          (cons 'macro! g$x$29574$1VmeqK)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$29574$1VmeqK)))))
   (g$make-compile-time-value$28769$1VmeqK
     g$make-compile-time-value$32753$1VmeqK
     (case-lambda ((g$x$29575$1VmeqK) (cons 'ctv g$x$29575$1VmeqK))))
   (g$variable-transformer?$28770$1VmeqK
     g$variable-transformer?$32754$1VmeqK
     (case-lambda
       ((g$x$29576$1VmeqK)
        (if (pair? g$x$29576$1VmeqK)
          (if (eq? (car g$x$29576$1VmeqK) 'macro!)
            (begin
              '#f
              (g$procedure?$21183$1VmeqK (cdr g$x$29576$1VmeqK)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$28771$1VmeqK
     g$variable-transformer-procedure$32755$1VmeqK
     (case-lambda
       ((g$x$29577$1VmeqK)
        (if (g$variable-transformer?$28770$1VmeqK g$x$29577$1VmeqK)
          (cdr g$x$29577$1VmeqK)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$29577$1VmeqK)))))
   (g$make-eval-transformer$28772$1VmeqK
     g$make-eval-transformer$32756$1VmeqK
     (case-lambda
       ((g$x$29578$1VmeqK)
        (g$sanitize-binding$28767$1VmeqK
          (eval-core (g$expanded->core$28162$1VmeqK g$x$29578$1VmeqK))
          g$x$29578$1VmeqK))))
   (g$parse-define$29162$1VmeqK
     g$parse-define$32757$1VmeqK
     (case-lambda
       ((g$x$29579$1VmeqK)
        ((case-lambda
           ((g$t$29580$1VmeqK)
            ((case-lambda
               ((g$ls/false$29581$1VmeqK)
                (if (if g$ls/false$29581$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29582$1VmeqK
                               g$fmls$29583$1VmeqK
                               g$b$29584$1VmeqK
                               g$b*$29585$1VmeqK)
                             (g$id?$28724$1VmeqK g$id$29582$1VmeqK)))
                          g$ls/false$29581$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29586$1VmeqK
                         g$fmls$29587$1VmeqK
                         g$b$29588$1VmeqK
                         g$b*$29589$1VmeqK)
                       (begin
                         (g$verify-formals$29242$1VmeqK
                           g$fmls$29587$1VmeqK
                           g$x$29579$1VmeqK)
                         (values
                           g$id$29586$1VmeqK
                           (cons
                             'defun
                             (cons
                               g$fmls$29587$1VmeqK
                               (cons
                                 g$b$29588$1VmeqK
                                 g$b*$29589$1VmeqK)))))))
                    g$ls/false$29581$1VmeqK)
                  ((case-lambda
                     ((g$t$29590$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$29591$1VmeqK)
                          (if (if g$ls/false$29591$1VmeqK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$29592$1VmeqK
                                         g$val$29593$1VmeqK)
                                       (g$id?$28724$1VmeqK
                                         g$id$29592$1VmeqK)))
                                    g$ls/false$29591$1VmeqK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$29594$1VmeqK g$val$29595$1VmeqK)
                                 (values
                                   g$id$29594$1VmeqK
                                   (cons 'expr g$val$29595$1VmeqK))))
                              g$ls/false$29591$1VmeqK)
                            ((case-lambda
                               ((g$t$29596$1VmeqK)
                                ((case-lambda
                                   ((g$ls/false$29597$1VmeqK)
                                    (if (if g$ls/false$29597$1VmeqK
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$29598$1VmeqK)
                                                 (g$id?$28724$1VmeqK
                                                   g$id$29598$1VmeqK)))
                                              g$ls/false$29597$1VmeqK))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$29599$1VmeqK)
                                           (values
                                             g$id$29599$1VmeqK
                                             (cons
                                               'expr
                                               (g$bless$29185$1VmeqK
                                                 '(void))))))
                                        g$ls/false$29597$1VmeqK)
                                      (g$syntax-violation$29341$1VmeqK
                                        '#f
                                        '"invalid syntax"
                                        g$t$29596$1VmeqK))))
                                 (g$syntax-dispatch$29222$1VmeqK
                                   g$t$29596$1VmeqK
                                   '(_ any)))))
                             g$t$29590$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$29590$1VmeqK
                         '(_ any any)))))
                   g$t$29580$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29580$1VmeqK
               '(_ (any . any) any . each-any)))))
         g$x$29579$1VmeqK))))
   (g$parse-define-syntax$29163$1VmeqK
     g$parse-define-syntax$32758$1VmeqK
     (case-lambda
       ((g$x$29600$1VmeqK)
        ((case-lambda
           ((g$t$29601$1VmeqK)
            ((case-lambda
               ((g$ls/false$29602$1VmeqK)
                (if (if g$ls/false$29602$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29603$1VmeqK g$val$29604$1VmeqK)
                             (g$id?$28724$1VmeqK g$id$29603$1VmeqK)))
                          g$ls/false$29602$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29605$1VmeqK g$val$29606$1VmeqK)
                       (values g$id$29605$1VmeqK g$val$29606$1VmeqK)))
                    g$ls/false$29602$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29601$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29601$1VmeqK
               '(_ any any)))))
         g$x$29600$1VmeqK))))
   (g$scheme-stx-hashtable$29164$1VmeqK
     g$scheme-stx-hashtable$32759$1VmeqK
     (g$make-eq-hashtable$21297$1VmeqK))
   (g$scheme-stx$29165$1VmeqK
     g$scheme-stx$32760$1VmeqK
     (case-lambda
       ((g$sym$29607$1VmeqK)
        ((case-lambda
           ((g$t$29608$1VmeqK)
            (if g$t$29608$1VmeqK
              g$t$29608$1VmeqK
              (begin
                '#f
                ((case-lambda
                   ((g$subst$29609$1VmeqK)
                    ((case-lambda
                       ((g$stx$29610$1VmeqK)
                        ((case-lambda
                           ((g$stx$29611$1VmeqK)
                            (begin
                              (g$hashtable-set!$21301$1VmeqK
                                g$scheme-stx-hashtable$29164$1VmeqK
                                g$sym$29607$1VmeqK
                                g$stx$29611$1VmeqK)
                              g$stx$29611$1VmeqK)))
                         ((case-lambda
                            ((g$t$29612$1VmeqK)
                             (if g$t$29612$1VmeqK
                               ((case-lambda
                                  ((g$x$29613$1VmeqK)
                                   ((case-lambda
                                      ((g$name$29614$1VmeqK
                                         g$label$29615$1VmeqK)
                                       (g$add-subst$28714$1VmeqK
                                         (g$make-rib$28671$1VmeqK
                                           (list g$name$29614$1VmeqK)
                                           (list
                                             g$top-mark*$28657$1VmeqK)
                                           (list g$label$29615$1VmeqK)
                                           '#f
                                           '#f)
                                         g$stx$29610$1VmeqK)))
                                    (car g$x$29613$1VmeqK)
                                    (cdr g$x$29613$1VmeqK))))
                                g$t$29612$1VmeqK)
                               (begin '#f g$stx$29610$1VmeqK))))
                          (g$assq$20337$1VmeqK
                            g$sym$29607$1VmeqK
                            g$subst$29609$1VmeqK)))))
                     (g$make-stx$28697$1VmeqK
                       g$sym$29607$1VmeqK
                       g$top-mark*$28657$1VmeqK
                       '()
                       '()))))
                 (g$library-subst$28387$1VmeqK
                   (g$find-library-by-name$28423$1VmeqK
                     '(psyntax system $all))))))))
         (g$hashtable-ref$21300$1VmeqK
           g$scheme-stx-hashtable$29164$1VmeqK
           g$sym$29607$1VmeqK
           '#f)))))
   (g$lexical-var$29166$1VmeqK g$lexical-var$32761$1VmeqK car)
   (g$lexical-mutable?$29167$1VmeqK g$lexical-mutable?$32762$1VmeqK cdr)
   (g$set-lexical-mutable!$29168$1VmeqK
     g$set-lexical-mutable!$32763$1VmeqK
     set-cdr!)
   (g$add-lexical$29169$1VmeqK
     g$add-lexical$32764$1VmeqK
     (case-lambda
       ((g$lab$29616$1VmeqK g$lex$29617$1VmeqK g$r$29618$1VmeqK)
        (cons
          (g$cons*$20351$1VmeqK
            g$lab$29616$1VmeqK
            'lexical
            g$lex$29617$1VmeqK
            '#f)
          g$r$29618$1VmeqK))))
   (g$add-lexicals$29170$1VmeqK
     g$add-lexicals$32765$1VmeqK
     (case-lambda
       ((g$lab*$29619$1VmeqK g$lex*$29620$1VmeqK g$r$29621$1VmeqK)
        (if (null? g$lab*$29619$1VmeqK)
          g$r$29621$1VmeqK
          (begin
            '#f
            (g$add-lexicals$29170$1VmeqK
              (cdr g$lab*$29619$1VmeqK)
              (cdr g$lex*$29620$1VmeqK)
              (g$add-lexical$29169$1VmeqK
                (car g$lab*$29619$1VmeqK)
                (car g$lex*$29620$1VmeqK)
                g$r$29621$1VmeqK)))))))
   (g$letrec-helper$29171$1VmeqK
     g$letrec-helper$32766$1VmeqK
     (case-lambda
       ((g$e$29622$1VmeqK
          g$r$29623$1VmeqK
          g$mr$29624$1VmeqK
          g$build$29625$1VmeqK)
        ((case-lambda
           ((g$t$29626$1VmeqK)
            ((case-lambda
               ((g$ls/false$29627$1VmeqK)
                (if g$ls/false$29627$1VmeqK
                  (apply
                    (case-lambda
                      ((g$lhs*$29628$1VmeqK
                         g$rhs*$29629$1VmeqK
                         g$b$29630$1VmeqK
                         g$b*$29631$1VmeqK)
                       (if (not (g$valid-bound-ids?$28729$1VmeqK
                                  g$lhs*$29628$1VmeqK))
                         (g$invalid-fmls-error$29187$1VmeqK
                           g$e$29622$1VmeqK
                           g$lhs*$29628$1VmeqK)
                         ((case-lambda
                            ((g$lex*$29632$1VmeqK g$lab*$29633$1VmeqK)
                             ((case-lambda
                                ((g$rib$29634$1VmeqK g$r$29635$1VmeqK)
                                 ((case-lambda
                                    ((g$body$29636$1VmeqK
                                       g$rhs*$29637$1VmeqK)
                                     (g$build$29625$1VmeqK
                                       '#f
                                       g$lex*$29632$1VmeqK
                                       g$rhs*$29637$1VmeqK
                                       g$body$29636$1VmeqK)))
                                  (g$chi-internal$29251$1VmeqK
                                    (g$add-subst$28714$1VmeqK
                                      g$rib$29634$1VmeqK
                                      (cons
                                        g$b$29630$1VmeqK
                                        g$b*$29631$1VmeqK))
                                    g$r$29635$1VmeqK
                                    g$mr$29624$1VmeqK)
                                  (g$chi-expr*$29238$1VmeqK
                                    (g$map$20349$1VmeqK
                                      (case-lambda
                                        ((g$x$29638$1VmeqK)
                                         (g$add-subst$28714$1VmeqK
                                           g$rib$29634$1VmeqK
                                           g$x$29638$1VmeqK)))
                                      g$rhs*$29629$1VmeqK)
                                    g$r$29635$1VmeqK
                                    g$mr$29624$1VmeqK))))
                              (g$make-full-rib$28690$1VmeqK
                                g$lhs*$29628$1VmeqK
                                g$lab*$29633$1VmeqK)
                              (g$add-lexicals$29170$1VmeqK
                                g$lab*$29633$1VmeqK
                                g$lex*$29632$1VmeqK
                                g$r$29623$1VmeqK))))
                          (g$map$20349$1VmeqK
                            g$gen-lexical$28659$1VmeqK
                            g$lhs*$29628$1VmeqK)
                          (g$map$20349$1VmeqK
                            g$gen-label$28661$1VmeqK
                            g$lhs*$29628$1VmeqK)))))
                    g$ls/false$29627$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29626$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29626$1VmeqK
               '(_ #(each (any any)) any . each-any)))))
         g$e$29622$1VmeqK))))
   (g$letrec-transformer$29172$1VmeqK
     g$letrec-transformer$32767$1VmeqK
     (case-lambda
       ((g$e$29639$1VmeqK g$r$29640$1VmeqK g$mr$29641$1VmeqK)
        (g$letrec-helper$29171$1VmeqK
          g$e$29639$1VmeqK
          g$r$29640$1VmeqK
          g$mr$29641$1VmeqK
          g$build-letrec$28651$1VmeqK))))
   (g$letrec*-transformer$29173$1VmeqK
     g$letrec*-transformer$32768$1VmeqK
     (case-lambda
       ((g$e$29642$1VmeqK g$r$29643$1VmeqK g$mr$29644$1VmeqK)
        (g$letrec-helper$29171$1VmeqK
          g$e$29642$1VmeqK
          g$r$29643$1VmeqK
          g$mr$29644$1VmeqK
          g$build-letrec*$28652$1VmeqK))))
   (g$fluid-let-syntax-transformer$29174$1VmeqK
     g$fluid-let-syntax-transformer$32769$1VmeqK
     (case-lambda
       ((g$e$29645$1VmeqK g$r$29646$1VmeqK g$mr$29647$1VmeqK)
        (letrec* ((g$lookup$29648$1VmeqK
                    (case-lambda
                      ((g$x$29658$1VmeqK)
                       ((case-lambda
                          ((g$t$29659$1VmeqK)
                           (if g$t$29659$1VmeqK
                             g$t$29659$1VmeqK
                             (begin
                               '#f
                               (g$syntax-violation$29341$1VmeqK
                                 '#f
                                 '"unbound identifier"
                                 g$e$29645$1VmeqK
                                 g$x$29658$1VmeqK)))))
                        (g$id->label$28737$1VmeqK g$x$29658$1VmeqK))))))
          ((case-lambda
             ((g$t$29649$1VmeqK)
              ((case-lambda
                 ((g$ls/false$29650$1VmeqK)
                  (if g$ls/false$29650$1VmeqK
                    (apply
                      (case-lambda
                        ((g$lhs*$29651$1VmeqK
                           g$rhs*$29652$1VmeqK
                           g$b$29653$1VmeqK
                           g$b*$29654$1VmeqK)
                         (if (not (g$valid-bound-ids?$28729$1VmeqK
                                    g$lhs*$29651$1VmeqK))
                           (g$invalid-fmls-error$29187$1VmeqK
                             g$e$29645$1VmeqK
                             g$lhs*$29651$1VmeqK)
                           ((case-lambda
                              ((g$lab*$29655$1VmeqK g$rhs*$29656$1VmeqK)
                               (g$chi-internal$29251$1VmeqK
                                 (cons
                                   g$b$29653$1VmeqK
                                   g$b*$29654$1VmeqK)
                                 (append
                                   (g$map$20349$1VmeqK
                                     cons
                                     g$lab*$29655$1VmeqK
                                     g$rhs*$29656$1VmeqK)
                                   g$r$29646$1VmeqK)
                                 (append
                                   (g$map$20349$1VmeqK
                                     cons
                                     g$lab*$29655$1VmeqK
                                     g$rhs*$29656$1VmeqK)
                                   g$mr$29647$1VmeqK))))
                            (g$map$20349$1VmeqK
                              g$lookup$29648$1VmeqK
                              g$lhs*$29651$1VmeqK)
                            (g$map$20349$1VmeqK
                              (case-lambda
                                ((g$x$29657$1VmeqK)
                                 (g$make-eval-transformer$28772$1VmeqK
                                   (g$expand-transformer$29270$1VmeqK
                                     g$x$29657$1VmeqK
                                     g$mr$29647$1VmeqK))))
                              g$rhs*$29652$1VmeqK)))))
                      g$ls/false$29650$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$29649$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$29649$1VmeqK
                 '(_ #(each (any any)) any . each-any)))))
           g$e$29645$1VmeqK)))))
   (g$type-descriptor-transformer$29175$1VmeqK
     g$type-descriptor-transformer$32770$1VmeqK
     (case-lambda
       ((g$e$29660$1VmeqK g$r$29661$1VmeqK g$mr$29662$1VmeqK)
        ((case-lambda
           ((g$t$29663$1VmeqK)
            ((case-lambda
               ((g$ls/false$29664$1VmeqK)
                (if (if g$ls/false$29664$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29665$1VmeqK)
                             (g$id?$28724$1VmeqK g$id$29665$1VmeqK)))
                          g$ls/false$29664$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29666$1VmeqK)
                       ((case-lambda
                          ((g$lab$29667$1VmeqK)
                           ((case-lambda
                              ((g$b$29668$1VmeqK)
                               ((case-lambda
                                  ((g$type$29669$1VmeqK)
                                   (begin
                                     (if (not g$lab$29667$1VmeqK)
                                       (g$raise-unbound-error$28743$1VmeqK
                                         g$id$29666$1VmeqK)
                                       (void))
                                     (if (not (if (eq? g$type$29669$1VmeqK
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$28742$1VmeqK
                                                           g$b$29668$1VmeqK))))
                                                '#f))
                                       (g$syntax-violation$29341$1VmeqK
                                         '#f
                                         '"not a record type"
                                         g$e$29660$1VmeqK)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$28742$1VmeqK
                                         g$b$29668$1VmeqK)))))
                                (g$binding-type$28741$1VmeqK
                                  g$b$29668$1VmeqK))))
                            (g$label->binding$28739$1VmeqK
                              g$lab$29667$1VmeqK
                              g$r$29661$1VmeqK))))
                        (g$id->label$28737$1VmeqK g$id$29666$1VmeqK))))
                    g$ls/false$29664$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29663$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29663$1VmeqK
               '(_ any)))))
         g$e$29660$1VmeqK))))
   (g$record-type-descriptor-transformer$29176$1VmeqK
     g$record-type-descriptor-transformer$32771$1VmeqK
     (case-lambda
       ((g$e$29670$1VmeqK g$r$29671$1VmeqK g$mr$29672$1VmeqK)
        ((case-lambda
           ((g$t$29673$1VmeqK)
            ((case-lambda
               ((g$ls/false$29674$1VmeqK)
                (if (if g$ls/false$29674$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29675$1VmeqK)
                             (g$id?$28724$1VmeqK g$id$29675$1VmeqK)))
                          g$ls/false$29674$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29676$1VmeqK)
                       ((case-lambda
                          ((g$lab$29677$1VmeqK)
                           ((case-lambda
                              ((g$b$29678$1VmeqK)
                               ((case-lambda
                                  ((g$type$29679$1VmeqK)
                                   (begin
                                     (if (not g$lab$29677$1VmeqK)
                                       (g$raise-unbound-error$28743$1VmeqK
                                         g$id$29676$1VmeqK)
                                       (void))
                                     (if (not (if (eq? g$type$29679$1VmeqK
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$28742$1VmeqK
                                                      g$b$29678$1VmeqK)))
                                                '#f))
                                       (g$syntax-violation$29341$1VmeqK
                                         '#f
                                         '"not a record type"
                                         g$e$29670$1VmeqK)
                                       (void))
                                     (g$chi-expr$29240$1VmeqK
                                       (car (g$binding-value$28742$1VmeqK
                                              g$b$29678$1VmeqK))
                                       g$r$29671$1VmeqK
                                       g$mr$29672$1VmeqK))))
                                (g$binding-type$28741$1VmeqK
                                  g$b$29678$1VmeqK))))
                            (g$label->binding$28739$1VmeqK
                              g$lab$29677$1VmeqK
                              g$r$29671$1VmeqK))))
                        (g$id->label$28737$1VmeqK g$id$29676$1VmeqK))))
                    g$ls/false$29674$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29673$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29673$1VmeqK
               '(_ any)))))
         g$e$29670$1VmeqK))))
   (g$record-constructor-descriptor-transformer$29177$1VmeqK
     g$record-constructor-descriptor-transformer$32772$1VmeqK
     (case-lambda
       ((g$e$29680$1VmeqK g$r$29681$1VmeqK g$mr$29682$1VmeqK)
        ((case-lambda
           ((g$t$29683$1VmeqK)
            ((case-lambda
               ((g$ls/false$29684$1VmeqK)
                (if (if g$ls/false$29684$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29685$1VmeqK)
                             (g$id?$28724$1VmeqK g$id$29685$1VmeqK)))
                          g$ls/false$29684$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29686$1VmeqK)
                       ((case-lambda
                          ((g$lab$29687$1VmeqK)
                           ((case-lambda
                              ((g$b$29688$1VmeqK)
                               ((case-lambda
                                  ((g$type$29689$1VmeqK)
                                   (begin
                                     (if (not g$lab$29687$1VmeqK)
                                       (g$raise-unbound-error$28743$1VmeqK
                                         g$id$29686$1VmeqK)
                                       (void))
                                     (if (not (if (eq? g$type$29689$1VmeqK
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$28742$1VmeqK
                                                      g$b$29688$1VmeqK)))
                                                '#f))
                                       (g$syntax-violation$29341$1VmeqK
                                         '#f
                                         '"invalid type"
                                         g$e$29680$1VmeqK)
                                       (void))
                                     (g$chi-expr$29240$1VmeqK
                                       (g$cadr$21200$1VmeqK
                                         (g$binding-value$28742$1VmeqK
                                           g$b$29688$1VmeqK))
                                       g$r$29681$1VmeqK
                                       g$mr$29682$1VmeqK))))
                                (g$binding-type$28741$1VmeqK
                                  g$b$29688$1VmeqK))))
                            (g$label->binding$28739$1VmeqK
                              g$lab$29687$1VmeqK
                              g$r$29681$1VmeqK))))
                        (g$id->label$28737$1VmeqK g$id$29686$1VmeqK))))
                    g$ls/false$29684$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29683$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29683$1VmeqK
               '(_ any)))))
         g$e$29680$1VmeqK))))
   (g$when-macro$29178$1VmeqK
     g$when-macro$32773$1VmeqK
     (case-lambda
       ((g$e$29690$1VmeqK)
        ((case-lambda
           ((g$t$29691$1VmeqK)
            ((case-lambda
               ((g$ls/false$29692$1VmeqK)
                (if g$ls/false$29692$1VmeqK
                  (apply
                    (case-lambda
                      ((g$test$29693$1VmeqK
                         g$e$29694$1VmeqK
                         g$e*$29695$1VmeqK)
                       (g$bless$29185$1VmeqK
                         (list
                           'if
                           g$test$29693$1VmeqK
                           (cons
                             'begin
                             (cons
                               g$e$29694$1VmeqK
                               g$e*$29695$1VmeqK))))))
                    g$ls/false$29692$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29691$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29691$1VmeqK
               '(_ any any . each-any)))))
         g$e$29690$1VmeqK))))
   (g$unless-macro$29179$1VmeqK
     g$unless-macro$32774$1VmeqK
     (case-lambda
       ((g$e$29696$1VmeqK)
        ((case-lambda
           ((g$t$29697$1VmeqK)
            ((case-lambda
               ((g$ls/false$29698$1VmeqK)
                (if g$ls/false$29698$1VmeqK
                  (apply
                    (case-lambda
                      ((g$test$29699$1VmeqK
                         g$e$29700$1VmeqK
                         g$e*$29701$1VmeqK)
                       (g$bless$29185$1VmeqK
                         (list
                           'if
                           (list 'not g$test$29699$1VmeqK)
                           (cons
                             'begin
                             (cons
                               g$e$29700$1VmeqK
                               g$e*$29701$1VmeqK))))))
                    g$ls/false$29698$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29697$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29697$1VmeqK
               '(_ any any . each-any)))))
         g$e$29696$1VmeqK))))
   (g$if-transformer$29180$1VmeqK
     g$if-transformer$32775$1VmeqK
     (case-lambda
       ((g$e$29702$1VmeqK g$r$29703$1VmeqK g$mr$29704$1VmeqK)
        ((case-lambda
           ((g$t$29705$1VmeqK)
            ((case-lambda
               ((g$ls/false$29706$1VmeqK)
                (if g$ls/false$29706$1VmeqK
                  (apply
                    (case-lambda
                      ((g$e0$29707$1VmeqK
                         g$e1$29708$1VmeqK
                         g$e2$29709$1VmeqK)
                       (list
                         'if
                         (g$chi-expr$29240$1VmeqK
                           g$e0$29707$1VmeqK
                           g$r$29703$1VmeqK
                           g$mr$29704$1VmeqK)
                         (g$chi-expr$29240$1VmeqK
                           g$e1$29708$1VmeqK
                           g$r$29703$1VmeqK
                           g$mr$29704$1VmeqK)
                         (g$chi-expr$29240$1VmeqK
                           g$e2$29709$1VmeqK
                           g$r$29703$1VmeqK
                           g$mr$29704$1VmeqK))))
                    g$ls/false$29706$1VmeqK)
                  ((case-lambda
                     ((g$t$29710$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$29711$1VmeqK)
                          (if g$ls/false$29711$1VmeqK
                            (apply
                              (case-lambda
                                ((g$e0$29712$1VmeqK g$e1$29713$1VmeqK)
                                 (list
                                   'if
                                   (g$chi-expr$29240$1VmeqK
                                     g$e0$29712$1VmeqK
                                     g$r$29703$1VmeqK
                                     g$mr$29704$1VmeqK)
                                   (g$chi-expr$29240$1VmeqK
                                     g$e1$29713$1VmeqK
                                     g$r$29703$1VmeqK
                                     g$mr$29704$1VmeqK)
                                   (g$build-void$28650$1VmeqK))))
                              g$ls/false$29711$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$29710$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$29710$1VmeqK
                         '(_ any any)))))
                   g$t$29705$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29705$1VmeqK
               '(_ any any any)))))
         g$e$29702$1VmeqK))))
   (g$case-macro$29181$1VmeqK
     g$case-macro$32776$1VmeqK
     (case-lambda
       ((g$e$29714$1VmeqK)
        (letrec* ((g$build-last$29715$1VmeqK
                    (case-lambda
                      ((g$cls$29735$1VmeqK)
                       ((case-lambda
                          ((g$t$29736$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$29737$1VmeqK)
                               (if g$ls/false$29737$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$e$29738$1VmeqK
                                        g$e*$29739$1VmeqK)
                                      (cons
                                        'begin
                                        (cons
                                          '#f
                                          (cons
                                            g$e$29738$1VmeqK
                                            g$e*$29739$1VmeqK)))))
                                   g$ls/false$29737$1VmeqK)
                                 ((case-lambda
                                    ((g$t$29740$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$29741$1VmeqK)
                                         (if g$ls/false$29741$1VmeqK
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$29716$1VmeqK
                                                  g$cls$29735$1VmeqK
                                                  '(if #f #f))))
                                             g$ls/false$29741$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$29740$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$29740$1VmeqK
                                        '_))))
                                  g$t$29736$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$29736$1VmeqK
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$29735$1VmeqK))))
                  (g$build-one$29716$1VmeqK
                    (case-lambda
                      ((g$cls$29728$1VmeqK g$k$29729$1VmeqK)
                       ((case-lambda
                          ((g$t$29730$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$29731$1VmeqK)
                               (if g$ls/false$29731$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$d*$29732$1VmeqK
                                        g$e$29733$1VmeqK
                                        g$e*$29734$1VmeqK)
                                      (if (g$=$22210$1VmeqK
                                            '1
                                            (length g$d*$29732$1VmeqK))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$29732$1VmeqK)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29733$1VmeqK
                                              g$e*$29734$1VmeqK))
                                          g$k$29729$1VmeqK)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$29732$1VmeqK))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29733$1VmeqK
                                              g$e*$29734$1VmeqK))
                                          g$k$29729$1VmeqK))))
                                   g$ls/false$29731$1VmeqK)
                                 (g$syntax-violation$29341$1VmeqK
                                   '#f
                                   '"invalid syntax"
                                   g$t$29730$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$29730$1VmeqK
                              '(each-any any . each-any)))))
                        g$cls$29728$1VmeqK)))))
          ((case-lambda
             ((g$t$29717$1VmeqK)
              ((case-lambda
                 ((g$ls/false$29718$1VmeqK)
                  (if g$ls/false$29718$1VmeqK
                    (apply
                      (case-lambda
                        ((g$expr$29719$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$29719$1VmeqK))
                               '((if #f #f)))))))
                      g$ls/false$29718$1VmeqK)
                    ((case-lambda
                       ((g$t$29720$1VmeqK)
                        ((case-lambda
                           ((g$ls/false$29721$1VmeqK)
                            (if g$ls/false$29721$1VmeqK
                              (apply
                                (case-lambda
                                  ((g$expr$29722$1VmeqK
                                     g$cls$29723$1VmeqK
                                     g$cls*$29724$1VmeqK)
                                   (g$bless$29185$1VmeqK
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$29722$1VmeqK))
                                       ((letrec ((g$f$29725$1VmeqK
                                                   (case-lambda
                                                     ((g$cls$29726$1VmeqK
                                                        g$cls*$29727$1VmeqK)
                                                      (if (null?
                                                            g$cls*$29727$1VmeqK)
                                                        (g$build-last$29715$1VmeqK
                                                          g$cls$29726$1VmeqK)
                                                        (g$build-one$29716$1VmeqK
                                                          g$cls$29726$1VmeqK
                                                          (g$f$29725$1VmeqK
                                                            (car g$cls*$29727$1VmeqK)
                                                            (cdr g$cls*$29727$1VmeqK))))))))
                                          g$f$29725$1VmeqK)
                                        g$cls$29723$1VmeqK
                                        g$cls*$29724$1VmeqK)))))
                                g$ls/false$29721$1VmeqK)
                              (g$syntax-violation$29341$1VmeqK
                                '#f
                                '"invalid syntax"
                                g$t$29720$1VmeqK))))
                         (g$syntax-dispatch$29222$1VmeqK
                           g$t$29720$1VmeqK
                           '(_ any any . each-any)))))
                     g$t$29717$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$29717$1VmeqK
                 '(_ any)))))
           g$e$29714$1VmeqK)))))
   (g$quote-transformer$29182$1VmeqK
     g$quote-transformer$32777$1VmeqK
     (case-lambda
       ((g$e$29742$1VmeqK g$r$29743$1VmeqK g$mr$29744$1VmeqK)
        ((case-lambda
           ((g$t$29745$1VmeqK)
            ((case-lambda
               ((g$ls/false$29746$1VmeqK)
                (if g$ls/false$29746$1VmeqK
                  (apply
                    (case-lambda
                      ((g$datum$29747$1VmeqK)
                       (list
                         'quote
                         (g$stx->datum$28735$1VmeqK
                           g$datum$29747$1VmeqK))))
                    g$ls/false$29746$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29745$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29745$1VmeqK
               '(_ any)))))
         g$e$29742$1VmeqK))))
   (g$case-lambda-transformer$29183$1VmeqK
     g$case-lambda-transformer$32778$1VmeqK
     (case-lambda
       ((g$e$29748$1VmeqK g$r$29749$1VmeqK g$mr$29750$1VmeqK)
        ((case-lambda
           ((g$t$29751$1VmeqK)
            ((case-lambda
               ((g$ls/false$29752$1VmeqK)
                (if g$ls/false$29752$1VmeqK
                  (apply
                    (case-lambda
                      ((g$fmls*$29753$1VmeqK
                         g$b*$29754$1VmeqK
                         g$b**$29755$1VmeqK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$29244$1VmeqK
                              g$e$29748$1VmeqK
                              g$fmls*$29753$1VmeqK
                              (g$map$20349$1VmeqK
                                cons
                                g$b*$29754$1VmeqK
                                g$b**$29755$1VmeqK)
                              g$r$29749$1VmeqK
                              g$mr$29750$1VmeqK)))
                         (case-lambda
                           ((g$fmls*$29758$1VmeqK g$body*$29759$1VmeqK)
                            ((case-lambda
                               ((g$body*$29760$1VmeqK
                                  g$fmls*$29761$1VmeqK)
                                (g$build-case-lambda$28647$1VmeqK
                                  '#f
                                  g$fmls*$29761$1VmeqK
                                  g$body*$29760$1VmeqK)))
                             g$body*$29759$1VmeqK
                             g$fmls*$29758$1VmeqK))))))
                    g$ls/false$29752$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29751$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29751$1VmeqK
               '(_ . #(each (any any . each-any)))))))
         g$e$29748$1VmeqK))))
   (g$lambda-transformer$29184$1VmeqK
     g$lambda-transformer$32779$1VmeqK
     (case-lambda
       ((g$e$29762$1VmeqK g$r$29763$1VmeqK g$mr$29764$1VmeqK)
        ((case-lambda
           ((g$t$29765$1VmeqK)
            ((case-lambda
               ((g$ls/false$29766$1VmeqK)
                (if g$ls/false$29766$1VmeqK
                  (apply
                    (case-lambda
                      ((g$fmls$29767$1VmeqK
                         g$b$29768$1VmeqK
                         g$b*$29769$1VmeqK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$29243$1VmeqK
                              g$e$29762$1VmeqK
                              g$fmls$29767$1VmeqK
                              (cons g$b$29768$1VmeqK g$b*$29769$1VmeqK)
                              g$r$29763$1VmeqK
                              g$mr$29764$1VmeqK)))
                         (case-lambda
                           ((g$fmls$29772$1VmeqK g$body$29773$1VmeqK)
                            ((case-lambda
                               ((g$body$29774$1VmeqK
                                  g$fmls$29775$1VmeqK)
                                (g$build-lambda$28646$1VmeqK
                                  '#f
                                  g$fmls$29775$1VmeqK
                                  g$body$29774$1VmeqK)))
                             g$body$29773$1VmeqK
                             g$fmls$29772$1VmeqK))))))
                    g$ls/false$29766$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29765$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29765$1VmeqK
               '(_ any any . each-any)))))
         g$e$29762$1VmeqK))))
   (g$bless$29185$1VmeqK
     g$bless$32780$1VmeqK
     (case-lambda
       ((g$x$29776$1VmeqK)
        (g$mkstx$28712$1VmeqK
          ((letrec ((g$f$29777$1VmeqK
                      (case-lambda
                        ((g$x$29778$1VmeqK)
                         (if (g$stx?$28696$1VmeqK g$x$29778$1VmeqK)
                           g$x$29778$1VmeqK
                           (if (pair? g$x$29778$1VmeqK)
                             (cons
                               (g$f$29777$1VmeqK (car g$x$29778$1VmeqK))
                               (g$f$29777$1VmeqK
                                 (cdr g$x$29778$1VmeqK)))
                             (if (g$symbol?$21181$1VmeqK
                                   g$x$29778$1VmeqK)
                               (g$scheme-stx$29165$1VmeqK
                                 g$x$29778$1VmeqK)
                               (if (g$vector?$21179$1VmeqK
                                     g$x$29778$1VmeqK)
                                 (g$vector-map$21248$1VmeqK
                                   g$f$29777$1VmeqK
                                   g$x$29778$1VmeqK)
                                 (begin '#f g$x$29778$1VmeqK)))))))))
             g$f$29777$1VmeqK)
           g$x$29776$1VmeqK)
          '()
          '()
          '()))))
   (g$with-syntax-macro$29186$1VmeqK
     g$with-syntax-macro$32781$1VmeqK
     (case-lambda
       ((g$e$29779$1VmeqK)
        ((case-lambda
           ((g$t$29780$1VmeqK)
            ((case-lambda
               ((g$ls/false$29781$1VmeqK)
                (if g$ls/false$29781$1VmeqK
                  (apply
                    (case-lambda
                      ((g$pat*$29782$1VmeqK
                         g$expr*$29783$1VmeqK
                         g$b$29784$1VmeqK
                         g$b*$29785$1VmeqK)
                       ((case-lambda
                          ((g$idn*$29786$1VmeqK)
                           (begin
                             (g$verify-formals$29242$1VmeqK
                               (g$map$20349$1VmeqK
                                 car
                                 g$idn*$29786$1VmeqK)
                               g$e$29779$1VmeqK)
                             ((case-lambda
                                ((g$t*$29787$1VmeqK)
                                 (g$bless$29185$1VmeqK
                                   (list
                                     'let
                                     (g$map$20349$1VmeqK
                                       list
                                       g$t*$29787$1VmeqK
                                       g$expr*$29783$1VmeqK)
                                     ((letrec ((g$f$29788$1VmeqK
                                                 (case-lambda
                                                   ((g$pat*$29789$1VmeqK
                                                      g$t*$29790$1VmeqK)
                                                    (if (null?
                                                          g$pat*$29789$1VmeqK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$29784$1VmeqK
                                                          g$b*$29785$1VmeqK))
                                                      (begin
                                                        '#f
                                                        (list
                                                          'syntax-case
                                                          (car g$t*$29790$1VmeqK)
                                                          '()
                                                          (list
                                                            (car g$pat*$29789$1VmeqK)
                                                            (g$f$29788$1VmeqK
                                                              (cdr g$pat*$29789$1VmeqK)
                                                              (cdr g$t*$29790$1VmeqK)))
                                                          (list
                                                            '_
                                                            (list
                                                              'assertion-violation
                                                              ''with-syntax
                                                              '"pattern does not match value"
                                                              (list
                                                                'quote
                                                                (car g$pat*$29789$1VmeqK))
                                                              (car g$t*$29790$1VmeqK))))))))))
                                        g$f$29788$1VmeqK)
                                      g$pat*$29782$1VmeqK
                                      g$t*$29787$1VmeqK)))))
                              (g$generate-temporaries$29331$1VmeqK
                                g$expr*$29783$1VmeqK)))))
                        ((letrec ((g$f$29791$1VmeqK
                                    (case-lambda
                                      ((g$pat*$29792$1VmeqK)
                                       (if (null? g$pat*$29792$1VmeqK)
                                         '()
                                         (begin
                                           '#f
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$convert-pattern$29221$1VmeqK
                                                  (car g$pat*$29792$1VmeqK)
                                                  '())))
                                             (case-lambda
                                               ((g$pat$29795$1VmeqK
                                                  g$idn*$29796$1VmeqK)
                                                ((case-lambda
                                                   ((g$idn*$29797$1VmeqK
                                                      g$pat$29798$1VmeqK)
                                                    (append
                                                      g$idn*$29797$1VmeqK
                                                      (g$f$29791$1VmeqK
                                                        (cdr g$pat*$29792$1VmeqK)))))
                                                 g$idn*$29796$1VmeqK
                                                 g$pat$29795$1VmeqK))))))))))
                           g$f$29791$1VmeqK)
                         g$pat*$29782$1VmeqK))))
                    g$ls/false$29781$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29780$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29780$1VmeqK
               '(_ #(each (any any)) any . each-any)))))
         g$e$29779$1VmeqK))))
   (g$invalid-fmls-error$29187$1VmeqK
     g$invalid-fmls-error$32782$1VmeqK
     (case-lambda
       ((g$stx$29799$1VmeqK g$fmls$29800$1VmeqK)
        ((case-lambda
           ((g$t$29801$1VmeqK)
            ((case-lambda
               ((g$ls/false$29802$1VmeqK)
                (if g$ls/false$29802$1VmeqK
                  (apply
                    (case-lambda
                      ((g$id*$29803$1VmeqK g$last$29804$1VmeqK)
                       ((letrec ((g$f$29805$1VmeqK
                                   (case-lambda
                                     ((g$id*$29806$1VmeqK)
                                      (if (null? g$id*$29806$1VmeqK)
                                        (values)
                                        (if (not (g$id?$28724$1VmeqK
                                                   (car g$id*$29806$1VmeqK)))
                                          (g$syntax-violation$29341$1VmeqK
                                            '#f
                                            '"not an identifier"
                                            g$stx$29799$1VmeqK
                                            (car g$id*$29806$1VmeqK))
                                          (begin
                                            '#f
                                            (g$f$29805$1VmeqK
                                              (cdr g$id*$29806$1VmeqK))
                                            (if (g$bound-id-member?$28731$1VmeqK
                                                  (car g$id*$29806$1VmeqK)
                                                  (cdr g$id*$29806$1VmeqK))
                                              (g$syntax-violation$29341$1VmeqK
                                                '#f
                                                '"duplicate binding"
                                                g$stx$29799$1VmeqK
                                                (car g$id*$29806$1VmeqK))
                                              (void)))))))))
                          g$f$29805$1VmeqK)
                        (if (g$id?$28724$1VmeqK g$last$29804$1VmeqK)
                          (cons g$last$29804$1VmeqK g$id*$29803$1VmeqK)
                          (if (g$syntax-null?$28719$1VmeqK
                                g$last$29804$1VmeqK)
                            g$id*$29803$1VmeqK
                            (begin
                              '#f
                              (g$syntax-violation$29341$1VmeqK
                                '#f
                                '"not an identifier"
                                g$stx$29799$1VmeqK
                                g$last$29804$1VmeqK)))))))
                    g$ls/false$29802$1VmeqK)
                  ((case-lambda
                     ((g$t$29807$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$29808$1VmeqK)
                          (if g$ls/false$29808$1VmeqK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$29341$1VmeqK
                                   '#f
                                   '"malformed binding form"
                                   g$stx$29799$1VmeqK
                                   g$fmls$29800$1VmeqK)))
                              g$ls/false$29808$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$29807$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$29807$1VmeqK
                         '_))))
                   g$t$29801$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29801$1VmeqK
               '#(each+ any () any)))))
         g$fmls$29800$1VmeqK))))
   (g$let-macro$29188$1VmeqK
     g$let-macro$32783$1VmeqK
     (case-lambda
       ((g$stx$29809$1VmeqK)
        ((case-lambda
           ((g$t$29810$1VmeqK)
            ((case-lambda
               ((g$ls/false$29811$1VmeqK)
                (if g$ls/false$29811$1VmeqK
                  (apply
                    (case-lambda
                      ((g$lhs*$29812$1VmeqK
                         g$rhs*$29813$1VmeqK
                         g$b$29814$1VmeqK
                         g$b*$29815$1VmeqK)
                       (if (g$valid-bound-ids?$28729$1VmeqK
                             g$lhs*$29812$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$29812$1VmeqK
                                 (cons
                                   g$b$29814$1VmeqK
                                   g$b*$29815$1VmeqK)))
                             g$rhs*$29813$1VmeqK))
                         (g$invalid-fmls-error$29187$1VmeqK
                           g$stx$29809$1VmeqK
                           g$lhs*$29812$1VmeqK))))
                    g$ls/false$29811$1VmeqK)
                  ((case-lambda
                     ((g$t$29816$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$29817$1VmeqK)
                          (if (if g$ls/false$29817$1VmeqK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$29818$1VmeqK
                                         g$lhs*$29819$1VmeqK
                                         g$rhs*$29820$1VmeqK
                                         g$b$29821$1VmeqK
                                         g$b*$29822$1VmeqK)
                                       (g$id?$28724$1VmeqK
                                         g$f$29818$1VmeqK)))
                                    g$ls/false$29817$1VmeqK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$29823$1VmeqK
                                   g$lhs*$29824$1VmeqK
                                   g$rhs*$29825$1VmeqK
                                   g$b$29826$1VmeqK
                                   g$b*$29827$1VmeqK)
                                 (if (g$valid-bound-ids?$28729$1VmeqK
                                       g$lhs*$29824$1VmeqK)
                                   (g$bless$29185$1VmeqK
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$29823$1VmeqK
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$29824$1VmeqK
                                                 (cons
                                                   g$b$29826$1VmeqK
                                                   g$b*$29827$1VmeqK)))))
                                         g$f$29823$1VmeqK)
                                       g$rhs*$29825$1VmeqK))
                                   (g$invalid-fmls-error$29187$1VmeqK
                                     g$stx$29809$1VmeqK
                                     g$lhs*$29824$1VmeqK))))
                              g$ls/false$29817$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$29816$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$29816$1VmeqK
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$29810$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29810$1VmeqK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$29809$1VmeqK))))
   (g$let-values-macro$29189$1VmeqK
     g$let-values-macro$32784$1VmeqK
     (case-lambda
       ((g$stx$29828$1VmeqK)
        (letrec* ((g$rename$29829$1VmeqK
                    (case-lambda
                      ((g$x$29880$1VmeqK
                         g$old*$29881$1VmeqK
                         g$new*$29882$1VmeqK)
                       (begin
                         (if (not (g$id?$28724$1VmeqK g$x$29880$1VmeqK))
                           (g$syntax-violation$29341$1VmeqK
                             '#f
                             '"not an indentifier"
                             g$stx$29828$1VmeqK
                             g$x$29880$1VmeqK)
                           (void))
                         (if (g$bound-id-member?$28731$1VmeqK
                               g$x$29880$1VmeqK
                               g$old*$29881$1VmeqK)
                           (g$syntax-violation$29341$1VmeqK
                             '#f
                             '"duplicate binding"
                             g$stx$29828$1VmeqK
                             g$x$29880$1VmeqK)
                           (void))
                         ((case-lambda
                            ((g$y$29883$1VmeqK)
                             (values
                               g$y$29883$1VmeqK
                               (cons
                                 g$x$29880$1VmeqK
                                 g$old*$29881$1VmeqK)
                               (cons
                                 g$y$29883$1VmeqK
                                 g$new*$29882$1VmeqK))))
                          (gensym
                            (g$syntax->datum$29344$1VmeqK
                              g$x$29880$1VmeqK)))))))
                  (g$rename*$29830$1VmeqK
                    (case-lambda
                      ((g$x*$29871$1VmeqK
                         g$old*$29872$1VmeqK
                         g$new*$29873$1VmeqK)
                       (if (null? g$x*$29871$1VmeqK)
                         (values
                           '()
                           g$old*$29872$1VmeqK
                           g$new*$29873$1VmeqK)
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$rename$29829$1VmeqK
                                  (car g$x*$29871$1VmeqK)
                                  g$old*$29872$1VmeqK
                                  g$new*$29873$1VmeqK)))
                             (case-lambda
                               ((g$x$29874$1VmeqK
                                  g$old*$29875$1VmeqK
                                  g$new*$29876$1VmeqK)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$rename*$29830$1VmeqK
                                       (cdr g$x*$29871$1VmeqK)
                                       g$old*$29875$1VmeqK
                                       g$new*$29876$1VmeqK)))
                                  (case-lambda
                                    ((g$x*$29877$1VmeqK
                                       g$old*$29878$1VmeqK
                                       g$new*$29879$1VmeqK)
                                     (values
                                       (cons
                                         g$x$29874$1VmeqK
                                         g$x*$29877$1VmeqK)
                                       g$old*$29878$1VmeqK
                                       g$new*$29879$1VmeqK)))))))))))))
          ((case-lambda
             ((g$t$29831$1VmeqK)
              ((case-lambda
                 ((g$ls/false$29832$1VmeqK)
                  (if g$ls/false$29832$1VmeqK
                    (apply
                      (case-lambda
                        ((g$b$29833$1VmeqK g$b*$29834$1VmeqK)
                         (g$cons*$20351$1VmeqK
                           (g$bless$29185$1VmeqK 'let)
                           '()
                           g$b$29833$1VmeqK
                           g$b*$29834$1VmeqK)))
                      g$ls/false$29832$1VmeqK)
                    ((case-lambda
                       ((g$t$29835$1VmeqK)
                        ((case-lambda
                           ((g$ls/false$29836$1VmeqK)
                            (if g$ls/false$29836$1VmeqK
                              (apply
                                (case-lambda
                                  ((g$lhs*$29837$1VmeqK
                                     g$rhs*$29838$1VmeqK
                                     g$b$29839$1VmeqK
                                     g$b*$29840$1VmeqK)
                                   (g$bless$29185$1VmeqK
                                     ((letrec ((g$f$29841$1VmeqK
                                                 (case-lambda
                                                   ((g$lhs*$29842$1VmeqK
                                                      g$rhs*$29843$1VmeqK
                                                      g$old*$29844$1VmeqK
                                                      g$new*$29845$1VmeqK)
                                                    (if (null?
                                                          g$lhs*$29842$1VmeqK)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$20349$1VmeqK
                                                            list
                                                            g$old*$29844$1VmeqK
                                                            g$new*$29845$1VmeqK)
                                                          (cons
                                                            g$b$29839$1VmeqK
                                                            g$b*$29840$1VmeqK)))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$29846$1VmeqK)
                                                            ((case-lambda
                                                               ((g$ls/false$29847$1VmeqK)
                                                                (if g$ls/false$29847$1VmeqK
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$29848$1VmeqK)
                                                                       (call-with-values
                                                                         (case-lambda
                                                                           (()
                                                                            (g$rename*$29830$1VmeqK
                                                                              g$x*$29848$1VmeqK
                                                                              g$old*$29844$1VmeqK
                                                                              g$new*$29845$1VmeqK)))
                                                                         (case-lambda
                                                                           ((g$y*$29852$1VmeqK
                                                                              g$old*$29853$1VmeqK
                                                                              g$new*$29854$1VmeqK)
                                                                            ((case-lambda
                                                                               ((g$new*$29855$1VmeqK
                                                                                  g$old*$29856$1VmeqK
                                                                                  g$y*$29857$1VmeqK)
                                                                                (list
                                                                                  'call-with-values
                                                                                  (list
                                                                                    'lambda
                                                                                    '()
                                                                                    (car g$rhs*$29843$1VmeqK))
                                                                                  (list
                                                                                    'lambda
                                                                                    g$y*$29857$1VmeqK
                                                                                    (g$f$29841$1VmeqK
                                                                                      (cdr g$lhs*$29842$1VmeqK)
                                                                                      (cdr g$rhs*$29843$1VmeqK)
                                                                                      g$old*$29856$1VmeqK
                                                                                      g$new*$29855$1VmeqK)))))
                                                                             g$new*$29854$1VmeqK
                                                                             g$old*$29853$1VmeqK
                                                                             g$y*$29852$1VmeqK))))))
                                                                    g$ls/false$29847$1VmeqK)
                                                                  ((case-lambda
                                                                     ((g$t$29858$1VmeqK)
                                                                      ((case-lambda
                                                                         ((g$ls/false$29859$1VmeqK)
                                                                          (if g$ls/false$29859$1VmeqK
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$29860$1VmeqK
                                                                                   g$x$29861$1VmeqK)
                                                                                 (call-with-values
                                                                                   (case-lambda
                                                                                     (()
                                                                                      (g$rename$29829$1VmeqK
                                                                                        g$x$29861$1VmeqK
                                                                                        g$old*$29844$1VmeqK
                                                                                        g$new*$29845$1VmeqK)))
                                                                                   (case-lambda
                                                                                     ((g$y$29862$1VmeqK
                                                                                        g$old*$29863$1VmeqK
                                                                                        g$new*$29864$1VmeqK)
                                                                                      (call-with-values
                                                                                        (case-lambda
                                                                                          (()
                                                                                           (g$rename*$29830$1VmeqK
                                                                                             g$x*$29860$1VmeqK
                                                                                             g$old*$29863$1VmeqK
                                                                                             g$new*$29864$1VmeqK)))
                                                                                        (case-lambda
                                                                                          ((g$y*$29865$1VmeqK
                                                                                             g$old*$29866$1VmeqK
                                                                                             g$new*$29867$1VmeqK)
                                                                                           (list
                                                                                             'call-with-values
                                                                                             (list
                                                                                               'lambda
                                                                                               '()
                                                                                               (car g$rhs*$29843$1VmeqK))
                                                                                             (list
                                                                                               'lambda
                                                                                               (append
                                                                                                 g$y*$29865$1VmeqK
                                                                                                 g$y$29862$1VmeqK)
                                                                                               (g$f$29841$1VmeqK
                                                                                                 (cdr g$lhs*$29842$1VmeqK)
                                                                                                 (cdr g$rhs*$29843$1VmeqK)
                                                                                                 g$old*$29866$1VmeqK
                                                                                                 g$new*$29867$1VmeqK)))))))))))
                                                                              g$ls/false$29859$1VmeqK)
                                                                            ((case-lambda
                                                                               ((g$t$29868$1VmeqK)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$29869$1VmeqK)
                                                                                    (if g$ls/false$29869$1VmeqK
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$29870$1VmeqK)
                                                                                           (g$syntax-violation$29341$1VmeqK
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$29828$1VmeqK
                                                                                             g$others$29870$1VmeqK)))
                                                                                        g$ls/false$29869$1VmeqK)
                                                                                      (g$syntax-violation$29341$1VmeqK
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$29868$1VmeqK))))
                                                                                 (g$syntax-dispatch$29222$1VmeqK
                                                                                   g$t$29868$1VmeqK
                                                                                   'any))))
                                                                             g$t$29858$1VmeqK))))
                                                                       (g$syntax-dispatch$29222$1VmeqK
                                                                         g$t$29858$1VmeqK
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$29846$1VmeqK))))
                                                             (g$syntax-dispatch$29222$1VmeqK
                                                               g$t$29846$1VmeqK
                                                               'each-any))))
                                                         (car g$lhs*$29842$1VmeqK))))))))
                                        g$f$29841$1VmeqK)
                                      g$lhs*$29837$1VmeqK
                                      g$rhs*$29838$1VmeqK
                                      '()
                                      '()))))
                                g$ls/false$29836$1VmeqK)
                              (g$syntax-violation$29341$1VmeqK
                                '#f
                                '"invalid syntax"
                                g$t$29835$1VmeqK))))
                         (g$syntax-dispatch$29222$1VmeqK
                           g$t$29835$1VmeqK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29831$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$29831$1VmeqK
                 '(_ () any . each-any)))))
           g$stx$29828$1VmeqK)))))
   (g$let*-values-macro$29190$1VmeqK
     g$let*-values-macro$32785$1VmeqK
     (case-lambda
       ((g$stx$29884$1VmeqK)
        (letrec* ((g$check$29885$1VmeqK
                    (case-lambda
                      ((g$x*$29909$1VmeqK)
                       (if (not (null? g$x*$29909$1VmeqK))
                         ((case-lambda
                            ((g$x$29910$1VmeqK)
                             (begin
                               (if (not (g$id?$28724$1VmeqK
                                          g$x$29910$1VmeqK))
                                 (g$syntax-violation$29341$1VmeqK
                                   '#f
                                   '"not an identifier"
                                   g$stx$29884$1VmeqK
                                   g$x$29910$1VmeqK)
                                 (void))
                               (g$check$29885$1VmeqK
                                 (cdr g$x*$29909$1VmeqK))
                               (if (g$bound-id-member?$28731$1VmeqK
                                     g$x$29910$1VmeqK
                                     (cdr g$x*$29909$1VmeqK))
                                 (g$syntax-violation$29341$1VmeqK
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$29884$1VmeqK
                                   g$x$29910$1VmeqK)
                                 (void)))))
                          (car g$x*$29909$1VmeqK))
                         (void))))))
          ((case-lambda
             ((g$t$29886$1VmeqK)
              ((case-lambda
                 ((g$ls/false$29887$1VmeqK)
                  (if g$ls/false$29887$1VmeqK
                    (apply
                      (case-lambda
                        ((g$b$29888$1VmeqK g$b*$29889$1VmeqK)
                         (g$cons*$20351$1VmeqK
                           (g$bless$29185$1VmeqK 'let)
                           '()
                           g$b$29888$1VmeqK
                           g$b*$29889$1VmeqK)))
                      g$ls/false$29887$1VmeqK)
                    ((case-lambda
                       ((g$t$29890$1VmeqK)
                        ((case-lambda
                           ((g$ls/false$29891$1VmeqK)
                            (if g$ls/false$29891$1VmeqK
                              (apply
                                (case-lambda
                                  ((g$lhs*$29892$1VmeqK
                                     g$rhs*$29893$1VmeqK
                                     g$b$29894$1VmeqK
                                     g$b*$29895$1VmeqK)
                                   (g$bless$29185$1VmeqK
                                     ((letrec ((g$f$29896$1VmeqK
                                                 (case-lambda
                                                   ((g$lhs*$29897$1VmeqK
                                                      g$rhs*$29898$1VmeqK)
                                                    (if (null?
                                                          g$lhs*$29897$1VmeqK)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$29894$1VmeqK
                                                          g$b*$29895$1VmeqK))
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$t$29899$1VmeqK)
                                                            ((case-lambda
                                                               ((g$ls/false$29900$1VmeqK)
                                                                (if g$ls/false$29900$1VmeqK
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x*$29901$1VmeqK)
                                                                       (begin
                                                                         (g$check$29885$1VmeqK
                                                                           g$x*$29901$1VmeqK)
                                                                         (list
                                                                           'call-with-values
                                                                           (list
                                                                             'lambda
                                                                             '()
                                                                             (car g$rhs*$29898$1VmeqK))
                                                                           (list
                                                                             'lambda
                                                                             g$x*$29901$1VmeqK
                                                                             (g$f$29896$1VmeqK
                                                                               (cdr g$lhs*$29897$1VmeqK)
                                                                               (cdr g$rhs*$29898$1VmeqK)))))))
                                                                    g$ls/false$29900$1VmeqK)
                                                                  ((case-lambda
                                                                     ((g$t$29902$1VmeqK)
                                                                      ((case-lambda
                                                                         ((g$ls/false$29903$1VmeqK)
                                                                          (if g$ls/false$29903$1VmeqK
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$x*$29904$1VmeqK
                                                                                   g$x$29905$1VmeqK)
                                                                                 (begin
                                                                                   (g$check$29885$1VmeqK
                                                                                     (cons
                                                                                       g$x$29905$1VmeqK
                                                                                       g$x*$29904$1VmeqK))
                                                                                   (list
                                                                                     'call-with-values
                                                                                     (list
                                                                                       'lambda
                                                                                       '()
                                                                                       (car g$rhs*$29898$1VmeqK))
                                                                                     (list
                                                                                       'lambda
                                                                                       (append
                                                                                         g$x*$29904$1VmeqK
                                                                                         g$x$29905$1VmeqK)
                                                                                       (g$f$29896$1VmeqK
                                                                                         (cdr g$lhs*$29897$1VmeqK)
                                                                                         (cdr g$rhs*$29898$1VmeqK)))))))
                                                                              g$ls/false$29903$1VmeqK)
                                                                            ((case-lambda
                                                                               ((g$t$29906$1VmeqK)
                                                                                ((case-lambda
                                                                                   ((g$ls/false$29907$1VmeqK)
                                                                                    (if g$ls/false$29907$1VmeqK
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$others$29908$1VmeqK)
                                                                                           (g$syntax-violation$29341$1VmeqK
                                                                                             '#f
                                                                                             '"malformed bindings"
                                                                                             g$stx$29884$1VmeqK
                                                                                             g$others$29908$1VmeqK)))
                                                                                        g$ls/false$29907$1VmeqK)
                                                                                      (g$syntax-violation$29341$1VmeqK
                                                                                        '#f
                                                                                        '"invalid syntax"
                                                                                        g$t$29906$1VmeqK))))
                                                                                 (g$syntax-dispatch$29222$1VmeqK
                                                                                   g$t$29906$1VmeqK
                                                                                   'any))))
                                                                             g$t$29902$1VmeqK))))
                                                                       (g$syntax-dispatch$29222$1VmeqK
                                                                         g$t$29902$1VmeqK
                                                                         '#(each+
                                                                            any
                                                                            ()
                                                                            any)))))
                                                                   g$t$29899$1VmeqK))))
                                                             (g$syntax-dispatch$29222$1VmeqK
                                                               g$t$29899$1VmeqK
                                                               'each-any))))
                                                         (car g$lhs*$29897$1VmeqK))))))))
                                        g$f$29896$1VmeqK)
                                      g$lhs*$29892$1VmeqK
                                      g$rhs*$29893$1VmeqK))))
                                g$ls/false$29891$1VmeqK)
                              (g$syntax-violation$29341$1VmeqK
                                '#f
                                '"invalid syntax"
                                g$t$29890$1VmeqK))))
                         (g$syntax-dispatch$29222$1VmeqK
                           g$t$29890$1VmeqK
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29886$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$29886$1VmeqK
                 '(_ () any . each-any)))))
           g$stx$29884$1VmeqK)))))
   (g$trace-lambda-macro$29191$1VmeqK
     g$trace-lambda-macro$32786$1VmeqK
     (case-lambda
       ((g$stx$29911$1VmeqK)
        ((case-lambda
           ((g$t$29912$1VmeqK)
            ((case-lambda
               ((g$ls/false$29913$1VmeqK)
                (if g$ls/false$29913$1VmeqK
                  (apply
                    (case-lambda
                      ((g$who$29914$1VmeqK
                         g$fmls$29915$1VmeqK
                         g$b$29916$1VmeqK
                         g$b*$29917$1VmeqK)
                       (if (g$valid-bound-ids?$28729$1VmeqK
                             g$fmls$29915$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$29914$1VmeqK)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$29915$1VmeqK
                                 (cons
                                   g$b$29916$1VmeqK
                                   g$b*$29917$1VmeqK)))))
                         (g$invalid-fmls-error$29187$1VmeqK
                           g$stx$29911$1VmeqK
                           g$fmls$29915$1VmeqK))))
                    g$ls/false$29913$1VmeqK)
                  ((case-lambda
                     ((g$t$29918$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$29919$1VmeqK)
                          (if g$ls/false$29919$1VmeqK
                            (apply
                              (case-lambda
                                ((g$who$29920$1VmeqK
                                   g$fmls$29921$1VmeqK
                                   g$last$29922$1VmeqK
                                   g$b$29923$1VmeqK
                                   g$b*$29924$1VmeqK)
                                 (if (g$valid-bound-ids?$28729$1VmeqK
                                       (cons
                                         g$last$29922$1VmeqK
                                         g$fmls$29921$1VmeqK))
                                   (g$bless$29185$1VmeqK
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$29920$1VmeqK)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$29921$1VmeqK
                                             g$last$29922$1VmeqK)
                                           (cons
                                             g$b$29923$1VmeqK
                                             g$b*$29924$1VmeqK)))))
                                   (g$invalid-fmls-error$29187$1VmeqK
                                     g$stx$29911$1VmeqK
                                     (append
                                       g$fmls$29921$1VmeqK
                                       g$last$29922$1VmeqK)))))
                              g$ls/false$29919$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$29918$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$29918$1VmeqK
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$29912$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29912$1VmeqK
               '(_ any each-any any . each-any)))))
         g$stx$29911$1VmeqK))))
   (g$trace-define-macro$29192$1VmeqK
     g$trace-define-macro$32787$1VmeqK
     (case-lambda
       ((g$stx$29925$1VmeqK)
        ((case-lambda
           ((g$t$29926$1VmeqK)
            ((case-lambda
               ((g$ls/false$29927$1VmeqK)
                (if g$ls/false$29927$1VmeqK
                  (apply
                    (case-lambda
                      ((g$who$29928$1VmeqK
                         g$fmls$29929$1VmeqK
                         g$b$29930$1VmeqK
                         g$b*$29931$1VmeqK)
                       (if (g$valid-bound-ids?$28729$1VmeqK
                             g$fmls$29929$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (list
                             'define
                             g$who$29928$1VmeqK
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$29928$1VmeqK)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$29929$1VmeqK
                                   (cons
                                     g$b$29930$1VmeqK
                                     g$b*$29931$1VmeqK))))))
                         (g$invalid-fmls-error$29187$1VmeqK
                           g$stx$29925$1VmeqK
                           g$fmls$29929$1VmeqK))))
                    g$ls/false$29927$1VmeqK)
                  ((case-lambda
                     ((g$t$29932$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$29933$1VmeqK)
                          (if g$ls/false$29933$1VmeqK
                            (apply
                              (case-lambda
                                ((g$who$29934$1VmeqK
                                   g$fmls$29935$1VmeqK
                                   g$last$29936$1VmeqK
                                   g$b$29937$1VmeqK
                                   g$b*$29938$1VmeqK)
                                 (if (g$valid-bound-ids?$28729$1VmeqK
                                       (cons
                                         g$last$29936$1VmeqK
                                         g$fmls$29935$1VmeqK))
                                   (g$bless$29185$1VmeqK
                                     (list
                                       'define
                                       g$who$29934$1VmeqK
                                       (list
                                         'make-traced-procedure
                                         (list
                                           'quote
                                           g$who$29934$1VmeqK)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$29935$1VmeqK
                                               g$last$29936$1VmeqK)
                                             (cons
                                               g$b$29937$1VmeqK
                                               g$b*$29938$1VmeqK))))))
                                   (g$invalid-fmls-error$29187$1VmeqK
                                     g$stx$29925$1VmeqK
                                     (append
                                       g$fmls$29935$1VmeqK
                                       g$last$29936$1VmeqK)))))
                              g$ls/false$29933$1VmeqK)
                            ((case-lambda
                               ((g$t$29939$1VmeqK)
                                ((case-lambda
                                   ((g$ls/false$29940$1VmeqK)
                                    (if g$ls/false$29940$1VmeqK
                                      (apply
                                        (case-lambda
                                          ((g$who$29941$1VmeqK
                                             g$expr$29942$1VmeqK)
                                           (if (g$id?$28724$1VmeqK
                                                 g$who$29941$1VmeqK)
                                             (g$bless$29185$1VmeqK
                                               (list
                                                 'define
                                                 g$who$29941$1VmeqK
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$29942$1VmeqK))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$29941$1VmeqK)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$29341$1VmeqK
                                               '#f
                                               '"invalid name"
                                               g$stx$29925$1VmeqK))))
                                        g$ls/false$29940$1VmeqK)
                                      (g$syntax-violation$29341$1VmeqK
                                        '#f
                                        '"invalid syntax"
                                        g$t$29939$1VmeqK))))
                                 (g$syntax-dispatch$29222$1VmeqK
                                   g$t$29939$1VmeqK
                                   '(_ any any)))))
                             g$t$29932$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$29932$1VmeqK
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$29926$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29926$1VmeqK
               '(_ (any . each-any) any . each-any)))))
         g$stx$29925$1VmeqK))))
   (g$trace-define-syntax-macro$29193$1VmeqK
     g$trace-define-syntax-macro$32788$1VmeqK
     (case-lambda
       ((g$stx$29943$1VmeqK)
        ((case-lambda
           ((g$t$29944$1VmeqK)
            ((case-lambda
               ((g$ls/false$29945$1VmeqK)
                (if g$ls/false$29945$1VmeqK
                  (apply
                    (case-lambda
                      ((g$who$29946$1VmeqK g$expr$29947$1VmeqK)
                       (if (g$id?$28724$1VmeqK g$who$29946$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (list
                             'define-syntax
                             g$who$29946$1VmeqK
                             (list
                               'make-traced-macro
                               (list 'quote g$who$29946$1VmeqK)
                               g$expr$29947$1VmeqK)))
                         (g$syntax-violation$29341$1VmeqK
                           '#f
                           '"invalid name"
                           g$stx$29943$1VmeqK))))
                    g$ls/false$29945$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$29944$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$29944$1VmeqK
               '(_ any any)))))
         g$stx$29943$1VmeqK))))
   (g$trace-let/rec-syntax$29194$1VmeqK
     g$trace-let/rec-syntax$32789$1VmeqK
     (case-lambda
       ((g$who$29948$1VmeqK)
        (case-lambda
          ((g$stx$29949$1VmeqK)
           ((case-lambda
              ((g$t$29950$1VmeqK)
               ((case-lambda
                  ((g$ls/false$29951$1VmeqK)
                   (if g$ls/false$29951$1VmeqK
                     (apply
                       (case-lambda
                         ((g$lhs*$29952$1VmeqK
                            g$rhs*$29953$1VmeqK
                            g$b$29954$1VmeqK
                            g$b*$29955$1VmeqK)
                          (if (g$valid-bound-ids?$28729$1VmeqK
                                g$lhs*$29952$1VmeqK)
                            ((case-lambda
                               ((g$rhs*$29956$1VmeqK)
                                (g$bless$29185$1VmeqK
                                  (cons
                                    g$who$29948$1VmeqK
                                    (cons
                                      (g$map$20349$1VmeqK
                                        list
                                        g$lhs*$29952$1VmeqK
                                        g$rhs*$29956$1VmeqK)
                                      (cons
                                        g$b$29954$1VmeqK
                                        g$b*$29955$1VmeqK))))))
                             (g$map$20349$1VmeqK
                               (case-lambda
                                 ((g$lhs$29957$1VmeqK
                                    g$rhs$29958$1VmeqK)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$29957$1VmeqK)
                                    g$rhs$29958$1VmeqK)))
                               g$lhs*$29952$1VmeqK
                               g$rhs*$29953$1VmeqK))
                            (g$invalid-fmls-error$29187$1VmeqK
                              g$stx$29949$1VmeqK
                              g$lhs*$29952$1VmeqK))))
                       g$ls/false$29951$1VmeqK)
                     (g$syntax-violation$29341$1VmeqK
                       '#f
                       '"invalid syntax"
                       g$t$29950$1VmeqK))))
                (g$syntax-dispatch$29222$1VmeqK
                  g$t$29950$1VmeqK
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$29949$1VmeqK))))))
   (g$trace-let-syntax-macro$29195$1VmeqK
     g$trace-let-syntax-macro$32790$1VmeqK
     (g$trace-let/rec-syntax$29194$1VmeqK 'let-syntax))
   (g$trace-letrec-syntax-macro$29196$1VmeqK
     g$trace-letrec-syntax-macro$32791$1VmeqK
     (g$trace-let/rec-syntax$29194$1VmeqK 'letrec-syntax))
   (g$guard-macro$29197$1VmeqK
     g$guard-macro$32792$1VmeqK
     (case-lambda
       ((g$x$29959$1VmeqK)
        (letrec* ((g$gen-clauses$29960$1VmeqK
                    (case-lambda
                      ((g$con$29972$1VmeqK
                         g$outerk$29973$1VmeqK
                         g$clause*$29974$1VmeqK)
                       (letrec* ((g$f$29975$1VmeqK
                                   (case-lambda
                                     ((g$x$30003$1VmeqK
                                        g$k$30004$1VmeqK)
                                      ((case-lambda
                                         ((g$t$30005$1VmeqK)
                                          ((case-lambda
                                             ((g$ls/false$30006$1VmeqK)
                                              (if g$ls/false$30006$1VmeqK
                                                (apply
                                                  (case-lambda
                                                    ((g$e$30007$1VmeqK
                                                       g$p$30008$1VmeqK)
                                                     ((case-lambda
                                                        ((g$t$30009$1VmeqK)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$30009$1VmeqK
                                                               g$e$30007$1VmeqK))
                                                           (list
                                                             'if
                                                             g$t$30009$1VmeqK
                                                             (list
                                                               g$p$30008$1VmeqK
                                                               g$t$30009$1VmeqK)
                                                             g$k$30004$1VmeqK))))
                                                      (gensym))))
                                                  g$ls/false$30006$1VmeqK)
                                                ((case-lambda
                                                   ((g$t$30010$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$30011$1VmeqK)
                                                        (if g$ls/false$30011$1VmeqK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$30012$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$t$30013$1VmeqK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$30013$1VmeqK
                                                                         g$e$30012$1VmeqK))
                                                                     (list
                                                                       'if
                                                                       g$t$30013$1VmeqK
                                                                       g$t$30013$1VmeqK
                                                                       g$k$30004$1VmeqK))))
                                                                (gensym))))
                                                            g$ls/false$30011$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$30014$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$30015$1VmeqK)
                                                                  (if g$ls/false$30015$1VmeqK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$30016$1VmeqK
                                                                           g$v$30017$1VmeqK
                                                                           g$v*$30018$1VmeqK)
                                                                         (list
                                                                           'if
                                                                           g$e$30016$1VmeqK
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$30017$1VmeqK
                                                                               g$v*$30018$1VmeqK))
                                                                           g$k$30004$1VmeqK)))
                                                                      g$ls/false$30015$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$t$30019$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30020$1VmeqK)
                                                                            (if g$ls/false$30020$1VmeqK
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$29341$1VmeqK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$30003$1VmeqK)))
                                                                                g$ls/false$30020$1VmeqK)
                                                                              (g$syntax-violation$29341$1VmeqK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$30019$1VmeqK))))
                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                           g$t$30019$1VmeqK
                                                                           '_))))
                                                                     g$t$30014$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$30014$1VmeqK
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$30010$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$30010$1VmeqK
                                                       '(any)))))
                                                 g$t$30005$1VmeqK))))
                                           (g$syntax-dispatch$29222$1VmeqK
                                             g$t$30005$1VmeqK
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$30003$1VmeqK))))
                                 (g$f*$29976$1VmeqK
                                   (case-lambda
                                     ((g$x*$29983$1VmeqK)
                                      ((case-lambda
                                         ((g$t$29984$1VmeqK)
                                          ((case-lambda
                                             ((g$ls/false$29985$1VmeqK)
                                              (if g$ls/false$29985$1VmeqK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$29972$1VmeqK)
                                                       '#t)))
                                                  g$ls/false$29985$1VmeqK)
                                                ((case-lambda
                                                   ((g$t$29986$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$29987$1VmeqK)
                                                        (if g$ls/false$29987$1VmeqK
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$29988$1VmeqK
                                                                 g$e*$29989$1VmeqK)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$29988$1VmeqK
                                                                     g$e*$29989$1VmeqK))
                                                                 '#f)))
                                                            g$ls/false$29987$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$29990$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$29991$1VmeqK)
                                                                  (if g$ls/false$29991$1VmeqK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$29992$1VmeqK
                                                                           g$cls*$29993$1VmeqK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$29976$1VmeqK
                                                                                g$cls*$29993$1VmeqK)))
                                                                           (case-lambda
                                                                             ((g$e$29996$1VmeqK
                                                                                g$g$29997$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$g$29998$1VmeqK
                                                                                    g$e$29999$1VmeqK)
                                                                                  (values
                                                                                    (g$f$29975$1VmeqK
                                                                                      g$cls$29992$1VmeqK
                                                                                      g$e$29999$1VmeqK)
                                                                                    g$g$29998$1VmeqK)))
                                                                               g$g$29997$1VmeqK
                                                                               g$e$29996$1VmeqK))))))
                                                                      g$ls/false$29991$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$t$30000$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30001$1VmeqK)
                                                                            (if g$ls/false$30001$1VmeqK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$30002$1VmeqK)
                                                                                   (g$syntax-violation$29341$1VmeqK
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$30002$1VmeqK)))
                                                                                g$ls/false$30001$1VmeqK)
                                                                              (g$syntax-violation$29341$1VmeqK
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$30000$1VmeqK))))
                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                           g$t$30000$1VmeqK
                                                                           'any))))
                                                                     g$t$29990$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$29990$1VmeqK
                                                                 '(any .
                                                                       any)))))
                                                           g$t$29986$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$29986$1VmeqK
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$29984$1VmeqK))))
                                           (g$syntax-dispatch$29222$1VmeqK
                                             g$t$29984$1VmeqK
                                             '()))))
                                       g$x*$29983$1VmeqK)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$29976$1VmeqK
                                g$clause*$29974$1VmeqK)))
                           (case-lambda
                             ((g$code$29979$1VmeqK
                                g$raisek$29980$1VmeqK)
                              ((case-lambda
                                 ((g$raisek$29981$1VmeqK
                                    g$code$29982$1VmeqK)
                                  (if g$raisek$29981$1VmeqK
                                    (list
                                      g$outerk$29973$1VmeqK
                                      g$code$29982$1VmeqK)
                                    g$code$29982$1VmeqK)))
                               g$raisek$29980$1VmeqK
                               g$code$29979$1VmeqK)))))))))
          ((case-lambda
             ((g$t$29961$1VmeqK)
              ((case-lambda
                 ((g$ls/false$29962$1VmeqK)
                  (if (if g$ls/false$29962$1VmeqK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$29963$1VmeqK
                                 g$clause*$29964$1VmeqK
                                 g$b$29965$1VmeqK
                                 g$b*$29966$1VmeqK)
                               (g$id?$28724$1VmeqK g$con$29963$1VmeqK)))
                            g$ls/false$29962$1VmeqK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$29967$1VmeqK
                           g$clause*$29968$1VmeqK
                           g$b$29969$1VmeqK
                           g$b*$29970$1VmeqK)
                         ((case-lambda
                            ((g$outerk$29971$1VmeqK)
                             (g$bless$29185$1VmeqK
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$29971$1VmeqK)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$29967$1VmeqK)
                                           (g$gen-clauses$29960$1VmeqK
                                             g$con$29967$1VmeqK
                                             g$outerk$29971$1VmeqK
                                             g$clause*$29968$1VmeqK))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$29969$1VmeqK
                                               g$b*$29970$1VmeqK)))))))))))
                          (gensym))))
                      g$ls/false$29962$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$29961$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$29961$1VmeqK
                 '(_ (any . each-any) any . each-any)))))
           g$x$29959$1VmeqK)))))
   (g$define-enumeration-macro$29198$1VmeqK
     g$define-enumeration-macro$32793$1VmeqK
     (case-lambda
       ((g$stx$30021$1VmeqK)
        (letrec* ((g$set?$30022$1VmeqK
                    (case-lambda
                      ((g$x$30035$1VmeqK)
                       ((case-lambda
                          ((g$t$30036$1VmeqK)
                           (if g$t$30036$1VmeqK
                             g$t$30036$1VmeqK
                             (begin
                               '#f
                               (if (not (g$memq$20341$1VmeqK
                                          (car g$x$30035$1VmeqK)
                                          (cdr g$x$30035$1VmeqK)))
                                 (begin
                                   '#f
                                   (g$set?$30022$1VmeqK
                                     (cdr g$x$30035$1VmeqK)))
                                 '#f)))))
                        (null? g$x$30035$1VmeqK)))))
                  (g$remove-dups$30023$1VmeqK
                    (case-lambda
                      ((g$ls$30034$1VmeqK)
                       (if (null? g$ls$30034$1VmeqK)
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$ls$30034$1VmeqK)
                             (g$remove-dups$30023$1VmeqK
                               (g$remq$20356$1VmeqK
                                 (car g$ls$30034$1VmeqK)
                                 (cdr g$ls$30034$1VmeqK))))))))))
          ((case-lambda
             ((g$t$30024$1VmeqK)
              ((case-lambda
                 ((g$ls/false$30025$1VmeqK)
                  (if (if g$ls/false$30025$1VmeqK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$30026$1VmeqK
                                 g$id*$30027$1VmeqK
                                 g$maker$30028$1VmeqK)
                               (if (g$id?$28724$1VmeqK
                                     g$name$30026$1VmeqK)
                                 (if (g$id?$28724$1VmeqK
                                       g$maker$30028$1VmeqK)
                                   (begin
                                     '#f
                                     (g$for-all$20347$1VmeqK
                                       g$id?$28724$1VmeqK
                                       g$id*$30027$1VmeqK))
                                   '#f)
                                 '#f)))
                            g$ls/false$30025$1VmeqK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$30029$1VmeqK
                           g$id*$30030$1VmeqK
                           g$maker$30031$1VmeqK)
                         ((case-lambda
                            ((g$name*$30032$1VmeqK g$mk$30033$1VmeqK)
                             (g$bless$29185$1VmeqK
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$30033$1VmeqK
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$30032$1VmeqK))))
                                 (list
                                   'define-syntax
                                   g$name$30029$1VmeqK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$30032$1VmeqK))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$30029$1VmeqK)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$30031$1VmeqK
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$30031$1VmeqK)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$30032$1VmeqK))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$30031$1VmeqK)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$30033$1VmeqK
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$30023$1VmeqK
                            (g$syntax->datum$29344$1VmeqK
                              g$id*$30030$1VmeqK))
                          (gensym))))
                      g$ls/false$30025$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$30024$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$30024$1VmeqK
                 '(_ any each-any any)))))
           g$stx$30021$1VmeqK)))))
   (g$time-macro$29199$1VmeqK
     g$time-macro$32794$1VmeqK
     (case-lambda
       ((g$stx$30037$1VmeqK)
        ((case-lambda
           ((g$t$30038$1VmeqK)
            ((case-lambda
               ((g$ls/false$30039$1VmeqK)
                (if g$ls/false$30039$1VmeqK
                  (apply
                    (case-lambda
                      ((g$expr$30040$1VmeqK)
                       ((case-lambda
                          ((g$str$30041$1VmeqK)
                           (g$bless$29185$1VmeqK
                             (list
                               'time-it
                               g$str$30041$1VmeqK
                               (list
                                 'lambda
                                 '()
                                 g$expr$30040$1VmeqK)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$27116$1VmeqK)))
                          (case-lambda
                            ((g$p$30044$1VmeqK g$e$30045$1VmeqK)
                             ((case-lambda
                                ((g$e$30046$1VmeqK g$p$30047$1VmeqK)
                                 (begin
                                   (write
                                     (g$syntax->datum$29344$1VmeqK
                                       g$expr$30040$1VmeqK)
                                     g$p$30047$1VmeqK)
                                   (g$e$30046$1VmeqK))))
                              g$e$30045$1VmeqK
                              g$p$30044$1VmeqK)))))))
                    g$ls/false$30039$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30038$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30038$1VmeqK
               '(_ any)))))
         g$stx$30037$1VmeqK))))
   (g$delay-macro$29200$1VmeqK
     g$delay-macro$32795$1VmeqK
     (case-lambda
       ((g$stx$30048$1VmeqK)
        ((case-lambda
           ((g$t$30049$1VmeqK)
            ((case-lambda
               ((g$ls/false$30050$1VmeqK)
                (if g$ls/false$30050$1VmeqK
                  (apply
                    (case-lambda
                      ((g$expr$30051$1VmeqK)
                       (g$bless$29185$1VmeqK
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$30051$1VmeqK)))))
                    g$ls/false$30050$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30049$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30049$1VmeqK
               '(_ any)))))
         g$stx$30048$1VmeqK))))
   (g$assert-macro$29201$1VmeqK
     g$assert-macro$32796$1VmeqK
     (case-lambda
       ((g$stx$30052$1VmeqK)
        ((case-lambda
           ((g$t$30053$1VmeqK)
            ((case-lambda
               ((g$ls/false$30054$1VmeqK)
                (if g$ls/false$30054$1VmeqK
                  (apply
                    (case-lambda
                      ((g$expr$30055$1VmeqK)
                       ((case-lambda
                          ((g$pos$30056$1VmeqK)
                           (g$bless$29185$1VmeqK
                             (list
                               'unless
                               g$expr$30055$1VmeqK
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$30055$1VmeqK)
                                 (list 'quote g$pos$30056$1VmeqK))))))
                        ((case-lambda
                           ((g$t$30057$1VmeqK)
                            (if g$t$30057$1VmeqK
                              g$t$30057$1VmeqK
                              (begin
                                '#f
                                (g$expression-position$29336$1VmeqK
                                  g$expr$30055$1VmeqK)))))
                         (g$expression-position$29336$1VmeqK
                           g$stx$30052$1VmeqK)))))
                    g$ls/false$30054$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30053$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30053$1VmeqK
               '(_ any)))))
         g$stx$30052$1VmeqK))))
   (g$endianness-macro$29202$1VmeqK
     g$endianness-macro$32797$1VmeqK
     (case-lambda
       ((g$stx$30058$1VmeqK)
        ((case-lambda
           ((g$t$30059$1VmeqK)
            ((case-lambda
               ((g$ls/false$30060$1VmeqK)
                (if g$ls/false$30060$1VmeqK
                  (apply
                    (case-lambda
                      ((g$e$30061$1VmeqK)
                       ((case-lambda
                          ((g$t$30062$1VmeqK)
                           (if (eqv? g$t$30062$1VmeqK 'little)
                             (g$bless$29185$1VmeqK ''little)
                             (if (eqv? g$t$30062$1VmeqK 'big)
                               (g$bless$29185$1VmeqK ''big)
                               (begin
                                 '#f
                                 (g$syntax-violation$29341$1VmeqK
                                   '#f
                                   '"endianness must be big or little"
                                   g$stx$30058$1VmeqK))))))
                        (g$syntax->datum$29344$1VmeqK
                          g$e$30061$1VmeqK))))
                    g$ls/false$30060$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30059$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30059$1VmeqK
               '(_ any)))))
         g$stx$30058$1VmeqK))))
   (g$identifier-syntax-macro$29203$1VmeqK
     g$identifier-syntax-macro$32798$1VmeqK
     (case-lambda
       ((g$stx$30063$1VmeqK)
        ((case-lambda
           ((g$t$30064$1VmeqK)
            ((case-lambda
               ((g$ls/false$30065$1VmeqK)
                (if g$ls/false$30065$1VmeqK
                  (apply
                    (case-lambda
                      ((g$expr$30066$1VmeqK)
                       (g$bless$29185$1VmeqK
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$30066$1VmeqK))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$30066$1VmeqK)
                                   '(#'(e* ...))))))))))
                    g$ls/false$30065$1VmeqK)
                  ((case-lambda
                     ((g$t$30067$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$30068$1VmeqK)
                          (if (if g$ls/false$30068$1VmeqK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$30069$1VmeqK
                                         g$expr1$30070$1VmeqK
                                         g$id2$30071$1VmeqK
                                         g$expr2$30072$1VmeqK
                                         g$expr3$30073$1VmeqK)
                                       (if (g$id?$28724$1VmeqK
                                             g$id1$30069$1VmeqK)
                                         (if (g$id?$28724$1VmeqK
                                               g$id2$30071$1VmeqK)
                                           (begin
                                             '#f
                                             (g$id?$28724$1VmeqK
                                               g$expr2$30072$1VmeqK))
                                           '#f)
                                         '#f)))
                                    g$ls/false$30068$1VmeqK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$30074$1VmeqK
                                   g$expr1$30075$1VmeqK
                                   g$id2$30076$1VmeqK
                                   g$expr2$30077$1VmeqK
                                   g$expr3$30078$1VmeqK)
                                 (g$bless$29185$1VmeqK
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$30075$1VmeqK))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$30077$1VmeqK)
                                           (list
                                             'syntax
                                             g$expr3$30078$1VmeqK))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$30075$1VmeqK
                                               '(e* ...))))))))))
                              g$ls/false$30068$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$30067$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$30067$1VmeqK
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$30064$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30064$1VmeqK
               '(_ any)))))
         g$stx$30063$1VmeqK))))
   (g$do-macro$29204$1VmeqK
     g$do-macro$32799$1VmeqK
     (case-lambda
       ((g$stx$30079$1VmeqK)
        (letrec* ((g$bind$30080$1VmeqK
                    (case-lambda
                      ((g$x$30092$1VmeqK)
                       ((case-lambda
                          ((g$t$30093$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30094$1VmeqK)
                               (if g$ls/false$30094$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$x$30095$1VmeqK
                                        g$init$30096$1VmeqK)
                                      (list
                                        g$x$30095$1VmeqK
                                        g$init$30096$1VmeqK
                                        g$x$30095$1VmeqK)))
                                   g$ls/false$30094$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30097$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30098$1VmeqK)
                                         (if g$ls/false$30098$1VmeqK
                                           (apply
                                             (case-lambda
                                               ((g$x$30099$1VmeqK
                                                  g$init$30100$1VmeqK
                                                  g$step$30101$1VmeqK)
                                                (list
                                                  g$x$30099$1VmeqK
                                                  g$init$30100$1VmeqK
                                                  g$step$30101$1VmeqK)))
                                             g$ls/false$30098$1VmeqK)
                                           ((case-lambda
                                              ((g$t$30102$1VmeqK)
                                               ((case-lambda
                                                  ((g$ls/false$30103$1VmeqK)
                                                   (if g$ls/false$30103$1VmeqK
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$29341$1VmeqK
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$30079$1VmeqK)))
                                                       g$ls/false$30103$1VmeqK)
                                                     (g$syntax-violation$29341$1VmeqK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30102$1VmeqK))))
                                                (g$syntax-dispatch$29222$1VmeqK
                                                  g$t$30102$1VmeqK
                                                  '_))))
                                            g$t$30097$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30097$1VmeqK
                                        '(any any any)))))
                                  g$t$30093$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30093$1VmeqK
                              '(any any)))))
                        g$x$30092$1VmeqK)))))
          ((case-lambda
             ((g$t$30081$1VmeqK)
              ((case-lambda
                 ((g$ls/false$30082$1VmeqK)
                  (if g$ls/false$30082$1VmeqK
                    (apply
                      (case-lambda
                        ((g$binding*$30083$1VmeqK
                           g$test$30084$1VmeqK
                           g$expr*$30085$1VmeqK
                           g$command*$30086$1VmeqK)
                         ((case-lambda
                            ((g$t$30087$1VmeqK)
                             ((case-lambda
                                ((g$ls/false$30088$1VmeqK)
                                 (if g$ls/false$30088$1VmeqK
                                   (apply
                                     (case-lambda
                                       ((g$x*$30089$1VmeqK
                                          g$init*$30090$1VmeqK
                                          g$step*$30091$1VmeqK)
                                        (if (g$valid-bound-ids?$28729$1VmeqK
                                              g$x*$30089$1VmeqK)
                                          (g$bless$29185$1VmeqK
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$30089$1VmeqK
                                                    (list
                                                      'if
                                                      g$test$30084$1VmeqK
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$30085$1VmeqK))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$30086$1VmeqK
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$30091$1VmeqK))))))))
                                              (cons
                                                'loop
                                                g$init*$30090$1VmeqK)))
                                          (g$syntax-violation$29341$1VmeqK
                                            '#f
                                            '"invalid bindings"
                                            g$stx$30079$1VmeqK))))
                                     g$ls/false$30088$1VmeqK)
                                   (g$syntax-violation$29341$1VmeqK
                                     '#f
                                     '"invalid syntax"
                                     g$t$30087$1VmeqK))))
                              (g$syntax-dispatch$29222$1VmeqK
                                g$t$30087$1VmeqK
                                '#(each (any any any))))))
                          (g$map$20349$1VmeqK
                            g$bind$30080$1VmeqK
                            g$binding*$30083$1VmeqK))))
                      g$ls/false$30082$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$30081$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$30081$1VmeqK
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$30079$1VmeqK)))))
   (g$let*-macro$29205$1VmeqK
     g$let*-macro$32800$1VmeqK
     (case-lambda
       ((g$stx$30104$1VmeqK)
        ((case-lambda
           ((g$t$30105$1VmeqK)
            ((case-lambda
               ((g$ls/false$30106$1VmeqK)
                (if (if g$ls/false$30106$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$30107$1VmeqK
                               g$rhs*$30108$1VmeqK
                               g$b$30109$1VmeqK
                               g$b*$30110$1VmeqK)
                             (g$for-all$20347$1VmeqK
                               g$id?$28724$1VmeqK
                               g$lhs*$30107$1VmeqK)))
                          g$ls/false$30106$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$30111$1VmeqK
                         g$rhs*$30112$1VmeqK
                         g$b$30113$1VmeqK
                         g$b*$30114$1VmeqK)
                       (g$bless$29185$1VmeqK
                         ((letrec ((g$f$30115$1VmeqK
                                     (case-lambda
                                       ((g$x*$30116$1VmeqK)
                                        (if (null? g$x*$30116$1VmeqK)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$30113$1VmeqK
                                                g$b*$30114$1VmeqK)))
                                          (if (null?
                                                (cdr g$x*$30116$1VmeqK))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$30116$1VmeqK))
                                                (cons
                                                  g$b$30113$1VmeqK
                                                  g$b*$30114$1VmeqK)))
                                            (begin
                                              '#f
                                              (list
                                                'let
                                                (list
                                                  (car g$x*$30116$1VmeqK))
                                                (g$f$30115$1VmeqK
                                                  (cdr g$x*$30116$1VmeqK))))))))))
                            g$f$30115$1VmeqK)
                          (g$map$20349$1VmeqK
                            list
                            g$lhs*$30111$1VmeqK
                            g$rhs*$30112$1VmeqK)))))
                    g$ls/false$30106$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30105$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30105$1VmeqK
               '(_ #(each (any any)) any . each-any)))))
         g$stx$30104$1VmeqK))))
   (g$or-macro$29206$1VmeqK
     g$or-macro$32801$1VmeqK
     (case-lambda
       ((g$stx$30117$1VmeqK)
        ((case-lambda
           ((g$t$30118$1VmeqK)
            ((case-lambda
               ((g$ls/false$30119$1VmeqK)
                (if g$ls/false$30119$1VmeqK
                  (apply (case-lambda (() '#f)) g$ls/false$30119$1VmeqK)
                  ((case-lambda
                     ((g$t$30120$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$30121$1VmeqK)
                          (if g$ls/false$30121$1VmeqK
                            (apply
                              (case-lambda
                                ((g$e$30122$1VmeqK g$e*$30123$1VmeqK)
                                 (g$bless$29185$1VmeqK
                                   ((letrec ((g$f$30124$1VmeqK
                                               (case-lambda
                                                 ((g$e$30125$1VmeqK
                                                    g$e*$30126$1VmeqK)
                                                  (if (null?
                                                        g$e*$30126$1VmeqK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$30125$1VmeqK)
                                                    (begin
                                                      '#f
                                                      (list
                                                        'let
                                                        (list
                                                          (list
                                                            't
                                                            g$e$30125$1VmeqK))
                                                        (list
                                                          'if
                                                          't
                                                          't
                                                          (g$f$30124$1VmeqK
                                                            (car g$e*$30126$1VmeqK)
                                                            (cdr g$e*$30126$1VmeqK))))))))))
                                      g$f$30124$1VmeqK)
                                    g$e$30122$1VmeqK
                                    g$e*$30123$1VmeqK))))
                              g$ls/false$30121$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$30120$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$30120$1VmeqK
                         '(_ any . each-any)))))
                   g$t$30118$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK g$t$30118$1VmeqK '(_)))))
         g$stx$30117$1VmeqK))))
   (g$and-macro$29207$1VmeqK
     g$and-macro$32802$1VmeqK
     (case-lambda
       ((g$stx$30127$1VmeqK)
        ((case-lambda
           ((g$t$30128$1VmeqK)
            ((case-lambda
               ((g$ls/false$30129$1VmeqK)
                (if g$ls/false$30129$1VmeqK
                  (apply (case-lambda (() '#t)) g$ls/false$30129$1VmeqK)
                  ((case-lambda
                     ((g$t$30130$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$30131$1VmeqK)
                          (if g$ls/false$30131$1VmeqK
                            (apply
                              (case-lambda
                                ((g$e$30132$1VmeqK g$e*$30133$1VmeqK)
                                 (g$bless$29185$1VmeqK
                                   ((letrec ((g$f$30134$1VmeqK
                                               (case-lambda
                                                 ((g$e$30135$1VmeqK
                                                    g$e*$30136$1VmeqK)
                                                  (if (null?
                                                        g$e*$30136$1VmeqK)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$30135$1VmeqK)
                                                    (begin
                                                      '#f
                                                      (cons
                                                        'if
                                                        (cons
                                                          g$e$30135$1VmeqK
                                                          (cons
                                                            (g$f$30134$1VmeqK
                                                              (car g$e*$30136$1VmeqK)
                                                              (cdr g$e*$30136$1VmeqK))
                                                            '(#f))))))))))
                                      g$f$30134$1VmeqK)
                                    g$e$30132$1VmeqK
                                    g$e*$30133$1VmeqK))))
                              g$ls/false$30131$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$30130$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$30130$1VmeqK
                         '(_ any . each-any)))))
                   g$t$30128$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK g$t$30128$1VmeqK '(_)))))
         g$stx$30127$1VmeqK))))
   (g$cond-macro$29208$1VmeqK
     g$cond-macro$32803$1VmeqK
     (case-lambda
       ((g$stx$30137$1VmeqK)
        ((case-lambda
           ((g$t$30138$1VmeqK)
            ((case-lambda
               ((g$ls/false$30139$1VmeqK)
                (if g$ls/false$30139$1VmeqK
                  (apply
                    (case-lambda
                      ((g$cls$30140$1VmeqK g$cls*$30141$1VmeqK)
                       (g$bless$29185$1VmeqK
                         ((letrec ((g$f$30142$1VmeqK
                                     (case-lambda
                                       ((g$cls$30143$1VmeqK
                                          g$cls*$30144$1VmeqK)
                                        (if (null? g$cls*$30144$1VmeqK)
                                          ((case-lambda
                                             ((g$t$30145$1VmeqK)
                                              ((case-lambda
                                                 ((g$ls/false$30146$1VmeqK)
                                                  (if g$ls/false$30146$1VmeqK
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$30147$1VmeqK
                                                           g$e*$30148$1VmeqK)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             '#f
                                                             (cons
                                                               g$e$30147$1VmeqK
                                                               g$e*$30148$1VmeqK)))))
                                                      g$ls/false$30146$1VmeqK)
                                                    ((case-lambda
                                                       ((g$t$30149$1VmeqK)
                                                        ((case-lambda
                                                           ((g$ls/false$30150$1VmeqK)
                                                            (if g$ls/false$30150$1VmeqK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$30151$1VmeqK
                                                                     g$p$30152$1VmeqK)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$30151$1VmeqK))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$30152$1VmeqK
                                                                         '(t))))))
                                                                g$ls/false$30150$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$t$30153$1VmeqK)
                                                                  ((case-lambda
                                                                     ((g$ls/false$30154$1VmeqK)
                                                                      (if g$ls/false$30154$1VmeqK
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$30155$1VmeqK)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$30155$1VmeqK
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$30154$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$t$30156$1VmeqK)
                                                                            ((case-lambda
                                                                               ((g$ls/false$30157$1VmeqK)
                                                                                (if g$ls/false$30157$1VmeqK
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$30158$1VmeqK
                                                                                         g$e*$30159$1VmeqK)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$30158$1VmeqK
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$30159$1VmeqK))))
                                                                                    g$ls/false$30157$1VmeqK)
                                                                                  ((case-lambda
                                                                                     ((g$t$30160$1VmeqK)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$30161$1VmeqK)
                                                                                          (if g$ls/false$30161$1VmeqK
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$29341$1VmeqK
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$30137$1VmeqK)))
                                                                                              g$ls/false$30161$1VmeqK)
                                                                                            (g$syntax-violation$29341$1VmeqK
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$30160$1VmeqK))))
                                                                                       (g$syntax-dispatch$29222$1VmeqK
                                                                                         g$t$30160$1VmeqK
                                                                                         '_))))
                                                                                   g$t$30156$1VmeqK))))
                                                                             (g$syntax-dispatch$29222$1VmeqK
                                                                               g$t$30156$1VmeqK
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$30153$1VmeqK))))
                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                     g$t$30153$1VmeqK
                                                                     '(any)))))
                                                               g$t$30149$1VmeqK))))
                                                         (g$syntax-dispatch$29222$1VmeqK
                                                           g$t$30149$1VmeqK
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$30145$1VmeqK))))
                                               (g$syntax-dispatch$29222$1VmeqK
                                                 g$t$30145$1VmeqK
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$30143$1VmeqK)
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$t$30162$1VmeqK)
                                                ((case-lambda
                                                   ((g$ls/false$30163$1VmeqK)
                                                    (if g$ls/false$30163$1VmeqK
                                                      (apply
                                                        (case-lambda
                                                          ((g$e$30164$1VmeqK
                                                             g$e*$30165$1VmeqK)
                                                           (g$syntax-violation$29341$1VmeqK
                                                             '#f
                                                             '"incorrect position of keyword else"
                                                             g$stx$30137$1VmeqK)))
                                                        g$ls/false$30163$1VmeqK)
                                                      ((case-lambda
                                                         ((g$t$30166$1VmeqK)
                                                          ((case-lambda
                                                             ((g$ls/false$30167$1VmeqK)
                                                              (if g$ls/false$30167$1VmeqK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$e$30168$1VmeqK
                                                                       g$p$30169$1VmeqK)
                                                                     (list
                                                                       'let
                                                                       (list
                                                                         (list
                                                                           't
                                                                           g$e$30168$1VmeqK))
                                                                       (list
                                                                         'if
                                                                         't
                                                                         (cons
                                                                           g$p$30169$1VmeqK
                                                                           '(t))
                                                                         (g$f$30142$1VmeqK
                                                                           (car g$cls*$30144$1VmeqK)
                                                                           (cdr g$cls*$30144$1VmeqK))))))
                                                                  g$ls/false$30167$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$t$30170$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30171$1VmeqK)
                                                                        (if g$ls/false$30171$1VmeqK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$e$30172$1VmeqK)
                                                                               (list
                                                                                 'or
                                                                                 g$e$30172$1VmeqK
                                                                                 (g$f$30142$1VmeqK
                                                                                   (car g$cls*$30144$1VmeqK)
                                                                                   (cdr g$cls*$30144$1VmeqK)))))
                                                                            g$ls/false$30171$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$30173$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30174$1VmeqK)
                                                                                  (if g$ls/false$30174$1VmeqK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$e$30175$1VmeqK
                                                                                           g$e*$30176$1VmeqK)
                                                                                         (list
                                                                                           'if
                                                                                           g$e$30175$1VmeqK
                                                                                           (cons
                                                                                             'begin
                                                                                             g$e*$30176$1VmeqK)
                                                                                           (g$f$30142$1VmeqK
                                                                                             (car g$cls*$30144$1VmeqK)
                                                                                             (cdr g$cls*$30144$1VmeqK)))))
                                                                                      g$ls/false$30174$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$30177$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30178$1VmeqK)
                                                                                            (if g$ls/false$30178$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$29341$1VmeqK
                                                                                                     '#f
                                                                                                     '"invalid last clause"
                                                                                                     g$stx$30137$1VmeqK)))
                                                                                                g$ls/false$30178$1VmeqK)
                                                                                              (g$syntax-violation$29341$1VmeqK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$30177$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$30177$1VmeqK
                                                                                           '_))))
                                                                                     g$t$30173$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$30173$1VmeqK
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$t$30170$1VmeqK))))
                                                                     (g$syntax-dispatch$29222$1VmeqK
                                                                       g$t$30170$1VmeqK
                                                                       '(any)))))
                                                                 g$t$30166$1VmeqK))))
                                                           (g$syntax-dispatch$29222$1VmeqK
                                                             g$t$30166$1VmeqK
                                                             '(any #(scheme-id
                                                                     =>)
                                                                   any)))))
                                                       g$t$30162$1VmeqK))))
                                                 (g$syntax-dispatch$29222$1VmeqK
                                                   g$t$30162$1VmeqK
                                                   '(#(scheme-id else)
                                                     any
                                                     .
                                                     each-any)))))
                                             g$cls$30143$1VmeqK)))))))
                            g$f$30142$1VmeqK)
                          g$cls$30140$1VmeqK
                          g$cls*$30141$1VmeqK))))
                    g$ls/false$30139$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30138$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30138$1VmeqK
               '(_ any . each-any)))))
         g$stx$30137$1VmeqK))))
   (g$do-include$29209$1VmeqK
     g$do-include$32804$1VmeqK
     (case-lambda
       ((g$stx$30179$1VmeqK g$id$30180$1VmeqK g$filename$30181$1VmeqK)
        ((case-lambda
           ((g$filename$30182$1VmeqK)
            (begin
              (if (not (if (string? g$filename$30182$1VmeqK)
                         (begin
                           '#f
                           (g$id?$28724$1VmeqK g$id$30180$1VmeqK))
                         '#f))
                (g$syntax-violation$29341$1VmeqK
                  '#f
                  '"invalid syntax"
                  g$stx$30179$1VmeqK)
                (void))
              (cons
                (g$bless$29185$1VmeqK 'begin)
                (g$with-input-from-file$27178$1VmeqK
                  g$filename$30182$1VmeqK
                  (case-lambda
                    (()
                     ((letrec ((g$f$30183$1VmeqK
                                 (case-lambda
                                   ((g$ls$30184$1VmeqK)
                                    ((case-lambda
                                       ((g$x$30185$1VmeqK)
                                        (if (eof-object?
                                              g$x$30185$1VmeqK)
                                          (g$reverse$21198$1VmeqK
                                            g$ls$30184$1VmeqK)
                                          (begin
                                            '#f
                                            (g$f$30183$1VmeqK
                                              (cons
                                                (g$datum->stx$28707$1VmeqK
                                                  g$id$30180$1VmeqK
                                                  g$x$30185$1VmeqK)
                                                g$ls$30184$1VmeqK))))))
                                     (read-annotated))))))
                        g$f$30183$1VmeqK)
                      '()))))))))
         (g$stx->datum$28735$1VmeqK g$filename$30181$1VmeqK)))))
   (g$include-macro$29210$1VmeqK
     g$include-macro$32805$1VmeqK
     (case-lambda
       ((g$e$30186$1VmeqK)
        ((case-lambda
           ((g$t$30187$1VmeqK)
            ((case-lambda
               ((g$ls/false$30188$1VmeqK)
                (if g$ls/false$30188$1VmeqK
                  (apply
                    (case-lambda
                      ((g$id$30189$1VmeqK g$filename$30190$1VmeqK)
                       (g$do-include$29209$1VmeqK
                         g$e$30186$1VmeqK
                         g$id$30189$1VmeqK
                         g$filename$30190$1VmeqK)))
                    g$ls/false$30188$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30187$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30187$1VmeqK
               '(any any)))))
         g$e$30186$1VmeqK))))
   (g$include-into-macro$29211$1VmeqK
     g$include-into-macro$32806$1VmeqK
     (case-lambda
       ((g$e$30191$1VmeqK)
        ((case-lambda
           ((g$t$30192$1VmeqK)
            ((case-lambda
               ((g$ls/false$30193$1VmeqK)
                (if g$ls/false$30193$1VmeqK
                  (apply
                    (case-lambda
                      ((g$id$30194$1VmeqK g$filename$30195$1VmeqK)
                       (g$do-include$29209$1VmeqK
                         g$e$30191$1VmeqK
                         g$id$30194$1VmeqK
                         g$filename$30195$1VmeqK)))
                    g$ls/false$30193$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30192$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30192$1VmeqK
               '(_ any any)))))
         g$e$30191$1VmeqK))))
   (g$syntax-rules-macro$29212$1VmeqK
     g$syntax-rules-macro$32807$1VmeqK
     (case-lambda
       ((g$e$30196$1VmeqK)
        ((case-lambda
           ((g$t$30197$1VmeqK)
            ((case-lambda
               ((g$ls/false$30198$1VmeqK)
                (if g$ls/false$30198$1VmeqK
                  (apply
                    (case-lambda
                      ((g$lits$30199$1VmeqK
                         g$pat*$30200$1VmeqK
                         g$tmp*$30201$1VmeqK)
                       (begin
                         (g$verify-literals$29225$1VmeqK
                           g$lits$30199$1VmeqK
                           g$e$30196$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$30199$1VmeqK
                                   (g$map$20349$1VmeqK
                                     (case-lambda
                                       ((g$pat$30202$1VmeqK
                                          g$tmp$30203$1VmeqK)
                                        ((case-lambda
                                           ((g$t$30204$1VmeqK)
                                            ((case-lambda
                                               ((g$ls/false$30205$1VmeqK)
                                                (if g$ls/false$30205$1VmeqK
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$30206$1VmeqK)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$30206$1VmeqK)
                                                         (list
                                                           'syntax
                                                           g$tmp$30203$1VmeqK))))
                                                    g$ls/false$30205$1VmeqK)
                                                  ((case-lambda
                                                     ((g$t$30207$1VmeqK)
                                                      ((case-lambda
                                                         ((g$ls/false$30208$1VmeqK)
                                                          (if g$ls/false$30208$1VmeqK
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$29341$1VmeqK
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$30196$1VmeqK
                                                                   g$pat$30202$1VmeqK)))
                                                              g$ls/false$30208$1VmeqK)
                                                            (g$syntax-violation$29341$1VmeqK
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$30207$1VmeqK))))
                                                       (g$syntax-dispatch$29222$1VmeqK
                                                         g$t$30207$1VmeqK
                                                         '_))))
                                                   g$t$30204$1VmeqK))))
                                             (g$syntax-dispatch$29222$1VmeqK
                                               g$t$30204$1VmeqK
                                               '(_ . any)))))
                                         g$pat$30202$1VmeqK)))
                                     g$pat*$30200$1VmeqK
                                     g$tmp*$30201$1VmeqK)))))))))
                    g$ls/false$30198$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30197$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30197$1VmeqK
               '(_ each-any . #(each (any any)))))))
         g$e$30196$1VmeqK))))
   (g$quasiquote-macro$29213$1VmeqK
     g$quasiquote-macro$32808$1VmeqK
     ((case-lambda
        (()
         (letrec* ((g$datum$30209$1VmeqK
                     (case-lambda
                       ((g$x$30359$1VmeqK)
                        (list
                          (g$scheme-stx$29165$1VmeqK 'quote)
                          (g$mkstx$28712$1VmeqK
                            g$x$30359$1VmeqK
                            '()
                            '()
                            '())))))
                   (g$quasicons*$30244$1VmeqK
                     (case-lambda
                       ((g$x$30355$1VmeqK g$y$30356$1VmeqK)
                        ((letrec ((g$f$30357$1VmeqK
                                    (case-lambda
                                      ((g$x$30358$1VmeqK)
                                       (if (null? g$x$30358$1VmeqK)
                                         g$y$30356$1VmeqK
                                         (g$quasicons$30245$1VmeqK
                                           (car g$x$30358$1VmeqK)
                                           (g$f$30357$1VmeqK
                                             (cdr g$x$30358$1VmeqK))))))))
                           g$f$30357$1VmeqK)
                         g$x$30355$1VmeqK))))
                   (g$quasicons$30245$1VmeqK
                     (case-lambda
                       ((g$x$30336$1VmeqK g$y$30337$1VmeqK)
                        ((case-lambda
                           ((g$t$30338$1VmeqK)
                            ((case-lambda
                               ((g$ls/false$30339$1VmeqK)
                                (if g$ls/false$30339$1VmeqK
                                  (apply
                                    (case-lambda
                                      ((g$dy$30340$1VmeqK)
                                       ((case-lambda
                                          ((g$t$30341$1VmeqK)
                                           ((case-lambda
                                              ((g$ls/false$30342$1VmeqK)
                                               (if g$ls/false$30342$1VmeqK
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$30343$1VmeqK)
                                                      (list
                                                        (g$scheme-stx$29165$1VmeqK
                                                          'quote)
                                                        (cons
                                                          g$dx$30343$1VmeqK
                                                          g$dy$30340$1VmeqK))))
                                                   g$ls/false$30342$1VmeqK)
                                                 ((case-lambda
                                                    ((g$t$30344$1VmeqK)
                                                     ((case-lambda
                                                        ((g$ls/false$30345$1VmeqK)
                                                         (if g$ls/false$30345$1VmeqK
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$30346$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30347$1VmeqK)
                                                                        (if g$ls/false$30347$1VmeqK
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$29165$1VmeqK
                                                                                   'list)
                                                                                 g$x$30336$1VmeqK)))
                                                                            g$ls/false$30347$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$30348$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30349$1VmeqK)
                                                                                  (if g$ls/false$30349$1VmeqK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$29165$1VmeqK
                                                                                             'cons)
                                                                                           g$x$30336$1VmeqK
                                                                                           g$y$30337$1VmeqK)))
                                                                                      g$ls/false$30349$1VmeqK)
                                                                                    (g$syntax-violation$29341$1VmeqK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$30348$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$30348$1VmeqK
                                                                                 '_))))
                                                                           g$t$30346$1VmeqK))))
                                                                     (g$syntax-dispatch$29222$1VmeqK
                                                                       g$t$30346$1VmeqK
                                                                       '()))))
                                                                 g$dy$30340$1VmeqK)))
                                                             g$ls/false$30345$1VmeqK)
                                                           (g$syntax-violation$29341$1VmeqK
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$30344$1VmeqK))))
                                                      (g$syntax-dispatch$29222$1VmeqK
                                                        g$t$30344$1VmeqK
                                                        '_))))
                                                  g$t$30341$1VmeqK))))
                                            (g$syntax-dispatch$29222$1VmeqK
                                              g$t$30341$1VmeqK
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$30336$1VmeqK)))
                                    g$ls/false$30339$1VmeqK)
                                  ((case-lambda
                                     ((g$t$30350$1VmeqK)
                                      ((case-lambda
                                         ((g$ls/false$30351$1VmeqK)
                                          (if g$ls/false$30351$1VmeqK
                                            (apply
                                              (case-lambda
                                                ((g$stuff$30352$1VmeqK)
                                                 (g$cons*$20351$1VmeqK
                                                   (g$scheme-stx$29165$1VmeqK
                                                     'list)
                                                   g$x$30336$1VmeqK
                                                   g$stuff$30352$1VmeqK)))
                                              g$ls/false$30351$1VmeqK)
                                            ((case-lambda
                                               ((g$t$30353$1VmeqK)
                                                ((case-lambda
                                                   ((g$ls/false$30354$1VmeqK)
                                                    (if g$ls/false$30354$1VmeqK
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$29165$1VmeqK
                                                               'cons)
                                                             g$x$30336$1VmeqK
                                                             g$y$30337$1VmeqK)))
                                                        g$ls/false$30354$1VmeqK)
                                                      (g$syntax-violation$29341$1VmeqK
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$30353$1VmeqK))))
                                                 (g$syntax-dispatch$29222$1VmeqK
                                                   g$t$30353$1VmeqK
                                                   '_))))
                                             g$t$30350$1VmeqK))))
                                       (g$syntax-dispatch$29222$1VmeqK
                                         g$t$30350$1VmeqK
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$30338$1VmeqK))))
                             (g$syntax-dispatch$29222$1VmeqK
                               g$t$30338$1VmeqK
                               '(#(scheme-id quote) any)))))
                         g$y$30337$1VmeqK))))
                   (g$quasiappend$30246$1VmeqK
                     (case-lambda
                       ((g$x$30323$1VmeqK g$y$30324$1VmeqK)
                        ((case-lambda
                           ((g$ls$30325$1VmeqK)
                            (if (null? g$ls$30325$1VmeqK)
                              (list
                                (g$scheme-stx$29165$1VmeqK 'quote)
                                '())
                              (if (null? (cdr g$ls$30325$1VmeqK))
                                (car g$ls$30325$1VmeqK)
                                (begin
                                  '#f
                                  (g$cons*$20351$1VmeqK
                                    (g$scheme-stx$29165$1VmeqK 'append)
                                    g$ls$30325$1VmeqK))))))
                         ((letrec ((g$f$30326$1VmeqK
                                     (case-lambda
                                       ((g$x$30327$1VmeqK)
                                        (if (null? g$x$30327$1VmeqK)
                                          ((case-lambda
                                             ((g$t$30328$1VmeqK)
                                              ((case-lambda
                                                 ((g$ls/false$30329$1VmeqK)
                                                  (if g$ls/false$30329$1VmeqK
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$30329$1VmeqK)
                                                    ((case-lambda
                                                       ((g$t$30330$1VmeqK)
                                                        ((case-lambda
                                                           ((g$ls/false$30331$1VmeqK)
                                                            (if g$ls/false$30331$1VmeqK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$30324$1VmeqK)))
                                                                g$ls/false$30331$1VmeqK)
                                                              (g$syntax-violation$29341$1VmeqK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30330$1VmeqK))))
                                                         (g$syntax-dispatch$29222$1VmeqK
                                                           g$t$30330$1VmeqK
                                                           '_))))
                                                     g$t$30328$1VmeqK))))
                                               (g$syntax-dispatch$29222$1VmeqK
                                                 g$t$30328$1VmeqK
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$30324$1VmeqK)
                                          ((case-lambda
                                             ((g$t$30332$1VmeqK)
                                              ((case-lambda
                                                 ((g$ls/false$30333$1VmeqK)
                                                  (if g$ls/false$30333$1VmeqK
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$30326$1VmeqK
                                                           (cdr g$x$30327$1VmeqK))))
                                                      g$ls/false$30333$1VmeqK)
                                                    ((case-lambda
                                                       ((g$t$30334$1VmeqK)
                                                        ((case-lambda
                                                           ((g$ls/false$30335$1VmeqK)
                                                            (if g$ls/false$30335$1VmeqK
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$30327$1VmeqK)
                                                                     (g$f$30326$1VmeqK
                                                                       (cdr g$x$30327$1VmeqK)))))
                                                                g$ls/false$30335$1VmeqK)
                                                              (g$syntax-violation$29341$1VmeqK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30334$1VmeqK))))
                                                         (g$syntax-dispatch$29222$1VmeqK
                                                           g$t$30334$1VmeqK
                                                           '_))))
                                                     g$t$30332$1VmeqK))))
                                               (g$syntax-dispatch$29222$1VmeqK
                                                 g$t$30332$1VmeqK
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$30327$1VmeqK)))))))
                            g$f$30326$1VmeqK)
                          g$x$30323$1VmeqK)))))
                   (g$quasivector$30247$1VmeqK
                     (case-lambda
                       ((g$x$30298$1VmeqK)
                        ((case-lambda
                           ((g$pat-x$30299$1VmeqK)
                            ((case-lambda
                               ((g$t$30300$1VmeqK)
                                ((case-lambda
                                   ((g$ls/false$30301$1VmeqK)
                                    (if g$ls/false$30301$1VmeqK
                                      (apply
                                        (case-lambda
                                          ((g$x*$30302$1VmeqK)
                                           (list
                                             (g$scheme-stx$29165$1VmeqK
                                               'quote)
                                             (g$list->vector$21192$1VmeqK
                                               g$x*$30302$1VmeqK))))
                                        g$ls/false$30301$1VmeqK)
                                      ((case-lambda
                                         ((g$t$30303$1VmeqK)
                                          ((case-lambda
                                             ((g$ls/false$30304$1VmeqK)
                                              (if g$ls/false$30304$1VmeqK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$30305$1VmeqK
                                                                 (case-lambda
                                                                   ((g$x$30306$1VmeqK
                                                                      g$k$30307$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$t$30308$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30309$1VmeqK)
                                                                            (if g$ls/false$30309$1VmeqK
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$30310$1VmeqK)
                                                                                   (g$k$30307$1VmeqK
                                                                                     (g$map$20349$1VmeqK
                                                                                       (case-lambda
                                                                                         ((g$x$30311$1VmeqK)
                                                                                          (list
                                                                                            (g$scheme-stx$29165$1VmeqK
                                                                                              'quote)
                                                                                            g$x$30311$1VmeqK)))
                                                                                       g$x*$30310$1VmeqK))))
                                                                                g$ls/false$30309$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$t$30312$1VmeqK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$30313$1VmeqK)
                                                                                      (if g$ls/false$30313$1VmeqK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$30314$1VmeqK)
                                                                                             (g$k$30307$1VmeqK
                                                                                               g$x*$30314$1VmeqK)))
                                                                                          g$ls/false$30313$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$t$30315$1VmeqK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$30316$1VmeqK)
                                                                                                (if g$ls/false$30316$1VmeqK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$30317$1VmeqK
                                                                                                         g$y$30318$1VmeqK)
                                                                                                       (g$f$30305$1VmeqK
                                                                                                         g$y$30318$1VmeqK
                                                                                                         (case-lambda
                                                                                                           ((g$ls$30319$1VmeqK)
                                                                                                            (g$k$30307$1VmeqK
                                                                                                              (cons
                                                                                                                g$x$30317$1VmeqK
                                                                                                                g$ls$30319$1VmeqK)))))))
                                                                                                    g$ls/false$30316$1VmeqK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$30320$1VmeqK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$30321$1VmeqK)
                                                                                                          (if g$ls/false$30321$1VmeqK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$29165$1VmeqK
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$30299$1VmeqK)))
                                                                                                              g$ls/false$30321$1VmeqK)
                                                                                                            (g$syntax-violation$29341$1VmeqK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$30320$1VmeqK))))
                                                                                                       (g$syntax-dispatch$29222$1VmeqK
                                                                                                         g$t$30320$1VmeqK
                                                                                                         '_))))
                                                                                                   g$t$30315$1VmeqK))))
                                                                                             (g$syntax-dispatch$29222$1VmeqK
                                                                                               g$t$30315$1VmeqK
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$30312$1VmeqK))))
                                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                                     g$t$30312$1VmeqK
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$30308$1VmeqK))))
                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                           g$t$30308$1VmeqK
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$30306$1VmeqK)))))
                                                        g$f$30305$1VmeqK)
                                                      g$x$30298$1VmeqK
                                                      (case-lambda
                                                        ((g$ls$30322$1VmeqK)
                                                         (g$cons*$20351$1VmeqK
                                                           (g$scheme-stx$29165$1VmeqK
                                                             'vector)
                                                           g$ls$30322$1VmeqK))))))
                                                  g$ls/false$30304$1VmeqK)
                                                (g$syntax-violation$29341$1VmeqK
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$30303$1VmeqK))))
                                           (g$syntax-dispatch$29222$1VmeqK
                                             g$t$30303$1VmeqK
                                             '_))))
                                       g$t$30300$1VmeqK))))
                                 (g$syntax-dispatch$29222$1VmeqK
                                   g$t$30300$1VmeqK
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$30299$1VmeqK)))
                         g$x$30298$1VmeqK))))
                   (g$vquasi$30248$1VmeqK
                     (case-lambda
                       ((g$p$30281$1VmeqK g$lev$30282$1VmeqK)
                        ((case-lambda
                           ((g$t$30283$1VmeqK)
                            ((case-lambda
                               ((g$ls/false$30284$1VmeqK)
                                (if g$ls/false$30284$1VmeqK
                                  (apply
                                    (case-lambda
                                      ((g$p$30285$1VmeqK
                                         g$q$30286$1VmeqK)
                                       ((case-lambda
                                          ((g$t$30287$1VmeqK)
                                           ((case-lambda
                                              ((g$ls/false$30288$1VmeqK)
                                               (if g$ls/false$30288$1VmeqK
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$30289$1VmeqK)
                                                      (if (g$=$22210$1VmeqK
                                                            g$lev$30282$1VmeqK
                                                            '0)
                                                        (g$quasicons*$30244$1VmeqK
                                                          g$p$30289$1VmeqK
                                                          (g$vquasi$30248$1VmeqK
                                                            g$q$30286$1VmeqK
                                                            g$lev$30282$1VmeqK))
                                                        (g$quasicons$30245$1VmeqK
                                                          (g$quasicons$30245$1VmeqK
                                                            (g$datum$30209$1VmeqK
                                                              'unquote)
                                                            (g$quasi$30249$1VmeqK
                                                              g$p$30289$1VmeqK
                                                              (- g$lev$30282$1VmeqK
                                                                 '1)))
                                                          (g$vquasi$30248$1VmeqK
                                                            g$q$30286$1VmeqK
                                                            g$lev$30282$1VmeqK)))))
                                                   g$ls/false$30288$1VmeqK)
                                                 ((case-lambda
                                                    ((g$t$30290$1VmeqK)
                                                     ((case-lambda
                                                        ((g$ls/false$30291$1VmeqK)
                                                         (if g$ls/false$30291$1VmeqK
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$30292$1VmeqK)
                                                                (if (g$=$22210$1VmeqK
                                                                      g$lev$30282$1VmeqK
                                                                      '0)
                                                                  (g$quasiappend$30246$1VmeqK
                                                                    g$p$30292$1VmeqK
                                                                    (g$vquasi$30248$1VmeqK
                                                                      g$q$30286$1VmeqK
                                                                      g$lev$30282$1VmeqK))
                                                                  (g$quasicons$30245$1VmeqK
                                                                    (g$quasicons$30245$1VmeqK
                                                                      (g$datum$30209$1VmeqK
                                                                        'unquote-splicing)
                                                                      (g$quasi$30249$1VmeqK
                                                                        g$p$30292$1VmeqK
                                                                        (- g$lev$30282$1VmeqK
                                                                           '1)))
                                                                    (g$vquasi$30248$1VmeqK
                                                                      g$q$30286$1VmeqK
                                                                      g$lev$30282$1VmeqK)))))
                                                             g$ls/false$30291$1VmeqK)
                                                           ((case-lambda
                                                              ((g$t$30293$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$ls/false$30294$1VmeqK)
                                                                   (if g$ls/false$30294$1VmeqK
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$30295$1VmeqK)
                                                                          (g$quasicons$30245$1VmeqK
                                                                            (g$quasi$30249$1VmeqK
                                                                              g$p$30295$1VmeqK
                                                                              g$lev$30282$1VmeqK)
                                                                            (g$vquasi$30248$1VmeqK
                                                                              g$q$30286$1VmeqK
                                                                              g$lev$30282$1VmeqK))))
                                                                       g$ls/false$30294$1VmeqK)
                                                                     (g$syntax-violation$29341$1VmeqK
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$30293$1VmeqK))))
                                                                (g$syntax-dispatch$29222$1VmeqK
                                                                  g$t$30293$1VmeqK
                                                                  'any))))
                                                            g$t$30290$1VmeqK))))
                                                      (g$syntax-dispatch$29222$1VmeqK
                                                        g$t$30290$1VmeqK
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$30287$1VmeqK))))
                                            (g$syntax-dispatch$29222$1VmeqK
                                              g$t$30287$1VmeqK
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$30285$1VmeqK)))
                                    g$ls/false$30284$1VmeqK)
                                  ((case-lambda
                                     ((g$t$30296$1VmeqK)
                                      ((case-lambda
                                         ((g$ls/false$30297$1VmeqK)
                                          (if g$ls/false$30297$1VmeqK
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$29165$1VmeqK
                                                     'quote)
                                                   '())))
                                              g$ls/false$30297$1VmeqK)
                                            (g$syntax-violation$29341$1VmeqK
                                              '#f
                                              '"invalid syntax"
                                              g$t$30296$1VmeqK))))
                                       (g$syntax-dispatch$29222$1VmeqK
                                         g$t$30296$1VmeqK
                                         '()))))
                                   g$t$30283$1VmeqK))))
                             (g$syntax-dispatch$29222$1VmeqK
                               g$t$30283$1VmeqK
                               '(any . any)))))
                         g$p$30281$1VmeqK))))
                   (g$quasi$30249$1VmeqK
                     (case-lambda
                       ((g$p$30254$1VmeqK g$lev$30255$1VmeqK)
                        ((case-lambda
                           ((g$t$30256$1VmeqK)
                            ((case-lambda
                               ((g$ls/false$30257$1VmeqK)
                                (if g$ls/false$30257$1VmeqK
                                  (apply
                                    (case-lambda
                                      ((g$p$30258$1VmeqK)
                                       (if (g$=$22210$1VmeqK
                                             g$lev$30255$1VmeqK
                                             '0)
                                         g$p$30258$1VmeqK
                                         (g$quasicons$30245$1VmeqK
                                           (g$datum$30209$1VmeqK
                                             'unquote)
                                           (g$quasi$30249$1VmeqK
                                             (list g$p$30258$1VmeqK)
                                             (- g$lev$30255$1VmeqK
                                                '1))))))
                                    g$ls/false$30257$1VmeqK)
                                  ((case-lambda
                                     ((g$t$30259$1VmeqK)
                                      ((case-lambda
                                         ((g$ls/false$30260$1VmeqK)
                                          (if g$ls/false$30260$1VmeqK
                                            (apply
                                              (case-lambda
                                                ((g$p$30261$1VmeqK
                                                   g$q$30262$1VmeqK)
                                                 (if (g$=$22210$1VmeqK
                                                       g$lev$30255$1VmeqK
                                                       '0)
                                                   (g$quasicons*$30244$1VmeqK
                                                     g$p$30261$1VmeqK
                                                     (g$quasi$30249$1VmeqK
                                                       g$q$30262$1VmeqK
                                                       g$lev$30255$1VmeqK))
                                                   (g$quasicons$30245$1VmeqK
                                                     (g$quasicons$30245$1VmeqK
                                                       (g$datum$30209$1VmeqK
                                                         'unquote)
                                                       (g$quasi$30249$1VmeqK
                                                         g$p$30261$1VmeqK
                                                         (- g$lev$30255$1VmeqK
                                                            '1)))
                                                     (g$quasi$30249$1VmeqK
                                                       g$q$30262$1VmeqK
                                                       g$lev$30255$1VmeqK)))))
                                              g$ls/false$30260$1VmeqK)
                                            ((case-lambda
                                               ((g$t$30263$1VmeqK)
                                                ((case-lambda
                                                   ((g$ls/false$30264$1VmeqK)
                                                    (if g$ls/false$30264$1VmeqK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$30265$1VmeqK
                                                             g$q$30266$1VmeqK)
                                                           (if (g$=$22210$1VmeqK
                                                                 g$lev$30255$1VmeqK
                                                                 '0)
                                                             (g$quasiappend$30246$1VmeqK
                                                               g$p$30265$1VmeqK
                                                               (g$quasi$30249$1VmeqK
                                                                 g$q$30266$1VmeqK
                                                                 g$lev$30255$1VmeqK))
                                                             (g$quasicons$30245$1VmeqK
                                                               (g$quasicons$30245$1VmeqK
                                                                 (g$datum$30209$1VmeqK
                                                                   'unquote-splicing)
                                                                 (g$quasi$30249$1VmeqK
                                                                   g$p$30265$1VmeqK
                                                                   (- g$lev$30255$1VmeqK
                                                                      '1)))
                                                               (g$quasi$30249$1VmeqK
                                                                 g$q$30266$1VmeqK
                                                                 g$lev$30255$1VmeqK)))))
                                                        g$ls/false$30264$1VmeqK)
                                                      ((case-lambda
                                                         ((g$t$30267$1VmeqK)
                                                          ((case-lambda
                                                             ((g$ls/false$30268$1VmeqK)
                                                              (if g$ls/false$30268$1VmeqK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$30269$1VmeqK)
                                                                     (g$quasicons$30245$1VmeqK
                                                                       (g$datum$30209$1VmeqK
                                                                         'quasiquote)
                                                                       (g$quasi$30249$1VmeqK
                                                                         (list
                                                                           g$p$30269$1VmeqK)
                                                                         (+ g$lev$30255$1VmeqK
                                                                            '1)))))
                                                                  g$ls/false$30268$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$t$30270$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30271$1VmeqK)
                                                                        (if g$ls/false$30271$1VmeqK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$30272$1VmeqK
                                                                                 g$q$30273$1VmeqK)
                                                                               (g$quasicons$30245$1VmeqK
                                                                                 (g$quasi$30249$1VmeqK
                                                                                   g$p$30272$1VmeqK
                                                                                   g$lev$30255$1VmeqK)
                                                                                 (g$quasi$30249$1VmeqK
                                                                                   g$q$30273$1VmeqK
                                                                                   g$lev$30255$1VmeqK))))
                                                                            g$ls/false$30271$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$30274$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30275$1VmeqK)
                                                                                  (if (if g$ls/false$30275$1VmeqK
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$30276$1VmeqK)
                                                                                               (not (g$stx?$28696$1VmeqK
                                                                                                      g$x$30276$1VmeqK))))
                                                                                            g$ls/false$30275$1VmeqK))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$30277$1VmeqK)
                                                                                         (g$quasivector$30247$1VmeqK
                                                                                           (g$vquasi$30248$1VmeqK
                                                                                             g$x$30277$1VmeqK
                                                                                             g$lev$30255$1VmeqK))))
                                                                                      g$ls/false$30275$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$30278$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30279$1VmeqK)
                                                                                            (if g$ls/false$30279$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$30280$1VmeqK)
                                                                                                   (list
                                                                                                     (g$scheme-stx$29165$1VmeqK
                                                                                                       'quote)
                                                                                                     g$p$30280$1VmeqK)))
                                                                                                g$ls/false$30279$1VmeqK)
                                                                                              (g$syntax-violation$29341$1VmeqK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$30278$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$30278$1VmeqK
                                                                                           'any))))
                                                                                     g$t$30274$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$30274$1VmeqK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$30270$1VmeqK))))
                                                                     (g$syntax-dispatch$29222$1VmeqK
                                                                       g$t$30270$1VmeqK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$30267$1VmeqK))))
                                                           (g$syntax-dispatch$29222$1VmeqK
                                                             g$t$30267$1VmeqK
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$30263$1VmeqK))))
                                                 (g$syntax-dispatch$29222$1VmeqK
                                                   g$t$30263$1VmeqK
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$30259$1VmeqK))))
                                       (g$syntax-dispatch$29222$1VmeqK
                                         g$t$30259$1VmeqK
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$30256$1VmeqK))))
                             (g$syntax-dispatch$29222$1VmeqK
                               g$t$30256$1VmeqK
                               '(#(scheme-id unquote) any)))))
                         g$p$30254$1VmeqK)))))
           (case-lambda
             ((g$x$30250$1VmeqK)
              ((case-lambda
                 ((g$t$30251$1VmeqK)
                  ((case-lambda
                     ((g$ls/false$30252$1VmeqK)
                      (if g$ls/false$30252$1VmeqK
                        (apply
                          (case-lambda
                            ((g$e$30253$1VmeqK)
                             (g$quasi$30249$1VmeqK
                               g$e$30253$1VmeqK
                               '0)))
                          g$ls/false$30252$1VmeqK)
                        (g$syntax-violation$29341$1VmeqK
                          '#f
                          '"invalid syntax"
                          g$t$30251$1VmeqK))))
                   (g$syntax-dispatch$29222$1VmeqK
                     g$t$30251$1VmeqK
                     '(_ any)))))
               g$x$30250$1VmeqK))))))))
   (g$quasisyntax-macro$29214$1VmeqK
     g$quasisyntax-macro$32809$1VmeqK
     ((case-lambda
        (()
         (letrec* ((g$quasi$30360$1VmeqK
                     (case-lambda
                       ((g$p$30374$1VmeqK g$lev$30375$1VmeqK)
                        ((case-lambda
                           ((g$t$30376$1VmeqK)
                            ((case-lambda
                               ((g$ls/false$30377$1VmeqK)
                                (if g$ls/false$30377$1VmeqK
                                  (apply
                                    (case-lambda
                                      ((g$p$30378$1VmeqK)
                                       (if (g$=$22210$1VmeqK
                                             g$lev$30375$1VmeqK
                                             '0)
                                         ((case-lambda
                                            ((g$g$30379$1VmeqK)
                                             (values
                                               (list g$g$30379$1VmeqK)
                                               (list g$p$30378$1VmeqK)
                                               g$g$30379$1VmeqK)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$30360$1VmeqK
                                                g$p$30378$1VmeqK
                                                (- g$lev$30375$1VmeqK
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$30383$1VmeqK
                                                g$rhs*$30384$1VmeqK
                                                g$p$30385$1VmeqK)
                                              ((case-lambda
                                                 ((g$p$30386$1VmeqK
                                                    g$rhs*$30387$1VmeqK
                                                    g$lhs*$30388$1VmeqK)
                                                  (values
                                                    g$lhs*$30388$1VmeqK
                                                    g$rhs*$30387$1VmeqK
                                                    (list
                                                      'unsyntax
                                                      g$p$30386$1VmeqK))))
                                               g$p$30385$1VmeqK
                                               g$rhs*$30384$1VmeqK
                                               g$lhs*$30383$1VmeqK)))))))
                                    g$ls/false$30377$1VmeqK)
                                  ((case-lambda
                                     ((g$t$30389$1VmeqK)
                                      ((case-lambda
                                         ((g$ls/false$30390$1VmeqK)
                                          (if (if g$ls/false$30390$1VmeqK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$22210$1VmeqK
                                                         g$lev$30375$1VmeqK
                                                         '0)))
                                                    g$ls/false$30390$1VmeqK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$29341$1VmeqK
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$30374$1VmeqK)))
                                              g$ls/false$30390$1VmeqK)
                                            ((case-lambda
                                               ((g$t$30391$1VmeqK)
                                                ((case-lambda
                                                   ((g$ls/false$30392$1VmeqK)
                                                    (if g$ls/false$30392$1VmeqK
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$30393$1VmeqK
                                                             g$q$30394$1VmeqK)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$30360$1VmeqK
                                                                  g$q$30394$1VmeqK
                                                                  g$lev$30375$1VmeqK)))
                                                             (case-lambda
                                                               ((g$lhs*$30398$1VmeqK
                                                                  g$rhs*$30399$1VmeqK
                                                                  g$q$30400$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$q$30401$1VmeqK
                                                                      g$rhs*$30402$1VmeqK
                                                                      g$lhs*$30403$1VmeqK)
                                                                    (if (g$=$22210$1VmeqK
                                                                          g$lev$30375$1VmeqK
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$30404$1VmeqK)
                                                                          (values
                                                                            (append
                                                                              g$g*$30404$1VmeqK
                                                                              g$lhs*$30403$1VmeqK)
                                                                            (append
                                                                              g$p*$30393$1VmeqK
                                                                              g$rhs*$30402$1VmeqK)
                                                                            (append
                                                                              g$g*$30404$1VmeqK
                                                                              g$q$30401$1VmeqK))))
                                                                       (g$map$20349$1VmeqK
                                                                         (case-lambda
                                                                           ((g$x$30405$1VmeqK)
                                                                            (gensym)))
                                                                         g$p*$30393$1VmeqK))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$30360$1VmeqK
                                                                             g$p*$30393$1VmeqK
                                                                             (- g$lev$30375$1VmeqK
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$30409$1VmeqK
                                                                             g$rhs2*$30410$1VmeqK
                                                                             g$p*$30411$1VmeqK)
                                                                           ((case-lambda
                                                                              ((g$p*$30412$1VmeqK
                                                                                 g$rhs2*$30413$1VmeqK
                                                                                 g$lhs2*$30414$1VmeqK)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$30414$1VmeqK
                                                                                   g$lhs*$30403$1VmeqK)
                                                                                 (append
                                                                                   g$rhs2*$30413$1VmeqK
                                                                                   g$rhs*$30402$1VmeqK)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$30412$1VmeqK)
                                                                                   g$q$30401$1VmeqK))))
                                                                            g$p*$30411$1VmeqK
                                                                            g$rhs2*$30410$1VmeqK
                                                                            g$lhs2*$30409$1VmeqK)))))))
                                                                 g$q$30400$1VmeqK
                                                                 g$rhs*$30399$1VmeqK
                                                                 g$lhs*$30398$1VmeqK))))))
                                                        g$ls/false$30392$1VmeqK)
                                                      ((case-lambda
                                                         ((g$t$30415$1VmeqK)
                                                          ((case-lambda
                                                             ((g$ls/false$30416$1VmeqK)
                                                              (if g$ls/false$30416$1VmeqK
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$30417$1VmeqK
                                                                       g$q$30418$1VmeqK)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$30360$1VmeqK
                                                                            g$q$30418$1VmeqK
                                                                            g$lev$30375$1VmeqK)))
                                                                       (case-lambda
                                                                         ((g$lhs*$30422$1VmeqK
                                                                            g$rhs*$30423$1VmeqK
                                                                            g$q$30424$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$q$30425$1VmeqK
                                                                                g$rhs*$30426$1VmeqK
                                                                                g$lhs*$30427$1VmeqK)
                                                                              (if (g$=$22210$1VmeqK
                                                                                    g$lev$30375$1VmeqK
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$30428$1VmeqK)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$20349$1VmeqK
                                                                                          (case-lambda
                                                                                            ((g$g$30429$1VmeqK)
                                                                                             (cons
                                                                                               g$g$30429$1VmeqK
                                                                                               '(...))))
                                                                                          g$g*$30428$1VmeqK)
                                                                                        g$lhs*$30427$1VmeqK)
                                                                                      (append
                                                                                        g$p*$30417$1VmeqK
                                                                                        g$rhs*$30426$1VmeqK)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$20349$1VmeqK
                                                                                            (case-lambda
                                                                                              ((g$g$30430$1VmeqK)
                                                                                               (cons
                                                                                                 g$g$30430$1VmeqK
                                                                                                 '(...))))
                                                                                            g$g*$30428$1VmeqK))
                                                                                        g$q$30425$1VmeqK))))
                                                                                 (g$map$20349$1VmeqK
                                                                                   (case-lambda
                                                                                     ((g$x$30431$1VmeqK)
                                                                                      (gensym)))
                                                                                   g$p*$30417$1VmeqK))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$30360$1VmeqK
                                                                                       g$p*$30417$1VmeqK
                                                                                       (- g$lev$30375$1VmeqK
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$30435$1VmeqK
                                                                                       g$rhs2*$30436$1VmeqK
                                                                                       g$p*$30437$1VmeqK)
                                                                                     ((case-lambda
                                                                                        ((g$p*$30438$1VmeqK
                                                                                           g$rhs2*$30439$1VmeqK
                                                                                           g$lhs2*$30440$1VmeqK)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$30440$1VmeqK
                                                                                             g$lhs*$30427$1VmeqK)
                                                                                           (append
                                                                                             g$rhs2*$30439$1VmeqK
                                                                                             g$rhs*$30426$1VmeqK)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$30438$1VmeqK)
                                                                                             g$q$30425$1VmeqK))))
                                                                                      g$p*$30437$1VmeqK
                                                                                      g$rhs2*$30436$1VmeqK
                                                                                      g$lhs2*$30435$1VmeqK)))))))
                                                                           g$q$30424$1VmeqK
                                                                           g$rhs*$30423$1VmeqK
                                                                           g$lhs*$30422$1VmeqK))))))
                                                                  g$ls/false$30416$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$t$30441$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30442$1VmeqK)
                                                                        (if (if g$ls/false$30442$1VmeqK
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$22210$1VmeqK
                                                                                       g$lev$30375$1VmeqK
                                                                                       '0)))
                                                                                  g$ls/false$30442$1VmeqK))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$29341$1VmeqK
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$30374$1VmeqK)))
                                                                            g$ls/false$30442$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$30443$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30444$1VmeqK)
                                                                                  (if g$ls/false$30444$1VmeqK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$30445$1VmeqK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$30360$1VmeqK
                                                                                                g$p$30445$1VmeqK
                                                                                                (+ g$lev$30375$1VmeqK
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$30449$1VmeqK
                                                                                                g$rhs*$30450$1VmeqK
                                                                                                g$p$30451$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$p$30452$1VmeqK
                                                                                                    g$rhs*$30453$1VmeqK
                                                                                                    g$lhs*$30454$1VmeqK)
                                                                                                  (values
                                                                                                    g$lhs*$30454$1VmeqK
                                                                                                    g$rhs*$30453$1VmeqK
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$30452$1VmeqK))))
                                                                                               g$p$30451$1VmeqK
                                                                                               g$rhs*$30450$1VmeqK
                                                                                               g$lhs*$30449$1VmeqK))))))
                                                                                      g$ls/false$30444$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$30455$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30456$1VmeqK)
                                                                                            (if g$ls/false$30456$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$30457$1VmeqK
                                                                                                     g$q$30458$1VmeqK)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$30360$1VmeqK
                                                                                                          g$p$30457$1VmeqK
                                                                                                          g$lev$30375$1VmeqK)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$30465$1VmeqK
                                                                                                          g$rhs*$30466$1VmeqK
                                                                                                          g$p$30467$1VmeqK)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$30360$1VmeqK
                                                                                                               g$q$30458$1VmeqK
                                                                                                               g$lev$30375$1VmeqK)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$30468$1VmeqK
                                                                                                               g$rhs2*$30469$1VmeqK
                                                                                                               g$q$30470$1VmeqK)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$30471$1VmeqK
                                                                                                                   g$rhs2*$30472$1VmeqK
                                                                                                                   g$lhs2*$30473$1VmeqK
                                                                                                                   g$p$30474$1VmeqK
                                                                                                                   g$rhs*$30475$1VmeqK
                                                                                                                   g$lhs*$30476$1VmeqK)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$30473$1VmeqK
                                                                                                                     g$lhs*$30476$1VmeqK)
                                                                                                                   (append
                                                                                                                     g$rhs2*$30472$1VmeqK
                                                                                                                     g$rhs*$30475$1VmeqK)
                                                                                                                   (cons
                                                                                                                     g$p$30474$1VmeqK
                                                                                                                     g$q$30471$1VmeqK))))
                                                                                                              g$q$30470$1VmeqK
                                                                                                              g$rhs2*$30469$1VmeqK
                                                                                                              g$lhs2*$30468$1VmeqK
                                                                                                              g$p$30467$1VmeqK
                                                                                                              g$rhs*$30466$1VmeqK
                                                                                                              g$lhs*$30465$1VmeqK)))))))))
                                                                                                g$ls/false$30456$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$30477$1VmeqK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$30478$1VmeqK)
                                                                                                      (if g$ls/false$30478$1VmeqK
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$30479$1VmeqK)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$30360$1VmeqK
                                                                                                                    g$x*$30479$1VmeqK
                                                                                                                    g$lev$30375$1VmeqK)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$30483$1VmeqK
                                                                                                                    g$rhs*$30484$1VmeqK
                                                                                                                    g$x*$30485$1VmeqK)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$30486$1VmeqK
                                                                                                                        g$rhs*$30487$1VmeqK
                                                                                                                        g$lhs*$30488$1VmeqK)
                                                                                                                      (values
                                                                                                                        g$lhs*$30488$1VmeqK
                                                                                                                        g$rhs*$30487$1VmeqK
                                                                                                                        (g$list->vector$21192$1VmeqK
                                                                                                                          g$x*$30486$1VmeqK))))
                                                                                                                   g$x*$30485$1VmeqK
                                                                                                                   g$rhs*$30484$1VmeqK
                                                                                                                   g$lhs*$30483$1VmeqK))))))
                                                                                                          g$ls/false$30478$1VmeqK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$30489$1VmeqK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$30490$1VmeqK)
                                                                                                                (if g$ls/false$30490$1VmeqK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$30374$1VmeqK)))
                                                                                                                    g$ls/false$30490$1VmeqK)
                                                                                                                  (g$syntax-violation$29341$1VmeqK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$30489$1VmeqK))))
                                                                                                             (g$syntax-dispatch$29222$1VmeqK
                                                                                                               g$t$30489$1VmeqK
                                                                                                               '_))))
                                                                                                         g$t$30477$1VmeqK))))
                                                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                                                     g$t$30477$1VmeqK
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$30455$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$30455$1VmeqK
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$30443$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$30443$1VmeqK
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$30441$1VmeqK))))
                                                                     (g$syntax-dispatch$29222$1VmeqK
                                                                       g$t$30441$1VmeqK
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$30415$1VmeqK))))
                                                           (g$syntax-dispatch$29222$1VmeqK
                                                             g$t$30415$1VmeqK
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$30391$1VmeqK))))
                                                 (g$syntax-dispatch$29222$1VmeqK
                                                   g$t$30391$1VmeqK
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$30389$1VmeqK))))
                                       (g$syntax-dispatch$29222$1VmeqK
                                         g$t$30389$1VmeqK
                                         '#(scheme-id unsyntax)))))
                                   g$t$30376$1VmeqK))))
                             (g$syntax-dispatch$29222$1VmeqK
                               g$t$30376$1VmeqK
                               '(#(scheme-id unsyntax) any)))))
                         g$p$30374$1VmeqK)))))
           (case-lambda
             ((g$x$30361$1VmeqK)
              ((case-lambda
                 ((g$t$30362$1VmeqK)
                  ((case-lambda
                     ((g$ls/false$30363$1VmeqK)
                      (if g$ls/false$30363$1VmeqK
                        (apply
                          (case-lambda
                            ((g$e$30364$1VmeqK)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$30360$1VmeqK
                                    g$e$30364$1VmeqK
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$30368$1VmeqK
                                    g$rhs*$30369$1VmeqK
                                    g$v$30370$1VmeqK)
                                  ((case-lambda
                                     ((g$v$30371$1VmeqK
                                        g$rhs*$30372$1VmeqK
                                        g$lhs*$30373$1VmeqK)
                                      (g$bless$29185$1VmeqK
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$30372$1VmeqK)
                                          '()
                                          (list
                                            g$lhs*$30373$1VmeqK
                                            (list
                                              'syntax
                                              g$v$30371$1VmeqK))))))
                                   g$v$30370$1VmeqK
                                   g$rhs*$30369$1VmeqK
                                   g$lhs*$30368$1VmeqK))))))
                          g$ls/false$30363$1VmeqK)
                        (g$syntax-violation$29341$1VmeqK
                          '#f
                          '"invalid syntax"
                          g$t$30362$1VmeqK))))
                   (g$syntax-dispatch$29222$1VmeqK
                     g$t$30362$1VmeqK
                     '(_ any)))))
               g$x$30361$1VmeqK))))))))
   (g$define-struct-macro$29215$1VmeqK
     g$define-struct-macro$32810$1VmeqK
     (case-lambda
       ((g$stx$30491$1VmeqK)
        (g$syntax-violation$29341$1VmeqK
          '#f
          '"define-struct not supported"
          g$stx$30491$1VmeqK))))
   (g$define-record-type-macro$29216$1VmeqK
     g$define-record-type-macro$32811$1VmeqK
     (case-lambda
       ((g$x$30492$1VmeqK)
        (letrec* ((g$id$30493$1VmeqK
                    (case-lambda
                      ((g$ctxt$30745$1VmeqK . g$str*$30746$1VmeqK)
                       (g$datum->syntax$29343$1VmeqK
                         g$ctxt$30745$1VmeqK
                         (string->symbol
                           (apply
                             string-append
                             (g$map$20349$1VmeqK
                               (case-lambda
                                 ((g$x$30747$1VmeqK)
                                  (if (g$symbol?$21181$1VmeqK
                                        g$x$30747$1VmeqK)
                                    (symbol->string g$x$30747$1VmeqK)
                                    (if (string? g$x$30747$1VmeqK)
                                      g$x$30747$1VmeqK
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'define-record-type
                                          '"BUG"))))))
                               g$str*$30746$1VmeqK)))))))
                  (g$get-record-name$30494$1VmeqK
                    (case-lambda
                      ((g$spec$30736$1VmeqK)
                       ((case-lambda
                          ((g$t$30737$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30738$1VmeqK)
                               (if g$ls/false$30738$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$foo$30739$1VmeqK
                                        g$make-foo$30740$1VmeqK
                                        g$foo?$30741$1VmeqK)
                                      g$foo$30739$1VmeqK))
                                   g$ls/false$30738$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30742$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30743$1VmeqK)
                                         (if g$ls/false$30743$1VmeqK
                                           (apply
                                             (case-lambda
                                               ((g$foo$30744$1VmeqK)
                                                g$foo$30744$1VmeqK))
                                             g$ls/false$30743$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30742$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30742$1VmeqK
                                        'any))))
                                  g$t$30737$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30737$1VmeqK
                              '(any any any)))))
                        g$spec$30736$1VmeqK))))
                  (g$get-record-constructor-name$30495$1VmeqK
                    (case-lambda
                      ((g$spec$30726$1VmeqK)
                       ((case-lambda
                          ((g$t$30727$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30728$1VmeqK)
                               (if g$ls/false$30728$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$foo$30729$1VmeqK
                                        g$make-foo$30730$1VmeqK
                                        g$foo?$30731$1VmeqK)
                                      g$make-foo$30730$1VmeqK))
                                   g$ls/false$30728$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30732$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30733$1VmeqK)
                                         (if (if g$ls/false$30733$1VmeqK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30734$1VmeqK)
                                                      (g$id?$28724$1VmeqK
                                                        g$foo$30734$1VmeqK)))
                                                   g$ls/false$30733$1VmeqK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30735$1VmeqK)
                                                (g$id$30493$1VmeqK
                                                  g$foo$30735$1VmeqK
                                                  '"make-"
                                                  (g$stx->datum$28735$1VmeqK
                                                    g$foo$30735$1VmeqK))))
                                             g$ls/false$30733$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30732$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30732$1VmeqK
                                        'any))))
                                  g$t$30727$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30727$1VmeqK
                              '(any any any)))))
                        g$spec$30726$1VmeqK))))
                  (g$get-record-predicate-name$30496$1VmeqK
                    (case-lambda
                      ((g$spec$30716$1VmeqK)
                       ((case-lambda
                          ((g$t$30717$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30718$1VmeqK)
                               (if g$ls/false$30718$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$foo$30719$1VmeqK
                                        g$make-foo$30720$1VmeqK
                                        g$foo?$30721$1VmeqK)
                                      g$foo?$30721$1VmeqK))
                                   g$ls/false$30718$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30722$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30723$1VmeqK)
                                         (if (if g$ls/false$30723$1VmeqK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30724$1VmeqK)
                                                      (g$id?$28724$1VmeqK
                                                        g$foo$30724$1VmeqK)))
                                                   g$ls/false$30723$1VmeqK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30725$1VmeqK)
                                                (g$id$30493$1VmeqK
                                                  g$foo$30725$1VmeqK
                                                  (g$stx->datum$28735$1VmeqK
                                                    g$foo$30725$1VmeqK)
                                                  '"?")))
                                             g$ls/false$30723$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30722$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30722$1VmeqK
                                        'any))))
                                  g$t$30717$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30717$1VmeqK
                              '(any any any)))))
                        g$spec$30716$1VmeqK))))
                  (g$get-clause$30497$1VmeqK
                    (case-lambda
                      ((g$id$30707$1VmeqK g$ls$30708$1VmeqK)
                       ((case-lambda
                          ((g$t$30709$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30710$1VmeqK)
                               (if g$ls/false$30710$1VmeqK
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$30710$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30711$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30712$1VmeqK)
                                         (if g$ls/false$30712$1VmeqK
                                           (apply
                                             (case-lambda
                                               ((g$x$30713$1VmeqK
                                                  g$rest$30714$1VmeqK
                                                  g$ls$30715$1VmeqK)
                                                (if (g$free-id=?$28728$1VmeqK
                                                      (g$bless$29185$1VmeqK
                                                        g$id$30707$1VmeqK)
                                                      g$x$30713$1VmeqK)
                                                  (cons
                                                    g$x$30713$1VmeqK
                                                    g$rest$30714$1VmeqK)
                                                  (g$get-clause$30497$1VmeqK
                                                    g$id$30707$1VmeqK
                                                    g$ls$30715$1VmeqK))))
                                             g$ls/false$30712$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30711$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30711$1VmeqK
                                        '((any . any) . any)))))
                                  g$t$30709$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30709$1VmeqK
                              '()))))
                        g$ls$30708$1VmeqK))))
                  (g$foo-rtd-code$30498$1VmeqK
                    (case-lambda
                      ((g$name$30666$1VmeqK
                         g$clause*$30667$1VmeqK
                         g$parent-rtd-code$30668$1VmeqK)
                       (letrec* ((g$convert-field-spec*$30669$1VmeqK
                                   (case-lambda
                                     ((g$ls$30694$1VmeqK)
                                      (g$list->vector$21192$1VmeqK
                                        (g$map$20349$1VmeqK
                                          (case-lambda
                                            ((g$x$30695$1VmeqK)
                                             ((case-lambda
                                                ((g$t$30696$1VmeqK)
                                                 ((case-lambda
                                                    ((g$ls/false$30697$1VmeqK)
                                                     (if g$ls/false$30697$1VmeqK
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$30698$1VmeqK
                                                              g$rest$30699$1VmeqK)
                                                            (list
                                                              'mutable
                                                              g$name$30698$1VmeqK)))
                                                         g$ls/false$30697$1VmeqK)
                                                       ((case-lambda
                                                          ((g$t$30700$1VmeqK)
                                                           ((case-lambda
                                                              ((g$ls/false$30701$1VmeqK)
                                                               (if g$ls/false$30701$1VmeqK
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$30702$1VmeqK
                                                                        g$rest$30703$1VmeqK)
                                                                      (list
                                                                        'immutable
                                                                        g$name$30702$1VmeqK)))
                                                                   g$ls/false$30701$1VmeqK)
                                                                 ((case-lambda
                                                                    ((g$t$30704$1VmeqK)
                                                                     ((case-lambda
                                                                        ((g$ls/false$30705$1VmeqK)
                                                                         (if g$ls/false$30705$1VmeqK
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$30706$1VmeqK)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$30706$1VmeqK)))
                                                                             g$ls/false$30705$1VmeqK)
                                                                           (g$syntax-violation$29341$1VmeqK
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$30704$1VmeqK))))
                                                                      (g$syntax-dispatch$29222$1VmeqK
                                                                        g$t$30704$1VmeqK
                                                                        'any))))
                                                                  g$t$30700$1VmeqK))))
                                                            (g$syntax-dispatch$29222$1VmeqK
                                                              g$t$30700$1VmeqK
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$30696$1VmeqK))))
                                                  (g$syntax-dispatch$29222$1VmeqK
                                                    g$t$30696$1VmeqK
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$30695$1VmeqK)))
                                          g$ls$30694$1VmeqK))))))
                         ((case-lambda
                            ((g$uid-code$30670$1VmeqK
                               g$sealed?$30671$1VmeqK
                               g$opaque?$30672$1VmeqK
                               g$fields$30673$1VmeqK)
                             (g$bless$29185$1VmeqK
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$30666$1VmeqK)
                                 g$parent-rtd-code$30668$1VmeqK
                                 g$uid-code$30670$1VmeqK
                                 g$sealed?$30671$1VmeqK
                                 g$opaque?$30672$1VmeqK
                                 g$fields$30673$1VmeqK))))
                          ((case-lambda
                             ((g$t$30674$1VmeqK)
                              ((case-lambda
                                 ((g$ls/false$30675$1VmeqK)
                                  (if g$ls/false$30675$1VmeqK
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$30675$1VmeqK)
                                    ((case-lambda
                                       ((g$t$30676$1VmeqK)
                                        ((case-lambda
                                           ((g$ls/false$30677$1VmeqK)
                                            (if g$ls/false$30677$1VmeqK
                                              (apply
                                                (case-lambda
                                                  ((g$uid$30678$1VmeqK)
                                                   (list
                                                     'quote
                                                     g$uid$30678$1VmeqK)))
                                                g$ls/false$30677$1VmeqK)
                                              ((case-lambda
                                                 ((g$t$30679$1VmeqK)
                                                  ((case-lambda
                                                     ((g$ls/false$30680$1VmeqK)
                                                      (if g$ls/false$30680$1VmeqK
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$30680$1VmeqK)
                                                        (g$syntax-violation$29341$1VmeqK
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$30679$1VmeqK))))
                                                   (g$syntax-dispatch$29222$1VmeqK
                                                     g$t$30679$1VmeqK
                                                     '_))))
                                               g$t$30676$1VmeqK))))
                                         (g$syntax-dispatch$29222$1VmeqK
                                           g$t$30676$1VmeqK
                                           '(_ any)))))
                                     g$t$30674$1VmeqK))))
                               (g$syntax-dispatch$29222$1VmeqK
                                 g$t$30674$1VmeqK
                                 '(_)))))
                           (g$get-clause$30497$1VmeqK
                             'nongenerative
                             g$clause*$30667$1VmeqK))
                          ((case-lambda
                             ((g$t$30681$1VmeqK)
                              ((case-lambda
                                 ((g$ls/false$30682$1VmeqK)
                                  (if g$ls/false$30682$1VmeqK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30682$1VmeqK)
                                    ((case-lambda
                                       ((g$t$30683$1VmeqK)
                                        ((case-lambda
                                           ((g$ls/false$30684$1VmeqK)
                                            (if g$ls/false$30684$1VmeqK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30684$1VmeqK)
                                              (g$syntax-violation$29341$1VmeqK
                                                '#f
                                                '"invalid syntax"
                                                g$t$30683$1VmeqK))))
                                         (g$syntax-dispatch$29222$1VmeqK
                                           g$t$30683$1VmeqK
                                           '_))))
                                     g$t$30681$1VmeqK))))
                               (g$syntax-dispatch$29222$1VmeqK
                                 g$t$30681$1VmeqK
                                 '(_ #(atom #t))))))
                           (g$get-clause$30497$1VmeqK
                             'sealed
                             g$clause*$30667$1VmeqK))
                          ((case-lambda
                             ((g$t$30685$1VmeqK)
                              ((case-lambda
                                 ((g$ls/false$30686$1VmeqK)
                                  (if g$ls/false$30686$1VmeqK
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30686$1VmeqK)
                                    ((case-lambda
                                       ((g$t$30687$1VmeqK)
                                        ((case-lambda
                                           ((g$ls/false$30688$1VmeqK)
                                            (if g$ls/false$30688$1VmeqK
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30688$1VmeqK)
                                              (g$syntax-violation$29341$1VmeqK
                                                '#f
                                                '"invalid syntax"
                                                g$t$30687$1VmeqK))))
                                         (g$syntax-dispatch$29222$1VmeqK
                                           g$t$30687$1VmeqK
                                           '_))))
                                     g$t$30685$1VmeqK))))
                               (g$syntax-dispatch$29222$1VmeqK
                                 g$t$30685$1VmeqK
                                 '(_ #(atom #t))))))
                           (g$get-clause$30497$1VmeqK
                             'opaque
                             g$clause*$30667$1VmeqK))
                          ((case-lambda
                             ((g$t$30689$1VmeqK)
                              ((case-lambda
                                 ((g$ls/false$30690$1VmeqK)
                                  (if g$ls/false$30690$1VmeqK
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$30691$1VmeqK)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$30669$1VmeqK
                                             g$field-spec*$30691$1VmeqK))))
                                      g$ls/false$30690$1VmeqK)
                                    ((case-lambda
                                       ((g$t$30692$1VmeqK)
                                        ((case-lambda
                                           ((g$ls/false$30693$1VmeqK)
                                            (if g$ls/false$30693$1VmeqK
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$30693$1VmeqK)
                                              (g$syntax-violation$29341$1VmeqK
                                                '#f
                                                '"invalid syntax"
                                                g$t$30692$1VmeqK))))
                                         (g$syntax-dispatch$29222$1VmeqK
                                           g$t$30692$1VmeqK
                                           '_))))
                                     g$t$30689$1VmeqK))))
                               (g$syntax-dispatch$29222$1VmeqK
                                 g$t$30689$1VmeqK
                                 '(_ . each-any)))))
                           (g$get-clause$30497$1VmeqK
                             'fields
                             g$clause*$30667$1VmeqK)))))))
                  (g$parent-rtd-code$30499$1VmeqK
                    (case-lambda
                      ((g$clause*$30654$1VmeqK)
                       ((case-lambda
                          ((g$t$30655$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30656$1VmeqK)
                               (if g$ls/false$30656$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$name$30657$1VmeqK)
                                      (list
                                        'record-type-descriptor
                                        g$name$30657$1VmeqK)))
                                   g$ls/false$30656$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30658$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30659$1VmeqK)
                                         (if g$ls/false$30659$1VmeqK
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30660$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$30661$1VmeqK)
                                                        (if g$ls/false$30661$1VmeqK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30662$1VmeqK
                                                                 g$rcd$30663$1VmeqK)
                                                               g$rtd$30662$1VmeqK))
                                                            g$ls/false$30661$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$30664$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$30665$1VmeqK)
                                                                  (if g$ls/false$30665$1VmeqK
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30665$1VmeqK)
                                                                    (g$syntax-violation$29341$1VmeqK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30664$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$30664$1VmeqK
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30660$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$30660$1VmeqK
                                                       '(_ any any)))))
                                                 (g$get-clause$30497$1VmeqK
                                                   'parent-rtd
                                                   g$clause*$30654$1VmeqK))))
                                             g$ls/false$30659$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30658$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30658$1VmeqK
                                        '#(atom #f)))))
                                  g$t$30655$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30655$1VmeqK
                              '(_ any)))))
                        (g$get-clause$30497$1VmeqK
                          'parent
                          g$clause*$30654$1VmeqK)))))
                  (g$parent-rcd-code$30500$1VmeqK
                    (case-lambda
                      ((g$clause*$30642$1VmeqK)
                       ((case-lambda
                          ((g$t$30643$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30644$1VmeqK)
                               (if g$ls/false$30644$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$name$30645$1VmeqK)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$30645$1VmeqK)))
                                   g$ls/false$30644$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30646$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30647$1VmeqK)
                                         (if g$ls/false$30647$1VmeqK
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30648$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$30649$1VmeqK)
                                                        (if g$ls/false$30649$1VmeqK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30650$1VmeqK
                                                                 g$rcd$30651$1VmeqK)
                                                               g$rcd$30651$1VmeqK))
                                                            g$ls/false$30649$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$30652$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$30653$1VmeqK)
                                                                  (if g$ls/false$30653$1VmeqK
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30653$1VmeqK)
                                                                    (g$syntax-violation$29341$1VmeqK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30652$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$30652$1VmeqK
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30648$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$30648$1VmeqK
                                                       '(_ any any)))))
                                                 (g$get-clause$30497$1VmeqK
                                                   'parent-rtd
                                                   g$clause*$30642$1VmeqK))))
                                             g$ls/false$30647$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30646$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30646$1VmeqK
                                        '#(atom #f)))))
                                  g$t$30643$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30643$1VmeqK
                              '(_ any)))))
                        (g$get-clause$30497$1VmeqK
                          'parent
                          g$clause*$30642$1VmeqK)))))
                  (g$foo-rcd-code$30501$1VmeqK
                    (case-lambda
                      ((g$clause*$30638$1VmeqK
                         g$foo-rtd$30639$1VmeqK
                         g$protocol$30640$1VmeqK
                         g$parent-rcd-code$30641$1VmeqK)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$30639$1VmeqK
                         g$parent-rcd-code$30641$1VmeqK
                         g$protocol$30640$1VmeqK))))
                  (g$get-protocol-code$30502$1VmeqK
                    (case-lambda
                      ((g$clause*$30632$1VmeqK)
                       ((case-lambda
                          ((g$t$30633$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30634$1VmeqK)
                               (if g$ls/false$30634$1VmeqK
                                 (apply
                                   (case-lambda
                                     ((g$expr$30635$1VmeqK)
                                      g$expr$30635$1VmeqK))
                                   g$ls/false$30634$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30636$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30637$1VmeqK)
                                         (if g$ls/false$30637$1VmeqK
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$30637$1VmeqK)
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$t$30636$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30636$1VmeqK
                                        '_))))
                                  g$t$30633$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30633$1VmeqK
                              '(_ any)))))
                        (g$get-clause$30497$1VmeqK
                          'protocol
                          g$clause*$30632$1VmeqK)))))
                  (g$get-fields$30503$1VmeqK
                    (case-lambda
                      ((g$clause*$30623$1VmeqK)
                       ((case-lambda
                          ((g$t$30624$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30625$1VmeqK)
                               (if g$ls/false$30625$1VmeqK
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$30625$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30626$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30627$1VmeqK)
                                         (if g$ls/false$30627$1VmeqK
                                           (apply
                                             (case-lambda
                                               ((g$f*$30628$1VmeqK)
                                                g$f*$30628$1VmeqK))
                                             g$ls/false$30627$1VmeqK)
                                           ((case-lambda
                                              ((g$t$30629$1VmeqK)
                                               ((case-lambda
                                                  ((g$ls/false$30630$1VmeqK)
                                                   (if g$ls/false$30630$1VmeqK
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$30631$1VmeqK)
                                                          (g$get-fields$30503$1VmeqK
                                                            g$rest$30631$1VmeqK)))
                                                       g$ls/false$30630$1VmeqK)
                                                     (g$syntax-violation$29341$1VmeqK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30629$1VmeqK))))
                                                (g$syntax-dispatch$29222$1VmeqK
                                                  g$t$30629$1VmeqK
                                                  '(_ . any)))))
                                            g$t$30626$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30626$1VmeqK
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$30624$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30624$1VmeqK
                              '()))))
                        g$clause*$30623$1VmeqK))))
                  (g$get-mutator-indices$30504$1VmeqK
                    (case-lambda
                      ((g$fields$30611$1VmeqK)
                       ((letrec ((g$f$30612$1VmeqK
                                   (case-lambda
                                     ((g$fields$30613$1VmeqK
                                        g$i$30614$1VmeqK)
                                      ((case-lambda
                                         ((g$t$30615$1VmeqK)
                                          ((case-lambda
                                             ((g$ls/false$30616$1VmeqK)
                                              (if g$ls/false$30616$1VmeqK
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$30616$1VmeqK)
                                                ((case-lambda
                                                   ((g$t$30617$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$30618$1VmeqK)
                                                        (if g$ls/false$30618$1VmeqK
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$30619$1VmeqK)
                                                               (cons
                                                                 g$i$30614$1VmeqK
                                                                 (g$f$30612$1VmeqK
                                                                   g$rest$30619$1VmeqK
                                                                   (+ g$i$30614$1VmeqK
                                                                      '1)))))
                                                            g$ls/false$30618$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$30620$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$30621$1VmeqK)
                                                                  (if g$ls/false$30621$1VmeqK
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$30622$1VmeqK)
                                                                         (g$f$30612$1VmeqK
                                                                           g$rest$30622$1VmeqK
                                                                           (+ g$i$30614$1VmeqK
                                                                              '1))))
                                                                      g$ls/false$30621$1VmeqK)
                                                                    (g$syntax-violation$29341$1VmeqK
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30620$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$30620$1VmeqK
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$30617$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$30617$1VmeqK
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$30615$1VmeqK))))
                                           (g$syntax-dispatch$29222$1VmeqK
                                             g$t$30615$1VmeqK
                                             '()))))
                                       g$fields$30613$1VmeqK)))))
                          g$f$30612$1VmeqK)
                        g$fields$30611$1VmeqK
                        '0))))
                  (g$get-mutators$30505$1VmeqK
                    (case-lambda
                      ((g$foo$30590$1VmeqK g$fields$30591$1VmeqK)
                       (letrec* ((g$gen-name$30592$1VmeqK
                                   (case-lambda
                                     ((g$x$30610$1VmeqK)
                                      (g$datum->syntax$29343$1VmeqK
                                        g$foo$30590$1VmeqK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$29344$1VmeqK
                                                g$foo$30590$1VmeqK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$29344$1VmeqK
                                                g$x$30610$1VmeqK))
                                            '"-set!")))))))
                         ((letrec ((g$f$30593$1VmeqK
                                     (case-lambda
                                       ((g$fields$30594$1VmeqK)
                                        ((case-lambda
                                           ((g$t$30595$1VmeqK)
                                            ((case-lambda
                                               ((g$ls/false$30596$1VmeqK)
                                                (if g$ls/false$30596$1VmeqK
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$30596$1VmeqK)
                                                  ((case-lambda
                                                     ((g$t$30597$1VmeqK)
                                                      ((case-lambda
                                                         ((g$ls/false$30598$1VmeqK)
                                                          (if g$ls/false$30598$1VmeqK
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30599$1VmeqK
                                                                   g$accessor$30600$1VmeqK
                                                                   g$mutator$30601$1VmeqK
                                                                   g$rest$30602$1VmeqK)
                                                                 (cons
                                                                   g$mutator$30601$1VmeqK
                                                                   (g$f$30593$1VmeqK
                                                                     g$rest$30602$1VmeqK))))
                                                              g$ls/false$30598$1VmeqK)
                                                            ((case-lambda
                                                               ((g$t$30603$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$ls/false$30604$1VmeqK)
                                                                    (if g$ls/false$30604$1VmeqK
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30605$1VmeqK
                                                                             g$rest$30606$1VmeqK)
                                                                           (cons
                                                                             (g$gen-name$30592$1VmeqK
                                                                               g$name$30605$1VmeqK)
                                                                             (g$f$30593$1VmeqK
                                                                               g$rest$30606$1VmeqK))))
                                                                        g$ls/false$30604$1VmeqK)
                                                                      ((case-lambda
                                                                         ((g$t$30607$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30608$1VmeqK)
                                                                              (if g$ls/false$30608$1VmeqK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$30609$1VmeqK)
                                                                                     (g$f$30593$1VmeqK
                                                                                       g$rest$30609$1VmeqK)))
                                                                                  g$ls/false$30608$1VmeqK)
                                                                                (g$syntax-violation$29341$1VmeqK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$30607$1VmeqK))))
                                                                           (g$syntax-dispatch$29222$1VmeqK
                                                                             g$t$30607$1VmeqK
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$30603$1VmeqK))))
                                                                 (g$syntax-dispatch$29222$1VmeqK
                                                                   g$t$30603$1VmeqK
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$30597$1VmeqK))))
                                                       (g$syntax-dispatch$29222$1VmeqK
                                                         g$t$30597$1VmeqK
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$30595$1VmeqK))))
                                             (g$syntax-dispatch$29222$1VmeqK
                                               g$t$30595$1VmeqK
                                               '()))))
                                         g$fields$30594$1VmeqK)))))
                            g$f$30593$1VmeqK)
                          g$fields$30591$1VmeqK)))))
                  (g$get-accessors$30506$1VmeqK
                    (case-lambda
                      ((g$foo$30556$1VmeqK g$fields$30557$1VmeqK)
                       (letrec* ((g$gen-name$30558$1VmeqK
                                   (case-lambda
                                     ((g$x$30589$1VmeqK)
                                      (g$datum->syntax$29343$1VmeqK
                                        g$foo$30556$1VmeqK
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$29344$1VmeqK
                                                g$foo$30556$1VmeqK))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$29344$1VmeqK
                                                g$x$30589$1VmeqK)))))))))
                         (g$map$20349$1VmeqK
                           (case-lambda
                             ((g$field$30559$1VmeqK)
                              ((case-lambda
                                 ((g$t$30560$1VmeqK)
                                  ((case-lambda
                                     ((g$ls/false$30561$1VmeqK)
                                      (if (if g$ls/false$30561$1VmeqK
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$30562$1VmeqK
                                                     g$accessor$30563$1VmeqK
                                                     g$mutator$30564$1VmeqK)
                                                   (g$id?$28724$1VmeqK
                                                     g$accessor$30563$1VmeqK)))
                                                g$ls/false$30561$1VmeqK))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$30565$1VmeqK
                                               g$accessor$30566$1VmeqK
                                               g$mutator$30567$1VmeqK)
                                             g$accessor$30566$1VmeqK))
                                          g$ls/false$30561$1VmeqK)
                                        ((case-lambda
                                           ((g$t$30568$1VmeqK)
                                            ((case-lambda
                                               ((g$ls/false$30569$1VmeqK)
                                                (if (if g$ls/false$30569$1VmeqK
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$30570$1VmeqK
                                                               g$accessor$30571$1VmeqK)
                                                             (g$id?$28724$1VmeqK
                                                               g$accessor$30571$1VmeqK)))
                                                          g$ls/false$30569$1VmeqK))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$30572$1VmeqK
                                                         g$accessor$30573$1VmeqK)
                                                       g$accessor$30573$1VmeqK))
                                                    g$ls/false$30569$1VmeqK)
                                                  ((case-lambda
                                                     ((g$t$30574$1VmeqK)
                                                      ((case-lambda
                                                         ((g$ls/false$30575$1VmeqK)
                                                          (if (if g$ls/false$30575$1VmeqK
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$30576$1VmeqK)
                                                                       (g$id?$28724$1VmeqK
                                                                         g$name$30576$1VmeqK)))
                                                                    g$ls/false$30575$1VmeqK))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30577$1VmeqK)
                                                                 (g$gen-name$30558$1VmeqK
                                                                   g$name$30577$1VmeqK)))
                                                              g$ls/false$30575$1VmeqK)
                                                            ((case-lambda
                                                               ((g$t$30578$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$ls/false$30579$1VmeqK)
                                                                    (if (if g$ls/false$30579$1VmeqK
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$30580$1VmeqK)
                                                                                 (g$id?$28724$1VmeqK
                                                                                   g$name$30580$1VmeqK)))
                                                                              g$ls/false$30579$1VmeqK))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30581$1VmeqK)
                                                                           (g$gen-name$30558$1VmeqK
                                                                             g$name$30581$1VmeqK)))
                                                                        g$ls/false$30579$1VmeqK)
                                                                      ((case-lambda
                                                                         ((g$t$30582$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30583$1VmeqK)
                                                                              (if (if g$ls/false$30583$1VmeqK
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$30584$1VmeqK)
                                                                                           (g$id?$28724$1VmeqK
                                                                                             g$name$30584$1VmeqK)))
                                                                                        g$ls/false$30583$1VmeqK))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$30585$1VmeqK)
                                                                                     (g$gen-name$30558$1VmeqK
                                                                                       g$name$30585$1VmeqK)))
                                                                                  g$ls/false$30583$1VmeqK)
                                                                                ((case-lambda
                                                                                   ((g$t$30586$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$30587$1VmeqK)
                                                                                        (if g$ls/false$30587$1VmeqK
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$30588$1VmeqK)
                                                                                               (g$syntax-violation$29341$1VmeqK
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$30559$1VmeqK)))
                                                                                            g$ls/false$30587$1VmeqK)
                                                                                          (g$syntax-violation$29341$1VmeqK
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$30586$1VmeqK))))
                                                                                     (g$syntax-dispatch$29222$1VmeqK
                                                                                       g$t$30586$1VmeqK
                                                                                       'any))))
                                                                                 g$t$30582$1VmeqK))))
                                                                           (g$syntax-dispatch$29222$1VmeqK
                                                                             g$t$30582$1VmeqK
                                                                             'any))))
                                                                       g$t$30578$1VmeqK))))
                                                                 (g$syntax-dispatch$29222$1VmeqK
                                                                   g$t$30578$1VmeqK
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$30574$1VmeqK))))
                                                       (g$syntax-dispatch$29222$1VmeqK
                                                         g$t$30574$1VmeqK
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$30568$1VmeqK))))
                                             (g$syntax-dispatch$29222$1VmeqK
                                               g$t$30568$1VmeqK
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$30560$1VmeqK))))
                                   (g$syntax-dispatch$29222$1VmeqK
                                     g$t$30560$1VmeqK
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$30559$1VmeqK)))
                           g$fields$30557$1VmeqK)))))
                  (g$enumerate$30507$1VmeqK
                    (case-lambda
                      ((g$ls$30552$1VmeqK)
                       ((letrec ((g$f$30553$1VmeqK
                                   (case-lambda
                                     ((g$ls$30554$1VmeqK
                                        g$i$30555$1VmeqK)
                                      (if (null? g$ls$30554$1VmeqK)
                                        '()
                                        (begin
                                          '#f
                                          (cons
                                            g$i$30555$1VmeqK
                                            (g$f$30553$1VmeqK
                                              (cdr g$ls$30554$1VmeqK)
                                              (+ g$i$30555$1VmeqK
                                                 '1)))))))))
                          g$f$30553$1VmeqK)
                        g$ls$30552$1VmeqK
                        '0))))
                  (g$do-define-record$30508$1VmeqK
                    (case-lambda
                      ((g$namespec$30532$1VmeqK g$clause*$30533$1VmeqK)
                       ((case-lambda
                          ((g$foo$30534$1VmeqK)
                           ((case-lambda
                              ((g$foo-rtd$30535$1VmeqK)
                               ((case-lambda
                                  ((g$foo-rcd$30536$1VmeqK)
                                   ((case-lambda
                                      ((g$protocol$30537$1VmeqK)
                                       ((case-lambda
                                          ((g$make-foo$30538$1VmeqK)
                                           ((case-lambda
                                              ((g$fields$30539$1VmeqK)
                                               ((case-lambda
                                                  ((g$idx*$30540$1VmeqK)
                                                   ((case-lambda
                                                      ((g$foo-x*$30541$1VmeqK)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$30542$1VmeqK)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$30543$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$foo?$30544$1VmeqK)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$30545$1VmeqK)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$30546$1VmeqK)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$30547$1VmeqK)
                                                                               (g$bless$29185$1VmeqK
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$30535$1VmeqK
                                                                                       g$foo-rtd-code$30545$1VmeqK)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$30537$1VmeqK
                                                                                         g$protocol-code$30547$1VmeqK)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$30536$1VmeqK
                                                                                           g$foo-rcd-code$30546$1VmeqK)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$30534$1VmeqK
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$30535$1VmeqK)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$30536$1VmeqK)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$30544$1VmeqK
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$30535$1VmeqK))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$30538$1VmeqK
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$30536$1VmeqK))
                                                                                               (append
                                                                                                 (g$map$20349$1VmeqK
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$30548$1VmeqK
                                                                                                        g$idx$30549$1VmeqK)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$30548$1VmeqK
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$30535$1VmeqK
                                                                                                          g$idx$30549$1VmeqK))))
                                                                                                   g$foo-x*$30541$1VmeqK
                                                                                                   g$idx*$30540$1VmeqK)
                                                                                                 (g$map$20349$1VmeqK
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$30550$1VmeqK
                                                                                                        g$idx$30551$1VmeqK)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$30550$1VmeqK
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$30535$1VmeqK
                                                                                                          g$idx$30551$1VmeqK))))
                                                                                                   g$set-foo-x!*$30542$1VmeqK
                                                                                                   g$set-foo-idx*$30543$1VmeqK))))))))))))
                                                                            (g$get-protocol-code$30502$1VmeqK
                                                                              g$clause*$30533$1VmeqK))))
                                                                        (g$foo-rcd-code$30501$1VmeqK
                                                                          g$clause*$30533$1VmeqK
                                                                          g$foo-rtd$30535$1VmeqK
                                                                          g$protocol$30537$1VmeqK
                                                                          (g$parent-rcd-code$30500$1VmeqK
                                                                            g$clause*$30533$1VmeqK)))))
                                                                    (g$foo-rtd-code$30498$1VmeqK
                                                                      g$foo$30534$1VmeqK
                                                                      g$clause*$30533$1VmeqK
                                                                      (g$parent-rtd-code$30499$1VmeqK
                                                                        g$clause*$30533$1VmeqK)))))
                                                                (g$get-record-predicate-name$30496$1VmeqK
                                                                  g$namespec$30532$1VmeqK))))
                                                            (g$get-mutator-indices$30504$1VmeqK
                                                              g$fields$30539$1VmeqK))))
                                                        (g$get-mutators$30505$1VmeqK
                                                          g$foo$30534$1VmeqK
                                                          g$fields$30539$1VmeqK))))
                                                    (g$get-accessors$30506$1VmeqK
                                                      g$foo$30534$1VmeqK
                                                      g$fields$30539$1VmeqK))))
                                                (g$enumerate$30507$1VmeqK
                                                  g$fields$30539$1VmeqK))))
                                            (g$get-fields$30503$1VmeqK
                                              g$clause*$30533$1VmeqK))))
                                        (g$get-record-constructor-name$30495$1VmeqK
                                          g$namespec$30532$1VmeqK))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$30494$1VmeqK
                          g$namespec$30532$1VmeqK)))))
                  (g$verify-clauses$30509$1VmeqK
                    (case-lambda
                      ((g$x$30514$1VmeqK g$cls*$30515$1VmeqK)
                       (letrec* ((g$valid-kwds$30516$1VmeqK
                                   (g$map$20349$1VmeqK
                                     g$bless$29185$1VmeqK
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$30517$1VmeqK
                                   (case-lambda
                                     ((g$x$30529$1VmeqK
                                        g$ls$30530$1VmeqK)
                                      (if (pair? g$ls$30530$1VmeqK)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$30531$1VmeqK)
                                              (if g$t$30531$1VmeqK
                                                g$t$30531$1VmeqK
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$30517$1VmeqK
                                                    g$x$30529$1VmeqK
                                                    (cdr g$ls$30530$1VmeqK))))))
                                           (g$free-id=?$28728$1VmeqK
                                             g$x$30529$1VmeqK
                                             (car g$ls$30530$1VmeqK))))
                                        '#f)))))
                         ((letrec ((g$f$30518$1VmeqK
                                     (case-lambda
                                       ((g$cls*$30519$1VmeqK
                                          g$seen*$30520$1VmeqK)
                                        (if (not (null?
                                                   g$cls*$30519$1VmeqK))
                                          ((case-lambda
                                             ((g$t$30521$1VmeqK)
                                              ((case-lambda
                                                 ((g$ls/false$30522$1VmeqK)
                                                  (if g$ls/false$30522$1VmeqK
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$30523$1VmeqK
                                                           g$rest$30524$1VmeqK)
                                                         (if ((case-lambda
                                                                ((g$t$30525$1VmeqK)
                                                                 (if g$t$30525$1VmeqK
                                                                   g$t$30525$1VmeqK
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$30517$1VmeqK
                                                                            g$kwd$30523$1VmeqK
                                                                            g$valid-kwds$30516$1VmeqK))))))
                                                              (not (g$id?$28724$1VmeqK
                                                                     g$kwd$30523$1VmeqK)))
                                                           (g$syntax-violation$29341$1VmeqK
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$30523$1VmeqK)
                                                           (if (g$bound-id-member?$28731$1VmeqK
                                                                 g$kwd$30523$1VmeqK
                                                                 g$seen*$30520$1VmeqK)
                                                             (g$syntax-violation$29341$1VmeqK
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$30514$1VmeqK
                                                               g$kwd$30523$1VmeqK)
                                                             (begin
                                                               '#f
                                                               (g$f$30518$1VmeqK
                                                                 (cdr g$cls*$30519$1VmeqK)
                                                                 (cons
                                                                   g$kwd$30523$1VmeqK
                                                                   g$seen*$30520$1VmeqK)))))))
                                                      g$ls/false$30522$1VmeqK)
                                                    ((case-lambda
                                                       ((g$t$30526$1VmeqK)
                                                        ((case-lambda
                                                           ((g$ls/false$30527$1VmeqK)
                                                            (if g$ls/false$30527$1VmeqK
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$30528$1VmeqK)
                                                                   (g$syntax-violation$29341$1VmeqK
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$30528$1VmeqK)))
                                                                g$ls/false$30527$1VmeqK)
                                                              (g$syntax-violation$29341$1VmeqK
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30526$1VmeqK))))
                                                         (g$syntax-dispatch$29222$1VmeqK
                                                           g$t$30526$1VmeqK
                                                           'any))))
                                                     g$t$30521$1VmeqK))))
                                               (g$syntax-dispatch$29222$1VmeqK
                                                 g$t$30521$1VmeqK
                                                 '(any . any)))))
                                           (car g$cls*$30519$1VmeqK))
                                          (void))))))
                            g$f$30518$1VmeqK)
                          g$cls*$30515$1VmeqK
                          '()))))))
          ((case-lambda
             ((g$t$30510$1VmeqK)
              ((case-lambda
                 ((g$ls/false$30511$1VmeqK)
                  (if g$ls/false$30511$1VmeqK
                    (apply
                      (case-lambda
                        ((g$namespec$30512$1VmeqK
                           g$clause*$30513$1VmeqK)
                         (begin
                           (g$verify-clauses$30509$1VmeqK
                             g$x$30492$1VmeqK
                             g$clause*$30513$1VmeqK)
                           (g$do-define-record$30508$1VmeqK
                             g$namespec$30512$1VmeqK
                             g$clause*$30513$1VmeqK))))
                      g$ls/false$30511$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$30510$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$30510$1VmeqK
                 '(_ any . each-any)))))
           g$x$30492$1VmeqK)))))
   (g$define-condition-type-macro$29217$1VmeqK
     g$define-condition-type-macro$32812$1VmeqK
     (case-lambda
       ((g$x$30748$1VmeqK)
        (letrec* ((g$mkname$30749$1VmeqK
                    (case-lambda
                      ((g$name$30772$1VmeqK g$suffix$30773$1VmeqK)
                       (g$datum->syntax$29343$1VmeqK
                         g$name$30772$1VmeqK
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$29344$1VmeqK
                                 g$name$30772$1VmeqK))
                             g$suffix$30773$1VmeqK)))))))
          ((case-lambda
             ((g$t$30750$1VmeqK)
              ((case-lambda
                 ((g$ls/false$30751$1VmeqK)
                  (if (if g$ls/false$30751$1VmeqK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$30752$1VmeqK
                                 g$name$30753$1VmeqK
                                 g$super$30754$1VmeqK
                                 g$constructor$30755$1VmeqK
                                 g$predicate$30756$1VmeqK
                                 g$field*$30757$1VmeqK
                                 g$accessor*$30758$1VmeqK)
                               (if (g$id?$28724$1VmeqK
                                     g$name$30753$1VmeqK)
                                 (if (g$id?$28724$1VmeqK
                                       g$super$30754$1VmeqK)
                                   (if (g$id?$28724$1VmeqK
                                         g$constructor$30755$1VmeqK)
                                     (if (g$id?$28724$1VmeqK
                                           g$predicate$30756$1VmeqK)
                                       (if (g$for-all$20347$1VmeqK
                                             g$id?$28724$1VmeqK
                                             g$field*$30757$1VmeqK)
                                         (begin
                                           '#f
                                           (g$for-all$20347$1VmeqK
                                             g$id?$28724$1VmeqK
                                             g$accessor*$30758$1VmeqK))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$30751$1VmeqK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$30759$1VmeqK
                           g$name$30760$1VmeqK
                           g$super$30761$1VmeqK
                           g$constructor$30762$1VmeqK
                           g$predicate$30763$1VmeqK
                           g$field*$30764$1VmeqK
                           g$accessor*$30765$1VmeqK)
                         ((case-lambda
                            ((g$aux-accessor*$30766$1VmeqK)
                             (g$bless$29185$1VmeqK
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$30760$1VmeqK
                                         g$constructor$30762$1VmeqK
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$30761$1VmeqK)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$20349$1VmeqK
                                               (case-lambda
                                                 ((g$field$30767$1VmeqK
                                                    g$aux$30768$1VmeqK)
                                                  (list
                                                    'immutable
                                                    g$field$30767$1VmeqK
                                                    g$aux$30768$1VmeqK)))
                                               g$field*$30764$1VmeqK
                                               g$aux-accessor*$30766$1VmeqK))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$30763$1VmeqK
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$30760$1VmeqK)))
                                     (g$map$20349$1VmeqK
                                       (case-lambda
                                         ((g$accessor$30769$1VmeqK
                                            g$aux$30770$1VmeqK)
                                          (list
                                            'define
                                            g$accessor$30769$1VmeqK
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$30760$1VmeqK)
                                              g$aux$30770$1VmeqK))))
                                       g$accessor*$30765$1VmeqK
                                       g$aux-accessor*$30766$1VmeqK)))))))
                          (g$map$20349$1VmeqK
                            (case-lambda ((g$x$30771$1VmeqK) (gensym)))
                            g$accessor*$30765$1VmeqK))))
                      g$ls/false$30751$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$30750$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$30750$1VmeqK
                 '(any any any any any . #(each (any any)))))))
           g$x$30748$1VmeqK)))))
   (g$incorrect-usage-macro$29218$1VmeqK
     g$incorrect-usage-macro$32813$1VmeqK
     (case-lambda
       ((g$e$30774$1VmeqK)
        (g$syntax-violation$29341$1VmeqK
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$30774$1VmeqK))))
   (g$parameterize-macro$29219$1VmeqK
     g$parameterize-macro$32814$1VmeqK
     (case-lambda
       ((g$e$30775$1VmeqK)
        ((case-lambda
           ((g$t$30776$1VmeqK)
            ((case-lambda
               ((g$ls/false$30777$1VmeqK)
                (if g$ls/false$30777$1VmeqK
                  (apply
                    (case-lambda
                      ((g$b$30778$1VmeqK g$b*$30779$1VmeqK)
                       (g$bless$29185$1VmeqK
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$30778$1VmeqK
                               g$b*$30779$1VmeqK))))))
                    g$ls/false$30777$1VmeqK)
                  ((case-lambda
                     ((g$t$30780$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$30781$1VmeqK)
                          (if g$ls/false$30781$1VmeqK
                            (apply
                              (case-lambda
                                ((g$olhs*$30782$1VmeqK
                                   g$orhs*$30783$1VmeqK
                                   g$b$30784$1VmeqK
                                   g$b*$30785$1VmeqK)
                                 ((case-lambda
                                    ((g$lhs*$30786$1VmeqK
                                       g$rhs*$30787$1VmeqK)
                                     (g$bless$29185$1VmeqK
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$30786$1VmeqK
                                             g$rhs*$30787$1VmeqK)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$20349$1VmeqK
                                                       (case-lambda
                                                         ((g$lhs$30788$1VmeqK
                                                            g$rhs$30789$1VmeqK)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$30788$1VmeqK)))
                                                            (list
                                                              g$lhs$30788$1VmeqK
                                                              g$rhs$30789$1VmeqK)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$30789$1VmeqK
                                                                '(t))))))
                                                       g$lhs*$30786$1VmeqK
                                                       g$rhs*$30787$1VmeqK)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$30784$1VmeqK
                                                         g$b*$30785$1VmeqK)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$30782$1VmeqK
                                           g$orhs*$30783$1VmeqK)))))
                                  (g$generate-temporaries$29331$1VmeqK
                                    g$olhs*$30782$1VmeqK)
                                  (g$generate-temporaries$29331$1VmeqK
                                    g$orhs*$30783$1VmeqK))))
                              g$ls/false$30781$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$30780$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$30780$1VmeqK
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$30776$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30776$1VmeqK
               '(_ () any . each-any)))))
         g$e$30775$1VmeqK))))
   (g$foreign-call-transformer$29220$1VmeqK
     g$foreign-call-transformer$32815$1VmeqK
     (case-lambda
       ((g$e$30790$1VmeqK g$r$30791$1VmeqK g$mr$30792$1VmeqK)
        ((case-lambda
           ((g$t$30793$1VmeqK)
            ((case-lambda
               ((g$ls/false$30794$1VmeqK)
                (if g$ls/false$30794$1VmeqK
                  (apply
                    (case-lambda
                      ((g$name$30795$1VmeqK g$arg*$30796$1VmeqK)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$29240$1VmeqK
                             g$name$30795$1VmeqK
                             g$r$30791$1VmeqK
                             g$mr$30792$1VmeqK)
                           (g$chi-expr*$29238$1VmeqK
                             g$arg*$30796$1VmeqK
                             g$r$30791$1VmeqK
                             g$mr$30792$1VmeqK)))))
                    g$ls/false$30794$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$30793$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$30793$1VmeqK
               '(_ any . each-any)))))
         g$e$30790$1VmeqK))))
   (g$convert-pattern$29221$1VmeqK
     g$convert-pattern$32816$1VmeqK
     (case-lambda
       ((g$pattern$30797$1VmeqK g$keys$30798$1VmeqK)
        (letrec* ((g$cvt*$30799$1VmeqK
                    (case-lambda
                      ((g$p*$30879$1VmeqK
                         g$n$30880$1VmeqK
                         g$ids$30881$1VmeqK)
                       (if (null? g$p*$30879$1VmeqK)
                         (values '() g$ids$30881$1VmeqK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$30799$1VmeqK
                                (cdr g$p*$30879$1VmeqK)
                                g$n$30880$1VmeqK
                                g$ids$30881$1VmeqK)))
                           (case-lambda
                             ((g$y$30884$1VmeqK g$ids$30885$1VmeqK)
                              ((case-lambda
                                 ((g$ids$30886$1VmeqK g$y$30887$1VmeqK)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$30800$1VmeqK
                                         (car g$p*$30879$1VmeqK)
                                         g$n$30880$1VmeqK
                                         g$ids$30886$1VmeqK)))
                                    (case-lambda
                                      ((g$x$30890$1VmeqK
                                         g$ids$30891$1VmeqK)
                                       ((case-lambda
                                          ((g$ids$30892$1VmeqK
                                             g$x$30893$1VmeqK)
                                           (values
                                             (cons
                                               g$x$30893$1VmeqK
                                               g$y$30887$1VmeqK)
                                             g$ids$30892$1VmeqK)))
                                        g$ids$30891$1VmeqK
                                        g$x$30890$1VmeqK))))))
                               g$ids$30885$1VmeqK
                               g$y$30884$1VmeqK))))))))
                  (g$cvt$30800$1VmeqK
                    (case-lambda
                      ((g$p$30801$1VmeqK
                         g$n$30802$1VmeqK
                         g$ids$30803$1VmeqK)
                       ((case-lambda
                          ((g$t$30804$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$30805$1VmeqK)
                               (if (if g$ls/false$30805$1VmeqK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$30806$1VmeqK)
                                            (g$id?$28724$1VmeqK
                                              g$id$30806$1VmeqK)))
                                         g$ls/false$30805$1VmeqK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$30807$1VmeqK)
                                      (if (g$bound-id-member?$28731$1VmeqK
                                            g$p$30801$1VmeqK
                                            g$keys$30798$1VmeqK)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$30801$1VmeqK)
                                          g$ids$30803$1VmeqK)
                                        (if (g$free-id=?$28728$1VmeqK
                                              g$p$30801$1VmeqK
                                              (g$scheme-stx$29165$1VmeqK
                                                '_))
                                          (values '_ g$ids$30803$1VmeqK)
                                          (begin
                                            '#f
                                            (values
                                              'any
                                              (cons
                                                (cons
                                                  g$p$30801$1VmeqK
                                                  g$n$30802$1VmeqK)
                                                g$ids$30803$1VmeqK)))))))
                                   g$ls/false$30805$1VmeqK)
                                 ((case-lambda
                                    ((g$t$30808$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$30809$1VmeqK)
                                         (if (if g$ls/false$30809$1VmeqK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$30810$1VmeqK
                                                        g$dots$30811$1VmeqK)
                                                      (g$ellipsis?$29223$1VmeqK
                                                        g$dots$30811$1VmeqK)))
                                                   g$ls/false$30809$1VmeqK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$30812$1VmeqK
                                                  g$dots$30813$1VmeqK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$30800$1VmeqK
                                                       g$p$30812$1VmeqK
                                                       (+ g$n$30802$1VmeqK
                                                          '1)
                                                       g$ids$30803$1VmeqK)))
                                                  (case-lambda
                                                    ((g$p$30816$1VmeqK
                                                       g$ids$30817$1VmeqK)
                                                     ((case-lambda
                                                        ((g$ids$30818$1VmeqK
                                                           g$p$30819$1VmeqK)
                                                         (values
                                                           (if (eq? g$p$30819$1VmeqK
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$30819$1VmeqK))
                                                           g$ids$30818$1VmeqK)))
                                                      g$ids$30817$1VmeqK
                                                      g$p$30816$1VmeqK))))))
                                             g$ls/false$30809$1VmeqK)
                                           ((case-lambda
                                              ((g$t$30820$1VmeqK)
                                               ((case-lambda
                                                  ((g$ls/false$30821$1VmeqK)
                                                   (if (if g$ls/false$30821$1VmeqK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$30822$1VmeqK
                                                                  g$dots$30823$1VmeqK
                                                                  g$ys$30824$1VmeqK
                                                                  g$z$30825$1VmeqK)
                                                                (g$ellipsis?$29223$1VmeqK
                                                                  g$dots$30823$1VmeqK)))
                                                             g$ls/false$30821$1VmeqK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$30826$1VmeqK
                                                            g$dots$30827$1VmeqK
                                                            g$ys$30828$1VmeqK
                                                            g$z$30829$1VmeqK)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$30800$1VmeqK
                                                                 g$z$30829$1VmeqK
                                                                 g$n$30802$1VmeqK
                                                                 g$ids$30803$1VmeqK)))
                                                            (case-lambda
                                                              ((g$z$30832$1VmeqK
                                                                 g$ids$30833$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$ids$30834$1VmeqK
                                                                     g$z$30835$1VmeqK)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$30799$1VmeqK
                                                                          g$ys$30828$1VmeqK
                                                                          g$n$30802$1VmeqK
                                                                          g$ids$30834$1VmeqK)))
                                                                     (case-lambda
                                                                       ((g$ys$30838$1VmeqK
                                                                          g$ids$30839$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$ids$30840$1VmeqK
                                                                              g$ys$30841$1VmeqK)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$30800$1VmeqK
                                                                                   g$x$30826$1VmeqK
                                                                                   (+ g$n$30802$1VmeqK
                                                                                      '1)
                                                                                   g$ids$30840$1VmeqK)))
                                                                              (case-lambda
                                                                                ((g$x$30844$1VmeqK
                                                                                   g$ids$30845$1VmeqK)
                                                                                 ((case-lambda
                                                                                    ((g$ids$30846$1VmeqK
                                                                                       g$x$30847$1VmeqK)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$30847$1VmeqK
                                                                                         (g$reverse$21198$1VmeqK
                                                                                           g$ys$30841$1VmeqK)
                                                                                         g$z$30835$1VmeqK)
                                                                                       g$ids$30846$1VmeqK)))
                                                                                  g$ids$30845$1VmeqK
                                                                                  g$x$30844$1VmeqK))))))
                                                                         g$ids$30839$1VmeqK
                                                                         g$ys$30838$1VmeqK))))))
                                                                g$ids$30833$1VmeqK
                                                                g$z$30832$1VmeqK))))))
                                                       g$ls/false$30821$1VmeqK)
                                                     ((case-lambda
                                                        ((g$t$30848$1VmeqK)
                                                         ((case-lambda
                                                            ((g$ls/false$30849$1VmeqK)
                                                             (if g$ls/false$30849$1VmeqK
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$30850$1VmeqK
                                                                      g$y$30851$1VmeqK)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$30800$1VmeqK
                                                                           g$y$30851$1VmeqK
                                                                           g$n$30802$1VmeqK
                                                                           g$ids$30803$1VmeqK)))
                                                                      (case-lambda
                                                                        ((g$y$30854$1VmeqK
                                                                           g$ids$30855$1VmeqK)
                                                                         ((case-lambda
                                                                            ((g$ids$30856$1VmeqK
                                                                               g$y$30857$1VmeqK)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$30800$1VmeqK
                                                                                    g$x$30850$1VmeqK
                                                                                    g$n$30802$1VmeqK
                                                                                    g$ids$30856$1VmeqK)))
                                                                               (case-lambda
                                                                                 ((g$x$30860$1VmeqK
                                                                                    g$ids$30861$1VmeqK)
                                                                                  ((case-lambda
                                                                                     ((g$ids$30862$1VmeqK
                                                                                        g$x$30863$1VmeqK)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$30863$1VmeqK
                                                                                          g$y$30857$1VmeqK)
                                                                                        g$ids$30862$1VmeqK)))
                                                                                   g$ids$30861$1VmeqK
                                                                                   g$x$30860$1VmeqK))))))
                                                                          g$ids$30855$1VmeqK
                                                                          g$y$30854$1VmeqK))))))
                                                                 g$ls/false$30849$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$t$30864$1VmeqK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$30865$1VmeqK)
                                                                       (if g$ls/false$30865$1VmeqK
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$30803$1VmeqK)))
                                                                           g$ls/false$30865$1VmeqK)
                                                                         ((case-lambda
                                                                            ((g$t$30866$1VmeqK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$30867$1VmeqK)
                                                                                 (if (if g$ls/false$30867$1VmeqK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$30868$1VmeqK)
                                                                                              (not (g$stx?$28696$1VmeqK
                                                                                                     g$p$30868$1VmeqK))))
                                                                                           g$ls/false$30867$1VmeqK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$30869$1VmeqK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$30800$1VmeqK
                                                                                               g$p$30869$1VmeqK
                                                                                               g$n$30802$1VmeqK
                                                                                               g$ids$30803$1VmeqK)))
                                                                                          (case-lambda
                                                                                            ((g$p$30872$1VmeqK
                                                                                               g$ids$30873$1VmeqK)
                                                                                             ((case-lambda
                                                                                                ((g$ids$30874$1VmeqK
                                                                                                   g$p$30875$1VmeqK)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$30875$1VmeqK)
                                                                                                   g$ids$30874$1VmeqK)))
                                                                                              g$ids$30873$1VmeqK
                                                                                              g$p$30872$1VmeqK))))))
                                                                                     g$ls/false$30867$1VmeqK)
                                                                                   ((case-lambda
                                                                                      ((g$t$30876$1VmeqK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$30877$1VmeqK)
                                                                                           (if g$ls/false$30877$1VmeqK
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$30878$1VmeqK)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$28735$1VmeqK
                                                                                                        g$datum$30878$1VmeqK))
                                                                                                    g$ids$30803$1VmeqK)))
                                                                                               g$ls/false$30877$1VmeqK)
                                                                                             (g$syntax-violation$29341$1VmeqK
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$30876$1VmeqK))))
                                                                                        (g$syntax-dispatch$29222$1VmeqK
                                                                                          g$t$30876$1VmeqK
                                                                                          'any))))
                                                                                    g$t$30866$1VmeqK))))
                                                                              (g$syntax-dispatch$29222$1VmeqK
                                                                                g$t$30866$1VmeqK
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$30864$1VmeqK))))
                                                                    (g$syntax-dispatch$29222$1VmeqK
                                                                      g$t$30864$1VmeqK
                                                                      '()))))
                                                                g$t$30848$1VmeqK))))
                                                          (g$syntax-dispatch$29222$1VmeqK
                                                            g$t$30848$1VmeqK
                                                            '(any .
                                                                  any)))))
                                                      g$t$30820$1VmeqK))))
                                                (g$syntax-dispatch$29222$1VmeqK
                                                  g$t$30820$1VmeqK
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$30808$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$30808$1VmeqK
                                        '(any any)))))
                                  g$t$30804$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$30804$1VmeqK
                              'any))))
                        g$p$30801$1VmeqK)))))
          (g$cvt$30800$1VmeqK g$pattern$30797$1VmeqK '0 '())))))
   (g$syntax-dispatch$29222$1VmeqK
     g$syntax-dispatch$32817$1VmeqK
     (case-lambda
       ((g$e$30894$1VmeqK g$p$30895$1VmeqK)
        (letrec* ((g$stx^$30896$1VmeqK
                    (case-lambda
                      ((g$e$31004$1VmeqK
                         g$m*$31005$1VmeqK
                         g$s*$31006$1VmeqK
                         g$ae*$31007$1VmeqK)
                       (if (if (null? g$m*$31005$1VmeqK)
                             (if (null? g$s*$31006$1VmeqK)
                               (begin '#f (null? g$ae*$31007$1VmeqK))
                               '#f)
                             '#f)
                         g$e$31004$1VmeqK
                         (g$mkstx$28712$1VmeqK
                           g$e$31004$1VmeqK
                           g$m*$31005$1VmeqK
                           g$s*$31006$1VmeqK
                           g$ae*$31007$1VmeqK)))))
                  (g$match-each$30897$1VmeqK
                    (case-lambda
                      ((g$e$30988$1VmeqK
                         g$p$30989$1VmeqK
                         g$m*$30990$1VmeqK
                         g$s*$30991$1VmeqK
                         g$ae*$30992$1VmeqK)
                       (if (pair? g$e$30988$1VmeqK)
                         ((case-lambda
                            ((g$first$30993$1VmeqK)
                             (if g$first$30993$1VmeqK
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$30994$1VmeqK)
                                     (if g$rest$30994$1VmeqK
                                       (begin
                                         '#f
                                         (cons
                                           g$first$30993$1VmeqK
                                           g$rest$30994$1VmeqK))
                                       '#f)))
                                  (g$match-each$30897$1VmeqK
                                    (cdr g$e$30988$1VmeqK)
                                    g$p$30989$1VmeqK
                                    g$m*$30990$1VmeqK
                                    g$s*$30991$1VmeqK
                                    g$ae*$30992$1VmeqK)))
                               '#f)))
                          (g$match$30903$1VmeqK
                            (car g$e$30988$1VmeqK)
                            g$p$30989$1VmeqK
                            g$m*$30990$1VmeqK
                            g$s*$30991$1VmeqK
                            g$ae*$30992$1VmeqK
                            '()))
                         (if (null? g$e$30988$1VmeqK)
                           '()
                           (if (g$stx?$28696$1VmeqK g$e$30988$1VmeqK)
                             (if (not (g$top-marked?$28658$1VmeqK
                                        g$m*$30990$1VmeqK))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28711$1VmeqK
                                        g$m*$30990$1VmeqK
                                        g$s*$30991$1VmeqK
                                        g$ae*$30992$1VmeqK
                                        g$e$30988$1VmeqK)))
                                   (case-lambda
                                     ((g$m*$30998$1VmeqK
                                        g$s*$30999$1VmeqK
                                        g$ae*$31000$1VmeqK)
                                      ((case-lambda
                                         ((g$ae*$31001$1VmeqK
                                            g$s*$31002$1VmeqK
                                            g$m*$31003$1VmeqK)
                                          (g$match-each$30897$1VmeqK
                                            (g$stx-expr$28698$1VmeqK
                                              g$e$30988$1VmeqK)
                                            g$p$30989$1VmeqK
                                            g$m*$31003$1VmeqK
                                            g$s*$31002$1VmeqK
                                            g$ae*$31001$1VmeqK)))
                                       g$ae*$31000$1VmeqK
                                       g$s*$30999$1VmeqK
                                       g$m*$30998$1VmeqK)))))
                               '#f)
                             (if (annotation? g$e$30988$1VmeqK)
                               (g$match-each$30897$1VmeqK
                                 (annotation-expression
                                   g$e$30988$1VmeqK)
                                 g$p$30989$1VmeqK
                                 g$m*$30990$1VmeqK
                                 g$s*$30991$1VmeqK
                                 g$ae*$30992$1VmeqK)
                               (begin '#f '#f))))))))
                  (g$match-each+$30898$1VmeqK
                    (case-lambda
                      ((g$e$30956$1VmeqK
                         g$x-pat$30957$1VmeqK
                         g$y-pat$30958$1VmeqK
                         g$z-pat$30959$1VmeqK
                         g$m*$30960$1VmeqK
                         g$s*$30961$1VmeqK
                         g$ae*$30962$1VmeqK
                         g$r$30963$1VmeqK)
                       ((letrec ((g$f$30964$1VmeqK
                                   (case-lambda
                                     ((g$e$30965$1VmeqK
                                        g$m*$30966$1VmeqK
                                        g$s*$30967$1VmeqK
                                        g$ae*$30968$1VmeqK)
                                      (if (pair? g$e$30965$1VmeqK)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$30964$1VmeqK
                                               (cdr g$e$30965$1VmeqK)
                                               g$m*$30966$1VmeqK
                                               g$s*$30967$1VmeqK
                                               g$ae*$30968$1VmeqK)))
                                          (case-lambda
                                            ((g$xr*$30972$1VmeqK
                                               g$y-pat$30973$1VmeqK
                                               g$r$30974$1VmeqK)
                                             ((case-lambda
                                                ((g$r$30975$1VmeqK
                                                   g$y-pat$30976$1VmeqK
                                                   g$xr*$30977$1VmeqK)
                                                 (if g$r$30975$1VmeqK
                                                   (if (null?
                                                         g$y-pat$30976$1VmeqK)
                                                     ((case-lambda
                                                        ((g$xr$30978$1VmeqK)
                                                         (if g$xr$30978$1VmeqK
                                                           (values
                                                             (cons
                                                               g$xr$30978$1VmeqK
                                                               g$xr*$30977$1VmeqK)
                                                             g$y-pat$30976$1VmeqK
                                                             g$r$30975$1VmeqK)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$30903$1VmeqK
                                                        (car g$e$30965$1VmeqK)
                                                        g$x-pat$30957$1VmeqK
                                                        g$m*$30966$1VmeqK
                                                        g$s*$30967$1VmeqK
                                                        g$ae*$30968$1VmeqK
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$30976$1VmeqK)
                                                       (g$match$30903$1VmeqK
                                                         (car g$e$30965$1VmeqK)
                                                         (car g$y-pat$30976$1VmeqK)
                                                         g$m*$30966$1VmeqK
                                                         g$s*$30967$1VmeqK
                                                         g$ae*$30968$1VmeqK
                                                         g$r$30975$1VmeqK)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$30974$1VmeqK
                                              g$y-pat$30973$1VmeqK
                                              g$xr*$30972$1VmeqK))))
                                        (if (g$stx?$28696$1VmeqK
                                              g$e$30965$1VmeqK)
                                          (if (g$top-marked?$28658$1VmeqK
                                                g$m*$30966$1VmeqK)
                                            (values
                                              '()
                                              g$y-pat$30958$1VmeqK
                                              (g$match$30903$1VmeqK
                                                g$e$30965$1VmeqK
                                                g$z-pat$30959$1VmeqK
                                                g$m*$30966$1VmeqK
                                                g$s*$30967$1VmeqK
                                                g$ae*$30968$1VmeqK
                                                g$r$30963$1VmeqK))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$28711$1VmeqK
                                                   g$m*$30966$1VmeqK
                                                   g$s*$30967$1VmeqK
                                                   g$ae*$30968$1VmeqK
                                                   g$e$30965$1VmeqK)))
                                              (case-lambda
                                                ((g$m*$30982$1VmeqK
                                                   g$s*$30983$1VmeqK
                                                   g$ae*$30984$1VmeqK)
                                                 ((case-lambda
                                                    ((g$ae*$30985$1VmeqK
                                                       g$s*$30986$1VmeqK
                                                       g$m*$30987$1VmeqK)
                                                     (g$f$30964$1VmeqK
                                                       (g$stx-expr$28698$1VmeqK
                                                         g$e$30965$1VmeqK)
                                                       g$m*$30987$1VmeqK
                                                       g$s*$30986$1VmeqK
                                                       g$ae*$30985$1VmeqK)))
                                                  g$ae*$30984$1VmeqK
                                                  g$s*$30983$1VmeqK
                                                  g$m*$30982$1VmeqK)))))
                                          (if (annotation?
                                                g$e$30965$1VmeqK)
                                            (g$f$30964$1VmeqK
                                              (annotation-expression
                                                g$e$30965$1VmeqK)
                                              g$m*$30966$1VmeqK
                                              g$s*$30967$1VmeqK
                                              g$ae*$30968$1VmeqK)
                                            (begin
                                              '#f
                                              (values
                                                '()
                                                g$y-pat$30958$1VmeqK
                                                (g$match$30903$1VmeqK
                                                  g$e$30965$1VmeqK
                                                  g$z-pat$30959$1VmeqK
                                                  g$m*$30966$1VmeqK
                                                  g$s*$30967$1VmeqK
                                                  g$ae*$30968$1VmeqK
                                                  g$r$30963$1VmeqK))))))))))
                          g$f$30964$1VmeqK)
                        g$e$30956$1VmeqK
                        g$m*$30960$1VmeqK
                        g$s*$30961$1VmeqK
                        g$ae*$30962$1VmeqK))))
                  (g$match-each-any$30899$1VmeqK
                    (case-lambda
                      ((g$e$30942$1VmeqK
                         g$m*$30943$1VmeqK
                         g$s*$30944$1VmeqK
                         g$ae*$30945$1VmeqK)
                       (if (pair? g$e$30942$1VmeqK)
                         ((case-lambda
                            ((g$l$30946$1VmeqK)
                             (if g$l$30946$1VmeqK
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$30896$1VmeqK
                                     (car g$e$30942$1VmeqK)
                                     g$m*$30943$1VmeqK
                                     g$s*$30944$1VmeqK
                                     g$ae*$30945$1VmeqK)
                                   g$l$30946$1VmeqK))
                               '#f)))
                          (g$match-each-any$30899$1VmeqK
                            (cdr g$e$30942$1VmeqK)
                            g$m*$30943$1VmeqK
                            g$s*$30944$1VmeqK
                            g$ae*$30945$1VmeqK))
                         (if (null? g$e$30942$1VmeqK)
                           '()
                           (if (g$stx?$28696$1VmeqK g$e$30942$1VmeqK)
                             (if (not (g$top-marked?$28658$1VmeqK
                                        g$m*$30943$1VmeqK))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28711$1VmeqK
                                        g$m*$30943$1VmeqK
                                        g$s*$30944$1VmeqK
                                        g$ae*$30945$1VmeqK
                                        g$e$30942$1VmeqK)))
                                   (case-lambda
                                     ((g$m*$30950$1VmeqK
                                        g$s*$30951$1VmeqK
                                        g$ae*$30952$1VmeqK)
                                      ((case-lambda
                                         ((g$ae*$30953$1VmeqK
                                            g$s*$30954$1VmeqK
                                            g$m*$30955$1VmeqK)
                                          (g$match-each-any$30899$1VmeqK
                                            (g$stx-expr$28698$1VmeqK
                                              g$e$30942$1VmeqK)
                                            g$m*$30955$1VmeqK
                                            g$s*$30954$1VmeqK
                                            g$ae*$30953$1VmeqK)))
                                       g$ae*$30952$1VmeqK
                                       g$s*$30951$1VmeqK
                                       g$m*$30950$1VmeqK)))))
                               '#f)
                             (if (annotation? g$e$30942$1VmeqK)
                               (g$match-each-any$30899$1VmeqK
                                 (annotation-expression
                                   g$e$30942$1VmeqK)
                                 g$m*$30943$1VmeqK
                                 g$s*$30944$1VmeqK
                                 g$ae*$30945$1VmeqK)
                               (begin '#f '#f))))))))
                  (g$match-empty$30900$1VmeqK
                    (case-lambda
                      ((g$p$30939$1VmeqK g$r$30940$1VmeqK)
                       (if (null? g$p$30939$1VmeqK)
                         g$r$30940$1VmeqK
                         (if (eq? g$p$30939$1VmeqK '_)
                           g$r$30940$1VmeqK
                           (if (eq? g$p$30939$1VmeqK 'any)
                             (cons '() g$r$30940$1VmeqK)
                             (if (pair? g$p$30939$1VmeqK)
                               (g$match-empty$30900$1VmeqK
                                 (car g$p$30939$1VmeqK)
                                 (g$match-empty$30900$1VmeqK
                                   (cdr g$p$30939$1VmeqK)
                                   g$r$30940$1VmeqK))
                               (if (eq? g$p$30939$1VmeqK 'each-any)
                                 (cons '() g$r$30940$1VmeqK)
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$30941$1VmeqK)
                                       (if (eqv? g$t$30941$1VmeqK 'each)
                                         (g$match-empty$30900$1VmeqK
                                           (g$vector-ref$21194$1VmeqK
                                             g$p$30939$1VmeqK
                                             '1)
                                           g$r$30940$1VmeqK)
                                         (if (eqv?
                                               g$t$30941$1VmeqK
                                               'each+)
                                           (g$match-empty$30900$1VmeqK
                                             (g$vector-ref$21194$1VmeqK
                                               g$p$30939$1VmeqK
                                               '1)
                                             (g$match-empty$30900$1VmeqK
                                               (g$reverse$21198$1VmeqK
                                                 (g$vector-ref$21194$1VmeqK
                                                   g$p$30939$1VmeqK
                                                   '2))
                                               (g$match-empty$30900$1VmeqK
                                                 (g$vector-ref$21194$1VmeqK
                                                   g$p$30939$1VmeqK
                                                   '3)
                                                 g$r$30940$1VmeqK)))
                                           (if (g$memv$20342$1VmeqK
                                                 g$t$30941$1VmeqK
                                                 '(free-id atom))
                                             g$r$30940$1VmeqK
                                             (if (g$memv$20342$1VmeqK
                                                   g$t$30941$1VmeqK
                                                   '(scheme-id atom))
                                               g$r$30940$1VmeqK
                                               (if (eqv?
                                                     g$t$30941$1VmeqK
                                                     'vector)
                                                 (g$match-empty$30900$1VmeqK
                                                   (g$vector-ref$21194$1VmeqK
                                                     g$p$30939$1VmeqK
                                                     '1)
                                                   g$r$30940$1VmeqK)
                                                 (begin
                                                   '#f
                                                   (assertion-violation
                                                     'syntax-dispatch
                                                     '"invalid pattern"
                                                     g$p$30939$1VmeqK)))))))))
                                    (g$vector-ref$21194$1VmeqK
                                      g$p$30939$1VmeqK
                                      '0)))))))))))
                  (g$combine$30901$1VmeqK
                    (case-lambda
                      ((g$r*$30937$1VmeqK g$r$30938$1VmeqK)
                       (if (null? (car g$r*$30937$1VmeqK))
                         g$r$30938$1VmeqK
                         (cons
                           (g$map$20349$1VmeqK car g$r*$30937$1VmeqK)
                           (g$combine$30901$1VmeqK
                             (g$map$20349$1VmeqK cdr g$r*$30937$1VmeqK)
                             g$r$30938$1VmeqK))))))
                  (g$match*$30902$1VmeqK
                    (case-lambda
                      ((g$e$30919$1VmeqK
                         g$p$30920$1VmeqK
                         g$m*$30921$1VmeqK
                         g$s*$30922$1VmeqK
                         g$ae*$30923$1VmeqK
                         g$r$30924$1VmeqK)
                       (if (null? g$p$30920$1VmeqK)
                         (if (null? g$e$30919$1VmeqK)
                           (begin '#f g$r$30924$1VmeqK)
                           '#f)
                         (if (pair? g$p$30920$1VmeqK)
                           (if (pair? g$e$30919$1VmeqK)
                             (begin
                               '#f
                               (g$match$30903$1VmeqK
                                 (car g$e$30919$1VmeqK)
                                 (car g$p$30920$1VmeqK)
                                 g$m*$30921$1VmeqK
                                 g$s*$30922$1VmeqK
                                 g$ae*$30923$1VmeqK
                                 (g$match$30903$1VmeqK
                                   (cdr g$e$30919$1VmeqK)
                                   (cdr g$p$30920$1VmeqK)
                                   g$m*$30921$1VmeqK
                                   g$s*$30922$1VmeqK
                                   g$ae*$30923$1VmeqK
                                   g$r$30924$1VmeqK)))
                             '#f)
                           (if (eq? g$p$30920$1VmeqK 'each-any)
                             ((case-lambda
                                ((g$l$30925$1VmeqK)
                                 (if g$l$30925$1VmeqK
                                   (begin
                                     '#f
                                     (cons
                                       g$l$30925$1VmeqK
                                       g$r$30924$1VmeqK))
                                   '#f)))
                              (g$match-each-any$30899$1VmeqK
                                g$e$30919$1VmeqK
                                g$m*$30921$1VmeqK
                                g$s*$30922$1VmeqK
                                g$ae*$30923$1VmeqK))
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$30926$1VmeqK)
                                   (if (eqv? g$t$30926$1VmeqK 'each)
                                     (if (null? g$e$30919$1VmeqK)
                                       (g$match-empty$30900$1VmeqK
                                         (g$vector-ref$21194$1VmeqK
                                           g$p$30920$1VmeqK
                                           '1)
                                         g$r$30924$1VmeqK)
                                       ((case-lambda
                                          ((g$r*$30927$1VmeqK)
                                           (if g$r*$30927$1VmeqK
                                             (begin
                                               '#f
                                               (g$combine$30901$1VmeqK
                                                 g$r*$30927$1VmeqK
                                                 g$r$30924$1VmeqK))
                                             '#f)))
                                        (g$match-each$30897$1VmeqK
                                          g$e$30919$1VmeqK
                                          (g$vector-ref$21194$1VmeqK
                                            g$p$30920$1VmeqK
                                            '1)
                                          g$m*$30921$1VmeqK
                                          g$s*$30922$1VmeqK
                                          g$ae*$30923$1VmeqK)))
                                     (if (eqv?
                                           g$t$30926$1VmeqK
                                           'free-id)
                                       (if (g$symbol?$21181$1VmeqK
                                             g$e$30919$1VmeqK)
                                         (if (g$top-marked?$28658$1VmeqK
                                               g$m*$30921$1VmeqK)
                                           (if (g$free-id=?$28728$1VmeqK
                                                 (g$stx^$30896$1VmeqK
                                                   g$e$30919$1VmeqK
                                                   g$m*$30921$1VmeqK
                                                   g$s*$30922$1VmeqK
                                                   g$ae*$30923$1VmeqK)
                                                 (g$vector-ref$21194$1VmeqK
                                                   g$p$30920$1VmeqK
                                                   '1))
                                             (begin
                                               '#f
                                               g$r$30924$1VmeqK)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (eqv?
                                             g$t$30926$1VmeqK
                                             'scheme-id)
                                         (if (g$symbol?$21181$1VmeqK
                                               g$e$30919$1VmeqK)
                                           (if (g$top-marked?$28658$1VmeqK
                                                 g$m*$30921$1VmeqK)
                                             (if (g$free-id=?$28728$1VmeqK
                                                   (g$stx^$30896$1VmeqK
                                                     g$e$30919$1VmeqK
                                                     g$m*$30921$1VmeqK
                                                     g$s*$30922$1VmeqK
                                                     g$ae*$30923$1VmeqK)
                                                   (g$scheme-stx$29165$1VmeqK
                                                     (g$vector-ref$21194$1VmeqK
                                                       g$p$30920$1VmeqK
                                                       '1)))
                                               (begin
                                                 '#f
                                                 g$r$30924$1VmeqK)
                                               '#f)
                                             '#f)
                                           '#f)
                                         (if (eqv?
                                               g$t$30926$1VmeqK
                                               'each+)
                                           (call-with-values
                                             (case-lambda
                                               (()
                                                (g$match-each+$30898$1VmeqK
                                                  g$e$30919$1VmeqK
                                                  (g$vector-ref$21194$1VmeqK
                                                    g$p$30920$1VmeqK
                                                    '1)
                                                  (g$vector-ref$21194$1VmeqK
                                                    g$p$30920$1VmeqK
                                                    '2)
                                                  (g$vector-ref$21194$1VmeqK
                                                    g$p$30920$1VmeqK
                                                    '3)
                                                  g$m*$30921$1VmeqK
                                                  g$s*$30922$1VmeqK
                                                  g$ae*$30923$1VmeqK
                                                  g$r$30924$1VmeqK)))
                                             (case-lambda
                                               ((g$xr*$30931$1VmeqK
                                                  g$y-pat$30932$1VmeqK
                                                  g$r$30933$1VmeqK)
                                                ((case-lambda
                                                   ((g$r$30934$1VmeqK
                                                      g$y-pat$30935$1VmeqK
                                                      g$xr*$30936$1VmeqK)
                                                    (if g$r$30934$1VmeqK
                                                      (if (null?
                                                            g$y-pat$30935$1VmeqK)
                                                        (begin
                                                          '#f
                                                          (if (null?
                                                                g$xr*$30936$1VmeqK)
                                                            (g$match-empty$30900$1VmeqK
                                                              (g$vector-ref$21194$1VmeqK
                                                                g$p$30920$1VmeqK
                                                                '1)
                                                              g$r$30934$1VmeqK)
                                                            (g$combine$30901$1VmeqK
                                                              g$xr*$30936$1VmeqK
                                                              g$r$30934$1VmeqK)))
                                                        '#f)
                                                      '#f)))
                                                 g$r$30933$1VmeqK
                                                 g$y-pat$30932$1VmeqK
                                                 g$xr*$30931$1VmeqK))))
                                           (if (eqv?
                                                 g$t$30926$1VmeqK
                                                 'atom)
                                             (if (equal?
                                                   (g$vector-ref$21194$1VmeqK
                                                     g$p$30920$1VmeqK
                                                     '1)
                                                   (g$strip$28734$1VmeqK
                                                     g$e$30919$1VmeqK
                                                     g$m*$30921$1VmeqK))
                                               (begin
                                                 '#f
                                                 g$r$30924$1VmeqK)
                                               '#f)
                                             (if (eqv?
                                                   g$t$30926$1VmeqK
                                                   'vector)
                                               (if (g$vector?$21179$1VmeqK
                                                     g$e$30919$1VmeqK)
                                                 (begin
                                                   '#f
                                                   (g$match$30903$1VmeqK
                                                     (vector->list
                                                       g$e$30919$1VmeqK)
                                                     (g$vector-ref$21194$1VmeqK
                                                       g$p$30920$1VmeqK
                                                       '1)
                                                     g$m*$30921$1VmeqK
                                                     g$s*$30922$1VmeqK
                                                     g$ae*$30923$1VmeqK
                                                     g$r$30924$1VmeqK))
                                                 '#f)
                                               (begin
                                                 '#f
                                                 (assertion-violation
                                                   'syntax-dispatch
                                                   '"invalid pattern"
                                                   g$p$30920$1VmeqK))))))))))
                                (g$vector-ref$21194$1VmeqK
                                  g$p$30920$1VmeqK
                                  '0)))))))))
                  (g$match$30903$1VmeqK
                    (case-lambda
                      ((g$e$30904$1VmeqK
                         g$p$30905$1VmeqK
                         g$m*$30906$1VmeqK
                         g$s*$30907$1VmeqK
                         g$ae*$30908$1VmeqK
                         g$r$30909$1VmeqK)
                       (if (not g$r$30909$1VmeqK)
                         '#f
                         (if (eq? g$p$30905$1VmeqK '_)
                           g$r$30909$1VmeqK
                           (if (eq? g$p$30905$1VmeqK 'any)
                             (cons
                               (g$stx^$30896$1VmeqK
                                 g$e$30904$1VmeqK
                                 g$m*$30906$1VmeqK
                                 g$s*$30907$1VmeqK
                                 g$ae*$30908$1VmeqK)
                               g$r$30909$1VmeqK)
                             (if (g$stx?$28696$1VmeqK g$e$30904$1VmeqK)
                               (if (not (g$top-marked?$28658$1VmeqK
                                          g$m*$30906$1VmeqK))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$28711$1VmeqK
                                          g$m*$30906$1VmeqK
                                          g$s*$30907$1VmeqK
                                          g$ae*$30908$1VmeqK
                                          g$e$30904$1VmeqK)))
                                     (case-lambda
                                       ((g$m*$30913$1VmeqK
                                          g$s*$30914$1VmeqK
                                          g$ae*$30915$1VmeqK)
                                        ((case-lambda
                                           ((g$ae*$30916$1VmeqK
                                              g$s*$30917$1VmeqK
                                              g$m*$30918$1VmeqK)
                                            (g$match$30903$1VmeqK
                                              (g$stx-expr$28698$1VmeqK
                                                g$e$30904$1VmeqK)
                                              g$p$30905$1VmeqK
                                              g$m*$30918$1VmeqK
                                              g$s*$30917$1VmeqK
                                              g$ae*$30916$1VmeqK
                                              g$r$30909$1VmeqK)))
                                         g$ae*$30915$1VmeqK
                                         g$s*$30914$1VmeqK
                                         g$m*$30913$1VmeqK)))))
                                 '#f)
                               (if (annotation? g$e$30904$1VmeqK)
                                 (g$match$30903$1VmeqK
                                   (annotation-expression
                                     g$e$30904$1VmeqK)
                                   g$p$30905$1VmeqK
                                   g$m*$30906$1VmeqK
                                   g$s*$30907$1VmeqK
                                   g$ae*$30908$1VmeqK
                                   g$r$30909$1VmeqK)
                                 (begin
                                   '#f
                                   (g$match*$30902$1VmeqK
                                     g$e$30904$1VmeqK
                                     g$p$30905$1VmeqK
                                     g$m*$30906$1VmeqK
                                     g$s*$30907$1VmeqK
                                     g$ae*$30908$1VmeqK
                                     g$r$30909$1VmeqK)))))))))))
          (g$match$30903$1VmeqK
            g$e$30894$1VmeqK
            g$p$30895$1VmeqK
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$29223$1VmeqK
     g$ellipsis?$32818$1VmeqK
     (case-lambda
       ((g$x$31008$1VmeqK)
        (if (g$id?$28724$1VmeqK g$x$31008$1VmeqK)
          (begin
            '#f
            (g$free-id=?$28728$1VmeqK
              g$x$31008$1VmeqK
              (g$scheme-stx$29165$1VmeqK '...)))
          '#f))))
   (g$underscore?$29224$1VmeqK
     g$underscore?$32819$1VmeqK
     (case-lambda
       ((g$x$31009$1VmeqK)
        (if (g$id?$28724$1VmeqK g$x$31009$1VmeqK)
          (begin
            '#f
            (g$free-id=?$28728$1VmeqK
              g$x$31009$1VmeqK
              (g$scheme-stx$29165$1VmeqK '_)))
          '#f))))
   (g$verify-literals$29225$1VmeqK
     g$verify-literals$32820$1VmeqK
     (case-lambda
       ((g$lits$31010$1VmeqK g$expr$31011$1VmeqK)
        (g$for-each$20350$1VmeqK
          (case-lambda
            ((g$x$31012$1VmeqK)
             (if ((case-lambda
                    ((g$t$31013$1VmeqK)
                     (if g$t$31013$1VmeqK
                       g$t$31013$1VmeqK
                       ((case-lambda
                          ((g$t$31014$1VmeqK)
                           (if g$t$31014$1VmeqK
                             g$t$31014$1VmeqK
                             (begin
                               '#f
                               (g$underscore?$29224$1VmeqK
                                 g$x$31012$1VmeqK)))))
                        (g$ellipsis?$29223$1VmeqK g$x$31012$1VmeqK)))))
                  (not (g$id?$28724$1VmeqK g$x$31012$1VmeqK)))
               (g$syntax-violation$29341$1VmeqK
                 '#f
                 '"invalid literal"
                 g$expr$31011$1VmeqK
                 g$x$31012$1VmeqK)
               (void))))
          g$lits$31010$1VmeqK))))
   (g$syntax-case-transformer$29226$1VmeqK
     g$syntax-case-transformer$32821$1VmeqK
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$31015$1VmeqK
                     (case-lambda
                       ((g$pvars$31072$1VmeqK
                          g$expr$31073$1VmeqK
                          g$y$31074$1VmeqK
                          g$r$31075$1VmeqK
                          g$mr$31076$1VmeqK)
                        ((case-lambda
                           ((g$ids$31077$1VmeqK g$levels$31078$1VmeqK)
                            ((case-lambda
                               ((g$labels$31079$1VmeqK
                                  g$new-vars$31080$1VmeqK)
                                ((case-lambda
                                   ((g$body$31081$1VmeqK)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$28646$1VmeqK
                                        '#f
                                        g$new-vars$31080$1VmeqK
                                        g$body$31081$1VmeqK)
                                      g$y$31074$1VmeqK)))
                                 (g$chi-expr$29240$1VmeqK
                                   (g$add-subst$28714$1VmeqK
                                     (g$make-full-rib$28690$1VmeqK
                                       g$ids$31077$1VmeqK
                                       g$labels$31079$1VmeqK)
                                     g$expr$31073$1VmeqK)
                                   (append
                                     (g$map$20349$1VmeqK
                                       (case-lambda
                                         ((g$label$31082$1VmeqK
                                            g$var$31083$1VmeqK
                                            g$level$31084$1VmeqK)
                                          (cons
                                            g$label$31082$1VmeqK
                                            (g$make-binding$28740$1VmeqK
                                              'syntax
                                              (cons
                                                g$var$31083$1VmeqK
                                                g$level$31084$1VmeqK)))))
                                       g$labels$31079$1VmeqK
                                       g$new-vars$31080$1VmeqK
                                       (g$map$20349$1VmeqK
                                         cdr
                                         g$pvars$31072$1VmeqK))
                                     g$r$31075$1VmeqK)
                                   g$mr$31076$1VmeqK))))
                             (g$map$20349$1VmeqK
                               g$gen-label$28661$1VmeqK
                               g$ids$31077$1VmeqK)
                             (g$map$20349$1VmeqK
                               g$gen-lexical$28659$1VmeqK
                               g$ids$31077$1VmeqK))))
                         (g$map$20349$1VmeqK car g$pvars$31072$1VmeqK)
                         (g$map$20349$1VmeqK
                           cdr
                           g$pvars$31072$1VmeqK)))))
                   (g$invalid-ids-error$31016$1VmeqK
                     (case-lambda
                       ((g$id*$31066$1VmeqK
                          g$e$31067$1VmeqK
                          g$class$31068$1VmeqK)
                        ((letrec ((g$find$31069$1VmeqK
                                    (case-lambda
                                      ((g$id*$31070$1VmeqK
                                         g$ok*$31071$1VmeqK)
                                       (if (null? g$id*$31070$1VmeqK)
                                         (g$syntax-violation$29341$1VmeqK
                                           '#f
                                           '"invalid syntax"
                                           g$e$31067$1VmeqK)
                                         (if (g$id?$28724$1VmeqK
                                               (car g$id*$31070$1VmeqK))
                                           (if (g$bound-id-member?$28731$1VmeqK
                                                 (car g$id*$31070$1VmeqK)
                                                 g$ok*$31071$1VmeqK)
                                             (g$syntax-error$29338$1VmeqK
                                               (car g$id*$31070$1VmeqK)
                                               '"duplicate "
                                               g$class$31068$1VmeqK)
                                             (g$find$31069$1VmeqK
                                               (cdr g$id*$31070$1VmeqK)
                                               (cons
                                                 (car g$id*$31070$1VmeqK)
                                                 g$ok*$31071$1VmeqK)))
                                           (g$syntax-error$29338$1VmeqK
                                             (car g$id*$31070$1VmeqK)
                                             '"invalid "
                                             g$class$31068$1VmeqK)))))))
                           g$find$31069$1VmeqK)
                         g$id*$31066$1VmeqK
                         '()))))
                   (g$gen-clause$31017$1VmeqK
                     (case-lambda
                       ((g$x$31046$1VmeqK
                          g$keys$31047$1VmeqK
                          g$clauses$31048$1VmeqK
                          g$r$31049$1VmeqK
                          g$mr$31050$1VmeqK
                          g$pat$31051$1VmeqK
                          g$fender$31052$1VmeqK
                          g$expr$31053$1VmeqK)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$29221$1VmeqK
                               g$pat$31051$1VmeqK
                               g$keys$31047$1VmeqK)))
                          (case-lambda
                            ((g$p$31056$1VmeqK g$pvars$31057$1VmeqK)
                             ((case-lambda
                                ((g$pvars$31058$1VmeqK g$p$31059$1VmeqK)
                                 (if (not (g$distinct-bound-ids?$28730$1VmeqK
                                            (g$map$20349$1VmeqK
                                              car
                                              g$pvars$31058$1VmeqK)))
                                   (g$invalid-ids-error$31016$1VmeqK
                                     (g$map$20349$1VmeqK
                                       car
                                       g$pvars$31058$1VmeqK)
                                     g$pat$31051$1VmeqK
                                     '"pattern variable")
                                   (if (not (g$for-all$20347$1VmeqK
                                              (case-lambda
                                                ((g$x$31060$1VmeqK)
                                                 (not (g$ellipsis?$29223$1VmeqK
                                                        (car g$x$31060$1VmeqK)))))
                                              g$pvars$31058$1VmeqK))
                                     (g$syntax-violation$29341$1VmeqK
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$31051$1VmeqK)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$y$31061$1VmeqK)
                                           ((case-lambda
                                              ((g$test$31062$1VmeqK)
                                               ((case-lambda
                                                  ((g$conseq$31063$1VmeqK)
                                                   ((case-lambda
                                                      ((g$altern$31064$1VmeqK)
                                                       (list
                                                         (g$build-lambda$28646$1VmeqK
                                                           '#f
                                                           (list
                                                             g$y$31061$1VmeqK)
                                                           (list
                                                             'if
                                                             g$test$31062$1VmeqK
                                                             g$conseq$31063$1VmeqK
                                                             g$altern$31064$1VmeqK))
                                                         (list
                                                           '(primitive
                                                              syntax-dispatch)
                                                           g$x$31046$1VmeqK
                                                           (list
                                                             'quote
                                                             g$p$31059$1VmeqK)))))
                                                    (g$gen-syntax-case$31018$1VmeqK
                                                      g$x$31046$1VmeqK
                                                      g$keys$31047$1VmeqK
                                                      g$clauses$31048$1VmeqK
                                                      g$r$31049$1VmeqK
                                                      g$mr$31050$1VmeqK))))
                                                (g$build-dispatch-call$31015$1VmeqK
                                                  g$pvars$31058$1VmeqK
                                                  g$expr$31053$1VmeqK
                                                  g$y$31061$1VmeqK
                                                  g$r$31049$1VmeqK
                                                  g$mr$31050$1VmeqK))))
                                            (if (eq? g$fender$31052$1VmeqK
                                                     '#t)
                                              g$y$31061$1VmeqK
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$call$31065$1VmeqK)
                                                    (list
                                                      'if
                                                      g$y$31061$1VmeqK
                                                      g$call$31065$1VmeqK
                                                      (list
                                                        'quote
                                                        '#f))))
                                                 (g$build-dispatch-call$31015$1VmeqK
                                                   g$pvars$31058$1VmeqK
                                                   g$fender$31052$1VmeqK
                                                   g$y$31061$1VmeqK
                                                   g$r$31049$1VmeqK
                                                   g$mr$31050$1VmeqK)))))))
                                        (g$gen-lexical$28659$1VmeqK
                                          'tmp)))))))
                              g$pvars$31057$1VmeqK
                              g$p$31056$1VmeqK)))))))
                   (g$gen-syntax-case$31018$1VmeqK
                     (case-lambda
                       ((g$x$31029$1VmeqK
                          g$keys$31030$1VmeqK
                          g$clauses$31031$1VmeqK
                          g$r$31032$1VmeqK
                          g$mr$31033$1VmeqK)
                        (if (null? g$clauses$31031$1VmeqK)
                          (list
                            '(primitive syntax-error)
                            g$x$31029$1VmeqK)
                          ((case-lambda
                             ((g$t$31034$1VmeqK)
                              ((case-lambda
                                 ((g$ls/false$31035$1VmeqK)
                                  (if g$ls/false$31035$1VmeqK
                                    (apply
                                      (case-lambda
                                        ((g$pat$31036$1VmeqK
                                           g$expr$31037$1VmeqK)
                                         (if (if (g$id?$28724$1VmeqK
                                                   g$pat$31036$1VmeqK)
                                               (if (not (g$bound-id-member?$28731$1VmeqK
                                                          g$pat$31036$1VmeqK
                                                          g$keys$31030$1VmeqK))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$29223$1VmeqK
                                                          g$pat$31036$1VmeqK)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$28728$1VmeqK
                                                 g$pat$31036$1VmeqK
                                                 (g$scheme-stx$29165$1VmeqK
                                                   '_))
                                             (g$chi-expr$29240$1VmeqK
                                               g$expr$31037$1VmeqK
                                               g$r$31032$1VmeqK
                                               g$mr$31033$1VmeqK)
                                             ((case-lambda
                                                ((g$lab$31038$1VmeqK
                                                   g$lex$31039$1VmeqK)
                                                 ((case-lambda
                                                    ((g$body$31040$1VmeqK)
                                                     (list
                                                       (g$build-lambda$28646$1VmeqK
                                                         '#f
                                                         (list
                                                           g$lex$31039$1VmeqK)
                                                         g$body$31040$1VmeqK)
                                                       g$x$31029$1VmeqK)))
                                                  (g$chi-expr$29240$1VmeqK
                                                    (g$add-subst$28714$1VmeqK
                                                      (g$make-full-rib$28690$1VmeqK
                                                        (list
                                                          g$pat$31036$1VmeqK)
                                                        (list
                                                          g$lab$31038$1VmeqK))
                                                      g$expr$31037$1VmeqK)
                                                    (cons
                                                      (cons
                                                        g$lab$31038$1VmeqK
                                                        (g$make-binding$28740$1VmeqK
                                                          'syntax
                                                          (cons
                                                            g$lex$31039$1VmeqK
                                                            '0)))
                                                      g$r$31032$1VmeqK)
                                                    g$mr$31033$1VmeqK))))
                                              (g$gen-label$28661$1VmeqK
                                                g$pat$31036$1VmeqK)
                                              (g$gen-lexical$28659$1VmeqK
                                                g$pat$31036$1VmeqK)))
                                           (g$gen-clause$31017$1VmeqK
                                             g$x$31029$1VmeqK
                                             g$keys$31030$1VmeqK
                                             (cdr g$clauses$31031$1VmeqK)
                                             g$r$31032$1VmeqK
                                             g$mr$31033$1VmeqK
                                             g$pat$31036$1VmeqK
                                             '#t
                                             g$expr$31037$1VmeqK))))
                                      g$ls/false$31035$1VmeqK)
                                    ((case-lambda
                                       ((g$t$31041$1VmeqK)
                                        ((case-lambda
                                           ((g$ls/false$31042$1VmeqK)
                                            (if g$ls/false$31042$1VmeqK
                                              (apply
                                                (case-lambda
                                                  ((g$pat$31043$1VmeqK
                                                     g$fender$31044$1VmeqK
                                                     g$expr$31045$1VmeqK)
                                                   (g$gen-clause$31017$1VmeqK
                                                     g$x$31029$1VmeqK
                                                     g$keys$31030$1VmeqK
                                                     (cdr g$clauses$31031$1VmeqK)
                                                     g$r$31032$1VmeqK
                                                     g$mr$31033$1VmeqK
                                                     g$pat$31043$1VmeqK
                                                     g$fender$31044$1VmeqK
                                                     g$expr$31045$1VmeqK)))
                                                g$ls/false$31042$1VmeqK)
                                              (g$syntax-violation$29341$1VmeqK
                                                '#f
                                                '"invalid syntax"
                                                g$t$31041$1VmeqK))))
                                         (g$syntax-dispatch$29222$1VmeqK
                                           g$t$31041$1VmeqK
                                           '(any any any)))))
                                     g$t$31034$1VmeqK))))
                               (g$syntax-dispatch$29222$1VmeqK
                                 g$t$31034$1VmeqK
                                 '(any any)))))
                           (car g$clauses$31031$1VmeqK)))))))
           (case-lambda
             ((g$e$31019$1VmeqK g$r$31020$1VmeqK g$mr$31021$1VmeqK)
              ((case-lambda
                 ((g$t$31022$1VmeqK)
                  ((case-lambda
                     ((g$ls/false$31023$1VmeqK)
                      (if g$ls/false$31023$1VmeqK
                        (apply
                          (case-lambda
                            ((g$expr$31024$1VmeqK
                               g$keys$31025$1VmeqK
                               g$clauses$31026$1VmeqK)
                             (begin
                               (g$verify-literals$29225$1VmeqK
                                 g$keys$31025$1VmeqK
                                 g$e$31019$1VmeqK)
                               ((case-lambda
                                  ((g$x$31027$1VmeqK)
                                   ((case-lambda
                                      ((g$body$31028$1VmeqK)
                                       (list
                                         (g$build-lambda$28646$1VmeqK
                                           '#f
                                           (list g$x$31027$1VmeqK)
                                           g$body$31028$1VmeqK)
                                         (g$chi-expr$29240$1VmeqK
                                           g$expr$31024$1VmeqK
                                           g$r$31020$1VmeqK
                                           g$mr$31021$1VmeqK))))
                                    (g$gen-syntax-case$31018$1VmeqK
                                      g$x$31027$1VmeqK
                                      g$keys$31025$1VmeqK
                                      g$clauses$31026$1VmeqK
                                      g$r$31020$1VmeqK
                                      g$mr$31021$1VmeqK))))
                                (g$gen-lexical$28659$1VmeqK 'tmp)))))
                          g$ls/false$31023$1VmeqK)
                        (g$syntax-violation$29341$1VmeqK
                          '#f
                          '"invalid syntax"
                          g$t$31022$1VmeqK))))
                   (g$syntax-dispatch$29222$1VmeqK
                     g$t$31022$1VmeqK
                     '(_ any each-any . each-any)))))
               g$e$31019$1VmeqK))))))))
   (g$ellipsis-map$29227$1VmeqK
     g$ellipsis-map$32822$1VmeqK
     (case-lambda
       ((g$proc$31085$1VmeqK g$ls$31086$1VmeqK . g$ls*$31087$1VmeqK)
        (letrec* ((g$who$31088$1VmeqK '...))
          (begin
            (if (not (list? g$ls$31086$1VmeqK))
              (assertion-violation
                g$who$31088$1VmeqK
                '"not a list"
                g$ls$31086$1VmeqK)
              (void))
            (if (not (null? g$ls*$31087$1VmeqK))
              ((case-lambda
                 ((g$n$31089$1VmeqK)
                  (g$for-each$20350$1VmeqK
                    (case-lambda
                      ((g$x$31090$1VmeqK)
                       (begin
                         (if (not (list? g$x$31090$1VmeqK))
                           (assertion-violation
                             g$who$31088$1VmeqK
                             '"not a list"
                             g$x$31090$1VmeqK)
                           (void))
                         (if (not (g$=$22210$1VmeqK
                                    (length g$x$31090$1VmeqK)
                                    g$n$31089$1VmeqK))
                           (assertion-violation
                             g$who$31088$1VmeqK
                             '"length mismatch"
                             g$ls$31086$1VmeqK
                             g$x$31090$1VmeqK)
                           (void)))))
                    g$ls*$31087$1VmeqK)))
               (length g$ls$31086$1VmeqK))
              (void))
            (apply
              g$map$20349$1VmeqK
              g$proc$31085$1VmeqK
              g$ls$31086$1VmeqK
              g$ls*$31087$1VmeqK))))))
   (g$syntax-transformer$29228$1VmeqK
     g$syntax-transformer$32823$1VmeqK
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$31091$1VmeqK
                     (case-lambda
                       ((g$src$31151$1VmeqK
                          g$e$31152$1VmeqK
                          g$r$31153$1VmeqK
                          g$maps$31154$1VmeqK
                          g$ellipsis?$31155$1VmeqK
                          g$vec?$31156$1VmeqK)
                        ((case-lambda
                           ((g$t$31157$1VmeqK)
                            ((case-lambda
                               ((g$ls/false$31158$1VmeqK)
                                (if (if g$ls/false$31158$1VmeqK
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$31159$1VmeqK)
                                             (g$ellipsis?$31155$1VmeqK
                                               g$dots$31159$1VmeqK)))
                                          g$ls/false$31158$1VmeqK))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$31160$1VmeqK)
                                       (g$syntax-violation$29341$1VmeqK
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$31151$1VmeqK)))
                                    g$ls/false$31158$1VmeqK)
                                  ((case-lambda
                                     ((g$t$31161$1VmeqK)
                                      ((case-lambda
                                         ((g$ls/false$31162$1VmeqK)
                                          (if (if g$ls/false$31162$1VmeqK
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$31163$1VmeqK)
                                                       (g$id?$28724$1VmeqK
                                                         g$id$31163$1VmeqK)))
                                                    g$ls/false$31162$1VmeqK))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$31164$1VmeqK)
                                                 ((case-lambda
                                                    ((g$label$31165$1VmeqK)
                                                     ((case-lambda
                                                        ((g$b$31166$1VmeqK)
                                                         (if (eq? (g$binding-type$28741$1VmeqK
                                                                    g$b$31166$1VmeqK)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$31169$1VmeqK)
                                                                    (g$gen-ref$31092$1VmeqK
                                                                      g$src$31151$1VmeqK
                                                                      (car g$var.lev$31169$1VmeqK)
                                                                      (cdr g$var.lev$31169$1VmeqK)
                                                                      g$maps$31154$1VmeqK)))
                                                                 (g$binding-value$28742$1VmeqK
                                                                   g$b$31166$1VmeqK))))
                                                             (case-lambda
                                                               ((g$var$31170$1VmeqK
                                                                  g$maps$31171$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$maps$31172$1VmeqK
                                                                      g$var$31173$1VmeqK)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$31173$1VmeqK)
                                                                      g$maps$31172$1VmeqK)))
                                                                 g$maps$31171$1VmeqK
                                                                 g$var$31170$1VmeqK))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$31152$1VmeqK)
                                                             g$maps$31154$1VmeqK))))
                                                      (g$label->binding$28739$1VmeqK
                                                        g$label$31165$1VmeqK
                                                        g$r$31153$1VmeqK))))
                                                  (g$id->label$28737$1VmeqK
                                                    g$e$31152$1VmeqK))))
                                              g$ls/false$31162$1VmeqK)
                                            ((case-lambda
                                               ((g$t$31174$1VmeqK)
                                                ((case-lambda
                                                   ((g$ls/false$31175$1VmeqK)
                                                    (if (if g$ls/false$31175$1VmeqK
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$31176$1VmeqK
                                                                   g$e$31177$1VmeqK)
                                                                 (g$ellipsis?$31155$1VmeqK
                                                                   g$dots$31176$1VmeqK)))
                                                              g$ls/false$31175$1VmeqK))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$31178$1VmeqK
                                                             g$e$31179$1VmeqK)
                                                           (if g$vec?$31156$1VmeqK
                                                             (g$syntax-violation$29341$1VmeqK
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$31151$1VmeqK)
                                                             (g$gen-syntax$31091$1VmeqK
                                                               g$src$31151$1VmeqK
                                                               g$e$31179$1VmeqK
                                                               g$r$31153$1VmeqK
                                                               g$maps$31154$1VmeqK
                                                               (case-lambda
                                                                 ((g$x$31180$1VmeqK)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$31175$1VmeqK)
                                                      ((case-lambda
                                                         ((g$t$31181$1VmeqK)
                                                          ((case-lambda
                                                             ((g$ls/false$31182$1VmeqK)
                                                              (if (if g$ls/false$31182$1VmeqK
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$31183$1VmeqK
                                                                             g$dots$31184$1VmeqK
                                                                             g$y$31185$1VmeqK)
                                                                           (g$ellipsis?$31155$1VmeqK
                                                                             g$dots$31184$1VmeqK)))
                                                                        g$ls/false$31182$1VmeqK))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$31186$1VmeqK
                                                                       g$dots$31187$1VmeqK
                                                                       g$y$31188$1VmeqK)
                                                                     ((letrec ((g$f$31189$1VmeqK
                                                                                 (case-lambda
                                                                                   ((g$y$31190$1VmeqK
                                                                                      g$k$31191$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$31192$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31193$1VmeqK)
                                                                                            (if g$ls/false$31193$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$31191$1VmeqK
                                                                                                     g$maps$31154$1VmeqK)))
                                                                                                g$ls/false$31193$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$31194$1VmeqK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$31195$1VmeqK)
                                                                                                      (if (if g$ls/false$31195$1VmeqK
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$31196$1VmeqK
                                                                                                                     g$y$31197$1VmeqK)
                                                                                                                   (g$ellipsis?$31155$1VmeqK
                                                                                                                     g$dots$31196$1VmeqK)))
                                                                                                                g$ls/false$31195$1VmeqK))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$31198$1VmeqK
                                                                                                               g$y$31199$1VmeqK)
                                                                                                             (g$f$31189$1VmeqK
                                                                                                               g$y$31199$1VmeqK
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$31200$1VmeqK)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$31191$1VmeqK
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$31200$1VmeqK))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$31203$1VmeqK
                                                                                                                         g$maps$31204$1VmeqK)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$31205$1VmeqK
                                                                                                                             g$x$31206$1VmeqK)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$31205$1VmeqK))
                                                                                                                             (g$syntax-violation$29341$1VmeqK
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$31151$1VmeqK)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$31094$1VmeqK
                                                                                                                                 g$x$31206$1VmeqK
                                                                                                                                 (car g$maps$31205$1VmeqK))
                                                                                                                               (cdr g$maps$31205$1VmeqK)))))
                                                                                                                        g$maps$31204$1VmeqK
                                                                                                                        g$x$31203$1VmeqK)))))))))
                                                                                                          g$ls/false$31195$1VmeqK)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$31207$1VmeqK)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$31208$1VmeqK)
                                                                                                                (if g$ls/false$31208$1VmeqK
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$31091$1VmeqK
                                                                                                                              g$src$31151$1VmeqK
                                                                                                                              g$y$31190$1VmeqK
                                                                                                                              g$r$31153$1VmeqK
                                                                                                                              g$maps$31154$1VmeqK
                                                                                                                              g$ellipsis?$31155$1VmeqK
                                                                                                                              g$vec?$31156$1VmeqK)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$31211$1VmeqK
                                                                                                                              g$maps$31212$1VmeqK)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$31213$1VmeqK
                                                                                                                                  g$y$31214$1VmeqK)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$31191$1VmeqK
                                                                                                                                       g$maps$31213$1VmeqK)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$31217$1VmeqK
                                                                                                                                       g$maps$31218$1VmeqK)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$31219$1VmeqK
                                                                                                                                           g$x$31220$1VmeqK)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$31093$1VmeqK
                                                                                                                                             g$x$31220$1VmeqK
                                                                                                                                             g$y$31214$1VmeqK)
                                                                                                                                           g$maps$31219$1VmeqK)))
                                                                                                                                      g$maps$31218$1VmeqK
                                                                                                                                      g$x$31217$1VmeqK))))))
                                                                                                                             g$maps$31212$1VmeqK
                                                                                                                             g$y$31211$1VmeqK))))))
                                                                                                                    g$ls/false$31208$1VmeqK)
                                                                                                                  (g$syntax-violation$29341$1VmeqK
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$31207$1VmeqK))))
                                                                                                             (g$syntax-dispatch$29222$1VmeqK
                                                                                                               g$t$31207$1VmeqK
                                                                                                               '_))))
                                                                                                         g$t$31194$1VmeqK))))
                                                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                                                     g$t$31194$1VmeqK
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$31192$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$31192$1VmeqK
                                                                                           '()))))
                                                                                     g$y$31190$1VmeqK)))))
                                                                        g$f$31189$1VmeqK)
                                                                      g$y$31188$1VmeqK
                                                                      (case-lambda
                                                                        ((g$maps$31221$1VmeqK)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$31091$1VmeqK
                                                                                g$src$31151$1VmeqK
                                                                                g$x$31186$1VmeqK
                                                                                g$r$31153$1VmeqK
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$31221$1VmeqK)
                                                                                g$ellipsis?$31155$1VmeqK
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$31224$1VmeqK
                                                                                g$maps$31225$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$maps$31226$1VmeqK
                                                                                    g$x$31227$1VmeqK)
                                                                                  (if (null?
                                                                                        (car g$maps$31226$1VmeqK))
                                                                                    (g$syntax-violation$29341$1VmeqK
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$31151$1VmeqK)
                                                                                    (values
                                                                                      (g$gen-map$31095$1VmeqK
                                                                                        g$x$31227$1VmeqK
                                                                                        (car g$maps$31226$1VmeqK))
                                                                                      (cdr g$maps$31226$1VmeqK)))))
                                                                               g$maps$31225$1VmeqK
                                                                               g$x$31224$1VmeqK)))))))))
                                                                  g$ls/false$31182$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$t$31228$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$ls/false$31229$1VmeqK)
                                                                        (if g$ls/false$31229$1VmeqK
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$31230$1VmeqK
                                                                                 g$y$31231$1VmeqK)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$31091$1VmeqK
                                                                                      g$src$31151$1VmeqK
                                                                                      g$x$31230$1VmeqK
                                                                                      g$r$31153$1VmeqK
                                                                                      g$maps$31154$1VmeqK
                                                                                      g$ellipsis?$31155$1VmeqK
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$31234$1VmeqK
                                                                                      g$maps$31235$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$maps$31236$1VmeqK
                                                                                          g$xnew$31237$1VmeqK)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$31091$1VmeqK
                                                                                               g$src$31151$1VmeqK
                                                                                               g$y$31231$1VmeqK
                                                                                               g$r$31153$1VmeqK
                                                                                               g$maps$31236$1VmeqK
                                                                                               g$ellipsis?$31155$1VmeqK
                                                                                               g$vec?$31156$1VmeqK)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$31240$1VmeqK
                                                                                               g$maps$31241$1VmeqK)
                                                                                             ((case-lambda
                                                                                                ((g$maps$31242$1VmeqK
                                                                                                   g$ynew$31243$1VmeqK)
                                                                                                 (values
                                                                                                   (g$gen-cons$31096$1VmeqK
                                                                                                     g$e$31152$1VmeqK
                                                                                                     g$x$31230$1VmeqK
                                                                                                     g$y$31231$1VmeqK
                                                                                                     g$xnew$31237$1VmeqK
                                                                                                     g$ynew$31243$1VmeqK)
                                                                                                   g$maps$31242$1VmeqK)))
                                                                                              g$maps$31241$1VmeqK
                                                                                              g$ynew$31240$1VmeqK))))))
                                                                                     g$maps$31235$1VmeqK
                                                                                     g$xnew$31234$1VmeqK))))))
                                                                            g$ls/false$31229$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$31244$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31245$1VmeqK)
                                                                                  (if g$ls/false$31245$1VmeqK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$31246$1VmeqK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$31091$1VmeqK
                                                                                                g$src$31151$1VmeqK
                                                                                                g$ls$31246$1VmeqK
                                                                                                g$r$31153$1VmeqK
                                                                                                g$maps$31154$1VmeqK
                                                                                                g$ellipsis?$31155$1VmeqK
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$31249$1VmeqK
                                                                                                g$maps$31250$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$31251$1VmeqK
                                                                                                    g$lsnew$31252$1VmeqK)
                                                                                                  (values
                                                                                                    (g$gen-vector$31097$1VmeqK
                                                                                                      g$e$31152$1VmeqK
                                                                                                      g$ls$31246$1VmeqK
                                                                                                      g$lsnew$31252$1VmeqK)
                                                                                                    g$maps$31251$1VmeqK)))
                                                                                               g$maps$31250$1VmeqK
                                                                                               g$lsnew$31249$1VmeqK))))))
                                                                                      g$ls/false$31245$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$31253$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31254$1VmeqK)
                                                                                            (if g$ls/false$31254$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$31152$1VmeqK)
                                                                                                     g$maps$31154$1VmeqK)))
                                                                                                g$ls/false$31254$1VmeqK)
                                                                                              (g$syntax-violation$29341$1VmeqK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$31253$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$31253$1VmeqK
                                                                                           '_))))
                                                                                     g$t$31244$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$31244$1VmeqK
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$31228$1VmeqK))))
                                                                     (g$syntax-dispatch$29222$1VmeqK
                                                                       g$t$31228$1VmeqK
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$31181$1VmeqK))))
                                                           (g$syntax-dispatch$29222$1VmeqK
                                                             g$t$31181$1VmeqK
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$31174$1VmeqK))))
                                                 (g$syntax-dispatch$29222$1VmeqK
                                                   g$t$31174$1VmeqK
                                                   '(any any)))))
                                             g$t$31161$1VmeqK))))
                                       (g$syntax-dispatch$29222$1VmeqK
                                         g$t$31161$1VmeqK
                                         'any))))
                                   g$t$31157$1VmeqK))))
                             (g$syntax-dispatch$29222$1VmeqK
                               g$t$31157$1VmeqK
                               'any))))
                         g$e$31152$1VmeqK))))
                   (g$gen-ref$31092$1VmeqK
                     (case-lambda
                       ((g$src$31138$1VmeqK
                          g$var$31139$1VmeqK
                          g$level$31140$1VmeqK
                          g$maps$31141$1VmeqK)
                        (if (g$=$22210$1VmeqK g$level$31140$1VmeqK '0)
                          (values
                            g$var$31139$1VmeqK
                            g$maps$31141$1VmeqK)
                          (if (null? g$maps$31141$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$31138$1VmeqK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$31092$1VmeqK
                                   g$src$31138$1VmeqK
                                   g$var$31139$1VmeqK
                                   (- g$level$31140$1VmeqK '1)
                                   (cdr g$maps$31141$1VmeqK))))
                              (case-lambda
                                ((g$outer-var$31144$1VmeqK
                                   g$outer-maps$31145$1VmeqK)
                                 ((case-lambda
                                    ((g$outer-maps$31146$1VmeqK
                                       g$outer-var$31147$1VmeqK)
                                     ((case-lambda
                                        ((g$t$31148$1VmeqK)
                                         (if g$t$31148$1VmeqK
                                           ((case-lambda
                                              ((g$b$31149$1VmeqK)
                                               (values
                                                 (cdr g$b$31149$1VmeqK)
                                                 g$maps$31141$1VmeqK)))
                                            g$t$31148$1VmeqK)
                                           (begin
                                             '#f
                                             ((case-lambda
                                                ((g$inner-var$31150$1VmeqK)
                                                 (values
                                                   g$inner-var$31150$1VmeqK
                                                   (cons
                                                     (cons
                                                       (cons
                                                         g$outer-var$31147$1VmeqK
                                                         g$inner-var$31150$1VmeqK)
                                                       (car g$maps$31141$1VmeqK))
                                                     g$outer-maps$31146$1VmeqK))))
                                              (g$gen-lexical$28659$1VmeqK
                                                'tmp))))))
                                      (g$assq$20337$1VmeqK
                                        g$outer-var$31147$1VmeqK
                                        (car g$maps$31141$1VmeqK)))))
                                  g$outer-maps$31145$1VmeqK
                                  g$outer-var$31144$1VmeqK)))))))))
                   (g$gen-append$31093$1VmeqK
                     (case-lambda
                       ((g$x$31136$1VmeqK g$y$31137$1VmeqK)
                        (if (equal? g$y$31137$1VmeqK ''())
                          g$x$31136$1VmeqK
                          (list
                            'append
                            g$x$31136$1VmeqK
                            g$y$31137$1VmeqK)))))
                   (g$gen-mappend$31094$1VmeqK
                     (case-lambda
                       ((g$e$31134$1VmeqK g$map-env$31135$1VmeqK)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$31095$1VmeqK
                            g$e$31134$1VmeqK
                            g$map-env$31135$1VmeqK)))))
                   (g$gen-map$31095$1VmeqK
                     (case-lambda
                       ((g$e$31125$1VmeqK g$map-env$31126$1VmeqK)
                        ((case-lambda
                           ((g$formals$31127$1VmeqK
                              g$actuals$31128$1VmeqK)
                            (if (eq? (car g$e$31125$1VmeqK) 'ref)
                              (car g$actuals$31128$1VmeqK)
                              (if (g$for-all$20347$1VmeqK
                                    (case-lambda
                                      ((g$x$31129$1VmeqK)
                                       (if (eq? (car g$x$31129$1VmeqK)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$20341$1VmeqK
                                             (g$cadr$21200$1VmeqK
                                               g$x$31129$1VmeqK)
                                             g$formals$31127$1VmeqK))
                                         '#f)))
                                    (cdr g$e$31125$1VmeqK))
                                ((case-lambda
                                   ((g$args$31130$1VmeqK)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$31125$1VmeqK))
                                        g$args$31130$1VmeqK))))
                                 (g$map$20349$1VmeqK
                                   ((case-lambda
                                      ((g$r$31131$1VmeqK)
                                       (case-lambda
                                         ((g$x$31132$1VmeqK)
                                          (cdr (g$assq$20337$1VmeqK
                                                 (g$cadr$21200$1VmeqK
                                                   g$x$31132$1VmeqK)
                                                 g$r$31131$1VmeqK))))))
                                    (g$map$20349$1VmeqK
                                      cons
                                      g$formals$31127$1VmeqK
                                      g$actuals$31128$1VmeqK))
                                   (cdr g$e$31125$1VmeqK)))
                                (begin
                                  '#f
                                  (g$cons*$20351$1VmeqK
                                    'map
                                    (list
                                      'lambda
                                      g$formals$31127$1VmeqK
                                      g$e$31125$1VmeqK)
                                    g$actuals$31128$1VmeqK))))))
                         (g$map$20349$1VmeqK cdr g$map-env$31126$1VmeqK)
                         (g$map$20349$1VmeqK
                           (case-lambda
                             ((g$x$31133$1VmeqK)
                              (list 'ref (car g$x$31133$1VmeqK))))
                           g$map-env$31126$1VmeqK)))))
                   (g$gen-cons$31096$1VmeqK
                     (case-lambda
                       ((g$e$31117$1VmeqK
                          g$x$31118$1VmeqK
                          g$y$31119$1VmeqK
                          g$xnew$31120$1VmeqK
                          g$ynew$31121$1VmeqK)
                        ((case-lambda
                           ((g$t$31122$1VmeqK)
                            (if (eqv? g$t$31122$1VmeqK 'quote)
                              (if (eq? (car g$xnew$31120$1VmeqK) 'quote)
                                ((case-lambda
                                   ((g$xnew$31123$1VmeqK
                                      g$ynew$31124$1VmeqK)
                                    (if (if (eq? g$xnew$31123$1VmeqK
                                                 g$x$31118$1VmeqK)
                                          (begin
                                            '#f
                                            (eq? g$ynew$31124$1VmeqK
                                                 g$y$31119$1VmeqK))
                                          '#f)
                                      (list 'quote g$e$31117$1VmeqK)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$31123$1VmeqK
                                          g$ynew$31124$1VmeqK)))))
                                 (g$cadr$21200$1VmeqK
                                   g$xnew$31120$1VmeqK)
                                 (g$cadr$21200$1VmeqK
                                   g$ynew$31121$1VmeqK))
                                (if (null?
                                      (g$cadr$21200$1VmeqK
                                        g$ynew$31121$1VmeqK))
                                  (list 'list g$xnew$31120$1VmeqK)
                                  (list
                                    'cons
                                    g$xnew$31120$1VmeqK
                                    g$ynew$31121$1VmeqK)))
                              (if (eqv? g$t$31122$1VmeqK 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$31120$1VmeqK
                                    (cdr g$ynew$31121$1VmeqK)))
                                (begin
                                  '#f
                                  (list
                                    'cons
                                    g$xnew$31120$1VmeqK
                                    g$ynew$31121$1VmeqK))))))
                         (car g$ynew$31121$1VmeqK)))))
                   (g$gen-vector$31097$1VmeqK
                     (case-lambda
                       ((g$e$31114$1VmeqK
                          g$ls$31115$1VmeqK
                          g$lsnew$31116$1VmeqK)
                        (if (eq? (car g$lsnew$31116$1VmeqK) 'quote)
                          (if (eq? (g$cadr$21200$1VmeqK
                                     g$lsnew$31116$1VmeqK)
                                   g$ls$31115$1VmeqK)
                            (list 'quote g$e$31114$1VmeqK)
                            (list
                              'quote
                              (g$list->vector$21192$1VmeqK
                                (g$cadr$21200$1VmeqK
                                  g$lsnew$31116$1VmeqK))))
                          (if (eq? (car g$lsnew$31116$1VmeqK) 'list)
                            (cons 'vector (cdr g$lsnew$31116$1VmeqK))
                            (begin
                              '#f
                              (list
                                'list->vector
                                g$lsnew$31116$1VmeqK)))))))
                   (g$regen$31098$1VmeqK
                     (case-lambda
                       ((g$x$31111$1VmeqK)
                        ((case-lambda
                           ((g$t$31112$1VmeqK)
                            (if (eqv? g$t$31112$1VmeqK 'ref)
                              (g$cadr$21200$1VmeqK g$x$31111$1VmeqK)
                              (if (eqv? g$t$31112$1VmeqK 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$21200$1VmeqK
                                    g$x$31111$1VmeqK))
                                (if (eqv? g$t$31112$1VmeqK 'quote)
                                  (list
                                    'quote
                                    (g$cadr$21200$1VmeqK
                                      g$x$31111$1VmeqK))
                                  (if (eqv? g$t$31112$1VmeqK 'lambda)
                                    (g$build-lambda$28646$1VmeqK
                                      '#f
                                      (g$cadr$21200$1VmeqK
                                        g$x$31111$1VmeqK)
                                      (g$regen$31098$1VmeqK
                                        (g$caddr$21206$1VmeqK
                                          g$x$31111$1VmeqK)))
                                    (if (eqv? g$t$31112$1VmeqK 'map)
                                      ((case-lambda
                                         ((g$ls$31113$1VmeqK)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$31113$1VmeqK)))
                                       (g$map$20349$1VmeqK
                                         g$regen$31098$1VmeqK
                                         (cdr g$x$31111$1VmeqK)))
                                      (begin
                                        '#f
                                        (cons
                                          (list
                                            'primitive
                                            (car g$x$31111$1VmeqK))
                                          (g$map$20349$1VmeqK
                                            g$regen$31098$1VmeqK
                                            (cdr g$x$31111$1VmeqK)))))))))))
                         (car g$x$31111$1VmeqK))))))
           (case-lambda
             ((g$e$31099$1VmeqK g$r$31100$1VmeqK g$mr$31101$1VmeqK)
              ((case-lambda
                 ((g$t$31102$1VmeqK)
                  ((case-lambda
                     ((g$ls/false$31103$1VmeqK)
                      (if g$ls/false$31103$1VmeqK
                        (apply
                          (case-lambda
                            ((g$x$31104$1VmeqK)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$31091$1VmeqK
                                    g$e$31099$1VmeqK
                                    g$x$31104$1VmeqK
                                    g$r$31100$1VmeqK
                                    '()
                                    g$ellipsis?$29223$1VmeqK
                                    '#f)))
                               (case-lambda
                                 ((g$e$31107$1VmeqK g$maps$31108$1VmeqK)
                                  ((case-lambda
                                     ((g$maps$31109$1VmeqK
                                        g$e$31110$1VmeqK)
                                      (g$regen$31098$1VmeqK
                                        g$e$31110$1VmeqK)))
                                   g$maps$31108$1VmeqK
                                   g$e$31107$1VmeqK))))))
                          g$ls/false$31103$1VmeqK)
                        (g$syntax-violation$29341$1VmeqK
                          '#f
                          '"invalid syntax"
                          g$t$31102$1VmeqK))))
                   (g$syntax-dispatch$29222$1VmeqK
                     g$t$31102$1VmeqK
                     '(_ any)))))
               g$e$31099$1VmeqK))))))))
   (g$core-macro-transformer$29229$1VmeqK
     g$core-macro-transformer$32824$1VmeqK
     (case-lambda
       ((g$name$31255$1VmeqK)
        ((case-lambda
           ((g$t$31256$1VmeqK)
            (if (eqv? g$t$31256$1VmeqK 'quote)
              g$quote-transformer$29182$1VmeqK
              (if (eqv? g$t$31256$1VmeqK 'lambda)
                g$lambda-transformer$29184$1VmeqK
                (if (eqv? g$t$31256$1VmeqK 'case-lambda)
                  g$case-lambda-transformer$29183$1VmeqK
                  (if (eqv? g$t$31256$1VmeqK 'letrec)
                    g$letrec-transformer$29172$1VmeqK
                    (if (eqv? g$t$31256$1VmeqK 'letrec*)
                      g$letrec*-transformer$29173$1VmeqK
                      (if (eqv? g$t$31256$1VmeqK 'if)
                        g$if-transformer$29180$1VmeqK
                        (if (eqv? g$t$31256$1VmeqK 'foreign-call)
                          g$foreign-call-transformer$29220$1VmeqK
                          (if (eqv? g$t$31256$1VmeqK 'syntax-case)
                            g$syntax-case-transformer$29226$1VmeqK
                            (if (eqv? g$t$31256$1VmeqK 'syntax)
                              g$syntax-transformer$29228$1VmeqK
                              (if (eqv?
                                    g$t$31256$1VmeqK
                                    'type-descriptor)
                                g$type-descriptor-transformer$29175$1VmeqK
                                (if (eqv?
                                      g$t$31256$1VmeqK
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$29176$1VmeqK
                                  (if (eqv?
                                        g$t$31256$1VmeqK
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$29177$1VmeqK
                                    (if (eqv?
                                          g$t$31256$1VmeqK
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$29174$1VmeqK
                                      (begin
                                        '#f
                                        (assertion-violation
                                          'macro-transformer
                                          '"BUG: cannot find transformer"
                                          g$name$31255$1VmeqK)))))))))))))))))
         g$name$31255$1VmeqK))))
   (g$file-options-macro$29230$1VmeqK
     g$file-options-macro$32825$1VmeqK
     (case-lambda
       ((g$x$31257$1VmeqK)
        (letrec* ((g$valid-option?$31258$1VmeqK
                    (case-lambda
                      ((g$x$31263$1VmeqK)
                       (if (g$id?$28724$1VmeqK g$x$31263$1VmeqK)
                         (begin
                           '#f
                           (g$memq$20341$1VmeqK
                             (g$id->sym$28725$1VmeqK g$x$31263$1VmeqK)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$31259$1VmeqK)
              ((case-lambda
                 ((g$ls/false$31260$1VmeqK)
                  (if (if g$ls/false$31260$1VmeqK
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$31261$1VmeqK)
                               (if (g$for-all$20347$1VmeqK
                                     g$valid-option?$31258$1VmeqK
                                     g$opt*$31261$1VmeqK)
                                 (begin
                                   '#f
                                   (g$file-options-spec$27567$1VmeqK
                                     (g$map$20349$1VmeqK
                                       g$id->sym$28725$1VmeqK
                                       g$opt*$31261$1VmeqK)))
                                 '#f)))
                            g$ls/false$31260$1VmeqK))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$31262$1VmeqK)
                         (g$bless$29185$1VmeqK
                           (list
                             'quote
                             (g$file-options-spec$27567$1VmeqK
                               (g$map$20349$1VmeqK
                                 g$id->sym$28725$1VmeqK
                                 g$opt*$31262$1VmeqK))))))
                      g$ls/false$31260$1VmeqK)
                    (g$syntax-violation$29341$1VmeqK
                      '#f
                      '"invalid syntax"
                      g$t$31259$1VmeqK))))
               (g$syntax-dispatch$29222$1VmeqK
                 g$t$31259$1VmeqK
                 '(_ . each-any)))))
           g$x$31257$1VmeqK)))))
   (g$symbol-macro$29231$1VmeqK
     g$symbol-macro$32826$1VmeqK
     (case-lambda
       ((g$x$31264$1VmeqK g$set$31265$1VmeqK)
        ((case-lambda
           ((g$t$31266$1VmeqK)
            ((case-lambda
               ((g$ls/false$31267$1VmeqK)
                (if (if g$ls/false$31267$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$31268$1VmeqK)
                             (if (g$id?$28724$1VmeqK
                                   g$name$31268$1VmeqK)
                               (begin
                                 '#f
                                 (g$memq$20341$1VmeqK
                                   (g$id->sym$28725$1VmeqK
                                     g$name$31268$1VmeqK)
                                   g$set$31265$1VmeqK))
                               '#f)))
                          g$ls/false$31267$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$31269$1VmeqK)
                       (g$bless$29185$1VmeqK
                         (list 'quote g$name$31269$1VmeqK))))
                    g$ls/false$31267$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$31266$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31266$1VmeqK
               '(_ any)))))
         g$x$31264$1VmeqK))))
   (g$macro-transformer$29232$1VmeqK
     g$macro-transformer$32827$1VmeqK
     (case-lambda
       ((g$x$31270$1VmeqK)
        (if (g$procedure?$21183$1VmeqK g$x$31270$1VmeqK)
          g$x$31270$1VmeqK
          (if (g$symbol?$21181$1VmeqK g$x$31270$1VmeqK)
            ((case-lambda
               ((g$t$31271$1VmeqK)
                (if (eqv? g$t$31271$1VmeqK 'define-record-type)
                  g$define-record-type-macro$29216$1VmeqK
                  (if (eqv? g$t$31271$1VmeqK 'define-struct)
                    g$define-struct-macro$29215$1VmeqK
                    (if (eqv? g$t$31271$1VmeqK 'include)
                      g$include-macro$29210$1VmeqK
                      (if (eqv? g$t$31271$1VmeqK 'cond)
                        g$cond-macro$29208$1VmeqK
                        (if (eqv? g$t$31271$1VmeqK 'let)
                          g$let-macro$29188$1VmeqK
                          (if (eqv? g$t$31271$1VmeqK 'do)
                            g$do-macro$29204$1VmeqK
                            (if (eqv? g$t$31271$1VmeqK 'or)
                              g$or-macro$29206$1VmeqK
                              (if (eqv? g$t$31271$1VmeqK 'and)
                                g$and-macro$29207$1VmeqK
                                (if (eqv? g$t$31271$1VmeqK 'let*)
                                  g$let*-macro$29205$1VmeqK
                                  (if (eqv?
                                        g$t$31271$1VmeqK
                                        'let-values)
                                    g$let-values-macro$29189$1VmeqK
                                    (if (eqv?
                                          g$t$31271$1VmeqK
                                          'let*-values)
                                      g$let*-values-macro$29190$1VmeqK
                                      (if (eqv?
                                            g$t$31271$1VmeqK
                                            'syntax-rules)
                                        g$syntax-rules-macro$29212$1VmeqK
                                        (if (eqv?
                                              g$t$31271$1VmeqK
                                              'quasiquote)
                                          g$quasiquote-macro$29213$1VmeqK
                                          (if (eqv?
                                                g$t$31271$1VmeqK
                                                'quasisyntax)
                                            g$quasisyntax-macro$29214$1VmeqK
                                            (if (eqv?
                                                  g$t$31271$1VmeqK
                                                  'with-syntax)
                                              g$with-syntax-macro$29186$1VmeqK
                                              (if (eqv?
                                                    g$t$31271$1VmeqK
                                                    'when)
                                                g$when-macro$29178$1VmeqK
                                                (if (eqv?
                                                      g$t$31271$1VmeqK
                                                      'unless)
                                                  g$unless-macro$29179$1VmeqK
                                                  (if (eqv?
                                                        g$t$31271$1VmeqK
                                                        'case)
                                                    g$case-macro$29181$1VmeqK
                                                    (if (eqv?
                                                          g$t$31271$1VmeqK
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$29203$1VmeqK
                                                      (if (eqv?
                                                            g$t$31271$1VmeqK
                                                            'time)
                                                        g$time-macro$29199$1VmeqK
                                                        (if (eqv?
                                                              g$t$31271$1VmeqK
                                                              'delay)
                                                          g$delay-macro$29200$1VmeqK
                                                          (if (eqv?
                                                                g$t$31271$1VmeqK
                                                                'assert)
                                                            g$assert-macro$29201$1VmeqK
                                                            (if (eqv?
                                                                  g$t$31271$1VmeqK
                                                                  'endianness)
                                                              g$endianness-macro$29202$1VmeqK
                                                              (if (eqv?
                                                                    g$t$31271$1VmeqK
                                                                    'guard)
                                                                g$guard-macro$29197$1VmeqK
                                                                (if (eqv?
                                                                      g$t$31271$1VmeqK
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$29198$1VmeqK
                                                                  (if (eqv?
                                                                        g$t$31271$1VmeqK
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$29191$1VmeqK
                                                                    (if (eqv?
                                                                          g$t$31271$1VmeqK
                                                                          'trace-define)
                                                                      g$trace-define-macro$29192$1VmeqK
                                                                      (if (eqv?
                                                                            g$t$31271$1VmeqK
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$29193$1VmeqK
                                                                        (if (eqv?
                                                                              g$t$31271$1VmeqK
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$29195$1VmeqK
                                                                          (if (eqv?
                                                                                g$t$31271$1VmeqK
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$29196$1VmeqK
                                                                            (if (eqv?
                                                                                  g$t$31271$1VmeqK
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$29217$1VmeqK
                                                                              (if (eqv?
                                                                                    g$t$31271$1VmeqK
                                                                                    'parameterize)
                                                                                g$parameterize-macro$29219$1VmeqK
                                                                                (if (eqv?
                                                                                      g$t$31271$1VmeqK
                                                                                      'include-into)
                                                                                  g$include-into-macro$29211$1VmeqK
                                                                                  (if (eqv?
                                                                                        g$t$31271$1VmeqK
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$31272$1VmeqK)
                                                                                       (g$symbol-macro$29231$1VmeqK
                                                                                         g$x$31272$1VmeqK
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$31271$1VmeqK
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$31273$1VmeqK)
                                                                                         (g$symbol-macro$29231$1VmeqK
                                                                                           g$x$31273$1VmeqK
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$31271$1VmeqK
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$31274$1VmeqK)
                                                                                           (g$symbol-macro$29231$1VmeqK
                                                                                             g$x$31274$1VmeqK
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$31271$1VmeqK
                                                                                              'file-options)
                                                                                          g$file-options-macro$29230$1VmeqK
                                                                                          (if (g$memv$20342$1VmeqK
                                                                                                g$t$31271$1VmeqK
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$29218$1VmeqK
                                                                                            (begin
                                                                                              '#f
                                                                                              (error
                                                                                                'macro-transformer
                                                                                                '"BUG: invalid macro"
                                                                                                g$x$31270$1VmeqK))))))))))))))))))))))))))))))))))))))))))
             g$x$31270$1VmeqK)
            (begin
              '#f
              (error
                'core-macro-transformer
                '"BUG: invalid macro"
                g$x$31270$1VmeqK)))))))
   (g$local-macro-transformer$29233$1VmeqK
     g$local-macro-transformer$32828$1VmeqK
     (case-lambda ((g$x$31275$1VmeqK) (car g$x$31275$1VmeqK))))
   (g$do-macro-call$29234$1VmeqK
     g$do-macro-call$32829$1VmeqK
     (case-lambda
       ((g$transformer$31276$1VmeqK
          g$expr$31277$1VmeqK
          g$r$31278$1VmeqK)
        (letrec* ((g$return$31279$1VmeqK
                    (case-lambda
                      ((g$x$31287$1VmeqK)
                       (begin
                         ((letrec ((g$f$31288$1VmeqK
                                     (case-lambda
                                       ((g$x$31289$1VmeqK)
                                        (if (not (g$stx?$28696$1VmeqK
                                                   g$x$31289$1VmeqK))
                                          (if (pair? g$x$31289$1VmeqK)
                                            (begin
                                              (g$f$31288$1VmeqK
                                                (car g$x$31289$1VmeqK))
                                              (g$f$31288$1VmeqK
                                                (cdr g$x$31289$1VmeqK)))
                                            (if (g$vector?$21179$1VmeqK
                                                  g$x$31289$1VmeqK)
                                              (g$vector-for-each$21249$1VmeqK
                                                g$f$31288$1VmeqK
                                                g$x$31289$1VmeqK)
                                              (if (g$symbol?$21181$1VmeqK
                                                    g$x$31289$1VmeqK)
                                                (g$syntax-violation$29341$1VmeqK
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$31277$1VmeqK
                                                  g$x$31289$1VmeqK)
                                                (void))))
                                          (void))))))
                            g$f$31288$1VmeqK)
                          g$x$31287$1VmeqK)
                         (g$add-mark$28713$1VmeqK
                           (g$gen-mark$28708$1VmeqK)
                           g$x$31287$1VmeqK
                           g$expr$31277$1VmeqK))))))
          ((case-lambda
             ((g$x$31280$1VmeqK)
              (if (g$procedure?$21183$1VmeqK g$x$31280$1VmeqK)
                (g$return$31279$1VmeqK
                  (g$x$31280$1VmeqK
                    (case-lambda
                      ((g$id$31281$1VmeqK)
                       (begin
                         (if (not (g$id?$28724$1VmeqK
                                    g$id$31281$1VmeqK))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$31281$1VmeqK)
                           (void))
                         ((case-lambda
                            ((g$label$31282$1VmeqK)
                             ((case-lambda
                                ((g$binding$31283$1VmeqK)
                                 ((case-lambda
                                    ((g$t$31284$1VmeqK)
                                     (if (eqv?
                                           g$t$31284$1VmeqK
                                           'local-ctv)
                                       (g$cadr$21200$1VmeqK
                                         g$binding$31283$1VmeqK)
                                       (if (eqv?
                                             g$t$31284$1VmeqK
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$31285$1VmeqK
                                               g$loc$31286$1VmeqK)
                                             (begin
                                               (g$visit-library$28431$1VmeqK
                                                 g$lib$31285$1VmeqK)
                                               (symbol-value
                                                 g$loc$31286$1VmeqK))))
                                          (g$cadr$21200$1VmeqK
                                            g$binding$31283$1VmeqK)
                                          (g$cddr$21202$1VmeqK
                                            g$binding$31283$1VmeqK))
                                         (begin '#f '#f)))))
                                  (car g$binding$31283$1VmeqK))))
                              (g$label->binding$28739$1VmeqK
                                g$label$31282$1VmeqK
                                g$r$31278$1VmeqK))))
                          (g$id->label$28737$1VmeqK
                            g$id$31281$1VmeqK)))))))
                (g$return$31279$1VmeqK g$x$31280$1VmeqK))))
           (g$transformer$31276$1VmeqK
             (g$add-mark$28713$1VmeqK
               g$anti-mark$28709$1VmeqK
               g$expr$31277$1VmeqK
               '#f)))))))
   (g$chi-macro$29235$1VmeqK
     g$chi-macro$32830$1VmeqK
     (case-lambda
       ((g$p$31290$1VmeqK g$e$31291$1VmeqK g$r$31292$1VmeqK)
        (g$do-macro-call$29234$1VmeqK
          (g$macro-transformer$29232$1VmeqK g$p$31290$1VmeqK)
          g$e$31291$1VmeqK
          g$r$31292$1VmeqK))))
   (g$chi-local-macro$29236$1VmeqK
     g$chi-local-macro$32831$1VmeqK
     (case-lambda
       ((g$p$31293$1VmeqK g$e$31294$1VmeqK g$r$31295$1VmeqK)
        (g$do-macro-call$29234$1VmeqK
          (g$local-macro-transformer$29233$1VmeqK g$p$31293$1VmeqK)
          g$e$31294$1VmeqK
          g$r$31295$1VmeqK))))
   (g$chi-global-macro$29237$1VmeqK
     g$chi-global-macro$32832$1VmeqK
     (case-lambda
       ((g$p$31296$1VmeqK g$e$31297$1VmeqK g$r$31298$1VmeqK)
        ((case-lambda
           ((g$lib$31299$1VmeqK g$loc$31300$1VmeqK)
            (begin
              (g$visit-library$28431$1VmeqK g$lib$31299$1VmeqK)
              ((case-lambda
                 ((g$x$31301$1VmeqK)
                  ((case-lambda
                     ((g$transformer$31302$1VmeqK)
                      (g$do-macro-call$29234$1VmeqK
                        g$transformer$31302$1VmeqK
                        g$e$31297$1VmeqK
                        g$r$31298$1VmeqK)))
                   (if (g$procedure?$21183$1VmeqK g$x$31301$1VmeqK)
                     g$x$31301$1VmeqK
                     (begin
                       '#f
                       (assertion-violation
                         'chi-global-macro
                         '"BUG: not a procedure"
                         g$x$31301$1VmeqK))))))
               (symbol-value g$loc$31300$1VmeqK)))))
         (car g$p$31296$1VmeqK)
         (cdr g$p$31296$1VmeqK)))))
   (g$chi-expr*$29238$1VmeqK
     g$chi-expr*$32833$1VmeqK
     (case-lambda
       ((g$e*$31303$1VmeqK g$r$31304$1VmeqK g$mr$31305$1VmeqK)
        (if (null? g$e*$31303$1VmeqK)
          '()
          (begin
            '#f
            ((case-lambda
               ((g$e$31306$1VmeqK)
                (cons
                  g$e$31306$1VmeqK
                  (g$chi-expr*$29238$1VmeqK
                    (cdr g$e*$31303$1VmeqK)
                    g$r$31304$1VmeqK
                    g$mr$31305$1VmeqK))))
             (g$chi-expr$29240$1VmeqK
               (car g$e*$31303$1VmeqK)
               g$r$31304$1VmeqK
               g$mr$31305$1VmeqK)))))))
   (g$chi-application$29239$1VmeqK
     g$chi-application$32834$1VmeqK
     (case-lambda
       ((g$e$31307$1VmeqK g$r$31308$1VmeqK g$mr$31309$1VmeqK)
        ((case-lambda
           ((g$t$31310$1VmeqK)
            ((case-lambda
               ((g$ls/false$31311$1VmeqK)
                (if g$ls/false$31311$1VmeqK
                  (apply
                    (case-lambda
                      ((g$rator$31312$1VmeqK g$rands$31313$1VmeqK)
                       ((case-lambda
                          ((g$rator$31314$1VmeqK)
                           (cons
                             g$rator$31314$1VmeqK
                             (g$chi-expr*$29238$1VmeqK
                               g$rands$31313$1VmeqK
                               g$r$31308$1VmeqK
                               g$mr$31309$1VmeqK))))
                        (g$chi-expr$29240$1VmeqK
                          g$rator$31312$1VmeqK
                          g$r$31308$1VmeqK
                          g$mr$31309$1VmeqK))))
                    g$ls/false$31311$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$31310$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31310$1VmeqK
               '(any . each-any)))))
         g$e$31307$1VmeqK))))
   (g$chi-expr$29240$1VmeqK
     g$chi-expr$32835$1VmeqK
     (case-lambda
       ((g$e$31315$1VmeqK g$r$31316$1VmeqK g$mr$31317$1VmeqK)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$28744$1VmeqK
               g$e$31315$1VmeqK
               g$r$31316$1VmeqK)))
          (case-lambda
            ((g$type$31321$1VmeqK
               g$value$31322$1VmeqK
               g$kwd$31323$1VmeqK)
             ((case-lambda
                ((g$kwd$31324$1VmeqK
                   g$value$31325$1VmeqK
                   g$type$31326$1VmeqK)
                 ((case-lambda
                    ((g$t$31327$1VmeqK)
                     (if (eqv? g$t$31327$1VmeqK 'core-macro)
                       ((case-lambda
                          ((g$transformer$31328$1VmeqK)
                           (g$transformer$31328$1VmeqK
                             g$e$31315$1VmeqK
                             g$r$31316$1VmeqK
                             g$mr$31317$1VmeqK)))
                        (g$core-macro-transformer$29229$1VmeqK
                          g$value$31325$1VmeqK))
                       (if (eqv? g$t$31327$1VmeqK 'global)
                         ((case-lambda
                            ((g$lib$31329$1VmeqK)
                             ((case-lambda
                                ((g$loc$31330$1VmeqK)
                                 (begin
                                   ((g$inv-collector$29277$1VmeqK)
                                    g$lib$31329$1VmeqK)
                                   g$loc$31330$1VmeqK)))
                              (cdr g$value$31325$1VmeqK))))
                          (car g$value$31325$1VmeqK))
                         (if (eqv? g$t$31327$1VmeqK 'core-prim)
                           ((case-lambda
                              ((g$name$31331$1VmeqK)
                               (list 'primitive g$name$31331$1VmeqK)))
                            g$value$31325$1VmeqK)
                           (if (eqv? g$t$31327$1VmeqK 'call)
                             (g$chi-application$29239$1VmeqK
                               g$e$31315$1VmeqK
                               g$r$31316$1VmeqK
                               g$mr$31317$1VmeqK)
                             (if (eqv? g$t$31327$1VmeqK 'lexical)
                               ((case-lambda
                                  ((g$lex$31332$1VmeqK)
                                   g$lex$31332$1VmeqK))
                                (g$lexical-var$29166$1VmeqK
                                  g$value$31325$1VmeqK))
                               (if (g$memv$20342$1VmeqK
                                     g$t$31327$1VmeqK
                                     '(global-macro global-macro!))
                                 (g$chi-expr$29240$1VmeqK
                                   (g$chi-global-macro$29237$1VmeqK
                                     g$value$31325$1VmeqK
                                     g$e$31315$1VmeqK
                                     g$r$31316$1VmeqK)
                                   g$r$31316$1VmeqK
                                   g$mr$31317$1VmeqK)
                                 (if (g$memv$20342$1VmeqK
                                       g$t$31327$1VmeqK
                                       '(local-macro local-macro!))
                                   (g$chi-expr$29240$1VmeqK
                                     (g$chi-local-macro$29236$1VmeqK
                                       g$value$31325$1VmeqK
                                       g$e$31315$1VmeqK
                                       g$r$31316$1VmeqK)
                                     g$r$31316$1VmeqK
                                     g$mr$31317$1VmeqK)
                                   (if (g$memv$20342$1VmeqK
                                         g$t$31327$1VmeqK
                                         '(macro macro!))
                                     (g$chi-expr$29240$1VmeqK
                                       (g$chi-macro$29235$1VmeqK
                                         g$value$31325$1VmeqK
                                         g$e$31315$1VmeqK
                                         g$r$31316$1VmeqK)
                                       g$r$31316$1VmeqK
                                       g$mr$31317$1VmeqK)
                                     (if (eqv?
                                           g$t$31327$1VmeqK
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$31333$1VmeqK)
                                           (list
                                             'quote
                                             g$datum$31333$1VmeqK)))
                                        g$value$31325$1VmeqK)
                                       (if (eqv? g$t$31327$1VmeqK 'set!)
                                         (g$chi-set!$29241$1VmeqK
                                           g$e$31315$1VmeqK
                                           g$r$31316$1VmeqK
                                           g$mr$31317$1VmeqK)
                                         (if (eqv?
                                               g$t$31327$1VmeqK
                                               'begin)
                                           ((case-lambda
                                              ((g$t$31334$1VmeqK)
                                               ((case-lambda
                                                  ((g$ls/false$31335$1VmeqK)
                                                   (if g$ls/false$31335$1VmeqK
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$31336$1VmeqK
                                                            g$x*$31337$1VmeqK)
                                                          (g$build-sequence$28649$1VmeqK
                                                            '#f
                                                            (g$chi-expr*$29238$1VmeqK
                                                              (cons
                                                                g$x$31336$1VmeqK
                                                                g$x*$31337$1VmeqK)
                                                              g$r$31316$1VmeqK
                                                              g$mr$31317$1VmeqK))))
                                                       g$ls/false$31335$1VmeqK)
                                                     (g$syntax-violation$29341$1VmeqK
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$31334$1VmeqK))))
                                                (g$syntax-dispatch$29222$1VmeqK
                                                  g$t$31334$1VmeqK
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$31315$1VmeqK)
                                           (if (g$memv$20342$1VmeqK
                                                 g$t$31327$1VmeqK
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$31338$1VmeqK)
                                                 ((case-lambda
                                                    ((g$ls/false$31339$1VmeqK)
                                                     (if (if g$ls/false$31339$1VmeqK
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$31340$1VmeqK
                                                                    g$xrhs*$31341$1VmeqK
                                                                    g$xbody$31342$1VmeqK
                                                                    g$xbody*$31343$1VmeqK)
                                                                  (if (not (g$valid-bound-ids?$28729$1VmeqK
                                                                             g$xlhs*$31340$1VmeqK))
                                                                    (g$syntax-violation$29341$1VmeqK
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$31315$1VmeqK)
                                                                    (void))))
                                                               g$ls/false$31339$1VmeqK))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$31344$1VmeqK
                                                              g$xrhs*$31345$1VmeqK
                                                              g$xbody$31346$1VmeqK
                                                              g$xbody*$31347$1VmeqK)
                                                            ((case-lambda
                                                               ((g$xlab*$31348$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$xrib$31349$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$xb*$31350$1VmeqK)
                                                                        (g$build-sequence$28649$1VmeqK
                                                                          '#f
                                                                          (g$chi-expr*$29238$1VmeqK
                                                                            (g$map$20349$1VmeqK
                                                                              (case-lambda
                                                                                ((g$x$31351$1VmeqK)
                                                                                 (g$add-subst$28714$1VmeqK
                                                                                   g$xrib$31349$1VmeqK
                                                                                   g$x$31351$1VmeqK)))
                                                                              (cons
                                                                                g$xbody$31346$1VmeqK
                                                                                g$xbody*$31347$1VmeqK))
                                                                            (append
                                                                              (g$map$20349$1VmeqK
                                                                                cons
                                                                                g$xlab*$31348$1VmeqK
                                                                                g$xb*$31350$1VmeqK)
                                                                              g$r$31316$1VmeqK)
                                                                            (append
                                                                              (g$map$20349$1VmeqK
                                                                                cons
                                                                                g$xlab*$31348$1VmeqK
                                                                                g$xb*$31350$1VmeqK)
                                                                              g$mr$31317$1VmeqK)))))
                                                                     (g$map$20349$1VmeqK
                                                                       (case-lambda
                                                                         ((g$x$31352$1VmeqK)
                                                                          (g$make-eval-transformer$28772$1VmeqK
                                                                            (g$expand-transformer$29270$1VmeqK
                                                                              (if (eq? g$type$31326$1VmeqK
                                                                                       'let-syntax)
                                                                                g$x$31352$1VmeqK
                                                                                (g$add-subst$28714$1VmeqK
                                                                                  g$xrib$31349$1VmeqK
                                                                                  g$x$31352$1VmeqK))
                                                                              g$mr$31317$1VmeqK))))
                                                                       g$xrhs*$31345$1VmeqK))))
                                                                 (g$make-full-rib$28690$1VmeqK
                                                                   g$xlhs*$31344$1VmeqK
                                                                   g$xlab*$31348$1VmeqK))))
                                                             (g$map$20349$1VmeqK
                                                               g$gen-label$28661$1VmeqK
                                                               g$xlhs*$31344$1VmeqK))))
                                                         g$ls/false$31339$1VmeqK)
                                                       (g$syntax-violation$29341$1VmeqK
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$31338$1VmeqK))))
                                                  (g$syntax-dispatch$29222$1VmeqK
                                                    g$t$31338$1VmeqK
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$31315$1VmeqK)
                                             (if (eqv?
                                                   g$t$31327$1VmeqK
                                                   'displaced-lexical)
                                               (g$syntax-violation$29341$1VmeqK
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$31315$1VmeqK)
                                               (if (eqv?
                                                     g$t$31327$1VmeqK
                                                     'syntax)
                                                 (g$syntax-violation$29341$1VmeqK
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$31315$1VmeqK)
                                                 (if (g$memv$20342$1VmeqK
                                                       g$t$31327$1VmeqK
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$29341$1VmeqK
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$31353$1VmeqK)
                                                           (if (eqv?
                                                                 g$t$31353$1VmeqK
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$31353$1VmeqK
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$31353$1VmeqK
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$31353$1VmeqK
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$31353$1VmeqK
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$31353$1VmeqK
                                                                           'export)
                                                                       '"an export declaration"
                                                                       (begin
                                                                         '#f
                                                                         '"a non-expression")))))))))
                                                        g$type$31326$1VmeqK)
                                                       '" was found where an expression was expected")
                                                     g$e$31315$1VmeqK)
                                                   (if (eqv?
                                                         g$t$31327$1VmeqK
                                                         'mutable)
                                                     (g$syntax-violation$29341$1VmeqK
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$31315$1VmeqK)
                                                     (begin
                                                       '#f
                                                       (g$syntax-violation$29341$1VmeqK
                                                         '#f
                                                         '"invalid expression"
                                                         g$e$31315$1VmeqK))))))))))))))))))))
                  g$type$31326$1VmeqK)))
              g$kwd$31323$1VmeqK
              g$value$31322$1VmeqK
              g$type$31321$1VmeqK)))))))
   (g$chi-set!$29241$1VmeqK
     g$chi-set!$32836$1VmeqK
     (case-lambda
       ((g$e$31354$1VmeqK g$r$31355$1VmeqK g$mr$31356$1VmeqK)
        ((case-lambda
           ((g$t$31357$1VmeqK)
            ((case-lambda
               ((g$ls/false$31358$1VmeqK)
                (if (if g$ls/false$31358$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$31359$1VmeqK g$v$31360$1VmeqK)
                             (g$id?$28724$1VmeqK g$x$31359$1VmeqK)))
                          g$ls/false$31358$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$31361$1VmeqK g$v$31362$1VmeqK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$28744$1VmeqK
                              g$x$31361$1VmeqK
                              g$r$31355$1VmeqK)))
                         (case-lambda
                           ((g$type$31366$1VmeqK
                              g$value$31367$1VmeqK
                              g$kwd$31368$1VmeqK)
                            ((case-lambda
                               ((g$kwd$31369$1VmeqK
                                  g$value$31370$1VmeqK
                                  g$type$31371$1VmeqK)
                                ((case-lambda
                                   ((g$t$31372$1VmeqK)
                                    (if (eqv? g$t$31372$1VmeqK 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$29168$1VmeqK
                                          g$value$31370$1VmeqK
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$29166$1VmeqK
                                            g$value$31370$1VmeqK)
                                          (g$chi-expr$29240$1VmeqK
                                            g$v$31362$1VmeqK
                                            g$r$31355$1VmeqK
                                            g$mr$31356$1VmeqK)))
                                      (if (eqv?
                                            g$t$31372$1VmeqK
                                            'core-prim)
                                        (g$syntax-violation$29341$1VmeqK
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$31354$1VmeqK)
                                        (if (eqv?
                                              g$t$31372$1VmeqK
                                              'global)
                                          (g$syntax-violation$29341$1VmeqK
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$31354$1VmeqK)
                                          (if (eqv?
                                                g$t$31372$1VmeqK
                                                'global-macro!)
                                            (g$chi-expr$29240$1VmeqK
                                              (g$chi-global-macro$29237$1VmeqK
                                                g$value$31370$1VmeqK
                                                g$e$31354$1VmeqK
                                                g$r$31355$1VmeqK)
                                              g$r$31355$1VmeqK
                                              g$mr$31356$1VmeqK)
                                            (if (eqv?
                                                  g$t$31372$1VmeqK
                                                  'local-macro!)
                                              (g$chi-expr$29240$1VmeqK
                                                (g$chi-local-macro$29236$1VmeqK
                                                  g$value$31370$1VmeqK
                                                  g$e$31354$1VmeqK
                                                  g$r$31355$1VmeqK)
                                                g$r$31355$1VmeqK
                                                g$mr$31356$1VmeqK)
                                              (if (eqv?
                                                    g$t$31372$1VmeqK
                                                    'mutable)
                                                (g$syntax-violation$29341$1VmeqK
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$31354$1VmeqK)
                                                (begin
                                                  '#f
                                                  (g$syntax-violation$29341$1VmeqK
                                                    '#f
                                                    '"invalid syntax"
                                                    g$e$31354$1VmeqK))))))))))
                                 g$type$31371$1VmeqK)))
                             g$kwd$31368$1VmeqK
                             g$value$31367$1VmeqK
                             g$type$31366$1VmeqK))))))
                    g$ls/false$31358$1VmeqK)
                  (g$syntax-violation$29341$1VmeqK
                    '#f
                    '"invalid syntax"
                    g$t$31357$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31357$1VmeqK
               '(_ any any)))))
         g$e$31354$1VmeqK))))
   (g$verify-formals$29242$1VmeqK
     g$verify-formals$32837$1VmeqK
     (case-lambda
       ((g$fmls$31373$1VmeqK g$stx$31374$1VmeqK)
        ((case-lambda
           ((g$t$31375$1VmeqK)
            ((case-lambda
               ((g$ls/false$31376$1VmeqK)
                (if g$ls/false$31376$1VmeqK
                  (apply
                    (case-lambda
                      ((g$x*$31377$1VmeqK)
                       (if (not (g$valid-bound-ids?$28729$1VmeqK
                                  g$x*$31377$1VmeqK))
                         (g$invalid-fmls-error$29187$1VmeqK
                           g$stx$31374$1VmeqK
                           g$fmls$31373$1VmeqK)
                         (void))))
                    g$ls/false$31376$1VmeqK)
                  ((case-lambda
                     ((g$t$31378$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$31379$1VmeqK)
                          (if g$ls/false$31379$1VmeqK
                            (apply
                              (case-lambda
                                ((g$x*$31380$1VmeqK g$x$31381$1VmeqK)
                                 (if (not (g$valid-bound-ids?$28729$1VmeqK
                                            (cons
                                              g$x$31381$1VmeqK
                                              g$x*$31380$1VmeqK)))
                                   (g$invalid-fmls-error$29187$1VmeqK
                                     g$stx$31374$1VmeqK
                                     g$fmls$31373$1VmeqK)
                                   (void))))
                              g$ls/false$31379$1VmeqK)
                            ((case-lambda
                               ((g$t$31382$1VmeqK)
                                ((case-lambda
                                   ((g$ls/false$31383$1VmeqK)
                                    (if g$ls/false$31383$1VmeqK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$stx$31374$1VmeqK)))
                                        g$ls/false$31383$1VmeqK)
                                      (g$syntax-violation$29341$1VmeqK
                                        '#f
                                        '"invalid syntax"
                                        g$t$31382$1VmeqK))))
                                 (g$syntax-dispatch$29222$1VmeqK
                                   g$t$31382$1VmeqK
                                   '_))))
                             g$t$31378$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$31378$1VmeqK
                         '#(each+ any () any)))))
                   g$t$31375$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31375$1VmeqK
               'each-any))))
         g$fmls$31373$1VmeqK))))
   (g$chi-lambda-clause$29243$1VmeqK
     g$chi-lambda-clause$32838$1VmeqK
     (case-lambda
       ((g$stx$31384$1VmeqK
          g$fmls$31385$1VmeqK
          g$body*$31386$1VmeqK
          g$r$31387$1VmeqK
          g$mr$31388$1VmeqK)
        ((case-lambda
           ((g$t$31389$1VmeqK)
            ((case-lambda
               ((g$ls/false$31390$1VmeqK)
                (if g$ls/false$31390$1VmeqK
                  (apply
                    (case-lambda
                      ((g$x*$31391$1VmeqK)
                       (begin
                         (g$verify-formals$29242$1VmeqK
                           g$fmls$31385$1VmeqK
                           g$stx$31384$1VmeqK)
                         ((case-lambda
                            ((g$lex*$31392$1VmeqK g$lab*$31393$1VmeqK)
                             (values
                               g$lex*$31392$1VmeqK
                               (g$chi-internal$29251$1VmeqK
                                 (g$add-subst$28714$1VmeqK
                                   (g$make-full-rib$28690$1VmeqK
                                     g$x*$31391$1VmeqK
                                     g$lab*$31393$1VmeqK)
                                   g$body*$31386$1VmeqK)
                                 (g$add-lexicals$29170$1VmeqK
                                   g$lab*$31393$1VmeqK
                                   g$lex*$31392$1VmeqK
                                   g$r$31387$1VmeqK)
                                 g$mr$31388$1VmeqK))))
                          (g$map$20349$1VmeqK
                            g$gen-lexical$28659$1VmeqK
                            g$x*$31391$1VmeqK)
                          (g$map$20349$1VmeqK
                            g$gen-label$28661$1VmeqK
                            g$x*$31391$1VmeqK)))))
                    g$ls/false$31390$1VmeqK)
                  ((case-lambda
                     ((g$t$31394$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$31395$1VmeqK)
                          (if g$ls/false$31395$1VmeqK
                            (apply
                              (case-lambda
                                ((g$x*$31396$1VmeqK g$x$31397$1VmeqK)
                                 (begin
                                   (g$verify-formals$29242$1VmeqK
                                     g$fmls$31385$1VmeqK
                                     g$stx$31384$1VmeqK)
                                   ((case-lambda
                                      ((g$lex*$31398$1VmeqK
                                         g$lab*$31399$1VmeqK
                                         g$lex$31400$1VmeqK
                                         g$lab$31401$1VmeqK)
                                       (values
                                         (append
                                           g$lex*$31398$1VmeqK
                                           g$lex$31400$1VmeqK)
                                         (g$chi-internal$29251$1VmeqK
                                           (g$add-subst$28714$1VmeqK
                                             (g$make-full-rib$28690$1VmeqK
                                               (cons
                                                 g$x$31397$1VmeqK
                                                 g$x*$31396$1VmeqK)
                                               (cons
                                                 g$lab$31401$1VmeqK
                                                 g$lab*$31399$1VmeqK))
                                             g$body*$31386$1VmeqK)
                                           (g$add-lexicals$29170$1VmeqK
                                             (cons
                                               g$lab$31401$1VmeqK
                                               g$lab*$31399$1VmeqK)
                                             (cons
                                               g$lex$31400$1VmeqK
                                               g$lex*$31398$1VmeqK)
                                             g$r$31387$1VmeqK)
                                           g$mr$31388$1VmeqK))))
                                    (g$map$20349$1VmeqK
                                      g$gen-lexical$28659$1VmeqK
                                      g$x*$31396$1VmeqK)
                                    (g$map$20349$1VmeqK
                                      g$gen-label$28661$1VmeqK
                                      g$x*$31396$1VmeqK)
                                    (g$gen-lexical$28659$1VmeqK
                                      g$x$31397$1VmeqK)
                                    (g$gen-label$28661$1VmeqK
                                      g$x$31397$1VmeqK)))))
                              g$ls/false$31395$1VmeqK)
                            ((case-lambda
                               ((g$t$31402$1VmeqK)
                                ((case-lambda
                                   ((g$ls/false$31403$1VmeqK)
                                    (if g$ls/false$31403$1VmeqK
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$29341$1VmeqK
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$31385$1VmeqK)))
                                        g$ls/false$31403$1VmeqK)
                                      (g$syntax-violation$29341$1VmeqK
                                        '#f
                                        '"invalid syntax"
                                        g$t$31402$1VmeqK))))
                                 (g$syntax-dispatch$29222$1VmeqK
                                   g$t$31402$1VmeqK
                                   '_))))
                             g$t$31394$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$31394$1VmeqK
                         '#(each+ any () any)))))
                   g$t$31389$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31389$1VmeqK
               'each-any))))
         g$fmls$31385$1VmeqK))))
   (g$chi-lambda-clause*$29244$1VmeqK
     g$chi-lambda-clause*$32839$1VmeqK
     (case-lambda
       ((g$stx$31404$1VmeqK
          g$fmls*$31405$1VmeqK
          g$body**$31406$1VmeqK
          g$r$31407$1VmeqK
          g$mr$31408$1VmeqK)
        (if (null? g$fmls*$31405$1VmeqK)
          (values '() '())
          (begin
            '#f
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$29243$1VmeqK
                   g$stx$31404$1VmeqK
                   (car g$fmls*$31405$1VmeqK)
                   (car g$body**$31406$1VmeqK)
                   g$r$31407$1VmeqK
                   g$mr$31408$1VmeqK)))
              (case-lambda
                ((g$a$31411$1VmeqK g$b$31412$1VmeqK)
                 ((case-lambda
                    ((g$b$31413$1VmeqK g$a$31414$1VmeqK)
                     (call-with-values
                       (case-lambda
                         (()
                          (g$chi-lambda-clause*$29244$1VmeqK
                            g$stx$31404$1VmeqK
                            (cdr g$fmls*$31405$1VmeqK)
                            (cdr g$body**$31406$1VmeqK)
                            g$r$31407$1VmeqK
                            g$mr$31408$1VmeqK)))
                       (case-lambda
                         ((g$a*$31417$1VmeqK g$b*$31418$1VmeqK)
                          ((case-lambda
                             ((g$b*$31419$1VmeqK g$a*$31420$1VmeqK)
                              (values
                                (cons
                                  g$a$31414$1VmeqK
                                  g$a*$31420$1VmeqK)
                                (cons
                                  g$b$31413$1VmeqK
                                  g$b*$31419$1VmeqK))))
                           g$b*$31418$1VmeqK
                           g$a*$31417$1VmeqK))))))
                  g$b$31412$1VmeqK
                  g$a$31411$1VmeqK)))))))))
   (g$chi-defun$29245$1VmeqK
     g$chi-defun$32840$1VmeqK
     (case-lambda
       ((g$x$31421$1VmeqK g$r$31422$1VmeqK g$mr$31423$1VmeqK)
        ((case-lambda
           ((g$fmls$31424$1VmeqK g$body*$31425$1VmeqK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$29243$1VmeqK
                   g$fmls$31424$1VmeqK
                   g$fmls$31424$1VmeqK
                   g$body*$31425$1VmeqK
                   g$r$31422$1VmeqK
                   g$mr$31423$1VmeqK)))
              (case-lambda
                ((g$fmls$31428$1VmeqK g$body$31429$1VmeqK)
                 ((case-lambda
                    ((g$body$31430$1VmeqK g$fmls$31431$1VmeqK)
                     (g$build-lambda$28646$1VmeqK
                       '#f
                       g$fmls$31431$1VmeqK
                       g$body$31430$1VmeqK)))
                  g$body$31429$1VmeqK
                  g$fmls$31428$1VmeqK))))))
         (car g$x$31421$1VmeqK)
         (cdr g$x$31421$1VmeqK)))))
   (g$chi-rhs$29246$1VmeqK
     g$chi-rhs$32841$1VmeqK
     (case-lambda
       ((g$rhs$31432$1VmeqK g$r$31433$1VmeqK g$mr$31434$1VmeqK)
        ((case-lambda
           ((g$t$31435$1VmeqK)
            (if (eqv? g$t$31435$1VmeqK 'defun)
              (g$chi-defun$29245$1VmeqK
                (cdr g$rhs$31432$1VmeqK)
                g$r$31433$1VmeqK
                g$mr$31434$1VmeqK)
              (if (eqv? g$t$31435$1VmeqK 'expr)
                ((case-lambda
                   ((g$expr$31436$1VmeqK)
                    (g$chi-expr$29240$1VmeqK
                      g$expr$31436$1VmeqK
                      g$r$31433$1VmeqK
                      g$mr$31434$1VmeqK)))
                 (cdr g$rhs$31432$1VmeqK))
                (if (eqv? g$t$31435$1VmeqK 'top-expr)
                  ((case-lambda
                     ((g$expr$31437$1VmeqK)
                      (g$build-sequence$28649$1VmeqK
                        '#f
                        (list
                          (g$chi-expr$29240$1VmeqK
                            g$expr$31437$1VmeqK
                            g$r$31433$1VmeqK
                            g$mr$31434$1VmeqK)
                          (g$build-void$28650$1VmeqK)))))
                   (cdr g$rhs$31432$1VmeqK))
                  (begin
                    '#f
                    (assertion-violation
                      'chi-rhs
                      '"BUG: invalid rhs"
                      g$rhs$31432$1VmeqK)))))))
         (car g$rhs$31432$1VmeqK)))))
   (g$expand-interaction-rhs*/init*$29247$1VmeqK
     g$expand-interaction-rhs*/init*$32842$1VmeqK
     (case-lambda
       ((g$lhs*$31438$1VmeqK
          g$rhs*$31439$1VmeqK
          g$init*$31440$1VmeqK
          g$r$31441$1VmeqK
          g$mr$31442$1VmeqK)
        ((letrec ((g$f$31443$1VmeqK
                    (case-lambda
                      ((g$lhs*$31444$1VmeqK g$rhs*$31445$1VmeqK)
                       (if (null? g$lhs*$31444$1VmeqK)
                         (g$map$20349$1VmeqK
                           (case-lambda
                             ((g$x$31446$1VmeqK)
                              (g$chi-expr$29240$1VmeqK
                                g$x$31446$1VmeqK
                                g$r$31441$1VmeqK
                                g$mr$31442$1VmeqK)))
                           g$init*$31440$1VmeqK)
                         (begin
                           '#f
                           ((case-lambda
                              ((g$lhs$31447$1VmeqK g$rhs$31448$1VmeqK)
                               ((case-lambda
                                  ((g$t$31449$1VmeqK)
                                   (if (eqv? g$t$31449$1VmeqK 'defun)
                                     ((case-lambda
                                        ((g$rhs$31450$1VmeqK)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$31447$1VmeqK
                                             g$rhs$31450$1VmeqK)
                                           (g$f$31443$1VmeqK
                                             (cdr g$lhs*$31444$1VmeqK)
                                             (cdr g$rhs*$31445$1VmeqK)))))
                                      (g$chi-defun$29245$1VmeqK
                                        (cdr g$rhs$31448$1VmeqK)
                                        g$r$31441$1VmeqK
                                        g$mr$31442$1VmeqK))
                                     (if (eqv? g$t$31449$1VmeqK 'expr)
                                       ((case-lambda
                                          ((g$rhs$31451$1VmeqK)
                                           (cons
                                             (list
                                               'set!
                                               g$lhs$31447$1VmeqK
                                               g$rhs$31451$1VmeqK)
                                             (g$f$31443$1VmeqK
                                               (cdr g$lhs*$31444$1VmeqK)
                                               (cdr g$rhs*$31445$1VmeqK)))))
                                        (g$chi-expr$29240$1VmeqK
                                          (cdr g$rhs$31448$1VmeqK)
                                          g$r$31441$1VmeqK
                                          g$mr$31442$1VmeqK))
                                       (if (eqv?
                                             g$t$31449$1VmeqK
                                             'top-expr)
                                         ((case-lambda
                                            ((g$e$31452$1VmeqK)
                                             (cons
                                               g$e$31452$1VmeqK
                                               (g$f$31443$1VmeqK
                                                 (cdr g$lhs*$31444$1VmeqK)
                                                 (cdr g$rhs*$31445$1VmeqK)))))
                                          (g$chi-expr$29240$1VmeqK
                                            (cdr g$rhs$31448$1VmeqK)
                                            g$r$31441$1VmeqK
                                            g$mr$31442$1VmeqK))
                                         (begin
                                           '#f
                                           (error
                                             'expand-interaction
                                             '"invallid"
                                             g$rhs$31448$1VmeqK)))))))
                                (car g$rhs$31448$1VmeqK))))
                            (car g$lhs*$31444$1VmeqK)
                            (car g$rhs*$31445$1VmeqK))))))))
           g$f$31443$1VmeqK)
         g$lhs*$31438$1VmeqK
         g$rhs*$31439$1VmeqK))))
   (g$chi-rhs*$29248$1VmeqK
     g$chi-rhs*$32843$1VmeqK
     (case-lambda
       ((g$rhs*$31453$1VmeqK g$r$31454$1VmeqK g$mr$31455$1VmeqK)
        ((letrec ((g$f$31456$1VmeqK
                    (case-lambda
                      ((g$ls$31457$1VmeqK)
                       (if (null? g$ls$31457$1VmeqK)
                         '()
                         (begin
                           '#f
                           ((case-lambda
                              ((g$a$31458$1VmeqK)
                               (cons
                                 g$a$31458$1VmeqK
                                 (g$f$31456$1VmeqK
                                   (cdr g$ls$31457$1VmeqK)))))
                            (g$chi-rhs$29246$1VmeqK
                              (car g$ls$31457$1VmeqK)
                              g$r$31454$1VmeqK
                              g$mr$31455$1VmeqK))))))))
           g$f$31456$1VmeqK)
         g$rhs*$31453$1VmeqK))))
   (g$find-bound=?$29249$1VmeqK
     g$find-bound=?$32844$1VmeqK
     (case-lambda
       ((g$x$31459$1VmeqK g$lhs*$31460$1VmeqK g$rhs*$31461$1VmeqK)
        (if (null? g$lhs*$31460$1VmeqK)
          '#f
          (if (g$bound-id=?$28727$1VmeqK
                g$x$31459$1VmeqK
                (car g$lhs*$31460$1VmeqK))
            (car g$rhs*$31461$1VmeqK)
            (begin
              '#f
              (g$find-bound=?$29249$1VmeqK
                g$x$31459$1VmeqK
                (cdr g$lhs*$31460$1VmeqK)
                (cdr g$rhs*$31461$1VmeqK))))))))
   (g$find-dups$29250$1VmeqK
     g$find-dups$32845$1VmeqK
     (case-lambda
       ((g$ls$31462$1VmeqK)
        ((letrec ((g$f$31463$1VmeqK
                    (case-lambda
                      ((g$ls$31464$1VmeqK g$dups$31465$1VmeqK)
                       (if (null? g$ls$31464$1VmeqK)
                         g$dups$31465$1VmeqK
                         ((case-lambda
                            ((g$t$31466$1VmeqK)
                             (if g$t$31466$1VmeqK
                               ((case-lambda
                                  ((g$x$31467$1VmeqK)
                                   (g$f$31463$1VmeqK
                                     (cdr g$ls$31464$1VmeqK)
                                     (cons
                                       (list
                                         (car g$ls$31464$1VmeqK)
                                         g$x$31467$1VmeqK)
                                       g$dups$31465$1VmeqK))))
                                g$t$31466$1VmeqK)
                               (begin
                                 '#f
                                 (g$f$31463$1VmeqK
                                   (cdr g$ls$31464$1VmeqK)
                                   g$dups$31465$1VmeqK)))))
                          (g$find-bound=?$29249$1VmeqK
                            (car g$ls$31464$1VmeqK)
                            (cdr g$ls$31464$1VmeqK)
                            (cdr g$ls$31464$1VmeqK))))))))
           g$f$31463$1VmeqK)
         g$ls$31462$1VmeqK
         '()))))
   (g$chi-internal$29251$1VmeqK
     g$chi-internal$32846$1VmeqK
     (case-lambda
       ((g$e*$31468$1VmeqK g$r$31469$1VmeqK g$mr$31470$1VmeqK)
        ((case-lambda
           ((g$rib$31471$1VmeqK)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$29269$1VmeqK
                   (g$map$20349$1VmeqK
                     (case-lambda
                       ((g$x$31480$1VmeqK)
                        (g$add-subst$28714$1VmeqK
                          g$rib$31471$1VmeqK
                          g$x$31480$1VmeqK)))
                     (g$syntax->list$28723$1VmeqK g$e*$31468$1VmeqK))
                   g$r$31469$1VmeqK
                   g$mr$31470$1VmeqK
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$31471$1VmeqK
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$31481$1VmeqK
                   g$r$31482$1VmeqK
                   g$mr$31483$1VmeqK
                   g$lex*$31484$1VmeqK
                   g$rhs*$31485$1VmeqK
                   g$mod**$31486$1VmeqK
                   g$kwd*$31487$1VmeqK
                   g$_exp*$31488$1VmeqK)
                 ((case-lambda
                    ((g$_exp*$31489$1VmeqK
                       g$kwd*$31490$1VmeqK
                       g$mod**$31491$1VmeqK
                       g$rhs*$31492$1VmeqK
                       g$lex*$31493$1VmeqK
                       g$mr$31494$1VmeqK
                       g$r$31495$1VmeqK
                       g$e*$31496$1VmeqK)
                     (begin
                       (if (null? g$e*$31496$1VmeqK)
                         (g$syntax-violation$29341$1VmeqK
                           '#f
                           '"no expression in body"
                           g$e*$31496$1VmeqK)
                         (void))
                       ((case-lambda
                          ((g$init*$31497$1VmeqK)
                           ((case-lambda
                              ((g$rhs*$31498$1VmeqK)
                               (g$build-letrec*$28652$1VmeqK
                                 '#f
                                 (g$reverse$21198$1VmeqK
                                   g$lex*$31493$1VmeqK)
                                 (g$reverse$21198$1VmeqK
                                   g$rhs*$31498$1VmeqK)
                                 (g$build-sequence$28649$1VmeqK
                                   '#f
                                   g$init*$31497$1VmeqK))))
                            (g$chi-rhs*$29248$1VmeqK
                              g$rhs*$31492$1VmeqK
                              g$r$31495$1VmeqK
                              g$mr$31494$1VmeqK))))
                        (g$chi-expr*$29238$1VmeqK
                          (append
                            (apply
                              append
                              (g$reverse$21198$1VmeqK
                                g$mod**$31491$1VmeqK))
                            g$e*$31496$1VmeqK)
                          g$r$31495$1VmeqK
                          g$mr$31494$1VmeqK)))))
                  g$_exp*$31488$1VmeqK
                  g$kwd*$31487$1VmeqK
                  g$mod**$31486$1VmeqK
                  g$rhs*$31485$1VmeqK
                  g$lex*$31484$1VmeqK
                  g$mr$31483$1VmeqK
                  g$r$31482$1VmeqK
                  g$e*$31481$1VmeqK))))))
         (g$make-empty-rib$28682$1VmeqK)))))
   (g$parse-module$29252$1VmeqK
     g$parse-module$32847$1VmeqK
     (case-lambda
       ((g$e$31499$1VmeqK)
        ((case-lambda
           ((g$t$31500$1VmeqK)
            ((case-lambda
               ((g$ls/false$31501$1VmeqK)
                (if g$ls/false$31501$1VmeqK
                  (apply
                    (case-lambda
                      ((g$export*$31502$1VmeqK g$b*$31503$1VmeqK)
                       (begin
                         (if (not (g$for-all$20347$1VmeqK
                                    g$id?$28724$1VmeqK
                                    g$export*$31502$1VmeqK))
                           (g$syntax-violation$29341$1VmeqK
                             '#f
                             '"module exports must be identifiers"
                             g$e$31499$1VmeqK)
                           (void))
                         (values
                           '#f
                           (g$list->vector$21192$1VmeqK
                             g$export*$31502$1VmeqK)
                           g$b*$31503$1VmeqK))))
                    g$ls/false$31501$1VmeqK)
                  ((case-lambda
                     ((g$t$31504$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$31505$1VmeqK)
                          (if g$ls/false$31505$1VmeqK
                            (apply
                              (case-lambda
                                ((g$name$31506$1VmeqK
                                   g$export*$31507$1VmeqK
                                   g$b*$31508$1VmeqK)
                                 (begin
                                   (if (not (g$id?$28724$1VmeqK
                                              g$name$31506$1VmeqK))
                                     (g$syntax-violation$29341$1VmeqK
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$31499$1VmeqK)
                                     (void))
                                   (if (not (g$for-all$20347$1VmeqK
                                              g$id?$28724$1VmeqK
                                              g$export*$31507$1VmeqK))
                                     (g$syntax-violation$29341$1VmeqK
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$31499$1VmeqK)
                                     (void))
                                   (values
                                     g$name$31506$1VmeqK
                                     (g$list->vector$21192$1VmeqK
                                       g$export*$31507$1VmeqK)
                                     g$b*$31508$1VmeqK))))
                              g$ls/false$31505$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$31504$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$31504$1VmeqK
                         '(_ any each-any . each-any)))))
                   g$t$31500$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31500$1VmeqK
               '(_ each-any . each-any)))))
         g$e$31499$1VmeqK))))
   (g$12263$29253$1VmeqK
     g$12263$32848$1VmeqK
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$12266$1VmeqK
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$12265$29254$1VmeqK g$12265$32849$1VmeqK '#f)
   (g$12264$29255$1VmeqK
     g$12264$32850$1VmeqK
     (make-record-constructor-descriptor
       g$12263$29253$1VmeqK
       '#f
       g$12265$29254$1VmeqK))
   (g$module-interface?$29258$1VmeqK
     g$module-interface?$32851$1VmeqK
     (record-predicate g$12263$29253$1VmeqK))
   (g$make-module-interface$29259$1VmeqK
     g$make-module-interface$32852$1VmeqK
     (record-constructor g$12264$29255$1VmeqK))
   (g$module-interface-first-mark$29260$1VmeqK
     g$module-interface-first-mark$32853$1VmeqK
     (record-accessor g$12263$29253$1VmeqK '0))
   (g$module-interface-exp-id-vec$29261$1VmeqK
     g$module-interface-exp-id-vec$32854$1VmeqK
     (record-accessor g$12263$29253$1VmeqK '1))
   (g$module-interface-exp-lab-vec$29262$1VmeqK
     g$module-interface-exp-lab-vec$32855$1VmeqK
     (record-accessor g$12263$29253$1VmeqK '2))
   (g$set-module-interface-first-mark!$29263$1VmeqK
     g$set-module-interface-first-mark!$32856$1VmeqK
     (record-mutator g$12263$29253$1VmeqK '0))
   (g$set-module-interface-exp-id-vec!$29264$1VmeqK
     g$set-module-interface-exp-id-vec!$32857$1VmeqK
     (record-mutator g$12263$29253$1VmeqK '1))
   (g$set-module-interface-exp-lab-vec!$29265$1VmeqK
     g$set-module-interface-exp-lab-vec!$32858$1VmeqK
     (record-mutator g$12263$29253$1VmeqK '2))
   (g$module-interface-exp-id*$29266$1VmeqK
     g$module-interface-exp-id*$32859$1VmeqK
     (case-lambda
       ((g$iface$31509$1VmeqK g$id$31510$1VmeqK)
        (letrec* ((g$diff-marks$31511$1VmeqK
                    (case-lambda
                      ((g$ls$31515$1VmeqK g$x$31516$1VmeqK)
                       (begin
                         (if (null? g$ls$31515$1VmeqK)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$31517$1VmeqK)
                             (if (eq? g$a$31517$1VmeqK g$x$31516$1VmeqK)
                               '()
                               (cons
                                 g$a$31517$1VmeqK
                                 (g$diff-marks$31511$1VmeqK
                                   (cdr g$ls$31515$1VmeqK)
                                   g$x$31516$1VmeqK)))))
                          (car g$ls$31515$1VmeqK)))))))
          ((case-lambda
             ((g$diff$31512$1VmeqK g$id-vec$31513$1VmeqK)
              (if (null? g$diff$31512$1VmeqK)
                g$id-vec$31513$1VmeqK
                (g$vector-map$21248$1VmeqK
                  (case-lambda
                    ((g$x$31514$1VmeqK)
                     (g$make-stx$28697$1VmeqK
                       (g$stx-expr$28698$1VmeqK g$x$31514$1VmeqK)
                       (append
                         g$diff$31512$1VmeqK
                         (g$stx-mark*$28699$1VmeqK g$x$31514$1VmeqK))
                       '()
                       '())))
                  g$id-vec$31513$1VmeqK))))
           (g$diff-marks$31511$1VmeqK
             (g$stx-mark*$28699$1VmeqK g$id$31510$1VmeqK)
             (g$module-interface-first-mark$29260$1VmeqK
               g$iface$31509$1VmeqK))
           (g$module-interface-exp-id-vec$29261$1VmeqK
             g$iface$31509$1VmeqK))))))
   (g$syntax-transpose$29267$1VmeqK
     g$syntax-transpose$32860$1VmeqK
     (case-lambda
       ((g$object$31518$1VmeqK
          g$base-id$31519$1VmeqK
          g$new-id$31520$1VmeqK)
        (letrec* ((g$who$31521$1VmeqK 'syntax-transpose)
                  (g$err$31522$1VmeqK
                    (case-lambda
                      ((g$msg$31564$1VmeqK . g$args$31565$1VmeqK)
                       (apply
                         assertion-violation
                         g$who$31521$1VmeqK
                         g$msg$31564$1VmeqK
                         g$args$31565$1VmeqK))))
                  (g$split$31523$1VmeqK
                    (case-lambda
                      ((g$s*$31557$1VmeqK)
                       (if (eq? (car g$s*$31557$1VmeqK) 'shift)
                         (values (list 'shift) (cdr g$s*$31557$1VmeqK))
                         (begin
                           '#f
                           (call-with-values
                             (case-lambda
                               (()
                                (g$split$31523$1VmeqK
                                  (cdr g$s*$31557$1VmeqK))))
                             (case-lambda
                               ((g$s1*$31560$1VmeqK g$s2*$31561$1VmeqK)
                                ((case-lambda
                                   ((g$s2*$31562$1VmeqK
                                      g$s1*$31563$1VmeqK)
                                    (values
                                      (cons
                                        (car g$s*$31557$1VmeqK)
                                        g$s1*$31563$1VmeqK)
                                      g$s2*$31562$1VmeqK)))
                                 g$s2*$31561$1VmeqK
                                 g$s1*$31560$1VmeqK)))))))))
                  (g$final$31524$1VmeqK
                    (case-lambda
                      ((g$s*$31555$1VmeqK)
                       (if ((case-lambda
                              ((g$t$31556$1VmeqK)
                               (if g$t$31556$1VmeqK
                                 g$t$31556$1VmeqK
                                 (begin
                                   '#f
                                   (eq? (car g$s*$31555$1VmeqK)
                                        'shift)))))
                            (null? g$s*$31555$1VmeqK))
                         '()
                         (begin
                           '#f
                           (cons
                             (car g$s*$31555$1VmeqK)
                             (g$final$31524$1VmeqK
                               (cdr g$s*$31555$1VmeqK))))))))
                  (g$diff$31525$1VmeqK
                    (case-lambda
                      ((g$m$31535$1VmeqK
                         g$m*$31536$1VmeqK
                         g$s*$31537$1VmeqK
                         g$ae*$31538$1VmeqK)
                       (if (null? g$m*$31536$1VmeqK)
                         (g$err$31522$1VmeqK
                           '"unmatched identifiers"
                           g$base-id$31519$1VmeqK
                           g$new-id$31520$1VmeqK)
                         ((case-lambda
                            ((g$m1$31539$1VmeqK)
                             (if (eq? g$m$31535$1VmeqK
                                      g$m1$31539$1VmeqK)
                               (values
                                 '()
                                 (g$final$31524$1VmeqK
                                   g$s*$31537$1VmeqK)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$31523$1VmeqK
                                      g$s*$31537$1VmeqK)))
                                 (case-lambda
                                   ((g$s1*$31542$1VmeqK
                                      g$s2*$31543$1VmeqK)
                                    ((case-lambda
                                       ((g$s2*$31544$1VmeqK
                                          g$s1*$31545$1VmeqK)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$31525$1VmeqK
                                               g$m$31535$1VmeqK
                                               (cdr g$m*$31536$1VmeqK)
                                               g$s2*$31544$1VmeqK
                                               (cdr g$ae*$31538$1VmeqK))))
                                          (case-lambda
                                            ((g$nm*$31549$1VmeqK
                                               g$ns*$31550$1VmeqK
                                               g$nae*$31551$1VmeqK)
                                             ((case-lambda
                                                ((g$nae*$31552$1VmeqK
                                                   g$ns*$31553$1VmeqK
                                                   g$nm*$31554$1VmeqK)
                                                 (values
                                                   (cons
                                                     g$m1$31539$1VmeqK
                                                     g$nm*$31554$1VmeqK)
                                                   (append
                                                     g$s1*$31545$1VmeqK
                                                     g$ns*$31553$1VmeqK)
                                                   (cons
                                                     (car g$ae*$31538$1VmeqK)
                                                     g$nae*$31552$1VmeqK))))
                                              g$nae*$31551$1VmeqK
                                              g$ns*$31550$1VmeqK
                                              g$nm*$31549$1VmeqK))))))
                                     g$s2*$31543$1VmeqK
                                     g$s1*$31542$1VmeqK)))))))
                          (car g$m*$31536$1VmeqK)))))))
          (begin
            (if (not (g$id?$28724$1VmeqK g$base-id$31519$1VmeqK))
              (g$err$31522$1VmeqK
                '"not an identifier"
                g$base-id$31519$1VmeqK)
              (void))
            (if (not (g$id?$28724$1VmeqK g$new-id$31520$1VmeqK))
              (g$err$31522$1VmeqK
                '"not an identifier"
                g$new-id$31520$1VmeqK)
              (void))
            (if (not (g$free-identifier=?$29332$1VmeqK
                       g$base-id$31519$1VmeqK
                       g$new-id$31520$1VmeqK))
              (g$err$31522$1VmeqK
                '"not the same identifier"
                g$base-id$31519$1VmeqK
                g$new-id$31520$1VmeqK)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$31525$1VmeqK
                   (car (g$stx-mark*$28699$1VmeqK
                          g$base-id$31519$1VmeqK))
                   (g$stx-mark*$28699$1VmeqK g$new-id$31520$1VmeqK)
                   (g$stx-subst*$28700$1VmeqK g$new-id$31520$1VmeqK)
                   (g$stx-ae*$28701$1VmeqK g$new-id$31520$1VmeqK))))
              (case-lambda
                ((g$m*$31529$1VmeqK
                   g$s*$31530$1VmeqK
                   g$ae*$31531$1VmeqK)
                 ((case-lambda
                    ((g$ae*$31532$1VmeqK
                       g$s*$31533$1VmeqK
                       g$m*$31534$1VmeqK)
                     (if (if (null? g$m*$31534$1VmeqK)
                           (begin '#f (null? g$s*$31533$1VmeqK))
                           '#f)
                       g$object$31518$1VmeqK
                       (g$mkstx$28712$1VmeqK
                         g$object$31518$1VmeqK
                         g$m*$31534$1VmeqK
                         g$s*$31533$1VmeqK
                         g$ae*$31532$1VmeqK))))
                  g$ae*$31531$1VmeqK
                  g$s*$31530$1VmeqK
                  g$m*$31529$1VmeqK)))))))))
   (g$chi-internal-module$29268$1VmeqK
     g$chi-internal-module$32861$1VmeqK
     (case-lambda
       ((g$e$31566$1VmeqK
          g$r$31567$1VmeqK
          g$mr$31568$1VmeqK
          g$lex*$31569$1VmeqK
          g$rhs*$31570$1VmeqK
          g$mod**$31571$1VmeqK
          g$kwd*$31572$1VmeqK)
        (call-with-values
          (case-lambda
            (() (g$parse-module$29252$1VmeqK g$e$31566$1VmeqK)))
          (case-lambda
            ((g$name$31576$1VmeqK
               g$exp-id*$31577$1VmeqK
               g$e*$31578$1VmeqK)
             ((case-lambda
                ((g$e*$31579$1VmeqK
                   g$exp-id*$31580$1VmeqK
                   g$name$31581$1VmeqK)
                 ((case-lambda
                    ((g$rib$31582$1VmeqK)
                     ((case-lambda
                        ((g$e*$31583$1VmeqK)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$29269$1VmeqK
                                g$e*$31583$1VmeqK
                                g$r$31567$1VmeqK
                                g$mr$31568$1VmeqK
                                g$lex*$31569$1VmeqK
                                g$rhs*$31570$1VmeqK
                                g$mod**$31571$1VmeqK
                                g$kwd*$31572$1VmeqK
                                '()
                                g$rib$31582$1VmeqK
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$31592$1VmeqK
                                g$r$31593$1VmeqK
                                g$mr$31594$1VmeqK
                                g$lex*$31595$1VmeqK
                                g$rhs*$31596$1VmeqK
                                g$mod**$31597$1VmeqK
                                g$kwd*$31598$1VmeqK
                                g$_exp*$31599$1VmeqK)
                              ((case-lambda
                                 ((g$_exp*$31600$1VmeqK
                                    g$kwd*$31601$1VmeqK
                                    g$mod**$31602$1VmeqK
                                    g$rhs*$31603$1VmeqK
                                    g$lex*$31604$1VmeqK
                                    g$mr$31605$1VmeqK
                                    g$r$31606$1VmeqK
                                    g$e*$31607$1VmeqK)
                                  ((case-lambda
                                     ((g$exp-lab*$31608$1VmeqK
                                        g$mod**$31609$1VmeqK)
                                      (if (not g$name$31581$1VmeqK)
                                        (values
                                          g$lex*$31604$1VmeqK
                                          g$rhs*$31603$1VmeqK
                                          g$exp-id*$31580$1VmeqK
                                          g$exp-lab*$31608$1VmeqK
                                          g$r$31606$1VmeqK
                                          g$mr$31605$1VmeqK
                                          g$mod**$31609$1VmeqK
                                          g$kwd*$31601$1VmeqK)
                                        ((case-lambda
                                           ((g$lab$31610$1VmeqK
                                              g$iface$31611$1VmeqK)
                                            (values
                                              g$lex*$31604$1VmeqK
                                              g$rhs*$31603$1VmeqK
                                              (vector
                                                g$name$31581$1VmeqK)
                                              (vector
                                                g$lab$31610$1VmeqK)
                                              (cons
                                                (cons
                                                  g$lab$31610$1VmeqK
                                                  (cons
                                                    '$module
                                                    g$iface$31611$1VmeqK))
                                                g$r$31606$1VmeqK)
                                              (cons
                                                (cons
                                                  g$lab$31610$1VmeqK
                                                  (cons
                                                    '$module
                                                    g$iface$31611$1VmeqK))
                                                g$mr$31605$1VmeqK)
                                              g$mod**$31609$1VmeqK
                                              g$kwd*$31601$1VmeqK)))
                                         (g$gen-label$28661$1VmeqK
                                           'module)
                                         (g$make-module-interface$29259$1VmeqK
                                           (car (g$stx-mark*$28699$1VmeqK
                                                  g$name$31581$1VmeqK))
                                           (g$vector-map$21248$1VmeqK
                                             (case-lambda
                                               ((g$x$31612$1VmeqK)
                                                (g$make-stx$28697$1VmeqK
                                                  (g$stx-expr$28698$1VmeqK
                                                    g$x$31612$1VmeqK)
                                                  (g$stx-mark*$28699$1VmeqK
                                                    g$x$31612$1VmeqK)
                                                  '()
                                                  '())))
                                             g$exp-id*$31580$1VmeqK)
                                           g$exp-lab*$31608$1VmeqK)))))
                                   (g$vector-map$21248$1VmeqK
                                     (case-lambda
                                       ((g$x$31613$1VmeqK)
                                        ((case-lambda
                                           ((g$t$31614$1VmeqK)
                                            (if g$t$31614$1VmeqK
                                              g$t$31614$1VmeqK
                                              (begin
                                                '#f
                                                (g$syntax-violation$29341$1VmeqK
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$31613$1VmeqK)))))
                                         (g$id->label$28737$1VmeqK
                                           (g$make-stx$28697$1VmeqK
                                             (g$id->sym$28725$1VmeqK
                                               g$x$31613$1VmeqK)
                                             (g$stx-mark*$28699$1VmeqK
                                               g$x$31613$1VmeqK)
                                             (list g$rib$31582$1VmeqK)
                                             '())))))
                                     g$exp-id*$31580$1VmeqK)
                                   (cons
                                     g$e*$31607$1VmeqK
                                     g$mod**$31602$1VmeqK))))
                               g$_exp*$31599$1VmeqK
                               g$kwd*$31598$1VmeqK
                               g$mod**$31597$1VmeqK
                               g$rhs*$31596$1VmeqK
                               g$lex*$31595$1VmeqK
                               g$mr$31594$1VmeqK
                               g$r$31593$1VmeqK
                               g$e*$31592$1VmeqK))))))
                      (g$map$20349$1VmeqK
                        (case-lambda
                          ((g$x$31615$1VmeqK)
                           (g$add-subst$28714$1VmeqK
                             g$rib$31582$1VmeqK
                             g$x$31615$1VmeqK)))
                        (g$syntax->list$28723$1VmeqK
                          g$e*$31579$1VmeqK)))))
                  (g$make-empty-rib$28682$1VmeqK))))
              g$e*$31578$1VmeqK
              g$exp-id*$31577$1VmeqK
              g$name$31576$1VmeqK)))))))
   (g$chi-body*$29269$1VmeqK
     g$chi-body*$32862$1VmeqK
     (case-lambda
       ((g$e*$31616$1VmeqK
          g$r$31617$1VmeqK
          g$mr$31618$1VmeqK
          g$lex*$31619$1VmeqK
          g$rhs*$31620$1VmeqK
          g$mod**$31621$1VmeqK
          g$kwd*$31622$1VmeqK
          g$exp*$31623$1VmeqK
          g$rib$31624$1VmeqK
          g$mix?$31625$1VmeqK
          g$sd?$31626$1VmeqK)
        (if (null? g$e*$31616$1VmeqK)
          (values
            g$e*$31616$1VmeqK
            g$r$31617$1VmeqK
            g$mr$31618$1VmeqK
            g$lex*$31619$1VmeqK
            g$rhs*$31620$1VmeqK
            g$mod**$31621$1VmeqK
            g$kwd*$31622$1VmeqK
            g$exp*$31623$1VmeqK)
          (begin
            '#f
            ((case-lambda
               ((g$e$31627$1VmeqK)
                (call-with-values
                  (case-lambda
                    (()
                     (g$syntax-type$28744$1VmeqK
                       g$e$31627$1VmeqK
                       g$r$31617$1VmeqK)))
                  (case-lambda
                    ((g$type$31631$1VmeqK
                       g$value$31632$1VmeqK
                       g$kwd$31633$1VmeqK)
                     ((case-lambda
                        ((g$kwd$31634$1VmeqK
                           g$value$31635$1VmeqK
                           g$type$31636$1VmeqK)
                         ((case-lambda
                            ((g$kwd*$31637$1VmeqK)
                             ((case-lambda
                                ((g$t$31638$1VmeqK)
                                 (if (eqv? g$t$31638$1VmeqK 'define)
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define$29162$1VmeqK
                                          g$e$31627$1VmeqK)))
                                     (case-lambda
                                       ((g$id$31641$1VmeqK
                                          g$rhs$31642$1VmeqK)
                                        ((case-lambda
                                           ((g$rhs$31643$1VmeqK
                                              g$id$31644$1VmeqK)
                                            (begin
                                              (if (g$bound-id-member?$28731$1VmeqK
                                                    g$id$31644$1VmeqK
                                                    g$kwd*$31637$1VmeqK)
                                                (g$syntax-violation$29341$1VmeqK
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$31627$1VmeqK)
                                                (void))
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$gen-define-label+loc$28663$1VmeqK
                                                     g$id$31644$1VmeqK
                                                     g$rib$31624$1VmeqK
                                                     g$sd?$31626$1VmeqK)))
                                                (case-lambda
                                                  ((g$lab$31647$1VmeqK
                                                     g$lex$31648$1VmeqK)
                                                   ((case-lambda
                                                      ((g$lex$31649$1VmeqK
                                                         g$lab$31650$1VmeqK)
                                                       (begin
                                                         (g$extend-rib!$28685$1VmeqK
                                                           g$rib$31624$1VmeqK
                                                           g$id$31644$1VmeqK
                                                           g$lab$31650$1VmeqK
                                                           g$sd?$31626$1VmeqK)
                                                         (g$chi-body*$29269$1VmeqK
                                                           (cdr g$e*$31616$1VmeqK)
                                                           (g$add-lexical$29169$1VmeqK
                                                             g$lab$31650$1VmeqK
                                                             g$lex$31649$1VmeqK
                                                             g$r$31617$1VmeqK)
                                                           g$mr$31618$1VmeqK
                                                           (cons
                                                             g$lex$31649$1VmeqK
                                                             g$lex*$31619$1VmeqK)
                                                           (cons
                                                             g$rhs$31643$1VmeqK
                                                             g$rhs*$31620$1VmeqK)
                                                           g$mod**$31621$1VmeqK
                                                           g$kwd*$31637$1VmeqK
                                                           g$exp*$31623$1VmeqK
                                                           g$rib$31624$1VmeqK
                                                           g$mix?$31625$1VmeqK
                                                           g$sd?$31626$1VmeqK))))
                                                    g$lex$31648$1VmeqK
                                                    g$lab$31647$1VmeqK)))))))
                                         g$rhs$31642$1VmeqK
                                         g$id$31641$1VmeqK))))
                                   (if (eqv?
                                         g$t$31638$1VmeqK
                                         'define-syntax)
                                     (call-with-values
                                       (case-lambda
                                         (()
                                          (g$parse-define-syntax$29163$1VmeqK
                                            g$e$31627$1VmeqK)))
                                       (case-lambda
                                         ((g$id$31653$1VmeqK
                                            g$rhs$31654$1VmeqK)
                                          ((case-lambda
                                             ((g$rhs$31655$1VmeqK
                                                g$id$31656$1VmeqK)
                                              (begin
                                                (if (g$bound-id-member?$28731$1VmeqK
                                                      g$id$31656$1VmeqK
                                                      g$kwd*$31637$1VmeqK)
                                                  (g$syntax-violation$29341$1VmeqK
                                                    '#f
                                                    '"cannot redefine keyword"
                                                    g$e$31627$1VmeqK)
                                                  (void))
                                                ((case-lambda
                                                   ((g$lab$31657$1VmeqK)
                                                    ((case-lambda
                                                       ((g$expanded-rhs$31658$1VmeqK)
                                                        (begin
                                                          (g$extend-rib!$28685$1VmeqK
                                                            g$rib$31624$1VmeqK
                                                            g$id$31656$1VmeqK
                                                            g$lab$31657$1VmeqK
                                                            g$sd?$31626$1VmeqK)
                                                          ((case-lambda
                                                             ((g$b$31659$1VmeqK)
                                                              (g$chi-body*$29269$1VmeqK
                                                                (cdr g$e*$31616$1VmeqK)
                                                                (cons
                                                                  (cons
                                                                    g$lab$31657$1VmeqK
                                                                    g$b$31659$1VmeqK)
                                                                  g$r$31617$1VmeqK)
                                                                (cons
                                                                  (cons
                                                                    g$lab$31657$1VmeqK
                                                                    g$b$31659$1VmeqK)
                                                                  g$mr$31618$1VmeqK)
                                                                g$lex*$31619$1VmeqK
                                                                g$rhs*$31620$1VmeqK
                                                                g$mod**$31621$1VmeqK
                                                                g$kwd*$31637$1VmeqK
                                                                g$exp*$31623$1VmeqK
                                                                g$rib$31624$1VmeqK
                                                                g$mix?$31625$1VmeqK
                                                                g$sd?$31626$1VmeqK)))
                                                           (g$make-eval-transformer$28772$1VmeqK
                                                             g$expanded-rhs$31658$1VmeqK)))))
                                                     (g$expand-transformer$29270$1VmeqK
                                                       g$rhs$31655$1VmeqK
                                                       g$mr$31618$1VmeqK))))
                                                 (g$gen-define-label$28664$1VmeqK
                                                   g$id$31656$1VmeqK
                                                   g$rib$31624$1VmeqK
                                                   g$sd?$31626$1VmeqK)))))
                                           g$rhs$31654$1VmeqK
                                           g$id$31653$1VmeqK))))
                                     (if (g$memv$20342$1VmeqK
                                           g$t$31638$1VmeqK
                                           '(let-syntax letrec-syntax))
                                       ((case-lambda
                                          ((g$t$31660$1VmeqK)
                                           ((case-lambda
                                              ((g$ls/false$31661$1VmeqK)
                                               (if (if g$ls/false$31661$1VmeqK
                                                     (begin
                                                       '#f
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$31662$1VmeqK
                                                              g$xrhs*$31663$1VmeqK
                                                              g$xbody*$31664$1VmeqK)
                                                            (if (not (g$valid-bound-ids?$28729$1VmeqK
                                                                       g$xlhs*$31662$1VmeqK))
                                                              (g$syntax-violation$29341$1VmeqK
                                                                '#f
                                                                '"invalid identifiers"
                                                                g$e$31627$1VmeqK)
                                                              (void))))
                                                         g$ls/false$31661$1VmeqK))
                                                     '#f)
                                                 (apply
                                                   (case-lambda
                                                     ((g$xlhs*$31665$1VmeqK
                                                        g$xrhs*$31666$1VmeqK
                                                        g$xbody*$31667$1VmeqK)
                                                      ((case-lambda
                                                         ((g$xlab*$31668$1VmeqK)
                                                          ((case-lambda
                                                             ((g$xrib$31669$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$xb*$31670$1VmeqK)
                                                                  (g$chi-body*$29269$1VmeqK
                                                                    (append
                                                                      (g$map$20349$1VmeqK
                                                                        (case-lambda
                                                                          ((g$x$31671$1VmeqK)
                                                                           (g$add-subst$28714$1VmeqK
                                                                             g$xrib$31669$1VmeqK
                                                                             g$x$31671$1VmeqK)))
                                                                        g$xbody*$31667$1VmeqK)
                                                                      (cdr g$e*$31616$1VmeqK))
                                                                    (append
                                                                      (g$map$20349$1VmeqK
                                                                        cons
                                                                        g$xlab*$31668$1VmeqK
                                                                        g$xb*$31670$1VmeqK)
                                                                      g$r$31617$1VmeqK)
                                                                    (append
                                                                      (g$map$20349$1VmeqK
                                                                        cons
                                                                        g$xlab*$31668$1VmeqK
                                                                        g$xb*$31670$1VmeqK)
                                                                      g$mr$31618$1VmeqK)
                                                                    g$lex*$31619$1VmeqK
                                                                    g$rhs*$31620$1VmeqK
                                                                    g$mod**$31621$1VmeqK
                                                                    g$kwd*$31637$1VmeqK
                                                                    g$exp*$31623$1VmeqK
                                                                    g$rib$31624$1VmeqK
                                                                    g$mix?$31625$1VmeqK
                                                                    g$sd?$31626$1VmeqK)))
                                                               (g$map$20349$1VmeqK
                                                                 (case-lambda
                                                                   ((g$x$31672$1VmeqK)
                                                                    (g$make-eval-transformer$28772$1VmeqK
                                                                      (g$expand-transformer$29270$1VmeqK
                                                                        (if (eq? g$type$31636$1VmeqK
                                                                                 'let-syntax)
                                                                          g$x$31672$1VmeqK
                                                                          (g$add-subst$28714$1VmeqK
                                                                            g$xrib$31669$1VmeqK
                                                                            g$x$31672$1VmeqK))
                                                                        g$mr$31618$1VmeqK))))
                                                                 g$xrhs*$31666$1VmeqK))))
                                                           (g$make-full-rib$28690$1VmeqK
                                                             g$xlhs*$31665$1VmeqK
                                                             g$xlab*$31668$1VmeqK))))
                                                       (g$map$20349$1VmeqK
                                                         g$gen-label$28661$1VmeqK
                                                         g$xlhs*$31665$1VmeqK))))
                                                   g$ls/false$31661$1VmeqK)
                                                 (g$syntax-violation$29341$1VmeqK
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$31660$1VmeqK))))
                                            (g$syntax-dispatch$29222$1VmeqK
                                              g$t$31660$1VmeqK
                                              '(_ #(each (any any))
                                                  .
                                                  each-any)))))
                                        g$e$31627$1VmeqK)
                                       (if (eqv?
                                             g$t$31638$1VmeqK
                                             'begin)
                                         ((case-lambda
                                            ((g$t$31673$1VmeqK)
                                             ((case-lambda
                                                ((g$ls/false$31674$1VmeqK)
                                                 (if g$ls/false$31674$1VmeqK
                                                   (apply
                                                     (case-lambda
                                                       ((g$x*$31675$1VmeqK)
                                                        (g$chi-body*$29269$1VmeqK
                                                          (append
                                                            g$x*$31675$1VmeqK
                                                            (cdr g$e*$31616$1VmeqK))
                                                          g$r$31617$1VmeqK
                                                          g$mr$31618$1VmeqK
                                                          g$lex*$31619$1VmeqK
                                                          g$rhs*$31620$1VmeqK
                                                          g$mod**$31621$1VmeqK
                                                          g$kwd*$31637$1VmeqK
                                                          g$exp*$31623$1VmeqK
                                                          g$rib$31624$1VmeqK
                                                          g$mix?$31625$1VmeqK
                                                          g$sd?$31626$1VmeqK)))
                                                     g$ls/false$31674$1VmeqK)
                                                   (g$syntax-violation$29341$1VmeqK
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$31673$1VmeqK))))
                                              (g$syntax-dispatch$29222$1VmeqK
                                                g$t$31673$1VmeqK
                                                '(_ . each-any)))))
                                          g$e$31627$1VmeqK)
                                         (if (g$memv$20342$1VmeqK
                                               g$t$31638$1VmeqK
                                               '(global-macro
                                                  global-macro!))
                                           (g$chi-body*$29269$1VmeqK
                                             (cons
                                               (g$add-subst$28714$1VmeqK
                                                 g$rib$31624$1VmeqK
                                                 (g$chi-global-macro$29237$1VmeqK
                                                   g$value$31635$1VmeqK
                                                   g$e$31627$1VmeqK
                                                   g$r$31617$1VmeqK))
                                               (cdr g$e*$31616$1VmeqK))
                                             g$r$31617$1VmeqK
                                             g$mr$31618$1VmeqK
                                             g$lex*$31619$1VmeqK
                                             g$rhs*$31620$1VmeqK
                                             g$mod**$31621$1VmeqK
                                             g$kwd*$31637$1VmeqK
                                             g$exp*$31623$1VmeqK
                                             g$rib$31624$1VmeqK
                                             g$mix?$31625$1VmeqK
                                             g$sd?$31626$1VmeqK)
                                           (if (g$memv$20342$1VmeqK
                                                 g$t$31638$1VmeqK
                                                 '(local-macro
                                                    local-macro!))
                                             (g$chi-body*$29269$1VmeqK
                                               (cons
                                                 (g$add-subst$28714$1VmeqK
                                                   g$rib$31624$1VmeqK
                                                   (g$chi-local-macro$29236$1VmeqK
                                                     g$value$31635$1VmeqK
                                                     g$e$31627$1VmeqK
                                                     g$r$31617$1VmeqK))
                                                 (cdr g$e*$31616$1VmeqK))
                                               g$r$31617$1VmeqK
                                               g$mr$31618$1VmeqK
                                               g$lex*$31619$1VmeqK
                                               g$rhs*$31620$1VmeqK
                                               g$mod**$31621$1VmeqK
                                               g$kwd*$31637$1VmeqK
                                               g$exp*$31623$1VmeqK
                                               g$rib$31624$1VmeqK
                                               g$mix?$31625$1VmeqK
                                               g$sd?$31626$1VmeqK)
                                             (if (g$memv$20342$1VmeqK
                                                   g$t$31638$1VmeqK
                                                   '(macro macro!))
                                               (g$chi-body*$29269$1VmeqK
                                                 (cons
                                                   (g$add-subst$28714$1VmeqK
                                                     g$rib$31624$1VmeqK
                                                     (g$chi-macro$29235$1VmeqK
                                                       g$value$31635$1VmeqK
                                                       g$e$31627$1VmeqK
                                                       g$r$31617$1VmeqK))
                                                   (cdr g$e*$31616$1VmeqK))
                                                 g$r$31617$1VmeqK
                                                 g$mr$31618$1VmeqK
                                                 g$lex*$31619$1VmeqK
                                                 g$rhs*$31620$1VmeqK
                                                 g$mod**$31621$1VmeqK
                                                 g$kwd*$31637$1VmeqK
                                                 g$exp*$31623$1VmeqK
                                                 g$rib$31624$1VmeqK
                                                 g$mix?$31625$1VmeqK
                                                 g$sd?$31626$1VmeqK)
                                               (if (eqv?
                                                     g$t$31638$1VmeqK
                                                     'module)
                                                 (call-with-values
                                                   (case-lambda
                                                     (()
                                                      (g$chi-internal-module$29268$1VmeqK
                                                        g$e$31627$1VmeqK
                                                        g$r$31617$1VmeqK
                                                        g$mr$31618$1VmeqK
                                                        g$lex*$31619$1VmeqK
                                                        g$rhs*$31620$1VmeqK
                                                        g$mod**$31621$1VmeqK
                                                        g$kwd*$31637$1VmeqK)))
                                                   (case-lambda
                                                     ((g$lex*$31684$1VmeqK
                                                        g$rhs*$31685$1VmeqK
                                                        g$m-exp-id*$31686$1VmeqK
                                                        g$m-exp-lab*$31687$1VmeqK
                                                        g$r$31688$1VmeqK
                                                        g$mr$31689$1VmeqK
                                                        g$mod**$31690$1VmeqK
                                                        g$kwd*$31691$1VmeqK)
                                                      ((case-lambda
                                                         ((g$kwd*$31692$1VmeqK
                                                            g$mod**$31693$1VmeqK
                                                            g$mr$31694$1VmeqK
                                                            g$r$31695$1VmeqK
                                                            g$m-exp-lab*$31696$1VmeqK
                                                            g$m-exp-id*$31697$1VmeqK
                                                            g$rhs*$31698$1VmeqK
                                                            g$lex*$31699$1VmeqK)
                                                          (begin
                                                            (g$vector-for-each$21249$1VmeqK
                                                              (case-lambda
                                                                ((g$id$31700$1VmeqK
                                                                   g$lab$31701$1VmeqK)
                                                                 (g$extend-rib!$28685$1VmeqK
                                                                   g$rib$31624$1VmeqK
                                                                   g$id$31700$1VmeqK
                                                                   g$lab$31701$1VmeqK
                                                                   g$sd?$31626$1VmeqK)))
                                                              g$m-exp-id*$31697$1VmeqK
                                                              g$m-exp-lab*$31696$1VmeqK)
                                                            (g$chi-body*$29269$1VmeqK
                                                              (cdr g$e*$31616$1VmeqK)
                                                              g$r$31695$1VmeqK
                                                              g$mr$31694$1VmeqK
                                                              g$lex*$31699$1VmeqK
                                                              g$rhs*$31698$1VmeqK
                                                              g$mod**$31693$1VmeqK
                                                              g$kwd*$31692$1VmeqK
                                                              g$exp*$31623$1VmeqK
                                                              g$rib$31624$1VmeqK
                                                              g$mix?$31625$1VmeqK
                                                              g$sd?$31626$1VmeqK))))
                                                       g$kwd*$31691$1VmeqK
                                                       g$mod**$31690$1VmeqK
                                                       g$mr$31689$1VmeqK
                                                       g$r$31688$1VmeqK
                                                       g$m-exp-lab*$31687$1VmeqK
                                                       g$m-exp-id*$31686$1VmeqK
                                                       g$rhs*$31685$1VmeqK
                                                       g$lex*$31684$1VmeqK))))
                                                 (if (eqv?
                                                       g$t$31638$1VmeqK
                                                       'library)
                                                   (begin
                                                     (g$library-expander$29325$1VmeqK
                                                       (g$stx->datum$28735$1VmeqK
                                                         g$e$31627$1VmeqK))
                                                     (g$chi-body*$29269$1VmeqK
                                                       (cdr g$e*$31616$1VmeqK)
                                                       g$r$31617$1VmeqK
                                                       g$mr$31618$1VmeqK
                                                       g$lex*$31619$1VmeqK
                                                       g$rhs*$31620$1VmeqK
                                                       g$mod**$31621$1VmeqK
                                                       g$kwd*$31637$1VmeqK
                                                       g$exp*$31623$1VmeqK
                                                       g$rib$31624$1VmeqK
                                                       g$mix?$31625$1VmeqK
                                                       g$sd?$31626$1VmeqK))
                                                   (if (eqv?
                                                         g$t$31638$1VmeqK
                                                         'export)
                                                     ((case-lambda
                                                        ((g$t$31702$1VmeqK)
                                                         ((case-lambda
                                                            ((g$ls/false$31703$1VmeqK)
                                                             (if g$ls/false$31703$1VmeqK
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$exp-decl*$31704$1VmeqK)
                                                                    (g$chi-body*$29269$1VmeqK
                                                                      (cdr g$e*$31616$1VmeqK)
                                                                      g$r$31617$1VmeqK
                                                                      g$mr$31618$1VmeqK
                                                                      g$lex*$31619$1VmeqK
                                                                      g$rhs*$31620$1VmeqK
                                                                      g$mod**$31621$1VmeqK
                                                                      g$kwd*$31637$1VmeqK
                                                                      (append
                                                                        g$exp-decl*$31704$1VmeqK
                                                                        g$exp*$31623$1VmeqK)
                                                                      g$rib$31624$1VmeqK
                                                                      g$mix?$31625$1VmeqK
                                                                      g$sd?$31626$1VmeqK)))
                                                                 g$ls/false$31703$1VmeqK)
                                                               (g$syntax-violation$29341$1VmeqK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31702$1VmeqK))))
                                                          (g$syntax-dispatch$29222$1VmeqK
                                                            g$t$31702$1VmeqK
                                                            '(_ .
                                                                each-any)))))
                                                      g$e$31627$1VmeqK)
                                                     (if (eqv?
                                                           g$t$31638$1VmeqK
                                                           'import)
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$31705$1VmeqK
                                                                       (case-lambda
                                                                         ((g$e$31747$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$31748$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31749$1VmeqK)
                                                                                  (if (if g$ls/false$31749$1VmeqK
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$31750$1VmeqK)
                                                                                               (g$id?$28724$1VmeqK
                                                                                                 g$id$31750$1VmeqK)))
                                                                                            g$ls/false$31749$1VmeqK))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$31751$1VmeqK)
                                                                                         '#t))
                                                                                      g$ls/false$31749$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$31752$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31753$1VmeqK)
                                                                                            (if g$ls/false$31753$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$31754$1VmeqK)
                                                                                                   '#f))
                                                                                                g$ls/false$31753$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$t$31755$1VmeqK)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$31756$1VmeqK)
                                                                                                      (if g$ls/false$31756$1VmeqK
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$29341$1VmeqK
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$31747$1VmeqK)))
                                                                                                          g$ls/false$31756$1VmeqK)
                                                                                                        (g$syntax-violation$29341$1VmeqK
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$31755$1VmeqK))))
                                                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                                                     g$t$31755$1VmeqK
                                                                                                     '_))))
                                                                                               g$t$31752$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$31752$1VmeqK
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$31748$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$31748$1VmeqK
                                                                                 '(_ any)))))
                                                                           g$e$31747$1VmeqK))))
                                                                     (g$module-import$31706$1VmeqK
                                                                       (case-lambda
                                                                         ((g$e$31730$1VmeqK
                                                                            g$r$31731$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$31732$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31733$1VmeqK)
                                                                                  (if (if g$ls/false$31733$1VmeqK
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$31734$1VmeqK)
                                                                                               (g$id?$28724$1VmeqK
                                                                                                 g$id$31734$1VmeqK)))
                                                                                            g$ls/false$31733$1VmeqK))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$31735$1VmeqK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$28744$1VmeqK
                                                                                                g$id$31735$1VmeqK
                                                                                                g$r$31731$1VmeqK)))
                                                                                           (case-lambda
                                                                                             ((g$type$31739$1VmeqK
                                                                                                g$value$31740$1VmeqK
                                                                                                g$kwd$31741$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$31742$1VmeqK
                                                                                                    g$value$31743$1VmeqK
                                                                                                    g$type$31744$1VmeqK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$31745$1VmeqK)
                                                                                                      (if (eqv?
                                                                                                            g$t$31745$1VmeqK
                                                                                                            '$module)
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$31746$1VmeqK)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$29266$1VmeqK
                                                                                                                g$iface$31746$1VmeqK
                                                                                                                g$id$31735$1VmeqK)
                                                                                                              (g$module-interface-exp-lab-vec$29262$1VmeqK
                                                                                                                g$iface$31746$1VmeqK))))
                                                                                                         g$value$31743$1VmeqK)
                                                                                                        (begin
                                                                                                          '#f
                                                                                                          (g$syntax-violation$29341$1VmeqK
                                                                                                            '#f
                                                                                                            '"invalid import"
                                                                                                            g$e$31730$1VmeqK)))))
                                                                                                   g$type$31744$1VmeqK)))
                                                                                               g$kwd$31741$1VmeqK
                                                                                               g$value$31740$1VmeqK
                                                                                               g$type$31739$1VmeqK))))))
                                                                                      g$ls/false$31733$1VmeqK)
                                                                                    (g$syntax-violation$29341$1VmeqK
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$31732$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$31732$1VmeqK
                                                                                 '(_ any)))))
                                                                           g$e$31730$1VmeqK))))
                                                                     (g$library-import$31707$1VmeqK
                                                                       (case-lambda
                                                                         ((g$e$31716$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$t$31717$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31718$1VmeqK)
                                                                                  (if g$ls/false$31718$1VmeqK
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$31719$1VmeqK
                                                                                           g$imp*$31720$1VmeqK)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$29274$1VmeqK
                                                                                                (g$syntax->datum$29344$1VmeqK
                                                                                                  g$imp*$31720$1VmeqK))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$31723$1VmeqK
                                                                                                g$subst-labels$31724$1VmeqK)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$31725$1VmeqK
                                                                                                    g$subst-names$31726$1VmeqK)
                                                                                                  (values
                                                                                                    (g$vector-map$21248$1VmeqK
                                                                                                      (case-lambda
                                                                                                        ((g$name$31727$1VmeqK)
                                                                                                         (g$datum->stx$28707$1VmeqK
                                                                                                           g$ctxt$31719$1VmeqK
                                                                                                           g$name$31727$1VmeqK)))
                                                                                                      g$subst-names$31726$1VmeqK)
                                                                                                    g$subst-labels$31725$1VmeqK)))
                                                                                               g$subst-labels$31724$1VmeqK
                                                                                               g$subst-names$31723$1VmeqK))))))
                                                                                      g$ls/false$31718$1VmeqK)
                                                                                    ((case-lambda
                                                                                       ((g$t$31728$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31729$1VmeqK)
                                                                                            (if g$ls/false$31729$1VmeqK
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$29341$1VmeqK
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$31716$1VmeqK)))
                                                                                                g$ls/false$31729$1VmeqK)
                                                                                              (g$syntax-violation$29341$1VmeqK
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$31728$1VmeqK))))
                                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                                           g$t$31728$1VmeqK
                                                                                           '_))))
                                                                                     g$t$31717$1VmeqK))))
                                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                                 g$t$31717$1VmeqK
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$31716$1VmeqK)))))
                                                             (begin
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    (if (g$module-import?$31705$1VmeqK
                                                                          g$e$31627$1VmeqK)
                                                                      (g$module-import$31706$1VmeqK
                                                                        g$e$31627$1VmeqK
                                                                        g$r$31617$1VmeqK)
                                                                      (g$library-import$31707$1VmeqK
                                                                        g$e$31627$1VmeqK))))
                                                                 (case-lambda
                                                                   ((g$id*$31710$1VmeqK
                                                                      g$lab*$31711$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$lab*$31712$1VmeqK
                                                                          g$id*$31713$1VmeqK)
                                                                        (g$vector-for-each$21249$1VmeqK
                                                                          (case-lambda
                                                                            ((g$id$31714$1VmeqK
                                                                               g$lab$31715$1VmeqK)
                                                                             (g$extend-rib!$28685$1VmeqK
                                                                               g$rib$31624$1VmeqK
                                                                               g$id$31714$1VmeqK
                                                                               g$lab$31715$1VmeqK
                                                                               g$sd?$31626$1VmeqK)))
                                                                          g$id*$31713$1VmeqK
                                                                          g$lab*$31712$1VmeqK)))
                                                                     g$lab*$31711$1VmeqK
                                                                     g$id*$31710$1VmeqK))))
                                                               (g$chi-body*$29269$1VmeqK
                                                                 (cdr g$e*$31616$1VmeqK)
                                                                 g$r$31617$1VmeqK
                                                                 g$mr$31618$1VmeqK
                                                                 g$lex*$31619$1VmeqK
                                                                 g$rhs*$31620$1VmeqK
                                                                 g$mod**$31621$1VmeqK
                                                                 g$kwd*$31637$1VmeqK
                                                                 g$exp*$31623$1VmeqK
                                                                 g$rib$31624$1VmeqK
                                                                 g$mix?$31625$1VmeqK
                                                                 g$sd?$31626$1VmeqK))))))
                                                       (begin
                                                         '#f
                                                         (if g$mix?$31625$1VmeqK
                                                           (g$chi-body*$29269$1VmeqK
                                                             (cdr g$e*$31616$1VmeqK)
                                                             g$r$31617$1VmeqK
                                                             g$mr$31618$1VmeqK
                                                             (cons
                                                               (g$gen-lexical$28659$1VmeqK
                                                                 'dummy)
                                                               g$lex*$31619$1VmeqK)
                                                             (cons
                                                               (cons
                                                                 'top-expr
                                                                 g$e$31627$1VmeqK)
                                                               g$rhs*$31620$1VmeqK)
                                                             g$mod**$31621$1VmeqK
                                                             g$kwd*$31637$1VmeqK
                                                             g$exp*$31623$1VmeqK
                                                             g$rib$31624$1VmeqK
                                                             '#t
                                                             g$sd?$31626$1VmeqK)
                                                           (values
                                                             g$e*$31616$1VmeqK
                                                             g$r$31617$1VmeqK
                                                             g$mr$31618$1VmeqK
                                                             g$lex*$31619$1VmeqK
                                                             g$rhs*$31620$1VmeqK
                                                             g$mod**$31621$1VmeqK
                                                             g$kwd*$31637$1VmeqK
                                                             g$exp*$31623$1VmeqK))))))))))))))))
                              g$type$31636$1VmeqK)))
                          (if (g$id?$28724$1VmeqK g$kwd$31634$1VmeqK)
                            (cons
                              g$kwd$31634$1VmeqK
                              g$kwd*$31622$1VmeqK)
                            g$kwd*$31622$1VmeqK))))
                      g$kwd$31633$1VmeqK
                      g$value$31632$1VmeqK
                      g$type$31631$1VmeqK))))))
             (car g$e*$31616$1VmeqK)))))))
   (g$expand-transformer$29270$1VmeqK
     g$expand-transformer$32863$1VmeqK
     (case-lambda
       ((g$expr$31757$1VmeqK g$r$31758$1VmeqK)
        ((case-lambda
           ((g$rtc$31759$1VmeqK)
            ((case-lambda
               ((g$expanded-rhs$31760$1VmeqK)
                (begin
                  (g$for-each$20350$1VmeqK
                    ((case-lambda
                       ((g$mark-visit$31761$1VmeqK)
                        (case-lambda
                          ((g$x$31762$1VmeqK)
                           (begin
                             (g$invoke-library$28430$1VmeqK
                               g$x$31762$1VmeqK)
                             (g$mark-visit$31761$1VmeqK
                               g$x$31762$1VmeqK))))))
                     (g$vis-collector$29278$1VmeqK))
                    (g$rtc$31759$1VmeqK))
                  g$expanded-rhs$31760$1VmeqK)))
             ((case-lambda
                ((g$inv-collector$31767$1VmeqK
                   g$vis-collector$31768$1VmeqK
                   g$inv-collector$31769$1VmeqK
                   g$vis-collector$31770$1VmeqK)
                 ((case-lambda
                    ((g$swap$31771$1VmeqK)
                     (dynamic-wind
                       g$swap$31771$1VmeqK
                       (case-lambda
                         (()
                          (g$chi-expr$29240$1VmeqK
                            g$expr$31757$1VmeqK
                            g$r$31758$1VmeqK
                            g$r$31758$1VmeqK)))
                       g$swap$31771$1VmeqK)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$31772$1VmeqK)
                           (begin
                             (g$inv-collector$31767$1VmeqK
                               g$inv-collector$31769$1VmeqK)
                             (set! g$inv-collector$31769$1VmeqK
                               g$t$31772$1VmeqK))))
                        (g$inv-collector$31767$1VmeqK))
                       ((case-lambda
                          ((g$t$31773$1VmeqK)
                           (begin
                             (g$vis-collector$31768$1VmeqK
                               g$vis-collector$31770$1VmeqK)
                             (set! g$vis-collector$31770$1VmeqK
                               g$t$31773$1VmeqK))))
                        (g$vis-collector$31768$1VmeqK))))))))
              g$inv-collector$29277$1VmeqK
              g$vis-collector$29278$1VmeqK
              g$rtc$31759$1VmeqK
              (case-lambda ((g$x$31774$1VmeqK) (values)))))))
         (g$make-collector$29276$1VmeqK)))))
   (g$parse-exports$29271$1VmeqK
     g$parse-exports$32864$1VmeqK
     (case-lambda
       ((g$exp*$31775$1VmeqK)
        ((letrec ((g$f$31776$1VmeqK
                    (case-lambda
                      ((g$exp*$31777$1VmeqK
                         g$int*$31778$1VmeqK
                         g$ext*$31779$1VmeqK)
                       (if (null? g$exp*$31777$1VmeqK)
                         (begin
                           (if (not (g$valid-bound-ids?$28729$1VmeqK
                                      g$ext*$31779$1VmeqK))
                             (g$syntax-violation$29341$1VmeqK
                               'export
                               '"invalid exports"
                               (g$find-dups$29250$1VmeqK
                                 g$ext*$31779$1VmeqK))
                             (void))
                           (values
                             (g$map$20349$1VmeqK
                               g$syntax->datum$29344$1VmeqK
                               g$ext*$31779$1VmeqK)
                             g$int*$31778$1VmeqK))
                         (begin
                           '#f
                           ((case-lambda
                              ((g$t$31780$1VmeqK)
                               ((case-lambda
                                  ((g$ls/false$31781$1VmeqK)
                                   (if g$ls/false$31781$1VmeqK
                                     (apply
                                       (case-lambda
                                         ((g$rename$31782$1VmeqK
                                            g$i*$31783$1VmeqK
                                            g$e*$31784$1VmeqK)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                g$rename$31782$1VmeqK)
                                                              'rename)
                                                       (if (g$for-all$20347$1VmeqK
                                                             g$id?$28724$1VmeqK
                                                             g$i*$31783$1VmeqK)
                                                         (begin
                                                           '#f
                                                           (g$for-all$20347$1VmeqK
                                                             g$id?$28724$1VmeqK
                                                             g$e*$31784$1VmeqK))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$29341$1VmeqK
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$31777$1VmeqK))
                                              (void))
                                            (g$f$31776$1VmeqK
                                              (cdr g$exp*$31777$1VmeqK)
                                              (append
                                                g$i*$31783$1VmeqK
                                                g$int*$31778$1VmeqK)
                                              (append
                                                g$e*$31784$1VmeqK
                                                g$ext*$31779$1VmeqK)))))
                                       g$ls/false$31781$1VmeqK)
                                     ((case-lambda
                                        ((g$t$31785$1VmeqK)
                                         ((case-lambda
                                            ((g$ls/false$31786$1VmeqK)
                                             (if g$ls/false$31786$1VmeqK
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$31787$1VmeqK)
                                                    (begin
                                                      (if (not (g$id?$28724$1VmeqK
                                                                 g$ie$31787$1VmeqK))
                                                        (g$syntax-violation$29341$1VmeqK
                                                          'export
                                                          '"invalid export"
                                                          g$ie$31787$1VmeqK)
                                                        (void))
                                                      (g$f$31776$1VmeqK
                                                        (cdr g$exp*$31777$1VmeqK)
                                                        (cons
                                                          g$ie$31787$1VmeqK
                                                          g$int*$31778$1VmeqK)
                                                        (cons
                                                          g$ie$31787$1VmeqK
                                                          g$ext*$31779$1VmeqK)))))
                                                 g$ls/false$31786$1VmeqK)
                                               (g$syntax-violation$29341$1VmeqK
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$31785$1VmeqK))))
                                          (g$syntax-dispatch$29222$1VmeqK
                                            g$t$31785$1VmeqK
                                            'any))))
                                      g$t$31780$1VmeqK))))
                                (g$syntax-dispatch$29222$1VmeqK
                                  g$t$31780$1VmeqK
                                  '(any . #(each (any any)))))))
                            (car g$exp*$31777$1VmeqK))))))))
           g$f$31776$1VmeqK)
         g$exp*$31775$1VmeqK
         '()
         '()))))
   (g$parse-library-name$29272$1VmeqK
     g$parse-library-name$32865$1VmeqK
     (case-lambda
       ((g$spec$31788$1VmeqK)
        (letrec* ((g$parse$31789$1VmeqK
                    (case-lambda
                      ((g$x$31796$1VmeqK)
                       ((case-lambda
                          ((g$t$31797$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$31798$1VmeqK)
                               (if (if g$ls/false$31798$1VmeqK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$31799$1VmeqK)
                                            (g$for-all$20347$1VmeqK
                                              (case-lambda
                                                ((g$x$31800$1VmeqK)
                                                 ((case-lambda
                                                    ((g$x$31801$1VmeqK)
                                                     (if (g$integer?$22197$1VmeqK
                                                           g$x$31801$1VmeqK)
                                                       (begin
                                                         '#f
                                                         (g$exact?$22192$1VmeqK
                                                           g$x$31801$1VmeqK))
                                                       '#f)))
                                                  (g$syntax->datum$29344$1VmeqK
                                                    g$x$31800$1VmeqK))))
                                              g$v*$31799$1VmeqK)))
                                         g$ls/false$31798$1VmeqK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$31802$1VmeqK)
                                      (values
                                        '()
                                        (g$map$20349$1VmeqK
                                          g$syntax->datum$29344$1VmeqK
                                          g$v*$31802$1VmeqK))))
                                   g$ls/false$31798$1VmeqK)
                                 ((case-lambda
                                    ((g$t$31803$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$31804$1VmeqK)
                                         (if (if g$ls/false$31804$1VmeqK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$31805$1VmeqK
                                                        g$rest$31806$1VmeqK)
                                                      (g$symbol?$21181$1VmeqK
                                                        (g$syntax->datum$29344$1VmeqK
                                                          g$x$31805$1VmeqK))))
                                                   g$ls/false$31804$1VmeqK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$31807$1VmeqK
                                                  g$rest$31808$1VmeqK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$31789$1VmeqK
                                                       g$rest$31808$1VmeqK)))
                                                  (case-lambda
                                                    ((g$x*$31811$1VmeqK
                                                       g$v*$31812$1VmeqK)
                                                     ((case-lambda
                                                        ((g$v*$31813$1VmeqK
                                                           g$x*$31814$1VmeqK)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$29344$1VmeqK
                                                               g$x$31807$1VmeqK)
                                                             g$x*$31814$1VmeqK)
                                                           g$v*$31813$1VmeqK)))
                                                      g$v*$31812$1VmeqK
                                                      g$x*$31811$1VmeqK))))))
                                             g$ls/false$31804$1VmeqK)
                                           ((case-lambda
                                              ((g$t$31815$1VmeqK)
                                               ((case-lambda
                                                  ((g$ls/false$31816$1VmeqK)
                                                   (if g$ls/false$31816$1VmeqK
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$31816$1VmeqK)
                                                     ((case-lambda
                                                        ((g$t$31817$1VmeqK)
                                                         ((case-lambda
                                                            ((g$ls/false$31818$1VmeqK)
                                                             (if g$ls/false$31818$1VmeqK
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$29341$1VmeqK
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$31788$1VmeqK)))
                                                                 g$ls/false$31818$1VmeqK)
                                                               (g$syntax-violation$29341$1VmeqK
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31817$1VmeqK))))
                                                          (g$syntax-dispatch$29222$1VmeqK
                                                            g$t$31817$1VmeqK
                                                            '_))))
                                                      g$t$31815$1VmeqK))))
                                                (g$syntax-dispatch$29222$1VmeqK
                                                  g$t$31815$1VmeqK
                                                  '()))))
                                            g$t$31803$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$31803$1VmeqK
                                        '(any . any)))))
                                  g$t$31797$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$31797$1VmeqK
                              '(each-any)))))
                        g$x$31796$1VmeqK)))))
          (call-with-values
            (case-lambda
              (() (g$parse$31789$1VmeqK g$spec$31788$1VmeqK)))
            (case-lambda
              ((g$name*$31792$1VmeqK g$ver*$31793$1VmeqK)
               ((case-lambda
                  ((g$ver*$31794$1VmeqK g$name*$31795$1VmeqK)
                   (begin
                     (if (null? g$name*$31795$1VmeqK)
                       (g$syntax-violation$29341$1VmeqK
                         '#f
                         '"empty library name"
                         g$spec$31788$1VmeqK)
                       (void))
                     (values
                       g$name*$31795$1VmeqK
                       g$ver*$31794$1VmeqK))))
                g$ver*$31793$1VmeqK
                g$name*$31792$1VmeqK))))))))
   (g$parse-library$29273$1VmeqK
     g$parse-library$32866$1VmeqK
     (case-lambda
       ((g$e$31819$1VmeqK)
        ((case-lambda
           ((g$t$31820$1VmeqK)
            ((case-lambda
               ((g$ls/false$31821$1VmeqK)
                (if (if g$ls/false$31821$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$31822$1VmeqK
                               g$name*$31823$1VmeqK
                               g$export$31824$1VmeqK
                               g$exp*$31825$1VmeqK
                               g$import$31826$1VmeqK
                               g$imp*$31827$1VmeqK
                               g$b*$31828$1VmeqK)
                             (if (eq? (g$syntax->datum$29344$1VmeqK
                                        g$export$31824$1VmeqK)
                                      'export)
                               (if (eq? (g$syntax->datum$29344$1VmeqK
                                          g$import$31826$1VmeqK)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$29344$1VmeqK
                                          g$library$31822$1VmeqK)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$31821$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$31829$1VmeqK
                         g$name*$31830$1VmeqK
                         g$export$31831$1VmeqK
                         g$exp*$31832$1VmeqK
                         g$import$31833$1VmeqK
                         g$imp*$31834$1VmeqK
                         g$b*$31835$1VmeqK)
                       (values
                         g$name*$31830$1VmeqK
                         g$exp*$31832$1VmeqK
                         g$imp*$31834$1VmeqK
                         g$b*$31835$1VmeqK)))
                    g$ls/false$31821$1VmeqK)
                  ((case-lambda
                     ((g$t$31836$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$31837$1VmeqK)
                          (if g$ls/false$31837$1VmeqK
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$29341$1VmeqK
                                   '#f
                                   '"malformed library"
                                   g$e$31819$1VmeqK)))
                              g$ls/false$31837$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$31836$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$31836$1VmeqK
                         '_))))
                   g$t$31820$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$31820$1VmeqK
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$31819$1VmeqK))))
   (g$parse-import-spec*$29274$1VmeqK
     g$parse-import-spec*$32867$1VmeqK
     (case-lambda
       ((g$imp*$31838$1VmeqK)
        (letrec* ((g$idsyn?$31839$1VmeqK
                    (case-lambda
                      ((g$x$32099$1VmeqK)
                       (g$symbol?$21181$1VmeqK
                         (g$syntax->datum$29344$1VmeqK
                           g$x$32099$1VmeqK)))))
                  (g$dup-error$31840$1VmeqK
                    (case-lambda
                      ((g$name$32098$1VmeqK)
                       (g$syntax-violation$29341$1VmeqK
                         'import
                         '"two imports with different bindings"
                         g$name$32098$1VmeqK))))
                  (g$merge-substs$31841$1VmeqK
                    (case-lambda
                      ((g$s$32089$1VmeqK g$subst$32090$1VmeqK)
                       (letrec* ((g$insert-to-subst$32091$1VmeqK
                                   (case-lambda
                                     ((g$a$32092$1VmeqK
                                        g$subst$32093$1VmeqK)
                                      ((case-lambda
                                         ((g$name$32094$1VmeqK
                                            g$label$32095$1VmeqK)
                                          ((case-lambda
                                             ((g$t$32096$1VmeqK)
                                              (if g$t$32096$1VmeqK
                                                ((case-lambda
                                                   ((g$x$32097$1VmeqK)
                                                    (if (eq? (cdr g$x$32097$1VmeqK)
                                                             g$label$32095$1VmeqK)
                                                      g$subst$32093$1VmeqK
                                                      (begin
                                                        '#f
                                                        (g$dup-error$31840$1VmeqK
                                                          g$name$32094$1VmeqK)))))
                                                 g$t$32096$1VmeqK)
                                                (begin
                                                  '#f
                                                  (cons
                                                    g$a$32092$1VmeqK
                                                    g$subst$32093$1VmeqK)))))
                                           (g$assq$20337$1VmeqK
                                             g$name$32094$1VmeqK
                                             g$subst$32093$1VmeqK))))
                                       (car g$a$32092$1VmeqK)
                                       (cdr g$a$32092$1VmeqK))))))
                         (if (null? g$s$32089$1VmeqK)
                           g$subst$32090$1VmeqK
                           (begin
                             '#f
                             (g$insert-to-subst$32091$1VmeqK
                               (car g$s$32089$1VmeqK)
                               (g$merge-substs$31841$1VmeqK
                                 (cdr g$s$32089$1VmeqK)
                                 g$subst$32090$1VmeqK))))))))
                  (g$exclude*$31842$1VmeqK
                    (case-lambda
                      ((g$sym*$32065$1VmeqK g$subst$32066$1VmeqK)
                       (letrec* ((g$exclude$32067$1VmeqK
                                   (case-lambda
                                     ((g$sym$32080$1VmeqK
                                        g$subst$32081$1VmeqK)
                                      (if (null? g$subst$32081$1VmeqK)
                                        (g$syntax-violation$29341$1VmeqK
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$32080$1VmeqK)
                                        (if (eq? g$sym$32080$1VmeqK
                                                 (g$caar$21199$1VmeqK
                                                   g$subst$32081$1VmeqK))
                                          (values
                                            (g$cdar$21201$1VmeqK
                                              g$subst$32081$1VmeqK)
                                            (cdr g$subst$32081$1VmeqK))
                                          (begin
                                            '#f
                                            ((case-lambda
                                               ((g$a$32082$1VmeqK)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$exclude$32067$1VmeqK
                                                       g$sym$32080$1VmeqK
                                                       (cdr g$subst$32081$1VmeqK))))
                                                  (case-lambda
                                                    ((g$old$32085$1VmeqK
                                                       g$subst$32086$1VmeqK)
                                                     ((case-lambda
                                                        ((g$subst$32087$1VmeqK
                                                           g$old$32088$1VmeqK)
                                                         (values
                                                           g$old$32088$1VmeqK
                                                           (cons
                                                             g$a$32082$1VmeqK
                                                             g$subst$32087$1VmeqK))))
                                                      g$subst$32086$1VmeqK
                                                      g$old$32085$1VmeqK))))))
                                             (car g$subst$32081$1VmeqK)))))))))
                         (if (null? g$sym*$32065$1VmeqK)
                           (values '() g$subst$32066$1VmeqK)
                           (begin
                             '#f
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$exclude$32067$1VmeqK
                                    (car g$sym*$32065$1VmeqK)
                                    g$subst$32066$1VmeqK)))
                               (case-lambda
                                 ((g$old$32070$1VmeqK
                                    g$subst$32071$1VmeqK)
                                  ((case-lambda
                                     ((g$subst$32072$1VmeqK
                                        g$old$32073$1VmeqK)
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$exclude*$31842$1VmeqK
                                             (cdr g$sym*$32065$1VmeqK)
                                             g$subst$32072$1VmeqK)))
                                        (case-lambda
                                          ((g$old*$32076$1VmeqK
                                             g$subst$32077$1VmeqK)
                                           ((case-lambda
                                              ((g$subst$32078$1VmeqK
                                                 g$old*$32079$1VmeqK)
                                               (values
                                                 (cons
                                                   g$old$32073$1VmeqK
                                                   g$old*$32079$1VmeqK)
                                                 g$subst$32078$1VmeqK)))
                                            g$subst$32077$1VmeqK
                                            g$old*$32076$1VmeqK))))))
                                   g$subst$32071$1VmeqK
                                   g$old$32070$1VmeqK))))))))))
                  (g$find*$31843$1VmeqK
                    (case-lambda
                      ((g$sym*$32061$1VmeqK g$subst$32062$1VmeqK)
                       (g$map$20349$1VmeqK
                         (case-lambda
                           ((g$x$32063$1VmeqK)
                            ((case-lambda
                               ((g$t$32064$1VmeqK)
                                (if g$t$32064$1VmeqK
                                  (cdr g$t$32064$1VmeqK)
                                  (begin
                                    '#f
                                    (g$syntax-violation$29341$1VmeqK
                                      'import
                                      '"cannot find identifier"
                                      g$x$32063$1VmeqK)))))
                             (g$assq$20337$1VmeqK
                               g$x$32063$1VmeqK
                               g$subst$32062$1VmeqK))))
                         g$sym*$32061$1VmeqK))))
                  (g$rem*$31844$1VmeqK
                    (case-lambda
                      ((g$sym*$32057$1VmeqK g$subst$32058$1VmeqK)
                       ((letrec ((g$f$32059$1VmeqK
                                   (case-lambda
                                     ((g$subst$32060$1VmeqK)
                                      (if (null? g$subst$32060$1VmeqK)
                                        '()
                                        (if (g$memq$20341$1VmeqK
                                              (g$caar$21199$1VmeqK
                                                g$subst$32060$1VmeqK)
                                              g$sym*$32057$1VmeqK)
                                          (g$f$32059$1VmeqK
                                            (cdr g$subst$32060$1VmeqK))
                                          (begin
                                            '#f
                                            (cons
                                              (car g$subst$32060$1VmeqK)
                                              (g$f$32059$1VmeqK
                                                (cdr g$subst$32060$1VmeqK))))))))))
                          g$f$32059$1VmeqK)
                        g$subst$32058$1VmeqK))))
                  (g$remove-dups$31845$1VmeqK
                    (case-lambda
                      ((g$ls$32056$1VmeqK)
                       (if (null? g$ls$32056$1VmeqK)
                         '()
                         (if (g$memq$20341$1VmeqK
                               (car g$ls$32056$1VmeqK)
                               (cdr g$ls$32056$1VmeqK))
                           (g$remove-dups$31845$1VmeqK
                             (cdr g$ls$32056$1VmeqK))
                           (begin
                             '#f
                             (cons
                               (car g$ls$32056$1VmeqK)
                               (g$remove-dups$31845$1VmeqK
                                 (cdr g$ls$32056$1VmeqK)))))))))
                  (g$parse-library-name$31846$1VmeqK
                    (case-lambda
                      ((g$spec$31940$1VmeqK)
                       (letrec* ((g$subversion?$31941$1VmeqK
                                   (case-lambda
                                     ((g$x$32054$1VmeqK)
                                      ((case-lambda
                                         ((g$x$32055$1VmeqK)
                                          (if (g$integer?$22197$1VmeqK
                                                g$x$32055$1VmeqK)
                                            (if (g$exact?$22192$1VmeqK
                                                  g$x$32055$1VmeqK)
                                              (begin
                                                '#f
                                                (g$>=$22214$1VmeqK
                                                  g$x$32055$1VmeqK
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$29344$1VmeqK
                                         g$x$32054$1VmeqK)))))
                                 (g$subversion-pred$31942$1VmeqK
                                   (case-lambda
                                     ((g$x*$32006$1VmeqK)
                                      ((case-lambda
                                         ((g$t$32007$1VmeqK)
                                          ((case-lambda
                                             ((g$ls/false$32008$1VmeqK)
                                              (if (if g$ls/false$32008$1VmeqK
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$32009$1VmeqK)
                                                           (g$subversion?$31941$1VmeqK
                                                             g$n$32009$1VmeqK)))
                                                        g$ls/false$32008$1VmeqK))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$32010$1VmeqK)
                                                     (case-lambda
                                                       ((g$x$32011$1VmeqK)
                                                        (g$=$22210$1VmeqK
                                                          g$x$32011$1VmeqK
                                                          (g$syntax->datum$29344$1VmeqK
                                                            g$n$32010$1VmeqK))))))
                                                  g$ls/false$32008$1VmeqK)
                                                ((case-lambda
                                                   ((g$t$32012$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$32013$1VmeqK)
                                                        (if (if g$ls/false$32013$1VmeqK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$32014$1VmeqK
                                                                       g$sub*$32015$1VmeqK)
                                                                     (eq? (g$syntax->datum$29344$1VmeqK
                                                                            g$p?$32014$1VmeqK)
                                                                          'and)))
                                                                  g$ls/false$32013$1VmeqK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$32016$1VmeqK
                                                                 g$sub*$32017$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$p*$32018$1VmeqK)
                                                                   (case-lambda
                                                                     ((g$x$32019$1VmeqK)
                                                                      (g$for-all$20347$1VmeqK
                                                                        (case-lambda
                                                                          ((g$p$32020$1VmeqK)
                                                                           (g$p$32020$1VmeqK
                                                                             g$x$32019$1VmeqK)))
                                                                        g$p*$32018$1VmeqK)))))
                                                                (g$map$20349$1VmeqK
                                                                  g$subversion-pred$31942$1VmeqK
                                                                  g$sub*$32017$1VmeqK))))
                                                            g$ls/false$32013$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$32021$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$32022$1VmeqK)
                                                                  (if (if g$ls/false$32022$1VmeqK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$32023$1VmeqK
                                                                                 g$sub*$32024$1VmeqK)
                                                                               (eq? (g$syntax->datum$29344$1VmeqK
                                                                                      g$p?$32023$1VmeqK)
                                                                                    'or)))
                                                                            g$ls/false$32022$1VmeqK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$32025$1VmeqK
                                                                           g$sub*$32026$1VmeqK)
                                                                         ((case-lambda
                                                                            ((g$p*$32027$1VmeqK)
                                                                             (case-lambda
                                                                               ((g$x$32028$1VmeqK)
                                                                                (g$exists$20348$1VmeqK
                                                                                  (case-lambda
                                                                                    ((g$p$32029$1VmeqK)
                                                                                     (g$p$32029$1VmeqK
                                                                                       g$x$32028$1VmeqK)))
                                                                                  g$p*$32027$1VmeqK)))))
                                                                          (g$map$20349$1VmeqK
                                                                            g$subversion-pred$31942$1VmeqK
                                                                            g$sub*$32026$1VmeqK))))
                                                                      g$ls/false$32022$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$t$32030$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$32031$1VmeqK)
                                                                            (if (if g$ls/false$32031$1VmeqK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$32032$1VmeqK
                                                                                           g$sub$32033$1VmeqK)
                                                                                         (eq? (g$syntax->datum$29344$1VmeqK
                                                                                                g$p?$32032$1VmeqK)
                                                                                              'not)))
                                                                                      g$ls/false$32031$1VmeqK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$32034$1VmeqK
                                                                                     g$sub$32035$1VmeqK)
                                                                                   ((case-lambda
                                                                                      ((g$p$32036$1VmeqK)
                                                                                       (case-lambda
                                                                                         ((g$x$32037$1VmeqK)
                                                                                          (not (g$p$32036$1VmeqK
                                                                                                 g$x$32037$1VmeqK))))))
                                                                                    (g$subversion-pred$31942$1VmeqK
                                                                                      g$sub$32035$1VmeqK))))
                                                                                g$ls/false$32031$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$t$32038$1VmeqK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$32039$1VmeqK)
                                                                                      (if (if g$ls/false$32039$1VmeqK
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$32040$1VmeqK
                                                                                                     g$n$32041$1VmeqK)
                                                                                                   (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                                                              g$p?$32040$1VmeqK)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$31941$1VmeqK
                                                                                                         g$n$32041$1VmeqK))
                                                                                                     '#f)))
                                                                                                g$ls/false$32039$1VmeqK))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$32042$1VmeqK
                                                                                               g$n$32043$1VmeqK)
                                                                                             (case-lambda
                                                                                               ((g$x$32044$1VmeqK)
                                                                                                (g$<=$22212$1VmeqK
                                                                                                  g$x$32044$1VmeqK
                                                                                                  (g$syntax->datum$29344$1VmeqK
                                                                                                    g$n$32043$1VmeqK))))))
                                                                                          g$ls/false$32039$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$t$32045$1VmeqK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$32046$1VmeqK)
                                                                                                (if (if g$ls/false$32046$1VmeqK
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$32047$1VmeqK
                                                                                                               g$n$32048$1VmeqK)
                                                                                                             (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                                                                        g$p?$32047$1VmeqK)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$31941$1VmeqK
                                                                                                                   g$n$32048$1VmeqK))
                                                                                                               '#f)))
                                                                                                          g$ls/false$32046$1VmeqK))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$32049$1VmeqK
                                                                                                         g$n$32050$1VmeqK)
                                                                                                       (case-lambda
                                                                                                         ((g$x$32051$1VmeqK)
                                                                                                          (g$>=$22214$1VmeqK
                                                                                                            g$x$32051$1VmeqK
                                                                                                            (g$syntax->datum$29344$1VmeqK
                                                                                                              g$n$32050$1VmeqK))))))
                                                                                                    g$ls/false$32046$1VmeqK)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$32052$1VmeqK)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$32053$1VmeqK)
                                                                                                          (if g$ls/false$32053$1VmeqK
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$29341$1VmeqK
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$31940$1VmeqK
                                                                                                                   g$x*$32006$1VmeqK)))
                                                                                                              g$ls/false$32053$1VmeqK)
                                                                                                            (g$syntax-violation$29341$1VmeqK
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$32052$1VmeqK))))
                                                                                                       (g$syntax-dispatch$29222$1VmeqK
                                                                                                         g$t$32052$1VmeqK
                                                                                                         '_))))
                                                                                                   g$t$32045$1VmeqK))))
                                                                                             (g$syntax-dispatch$29222$1VmeqK
                                                                                               g$t$32045$1VmeqK
                                                                                               '(any any)))))
                                                                                         g$t$32038$1VmeqK))))
                                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                                     g$t$32038$1VmeqK
                                                                                     '(any any)))))
                                                                               g$t$32030$1VmeqK))))
                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                           g$t$32030$1VmeqK
                                                                           '(any any)))))
                                                                     g$t$32021$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$32021$1VmeqK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$32012$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$32012$1VmeqK
                                                       '(any .
                                                             each-any)))))
                                                 g$t$32007$1VmeqK))))
                                           (g$syntax-dispatch$29222$1VmeqK
                                             g$t$32007$1VmeqK
                                             'any))))
                                       g$x*$32006$1VmeqK))))
                                 (g$version-pred$31943$1VmeqK
                                   (case-lambda
                                     ((g$x*$31966$1VmeqK)
                                      ((case-lambda
                                         ((g$t$31967$1VmeqK)
                                          ((case-lambda
                                             ((g$ls/false$31968$1VmeqK)
                                              (if g$ls/false$31968$1VmeqK
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$31969$1VmeqK)
                                                        '#t))))
                                                  g$ls/false$31968$1VmeqK)
                                                ((case-lambda
                                                   ((g$t$31970$1VmeqK)
                                                    ((case-lambda
                                                       ((g$ls/false$31971$1VmeqK)
                                                        (if (if g$ls/false$31971$1VmeqK
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$31972$1VmeqK
                                                                       g$ver*$31973$1VmeqK)
                                                                     (eq? (g$syntax->datum$29344$1VmeqK
                                                                            g$c$31972$1VmeqK)
                                                                          'and)))
                                                                  g$ls/false$31971$1VmeqK))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$31974$1VmeqK
                                                                 g$ver*$31975$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$p*$31976$1VmeqK)
                                                                   (case-lambda
                                                                     ((g$x$31977$1VmeqK)
                                                                      (g$for-all$20347$1VmeqK
                                                                        (case-lambda
                                                                          ((g$p$31978$1VmeqK)
                                                                           (g$p$31978$1VmeqK
                                                                             g$x$31977$1VmeqK)))
                                                                        g$p*$31976$1VmeqK)))))
                                                                (g$map$20349$1VmeqK
                                                                  g$version-pred$31943$1VmeqK
                                                                  g$ver*$31975$1VmeqK))))
                                                            g$ls/false$31971$1VmeqK)
                                                          ((case-lambda
                                                             ((g$t$31979$1VmeqK)
                                                              ((case-lambda
                                                                 ((g$ls/false$31980$1VmeqK)
                                                                  (if (if g$ls/false$31980$1VmeqK
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$31981$1VmeqK
                                                                                 g$ver*$31982$1VmeqK)
                                                                               (eq? (g$syntax->datum$29344$1VmeqK
                                                                                      g$c$31981$1VmeqK)
                                                                                    'or)))
                                                                            g$ls/false$31980$1VmeqK))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$31983$1VmeqK
                                                                           g$ver*$31984$1VmeqK)
                                                                         ((case-lambda
                                                                            ((g$p*$31985$1VmeqK)
                                                                             (case-lambda
                                                                               ((g$x$31986$1VmeqK)
                                                                                (g$exists$20348$1VmeqK
                                                                                  (case-lambda
                                                                                    ((g$p$31987$1VmeqK)
                                                                                     (g$p$31987$1VmeqK
                                                                                       g$x$31986$1VmeqK)))
                                                                                  g$p*$31985$1VmeqK)))))
                                                                          (g$map$20349$1VmeqK
                                                                            g$version-pred$31943$1VmeqK
                                                                            g$ver*$31984$1VmeqK))))
                                                                      g$ls/false$31980$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$t$31988$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$ls/false$31989$1VmeqK)
                                                                            (if (if g$ls/false$31989$1VmeqK
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$31990$1VmeqK
                                                                                           g$ver$31991$1VmeqK)
                                                                                         (eq? (g$syntax->datum$29344$1VmeqK
                                                                                                g$c$31990$1VmeqK)
                                                                                              'not)))
                                                                                      g$ls/false$31989$1VmeqK))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$31992$1VmeqK
                                                                                     g$ver$31993$1VmeqK)
                                                                                   ((case-lambda
                                                                                      ((g$p$31994$1VmeqK)
                                                                                       (case-lambda
                                                                                         ((g$x$31995$1VmeqK)
                                                                                          (not (g$p$31994$1VmeqK
                                                                                                 g$x$31995$1VmeqK))))))
                                                                                    (g$version-pred$31943$1VmeqK
                                                                                      g$ver$31993$1VmeqK))))
                                                                                g$ls/false$31989$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$t$31996$1VmeqK)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31997$1VmeqK)
                                                                                      (if g$ls/false$31997$1VmeqK
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$31998$1VmeqK)
                                                                                             ((case-lambda
                                                                                                ((g$p*$31999$1VmeqK)
                                                                                                 (case-lambda
                                                                                                   ((g$x$32000$1VmeqK)
                                                                                                    ((letrec ((g$f$32001$1VmeqK
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$32002$1VmeqK
                                                                                                                     g$x$32003$1VmeqK)
                                                                                                                   (if (null?
                                                                                                                         g$p*$32002$1VmeqK)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$32003$1VmeqK)
                                                                                                                       '#f
                                                                                                                       (begin
                                                                                                                         '#f
                                                                                                                         (if ((car g$p*$32002$1VmeqK)
                                                                                                                              (car g$x$32003$1VmeqK))
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (g$f$32001$1VmeqK
                                                                                                                               (cdr g$p*$32002$1VmeqK)
                                                                                                                               (cdr g$x$32003$1VmeqK)))
                                                                                                                           '#f))))))))
                                                                                                       g$f$32001$1VmeqK)
                                                                                                     g$p*$31999$1VmeqK
                                                                                                     g$x$32000$1VmeqK)))))
                                                                                              (g$map$20349$1VmeqK
                                                                                                g$subversion-pred$31942$1VmeqK
                                                                                                g$sub*$31998$1VmeqK))))
                                                                                          g$ls/false$31997$1VmeqK)
                                                                                        ((case-lambda
                                                                                           ((g$t$32004$1VmeqK)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$32005$1VmeqK)
                                                                                                (if g$ls/false$32005$1VmeqK
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$29341$1VmeqK
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$31940$1VmeqK
                                                                                                         g$x*$31966$1VmeqK)))
                                                                                                    g$ls/false$32005$1VmeqK)
                                                                                                  (g$syntax-violation$29341$1VmeqK
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$32004$1VmeqK))))
                                                                                             (g$syntax-dispatch$29222$1VmeqK
                                                                                               g$t$32004$1VmeqK
                                                                                               '_))))
                                                                                         g$t$31996$1VmeqK))))
                                                                                   (g$syntax-dispatch$29222$1VmeqK
                                                                                     g$t$31996$1VmeqK
                                                                                     'each-any))))
                                                                               g$t$31988$1VmeqK))))
                                                                         (g$syntax-dispatch$29222$1VmeqK
                                                                           g$t$31988$1VmeqK
                                                                           '(any any)))))
                                                                     g$t$31979$1VmeqK))))
                                                               (g$syntax-dispatch$29222$1VmeqK
                                                                 g$t$31979$1VmeqK
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$31970$1VmeqK))))
                                                     (g$syntax-dispatch$29222$1VmeqK
                                                       g$t$31970$1VmeqK
                                                       '(any .
                                                             each-any)))))
                                                 g$t$31967$1VmeqK))))
                                           (g$syntax-dispatch$29222$1VmeqK
                                             g$t$31967$1VmeqK
                                             '()))))
                                       g$x*$31966$1VmeqK)))))
                         ((letrec ((g$f$31944$1VmeqK
                                     (case-lambda
                                       ((g$x$31945$1VmeqK)
                                        ((case-lambda
                                           ((g$t$31946$1VmeqK)
                                            ((case-lambda
                                               ((g$ls/false$31947$1VmeqK)
                                                (if g$ls/false$31947$1VmeqK
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$31948$1VmeqK)
                                                       (values
                                                         '()
                                                         (g$version-pred$31943$1VmeqK
                                                           g$version-spec*$31948$1VmeqK))))
                                                    g$ls/false$31947$1VmeqK)
                                                  ((case-lambda
                                                     ((g$t$31949$1VmeqK)
                                                      ((case-lambda
                                                         ((g$ls/false$31950$1VmeqK)
                                                          (if (if g$ls/false$31950$1VmeqK
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$31951$1VmeqK
                                                                         g$x*$31952$1VmeqK)
                                                                       (g$idsyn?$31839$1VmeqK
                                                                         g$x$31951$1VmeqK)))
                                                                    g$ls/false$31950$1VmeqK))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$31953$1VmeqK
                                                                   g$x*$31954$1VmeqK)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$31944$1VmeqK
                                                                        g$x*$31954$1VmeqK)))
                                                                   (case-lambda
                                                                     ((g$name$31957$1VmeqK
                                                                        g$pred$31958$1VmeqK)
                                                                      ((case-lambda
                                                                         ((g$pred$31959$1VmeqK
                                                                            g$name$31960$1VmeqK)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$29344$1VmeqK
                                                                                g$x$31953$1VmeqK)
                                                                              g$name$31960$1VmeqK)
                                                                            g$pred$31959$1VmeqK)))
                                                                       g$pred$31958$1VmeqK
                                                                       g$name$31957$1VmeqK))))))
                                                              g$ls/false$31950$1VmeqK)
                                                            ((case-lambda
                                                               ((g$t$31961$1VmeqK)
                                                                ((case-lambda
                                                                   ((g$ls/false$31962$1VmeqK)
                                                                    (if g$ls/false$31962$1VmeqK
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$31963$1VmeqK)
                                                                                '#t)))))
                                                                        g$ls/false$31962$1VmeqK)
                                                                      ((case-lambda
                                                                         ((g$t$31964$1VmeqK)
                                                                          ((case-lambda
                                                                             ((g$ls/false$31965$1VmeqK)
                                                                              (if g$ls/false$31965$1VmeqK
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$29341$1VmeqK
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$31940$1VmeqK)))
                                                                                  g$ls/false$31965$1VmeqK)
                                                                                (g$syntax-violation$29341$1VmeqK
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$31964$1VmeqK))))
                                                                           (g$syntax-dispatch$29222$1VmeqK
                                                                             g$t$31964$1VmeqK
                                                                             '_))))
                                                                       g$t$31961$1VmeqK))))
                                                                 (g$syntax-dispatch$29222$1VmeqK
                                                                   g$t$31961$1VmeqK
                                                                   '()))))
                                                             g$t$31949$1VmeqK))))
                                                       (g$syntax-dispatch$29222$1VmeqK
                                                         g$t$31949$1VmeqK
                                                         '(any .
                                                               any)))))
                                                   g$t$31946$1VmeqK))))
                                             (g$syntax-dispatch$29222$1VmeqK
                                               g$t$31946$1VmeqK
                                               '(each-any)))))
                                         g$x$31945$1VmeqK)))))
                            g$f$31944$1VmeqK)
                          g$spec$31940$1VmeqK)))))
                  (g$import-library$31847$1VmeqK
                    (case-lambda
                      ((g$spec*$31932$1VmeqK)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$31846$1VmeqK
                              g$spec*$31932$1VmeqK)))
                         (case-lambda
                           ((g$name$31935$1VmeqK g$pred$31936$1VmeqK)
                            ((case-lambda
                               ((g$pred$31937$1VmeqK
                                  g$name$31938$1VmeqK)
                                (begin
                                  (if (null? g$name$31938$1VmeqK)
                                    (g$syntax-violation$29341$1VmeqK
                                      'import
                                      '"empty library name"
                                      g$spec*$31932$1VmeqK)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$31939$1VmeqK)
                                      (begin
                                        (if (not g$lib$31939$1VmeqK)
                                          (g$syntax-violation$29341$1VmeqK
                                            'import
                                            '"cannot find library with required name"
                                            g$name$31938$1VmeqK)
                                          (void))
                                        (if (not (g$pred$31937$1VmeqK
                                                   (g$library-version$28383$1VmeqK
                                                     g$lib$31939$1VmeqK)))
                                          (g$syntax-violation$29341$1VmeqK
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$31932$1VmeqK
                                            g$lib$31939$1VmeqK)
                                          (void))
                                        ((g$imp-collector$29279$1VmeqK)
                                         g$lib$31939$1VmeqK)
                                        (g$library-subst$28387$1VmeqK
                                          g$lib$31939$1VmeqK))))
                                   (g$find-library-by-name$28423$1VmeqK
                                     g$name$31938$1VmeqK)))))
                             g$pred$31936$1VmeqK
                             g$name$31935$1VmeqK)))))))
                  (g$get-import$31848$1VmeqK
                    (case-lambda
                      ((g$spec$31861$1VmeqK)
                       ((case-lambda
                          ((g$t$31862$1VmeqK)
                           ((case-lambda
                              ((g$ls/false$31863$1VmeqK)
                               (if (if g$ls/false$31863$1VmeqK
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$31864$1VmeqK
                                              g$x*$31865$1VmeqK)
                                            (not (g$memq$20341$1VmeqK
                                                   (g$syntax->datum$29344$1VmeqK
                                                     g$x$31864$1VmeqK)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$31863$1VmeqK))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$31866$1VmeqK
                                        g$x*$31867$1VmeqK)
                                      (g$import-library$31847$1VmeqK
                                        (cons
                                          g$x$31866$1VmeqK
                                          g$x*$31867$1VmeqK))))
                                   g$ls/false$31863$1VmeqK)
                                 ((case-lambda
                                    ((g$t$31868$1VmeqK)
                                     ((case-lambda
                                        ((g$ls/false$31869$1VmeqK)
                                         (if (if g$ls/false$31869$1VmeqK
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$31870$1VmeqK
                                                        g$isp$31871$1VmeqK
                                                        g$old*$31872$1VmeqK
                                                        g$new*$31873$1VmeqK)
                                                      (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                 g$rename$31870$1VmeqK)
                                                               'rename)
                                                        (if (g$for-all$20347$1VmeqK
                                                              g$idsyn?$31839$1VmeqK
                                                              g$old*$31872$1VmeqK)
                                                          (begin
                                                            '#f
                                                            (g$for-all$20347$1VmeqK
                                                              g$idsyn?$31839$1VmeqK
                                                              g$new*$31873$1VmeqK))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$31869$1VmeqK))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$31874$1VmeqK
                                                  g$isp$31875$1VmeqK
                                                  g$old*$31876$1VmeqK
                                                  g$new*$31877$1VmeqK)
                                                ((case-lambda
                                                   ((g$subst$31878$1VmeqK
                                                      g$old*$31879$1VmeqK
                                                      g$new*$31880$1VmeqK)
                                                    ((case-lambda
                                                       ((g$old-label*$31881$1VmeqK)
                                                        ((case-lambda
                                                           ((g$subst$31882$1VmeqK)
                                                            (g$merge-substs$31841$1VmeqK
                                                              (g$map$20349$1VmeqK
                                                                cons
                                                                g$new*$31880$1VmeqK
                                                                g$old-label*$31881$1VmeqK)
                                                              g$subst$31882$1VmeqK)))
                                                         (g$rem*$31844$1VmeqK
                                                           g$old*$31879$1VmeqK
                                                           g$subst$31878$1VmeqK))))
                                                     (g$find*$31843$1VmeqK
                                                       g$old*$31879$1VmeqK
                                                       g$subst$31878$1VmeqK))))
                                                 (g$get-import$31848$1VmeqK
                                                   g$isp$31875$1VmeqK)
                                                 (g$map$20349$1VmeqK
                                                   g$syntax->datum$29344$1VmeqK
                                                   g$old*$31876$1VmeqK)
                                                 (g$map$20349$1VmeqK
                                                   g$syntax->datum$29344$1VmeqK
                                                   g$new*$31877$1VmeqK))))
                                             g$ls/false$31869$1VmeqK)
                                           ((case-lambda
                                              ((g$t$31883$1VmeqK)
                                               ((case-lambda
                                                  ((g$ls/false$31884$1VmeqK)
                                                   (if (if g$ls/false$31884$1VmeqK
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$31885$1VmeqK
                                                                  g$isp$31886$1VmeqK
                                                                  g$sym*$31887$1VmeqK)
                                                                (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                           g$except$31885$1VmeqK)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$20347$1VmeqK
                                                                      g$idsyn?$31839$1VmeqK
                                                                      g$sym*$31887$1VmeqK))
                                                                  '#f)))
                                                             g$ls/false$31884$1VmeqK))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$31888$1VmeqK
                                                            g$isp$31889$1VmeqK
                                                            g$sym*$31890$1VmeqK)
                                                          ((case-lambda
                                                             ((g$subst$31891$1VmeqK)
                                                              (g$rem*$31844$1VmeqK
                                                                (g$map$20349$1VmeqK
                                                                  g$syntax->datum$29344$1VmeqK
                                                                  g$sym*$31890$1VmeqK)
                                                                g$subst$31891$1VmeqK)))
                                                           (g$get-import$31848$1VmeqK
                                                             g$isp$31889$1VmeqK))))
                                                       g$ls/false$31884$1VmeqK)
                                                     ((case-lambda
                                                        ((g$t$31892$1VmeqK)
                                                         ((case-lambda
                                                            ((g$ls/false$31893$1VmeqK)
                                                             (if (if g$ls/false$31893$1VmeqK
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$31894$1VmeqK
                                                                            g$isp$31895$1VmeqK
                                                                            g$sym*$31896$1VmeqK)
                                                                          (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                                     g$only$31894$1VmeqK)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$20347$1VmeqK
                                                                                g$idsyn?$31839$1VmeqK
                                                                                g$sym*$31896$1VmeqK))
                                                                            '#f)))
                                                                       g$ls/false$31893$1VmeqK))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$31897$1VmeqK
                                                                      g$isp$31898$1VmeqK
                                                                      g$sym*$31899$1VmeqK)
                                                                    ((case-lambda
                                                                       ((g$subst$31900$1VmeqK
                                                                          g$sym*$31901$1VmeqK)
                                                                        ((case-lambda
                                                                           ((g$sym*$31902$1VmeqK)
                                                                            ((case-lambda
                                                                               ((g$lab*$31903$1VmeqK)
                                                                                (g$map$20349$1VmeqK
                                                                                  cons
                                                                                  g$sym*$31902$1VmeqK
                                                                                  g$lab*$31903$1VmeqK)))
                                                                             (g$find*$31843$1VmeqK
                                                                               g$sym*$31902$1VmeqK
                                                                               g$subst$31900$1VmeqK))))
                                                                         (g$remove-dups$31845$1VmeqK
                                                                           g$sym*$31901$1VmeqK))))
                                                                     (g$get-import$31848$1VmeqK
                                                                       g$isp$31898$1VmeqK)
                                                                     (g$map$20349$1VmeqK
                                                                       g$syntax->datum$29344$1VmeqK
                                                                       g$sym*$31899$1VmeqK))))
                                                                 g$ls/false$31893$1VmeqK)
                                                               ((case-lambda
                                                                  ((g$t$31904$1VmeqK)
                                                                   ((case-lambda
                                                                      ((g$ls/false$31905$1VmeqK)
                                                                       (if (if g$ls/false$31905$1VmeqK
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$31906$1VmeqK
                                                                                      g$isp$31907$1VmeqK
                                                                                      g$p$31908$1VmeqK)
                                                                                    (if (eq? (g$syntax->datum$29344$1VmeqK
                                                                                               g$prefix$31906$1VmeqK)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$31839$1VmeqK
                                                                                          g$p$31908$1VmeqK))
                                                                                      '#f)))
                                                                                 g$ls/false$31905$1VmeqK))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$31909$1VmeqK
                                                                                g$isp$31910$1VmeqK
                                                                                g$p$31911$1VmeqK)
                                                                              ((case-lambda
                                                                                 ((g$subst$31912$1VmeqK
                                                                                    g$prefix$31913$1VmeqK)
                                                                                  (g$map$20349$1VmeqK
                                                                                    (case-lambda
                                                                                      ((g$x$31914$1VmeqK)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$31913$1VmeqK
                                                                                             (symbol->string
                                                                                               (car g$x$31914$1VmeqK))))
                                                                                         (cdr g$x$31914$1VmeqK))))
                                                                                    g$subst$31912$1VmeqK)))
                                                                               (g$get-import$31848$1VmeqK
                                                                                 g$isp$31910$1VmeqK)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$29344$1VmeqK
                                                                                   g$p$31911$1VmeqK)))))
                                                                           g$ls/false$31905$1VmeqK)
                                                                         ((case-lambda
                                                                            ((g$t$31915$1VmeqK)
                                                                             ((case-lambda
                                                                                ((g$ls/false$31916$1VmeqK)
                                                                                 (if (if g$ls/false$31916$1VmeqK
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$31917$1VmeqK
                                                                                                g$spec*$31918$1VmeqK)
                                                                                              (eq? (g$syntax->datum$29344$1VmeqK
                                                                                                     g$library$31917$1VmeqK)
                                                                                                   'library)))
                                                                                           g$ls/false$31916$1VmeqK))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$31919$1VmeqK
                                                                                          g$spec*$31920$1VmeqK)
                                                                                        (g$import-library$31847$1VmeqK
                                                                                          g$spec*$31920$1VmeqK)))
                                                                                     g$ls/false$31916$1VmeqK)
                                                                                   ((case-lambda
                                                                                      ((g$t$31921$1VmeqK)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$31922$1VmeqK)
                                                                                           (if (if g$ls/false$31922$1VmeqK
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$31923$1VmeqK
                                                                                                          g$isp$31924$1VmeqK
                                                                                                          g$rest$31925$1VmeqK)
                                                                                                        (eq? (g$syntax->datum$29344$1VmeqK
                                                                                                               g$for$31923$1VmeqK)
                                                                                                             'for)))
                                                                                                     g$ls/false$31922$1VmeqK))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$31926$1VmeqK
                                                                                                    g$isp$31927$1VmeqK
                                                                                                    g$rest$31928$1VmeqK)
                                                                                                  (g$get-import$31848$1VmeqK
                                                                                                    g$isp$31927$1VmeqK)))
                                                                                               g$ls/false$31922$1VmeqK)
                                                                                             ((case-lambda
                                                                                                ((g$t$31929$1VmeqK)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$31930$1VmeqK)
                                                                                                     (if g$ls/false$31930$1VmeqK
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$31931$1VmeqK)
                                                                                                            (g$syntax-violation$29341$1VmeqK
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$31931$1VmeqK)))
                                                                                                         g$ls/false$31930$1VmeqK)
                                                                                                       (g$syntax-violation$29341$1VmeqK
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$31929$1VmeqK))))
                                                                                                  (g$syntax-dispatch$29222$1VmeqK
                                                                                                    g$t$31929$1VmeqK
                                                                                                    'any))))
                                                                                              g$t$31921$1VmeqK))))
                                                                                        (g$syntax-dispatch$29222$1VmeqK
                                                                                          g$t$31921$1VmeqK
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$31915$1VmeqK))))
                                                                              (g$syntax-dispatch$29222$1VmeqK
                                                                                g$t$31915$1VmeqK
                                                                                '(any each-any)))))
                                                                          g$t$31904$1VmeqK))))
                                                                    (g$syntax-dispatch$29222$1VmeqK
                                                                      g$t$31904$1VmeqK
                                                                      '(any any
                                                                            any)))))
                                                                g$t$31892$1VmeqK))))
                                                          (g$syntax-dispatch$29222$1VmeqK
                                                            g$t$31892$1VmeqK
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$31883$1VmeqK))))
                                                (g$syntax-dispatch$29222$1VmeqK
                                                  g$t$31883$1VmeqK
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$31868$1VmeqK))))
                                      (g$syntax-dispatch$29222$1VmeqK
                                        g$t$31868$1VmeqK
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$31862$1VmeqK))))
                            (g$syntax-dispatch$29222$1VmeqK
                              g$t$31862$1VmeqK
                              '(any . each-any)))))
                        g$spec$31861$1VmeqK))))
                  (g$add-imports!$31849$1VmeqK
                    (case-lambda
                      ((g$imp$31853$1VmeqK g$h$31854$1VmeqK)
                       ((case-lambda
                          ((g$subst$31855$1VmeqK)
                           (g$for-each$20350$1VmeqK
                             (case-lambda
                               ((g$x$31856$1VmeqK)
                                ((case-lambda
                                   ((g$name$31857$1VmeqK
                                      g$label$31858$1VmeqK)
                                    ((case-lambda
                                       ((g$t$31859$1VmeqK)
                                        (if g$t$31859$1VmeqK
                                          ((case-lambda
                                             ((g$l$31860$1VmeqK)
                                              (if (not (eq? g$l$31860$1VmeqK
                                                            g$label$31858$1VmeqK))
                                                (g$dup-error$31840$1VmeqK
                                                  g$name$31857$1VmeqK)
                                                (void))))
                                           g$t$31859$1VmeqK)
                                          (begin
                                            '#f
                                            (g$hashtable-set!$21301$1VmeqK
                                              g$h$31854$1VmeqK
                                              g$name$31857$1VmeqK
                                              g$label$31858$1VmeqK)))))
                                     (g$hashtable-ref$21300$1VmeqK
                                       g$h$31854$1VmeqK
                                       g$name$31857$1VmeqK
                                       '#f))))
                                 (car g$x$31856$1VmeqK)
                                 (cdr g$x$31856$1VmeqK))))
                             g$subst$31855$1VmeqK)))
                        (g$get-import$31848$1VmeqK
                          g$imp$31853$1VmeqK))))))
          ((letrec ((g$f$31850$1VmeqK
                      (case-lambda
                        ((g$imp*$31851$1VmeqK g$h$31852$1VmeqK)
                         (if (null? g$imp*$31851$1VmeqK)
                           (hashtable-entries g$h$31852$1VmeqK)
                           (begin
                             '#f
                             (g$add-imports!$31849$1VmeqK
                               (car g$imp*$31851$1VmeqK)
                               g$h$31852$1VmeqK)
                             (g$f$31850$1VmeqK
                               (cdr g$imp*$31851$1VmeqK)
                               g$h$31852$1VmeqK)))))))
             g$f$31850$1VmeqK)
           g$imp*$31838$1VmeqK
           (g$make-eq-hashtable$21297$1VmeqK))))))
   (g$make-top-rib$29275$1VmeqK
     g$make-top-rib$32868$1VmeqK
     (case-lambda
       ((g$names$32100$1VmeqK g$labels$32101$1VmeqK)
        ((case-lambda
           ((g$rib$32102$1VmeqK)
            (begin
              (g$vector-for-each$21249$1VmeqK
                (case-lambda
                  ((g$name$32103$1VmeqK g$label$32104$1VmeqK)
                   (begin
                     (if (not (g$symbol?$21181$1VmeqK
                                g$name$32103$1VmeqK))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$32103$1VmeqK)
                       (void))
                     (g$extend-rib/nc!$28686$1VmeqK
                       g$rib$32102$1VmeqK
                       (g$make-stx$28697$1VmeqK
                         g$name$32103$1VmeqK
                         g$top-mark*$28657$1VmeqK
                         '()
                         '())
                       g$label$32104$1VmeqK))))
                g$names$32100$1VmeqK
                g$labels$32101$1VmeqK)
              g$rib$32102$1VmeqK)))
         (g$make-cache-rib$28683$1VmeqK)))))
   (g$make-collector$29276$1VmeqK
     g$make-collector$32869$1VmeqK
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$32105$1VmeqK)
            (case-lambda
              (() g$ls$32105$1VmeqK)
              ((g$x$32106$1VmeqK)
               (set! g$ls$32105$1VmeqK
                 (g$set-cons$28654$1VmeqK
                   g$x$32106$1VmeqK
                   g$ls$32105$1VmeqK))))))
         '()))))
   (g$inv-collector$29277$1VmeqK
     g$inv-collector$32870$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda
         (g$args$32107$1VmeqK
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$32108$1VmeqK)
          (begin
            (if (not (g$procedure?$21183$1VmeqK g$x$32108$1VmeqK))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$32108$1VmeqK)
              (void))
            g$x$32108$1VmeqK)))))
   (g$vis-collector$29278$1VmeqK
     g$vis-collector$32871$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda
         (g$args$32109$1VmeqK
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$32110$1VmeqK)
          (begin
            (if (not (g$procedure?$21183$1VmeqK g$x$32110$1VmeqK))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$32110$1VmeqK)
              (void))
            g$x$32110$1VmeqK)))))
   (g$imp-collector$29279$1VmeqK
     g$imp-collector$32872$1VmeqK
     (g$make-parameter$27565$1VmeqK
       (case-lambda
         (g$args$32111$1VmeqK
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$32112$1VmeqK)
          (begin
            (if (not (g$procedure?$21183$1VmeqK g$x$32112$1VmeqK))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$32112$1VmeqK)
              (void))
            g$x$32112$1VmeqK)))))
   (g$chi-library-internal$29280$1VmeqK
     g$chi-library-internal$32873$1VmeqK
     (case-lambda
       ((g$e*$32113$1VmeqK g$rib$32114$1VmeqK g$mix?$32115$1VmeqK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$29269$1VmeqK
               g$e*$32113$1VmeqK
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$32114$1VmeqK
               g$mix?$32115$1VmeqK
               '#t)))
          (case-lambda
            ((g$e*$32124$1VmeqK
               g$r$32125$1VmeqK
               g$mr$32126$1VmeqK
               g$lex*$32127$1VmeqK
               g$rhs*$32128$1VmeqK
               g$mod**$32129$1VmeqK
               g$_kwd*$32130$1VmeqK
               g$exp*$32131$1VmeqK)
             ((case-lambda
                ((g$exp*$32132$1VmeqK
                   g$_kwd*$32133$1VmeqK
                   g$mod**$32134$1VmeqK
                   g$rhs*$32135$1VmeqK
                   g$lex*$32136$1VmeqK
                   g$mr$32137$1VmeqK
                   g$r$32138$1VmeqK
                   g$e*$32139$1VmeqK)
                 (values
                   (append
                     (apply
                       append
                       (g$reverse$21198$1VmeqK g$mod**$32134$1VmeqK))
                     g$e*$32139$1VmeqK)
                   g$r$32138$1VmeqK
                   g$mr$32137$1VmeqK
                   (g$reverse$21198$1VmeqK g$lex*$32136$1VmeqK)
                   (g$reverse$21198$1VmeqK g$rhs*$32135$1VmeqK)
                   g$exp*$32132$1VmeqK)))
              g$exp*$32131$1VmeqK
              g$_kwd*$32130$1VmeqK
              g$mod**$32129$1VmeqK
              g$rhs*$32128$1VmeqK
              g$lex*$32127$1VmeqK
              g$mr$32126$1VmeqK
              g$r$32125$1VmeqK
              g$e*$32124$1VmeqK)))))))
   (g$chi-interaction-expr$29281$1VmeqK
     g$chi-interaction-expr$32874$1VmeqK
     (case-lambda
       ((g$e$32140$1VmeqK g$rib$32141$1VmeqK g$r$32142$1VmeqK)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$29269$1VmeqK
               (list g$e$32140$1VmeqK)
               g$r$32142$1VmeqK
               g$r$32142$1VmeqK
               '()
               '()
               '()
               '()
               '()
               g$rib$32141$1VmeqK
               '#t
               '#f)))
          (case-lambda
            ((g$e*$32151$1VmeqK
               g$r$32152$1VmeqK
               g$mr$32153$1VmeqK
               g$lex*$32154$1VmeqK
               g$rhs*$32155$1VmeqK
               g$mod**$32156$1VmeqK
               g$_kwd*$32157$1VmeqK
               g$_exp*$32158$1VmeqK)
             ((case-lambda
                ((g$_exp*$32159$1VmeqK
                   g$_kwd*$32160$1VmeqK
                   g$mod**$32161$1VmeqK
                   g$rhs*$32162$1VmeqK
                   g$lex*$32163$1VmeqK
                   g$mr$32164$1VmeqK
                   g$r$32165$1VmeqK
                   g$e*$32166$1VmeqK)
                 ((case-lambda
                    ((g$e*$32167$1VmeqK)
                     ((case-lambda
                        ((g$e$32168$1VmeqK)
                         (values g$e$32168$1VmeqK g$r$32165$1VmeqK)))
                      (if (null? g$e*$32167$1VmeqK)
                        (g$build-void$28650$1VmeqK)
                        (if (null? (cdr g$e*$32167$1VmeqK))
                          (car g$e*$32167$1VmeqK)
                          (begin
                            '#f
                            (g$build-sequence$28649$1VmeqK
                              '#f
                              g$e*$32167$1VmeqK)))))))
                  (g$expand-interaction-rhs*/init*$29247$1VmeqK
                    (g$reverse$21198$1VmeqK g$lex*$32163$1VmeqK)
                    (g$reverse$21198$1VmeqK g$rhs*$32162$1VmeqK)
                    (append
                      (apply
                        append
                        (g$reverse$21198$1VmeqK g$mod**$32161$1VmeqK))
                      g$e*$32166$1VmeqK)
                    g$r$32165$1VmeqK
                    g$mr$32164$1VmeqK))))
              g$_exp*$32158$1VmeqK
              g$_kwd*$32157$1VmeqK
              g$mod**$32156$1VmeqK
              g$rhs*$32155$1VmeqK
              g$lex*$32154$1VmeqK
              g$mr$32153$1VmeqK
              g$r$32152$1VmeqK
              g$e*$32151$1VmeqK)))))))
   (g$library-body-expander$29282$1VmeqK
     g$library-body-expander$32875$1VmeqK
     (case-lambda
       ((g$name$32169$1VmeqK
          g$main-exp*$32170$1VmeqK
          g$imp*$32171$1VmeqK
          g$b*$32172$1VmeqK
          g$mix?$32173$1VmeqK)
        (letrec* ((g$itc$32174$1VmeqK (g$make-collector$29276$1VmeqK)))
          ((case-lambda
             ((g$imp-collector$32179$1VmeqK
                g$top-level-context$32180$1VmeqK
                g$imp-collector$32181$1VmeqK
                g$top-level-context$32182$1VmeqK)
              ((case-lambda
                 ((g$swap$32183$1VmeqK)
                  (dynamic-wind
                    g$swap$32183$1VmeqK
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$29274$1VmeqK
                              g$imp*$32171$1VmeqK)))
                         (case-lambda
                           ((g$subst-names$32186$1VmeqK
                              g$subst-labels$32187$1VmeqK)
                            ((case-lambda
                               ((g$subst-labels$32188$1VmeqK
                                  g$subst-names$32189$1VmeqK)
                                ((case-lambda
                                   ((g$rib$32190$1VmeqK)
                                    (letrec* ((g$wrap$32191$1VmeqK
                                                (case-lambda
                                                  ((g$x$32253$1VmeqK)
                                                   (g$make-stx$28697$1VmeqK
                                                     g$x$32253$1VmeqK
                                                     g$top-mark*$28657$1VmeqK
                                                     (list
                                                       g$rib$32190$1VmeqK)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$32192$1VmeqK
                                            g$main-exp*$32193$1VmeqK
                                            g$rtc$32194$1VmeqK
                                            g$vtc$32195$1VmeqK)
                                          ((case-lambda
                                             ((g$inv-collector$32200$1VmeqK
                                                g$vis-collector$32201$1VmeqK
                                                g$inv-collector$32202$1VmeqK
                                                g$vis-collector$32203$1VmeqK)
                                              ((case-lambda
                                                 ((g$swap$32204$1VmeqK)
                                                  (dynamic-wind
                                                    g$swap$32204$1VmeqK
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$29280$1VmeqK
                                                              g$b*$32192$1VmeqK
                                                              g$rib$32190$1VmeqK
                                                              g$mix?$32173$1VmeqK)))
                                                         (case-lambda
                                                           ((g$init*$32211$1VmeqK
                                                              g$r$32212$1VmeqK
                                                              g$mr$32213$1VmeqK
                                                              g$lex*$32214$1VmeqK
                                                              g$rhs*$32215$1VmeqK
                                                              g$internal-exp*$32216$1VmeqK)
                                                            ((case-lambda
                                                               ((g$internal-exp*$32217$1VmeqK
                                                                  g$rhs*$32218$1VmeqK
                                                                  g$lex*$32219$1VmeqK
                                                                  g$mr$32220$1VmeqK
                                                                  g$r$32221$1VmeqK
                                                                  g$init*$32222$1VmeqK)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$29271$1VmeqK
                                                                       (append
                                                                         g$main-exp*$32193$1VmeqK
                                                                         g$internal-exp*$32217$1VmeqK))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$32225$1VmeqK
                                                                       g$exp-id*$32226$1VmeqK)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$32227$1VmeqK
                                                                           g$exp-name*$32228$1VmeqK)
                                                                         (begin
                                                                           (g$seal-rib!$28688$1VmeqK
                                                                             g$rib$32190$1VmeqK)
                                                                           ((case-lambda
                                                                              ((g$init*$32229$1VmeqK)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$32230$1VmeqK)
                                                                                   (begin
                                                                                     (g$unseal-rib!$28689$1VmeqK
                                                                                       g$rib$32190$1VmeqK)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$32231$1VmeqK
                                                                                           g$export-subst$32232$1VmeqK)
                                                                                         (letrec* ((g$errstr$32233$1VmeqK
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$29330$1VmeqK
                                                                                                  g$lex*$32219$1VmeqK
                                                                                                  g$loc*$32231$1VmeqK
                                                                                                  g$r$32221$1VmeqK)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$32237$1VmeqK
                                                                                                  g$global*$32238$1VmeqK
                                                                                                  g$macro*$32239$1VmeqK)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$32240$1VmeqK
                                                                                                      g$global*$32241$1VmeqK
                                                                                                      g$export-env$32242$1VmeqK)
                                                                                                    (begin
                                                                                                      (g$for-each$20350$1VmeqK
                                                                                                        (case-lambda
                                                                                                          ((g$s$32243$1VmeqK)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$32244$1VmeqK
                                                                                                                 g$label$32245$1VmeqK)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$32246$1VmeqK)
                                                                                                                   (if g$p$32246$1VmeqK
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$32247$1VmeqK)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$32248$1VmeqK)
                                                                                                                             (if (eq? g$type$32248$1VmeqK
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$29341$1VmeqK
                                                                                                                                 'export
                                                                                                                                 g$errstr$32233$1VmeqK
                                                                                                                                 g$name$32244$1VmeqK)
                                                                                                                               (void))))
                                                                                                                          (car g$b$32247$1VmeqK))))
                                                                                                                      (cdr g$p$32246$1VmeqK))
                                                                                                                     (void))))
                                                                                                                (g$assq$20337$1VmeqK
                                                                                                                  g$label$32245$1VmeqK
                                                                                                                  g$export-env$32242$1VmeqK))))
                                                                                                            (car g$s$32243$1VmeqK)
                                                                                                            (cdr g$s$32243$1VmeqK))))
                                                                                                        g$export-subst$32232$1VmeqK)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$32249$1VmeqK
                                                                                                            g$invoke-definitions$32250$1VmeqK)
                                                                                                          (values
                                                                                                            (g$itc$32174$1VmeqK)
                                                                                                            (g$rtc$32194$1VmeqK)
                                                                                                            (g$vtc$32195$1VmeqK)
                                                                                                            (g$build-sequence$28649$1VmeqK
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$32250$1VmeqK
                                                                                                                (list
                                                                                                                  g$invoke-body$32249$1VmeqK)))
                                                                                                            g$macro*$32240$1VmeqK
                                                                                                            g$export-subst$32232$1VmeqK
                                                                                                            g$export-env$32242$1VmeqK)))
                                                                                                       (g$build-library-letrec*$28653$1VmeqK
                                                                                                         '#f
                                                                                                         g$name$32169$1VmeqK
                                                                                                         g$lex*$32219$1VmeqK
                                                                                                         g$loc*$32231$1VmeqK
                                                                                                         g$rhs*$32230$1VmeqK
                                                                                                         (if (null?
                                                                                                               g$init*$32229$1VmeqK)
                                                                                                           (g$build-void$28650$1VmeqK)
                                                                                                           (g$build-sequence$28649$1VmeqK
                                                                                                             '#f
                                                                                                             g$init*$32229$1VmeqK)))
                                                                                                       (g$map$20349$1VmeqK
                                                                                                         g$build-global-define$28645$1VmeqK
                                                                                                         (g$map$20349$1VmeqK
                                                                                                           cdr
                                                                                                           g$global*$32241$1VmeqK))))))
                                                                                                 g$macro*$32239$1VmeqK
                                                                                                 g$global*$32238$1VmeqK
                                                                                                 g$export-env$32237$1VmeqK)))))))
                                                                                      (g$map$20349$1VmeqK
                                                                                        g$gen-global$28660$1VmeqK
                                                                                        g$lex*$32219$1VmeqK)
                                                                                      (g$make-export-subst$29329$1VmeqK
                                                                                        g$exp-name*$32228$1VmeqK
                                                                                        g$exp-id*$32227$1VmeqK)))))
                                                                                (g$chi-rhs*$29248$1VmeqK
                                                                                  g$rhs*$32218$1VmeqK
                                                                                  g$r$32221$1VmeqK
                                                                                  g$mr$32220$1VmeqK))))
                                                                            (g$chi-expr*$29238$1VmeqK
                                                                              g$init*$32222$1VmeqK
                                                                              g$r$32221$1VmeqK
                                                                              g$mr$32220$1VmeqK)))))
                                                                      g$exp-id*$32226$1VmeqK
                                                                      g$exp-name*$32225$1VmeqK))))))
                                                             g$internal-exp*$32216$1VmeqK
                                                             g$rhs*$32215$1VmeqK
                                                             g$lex*$32214$1VmeqK
                                                             g$mr$32213$1VmeqK
                                                             g$r$32212$1VmeqK
                                                             g$init*$32211$1VmeqK))))))
                                                    g$swap$32204$1VmeqK)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$32251$1VmeqK)
                                                        (begin
                                                          (g$inv-collector$32200$1VmeqK
                                                            g$inv-collector$32202$1VmeqK)
                                                          (set! g$inv-collector$32202$1VmeqK
                                                            g$t$32251$1VmeqK))))
                                                     (g$inv-collector$32200$1VmeqK))
                                                    ((case-lambda
                                                       ((g$t$32252$1VmeqK)
                                                        (begin
                                                          (g$vis-collector$32201$1VmeqK
                                                            g$vis-collector$32203$1VmeqK)
                                                          (set! g$vis-collector$32203$1VmeqK
                                                            g$t$32252$1VmeqK))))
                                                     (g$vis-collector$32201$1VmeqK))))))))
                                           g$inv-collector$29277$1VmeqK
                                           g$vis-collector$29278$1VmeqK
                                           g$rtc$32194$1VmeqK
                                           g$vtc$32195$1VmeqK)))
                                       (g$map$20349$1VmeqK
                                         g$wrap$32191$1VmeqK
                                         g$b*$32172$1VmeqK)
                                       (g$map$20349$1VmeqK
                                         g$wrap$32191$1VmeqK
                                         g$main-exp*$32170$1VmeqK)
                                       (g$make-collector$29276$1VmeqK)
                                       (g$make-collector$29276$1VmeqK)))))
                                 (g$make-top-rib$29275$1VmeqK
                                   g$subst-names$32189$1VmeqK
                                   g$subst-labels$32188$1VmeqK))))
                             g$subst-labels$32187$1VmeqK
                             g$subst-names$32186$1VmeqK))))))
                    g$swap$32183$1VmeqK)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$32254$1VmeqK)
                        (begin
                          (g$imp-collector$32179$1VmeqK
                            g$imp-collector$32181$1VmeqK)
                          (set! g$imp-collector$32181$1VmeqK
                            g$t$32254$1VmeqK))))
                     (g$imp-collector$32179$1VmeqK))
                    ((case-lambda
                       ((g$t$32255$1VmeqK)
                        (begin
                          (g$top-level-context$32180$1VmeqK
                            g$top-level-context$32182$1VmeqK)
                          (set! g$top-level-context$32182$1VmeqK
                            g$t$32255$1VmeqK))))
                     (g$top-level-context$32180$1VmeqK))))))))
           g$imp-collector$29279$1VmeqK
           g$top-level-context$29349$1VmeqK
           g$itc$32174$1VmeqK
           '#f)))))
   (g$core-library-expander$29283$1VmeqK
     g$core-library-expander$32876$1VmeqK
     (case-lambda
       ((g$e$32256$1VmeqK g$verify-name$32257$1VmeqK)
        (call-with-values
          (case-lambda
            (() (g$parse-library$29273$1VmeqK g$e$32256$1VmeqK)))
          (case-lambda
            ((g$name*$32262$1VmeqK
               g$exp*$32263$1VmeqK
               g$imp*$32264$1VmeqK
               g$b*$32265$1VmeqK)
             ((case-lambda
                ((g$b*$32266$1VmeqK
                   g$imp*$32267$1VmeqK
                   g$exp*$32268$1VmeqK
                   g$name*$32269$1VmeqK)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$29272$1VmeqK
                        g$name*$32269$1VmeqK)))
                   (case-lambda
                     ((g$name$32272$1VmeqK g$ver$32273$1VmeqK)
                      ((case-lambda
                         ((g$ver$32274$1VmeqK g$name$32275$1VmeqK)
                          (begin
                            (g$verify-name$32257$1VmeqK
                              g$name$32275$1VmeqK)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$29282$1VmeqK
                                   g$name$32275$1VmeqK
                                   g$exp*$32268$1VmeqK
                                   g$imp*$32267$1VmeqK
                                   g$b*$32266$1VmeqK
                                   '#f)))
                              (case-lambda
                                ((g$imp*$32283$1VmeqK
                                   g$invoke-req*$32284$1VmeqK
                                   g$visit-req*$32285$1VmeqK
                                   g$invoke-code$32286$1VmeqK
                                   g$visit-code$32287$1VmeqK
                                   g$export-subst$32288$1VmeqK
                                   g$export-env$32289$1VmeqK)
                                 ((case-lambda
                                    ((g$export-env$32290$1VmeqK
                                       g$export-subst$32291$1VmeqK
                                       g$visit-code$32292$1VmeqK
                                       g$invoke-code$32293$1VmeqK
                                       g$visit-req*$32294$1VmeqK
                                       g$invoke-req*$32295$1VmeqK
                                       g$imp*$32296$1VmeqK)
                                     (values
                                       g$name$32275$1VmeqK
                                       g$ver$32274$1VmeqK
                                       g$imp*$32296$1VmeqK
                                       g$invoke-req*$32295$1VmeqK
                                       g$visit-req*$32294$1VmeqK
                                       g$invoke-code$32293$1VmeqK
                                       g$visit-code$32292$1VmeqK
                                       g$export-subst$32291$1VmeqK
                                       g$export-env$32290$1VmeqK)))
                                  g$export-env$32289$1VmeqK
                                  g$export-subst$32288$1VmeqK
                                  g$visit-code$32287$1VmeqK
                                  g$invoke-code$32286$1VmeqK
                                  g$visit-req*$32285$1VmeqK
                                  g$invoke-req*$32284$1VmeqK
                                  g$imp*$32283$1VmeqK)))))))
                       g$ver$32273$1VmeqK
                       g$name$32272$1VmeqK))))))
              g$b*$32265$1VmeqK
              g$imp*$32264$1VmeqK
              g$exp*$32263$1VmeqK
              g$name*$32262$1VmeqK)))))))
   (g$parse-top-level-program$29284$1VmeqK
     g$parse-top-level-program$32877$1VmeqK
     (case-lambda
       ((g$e*$32297$1VmeqK)
        ((case-lambda
           ((g$t$32298$1VmeqK)
            ((case-lambda
               ((g$ls/false$32299$1VmeqK)
                (if (if g$ls/false$32299$1VmeqK
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$32300$1VmeqK
                               g$imp*$32301$1VmeqK
                               g$b*$32302$1VmeqK)
                             (eq? (g$syntax->datum$29344$1VmeqK
                                    g$import$32300$1VmeqK)
                                  'import)))
                          g$ls/false$32299$1VmeqK))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$32303$1VmeqK
                         g$imp*$32304$1VmeqK
                         g$b*$32305$1VmeqK)
                       (values g$imp*$32304$1VmeqK g$b*$32305$1VmeqK)))
                    g$ls/false$32299$1VmeqK)
                  ((case-lambda
                     ((g$t$32306$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$32307$1VmeqK)
                          (if (if g$ls/false$32307$1VmeqK
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$32308$1VmeqK
                                         g$x$32309$1VmeqK
                                         g$y$32310$1VmeqK)
                                       (eq? (g$syntax->datum$29344$1VmeqK
                                              g$import$32308$1VmeqK)
                                            'import)))
                                    g$ls/false$32307$1VmeqK))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$32311$1VmeqK
                                   g$x$32312$1VmeqK
                                   g$y$32313$1VmeqK)
                                 (g$syntax-violation$29341$1VmeqK
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$28721$1VmeqK
                                     g$e*$32297$1VmeqK))))
                              g$ls/false$32307$1VmeqK)
                            ((case-lambda
                               ((g$t$32314$1VmeqK)
                                ((case-lambda
                                   ((g$ls/false$32315$1VmeqK)
                                    (if g$ls/false$32315$1VmeqK
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$32315$1VmeqK)
                                      (g$syntax-violation$29341$1VmeqK
                                        '#f
                                        '"invalid syntax"
                                        g$t$32314$1VmeqK))))
                                 (g$syntax-dispatch$29222$1VmeqK
                                   g$t$32314$1VmeqK
                                   '_))))
                             g$t$32306$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$32306$1VmeqK
                         '((any . any) . any)))))
                   g$t$32298$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$32298$1VmeqK
               '((any . each-any) . each-any)))))
         g$e*$32297$1VmeqK))))
   (g$top-level-expander$29285$1VmeqK
     g$top-level-expander$32878$1VmeqK
     (case-lambda
       ((g$e*$32316$1VmeqK)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$29284$1VmeqK
               g$e*$32316$1VmeqK)))
          (case-lambda
            ((g$imp*$32319$1VmeqK g$b*$32320$1VmeqK)
             ((case-lambda
                ((g$b*$32321$1VmeqK g$imp*$32322$1VmeqK)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$29282$1VmeqK
                        '()
                        '()
                        g$imp*$32322$1VmeqK
                        g$b*$32321$1VmeqK
                        '#t)))
                   (case-lambda
                     ((g$imp*$32330$1VmeqK
                        g$invoke-req*$32331$1VmeqK
                        g$visit-req*$32332$1VmeqK
                        g$invoke-code$32333$1VmeqK
                        g$visit-code$32334$1VmeqK
                        g$export-subst$32335$1VmeqK
                        g$export-env$32336$1VmeqK)
                      ((case-lambda
                         ((g$export-env$32337$1VmeqK
                            g$export-subst$32338$1VmeqK
                            g$visit-code$32339$1VmeqK
                            g$invoke-code$32340$1VmeqK
                            g$visit-req*$32341$1VmeqK
                            g$invoke-req*$32342$1VmeqK
                            g$imp*$32343$1VmeqK)
                          (values
                            g$invoke-req*$32342$1VmeqK
                            g$invoke-code$32340$1VmeqK)))
                       g$export-env$32336$1VmeqK
                       g$export-subst$32335$1VmeqK
                       g$visit-code$32334$1VmeqK
                       g$invoke-code$32333$1VmeqK
                       g$visit-req*$32332$1VmeqK
                       g$invoke-req*$32331$1VmeqK
                       g$imp*$32330$1VmeqK))))))
              g$b*$32320$1VmeqK
              g$imp*$32319$1VmeqK)))))))
   (g$12299$29286$1VmeqK
     g$12299$32879$1VmeqK
     (make-record-type-descriptor
       'env
       '#f
       'g$12302$1VmeqK
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$12301$29287$1VmeqK g$12301$32880$1VmeqK '#f)
   (g$12300$29288$1VmeqK
     g$12300$32881$1VmeqK
     (make-record-constructor-descriptor
       g$12299$29286$1VmeqK
       '#f
       g$12301$29287$1VmeqK))
   (g$env?$29291$1VmeqK
     g$env?$32882$1VmeqK
     (record-predicate g$12299$29286$1VmeqK))
   (g$make-env$29292$1VmeqK
     g$make-env$32883$1VmeqK
     (record-constructor g$12300$29288$1VmeqK))
   (g$env-names$29293$1VmeqK
     g$env-names$32884$1VmeqK
     (record-accessor g$12299$29286$1VmeqK '0))
   (g$env-labels$29294$1VmeqK
     g$env-labels$32885$1VmeqK
     (record-accessor g$12299$29286$1VmeqK '1))
   (g$env-itc$29295$1VmeqK
     g$env-itc$32886$1VmeqK
     (record-accessor g$12299$29286$1VmeqK '2))
   (g$set-env-names!$29296$1VmeqK
     g$set-env-names!$32887$1VmeqK
     (record-mutator g$12299$29286$1VmeqK '0))
   (g$set-env-labels!$29297$1VmeqK
     g$set-env-labels!$32888$1VmeqK
     (record-mutator g$12299$29286$1VmeqK '1))
   (g$set-env-itc!$29298$1VmeqK
     g$set-env-itc!$32889$1VmeqK
     (record-mutator g$12299$29286$1VmeqK '2))
   (g$rp$29299$1VmeqK
     g$rp$32890$1VmeqK
     (make-record-printer
       'env
       (case-lambda
         ((g$x$32344$1VmeqK g$p$32345$1VmeqK g$wr$32346$1VmeqK)
          (display '"#<environment>" g$p$32345$1VmeqK)))))
   (g$12316$29300$1VmeqK
     g$12316$32891$1VmeqK
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$12319$1VmeqK
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$12318$29301$1VmeqK g$12318$32892$1VmeqK '#f)
   (g$12317$29302$1VmeqK
     g$12317$32893$1VmeqK
     (make-record-constructor-descriptor
       g$12316$29300$1VmeqK
       '#f
       g$12318$29301$1VmeqK))
   (g$interaction-env?$29305$1VmeqK
     g$interaction-env?$32894$1VmeqK
     (record-predicate g$12316$29300$1VmeqK))
   (g$make-interaction-env$29306$1VmeqK
     g$make-interaction-env$32895$1VmeqK
     (record-constructor g$12317$29302$1VmeqK))
   (g$interaction-env-rib$29307$1VmeqK
     g$interaction-env-rib$32896$1VmeqK
     (record-accessor g$12316$29300$1VmeqK '0))
   (g$interaction-env-r$29308$1VmeqK
     g$interaction-env-r$32897$1VmeqK
     (record-accessor g$12316$29300$1VmeqK '1))
   (g$interaction-env-locs$29309$1VmeqK
     g$interaction-env-locs$32898$1VmeqK
     (record-accessor g$12316$29300$1VmeqK '2))
   (g$set-interaction-env-rib!$29310$1VmeqK
     g$set-interaction-env-rib!$32899$1VmeqK
     (record-mutator g$12316$29300$1VmeqK '0))
   (g$set-interaction-env-r!$29311$1VmeqK
     g$set-interaction-env-r!$32900$1VmeqK
     (record-mutator g$12316$29300$1VmeqK '1))
   (g$set-interaction-env-locs!$29312$1VmeqK
     g$set-interaction-env-locs!$32901$1VmeqK
     (record-mutator g$12316$29300$1VmeqK '2))
   (g$rp$29313$1VmeqK
     g$rp$32902$1VmeqK
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$32347$1VmeqK g$p$32348$1VmeqK g$wr$32349$1VmeqK)
          (display '"#<environment>" g$p$32348$1VmeqK)))))
   (g$interaction-environment-symbols$29314$1VmeqK
     g$interaction-environment-symbols$32903$1VmeqK
     (case-lambda
       (()
        (g$environment-symbols$29318$1VmeqK
          (g$interaction-environment$29348$1VmeqK)))))
   (g$environment-bindings$29315$1VmeqK
     g$environment-bindings$32904$1VmeqK
     (case-lambda
       ((g$e$32350$1VmeqK)
        (vector->list
          (g$vector-map$21248$1VmeqK
            (case-lambda
              ((g$name$32351$1VmeqK g$label$32352$1VmeqK)
               (g$parse-binding$29316$1VmeqK
                 (cons
                   g$name$32351$1VmeqK
                   (g$imported-label->binding$28429$1VmeqK
                     g$label$32352$1VmeqK)))))
            (g$env-names$29293$1VmeqK g$e$32350$1VmeqK)
            (g$env-labels$29294$1VmeqK g$e$32350$1VmeqK))))))
   (g$parse-binding$29316$1VmeqK
     g$parse-binding$32905$1VmeqK
     (case-lambda
       ((g$b$32353$1VmeqK)
        (cons
          (car g$b$32353$1VmeqK)
          ((case-lambda
             ((g$t$32354$1VmeqK)
              (if (g$memv$20342$1VmeqK
                    g$t$32354$1VmeqK
                    '(core-prim global))
                'procedure
                (if (g$memv$20342$1VmeqK
                      g$t$32354$1VmeqK
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$32354$1VmeqK '$core-rtd)
                    'record
                    (begin
                      '#f
                      (if (eq? (car g$b$32353$1VmeqK)
                               (g$cadr$21200$1VmeqK g$b$32353$1VmeqK))
                        'syntax
                        'unknown)))))))
           (g$cadr$21200$1VmeqK g$b$32353$1VmeqK))))))
   (g$environment?$29317$1VmeqK
     g$environment?$32906$1VmeqK
     (case-lambda
       ((g$x$32355$1VmeqK)
        ((case-lambda
           ((g$t$32356$1VmeqK)
            (if g$t$32356$1VmeqK
              g$t$32356$1VmeqK
              (begin
                '#f
                (g$interaction-env?$29305$1VmeqK g$x$32355$1VmeqK)))))
         (g$env?$29291$1VmeqK g$x$32355$1VmeqK)))))
   (g$environment-symbols$29318$1VmeqK
     g$environment-symbols$32907$1VmeqK
     (case-lambda
       ((g$x$32357$1VmeqK)
        (if (g$env?$29291$1VmeqK g$x$32357$1VmeqK)
          (vector->list (g$env-names$29293$1VmeqK g$x$32357$1VmeqK))
          (if (g$interaction-env?$29305$1VmeqK g$x$32357$1VmeqK)
            (g$map$20349$1VmeqK
              values
              (g$rib-sym*$28672$1VmeqK
                (g$interaction-env-rib$29307$1VmeqK g$x$32357$1VmeqK)))
            (begin
              '#f
              (assertion-violation
                'environment-symbols
                '"not an environment"
                g$x$32357$1VmeqK)))))))
   (g$environment$29319$1VmeqK
     g$environment$32908$1VmeqK
     (case-lambda
       (g$imp*$32358$1VmeqK
        ((case-lambda
           ((g$itc$32359$1VmeqK)
            ((case-lambda
               ((g$imp-collector$32362$1VmeqK
                  g$imp-collector$32363$1VmeqK)
                ((case-lambda
                   ((g$swap$32364$1VmeqK)
                    (dynamic-wind
                      g$swap$32364$1VmeqK
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$29274$1VmeqK
                                g$imp*$32358$1VmeqK)))
                           (case-lambda
                             ((g$subst-names$32367$1VmeqK
                                g$subst-labels$32368$1VmeqK)
                              ((case-lambda
                                 ((g$subst-labels$32369$1VmeqK
                                    g$subst-names$32370$1VmeqK)
                                  (g$make-env$29292$1VmeqK
                                    g$subst-names$32370$1VmeqK
                                    g$subst-labels$32369$1VmeqK
                                    g$itc$32359$1VmeqK)))
                               g$subst-labels$32368$1VmeqK
                               g$subst-names$32367$1VmeqK))))))
                      g$swap$32364$1VmeqK)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$32371$1VmeqK)
                        (begin
                          (g$imp-collector$32362$1VmeqK
                            g$imp-collector$32363$1VmeqK)
                          (set! g$imp-collector$32363$1VmeqK
                            g$t$32371$1VmeqK))))
                     (g$imp-collector$32362$1VmeqK)))))))
             g$imp-collector$29279$1VmeqK
             g$itc$32359$1VmeqK)))
         (g$make-collector$29276$1VmeqK)))))
   (g$null-environment$29320$1VmeqK
     g$null-environment$32909$1VmeqK
     (case-lambda
       ((g$n$32372$1VmeqK)
        (begin
          (if (not (eqv? g$n$32372$1VmeqK '5))
            (assertion-violation
              'null-environment
              '"not 5"
              g$n$32372$1VmeqK)
            (void))
          (g$environment$29319$1VmeqK '(psyntax null-environment-5))))))
   (g$scheme-report-environment$29321$1VmeqK
     g$scheme-report-environment$32910$1VmeqK
     (case-lambda
       ((g$n$32373$1VmeqK)
        (begin
          (if (not (eqv? g$n$32373$1VmeqK '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$32373$1VmeqK)
            (void))
          (g$environment$29319$1VmeqK
            '(psyntax scheme-report-environment-5))))))
   (g$expand$29322$1VmeqK
     g$expand$32911$1VmeqK
     (case-lambda
       ((g$x$32374$1VmeqK g$env$32375$1VmeqK)
        (if (g$env?$29291$1VmeqK g$env$32375$1VmeqK)
          ((case-lambda
             ((g$rib$32376$1VmeqK)
              ((case-lambda
                 ((g$x$32377$1VmeqK
                    g$itc$32378$1VmeqK
                    g$rtc$32379$1VmeqK
                    g$vtc$32380$1VmeqK)
                  ((case-lambda
                     ((g$x$32381$1VmeqK)
                      (begin
                        (g$seal-rib!$28688$1VmeqK g$rib$32376$1VmeqK)
                        (values
                          g$x$32381$1VmeqK
                          (g$rtc$32379$1VmeqK)))))
                   ((case-lambda
                      ((g$top-level-context$32390$1VmeqK
                         g$inv-collector$32391$1VmeqK
                         g$vis-collector$32392$1VmeqK
                         g$imp-collector$32393$1VmeqK
                         g$top-level-context$32394$1VmeqK
                         g$inv-collector$32395$1VmeqK
                         g$vis-collector$32396$1VmeqK
                         g$imp-collector$32397$1VmeqK)
                       ((case-lambda
                          ((g$swap$32398$1VmeqK)
                           (dynamic-wind
                             g$swap$32398$1VmeqK
                             (case-lambda
                               (()
                                (g$chi-expr$29240$1VmeqK
                                  g$x$32377$1VmeqK
                                  '()
                                  '())))
                             g$swap$32398$1VmeqK)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$32399$1VmeqK)
                                 (begin
                                   (g$top-level-context$32390$1VmeqK
                                     g$top-level-context$32394$1VmeqK)
                                   (set! g$top-level-context$32394$1VmeqK
                                     g$t$32399$1VmeqK))))
                              (g$top-level-context$32390$1VmeqK))
                             ((case-lambda
                                ((g$t$32400$1VmeqK)
                                 (begin
                                   (g$inv-collector$32391$1VmeqK
                                     g$inv-collector$32395$1VmeqK)
                                   (set! g$inv-collector$32395$1VmeqK
                                     g$t$32400$1VmeqK))))
                              (g$inv-collector$32391$1VmeqK))
                             ((case-lambda
                                ((g$t$32401$1VmeqK)
                                 (begin
                                   (g$vis-collector$32392$1VmeqK
                                     g$vis-collector$32396$1VmeqK)
                                   (set! g$vis-collector$32396$1VmeqK
                                     g$t$32401$1VmeqK))))
                              (g$vis-collector$32392$1VmeqK))
                             ((case-lambda
                                ((g$t$32402$1VmeqK)
                                 (begin
                                   (g$imp-collector$32393$1VmeqK
                                     g$imp-collector$32397$1VmeqK)
                                   (set! g$imp-collector$32397$1VmeqK
                                     g$t$32402$1VmeqK))))
                              (g$imp-collector$32393$1VmeqK))))))))
                    g$top-level-context$29349$1VmeqK
                    g$inv-collector$29277$1VmeqK
                    g$vis-collector$29278$1VmeqK
                    g$imp-collector$29279$1VmeqK
                    '#f
                    g$rtc$32379$1VmeqK
                    g$vtc$32380$1VmeqK
                    g$itc$32378$1VmeqK))))
               (g$make-stx$28697$1VmeqK
                 g$x$32374$1VmeqK
                 g$top-mark*$28657$1VmeqK
                 (list g$rib$32376$1VmeqK)
                 '())
               (g$env-itc$29295$1VmeqK g$env$32375$1VmeqK)
               (g$make-collector$29276$1VmeqK)
               (g$make-collector$29276$1VmeqK))))
           (g$make-top-rib$29275$1VmeqK
             (g$env-names$29293$1VmeqK g$env$32375$1VmeqK)
             (g$env-labels$29294$1VmeqK g$env$32375$1VmeqK)))
          (if (g$interaction-env?$29305$1VmeqK g$env$32375$1VmeqK)
            ((case-lambda
               ((g$rib$32403$1VmeqK g$r$32404$1VmeqK g$rtc$32405$1VmeqK)
                ((case-lambda
                   ((g$x$32406$1VmeqK)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$32417$1VmeqK
                               g$inv-collector$32418$1VmeqK
                               g$vis-collector$32419$1VmeqK
                               g$imp-collector$32420$1VmeqK
                               g$top-level-context$32421$1VmeqK
                               g$inv-collector$32422$1VmeqK
                               g$vis-collector$32423$1VmeqK
                               g$imp-collector$32424$1VmeqK)
                             ((case-lambda
                                ((g$swap$32425$1VmeqK)
                                 (dynamic-wind
                                   g$swap$32425$1VmeqK
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$29281$1VmeqK
                                        g$x$32406$1VmeqK
                                        g$rib$32403$1VmeqK
                                        g$r$32404$1VmeqK)))
                                   g$swap$32425$1VmeqK)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$32426$1VmeqK)
                                       (begin
                                         (g$top-level-context$32417$1VmeqK
                                           g$top-level-context$32421$1VmeqK)
                                         (set! g$top-level-context$32421$1VmeqK
                                           g$t$32426$1VmeqK))))
                                    (g$top-level-context$32417$1VmeqK))
                                   ((case-lambda
                                      ((g$t$32427$1VmeqK)
                                       (begin
                                         (g$inv-collector$32418$1VmeqK
                                           g$inv-collector$32422$1VmeqK)
                                         (set! g$inv-collector$32422$1VmeqK
                                           g$t$32427$1VmeqK))))
                                    (g$inv-collector$32418$1VmeqK))
                                   ((case-lambda
                                      ((g$t$32428$1VmeqK)
                                       (begin
                                         (g$vis-collector$32419$1VmeqK
                                           g$vis-collector$32423$1VmeqK)
                                         (set! g$vis-collector$32423$1VmeqK
                                           g$t$32428$1VmeqK))))
                                    (g$vis-collector$32419$1VmeqK))
                                   ((case-lambda
                                      ((g$t$32429$1VmeqK)
                                       (begin
                                         (g$imp-collector$32420$1VmeqK
                                           g$imp-collector$32424$1VmeqK)
                                         (set! g$imp-collector$32424$1VmeqK
                                           g$t$32429$1VmeqK))))
                                    (g$imp-collector$32420$1VmeqK))))))))
                          g$top-level-context$29349$1VmeqK
                          g$inv-collector$29277$1VmeqK
                          g$vis-collector$29278$1VmeqK
                          g$imp-collector$29279$1VmeqK
                          g$env$32375$1VmeqK
                          g$rtc$32405$1VmeqK
                          (g$make-collector$29276$1VmeqK)
                          (g$make-collector$29276$1VmeqK))))
                      (case-lambda
                        ((g$e$32430$1VmeqK g$r^$32431$1VmeqK)
                         ((case-lambda
                            ((g$r^$32432$1VmeqK g$e$32433$1VmeqK)
                             (begin
                               (g$set-interaction-env-r!$29311$1VmeqK
                                 g$env$32375$1VmeqK
                                 g$r^$32432$1VmeqK)
                               (values
                                 g$e$32433$1VmeqK
                                 (g$rtc$32405$1VmeqK)))))
                          g$r^$32431$1VmeqK
                          g$e$32430$1VmeqK))))))
                 (g$make-stx$28697$1VmeqK
                   g$x$32374$1VmeqK
                   g$top-mark*$28657$1VmeqK
                   (list g$rib$32403$1VmeqK)
                   '()))))
             (g$interaction-env-rib$29307$1VmeqK g$env$32375$1VmeqK)
             (g$interaction-env-r$29308$1VmeqK g$env$32375$1VmeqK)
             (g$make-collector$29276$1VmeqK))
            (begin
              '#f
              (assertion-violation
                'expand
                '"not an environment"
                g$env$32375$1VmeqK)))))))
   (g$eval$29323$1VmeqK
     g$eval$32912$1VmeqK
     (case-lambda
       ((g$x$32434$1VmeqK g$env$32435$1VmeqK)
        (begin
          (if (not (g$environment?$29317$1VmeqK g$env$32435$1VmeqK))
            (error 'eval '"not an environment" g$env$32435$1VmeqK)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$29322$1VmeqK
                 g$x$32434$1VmeqK
                 g$env$32435$1VmeqK)))
            (case-lambda
              ((g$x$32438$1VmeqK g$invoke-req*$32439$1VmeqK)
               ((case-lambda
                  ((g$invoke-req*$32440$1VmeqK g$x$32441$1VmeqK)
                   (begin
                     (g$for-each$20350$1VmeqK
                       g$invoke-library$28430$1VmeqK
                       g$invoke-req*$32440$1VmeqK)
                     (eval-core
                       (g$expanded->core$28162$1VmeqK
                         g$x$32441$1VmeqK)))))
                g$invoke-req*$32439$1VmeqK
                g$x$32438$1VmeqK))))))))
   (g$expand->core$29324$1VmeqK
     g$expand->core$32913$1VmeqK
     (case-lambda
       ((g$x$32442$1VmeqK g$env$32443$1VmeqK)
        (begin
          (if (not (g$environment?$29317$1VmeqK g$env$32443$1VmeqK))
            (error 'eval '"not an environment" g$env$32443$1VmeqK)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$29322$1VmeqK
                 g$x$32442$1VmeqK
                 g$env$32443$1VmeqK)))
            (case-lambda
              ((g$x$32446$1VmeqK g$invoke-req*$32447$1VmeqK)
               ((case-lambda
                  ((g$invoke-req*$32448$1VmeqK g$x$32449$1VmeqK)
                   (begin
                     (g$for-each$20350$1VmeqK
                       g$invoke-library$28430$1VmeqK
                       g$invoke-req*$32448$1VmeqK)
                     (g$expanded->core$28162$1VmeqK g$x$32449$1VmeqK))))
                g$invoke-req*$32447$1VmeqK
                g$x$32446$1VmeqK))))))))
   (g$library-expander$29325$1VmeqK
     g$library-expander$32914$1VmeqK
     (case-lambda
       ((g$x$32450$1VmeqK
          g$filename$32451$1VmeqK
          g$verify-name$32452$1VmeqK)
        (letrec* ((g$build-visit-code$32453$1VmeqK
                    (case-lambda
                      ((g$macro*$32496$1VmeqK)
                       (if (null? g$macro*$32496$1VmeqK)
                         (g$build-void$28650$1VmeqK)
                         (g$build-sequence$28649$1VmeqK
                           '#f
                           (g$map$20349$1VmeqK
                             (case-lambda
                               ((g$x$32497$1VmeqK)
                                ((case-lambda
                                   ((g$loc$32498$1VmeqK
                                      g$src$32499$1VmeqK)
                                    (list
                                      'set!
                                      g$loc$32498$1VmeqK
                                      g$src$32499$1VmeqK)))
                                 (car g$x$32497$1VmeqK)
                                 (g$cddr$21202$1VmeqK
                                   g$x$32497$1VmeqK))))
                             g$macro*$32496$1VmeqK))))))
                  (g$visit!$32454$1VmeqK
                    (case-lambda
                      ((g$macro*$32492$1VmeqK)
                       (g$for-each$20350$1VmeqK
                         (case-lambda
                           ((g$x$32493$1VmeqK)
                            ((case-lambda
                               ((g$loc$32494$1VmeqK g$proc$32495$1VmeqK)
                                (set-symbol-value!
                                  g$loc$32494$1VmeqK
                                  g$proc$32495$1VmeqK)))
                             (car g$x$32493$1VmeqK)
                             (g$cadr$21200$1VmeqK g$x$32493$1VmeqK))))
                         g$macro*$32492$1VmeqK)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$29283$1VmeqK
                 g$x$32450$1VmeqK
                 g$verify-name$32452$1VmeqK)))
            (case-lambda
              ((g$name$32464$1VmeqK
                 g$ver$32465$1VmeqK
                 g$imp*$32466$1VmeqK
                 g$inv*$32467$1VmeqK
                 g$vis*$32468$1VmeqK
                 g$invoke-code$32469$1VmeqK
                 g$macro*$32470$1VmeqK
                 g$export-subst$32471$1VmeqK
                 g$export-env$32472$1VmeqK)
               ((case-lambda
                  ((g$export-env$32473$1VmeqK
                     g$export-subst$32474$1VmeqK
                     g$macro*$32475$1VmeqK
                     g$invoke-code$32476$1VmeqK
                     g$vis*$32477$1VmeqK
                     g$inv*$32478$1VmeqK
                     g$imp*$32479$1VmeqK
                     g$ver$32480$1VmeqK
                     g$name$32481$1VmeqK)
                   ((case-lambda
                      ((g$id$32482$1VmeqK
                         g$name$32483$1VmeqK
                         g$ver$32484$1VmeqK
                         g$imp*$32485$1VmeqK
                         g$vis*$32486$1VmeqK
                         g$inv*$32487$1VmeqK
                         g$visit-proc$32488$1VmeqK
                         g$invoke-proc$32489$1VmeqK
                         g$visit-code$32490$1VmeqK
                         g$invoke-code$32491$1VmeqK)
                       (begin
                         (g$install-library$28428$1VmeqK
                           g$id$32482$1VmeqK
                           g$name$32483$1VmeqK
                           g$ver$32484$1VmeqK
                           g$imp*$32485$1VmeqK
                           g$vis*$32486$1VmeqK
                           g$inv*$32487$1VmeqK
                           g$export-subst$32474$1VmeqK
                           g$export-env$32473$1VmeqK
                           g$visit-proc$32488$1VmeqK
                           g$invoke-proc$32489$1VmeqK
                           g$visit-code$32490$1VmeqK
                           g$invoke-code$32491$1VmeqK
                           '#t
                           g$filename$32451$1VmeqK)
                         (values
                           g$id$32482$1VmeqK
                           g$name$32483$1VmeqK
                           g$ver$32484$1VmeqK
                           g$imp*$32485$1VmeqK
                           g$vis*$32486$1VmeqK
                           g$inv*$32487$1VmeqK
                           g$invoke-code$32491$1VmeqK
                           g$visit-code$32490$1VmeqK
                           g$export-subst$32474$1VmeqK
                           g$export-env$32473$1VmeqK))))
                    (gensym)
                    g$name$32481$1VmeqK
                    g$ver$32480$1VmeqK
                    (g$map$20349$1VmeqK
                      g$library-spec$28434$1VmeqK
                      g$imp*$32479$1VmeqK)
                    (g$map$20349$1VmeqK
                      g$library-spec$28434$1VmeqK
                      g$vis*$32477$1VmeqK)
                    (g$map$20349$1VmeqK
                      g$library-spec$28434$1VmeqK
                      g$inv*$32478$1VmeqK)
                    (case-lambda
                      (()
                       (g$visit!$32454$1VmeqK g$macro*$32475$1VmeqK)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$28162$1VmeqK
                           g$invoke-code$32476$1VmeqK))))
                    (g$build-visit-code$32453$1VmeqK
                      g$macro*$32475$1VmeqK)
                    g$invoke-code$32476$1VmeqK)))
                g$export-env$32472$1VmeqK
                g$export-subst$32471$1VmeqK
                g$macro*$32470$1VmeqK
                g$invoke-code$32469$1VmeqK
                g$vis*$32468$1VmeqK
                g$inv*$32467$1VmeqK
                g$imp*$32466$1VmeqK
                g$ver$32465$1VmeqK
                g$name$32464$1VmeqK))))))
       ((g$x$32500$1VmeqK g$filename$32501$1VmeqK)
        (g$library-expander$29325$1VmeqK
          g$x$32500$1VmeqK
          g$filename$32501$1VmeqK
          (case-lambda ((g$x$32502$1VmeqK) (values)))))
       ((g$x$32503$1VmeqK)
        (g$library-expander$29325$1VmeqK
          g$x$32503$1VmeqK
          '#f
          (case-lambda ((g$x$32504$1VmeqK) (values)))))))
   (g$boot-library-expand$29326$1VmeqK
     g$boot-library-expand$32915$1VmeqK
     (case-lambda
       ((g$x$32505$1VmeqK)
        (call-with-values
          (case-lambda
            (() (g$library-expander$29325$1VmeqK g$x$32505$1VmeqK)))
          (case-lambda
            ((g$id$32516$1VmeqK
               g$name$32517$1VmeqK
               g$ver$32518$1VmeqK
               g$imp*$32519$1VmeqK
               g$vis*$32520$1VmeqK
               g$inv*$32521$1VmeqK
               g$invoke-code$32522$1VmeqK
               g$visit-code$32523$1VmeqK
               g$export-subst$32524$1VmeqK
               g$export-env$32525$1VmeqK)
             ((case-lambda
                ((g$export-env$32526$1VmeqK
                   g$export-subst$32527$1VmeqK
                   g$visit-code$32528$1VmeqK
                   g$invoke-code$32529$1VmeqK
                   g$inv*$32530$1VmeqK
                   g$vis*$32531$1VmeqK
                   g$imp*$32532$1VmeqK
                   g$ver$32533$1VmeqK
                   g$name$32534$1VmeqK
                   g$id$32535$1VmeqK)
                 (values
                   g$name$32534$1VmeqK
                   g$invoke-code$32529$1VmeqK
                   g$export-subst$32527$1VmeqK
                   g$export-env$32526$1VmeqK)))
              g$export-env$32525$1VmeqK
              g$export-subst$32524$1VmeqK
              g$visit-code$32523$1VmeqK
              g$invoke-code$32522$1VmeqK
              g$inv*$32521$1VmeqK
              g$vis*$32520$1VmeqK
              g$imp*$32519$1VmeqK
              g$ver$32518$1VmeqK
              g$name$32517$1VmeqK
              g$id$32516$1VmeqK)))))))
   (g$rev-map-append$29327$1VmeqK
     g$rev-map-append$32916$1VmeqK
     (case-lambda
       ((g$f$32536$1VmeqK g$ls$32537$1VmeqK g$ac$32538$1VmeqK)
        (if (null? g$ls$32537$1VmeqK)
          g$ac$32538$1VmeqK
          (begin
            '#f
            (g$rev-map-append$29327$1VmeqK
              g$f$32536$1VmeqK
              (cdr g$ls$32537$1VmeqK)
              (cons
                (g$f$32536$1VmeqK (car g$ls$32537$1VmeqK))
                g$ac$32538$1VmeqK)))))))
   (g$build-exports$29328$1VmeqK
     g$build-exports$32917$1VmeqK
     (case-lambda
       ((g$lex*+loc*$32539$1VmeqK g$init*$32540$1VmeqK)
        (g$build-sequence$28649$1VmeqK
          '#f
          (cons
            (g$build-void$28650$1VmeqK)
            (g$rev-map-append$29327$1VmeqK
              (case-lambda
                ((g$x$32541$1VmeqK)
                 (list
                   'set!
                   (cdr g$x$32541$1VmeqK)
                   (car g$x$32541$1VmeqK))))
              g$lex*+loc*$32539$1VmeqK
              g$init*$32540$1VmeqK))))))
   (g$make-export-subst$29329$1VmeqK
     g$make-export-subst$32918$1VmeqK
     (case-lambda
       ((g$name*$32542$1VmeqK g$id*$32543$1VmeqK)
        (g$map$20349$1VmeqK
          (case-lambda
            ((g$name$32544$1VmeqK g$id$32545$1VmeqK)
             ((case-lambda
                ((g$label$32546$1VmeqK)
                 (begin
                   (if (not g$label$32546$1VmeqK)
                     (g$syntax-violation$29341$1VmeqK
                       '#f
                       '"cannot export unbound identifier"
                       g$id$32545$1VmeqK)
                     (void))
                   (cons g$name$32544$1VmeqK g$label$32546$1VmeqK))))
              (g$id->label$28737$1VmeqK g$id$32545$1VmeqK))))
          g$name*$32542$1VmeqK
          g$id*$32543$1VmeqK))))
   (g$make-export-env/macros$29330$1VmeqK
     g$make-export-env/macros$32919$1VmeqK
     (case-lambda
       ((g$lex*$32547$1VmeqK g$loc*$32548$1VmeqK g$r$32549$1VmeqK)
        (letrec* ((g$lookup$32550$1VmeqK
                    (case-lambda
                      ((g$x$32566$1VmeqK)
                       ((letrec ((g$f$32567$1VmeqK
                                   (case-lambda
                                     ((g$x$32568$1VmeqK
                                        g$lex*$32569$1VmeqK
                                        g$loc*$32570$1VmeqK)
                                      (if (pair? g$lex*$32569$1VmeqK)
                                        (if (eq? g$x$32568$1VmeqK
                                                 (car g$lex*$32569$1VmeqK))
                                          (car g$loc*$32570$1VmeqK)
                                          (g$f$32567$1VmeqK
                                            g$x$32568$1VmeqK
                                            (cdr g$lex*$32569$1VmeqK)
                                            (cdr g$loc*$32570$1VmeqK)))
                                        (begin
                                          '#f
                                          (assertion-violation
                                            'lookup-make-export
                                            '"BUG")))))))
                          g$f$32567$1VmeqK)
                        g$x$32566$1VmeqK
                        g$lex*$32547$1VmeqK
                        g$loc*$32548$1VmeqK)))))
          ((letrec ((g$f$32551$1VmeqK
                      (case-lambda
                        ((g$r$32552$1VmeqK
                           g$env$32553$1VmeqK
                           g$global*$32554$1VmeqK
                           g$macro*$32555$1VmeqK)
                         (if (null? g$r$32552$1VmeqK)
                           (values
                             g$env$32553$1VmeqK
                             g$global*$32554$1VmeqK
                             g$macro*$32555$1VmeqK)
                           (begin
                             '#f
                             ((case-lambda
                                ((g$x$32556$1VmeqK)
                                 ((case-lambda
                                    ((g$label$32557$1VmeqK
                                       g$b$32558$1VmeqK)
                                     ((case-lambda
                                        ((g$t$32559$1VmeqK)
                                         (if (eqv?
                                               g$t$32559$1VmeqK
                                               'lexical)
                                           ((case-lambda
                                              ((g$v$32560$1VmeqK)
                                               ((case-lambda
                                                  ((g$loc$32561$1VmeqK
                                                     g$type$32562$1VmeqK)
                                                   (g$f$32551$1VmeqK
                                                     (cdr g$r$32552$1VmeqK)
                                                     (cons
                                                       (g$cons*$20351$1VmeqK
                                                         g$label$32557$1VmeqK
                                                         g$type$32562$1VmeqK
                                                         g$loc$32561$1VmeqK)
                                                       g$env$32553$1VmeqK)
                                                     (cons
                                                       (cons
                                                         (g$lexical-var$29166$1VmeqK
                                                           g$v$32560$1VmeqK)
                                                         g$loc$32561$1VmeqK)
                                                       g$global*$32554$1VmeqK)
                                                     g$macro*$32555$1VmeqK)))
                                                (g$lookup$32550$1VmeqK
                                                  (g$lexical-var$29166$1VmeqK
                                                    g$v$32560$1VmeqK))
                                                (if (g$lexical-mutable?$29167$1VmeqK
                                                      g$v$32560$1VmeqK)
                                                  'mutable
                                                  'global))))
                                            (g$binding-value$28742$1VmeqK
                                              g$b$32558$1VmeqK))
                                           (if (eqv?
                                                 g$t$32559$1VmeqK
                                                 'local-macro)
                                             ((case-lambda
                                                ((g$loc$32563$1VmeqK)
                                                 (g$f$32551$1VmeqK
                                                   (cdr g$r$32552$1VmeqK)
                                                   (cons
                                                     (g$cons*$20351$1VmeqK
                                                       g$label$32557$1VmeqK
                                                       'global-macro
                                                       g$loc$32563$1VmeqK)
                                                     g$env$32553$1VmeqK)
                                                   g$global*$32554$1VmeqK
                                                   (cons
                                                     (cons
                                                       g$loc$32563$1VmeqK
                                                       (g$binding-value$28742$1VmeqK
                                                         g$b$32558$1VmeqK))
                                                     g$macro*$32555$1VmeqK))))
                                              (gensym))
                                             (if (eqv?
                                                   g$t$32559$1VmeqK
                                                   'local-macro!)
                                               ((case-lambda
                                                  ((g$loc$32564$1VmeqK)
                                                   (g$f$32551$1VmeqK
                                                     (cdr g$r$32552$1VmeqK)
                                                     (cons
                                                       (g$cons*$20351$1VmeqK
                                                         g$label$32557$1VmeqK
                                                         'global-macro!
                                                         g$loc$32564$1VmeqK)
                                                       g$env$32553$1VmeqK)
                                                     g$global*$32554$1VmeqK
                                                     (cons
                                                       (cons
                                                         g$loc$32564$1VmeqK
                                                         (g$binding-value$28742$1VmeqK
                                                           g$b$32558$1VmeqK))
                                                       g$macro*$32555$1VmeqK))))
                                                (gensym))
                                               (if (eqv?
                                                     g$t$32559$1VmeqK
                                                     'local-ctv)
                                                 ((case-lambda
                                                    ((g$loc$32565$1VmeqK)
                                                     (g$f$32551$1VmeqK
                                                       (cdr g$r$32552$1VmeqK)
                                                       (cons
                                                         (g$cons*$20351$1VmeqK
                                                           g$label$32557$1VmeqK
                                                           'global-ctv
                                                           g$loc$32565$1VmeqK)
                                                         g$env$32553$1VmeqK)
                                                       g$global*$32554$1VmeqK
                                                       (cons
                                                         (cons
                                                           g$loc$32565$1VmeqK
                                                           (g$binding-value$28742$1VmeqK
                                                             g$b$32558$1VmeqK))
                                                         g$macro*$32555$1VmeqK))))
                                                  (gensym))
                                                 (if (g$memv$20342$1VmeqK
                                                       g$t$32559$1VmeqK
                                                       '($rtd $module))
                                                   (g$f$32551$1VmeqK
                                                     (cdr g$r$32552$1VmeqK)
                                                     (cons
                                                       g$x$32556$1VmeqK
                                                       g$env$32553$1VmeqK)
                                                     g$global*$32554$1VmeqK
                                                     g$macro*$32555$1VmeqK)
                                                   (begin
                                                     '#f
                                                     (assertion-violation
                                                       'expander
                                                       '"BUG: do not know how to export"
                                                       (g$binding-type$28741$1VmeqK
                                                         g$b$32558$1VmeqK)
                                                       (g$binding-value$28742$1VmeqK
                                                         g$b$32558$1VmeqK))))))))))
                                      (g$binding-type$28741$1VmeqK
                                        g$b$32558$1VmeqK))))
                                  (car g$x$32556$1VmeqK)
                                  (cdr g$x$32556$1VmeqK))))
                              (car g$r$32552$1VmeqK))))))))
             g$f$32551$1VmeqK)
           g$r$32549$1VmeqK
           '()
           '()
           '())))))
   (g$generate-temporaries$29331$1VmeqK
     g$generate-temporaries$32920$1VmeqK
     (case-lambda
       ((g$ls$32571$1VmeqK)
        ((case-lambda
           ((g$t$32572$1VmeqK)
            ((case-lambda
               ((g$ls/false$32573$1VmeqK)
                (if g$ls/false$32573$1VmeqK
                  (apply
                    (case-lambda
                      ((g$ls$32574$1VmeqK)
                       (g$map$20349$1VmeqK
                         (case-lambda
                           ((g$x$32575$1VmeqK)
                            (g$make-stx$28697$1VmeqK
                              ((case-lambda
                                 ((g$x$32576$1VmeqK)
                                  (if ((case-lambda
                                         ((g$t$32577$1VmeqK)
                                          (if g$t$32577$1VmeqK
                                            g$t$32577$1VmeqK
                                            (begin
                                              '#f
                                              (string?
                                                g$x$32576$1VmeqK)))))
                                       (g$symbol?$21181$1VmeqK
                                         g$x$32576$1VmeqK))
                                    (gensym g$x$32576$1VmeqK)
                                    (begin '#f (gensym 't)))))
                               (g$syntax->datum$29344$1VmeqK
                                 g$x$32575$1VmeqK))
                              g$top-mark*$28657$1VmeqK
                              '()
                              '())))
                         g$ls$32574$1VmeqK)))
                    g$ls/false$32573$1VmeqK)
                  ((case-lambda
                     ((g$t$32578$1VmeqK)
                      ((case-lambda
                         ((g$ls/false$32579$1VmeqK)
                          (if g$ls/false$32579$1VmeqK
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$32579$1VmeqK)
                            (g$syntax-violation$29341$1VmeqK
                              '#f
                              '"invalid syntax"
                              g$t$32578$1VmeqK))))
                       (g$syntax-dispatch$29222$1VmeqK
                         g$t$32578$1VmeqK
                         '_))))
                   g$t$32572$1VmeqK))))
             (g$syntax-dispatch$29222$1VmeqK
               g$t$32572$1VmeqK
               'each-any))))
         g$ls$32571$1VmeqK))))
   (g$free-identifier=?$29332$1VmeqK
     g$free-identifier=?$32921$1VmeqK
     (case-lambda
       ((g$x$32580$1VmeqK g$y$32581$1VmeqK)
        (if (g$id?$28724$1VmeqK g$x$32580$1VmeqK)
          (if (g$id?$28724$1VmeqK g$y$32581$1VmeqK)
            (g$free-id=?$28728$1VmeqK g$x$32580$1VmeqK g$y$32581$1VmeqK)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$32581$1VmeqK))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$32580$1VmeqK)))))
   (g$bound-identifier=?$29333$1VmeqK
     g$bound-identifier=?$32922$1VmeqK
     (case-lambda
       ((g$x$32582$1VmeqK g$y$32583$1VmeqK)
        (if (g$id?$28724$1VmeqK g$x$32582$1VmeqK)
          (if (g$id?$28724$1VmeqK g$y$32583$1VmeqK)
            (g$bound-id=?$28727$1VmeqK
              g$x$32582$1VmeqK
              g$y$32583$1VmeqK)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$32583$1VmeqK))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$32582$1VmeqK)))))
   (g$make-source-condition$29334$1VmeqK
     g$make-source-condition$32923$1VmeqK
     (case-lambda
       ((g$x$32584$1VmeqK)
        (letrec* ((g$15289$32585$1VmeqK
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$22677$1VmeqK
                      'g$15292$1VmeqK
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$15291$32586$1VmeqK '#f)
                  (g$15290$32587$1VmeqK
                    (make-record-constructor-descriptor
                      g$15289$32585$1VmeqK
                      g$&condition-rcd$22678$1VmeqK
                      g$15291$32586$1VmeqK))
                  (g$15288$32590$1VmeqK
                    (record-predicate g$15289$32585$1VmeqK))
                  (g$make-source-condition$32591$1VmeqK
                    (record-constructor g$15290$32587$1VmeqK))
                  (g$15286$32592$1VmeqK
                    (record-accessor g$15289$32585$1VmeqK '0))
                  (g$15287$32593$1VmeqK
                    (record-accessor g$15289$32585$1VmeqK '1))
                  (g$source-condition?$32594$1VmeqK
                    (condition-predicate g$15289$32585$1VmeqK))
                  (g$source-filename$32595$1VmeqK
                    (condition-accessor
                      g$15289$32585$1VmeqK
                      g$15286$32592$1VmeqK))
                  (g$source-character$32596$1VmeqK
                    (condition-accessor
                      g$15289$32585$1VmeqK
                      g$15287$32593$1VmeqK)))
          (if (pair? g$x$32584$1VmeqK)
            (g$make-source-condition$32591$1VmeqK
              (car g$x$32584$1VmeqK)
              (cdr g$x$32584$1VmeqK))
            (condition))))))
   (g$extract-position-condition$29335$1VmeqK
     g$extract-position-condition$32924$1VmeqK
     (case-lambda
       ((g$x$32597$1VmeqK)
        (g$make-source-condition$29334$1VmeqK
          (g$expression-position$29336$1VmeqK g$x$32597$1VmeqK)))))
   (g$expression-position$29336$1VmeqK
     g$expression-position$32925$1VmeqK
     (case-lambda
       ((g$x$32598$1VmeqK)
        (if (g$stx?$28696$1VmeqK g$x$32598$1VmeqK)
          (begin
            '#f
            ((case-lambda
               ((g$x$32599$1VmeqK)
                (if (annotation? g$x$32599$1VmeqK)
                  (begin '#f (annotation-source g$x$32599$1VmeqK))
                  '#f)))
             (g$stx-expr$28698$1VmeqK g$x$32598$1VmeqK)))
          '#f))))
   (g$assertion-error$29337$1VmeqK
     g$assertion-error$32926$1VmeqK
     (case-lambda
       ((g$expr$32600$1VmeqK g$pos$32601$1VmeqK)
        (raise
          (condition
            (g$make-assertion-violation$22725$1VmeqK)
            (g$make-who-condition$22743$1VmeqK 'assert)
            (g$make-message-condition$22683$1VmeqK '"assertion failed")
            (g$make-irritants-condition$22733$1VmeqK
              (list g$expr$32600$1VmeqK))
            (g$make-source-condition$29334$1VmeqK
              g$pos$32601$1VmeqK))))))
   (g$syntax-error$29338$1VmeqK
     g$syntax-error$32927$1VmeqK
     (case-lambda
       ((g$x$32602$1VmeqK . g$args$32603$1VmeqK)
        (begin
          (if (not (g$for-all$20347$1VmeqK string? g$args$32603$1VmeqK))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$32603$1VmeqK)
            (void))
          (raise
            (condition
              (g$make-message-condition$22683$1VmeqK
                (if (null? g$args$32603$1VmeqK)
                  '"invalid syntax"
                  (apply string-append g$args$32603$1VmeqK)))
              (g$make-syntax-violation$22797$1VmeqK
                (g$syntax->datum$29344$1VmeqK g$x$32602$1VmeqK)
                '#f)
              (g$extract-position-condition$29335$1VmeqK
                g$x$32602$1VmeqK)
              (g$extract-trace$29339$1VmeqK g$x$32602$1VmeqK)))))))
   (g$extract-trace$29339$1VmeqK
     g$extract-trace$32928$1VmeqK
     (case-lambda
       ((g$x$32604$1VmeqK)
        (letrec* ((g$15314$32605$1VmeqK
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$22677$1VmeqK
                      'g$15317$1VmeqK
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$15316$32606$1VmeqK '#f)
                  (g$15315$32607$1VmeqK
                    (make-record-constructor-descriptor
                      g$15314$32605$1VmeqK
                      g$&condition-rcd$22678$1VmeqK
                      g$15316$32606$1VmeqK))
                  (g$15313$32610$1VmeqK
                    (record-predicate g$15314$32605$1VmeqK))
                  (g$make-trace$32611$1VmeqK
                    (record-constructor g$15315$32607$1VmeqK))
                  (g$15312$32612$1VmeqK
                    (record-accessor g$15314$32605$1VmeqK '0))
                  (g$trace?$32613$1VmeqK
                    (condition-predicate g$15314$32605$1VmeqK))
                  (g$trace-form$32614$1VmeqK
                    (condition-accessor
                      g$15314$32605$1VmeqK
                      g$15312$32612$1VmeqK)))
          ((letrec ((g$f$32615$1VmeqK
                      (case-lambda
                        ((g$x$32616$1VmeqK)
                         (if (g$stx?$28696$1VmeqK g$x$32616$1VmeqK)
                           (apply
                             condition
                             (g$make-trace$32611$1VmeqK
                               g$x$32616$1VmeqK)
                             (g$map$20349$1VmeqK
                               g$f$32615$1VmeqK
                               (g$stx-ae*$28701$1VmeqK
                                 g$x$32616$1VmeqK)))
                           (if (annotation? g$x$32616$1VmeqK)
                             (g$make-trace$32611$1VmeqK
                               (g$make-stx$28697$1VmeqK
                                 g$x$32616$1VmeqK
                                 '()
                                 '()
                                 '()))
                             (begin '#f (condition))))))))
             g$f$32615$1VmeqK)
           g$x$32604$1VmeqK)))))
   (g$syntax-violation*$29340$1VmeqK
     g$syntax-violation*$32929$1VmeqK
     (case-lambda
       ((g$who$32617$1VmeqK
          g$msg$32618$1VmeqK
          g$form$32619$1VmeqK
          g$condition-object$32620$1VmeqK)
        (begin
          (if (not (string? g$msg$32618$1VmeqK))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$32618$1VmeqK)
            (void))
          ((case-lambda
             ((g$who$32621$1VmeqK)
              (raise
                (condition
                  (if g$who$32621$1VmeqK
                    (g$make-who-condition$22743$1VmeqK
                      g$who$32621$1VmeqK)
                    (condition))
                  (g$make-message-condition$22683$1VmeqK
                    g$msg$32618$1VmeqK)
                  g$condition-object$32620$1VmeqK
                  (g$extract-position-condition$29335$1VmeqK
                    g$form$32619$1VmeqK)
                  (g$extract-trace$29339$1VmeqK g$form$32619$1VmeqK)))))
           (if ((case-lambda
                  ((g$t$32622$1VmeqK)
                   (if g$t$32622$1VmeqK
                     g$t$32622$1VmeqK
                     (begin
                       '#f
                       (g$symbol?$21181$1VmeqK g$who$32617$1VmeqK)))))
                (string? g$who$32617$1VmeqK))
             g$who$32617$1VmeqK
             (if (not g$who$32617$1VmeqK)
               ((case-lambda
                  ((g$t$32623$1VmeqK)
                   ((case-lambda
                      ((g$ls/false$32624$1VmeqK)
                       (if (if g$ls/false$32624$1VmeqK
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$32625$1VmeqK)
                                    (g$id?$28724$1VmeqK
                                      g$id$32625$1VmeqK)))
                                 g$ls/false$32624$1VmeqK))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$32626$1VmeqK)
                              (g$syntax->datum$29344$1VmeqK
                                g$id$32626$1VmeqK)))
                           g$ls/false$32624$1VmeqK)
                         ((case-lambda
                            ((g$t$32627$1VmeqK)
                             ((case-lambda
                                ((g$ls/false$32628$1VmeqK)
                                 (if (if g$ls/false$32628$1VmeqK
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$32629$1VmeqK
                                                g$rest$32630$1VmeqK)
                                              (g$id?$28724$1VmeqK
                                                g$id$32629$1VmeqK)))
                                           g$ls/false$32628$1VmeqK))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$32631$1VmeqK
                                          g$rest$32632$1VmeqK)
                                        (g$syntax->datum$29344$1VmeqK
                                          g$id$32631$1VmeqK)))
                                     g$ls/false$32628$1VmeqK)
                                   ((case-lambda
                                      ((g$t$32633$1VmeqK)
                                       ((case-lambda
                                          ((g$ls/false$32634$1VmeqK)
                                           (if g$ls/false$32634$1VmeqK
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$32634$1VmeqK)
                                             (g$syntax-violation$29341$1VmeqK
                                               '#f
                                               '"invalid syntax"
                                               g$t$32633$1VmeqK))))
                                        (g$syntax-dispatch$29222$1VmeqK
                                          g$t$32633$1VmeqK
                                          '_))))
                                    g$t$32627$1VmeqK))))
                              (g$syntax-dispatch$29222$1VmeqK
                                g$t$32627$1VmeqK
                                '(any . any)))))
                          g$t$32623$1VmeqK))))
                    (g$syntax-dispatch$29222$1VmeqK
                      g$t$32623$1VmeqK
                      'any))))
                g$form$32619$1VmeqK)
               (begin
                 '#f
                 (assertion-violation
                   'syntax-violation
                   '"invalid who argument"
                   g$who$32617$1VmeqK)))))))))
   (g$syntax-violation$29341$1VmeqK
     g$syntax-violation$32930$1VmeqK
     (case-lambda
       ((g$who$32635$1VmeqK g$msg$32636$1VmeqK g$form$32637$1VmeqK)
        (g$syntax-violation$29341$1VmeqK
          g$who$32635$1VmeqK
          g$msg$32636$1VmeqK
          g$form$32637$1VmeqK
          '#f))
       ((g$who$32638$1VmeqK
          g$msg$32639$1VmeqK
          g$form$32640$1VmeqK
          g$subform$32641$1VmeqK)
        (g$syntax-violation*$29340$1VmeqK
          g$who$32638$1VmeqK
          g$msg$32639$1VmeqK
          g$form$32640$1VmeqK
          (g$make-syntax-violation$22797$1VmeqK
            (g$syntax->datum$29344$1VmeqK g$form$32640$1VmeqK)
            (g$syntax->datum$29344$1VmeqK g$subform$32641$1VmeqK))))))
   (g$identifier?$29342$1VmeqK
     g$identifier?$32931$1VmeqK
     (case-lambda
       ((g$x$32642$1VmeqK) (g$id?$28724$1VmeqK g$x$32642$1VmeqK))))
   (g$datum->syntax$29343$1VmeqK
     g$datum->syntax$32932$1VmeqK
     (case-lambda
       ((g$id$32643$1VmeqK g$datum$32644$1VmeqK)
        (if (g$id?$28724$1VmeqK g$id$32643$1VmeqK)
          (g$datum->stx$28707$1VmeqK
            g$id$32643$1VmeqK
            g$datum$32644$1VmeqK)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$32643$1VmeqK)))))
   (g$syntax->datum$29344$1VmeqK
     g$syntax->datum$32933$1VmeqK
     (case-lambda
       ((g$x$32645$1VmeqK)
        (g$stx->datum$28735$1VmeqK g$x$32645$1VmeqK))))
   (g$compile-r6rs-top-level$29345$1VmeqK
     g$compile-r6rs-top-level$32934$1VmeqK
     (case-lambda
       ((g$x*$32646$1VmeqK)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$29285$1VmeqK g$x*$32646$1VmeqK)))
          (case-lambda
            ((g$lib*$32649$1VmeqK g$invoke-code$32650$1VmeqK)
             ((case-lambda
                ((g$invoke-code$32651$1VmeqK g$lib*$32652$1VmeqK)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$20350$1VmeqK
                        g$invoke-library$28430$1VmeqK
                        g$lib*$32652$1VmeqK)
                      (eval-core
                        (g$expanded->core$28162$1VmeqK
                          g$invoke-code$32651$1VmeqK)))))))
              g$invoke-code$32650$1VmeqK
              g$lib*$32649$1VmeqK)))))))
   (g$pre-compile-r6rs-top-level$29346$1VmeqK
     g$pre-compile-r6rs-top-level$32935$1VmeqK
     (case-lambda
       ((g$x*$32653$1VmeqK)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$29285$1VmeqK g$x*$32653$1VmeqK)))
          (case-lambda
            ((g$lib*$32656$1VmeqK g$invoke-code$32657$1VmeqK)
             ((case-lambda
                ((g$invoke-code$32658$1VmeqK g$lib*$32659$1VmeqK)
                 (begin
                   (g$for-each$20350$1VmeqK
                     g$invoke-library$28430$1VmeqK
                     g$lib*$32659$1VmeqK)
                   (compile-core
                     (g$expanded->core$28162$1VmeqK
                       g$invoke-code$32658$1VmeqK)))))
              g$invoke-code$32657$1VmeqK
              g$lib*$32656$1VmeqK)))))))
   (g$new-interaction-environment$29347$1VmeqK
     g$new-interaction-environment$32936$1VmeqK
     (case-lambda
       (() (g$new-interaction-environment$29347$1VmeqK '(ironscheme)))
       ((g$libname$32660$1VmeqK)
        ((case-lambda
           ((g$lib$32661$1VmeqK g$rib$32662$1VmeqK)
            (begin
              ((case-lambda
                 ((g$subst$32663$1VmeqK)
                  (begin
                    (g$set-rib-sym*!$28677$1VmeqK
                      g$rib$32662$1VmeqK
                      (g$map$20349$1VmeqK car g$subst$32663$1VmeqK))
                    (g$set-rib-mark**!$28678$1VmeqK
                      g$rib$32662$1VmeqK
                      (g$map$20349$1VmeqK
                        (case-lambda
                          ((g$x$32664$1VmeqK) g$top-mark*$28657$1VmeqK))
                        g$subst$32663$1VmeqK))
                    (g$set-rib-label*!$28679$1VmeqK
                      g$rib$32662$1VmeqK
                      (g$map$20349$1VmeqK cdr g$subst$32663$1VmeqK)))))
               (g$library-subst$28387$1VmeqK g$lib$32661$1VmeqK))
              (g$make-interaction-env$29306$1VmeqK
                g$rib$32662$1VmeqK
                '()
                '()))))
         (g$find-library-by-name$28423$1VmeqK g$libname$32660$1VmeqK)
         (g$make-empty-rib$28682$1VmeqK)))))
   (g$interaction-environment$29348$1VmeqK
     g$interaction-environment$32937$1VmeqK
     (g$make-parameter$27565$1VmeqK '#f))
   (g$top-level-context$29349$1VmeqK
     g$top-level-context$32938$1VmeqK
     (g$make-parameter$27565$1VmeqK '#f)))
  (g$current-library-expander$28420$1VmeqK
    g$library-expander$29325$1VmeqK))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$28159$1VmeqK
      (case-lambda
        ((g$x$33025$1VmeqK)
         ((case-lambda
            ((g$t$33026$1VmeqK)
             (if g$t$33026$1VmeqK
               (cdr g$t$33026$1VmeqK)
               (begin '#f '#f))))
          (g$assq$20337$1VmeqK
            g$x$33025$1VmeqK
            '((ellipsis-map . g$ellipsis-map$32822$1VmeqK)
              (&stacktrace-rcd . g$&stacktrace-rcd$22768$1VmeqK)
              (&stacktrace-rtd . g$&stacktrace-rtd$22767$1VmeqK)
              (&where-rcd . g$&where-rcd$22758$1VmeqK)
              (&where-rtd . g$&where-rtd$22757$1VmeqK)
              (&no-nans-rcd . g$&no-nans-rcd$22932$1VmeqK)
              (&no-nans-rtd . g$&no-nans-rtd$22931$1VmeqK)
              (&no-infinities-rcd . g$&no-infinities-rcd$22924$1VmeqK)
              (&no-infinities-rtd . g$&no-infinities-rtd$22923$1VmeqK)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$22916$1VmeqK)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$22915$1VmeqK)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$22906$1VmeqK)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$22905$1VmeqK)
              (&i/o-port-rcd . g$&i/o-port-rcd$22898$1VmeqK)
              (&i/o-port-rtd . g$&i/o-port-rtd$22897$1VmeqK)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$22888$1VmeqK)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$22887$1VmeqK)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$22880$1VmeqK)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$22879$1VmeqK)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$22872$1VmeqK)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$22871$1VmeqK)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$22864$1VmeqK)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$22863$1VmeqK)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$22856$1VmeqK)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$22855$1VmeqK)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$22846$1VmeqK)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$22845$1VmeqK)
              (&i/o-write-rcd . g$&i/o-write-rcd$22836$1VmeqK)
              (&i/o-write-rtd . g$&i/o-write-rtd$22835$1VmeqK)
              (&i/o-read-rcd . g$&i/o-read-rcd$22828$1VmeqK)
              (&i/o-read-rtd . g$&i/o-read-rtd$22827$1VmeqK)
              (&i/o-rcd . g$&i/o-rcd$22820$1VmeqK)
              (&i/o-rtd . g$&i/o-rtd$22819$1VmeqK)
              (&undefined-rcd . g$&undefined-rcd$22812$1VmeqK)
              (&undefined-rtd . g$&undefined-rtd$22811$1VmeqK)
              (&syntax-rcd . g$&syntax-rcd$22804$1VmeqK)
              (&syntax-rtd . g$&syntax-rtd$22803$1VmeqK)
              (&lexical-rcd . g$&lexical-rcd$22792$1VmeqK)
              (&lexical-rtd . g$&lexical-rtd$22791$1VmeqK)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$22784$1VmeqK)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$22783$1VmeqK)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$22776$1VmeqK)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$22775$1VmeqK)
              (&who-rcd . g$&who-rcd$22748$1VmeqK)
              (&who-rtd . g$&who-rtd$22747$1VmeqK)
              (&irritants-rcd . g$&irritants-rcd$22738$1VmeqK)
              (&irritants-rtd . g$&irritants-rtd$22737$1VmeqK)
              (&assertion-rcd . g$&assertion-rcd$22728$1VmeqK)
              (&assertion-rtd . g$&assertion-rtd$22727$1VmeqK)
              (&violation-rcd . g$&violation-rcd$22720$1VmeqK)
              (&violation-rtd . g$&violation-rtd$22719$1VmeqK)
              (&error-rcd . g$&error-rcd$22712$1VmeqK)
              (&error-rtd . g$&error-rtd$22711$1VmeqK)
              (&serious-rcd . g$&serious-rcd$22704$1VmeqK)
              (&serious-rtd . g$&serious-rtd$22703$1VmeqK)
              (&warning-rcd . g$&warning-rcd$22696$1VmeqK)
              (&warning-rtd . g$&warning-rtd$22695$1VmeqK)
              (&message-rcd . g$&message-rcd$22688$1VmeqK)
              (&message-rtd . g$&message-rtd$22687$1VmeqK)
              (&condition-rcd . g$&condition-rcd$22678$1VmeqK)
              (&condition-rtd . g$&condition-rtd$22677$1VmeqK)
              (tanh . g$tanh$22232$1VmeqK)
              (cosh . g$cosh$22230$1VmeqK)
              (sinh . g$sinh$22227$1VmeqK)
              (make-list . g$make-list$20332$1VmeqK)
              (last-pair . g$last-pair$20331$1VmeqK)
              (ironscheme-test . g$ironscheme-test$33015$1VmeqK)
              (ironscheme-build . g$ironscheme-build$33016$1VmeqK)
              (syntax-error . g$syntax-error$32927$1VmeqK)
              (syntax-dispatch . g$syntax-dispatch$32817$1VmeqK)
              (compile-system-libraries
                .
                g$compile-system-libraries$33020$1VmeqK)
              (compile->closure . g$compile->closure$33022$1VmeqK)
              (compile . g$compile$33021$1VmeqK)
              (load . g$load$33014$1VmeqK)
              (new-interaction-environment
                .
                g$new-interaction-environment$32936$1VmeqK)
              (interaction-environment
                .
                g$interaction-environment$32937$1VmeqK)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$23154$1VmeqK)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$23153$1VmeqK)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$23152$1VmeqK)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$23151$1VmeqK)
              (string-ci>? . g$string-ci>?$23143$1VmeqK)
              (string-ci>=? . g$string-ci>=?$23145$1VmeqK)
              (string-ci=? . g$string-ci=?$23141$1VmeqK)
              (string-ci<? . g$string-ci<?$23142$1VmeqK)
              (string-ci<=? . g$string-ci<=?$23144$1VmeqK)
              (char-ci>? . g$char-ci>?$23148$1VmeqK)
              (char-ci>=? . g$char-ci>=?$23150$1VmeqK)
              (char-ci=? . g$char-ci=?$23146$1VmeqK)
              (char-ci<? . g$char-ci<?$23147$1VmeqK)
              (char-ci<=? . g$char-ci<=?$23149$1VmeqK)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$32755$1VmeqK)
              (variable-transformer?
                .
                g$variable-transformer?$32754$1VmeqK)
              (make-variable-transformer
                .
                g$make-variable-transformer$32752$1VmeqK)
              (identifier? . g$identifier?$32931$1VmeqK)
              (generate-temporaries
                .
                g$generate-temporaries$32920$1VmeqK)
              (free-identifier=? . g$free-identifier=?$32921$1VmeqK)
              (syntax->datum . g$syntax->datum$32933$1VmeqK)
              (datum->syntax . g$datum->syntax$32932$1VmeqK)
              (bound-identifier=? . g$bound-identifier=?$32922$1VmeqK)
              (delete-file . g$delete-file$21319$1VmeqK)
              (file-exists? . g$file-exists?$21318$1VmeqK)
              (list-sort . g$list-sort$22996$1VmeqK)
              (symbol-hash . g$symbol-hash$21308$1VmeqK)
              (string-ci-hash . g$string-ci-hash$21307$1VmeqK)
              (string-hash . g$string-hash$21306$1VmeqK)
              (make-eqv-hashtable . g$make-eqv-hashtable$21298$1VmeqK)
              (make-eq-hashtable . g$make-eq-hashtable$21297$1VmeqK)
              (hashtable? . g$hashtable?$21296$1VmeqK)
              (hashtable-update! . g$hashtable-update!$21304$1VmeqK)
              (hashtable-size . g$hashtable-size$21299$1VmeqK)
              (hashtable-set! . g$hashtable-set!$21301$1VmeqK)
              (hashtable-ref . g$hashtable-ref$21300$1VmeqK)
              (hashtable-delete! . g$hashtable-delete!$21302$1VmeqK)
              (hashtable-contains? . g$hashtable-contains?$21303$1VmeqK)
              (hashtable-clear! . g$hashtable-clear!$21305$1VmeqK)
              (call-with-output-file
                .
                g$call-with-output-file$27181$1VmeqK)
              (call-with-input-file
                .
                g$call-with-input-file$27180$1VmeqK)
              (write-char . g$write-char$27177$1VmeqK)
              (with-output-to-file . g$with-output-to-file$27179$1VmeqK)
              (with-input-from-file
                .
                g$with-input-from-file$27178$1VmeqK)
              (read-char . g$read-char$27176$1VmeqK)
              (peek-char . g$peek-char$27175$1VmeqK)
              (newline . g$newline$27182$1VmeqK)
              (standard-output-port
                .
                g$standard-output-port$27109$1VmeqK)
              (standard-input-port . g$standard-input-port$27108$1VmeqK)
              (standard-error-port . g$standard-error-port$27107$1VmeqK)
              (put-datum . g$put-datum$27112$1VmeqK)
              (port? . g$port?$27117$1VmeqK)
              (open-string-output-port
                .
                g$open-string-output-port$27116$1VmeqK)
              (native-eol-style . g$native-eol-style$27110$1VmeqK)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$22833$1VmeqK)
              (make-i/o-read-error . g$make-i/o-read-error$22825$1VmeqK)
              (make-i/o-port-error . g$make-i/o-port-error$22893$1VmeqK)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$22841$1VmeqK)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$22851$1VmeqK)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$22861$1VmeqK)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$22869$1VmeqK)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$22885$1VmeqK)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$22877$1VmeqK)
              (make-i/o-error . g$make-i/o-error$22817$1VmeqK)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$22911$1VmeqK)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$22903$1VmeqK)
              (make-bytevector . g$make-bytevector$21644$1VmeqK)
              (i/o-write-error? . g$i/o-write-error?$22834$1VmeqK)
              (i/o-read-error? . g$i/o-read-error?$22826$1VmeqK)
              (i/o-port-error? . g$i/o-port-error?$22895$1VmeqK)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$22843$1VmeqK)
              (i/o-error-position . g$i/o-error-position$22844$1VmeqK)
              (i/o-filename-error? . g$i/o-filename-error?$22853$1VmeqK)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$22862$1VmeqK)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$22870$1VmeqK)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$22886$1VmeqK)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$22878$1VmeqK)
              (i/o-error? . g$i/o-error?$22818$1VmeqK)
              (i/o-error-port . g$i/o-error-port$22896$1VmeqK)
              (i/o-error-filename . g$i/o-error-filename$22854$1VmeqK)
              (i/o-encoding-error? . g$i/o-encoding-error?$22913$1VmeqK)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$22914$1VmeqK)
              (i/o-decoding-error? . g$i/o-decoding-error?$22904$1VmeqK)
              (get-datum . g$get-datum$27113$1VmeqK)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$27118$1VmeqK)
              (call-with-port . g$call-with-port$27119$1VmeqK)
              (buffer-mode? . g$buffer-mode?$27111$1VmeqK)
              (scheme-report-environment
                .
                g$scheme-report-environment$32910$1VmeqK)
              (quotient . g$quotient$22963$1VmeqK)
              (null-environment . g$null-environment$32909$1VmeqK)
              (remainder . g$remainder$22964$1VmeqK)
              (modulo . g$modulo$22965$1VmeqK)
              (inexact->exact . g$inexact->exact$22960$1VmeqK)
              (force . g$force$22967$1VmeqK)
              (exact->inexact . g$exact->inexact$22961$1VmeqK)
              (command-line . g$command-line$33009$1VmeqK)
              (remove . g$remove$20354$1VmeqK)
              (remv . g$remv$20355$1VmeqK)
              (remp . g$remp$20335$1VmeqK)
              (remq . g$remq$20356$1VmeqK)
              (partition . g$partition$20334$1VmeqK)
              (memv . g$memv$20342$1VmeqK)
              (memq . g$memq$20341$1VmeqK)
              (memp . g$memp$20344$1VmeqK)
              (member . g$member$20343$1VmeqK)
              (exists . g$exists$20348$1VmeqK)
              (for-all . g$for-all$20347$1VmeqK)
              (fold-right . g$fold-right$20353$1VmeqK)
              (fold-left . g$fold-left$20352$1VmeqK)
              (find . g$find$20333$1VmeqK)
              (filter . g$filter$20336$1VmeqK)
              (cons* . g$cons*$20351$1VmeqK)
              (assv . g$assv$20338$1VmeqK)
              (assq . g$assq$20337$1VmeqK)
              (assp . g$assp$20340$1VmeqK)
              (assoc . g$assoc$20339$1VmeqK)
              (eval . g$eval$32912$1VmeqK)
              (environment . g$environment$32908$1VmeqK)
              (make-enumeration . g$make-enumeration$27318$1VmeqK)
              (enum-set=? . g$enum-set=?$27325$1VmeqK)
              (enum-set-universe . g$enum-set-universe$27319$1VmeqK)
              (enum-set-union . g$enum-set-union$27326$1VmeqK)
              (enum-set-subset? . g$enum-set-subset?$27324$1VmeqK)
              (enum-set-projection . g$enum-set-projection$27330$1VmeqK)
              (enum-set-member? . g$enum-set-member?$27323$1VmeqK)
              (enum-set-intersection
                .
                g$enum-set-intersection$27327$1VmeqK)
              (enum-set-indexer . g$enum-set-indexer$27320$1VmeqK)
              (enum-set-difference . g$enum-set-difference$27328$1VmeqK)
              (enum-set-constructor
                .
                g$enum-set-constructor$27321$1VmeqK)
              (enum-set-complement . g$enum-set-complement$27329$1VmeqK)
              (enum-set->list . g$enum-set->list$27322$1VmeqK)
              (who-condition? . g$who-condition?$22745$1VmeqK)
              (warning? . g$warning?$22694$1VmeqK)
              (violation? . g$violation?$22718$1VmeqK)
              (undefined-violation?
                .
                g$undefined-violation?$22810$1VmeqK)
              (syntax-violation? . g$syntax-violation?$22800$1VmeqK)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$22802$1VmeqK)
              (syntax-violation-form
                .
                g$syntax-violation-form$22801$1VmeqK)
              (syntax-violation . g$syntax-violation$32930$1VmeqK)
              (serious-condition? . g$serious-condition?$22702$1VmeqK)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$22774$1VmeqK)
              (message-condition? . g$message-condition?$22685$1VmeqK)
              (make-who-condition . g$make-who-condition$22743$1VmeqK)
              (make-warning . g$make-warning$22693$1VmeqK)
              (make-violation . g$make-violation$22717$1VmeqK)
              (make-undefined-violation
                .
                g$make-undefined-violation$22809$1VmeqK)
              (make-syntax-violation
                .
                g$make-syntax-violation$22797$1VmeqK)
              (make-serious-condition
                .
                g$make-serious-condition$22701$1VmeqK)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$22773$1VmeqK)
              (make-message-condition
                .
                g$make-message-condition$22683$1VmeqK)
              (make-lexical-violation
                .
                g$make-lexical-violation$22789$1VmeqK)
              (make-irritants-condition
                .
                g$make-irritants-condition$22733$1VmeqK)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$22781$1VmeqK)
              (make-error . g$make-error$22709$1VmeqK)
              (make-assertion-violation
                .
                g$make-assertion-violation$22725$1VmeqK)
              (lexical-violation? . g$lexical-violation?$22790$1VmeqK)
              (irritants-condition?
                .
                g$irritants-condition?$22735$1VmeqK)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$22782$1VmeqK)
              (error? . g$error?$22710$1VmeqK)
              (condition-who . g$condition-who$22746$1VmeqK)
              (condition-message . g$condition-message$22686$1VmeqK)
              (condition-irritants . g$condition-irritants$22736$1VmeqK)
              (assertion-violation?
                .
                g$assertion-violation?$22726$1VmeqK)
              (utf32->string . g$utf32->string$21662$1VmeqK)
              (utf16->string . g$utf16->string$21661$1VmeqK)
              (utf8->string . g$utf8->string$21659$1VmeqK)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$21663$1VmeqK)
              (u8-list->bytevector . g$u8-list->bytevector$21655$1VmeqK)
              (string->utf8 . g$string->utf8$21656$1VmeqK)
              (string->utf32 . g$string->utf32$21658$1VmeqK)
              (string->utf16 . g$string->utf16$21657$1VmeqK)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$21664$1VmeqK)
              (native-endianness . g$native-endianness$21633$1VmeqK)
              (bytevector? . g$bytevector?$21180$1VmeqK)
              (bytevector=? . g$bytevector=?$21646$1VmeqK)
              (bytevector-u8-set! . g$bytevector-u8-set!$21651$1VmeqK)
              (bytevector-u8-ref . g$bytevector-u8-ref$21650$1VmeqK)
              (bytevector-u64-set! . g$bytevector-u64-set!$21692$1VmeqK)
              (bytevector-u64-ref . g$bytevector-u64-ref$21688$1VmeqK)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$21694$1VmeqK)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$21690$1VmeqK)
              (bytevector-u32-set! . g$bytevector-u32-set!$21684$1VmeqK)
              (bytevector-u32-ref . g$bytevector-u32-ref$21680$1VmeqK)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$21686$1VmeqK)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$21682$1VmeqK)
              (bytevector-u16-set! . g$bytevector-u16-set!$21676$1VmeqK)
              (bytevector-u16-ref . g$bytevector-u16-ref$21672$1VmeqK)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$21678$1VmeqK)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$21674$1VmeqK)
              (bytevector-s8-set! . g$bytevector-s8-set!$21653$1VmeqK)
              (bytevector-s8-ref . g$bytevector-s8-ref$21652$1VmeqK)
              (bytevector-s64-set! . g$bytevector-s64-set!$21693$1VmeqK)
              (bytevector-s64-ref . g$bytevector-s64-ref$21689$1VmeqK)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$21695$1VmeqK)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$21691$1VmeqK)
              (bytevector-s32-set! . g$bytevector-s32-set!$21685$1VmeqK)
              (bytevector-s32-ref . g$bytevector-s32-ref$21681$1VmeqK)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$21687$1VmeqK)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$21683$1VmeqK)
              (bytevector-s16-set! . g$bytevector-s16-set!$21677$1VmeqK)
              (bytevector-s16-ref . g$bytevector-s16-ref$21673$1VmeqK)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$21679$1VmeqK)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$21675$1VmeqK)
              (bytevector-length . g$bytevector-length$21645$1VmeqK)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$21670$1VmeqK)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$21668$1VmeqK)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$21698$1VmeqK)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$21696$1VmeqK)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$21671$1VmeqK)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$21669$1VmeqK)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$21699$1VmeqK)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$21697$1VmeqK)
              (bytevector-fill! . g$bytevector-fill!$21647$1VmeqK)
              (bytevector-copy! . g$bytevector-copy!$21648$1VmeqK)
              (bytevector-copy . g$bytevector-copy$21649$1VmeqK)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$21665$1VmeqK)
              (bytevector->u8-list . g$bytevector->u8-list$21654$1VmeqK)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$21666$1VmeqK)
              (no-nans-violation? . g$no-nans-violation?$22930$1VmeqK)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$22922$1VmeqK)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$22929$1VmeqK)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$22921$1VmeqK)
              (real->flonum . g$real->flonum$22186$1VmeqK)
              (flzero? . g$flzero?$27074$1VmeqK)
              (fltruncate . g$fltruncate$27069$1VmeqK)
              (fltan . g$fltan$27058$1VmeqK)
              (flsqrt . g$flsqrt$27063$1VmeqK)
              (flsin . g$flsin$27056$1VmeqK)
              (flround . g$flround$27070$1VmeqK)
              (flpositive? . g$flpositive?$27072$1VmeqK)
              (flonum? . g$flonum?$21185$1VmeqK)
              (flodd? . g$flodd?$27076$1VmeqK)
              (flnumerator . g$flnumerator$27034$1VmeqK)
              (flnegative? . g$flnegative?$27073$1VmeqK)
              (flnan? . g$flnan?$27055$1VmeqK)
              (flmod0 . g$flmod0$27046$1VmeqK)
              (flmod . g$flmod$27045$1VmeqK)
              (flmin . g$flmin$27078$1VmeqK)
              (flmax . g$flmax$27077$1VmeqK)
              (fllog . g$fllog$27062$1VmeqK)
              (flinteger? . g$flinteger?$27051$1VmeqK)
              (flinfinite? . g$flinfinite?$27054$1VmeqK)
              (flfloor . g$flfloor$27068$1VmeqK)
              (flfinite? . g$flfinite?$27052$1VmeqK)
              (flexpt . g$flexpt$27065$1VmeqK)
              (flexp . g$flexp$27064$1VmeqK)
              (fleven? . g$fleven?$27075$1VmeqK)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$27050$1VmeqK)
              (fldiv0 . g$fldiv0$27043$1VmeqK)
              (fldiv-and-mod . g$fldiv-and-mod$27047$1VmeqK)
              (fldiv . g$fldiv$27049$1VmeqK)
              (fldenominator . g$fldenominator$27033$1VmeqK)
              (flcos . g$flcos$27057$1VmeqK)
              (flceiling . g$flceiling$27066$1VmeqK)
              (flatan . g$flatan$27061$1VmeqK)
              (flasin . g$flasin$27059$1VmeqK)
              (flacos . g$flacos$27060$1VmeqK)
              (flabs . g$flabs$27071$1VmeqK)
              (fl>? . g$fl>?$27040$1VmeqK)
              (fl>=? . g$fl>=?$27041$1VmeqK)
              (fl=? . g$fl=?$27037$1VmeqK)
              (fl<? . g$fl<?$27038$1VmeqK)
              (fl<=? . g$fl<=?$27039$1VmeqK)
              (fl/ . g$fl/$27036$1VmeqK)
              (fl- . g$fl-$27035$1VmeqK)
              (fl+ . g$fl+$27031$1VmeqK)
              (fl* . g$fl*$27032$1VmeqK)
              (fixnum->flonum . g$fixnum->flonum$22187$1VmeqK)
              (fxzero? . g$fxzero?$25516$1VmeqK)
              (fxxor . g$fxxor$25500$1VmeqK)
              (fxrotate-bit-field . g$fxrotate-bit-field$25536$1VmeqK)
              (fxreverse-bit-field . g$fxreverse-bit-field$25537$1VmeqK)
              (fxpositive? . g$fxpositive?$25512$1VmeqK)
              (fxodd? . g$fxodd?$25520$1VmeqK)
              (fxnot . g$fxnot$25492$1VmeqK)
              (fxnegative? . g$fxnegative?$25514$1VmeqK)
              (fxmod0 . g$fxmod0$25505$1VmeqK)
              (fxmod . g$fxmod$25504$1VmeqK)
              (fxmin . g$fxmin$25522$1VmeqK)
              (fxmax . g$fxmax$25521$1VmeqK)
              (fxlength . g$fxlength$25489$1VmeqK)
              (fxior . g$fxior$25499$1VmeqK)
              (fxif . g$fxif$25527$1VmeqK)
              (fxfirst-bit-set . g$fxfirst-bit-set$25490$1VmeqK)
              (fxeven? . g$fxeven?$25518$1VmeqK)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$25510$1VmeqK)
              (fxdiv0 . g$fxdiv0$25508$1VmeqK)
              (fxdiv-and-mod . g$fxdiv-and-mod$25506$1VmeqK)
              (fxdiv . g$fxdiv$25502$1VmeqK)
              (fxcopy-bit-field . g$fxcopy-bit-field$25533$1VmeqK)
              (fxcopy-bit . g$fxcopy-bit$25529$1VmeqK)
              (fxbit-set? . g$fxbit-set?$25491$1VmeqK)
              (fxbit-field . g$fxbit-field$25531$1VmeqK)
              (fxbit-count . g$fxbit-count$25487$1VmeqK)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$25535$1VmeqK)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$25534$1VmeqK)
              (fxarithmetic-shift . g$fxarithmetic-shift$25485$1VmeqK)
              (fxand . g$fxand$25498$1VmeqK)
              (fx>? . g$fx>?$25496$1VmeqK)
              (fx>=? . g$fx>=?$25497$1VmeqK)
              (fx=? . g$fx=?$25493$1VmeqK)
              (fx<? . g$fx<?$25494$1VmeqK)
              (fx<=? . g$fx<=?$25495$1VmeqK)
              (fx-/carry . g$fx-/carry$25524$1VmeqK)
              (fx- . g$fx-$25482$1VmeqK)
              (fx+/carry . g$fx+/carry$25525$1VmeqK)
              (fx+ . g$fx+$25480$1VmeqK)
              (fx*/carry . g$fx*/carry$25523$1VmeqK)
              (fx* . g$fx*$25481$1VmeqK)
              (greatest-fixnum . g$greatest-fixnum$25478$1VmeqK)
              (least-fixnum . g$least-fixnum$25479$1VmeqK)
              (fixnum-width . g$fixnum-width$21186$1VmeqK)
              (fixnum? . g$fixnum?$21184$1VmeqK)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$23248$1VmeqK)
              (bitwise-length . g$bitwise-length$23239$1VmeqK)
              (bitwise-if . g$bitwise-if$23242$1VmeqK)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$23240$1VmeqK)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$23245$1VmeqK)
              (bitwise-copy-bit . g$bitwise-copy-bit$23243$1VmeqK)
              (bitwise-bit-set? . g$bitwise-bit-set?$23241$1VmeqK)
              (bitwise-bit-field . g$bitwise-bit-field$23244$1VmeqK)
              (bitwise-bit-count . g$bitwise-bit-count$23238$1VmeqK)
              (bitwise-xor . g$bitwise-xor$23237$1VmeqK)
              (bitwise-ior . g$bitwise-ior$23236$1VmeqK)
              (bitwise-and . g$bitwise-and$23235$1VmeqK)
              (bitwise-not . g$bitwise-not$23234$1VmeqK)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$23247$1VmeqK)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$23246$1VmeqK)
              (zero? . g$zero?$22201$1VmeqK)
              (vector? . g$vector?$21179$1VmeqK)
              (vector-set! . g$vector-set!$21195$1VmeqK)
              (vector-ref . g$vector-ref$21194$1VmeqK)
              (vector-map . g$vector-map$21248$1VmeqK)
              (vector-for-each . g$vector-for-each$21249$1VmeqK)
              (vector-fill! . g$vector-fill!$21196$1VmeqK)
              (truncate . g$truncate$22239$1VmeqK)
              (tan . g$tan$22231$1VmeqK)
              (symbol? . g$symbol?$21181$1VmeqK)
              (symbol=? . g$symbol=?$21238$1VmeqK)
              (string>? . g$string>?$21235$1VmeqK)
              (string>=? . g$string>=?$21237$1VmeqK)
              (string=? . g$string=?$21233$1VmeqK)
              (string<? . g$string<?$21234$1VmeqK)
              (string<=? . g$string<=?$21236$1VmeqK)
              (string-for-each . g$string-for-each$21250$1VmeqK)
              (sqrt . g$sqrt$22241$1VmeqK)
              (sin . g$sin$22225$1VmeqK)
              (round . g$round$22240$1VmeqK)
              (reverse . g$reverse$21198$1VmeqK)
              (real? . g$real?$22195$1VmeqK)
              (real-valued? . g$real-valued?$22198$1VmeqK)
              (real-part . g$real-part$22222$1VmeqK)
              (rationalize . g$rationalize$21245$1VmeqK)
              (rational? . g$rational?$22196$1VmeqK)
              (rational-valued? . g$rational-valued?$22199$1VmeqK)
              (procedure? . g$procedure?$21183$1VmeqK)
              (positive? . g$positive?$22202$1VmeqK)
              (odd? . g$odd?$21228$1VmeqK)
              (numerator . g$numerator$22220$1VmeqK)
              (number? . g$number?$22188$1VmeqK)
              (number->string . g$number->string$22209$1VmeqK)
              (negative? . g$negative?$22203$1VmeqK)
              (nan? . g$nan?$22189$1VmeqK)
              (min . g$min$21230$1VmeqK)
              (max . g$max$21229$1VmeqK)
              (map . g$map$20349$1VmeqK)
              (make-rectangular . g$make-rectangular$22215$1VmeqK)
              (make-polar . g$make-polar$22216$1VmeqK)
              (magnitude . g$magnitude$22218$1VmeqK)
              (log . g$log$22234$1VmeqK)
              (list-tail . g$list-tail$20329$1VmeqK)
              (list-ref . g$list-ref$20330$1VmeqK)
              (list->vector . g$list->vector$21192$1VmeqK)
              (list->string . g$list->string$21193$1VmeqK)
              (lcm . g$lcm$21232$1VmeqK)
              (integer? . g$integer?$22197$1VmeqK)
              (integer-valued? . g$integer-valued?$22200$1VmeqK)
              (infinite? . g$infinite?$22191$1VmeqK)
              (inexact? . g$inexact?$22193$1VmeqK)
              (inexact . g$inexact$22204$1VmeqK)
              (imag-part . g$imag-part$22223$1VmeqK)
              (gcd . g$gcd$21231$1VmeqK)
              (for-each . g$for-each$20350$1VmeqK)
              (floor . g$floor$22237$1VmeqK)
              (finite? . g$finite?$22190$1VmeqK)
              (expt . g$expt$22243$1VmeqK)
              (exp . g$exp$22224$1VmeqK)
              (exact? . g$exact?$22192$1VmeqK)
              (exact-integer-sqrt . g$exact-integer-sqrt$22242$1VmeqK)
              (exact . g$exact$22205$1VmeqK)
              (even? . g$even?$21227$1VmeqK)
              (div0-and-mod0 . g$div0-and-mod0$21191$1VmeqK)
              (mod0 . g$mod0$21189$1VmeqK)
              (div0 . g$div0$21187$1VmeqK)
              (div-and-mod . g$div-and-mod$21190$1VmeqK)
              (mod . g$mod$21188$1VmeqK)
              (div . g$div$22235$1VmeqK)
              (denominator . g$denominator$22221$1VmeqK)
              (cos . g$cos$22228$1VmeqK)
              (complex? . g$complex?$22194$1VmeqK)
              (char? . g$char?$21178$1VmeqK)
              (char>? . g$char>?$21242$1VmeqK)
              (char>=? . g$char>=?$21244$1VmeqK)
              (char=? . g$char=?$21240$1VmeqK)
              (char<? . g$char<?$21241$1VmeqK)
              (char<=? . g$char<=?$21243$1VmeqK)
              (ceiling . g$ceiling$22238$1VmeqK)
              (cddddr . g$cddddr$21226$1VmeqK)
              (cdddar . g$cdddar$21225$1VmeqK)
              (cddadr . g$cddadr$21224$1VmeqK)
              (cddaar . g$cddaar$21223$1VmeqK)
              (cdaddr . g$cdaddr$21222$1VmeqK)
              (cdadar . g$cdadar$21221$1VmeqK)
              (cdaadr . g$cdaadr$21220$1VmeqK)
              (cdaaar . g$cdaaar$21219$1VmeqK)
              (cadddr . g$cadddr$21218$1VmeqK)
              (caddar . g$caddar$21217$1VmeqK)
              (cadadr . g$cadadr$21216$1VmeqK)
              (cadaar . g$cadaar$21215$1VmeqK)
              (caaddr . g$caaddr$21214$1VmeqK)
              (caadar . g$caadar$21213$1VmeqK)
              (caaadr . g$caaadr$21212$1VmeqK)
              (caaaar . g$caaaar$21211$1VmeqK)
              (cdddr . g$cdddr$21210$1VmeqK)
              (cddar . g$cddar$21209$1VmeqK)
              (cdadr . g$cdadr$21208$1VmeqK)
              (cdaar . g$cdaar$21207$1VmeqK)
              (caddr . g$caddr$21206$1VmeqK)
              (cadar . g$cadar$21205$1VmeqK)
              (caadr . g$caadr$21204$1VmeqK)
              (caaar . g$caaar$21203$1VmeqK)
              (cddr . g$cddr$21202$1VmeqK)
              (cdar . g$cdar$21201$1VmeqK)
              (cadr . g$cadr$21200$1VmeqK)
              (caar . g$caar$21199$1VmeqK)
              (boolean? . g$boolean?$21182$1VmeqK)
              (boolean=? . g$boolean=?$21239$1VmeqK)
              (atan . g$atan$22233$1VmeqK)
              (asin . g$asin$22226$1VmeqK)
              (angle . g$angle$22217$1VmeqK)
              (acos . g$acos$22229$1VmeqK)
              (abs . g$abs$22236$1VmeqK)
              (>= . g$>=$22214$1VmeqK)
              (> . g$>$22213$1VmeqK)
              (= . g$=$22210$1VmeqK)
              (<= . g$<=$22212$1VmeqK)
              (< . g$<$22211$1VmeqK)
              (enum-set? . g$enum?$27299$1VmeqK)
              (make-promise . g$make-promise$22966$1VmeqK)
              (load/unload . g$load/unload$33013$1VmeqK)
              (load/args . g$load/args$33012$1VmeqK)
              (printf . g$printf$27354$1VmeqK)
              (fprintf . g$fprintf$27355$1VmeqK)
              (format . g$format$27356$1VmeqK)
              (trace-printer . g$trace-printer$33007$1VmeqK)
              (make-traced-macro . g$make-traced-macro$27360$1VmeqK)
              (assertion-error . g$assertion-error$32926$1VmeqK)
              (make-parameter . g$make-parameter$27565$1VmeqK)
              (environment-bindings
                .
                g$environment-bindings$32904$1VmeqK)
              (environment-symbols . g$environment-symbols$32907$1VmeqK)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$32903$1VmeqK)
              (library-path . g$library-path$28412$1VmeqK)
              (make-compile-time-value
                .
                g$make-compile-time-value$32753$1VmeqK)
              (expand->core . g$expand->core$32913$1VmeqK)
              (expand . g$expand$32911$1VmeqK)
              (emacs-mode? . g$emacs-mode?$33010$1VmeqK)
              (syntax-transpose . g$syntax-transpose$32860$1VmeqK)
              (convert->cps . g$convert->cps$28093$1VmeqK)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$22765$1VmeqK)
              (stacktrace-enable? . g$stacktrace-enable?$33008$1VmeqK)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$22763$1VmeqK)
              (where-condition? . g$where-condition?$22755$1VmeqK)
              (make-where-condition
                .
                g$make-where-condition$22753$1VmeqK)
              (installed-libraries . g$installed-libraries$28433$1VmeqK)
              (uninstall-library . g$uninstall-library$28424$1VmeqK)
              (pretty-gensyms . g$pretty-gensyms$27773$1VmeqK)
              (pretty-width . g$pretty-width$27770$1VmeqK)
              (pretty-print . g$pretty-print$27775$1VmeqK)))))))
    (g$install-library$28428$1VmeqK
      'g$15827$1VmeqK
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$8275$1VmeqK)
        (cosh . g$8273$1VmeqK)
        (sinh . g$8270$1VmeqK)
        (make-guid . g$15820$1VmeqK)
        (unspecified? . g$15819$1VmeqK)
        (make-list . g$7227$1VmeqK)
        (last-pair . g$7226$1VmeqK)
        (load-r5rs . g$15818$1VmeqK)
        (license . g$15817$1VmeqK)
        (stacktrace . g$15816$1VmeqK)
        (ironscheme-test . g$15385$1VmeqK)
        (ironscheme-build . g$15386$1VmeqK)
        (remove-location . g$15800$1VmeqK)
        (set-symbol-value! . g$15799$1VmeqK)
        (symbol-value . g$15798$1VmeqK)
        (symbol-bound? . g$15797$1VmeqK)
        (ungensym . g$15796$1VmeqK)
        (gensym . g$15795$1VmeqK)
        (void . g$15794$1VmeqK)
        (compile-system-libraries . g$15390$1VmeqK)
        (compile->closure . g$15392$1VmeqK)
        (compile . g$15391$1VmeqK)
        (load . g$15384$1VmeqK)
        (new-interaction-environment . g$12366$1VmeqK)
        (interaction-environment . g$12367$1VmeqK)
        (string-upcase . g$15789$1VmeqK)
        (string-titlecase . g$15788$1VmeqK)
        (string-normalize-nfkd . g$9057$1VmeqK)
        (string-normalize-nfkc . g$9056$1VmeqK)
        (string-normalize-nfd . g$9055$1VmeqK)
        (string-normalize-nfc . g$9054$1VmeqK)
        (string-foldcase . g$15787$1VmeqK)
        (string-downcase . g$15786$1VmeqK)
        (string-ci>? . g$9041$1VmeqK)
        (string-ci>=? . g$9043$1VmeqK)
        (string-ci=? . g$9039$1VmeqK)
        (string-ci<? . g$9040$1VmeqK)
        (string-ci<=? . g$9042$1VmeqK)
        (char-whitespace? . g$15785$1VmeqK)
        (char-upper-case? . g$15784$1VmeqK)
        (char-title-case? . g$15783$1VmeqK)
        (char-numeric? . g$15782$1VmeqK)
        (char-lower-case? . g$15781$1VmeqK)
        (char-general-category . g$15780$1VmeqK)
        (char-upcase . g$15779$1VmeqK)
        (char-titlecase . g$15778$1VmeqK)
        (char-foldcase . g$15777$1VmeqK)
        (char-downcase . g$15776$1VmeqK)
        (char-ci>? . g$9051$1VmeqK)
        (char-ci>=? . g$9053$1VmeqK)
        (char-ci=? . g$9049$1VmeqK)
        (char-ci<? . g$9050$1VmeqK)
        (char-ci<=? . g$9052$1VmeqK)
        (char-alphabetic? . g$15775$1VmeqK)
        (make-variable-transformer . g$12041$1VmeqK)
        (identifier? . g$12361$1VmeqK)
        (generate-temporaries . g$12350$1VmeqK)
        (free-identifier=? . g$12351$1VmeqK)
        (syntax->datum . g$12363$1VmeqK)
        (datum->syntax . g$12362$1VmeqK)
        (bound-identifier=? . g$12352$1VmeqK)
        (record-type-descriptor? . g$15774$1VmeqK)
        (record-predicate . g$15773$1VmeqK)
        (record-mutator . g$15772$1VmeqK)
        (record-constructor . g$15771$1VmeqK)
        (record-accessor . g$15770$1VmeqK)
        (make-record-type-descriptor . g$15769$1VmeqK)
        (make-record-constructor-descriptor . g$15768$1VmeqK)
        (record? . g$15767$1VmeqK)
        (record-type-uid . g$15766$1VmeqK)
        (record-type-sealed? . g$15765$1VmeqK)
        (record-type-parent . g$15764$1VmeqK)
        (record-type-opaque? . g$15763$1VmeqK)
        (record-type-name . g$15762$1VmeqK)
        (record-type-generative? . g$15761$1VmeqK)
        (record-type-field-names . g$15760$1VmeqK)
        (record-rtd . g$15759$1VmeqK)
        (record-field-mutable? . g$15758$1VmeqK)
        (delete-file . g$7895$1VmeqK)
        (file-exists? . g$7894$1VmeqK)
        (vector-sort! . g$15757$1VmeqK)
        (vector-sort . g$15756$1VmeqK)
        (list-sort . g$9010$1VmeqK)
        (symbol-hash . g$7865$1VmeqK)
        (string-ci-hash . g$7864$1VmeqK)
        (string-hash . g$7863$1VmeqK)
        (equal-hash . g$15755$1VmeqK)
        (hashtable-equivalence-function . g$15754$1VmeqK)
        (make-hashtable . g$15753$1VmeqK)
        (hashtable-hash-function . g$15752$1VmeqK)
        (make-eqv-hashtable . g$7855$1VmeqK)
        (make-eq-hashtable . g$7854$1VmeqK)
        (hashtable? . g$7853$1VmeqK)
        (hashtable-update! . g$7861$1VmeqK)
        (hashtable-size . g$7856$1VmeqK)
        (hashtable-set! . g$7858$1VmeqK)
        (hashtable-ref . g$7857$1VmeqK)
        (hashtable-mutable? . g$15751$1VmeqK)
        (hashtable-keys . g$15750$1VmeqK)
        (hashtable-entries . g$15749$1VmeqK)
        (hashtable-delete! . g$7859$1VmeqK)
        (hashtable-copy . g$15748$1VmeqK)
        (hashtable-contains? . g$7860$1VmeqK)
        (hashtable-clear! . g$7862$1VmeqK)
        (call-with-output-file . g$10849$1VmeqK)
        (call-with-input-file . g$10848$1VmeqK)
        (write-char . g$10840$1VmeqK)
        (write . g$15747$1VmeqK)
        (with-output-to-file . g$10847$1VmeqK)
        (with-input-from-file . g$10846$1VmeqK)
        (read-char . g$10839$1VmeqK)
        (read . g$15746$1VmeqK)
        (peek-char . g$10838$1VmeqK)
        (open-output-file . g$15745$1VmeqK)
        (open-input-file . g$15744$1VmeqK)
        (newline . g$10850$1VmeqK)
        (display . g$15743$1VmeqK)
        (close-output-port . g$15742$1VmeqK)
        (close-input-port . g$15741$1VmeqK)
        (eof-object? . g$15740$1VmeqK)
        (eof-object . g$15739$1VmeqK)
        (current-error-port . g$15738$1VmeqK)
        (current-output-port . g$15737$1VmeqK)
        (current-input-port . g$15736$1VmeqK)
        (output-port? . g$15735$1VmeqK)
        (input-port? . g$15734$1VmeqK)
        (utf-8-codec . g$15733$1VmeqK)
        (utf-16-codec . g$15732$1VmeqK)
        (transcoder-error-handling-mode . g$15731$1VmeqK)
        (transcoder-eol-style . g$15730$1VmeqK)
        (transcoder-codec . g$15729$1VmeqK)
        (transcoded-port . g$15728$1VmeqK)
        (textual-port? . g$15727$1VmeqK)
        (string->bytevector . g$15726$1VmeqK)
        (standard-output-port . g$10814$1VmeqK)
        (standard-input-port . g$10813$1VmeqK)
        (standard-error-port . g$10812$1VmeqK)
        (set-port-position! . g$15725$1VmeqK)
        (put-u8 . g$15724$1VmeqK)
        (put-string . g$15723$1VmeqK)
        (put-datum . g$10817$1VmeqK)
        (put-char . g$15722$1VmeqK)
        (put-bytevector . g$15721$1VmeqK)
        (port? . g$10822$1VmeqK)
        (port-transcoder . g$15720$1VmeqK)
        (port-position . g$15719$1VmeqK)
        (port-has-set-port-position!? . g$15718$1VmeqK)
        (port-has-port-position? . g$15717$1VmeqK)
        (port-eof? . g$15716$1VmeqK)
        (output-port-buffer-mode . g$15715$1VmeqK)
        (open-string-output-port . g$10821$1VmeqK)
        (open-string-input-port . g$15714$1VmeqK)
        (open-file-output-port . g$15713$1VmeqK)
        (open-file-input/output-port . g$15712$1VmeqK)
        (open-file-input-port . g$15711$1VmeqK)
        (open-bytevector-output-port . g$15710$1VmeqK)
        (open-bytevector-input-port . g$15709$1VmeqK)
        (native-transcoder . g$15708$1VmeqK)
        (native-eol-style . g$10815$1VmeqK)
        (make-transcoder . g$15707$1VmeqK)
        (latin-1-codec . g$15706$1VmeqK)
        (make-i/o-write-error . g$8820$1VmeqK)
        (make-i/o-read-error . g$8807$1VmeqK)
        (make-i/o-port-error . g$8915$1VmeqK)
        (make-i/o-invalid-position-error . g$8833$1VmeqK)
        (make-i/o-filename-error . g$8848$1VmeqK)
        (make-i/o-file-protection-error . g$8863$1VmeqK)
        (make-i/o-file-is-read-only-error . g$8876$1VmeqK)
        (make-i/o-file-does-not-exist-error . g$8902$1VmeqK)
        (make-i/o-file-already-exists-error . g$8889$1VmeqK)
        (make-i/o-error . g$8794$1VmeqK)
        (make-i/o-encoding-error . g$8943$1VmeqK)
        (make-i/o-decoding-error . g$8930$1VmeqK)
        (make-custom-textual-output-port . g$15705$1VmeqK)
        (make-custom-textual-input/output-port . g$15704$1VmeqK)
        (make-custom-textual-input-port . g$15703$1VmeqK)
        (make-custom-binary-output-port . g$15702$1VmeqK)
        (make-custom-binary-input/output-port . g$15701$1VmeqK)
        (make-custom-binary-input-port . g$15700$1VmeqK)
        (make-bytevector . g$7915$1VmeqK)
        (lookahead-u8 . g$15699$1VmeqK)
        (lookahead-char . g$15698$1VmeqK)
        (i/o-write-error? . g$8821$1VmeqK)
        (i/o-read-error? . g$8808$1VmeqK)
        (i/o-port-error? . g$8917$1VmeqK)
        (i/o-invalid-position-error? . g$8835$1VmeqK)
        (i/o-error-position . g$8836$1VmeqK)
        (i/o-filename-error? . g$8850$1VmeqK)
        (i/o-file-protection-error? . g$8864$1VmeqK)
        (i/o-file-is-read-only-error? . g$8877$1VmeqK)
        (i/o-file-does-not-exist-error? . g$8903$1VmeqK)
        (i/o-file-already-exists-error? . g$8890$1VmeqK)
        (i/o-error? . g$8795$1VmeqK)
        (i/o-error-port . g$8918$1VmeqK)
        (i/o-error-filename . g$8851$1VmeqK)
        (i/o-encoding-error? . g$8945$1VmeqK)
        (i/o-encoding-error-char . g$8946$1VmeqK)
        (i/o-decoding-error? . g$8931$1VmeqK)
        (get-u8 . g$15697$1VmeqK)
        (get-string-n! . g$15696$1VmeqK)
        (get-string-n . g$15695$1VmeqK)
        (get-string-all . g$15694$1VmeqK)
        (get-line . g$15693$1VmeqK)
        (get-datum . g$10818$1VmeqK)
        (get-char . g$15692$1VmeqK)
        (get-bytevector-some . g$15691$1VmeqK)
        (get-bytevector-n! . g$15690$1VmeqK)
        (get-bytevector-n . g$15689$1VmeqK)
        (get-bytevector-all . g$15688$1VmeqK)
        (flush-output-port . g$15687$1VmeqK)
        (close-port . g$15686$1VmeqK)
        (call-with-string-output-port . g$10823$1VmeqK)
        (call-with-port . g$10824$1VmeqK)
        (call-with-bytevector-output-port . g$15685$1VmeqK)
        (bytevector->string . g$15684$1VmeqK)
        (buffer-mode? . g$10816$1VmeqK)
        (binary-port? . g$15683$1VmeqK)
        (scheme-report-environment . g$12340$1VmeqK)
        (quotient . g$8989$1VmeqK)
        (null-environment . g$12339$1VmeqK)
        (remainder . g$8990$1VmeqK)
        (modulo . g$8991$1VmeqK)
        (inexact->exact . g$8986$1VmeqK)
        (force . g$8993$1VmeqK)
        (exact->inexact . g$8987$1VmeqK)
        (exit . g$15682$1VmeqK)
        (command-line . g$15379$1VmeqK)
        (string-fill! . g$15681$1VmeqK)
        (string-set! . g$15680$1VmeqK)
        (set-cdr! . g$15679$1VmeqK)
        (set-car! . g$15678$1VmeqK)
        (remove . g$7249$1VmeqK)
        (remv . g$7250$1VmeqK)
        (remp . g$7230$1VmeqK)
        (remq . g$7251$1VmeqK)
        (partition . g$7229$1VmeqK)
        (memv . g$7237$1VmeqK)
        (memq . g$7236$1VmeqK)
        (memp . g$7239$1VmeqK)
        (member . g$7238$1VmeqK)
        (exists . g$7243$1VmeqK)
        (for-all . g$7242$1VmeqK)
        (fold-right . g$7248$1VmeqK)
        (fold-left . g$7247$1VmeqK)
        (find . g$7228$1VmeqK)
        (filter . g$7231$1VmeqK)
        (cons* . g$7246$1VmeqK)
        (assv . g$7233$1VmeqK)
        (assq . g$7232$1VmeqK)
        (assp . g$7235$1VmeqK)
        (assoc . g$7234$1VmeqK)
        (with-exception-handler . g$15677$1VmeqK)
        (raise-continuable . g$15676$1VmeqK)
        (raise . g$15675$1VmeqK)
        (eval . g$12342$1VmeqK)
        (environment . g$12338$1VmeqK)
        (make-enumeration . g$10910$1VmeqK)
        (enum-set=? . g$10917$1VmeqK)
        (enum-set-universe . g$10911$1VmeqK)
        (enum-set-union . g$10918$1VmeqK)
        (enum-set-subset? . g$10916$1VmeqK)
        (enum-set-projection . g$10922$1VmeqK)
        (enum-set-member? . g$10915$1VmeqK)
        (enum-set-intersection . g$10919$1VmeqK)
        (enum-set-indexer . g$10912$1VmeqK)
        (enum-set-difference . g$10920$1VmeqK)
        (enum-set-constructor . g$10913$1VmeqK)
        (enum-set-complement . g$10921$1VmeqK)
        (enum-set->list . g$10914$1VmeqK)
        (who-condition? . g$8682$1VmeqK)
        (warning? . g$8601$1VmeqK)
        (violation? . g$8640$1VmeqK)
        (undefined-violation? . g$8782$1VmeqK)
        (syntax-violation? . g$8767$1VmeqK)
        (syntax-violation-subform . g$8769$1VmeqK)
        (syntax-violation-form . g$8768$1VmeqK)
        (syntax-violation . g$12360$1VmeqK)
        (simple-conditions . g$15674$1VmeqK)
        (serious-condition? . g$8614$1VmeqK)
        (non-continuable-violation? . g$8726$1VmeqK)
        (message-condition? . g$8587$1VmeqK)
        (make-who-condition . g$8680$1VmeqK)
        (make-warning . g$8600$1VmeqK)
        (make-violation . g$8639$1VmeqK)
        (make-undefined-violation . g$8781$1VmeqK)
        (make-syntax-violation . g$8764$1VmeqK)
        (make-serious-condition . g$8613$1VmeqK)
        (make-non-continuable-violation . g$8725$1VmeqK)
        (make-message-condition . g$8585$1VmeqK)
        (make-lexical-violation . g$8751$1VmeqK)
        (make-irritants-condition . g$8665$1VmeqK)
        (make-implementation-restriction-violation . g$8738$1VmeqK)
        (make-error . g$8626$1VmeqK)
        (make-assertion-violation . g$8652$1VmeqK)
        (lexical-violation? . g$8752$1VmeqK)
        (irritants-condition? . g$8667$1VmeqK)
        (implementation-restriction-violation? . g$8739$1VmeqK)
        (error? . g$8627$1VmeqK)
        (condition-who . g$8683$1VmeqK)
        (condition-predicate . g$15673$1VmeqK)
        (condition-message . g$8588$1VmeqK)
        (condition-irritants . g$8668$1VmeqK)
        (condition-accessor . g$15672$1VmeqK)
        (condition . g$15671$1VmeqK)
        (assertion-violation? . g$8653$1VmeqK)
        (condition? . g$15670$1VmeqK)
        (utf32->string . g$7933$1VmeqK)
        (utf16->string . g$7932$1VmeqK)
        (utf8->string . g$7930$1VmeqK)
        (uint-list->bytevector . g$7934$1VmeqK)
        (u8-list->bytevector . g$7926$1VmeqK)
        (string->utf8 . g$7927$1VmeqK)
        (string->utf32 . g$7929$1VmeqK)
        (string->utf16 . g$7928$1VmeqK)
        (sint-list->bytevector . g$7935$1VmeqK)
        (native-endianness . g$7901$1VmeqK)
        (bytevector? . g$7583$1VmeqK)
        (bytevector=? . g$7917$1VmeqK)
        (bytevector-uint-set! . g$15669$1VmeqK)
        (bytevector-uint-ref . g$15668$1VmeqK)
        (bytevector-u8-set! . g$7922$1VmeqK)
        (bytevector-u8-ref . g$7921$1VmeqK)
        (bytevector-u64-set! . g$7963$1VmeqK)
        (bytevector-u64-ref . g$7959$1VmeqK)
        (bytevector-u64-native-set! . g$7965$1VmeqK)
        (bytevector-u64-native-ref . g$7961$1VmeqK)
        (bytevector-u32-set! . g$7955$1VmeqK)
        (bytevector-u32-ref . g$7951$1VmeqK)
        (bytevector-u32-native-set! . g$7957$1VmeqK)
        (bytevector-u32-native-ref . g$7953$1VmeqK)
        (bytevector-u16-set! . g$7947$1VmeqK)
        (bytevector-u16-ref . g$7943$1VmeqK)
        (bytevector-u16-native-set! . g$7949$1VmeqK)
        (bytevector-u16-native-ref . g$7945$1VmeqK)
        (bytevector-sint-set! . g$15667$1VmeqK)
        (bytevector-sint-ref . g$15666$1VmeqK)
        (bytevector-s8-set! . g$7924$1VmeqK)
        (bytevector-s8-ref . g$7923$1VmeqK)
        (bytevector-s64-set! . g$7964$1VmeqK)
        (bytevector-s64-ref . g$7960$1VmeqK)
        (bytevector-s64-native-set! . g$7966$1VmeqK)
        (bytevector-s64-native-ref . g$7962$1VmeqK)
        (bytevector-s32-set! . g$7956$1VmeqK)
        (bytevector-s32-ref . g$7952$1VmeqK)
        (bytevector-s32-native-set! . g$7958$1VmeqK)
        (bytevector-s32-native-ref . g$7954$1VmeqK)
        (bytevector-s16-set! . g$7948$1VmeqK)
        (bytevector-s16-ref . g$7944$1VmeqK)
        (bytevector-s16-native-set! . g$7950$1VmeqK)
        (bytevector-s16-native-ref . g$7946$1VmeqK)
        (bytevector-length . g$7916$1VmeqK)
        (bytevector-ieee-single-set! . g$7941$1VmeqK)
        (bytevector-ieee-single-ref . g$7939$1VmeqK)
        (bytevector-ieee-single-native-set! . g$7969$1VmeqK)
        (bytevector-ieee-single-native-ref . g$7967$1VmeqK)
        (bytevector-ieee-double-set! . g$7942$1VmeqK)
        (bytevector-ieee-double-ref . g$7940$1VmeqK)
        (bytevector-ieee-double-native-set! . g$7970$1VmeqK)
        (bytevector-ieee-double-native-ref . g$7968$1VmeqK)
        (bytevector-fill! . g$7918$1VmeqK)
        (bytevector-copy! . g$7919$1VmeqK)
        (bytevector-copy . g$7920$1VmeqK)
        (bytevector->uint-list . g$7936$1VmeqK)
        (bytevector->u8-list . g$7925$1VmeqK)
        (bytevector->sint-list . g$7937$1VmeqK)
        (no-nans-violation? . g$8972$1VmeqK)
        (no-infinities-violation? . g$8959$1VmeqK)
        (make-no-nans-violation . g$8971$1VmeqK)
        (make-no-infinities-violation . g$8958$1VmeqK)
        (real->flonum . g$8215$1VmeqK)
        (flzero? . g$10254$1VmeqK)
        (fltruncate . g$10249$1VmeqK)
        (fltan . g$10235$1VmeqK)
        (flsqrt . g$10240$1VmeqK)
        (flsin . g$10233$1VmeqK)
        (flround . g$10250$1VmeqK)
        (flpositive? . g$10252$1VmeqK)
        (flonum? . g$7588$1VmeqK)
        (flodd? . g$10256$1VmeqK)
        (flnumerator . g$10199$1VmeqK)
        (flnegative? . g$10253$1VmeqK)
        (flnan? . g$10232$1VmeqK)
        (flmod0 . g$10217$1VmeqK)
        (flmod . g$10216$1VmeqK)
        (flmin . g$10258$1VmeqK)
        (flmax . g$10257$1VmeqK)
        (fllog . g$10239$1VmeqK)
        (flinteger? . g$10225$1VmeqK)
        (flinfinite? . g$10231$1VmeqK)
        (flfloor . g$10248$1VmeqK)
        (flfinite? . g$10226$1VmeqK)
        (flexpt . g$10242$1VmeqK)
        (flexp . g$10241$1VmeqK)
        (fleven? . g$10255$1VmeqK)
        (fldiv0-and-mod0 . g$10224$1VmeqK)
        (fldiv0 . g$10211$1VmeqK)
        (fldiv-and-mod . g$10218$1VmeqK)
        (fldiv . g$10223$1VmeqK)
        (fldenominator . g$10198$1VmeqK)
        (flcos . g$10234$1VmeqK)
        (flceiling . g$10243$1VmeqK)
        (flatan . g$10238$1VmeqK)
        (flasin . g$10236$1VmeqK)
        (flacos . g$10237$1VmeqK)
        (flabs . g$10251$1VmeqK)
        (fl>? . g$10205$1VmeqK)
        (fl>=? . g$10206$1VmeqK)
        (fl=? . g$10202$1VmeqK)
        (fl<? . g$10203$1VmeqK)
        (fl<=? . g$10204$1VmeqK)
        (fl/ . g$10201$1VmeqK)
        (fl- . g$10200$1VmeqK)
        (fl+ . g$10196$1VmeqK)
        (fl* . g$10197$1VmeqK)
        (fixnum->flonum . g$8216$1VmeqK)
        (fxzero? . g$9299$1VmeqK)
        (fxxor . g$9262$1VmeqK)
        (fxrotate-bit-field . g$9337$1VmeqK)
        (fxreverse-bit-field . g$9338$1VmeqK)
        (fxpositive? . g$9289$1VmeqK)
        (fxodd? . g$9309$1VmeqK)
        (fxnot . g$9243$1VmeqK)
        (fxnegative? . g$9294$1VmeqK)
        (fxmod0 . g$9273$1VmeqK)
        (fxmod . g$9272$1VmeqK)
        (fxmin . g$9311$1VmeqK)
        (fxmax . g$9310$1VmeqK)
        (fxlength . g$9240$1VmeqK)
        (fxior . g$9261$1VmeqK)
        (fxif . g$9319$1VmeqK)
        (fxfirst-bit-set . g$9241$1VmeqK)
        (fxeven? . g$9304$1VmeqK)
        (fxdiv0-and-mod0 . g$9284$1VmeqK)
        (fxdiv0 . g$9279$1VmeqK)
        (fxdiv-and-mod . g$9274$1VmeqK)
        (fxdiv . g$9267$1VmeqK)
        (fxcopy-bit-field . g$9334$1VmeqK)
        (fxcopy-bit . g$9324$1VmeqK)
        (fxbit-set? . g$9242$1VmeqK)
        (fxbit-field . g$9329$1VmeqK)
        (fxbit-count . g$9235$1VmeqK)
        (fxarithmetic-shift-right . g$9336$1VmeqK)
        (fxarithmetic-shift-left . g$9335$1VmeqK)
        (fxarithmetic-shift . g$9230$1VmeqK)
        (fxand . g$9260$1VmeqK)
        (fx>? . g$9252$1VmeqK)
        (fx>=? . g$9253$1VmeqK)
        (fx=? . g$9249$1VmeqK)
        (fx<? . g$9250$1VmeqK)
        (fx<=? . g$9251$1VmeqK)
        (fx-/carry . g$9313$1VmeqK)
        (fx- . g$9224$1VmeqK)
        (fx+/carry . g$9314$1VmeqK)
        (fx+ . g$9222$1VmeqK)
        (fx*/carry . g$9312$1VmeqK)
        (fx* . g$9223$1VmeqK)
        (greatest-fixnum . g$9193$1VmeqK)
        (least-fixnum . g$9194$1VmeqK)
        (fixnum-width . g$7589$1VmeqK)
        (fixnum? . g$7587$1VmeqK)
        (bitwise-rotate-bit-field . g$9131$1VmeqK)
        (bitwise-reverse-bit-field . g$15665$1VmeqK)
        (bitwise-length . g$9122$1VmeqK)
        (bitwise-if . g$9125$1VmeqK)
        (bitwise-first-bit-set . g$9123$1VmeqK)
        (bitwise-copy-bit-field . g$9128$1VmeqK)
        (bitwise-copy-bit . g$9126$1VmeqK)
        (bitwise-bit-set? . g$9124$1VmeqK)
        (bitwise-bit-field . g$9127$1VmeqK)
        (bitwise-bit-count . g$9121$1VmeqK)
        (bitwise-xor . g$9120$1VmeqK)
        (bitwise-ior . g$9119$1VmeqK)
        (bitwise-and . g$9118$1VmeqK)
        (bitwise-not . g$9117$1VmeqK)
        (bitwise-arithmetic-shift-right . g$9130$1VmeqK)
        (bitwise-arithmetic-shift-left . g$9129$1VmeqK)
        (bitwise-arithmetic-shift . g$15664$1VmeqK)
        (zero? . g$8230$1VmeqK)
        (vector? . g$7582$1VmeqK)
        (vector-set! . g$7598$1VmeqK)
        (vector-ref . g$7597$1VmeqK)
        (vector-map . g$7661$1VmeqK)
        (vector-length . g$15663$1VmeqK)
        (vector-for-each . g$7662$1VmeqK)
        (vector-fill! . g$7599$1VmeqK)
        (vector->list . g$15662$1VmeqK)
        (vector . g$15661$1VmeqK)
        (values . g$15660$1VmeqK)
        (truncate . g$8282$1VmeqK)
        (tan . g$8274$1VmeqK)
        (symbol? . g$7584$1VmeqK)
        (symbol=? . g$7646$1VmeqK)
        (symbol->string . g$15659$1VmeqK)
        (substring . g$15658$1VmeqK)
        (string? . g$15657$1VmeqK)
        (string>? . g$7643$1VmeqK)
        (string>=? . g$7645$1VmeqK)
        (string=? . g$7641$1VmeqK)
        (string<? . g$7642$1VmeqK)
        (string<=? . g$7644$1VmeqK)
        (string-ref . g$15656$1VmeqK)
        (string-length . g$15655$1VmeqK)
        (string-for-each . g$7663$1VmeqK)
        (string-copy . g$15654$1VmeqK)
        (string-append . g$15653$1VmeqK)
        (string->symbol . g$15652$1VmeqK)
        (string->number . g$15651$1VmeqK)
        (string->list . g$15650$1VmeqK)
        (string . g$15649$1VmeqK)
        (sqrt . g$8284$1VmeqK)
        (sin . g$8268$1VmeqK)
        (round . g$8283$1VmeqK)
        (reverse . g$7601$1VmeqK)
        (real? . g$8224$1VmeqK)
        (real-valued? . g$8227$1VmeqK)
        (real-part . g$8261$1VmeqK)
        (rationalize . g$7658$1VmeqK)
        (rational? . g$8225$1VmeqK)
        (rational-valued? . g$8228$1VmeqK)
        (procedure? . g$7586$1VmeqK)
        (positive? . g$8231$1VmeqK)
        (pair? . g$15648$1VmeqK)
        (odd? . g$7631$1VmeqK)
        (numerator . g$8259$1VmeqK)
        (number? . g$8217$1VmeqK)
        (number->string . g$8238$1VmeqK)
        (null? . g$15647$1VmeqK)
        (not . g$15646$1VmeqK)
        (negative? . g$8232$1VmeqK)
        (nan? . g$8218$1VmeqK)
        (min . g$7633$1VmeqK)
        (max . g$7632$1VmeqK)
        (map . g$7244$1VmeqK)
        (make-vector . g$15645$1VmeqK)
        (make-string . g$15644$1VmeqK)
        (make-rectangular . g$8254$1VmeqK)
        (make-polar . g$8255$1VmeqK)
        (magnitude . g$8257$1VmeqK)
        (log . g$8277$1VmeqK)
        (list? . g$15643$1VmeqK)
        (list-tail . g$7224$1VmeqK)
        (list-ref . g$7225$1VmeqK)
        (list->vector . g$7595$1VmeqK)
        (list->string . g$7596$1VmeqK)
        (list . g$15642$1VmeqK)
        (length . g$15641$1VmeqK)
        (lcm . g$7635$1VmeqK)
        (integer? . g$8226$1VmeqK)
        (integer-valued? . g$8229$1VmeqK)
        (integer->char . g$15640$1VmeqK)
        (infinite? . g$8220$1VmeqK)
        (inexact? . g$8222$1VmeqK)
        (inexact . g$8233$1VmeqK)
        (imag-part . g$8262$1VmeqK)
        (gcd . g$7634$1VmeqK)
        (for-each . g$7245$1VmeqK)
        (floor . g$8280$1VmeqK)
        (finite? . g$8219$1VmeqK)
        (expt . g$8286$1VmeqK)
        (exp . g$8267$1VmeqK)
        (exact? . g$8221$1VmeqK)
        (exact-integer-sqrt . g$8285$1VmeqK)
        (exact . g$8234$1VmeqK)
        (even? . g$7630$1VmeqK)
        (error . g$15639$1VmeqK)
        (eqv? . g$15638$1VmeqK)
        (equal? . g$15637$1VmeqK)
        (eq? . g$15636$1VmeqK)
        (dynamic-wind . g$15635$1VmeqK)
        (div0-and-mod0 . g$7594$1VmeqK)
        (mod0 . g$7592$1VmeqK)
        (div0 . g$7590$1VmeqK)
        (div-and-mod . g$7593$1VmeqK)
        (mod . g$7591$1VmeqK)
        (div . g$8278$1VmeqK)
        (denominator . g$8260$1VmeqK)
        (cos . g$8271$1VmeqK)
        (cons . g$15634$1VmeqK)
        (complex? . g$8223$1VmeqK)
        (char? . g$7581$1VmeqK)
        (char>? . g$7655$1VmeqK)
        (char>=? . g$7657$1VmeqK)
        (char=? . g$7653$1VmeqK)
        (char<? . g$7654$1VmeqK)
        (char<=? . g$7656$1VmeqK)
        (char->integer . g$15633$1VmeqK)
        (ceiling . g$8281$1VmeqK)
        (call-with-values . g$15632$1VmeqK)
        (call/cc . g$15631$1VmeqK)
        (call-with-current-continuation . g$15630$1VmeqK)
        (cddddr . g$7629$1VmeqK)
        (cdddar . g$7628$1VmeqK)
        (cddadr . g$7627$1VmeqK)
        (cddaar . g$7626$1VmeqK)
        (cdaddr . g$7625$1VmeqK)
        (cdadar . g$7624$1VmeqK)
        (cdaadr . g$7623$1VmeqK)
        (cdaaar . g$7622$1VmeqK)
        (cadddr . g$7621$1VmeqK)
        (caddar . g$7620$1VmeqK)
        (cadadr . g$7619$1VmeqK)
        (cadaar . g$7618$1VmeqK)
        (caaddr . g$7617$1VmeqK)
        (caadar . g$7616$1VmeqK)
        (caaadr . g$7615$1VmeqK)
        (caaaar . g$7614$1VmeqK)
        (cdddr . g$7613$1VmeqK)
        (cddar . g$7612$1VmeqK)
        (cdadr . g$7611$1VmeqK)
        (cdaar . g$7610$1VmeqK)
        (caddr . g$7609$1VmeqK)
        (cadar . g$7608$1VmeqK)
        (caadr . g$7607$1VmeqK)
        (caaar . g$7606$1VmeqK)
        (cddr . g$7605$1VmeqK)
        (cdar . g$7604$1VmeqK)
        (cadr . g$7603$1VmeqK)
        (caar . g$7602$1VmeqK)
        (cdr . g$15629$1VmeqK)
        (car . g$15628$1VmeqK)
        (boolean? . g$7585$1VmeqK)
        (boolean=? . g$7647$1VmeqK)
        (atan . g$8276$1VmeqK)
        (assertion-violation . g$15627$1VmeqK)
        (asin . g$8269$1VmeqK)
        (apply . g$15626$1VmeqK)
        (append . g$15625$1VmeqK)
        (angle . g$8256$1VmeqK)
        (acos . g$8272$1VmeqK)
        (abs . g$8279$1VmeqK)
        (/ . g$15624$1VmeqK)
        (* . g$15623$1VmeqK)
        (- . g$15622$1VmeqK)
        (+ . g$15621$1VmeqK)
        (>= . g$8253$1VmeqK)
        (> . g$8252$1VmeqK)
        (= . g$8249$1VmeqK)
        (<= . g$8251$1VmeqK)
        (< . g$8250$1VmeqK)
        (deserialize-port . g$15582$1VmeqK)
        (serialize-port . g$15581$1VmeqK)
        (enum-set? . g$10887$1VmeqK)
        (load/unload . g$15383$1VmeqK)
        (load/args . g$15382$1VmeqK)
        (printf . g$10996$1VmeqK)
        (fprintf . g$10997$1VmeqK)
        (format . g$10998$1VmeqK)
        (procedure-form . g$15580$1VmeqK)
        (procedure-environment . g$15579$1VmeqK)
        (procedure-name . g$15578$1VmeqK)
        (procedure-arity . g$15577$1VmeqK)
        (gc-collect . g$15576$1VmeqK)
        (typeof . g$15575$1VmeqK)
        (clr-type? . g$15574$1VmeqK)
        (get-clr-type . g$15573$1VmeqK)
        (vector-append . g$15571$1VmeqK)
        (vector-filter . g$15570$1VmeqK)
        (vector-reverse! . g$15569$1VmeqK)
        (vector-contains? . g$15568$1VmeqK)
        (vector-index-of . g$15567$1VmeqK)
        (vector-copy . g$15566$1VmeqK)
        (vector-binary-search . g$15565$1VmeqK)
        (string-ci-compare . g$15564$1VmeqK)
        (string-compare . g$15563$1VmeqK)
        (string-format . g$15562$1VmeqK)
        (trace-printer . g$15377$1VmeqK)
        (time-it . g$15560$1VmeqK)
        (make-parameter . g$11025$1VmeqK)
        (open-tcp-input/output-port . g$15557$1VmeqK)
        (hashtable-for-each . g$15556$1VmeqK)
        (hashtable-map . g$15555$1VmeqK)
        (environment-bindings . g$12334$1VmeqK)
        (environment-symbols . g$12337$1VmeqK)
        (interaction-environment-symbols . g$12333$1VmeqK)
        (optimization-level . g$15554$1VmeqK)
        (library-path . g$11663$1VmeqK)
        (make-compile-time-value . g$12042$1VmeqK)
        (expand->core . g$12343$1VmeqK)
        (expand . g$12341$1VmeqK)
        (emacs-mode? . g$15380$1VmeqK)
        (syntax-transpose . g$12280$1VmeqK)
        (convert->cps . g$11344$1VmeqK)
        (condition-stacktrace . g$15547$1VmeqK)
        (stacktrace-condition? . g$8712$1VmeqK)
        (stacktrace-enable? . g$15378$1VmeqK)
        (make-stacktrace-condition . g$8710$1VmeqK)
        (condition-where . g$15546$1VmeqK)
        (where-condition? . g$8697$1VmeqK)
        (make-where-condition . g$8695$1VmeqK)
        (installed-libraries . g$11684$1VmeqK)
        (uninstall-library . g$11675$1VmeqK)
        (pretty-gensyms . g$11108$1VmeqK)
        (pretty-width . g$11105$1VmeqK)
        (pretty-print . g$11110$1VmeqK)
        (pointer+ . g$15545$1VmeqK)
        (&no-nans . g$15542$1VmeqK)
        (&no-infinities . g$15541$1VmeqK)
        (&i/o-encoding . g$15540$1VmeqK)
        (&i/o-decoding . g$15539$1VmeqK)
        (&i/o-port . g$15538$1VmeqK)
        (&i/o-file-does-not-exist . g$15537$1VmeqK)
        (&i/o-file-already-exists . g$15536$1VmeqK)
        (&i/o-file-is-read-only . g$15535$1VmeqK)
        (&i/o-file-protection . g$15534$1VmeqK)
        (&i/o-filename . g$15533$1VmeqK)
        (&i/o-invalid-position . g$15532$1VmeqK)
        (&i/o-write . g$15531$1VmeqK)
        (&i/o-read . g$15530$1VmeqK)
        (&i/o . g$15529$1VmeqK)
        (&non-continuable . g$15528$1VmeqK)
        (&undefined . g$15527$1VmeqK)
        (&syntax . g$15526$1VmeqK)
        (&lexical . g$15525$1VmeqK)
        (&implementation-restriction . g$15524$1VmeqK)
        (&who . g$15523$1VmeqK)
        (&irritants . g$15522$1VmeqK)
        (&assertion . g$15521$1VmeqK)
        (&violation . g$15520$1VmeqK)
        (&error . g$15519$1VmeqK)
        (&serious . g$15518$1VmeqK)
        (&warning . g$15517$1VmeqK)
        (&message . g$15516$1VmeqK)
        (&condition . g$15515$1VmeqK)
        (define-condition-type . g$15514$1VmeqK)
        (define-enumeration . g$15513$1VmeqK)
        (define-record-type . g$15512$1VmeqK)
        (parent-rtd . g$15511$1VmeqK)
        (nongenerative . g$15510$1VmeqK)
        (opaque . g$15509$1VmeqK)
        (sealed . g$15508$1VmeqK)
        (protocol . g$15507$1VmeqK)
        (parent . g$15506$1VmeqK)
        (immutable . g$15505$1VmeqK)
        (mutable . g$15504$1VmeqK)
        (fields . g$15503$1VmeqK)
        (error-handling-mode . g$15502$1VmeqK)
        (file-options . g$15501$1VmeqK)
        (buffer-mode . g$15500$1VmeqK)
        (eol-style . g$15499$1VmeqK)
        (guard . g$15498$1VmeqK)
        (trace-letrec-syntax . g$15497$1VmeqK)
        (trace-let-syntax . g$15496$1VmeqK)
        (trace-define-syntax . g$15495$1VmeqK)
        (trace-define . g$15494$1VmeqK)
        (trace-lambda . g$15493$1VmeqK)
        (unsyntax-splicing . g$15492$1VmeqK)
        (unsyntax . g$15491$1VmeqK)
        (unquote-splicing . g$15490$1VmeqK)
        (unquote . g$15489$1VmeqK)
        (_ . g$15488$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK)
        (... . g$15485$1VmeqK)
        (assert . g$15484$1VmeqK)
        (endianness . g$15483$1VmeqK)
        (delay . g$15482$1VmeqK)
        (time . g$15481$1VmeqK)
        (or . g$15480$1VmeqK)
        (and . g$15479$1VmeqK)
        (do . g$15478$1VmeqK)
        (cond . g$15477$1VmeqK)
        (let* . g$15476$1VmeqK)
        (let . g$15475$1VmeqK)
        (identifier-syntax . g$15474$1VmeqK)
        (with-syntax . g$15473$1VmeqK)
        (quasisyntax . g$15472$1VmeqK)
        (quasiquote . g$15471$1VmeqK)
        (syntax-rules . g$15470$1VmeqK)
        (include-into . g$15469$1VmeqK)
        (include . g$15468$1VmeqK)
        (let-values . g$15466$1VmeqK)
        (let*-values . g$15465$1VmeqK)
        (record-constructor-descriptor . g$15464$1VmeqK)
        (record-type-descriptor . g$15463$1VmeqK)
        (fluid-let-syntax . g$15462$1VmeqK)
        (case . g$15461$1VmeqK)
        (parameterize . g$15460$1VmeqK)
        (unless . g$15459$1VmeqK)
        (when . g$15458$1VmeqK)
        (if . g$15457$1VmeqK)
        (letrec* . g$15456$1VmeqK)
        (letrec . g$15455$1VmeqK)
        (case-lambda . g$15453$1VmeqK)
        (lambda . g$15452$1VmeqK)
        (syntax . g$15451$1VmeqK)
        (syntax-case . g$15450$1VmeqK)
        (quote . g$15449$1VmeqK)
        (letrec-syntax . g$15447$1VmeqK)
        (let-syntax . g$15446$1VmeqK)
        (set! . g$15445$1VmeqK)
        (export . g$15444$1VmeqK)
        (import . g$15443$1VmeqK)
        (library . g$15442$1VmeqK)
        (begin . g$15441$1VmeqK)
        (module . g$15440$1VmeqK)
        (define-syntax . g$15439$1VmeqK)
        (define . g$15438$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15828$1VmeqK
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$15558$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15829$1VmeqK
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$15825$1VmeqK)
        (annotation-source . g$15824$1VmeqK)
        (annotation-expression . g$15823$1VmeqK)
        (annotation? . g$15822$1VmeqK)
        (read-annotated . g$15821$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15830$1VmeqK
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$15793$1VmeqK)
        (serialize-library . g$15792$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15831$1VmeqK
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$15791$1VmeqK)
        (variable-transformer-procedure . g$12044$1VmeqK)
        (variable-transformer? . g$12043$1VmeqK)
        (eqv-hash . g$15584$1VmeqK)
        (reverse! . g$15583$1VmeqK)
        (make-promise . g$8992$1VmeqK)
        (format . g$10998$1VmeqK)
        (get-command-line . g$15572$1VmeqK)
        (make-traced-procedure . g$15561$1VmeqK)
        (make-traced-macro . g$11018$1VmeqK)
        (assertion-error . g$12356$1VmeqK)
        (library-locator . g$15559$1VmeqK)
        (get-library-paths . g$15558$1VmeqK)
        (library-path . g$11663$1VmeqK)
        (inexact=? . g$15553$1VmeqK)
        (bignum-sqrt-exact . g$15552$1VmeqK)
        (bignum-sqrt . g$15551$1VmeqK)
        (flonum->string . g$15550$1VmeqK)
        (inexact-compare . g$15549$1VmeqK)
        (exact-compare . g$15548$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15832$1VmeqK
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$15620$1VmeqK)
        ($bytevector-ref . g$15619$1VmeqK)
        ($fl>=? . g$15618$1VmeqK)
        ($fl>? . g$15617$1VmeqK)
        ($fl<=? . g$15616$1VmeqK)
        ($fl<? . g$15615$1VmeqK)
        ($fl- . g$15614$1VmeqK)
        ($fl/ . g$15613$1VmeqK)
        ($fl* . g$15612$1VmeqK)
        ($fl+ . g$15611$1VmeqK)
        ($fl=? . g$15610$1VmeqK)
        ($try . g$15609$1VmeqK)
        ($fxarithmetic-shift-right . g$15608$1VmeqK)
        ($fxarithmetic-shift-left . g$15607$1VmeqK)
        ($$fx- . g$15606$1VmeqK)
        ($$fx* . g$15605$1VmeqK)
        ($$fx+ . g$15604$1VmeqK)
        ($fxnot . g$15603$1VmeqK)
        ($fxxor . g$15602$1VmeqK)
        ($fxior . g$15601$1VmeqK)
        ($fxand . g$15600$1VmeqK)
        ($fx>=? . g$15599$1VmeqK)
        ($fx>? . g$15598$1VmeqK)
        ($fx<=? . g$15597$1VmeqK)
        ($fx<? . g$15596$1VmeqK)
        ($fx- . g$15595$1VmeqK)
        ($fxmod0 . g$15594$1VmeqK)
        ($fxdiv0 . g$15593$1VmeqK)
        ($fx* . g$15592$1VmeqK)
        ($fx+ . g$15591$1VmeqK)
        ($fx=? . g$15590$1VmeqK)
        ($vector-set! . g$15589$1VmeqK)
        ($vector-ref . g$15588$1VmeqK)
        ($cdr . g$15587$1VmeqK)
        ($car . g$15586$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15833$1VmeqK
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$15585$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15834$1VmeqK
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$15815$1VmeqK)
        (ffi-callback-internal . g$15814$1VmeqK)
        (ffi-callout-internal . g$15813$1VmeqK)
        (define-clr-class-internal . g$15812$1VmeqK)
        (clr-field-set!-internal . g$15811$1VmeqK)
        (clr-field-get-internal . g$15810$1VmeqK)
        (clr-cast-internal . g$15809$1VmeqK)
        (clr-call-internal . g$15808$1VmeqK)
        (clr-new-internal . g$15807$1VmeqK)
        (clr-new-array-internal . g$15806$1VmeqK)
        (clr-is-internal . g$15805$1VmeqK)
        (clr-reference-internal . g$15804$1VmeqK)
        (clr-using-internal . g$15803$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15835$1VmeqK
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$15490$1VmeqK)
        (unquote . g$15489$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK)
        (delay . g$15482$1VmeqK)
        (or . g$15480$1VmeqK)
        (and . g$15479$1VmeqK)
        (do . g$15478$1VmeqK)
        (cond . g$15477$1VmeqK)
        (let* . g$15476$1VmeqK)
        (let . g$15475$1VmeqK)
        (quasiquote . g$15471$1VmeqK)
        (syntax-rules . g$15470$1VmeqK)
        (case . g$15461$1VmeqK)
        (if . g$15457$1VmeqK)
        (letrec . g$15455$1VmeqK)
        (lambda . g$15452$1VmeqK)
        (quote . g$15449$1VmeqK)
        (letrec-syntax . g$15447$1VmeqK)
        (let-syntax . g$15446$1VmeqK)
        (set! . g$15445$1VmeqK)
        (begin . g$15441$1VmeqK)
        (define-syntax . g$15439$1VmeqK)
        (define . g$15438$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15836$1VmeqK
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$15790$1VmeqK)
        (string-ci>? . g$9041$1VmeqK)
        (string-ci>=? . g$9043$1VmeqK)
        (string-ci=? . g$9039$1VmeqK)
        (string-ci<? . g$9040$1VmeqK)
        (string-ci<=? . g$9042$1VmeqK)
        (char-whitespace? . g$15785$1VmeqK)
        (char-upper-case? . g$15784$1VmeqK)
        (char-numeric? . g$15782$1VmeqK)
        (char-lower-case? . g$15781$1VmeqK)
        (char-upcase . g$15779$1VmeqK)
        (char-downcase . g$15776$1VmeqK)
        (char-ci>? . g$9051$1VmeqK)
        (char-ci>=? . g$9053$1VmeqK)
        (char-ci=? . g$9049$1VmeqK)
        (char-ci<? . g$9050$1VmeqK)
        (char-ci<=? . g$9052$1VmeqK)
        (char-alphabetic? . g$15775$1VmeqK)
        (call-with-output-file . g$10849$1VmeqK)
        (call-with-input-file . g$10848$1VmeqK)
        (write-char . g$10840$1VmeqK)
        (write . g$15747$1VmeqK)
        (with-output-to-file . g$10847$1VmeqK)
        (with-input-from-file . g$10846$1VmeqK)
        (read-char . g$10839$1VmeqK)
        (read . g$15746$1VmeqK)
        (peek-char . g$10838$1VmeqK)
        (open-output-file . g$15745$1VmeqK)
        (open-input-file . g$15744$1VmeqK)
        (newline . g$10850$1VmeqK)
        (display . g$15743$1VmeqK)
        (close-output-port . g$15742$1VmeqK)
        (close-input-port . g$15741$1VmeqK)
        (eof-object? . g$15740$1VmeqK)
        (current-error-port . g$15738$1VmeqK)
        (current-output-port . g$15737$1VmeqK)
        (current-input-port . g$15736$1VmeqK)
        (output-port? . g$15735$1VmeqK)
        (input-port? . g$15734$1VmeqK)
        (scheme-report-environment . g$12340$1VmeqK)
        (quotient . g$8989$1VmeqK)
        (null-environment . g$12339$1VmeqK)
        (remainder . g$8990$1VmeqK)
        (modulo . g$8991$1VmeqK)
        (inexact->exact . g$8986$1VmeqK)
        (force . g$8993$1VmeqK)
        (exact->inexact . g$8987$1VmeqK)
        (string-fill! . g$15681$1VmeqK)
        (string-set! . g$15680$1VmeqK)
        (set-cdr! . g$15679$1VmeqK)
        (set-car! . g$15678$1VmeqK)
        (memv . g$7237$1VmeqK)
        (memq . g$7236$1VmeqK)
        (member . g$7238$1VmeqK)
        (assv . g$7233$1VmeqK)
        (assq . g$7232$1VmeqK)
        (assoc . g$7234$1VmeqK)
        (eval . g$12342$1VmeqK)
        (zero? . g$8230$1VmeqK)
        (vector? . g$7582$1VmeqK)
        (vector-set! . g$7598$1VmeqK)
        (vector-ref . g$7597$1VmeqK)
        (vector-length . g$15663$1VmeqK)
        (vector-fill! . g$7599$1VmeqK)
        (vector->list . g$15662$1VmeqK)
        (vector . g$15661$1VmeqK)
        (values . g$15660$1VmeqK)
        (truncate . g$8282$1VmeqK)
        (tan . g$8274$1VmeqK)
        (symbol? . g$7584$1VmeqK)
        (symbol->string . g$15659$1VmeqK)
        (substring . g$15658$1VmeqK)
        (string? . g$15657$1VmeqK)
        (string>? . g$7643$1VmeqK)
        (string>=? . g$7645$1VmeqK)
        (string=? . g$7641$1VmeqK)
        (string<? . g$7642$1VmeqK)
        (string<=? . g$7644$1VmeqK)
        (string-ref . g$15656$1VmeqK)
        (string-length . g$15655$1VmeqK)
        (string-copy . g$15654$1VmeqK)
        (string-append . g$15653$1VmeqK)
        (string->symbol . g$15652$1VmeqK)
        (string->number . g$15651$1VmeqK)
        (string->list . g$15650$1VmeqK)
        (string . g$15649$1VmeqK)
        (sqrt . g$8284$1VmeqK)
        (sin . g$8268$1VmeqK)
        (round . g$8283$1VmeqK)
        (reverse . g$7601$1VmeqK)
        (real? . g$8224$1VmeqK)
        (real-part . g$8261$1VmeqK)
        (rationalize . g$7658$1VmeqK)
        (rational? . g$8225$1VmeqK)
        (procedure? . g$7586$1VmeqK)
        (positive? . g$8231$1VmeqK)
        (pair? . g$15648$1VmeqK)
        (odd? . g$7631$1VmeqK)
        (numerator . g$8259$1VmeqK)
        (number? . g$8217$1VmeqK)
        (number->string . g$8238$1VmeqK)
        (null? . g$15647$1VmeqK)
        (not . g$15646$1VmeqK)
        (negative? . g$8232$1VmeqK)
        (min . g$7633$1VmeqK)
        (max . g$7632$1VmeqK)
        (map . g$7244$1VmeqK)
        (make-vector . g$15645$1VmeqK)
        (make-string . g$15644$1VmeqK)
        (make-rectangular . g$8254$1VmeqK)
        (make-polar . g$8255$1VmeqK)
        (magnitude . g$8257$1VmeqK)
        (log . g$8277$1VmeqK)
        (list? . g$15643$1VmeqK)
        (list-tail . g$7224$1VmeqK)
        (list-ref . g$7225$1VmeqK)
        (list->vector . g$7595$1VmeqK)
        (list->string . g$7596$1VmeqK)
        (list . g$15642$1VmeqK)
        (length . g$15641$1VmeqK)
        (lcm . g$7635$1VmeqK)
        (integer? . g$8226$1VmeqK)
        (integer->char . g$15640$1VmeqK)
        (inexact? . g$8222$1VmeqK)
        (imag-part . g$8262$1VmeqK)
        (gcd . g$7634$1VmeqK)
        (for-each . g$7245$1VmeqK)
        (floor . g$8280$1VmeqK)
        (expt . g$8286$1VmeqK)
        (exp . g$8267$1VmeqK)
        (exact? . g$8221$1VmeqK)
        (even? . g$7630$1VmeqK)
        (eqv? . g$15638$1VmeqK)
        (equal? . g$15637$1VmeqK)
        (eq? . g$15636$1VmeqK)
        (dynamic-wind . g$15635$1VmeqK)
        (denominator . g$8260$1VmeqK)
        (cos . g$8271$1VmeqK)
        (cons . g$15634$1VmeqK)
        (complex? . g$8223$1VmeqK)
        (char? . g$7581$1VmeqK)
        (char>? . g$7655$1VmeqK)
        (char>=? . g$7657$1VmeqK)
        (char=? . g$7653$1VmeqK)
        (char<? . g$7654$1VmeqK)
        (char<=? . g$7656$1VmeqK)
        (char->integer . g$15633$1VmeqK)
        (ceiling . g$8281$1VmeqK)
        (call-with-values . g$15632$1VmeqK)
        (call-with-current-continuation . g$15630$1VmeqK)
        (cddddr . g$7629$1VmeqK)
        (cdddar . g$7628$1VmeqK)
        (cddadr . g$7627$1VmeqK)
        (cddaar . g$7626$1VmeqK)
        (cdaddr . g$7625$1VmeqK)
        (cdadar . g$7624$1VmeqK)
        (cdaadr . g$7623$1VmeqK)
        (cdaaar . g$7622$1VmeqK)
        (cadddr . g$7621$1VmeqK)
        (caddar . g$7620$1VmeqK)
        (cadadr . g$7619$1VmeqK)
        (cadaar . g$7618$1VmeqK)
        (caaddr . g$7617$1VmeqK)
        (caadar . g$7616$1VmeqK)
        (caaadr . g$7615$1VmeqK)
        (caaaar . g$7614$1VmeqK)
        (cdddr . g$7613$1VmeqK)
        (cddar . g$7612$1VmeqK)
        (cdadr . g$7611$1VmeqK)
        (cdaar . g$7610$1VmeqK)
        (caddr . g$7609$1VmeqK)
        (cadar . g$7608$1VmeqK)
        (caadr . g$7607$1VmeqK)
        (caaar . g$7606$1VmeqK)
        (cddr . g$7605$1VmeqK)
        (cdar . g$7604$1VmeqK)
        (cadr . g$7603$1VmeqK)
        (caar . g$7602$1VmeqK)
        (cdr . g$15629$1VmeqK)
        (car . g$15628$1VmeqK)
        (boolean? . g$7585$1VmeqK)
        (atan . g$8276$1VmeqK)
        (asin . g$8269$1VmeqK)
        (apply . g$15626$1VmeqK)
        (append . g$15625$1VmeqK)
        (angle . g$8256$1VmeqK)
        (acos . g$8272$1VmeqK)
        (abs . g$8279$1VmeqK)
        (/ . g$15624$1VmeqK)
        (* . g$15623$1VmeqK)
        (- . g$15622$1VmeqK)
        (+ . g$15621$1VmeqK)
        (>= . g$8253$1VmeqK)
        (> . g$8252$1VmeqK)
        (= . g$8249$1VmeqK)
        (<= . g$8251$1VmeqK)
        (< . g$8250$1VmeqK)
        (unquote-splicing . g$15490$1VmeqK)
        (unquote . g$15489$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK)
        (... . g$15485$1VmeqK)
        (delay . g$15482$1VmeqK)
        (or . g$15480$1VmeqK)
        (and . g$15479$1VmeqK)
        (do . g$15478$1VmeqK)
        (cond . g$15477$1VmeqK)
        (let* . g$15476$1VmeqK)
        (let . g$15475$1VmeqK)
        (quasiquote . g$15471$1VmeqK)
        (syntax-rules . g$15470$1VmeqK)
        (case . g$15461$1VmeqK)
        (if . g$15457$1VmeqK)
        (letrec . g$15455$1VmeqK)
        (lambda . g$15452$1VmeqK)
        (quote . g$15449$1VmeqK)
        (letrec-syntax . g$15447$1VmeqK)
        (let-syntax . g$15446$1VmeqK)
        (set! . g$15445$1VmeqK)
        (begin . g$15441$1VmeqK)
        (define-syntax . g$15439$1VmeqK)
        (define . g$15438$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15837$1VmeqK
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$15789$1VmeqK)
        (string-titlecase . g$15788$1VmeqK)
        (string-normalize-nfkd . g$9057$1VmeqK)
        (string-normalize-nfkc . g$9056$1VmeqK)
        (string-normalize-nfd . g$9055$1VmeqK)
        (string-normalize-nfc . g$9054$1VmeqK)
        (string-foldcase . g$15787$1VmeqK)
        (string-downcase . g$15786$1VmeqK)
        (string-ci>? . g$9041$1VmeqK)
        (string-ci>=? . g$9043$1VmeqK)
        (string-ci=? . g$9039$1VmeqK)
        (string-ci<? . g$9040$1VmeqK)
        (string-ci<=? . g$9042$1VmeqK)
        (char-whitespace? . g$15785$1VmeqK)
        (char-upper-case? . g$15784$1VmeqK)
        (char-title-case? . g$15783$1VmeqK)
        (char-numeric? . g$15782$1VmeqK)
        (char-lower-case? . g$15781$1VmeqK)
        (char-general-category . g$15780$1VmeqK)
        (char-upcase . g$15779$1VmeqK)
        (char-titlecase . g$15778$1VmeqK)
        (char-foldcase . g$15777$1VmeqK)
        (char-downcase . g$15776$1VmeqK)
        (char-ci>? . g$9051$1VmeqK)
        (char-ci>=? . g$9053$1VmeqK)
        (char-ci=? . g$9049$1VmeqK)
        (char-ci<? . g$9050$1VmeqK)
        (char-ci<=? . g$9052$1VmeqK)
        (char-alphabetic? . g$15775$1VmeqK)
        (make-variable-transformer . g$12041$1VmeqK)
        (identifier? . g$12361$1VmeqK)
        (generate-temporaries . g$12350$1VmeqK)
        (free-identifier=? . g$12351$1VmeqK)
        (syntax->datum . g$12363$1VmeqK)
        (datum->syntax . g$12362$1VmeqK)
        (bound-identifier=? . g$12352$1VmeqK)
        (record-type-descriptor? . g$15774$1VmeqK)
        (record-predicate . g$15773$1VmeqK)
        (record-mutator . g$15772$1VmeqK)
        (record-constructor . g$15771$1VmeqK)
        (record-accessor . g$15770$1VmeqK)
        (make-record-type-descriptor . g$15769$1VmeqK)
        (make-record-constructor-descriptor . g$15768$1VmeqK)
        (record? . g$15767$1VmeqK)
        (record-type-uid . g$15766$1VmeqK)
        (record-type-sealed? . g$15765$1VmeqK)
        (record-type-parent . g$15764$1VmeqK)
        (record-type-opaque? . g$15763$1VmeqK)
        (record-type-name . g$15762$1VmeqK)
        (record-type-generative? . g$15761$1VmeqK)
        (record-type-field-names . g$15760$1VmeqK)
        (record-rtd . g$15759$1VmeqK)
        (record-field-mutable? . g$15758$1VmeqK)
        (delete-file . g$7895$1VmeqK)
        (file-exists? . g$7894$1VmeqK)
        (vector-sort! . g$15757$1VmeqK)
        (vector-sort . g$15756$1VmeqK)
        (list-sort . g$9010$1VmeqK)
        (symbol-hash . g$7865$1VmeqK)
        (string-ci-hash . g$7864$1VmeqK)
        (string-hash . g$7863$1VmeqK)
        (equal-hash . g$15755$1VmeqK)
        (hashtable-equivalence-function . g$15754$1VmeqK)
        (make-hashtable . g$15753$1VmeqK)
        (hashtable-hash-function . g$15752$1VmeqK)
        (make-eqv-hashtable . g$7855$1VmeqK)
        (make-eq-hashtable . g$7854$1VmeqK)
        (hashtable? . g$7853$1VmeqK)
        (hashtable-update! . g$7861$1VmeqK)
        (hashtable-size . g$7856$1VmeqK)
        (hashtable-set! . g$7858$1VmeqK)
        (hashtable-ref . g$7857$1VmeqK)
        (hashtable-mutable? . g$15751$1VmeqK)
        (hashtable-keys . g$15750$1VmeqK)
        (hashtable-entries . g$15749$1VmeqK)
        (hashtable-delete! . g$7859$1VmeqK)
        (hashtable-copy . g$15748$1VmeqK)
        (hashtable-contains? . g$7860$1VmeqK)
        (hashtable-clear! . g$7862$1VmeqK)
        (call-with-output-file . g$10849$1VmeqK)
        (call-with-input-file . g$10848$1VmeqK)
        (write-char . g$10840$1VmeqK)
        (write . g$15747$1VmeqK)
        (with-output-to-file . g$10847$1VmeqK)
        (with-input-from-file . g$10846$1VmeqK)
        (read-char . g$10839$1VmeqK)
        (read . g$15746$1VmeqK)
        (peek-char . g$10838$1VmeqK)
        (open-output-file . g$15745$1VmeqK)
        (open-input-file . g$15744$1VmeqK)
        (newline . g$10850$1VmeqK)
        (display . g$15743$1VmeqK)
        (close-output-port . g$15742$1VmeqK)
        (close-input-port . g$15741$1VmeqK)
        (eof-object? . g$15740$1VmeqK)
        (eof-object . g$15739$1VmeqK)
        (current-error-port . g$15738$1VmeqK)
        (current-output-port . g$15737$1VmeqK)
        (current-input-port . g$15736$1VmeqK)
        (output-port? . g$15735$1VmeqK)
        (input-port? . g$15734$1VmeqK)
        (utf-8-codec . g$15733$1VmeqK)
        (utf-16-codec . g$15732$1VmeqK)
        (transcoder-error-handling-mode . g$15731$1VmeqK)
        (transcoder-eol-style . g$15730$1VmeqK)
        (transcoder-codec . g$15729$1VmeqK)
        (transcoded-port . g$15728$1VmeqK)
        (textual-port? . g$15727$1VmeqK)
        (string->bytevector . g$15726$1VmeqK)
        (standard-output-port . g$10814$1VmeqK)
        (standard-input-port . g$10813$1VmeqK)
        (standard-error-port . g$10812$1VmeqK)
        (set-port-position! . g$15725$1VmeqK)
        (put-u8 . g$15724$1VmeqK)
        (put-string . g$15723$1VmeqK)
        (put-datum . g$10817$1VmeqK)
        (put-char . g$15722$1VmeqK)
        (put-bytevector . g$15721$1VmeqK)
        (port? . g$10822$1VmeqK)
        (port-transcoder . g$15720$1VmeqK)
        (port-position . g$15719$1VmeqK)
        (port-has-set-port-position!? . g$15718$1VmeqK)
        (port-has-port-position? . g$15717$1VmeqK)
        (port-eof? . g$15716$1VmeqK)
        (output-port-buffer-mode . g$15715$1VmeqK)
        (open-string-output-port . g$10821$1VmeqK)
        (open-string-input-port . g$15714$1VmeqK)
        (open-file-output-port . g$15713$1VmeqK)
        (open-file-input/output-port . g$15712$1VmeqK)
        (open-file-input-port . g$15711$1VmeqK)
        (open-bytevector-output-port . g$15710$1VmeqK)
        (open-bytevector-input-port . g$15709$1VmeqK)
        (native-transcoder . g$15708$1VmeqK)
        (native-eol-style . g$10815$1VmeqK)
        (make-transcoder . g$15707$1VmeqK)
        (latin-1-codec . g$15706$1VmeqK)
        (make-i/o-write-error . g$8820$1VmeqK)
        (make-i/o-read-error . g$8807$1VmeqK)
        (make-i/o-port-error . g$8915$1VmeqK)
        (make-i/o-invalid-position-error . g$8833$1VmeqK)
        (make-i/o-filename-error . g$8848$1VmeqK)
        (make-i/o-file-protection-error . g$8863$1VmeqK)
        (make-i/o-file-is-read-only-error . g$8876$1VmeqK)
        (make-i/o-file-does-not-exist-error . g$8902$1VmeqK)
        (make-i/o-file-already-exists-error . g$8889$1VmeqK)
        (make-i/o-error . g$8794$1VmeqK)
        (make-i/o-encoding-error . g$8943$1VmeqK)
        (make-i/o-decoding-error . g$8930$1VmeqK)
        (make-custom-textual-output-port . g$15705$1VmeqK)
        (make-custom-textual-input/output-port . g$15704$1VmeqK)
        (make-custom-textual-input-port . g$15703$1VmeqK)
        (make-custom-binary-output-port . g$15702$1VmeqK)
        (make-custom-binary-input/output-port . g$15701$1VmeqK)
        (make-custom-binary-input-port . g$15700$1VmeqK)
        (make-bytevector . g$7915$1VmeqK)
        (lookahead-u8 . g$15699$1VmeqK)
        (lookahead-char . g$15698$1VmeqK)
        (i/o-write-error? . g$8821$1VmeqK)
        (i/o-read-error? . g$8808$1VmeqK)
        (i/o-port-error? . g$8917$1VmeqK)
        (i/o-invalid-position-error? . g$8835$1VmeqK)
        (i/o-error-position . g$8836$1VmeqK)
        (i/o-filename-error? . g$8850$1VmeqK)
        (i/o-file-protection-error? . g$8864$1VmeqK)
        (i/o-file-is-read-only-error? . g$8877$1VmeqK)
        (i/o-file-does-not-exist-error? . g$8903$1VmeqK)
        (i/o-file-already-exists-error? . g$8890$1VmeqK)
        (i/o-error? . g$8795$1VmeqK)
        (i/o-error-port . g$8918$1VmeqK)
        (i/o-error-filename . g$8851$1VmeqK)
        (i/o-encoding-error? . g$8945$1VmeqK)
        (i/o-encoding-error-char . g$8946$1VmeqK)
        (i/o-decoding-error? . g$8931$1VmeqK)
        (get-u8 . g$15697$1VmeqK)
        (get-string-n! . g$15696$1VmeqK)
        (get-string-n . g$15695$1VmeqK)
        (get-string-all . g$15694$1VmeqK)
        (get-line . g$15693$1VmeqK)
        (get-datum . g$10818$1VmeqK)
        (get-char . g$15692$1VmeqK)
        (get-bytevector-some . g$15691$1VmeqK)
        (get-bytevector-n! . g$15690$1VmeqK)
        (get-bytevector-n . g$15689$1VmeqK)
        (get-bytevector-all . g$15688$1VmeqK)
        (flush-output-port . g$15687$1VmeqK)
        (close-port . g$15686$1VmeqK)
        (call-with-string-output-port . g$10823$1VmeqK)
        (call-with-port . g$10824$1VmeqK)
        (call-with-bytevector-output-port . g$15685$1VmeqK)
        (bytevector->string . g$15684$1VmeqK)
        (buffer-mode? . g$10816$1VmeqK)
        (binary-port? . g$15683$1VmeqK)
        (exit . g$15682$1VmeqK)
        (command-line . g$15379$1VmeqK)
        (remove . g$7249$1VmeqK)
        (remv . g$7250$1VmeqK)
        (remp . g$7230$1VmeqK)
        (remq . g$7251$1VmeqK)
        (partition . g$7229$1VmeqK)
        (memv . g$7237$1VmeqK)
        (memq . g$7236$1VmeqK)
        (memp . g$7239$1VmeqK)
        (member . g$7238$1VmeqK)
        (exists . g$7243$1VmeqK)
        (for-all . g$7242$1VmeqK)
        (fold-right . g$7248$1VmeqK)
        (fold-left . g$7247$1VmeqK)
        (find . g$7228$1VmeqK)
        (filter . g$7231$1VmeqK)
        (cons* . g$7246$1VmeqK)
        (assv . g$7233$1VmeqK)
        (assq . g$7232$1VmeqK)
        (assp . g$7235$1VmeqK)
        (assoc . g$7234$1VmeqK)
        (with-exception-handler . g$15677$1VmeqK)
        (raise-continuable . g$15676$1VmeqK)
        (raise . g$15675$1VmeqK)
        (make-enumeration . g$10910$1VmeqK)
        (enum-set=? . g$10917$1VmeqK)
        (enum-set-universe . g$10911$1VmeqK)
        (enum-set-union . g$10918$1VmeqK)
        (enum-set-subset? . g$10916$1VmeqK)
        (enum-set-projection . g$10922$1VmeqK)
        (enum-set-member? . g$10915$1VmeqK)
        (enum-set-intersection . g$10919$1VmeqK)
        (enum-set-indexer . g$10912$1VmeqK)
        (enum-set-difference . g$10920$1VmeqK)
        (enum-set-constructor . g$10913$1VmeqK)
        (enum-set-complement . g$10921$1VmeqK)
        (enum-set->list . g$10914$1VmeqK)
        (who-condition? . g$8682$1VmeqK)
        (warning? . g$8601$1VmeqK)
        (violation? . g$8640$1VmeqK)
        (undefined-violation? . g$8782$1VmeqK)
        (syntax-violation? . g$8767$1VmeqK)
        (syntax-violation-subform . g$8769$1VmeqK)
        (syntax-violation-form . g$8768$1VmeqK)
        (syntax-violation . g$12360$1VmeqK)
        (simple-conditions . g$15674$1VmeqK)
        (serious-condition? . g$8614$1VmeqK)
        (non-continuable-violation? . g$8726$1VmeqK)
        (message-condition? . g$8587$1VmeqK)
        (make-who-condition . g$8680$1VmeqK)
        (make-warning . g$8600$1VmeqK)
        (make-violation . g$8639$1VmeqK)
        (make-undefined-violation . g$8781$1VmeqK)
        (make-syntax-violation . g$8764$1VmeqK)
        (make-serious-condition . g$8613$1VmeqK)
        (make-non-continuable-violation . g$8725$1VmeqK)
        (make-message-condition . g$8585$1VmeqK)
        (make-lexical-violation . g$8751$1VmeqK)
        (make-irritants-condition . g$8665$1VmeqK)
        (make-implementation-restriction-violation . g$8738$1VmeqK)
        (make-error . g$8626$1VmeqK)
        (make-assertion-violation . g$8652$1VmeqK)
        (lexical-violation? . g$8752$1VmeqK)
        (irritants-condition? . g$8667$1VmeqK)
        (implementation-restriction-violation? . g$8739$1VmeqK)
        (error? . g$8627$1VmeqK)
        (condition-who . g$8683$1VmeqK)
        (condition-predicate . g$15673$1VmeqK)
        (condition-message . g$8588$1VmeqK)
        (condition-irritants . g$8668$1VmeqK)
        (condition-accessor . g$15672$1VmeqK)
        (condition . g$15671$1VmeqK)
        (assertion-violation? . g$8653$1VmeqK)
        (condition? . g$15670$1VmeqK)
        (utf32->string . g$7933$1VmeqK)
        (utf16->string . g$7932$1VmeqK)
        (utf8->string . g$7930$1VmeqK)
        (uint-list->bytevector . g$7934$1VmeqK)
        (u8-list->bytevector . g$7926$1VmeqK)
        (string->utf8 . g$7927$1VmeqK)
        (string->utf32 . g$7929$1VmeqK)
        (string->utf16 . g$7928$1VmeqK)
        (sint-list->bytevector . g$7935$1VmeqK)
        (native-endianness . g$7901$1VmeqK)
        (bytevector? . g$7583$1VmeqK)
        (bytevector=? . g$7917$1VmeqK)
        (bytevector-uint-set! . g$15669$1VmeqK)
        (bytevector-uint-ref . g$15668$1VmeqK)
        (bytevector-u8-set! . g$7922$1VmeqK)
        (bytevector-u8-ref . g$7921$1VmeqK)
        (bytevector-u64-set! . g$7963$1VmeqK)
        (bytevector-u64-ref . g$7959$1VmeqK)
        (bytevector-u64-native-set! . g$7965$1VmeqK)
        (bytevector-u64-native-ref . g$7961$1VmeqK)
        (bytevector-u32-set! . g$7955$1VmeqK)
        (bytevector-u32-ref . g$7951$1VmeqK)
        (bytevector-u32-native-set! . g$7957$1VmeqK)
        (bytevector-u32-native-ref . g$7953$1VmeqK)
        (bytevector-u16-set! . g$7947$1VmeqK)
        (bytevector-u16-ref . g$7943$1VmeqK)
        (bytevector-u16-native-set! . g$7949$1VmeqK)
        (bytevector-u16-native-ref . g$7945$1VmeqK)
        (bytevector-sint-set! . g$15667$1VmeqK)
        (bytevector-sint-ref . g$15666$1VmeqK)
        (bytevector-s8-set! . g$7924$1VmeqK)
        (bytevector-s8-ref . g$7923$1VmeqK)
        (bytevector-s64-set! . g$7964$1VmeqK)
        (bytevector-s64-ref . g$7960$1VmeqK)
        (bytevector-s64-native-set! . g$7966$1VmeqK)
        (bytevector-s64-native-ref . g$7962$1VmeqK)
        (bytevector-s32-set! . g$7956$1VmeqK)
        (bytevector-s32-ref . g$7952$1VmeqK)
        (bytevector-s32-native-set! . g$7958$1VmeqK)
        (bytevector-s32-native-ref . g$7954$1VmeqK)
        (bytevector-s16-set! . g$7948$1VmeqK)
        (bytevector-s16-ref . g$7944$1VmeqK)
        (bytevector-s16-native-set! . g$7950$1VmeqK)
        (bytevector-s16-native-ref . g$7946$1VmeqK)
        (bytevector-length . g$7916$1VmeqK)
        (bytevector-ieee-single-set! . g$7941$1VmeqK)
        (bytevector-ieee-single-ref . g$7939$1VmeqK)
        (bytevector-ieee-single-native-set! . g$7969$1VmeqK)
        (bytevector-ieee-single-native-ref . g$7967$1VmeqK)
        (bytevector-ieee-double-set! . g$7942$1VmeqK)
        (bytevector-ieee-double-ref . g$7940$1VmeqK)
        (bytevector-ieee-double-native-set! . g$7970$1VmeqK)
        (bytevector-ieee-double-native-ref . g$7968$1VmeqK)
        (bytevector-fill! . g$7918$1VmeqK)
        (bytevector-copy! . g$7919$1VmeqK)
        (bytevector-copy . g$7920$1VmeqK)
        (bytevector->uint-list . g$7936$1VmeqK)
        (bytevector->u8-list . g$7925$1VmeqK)
        (bytevector->sint-list . g$7937$1VmeqK)
        (no-nans-violation? . g$8972$1VmeqK)
        (no-infinities-violation? . g$8959$1VmeqK)
        (make-no-nans-violation . g$8971$1VmeqK)
        (make-no-infinities-violation . g$8958$1VmeqK)
        (real->flonum . g$8215$1VmeqK)
        (flzero? . g$10254$1VmeqK)
        (fltruncate . g$10249$1VmeqK)
        (fltan . g$10235$1VmeqK)
        (flsqrt . g$10240$1VmeqK)
        (flsin . g$10233$1VmeqK)
        (flround . g$10250$1VmeqK)
        (flpositive? . g$10252$1VmeqK)
        (flonum? . g$7588$1VmeqK)
        (flodd? . g$10256$1VmeqK)
        (flnumerator . g$10199$1VmeqK)
        (flnegative? . g$10253$1VmeqK)
        (flnan? . g$10232$1VmeqK)
        (flmod0 . g$10217$1VmeqK)
        (flmod . g$10216$1VmeqK)
        (flmin . g$10258$1VmeqK)
        (flmax . g$10257$1VmeqK)
        (fllog . g$10239$1VmeqK)
        (flinteger? . g$10225$1VmeqK)
        (flinfinite? . g$10231$1VmeqK)
        (flfloor . g$10248$1VmeqK)
        (flfinite? . g$10226$1VmeqK)
        (flexpt . g$10242$1VmeqK)
        (flexp . g$10241$1VmeqK)
        (fleven? . g$10255$1VmeqK)
        (fldiv0-and-mod0 . g$10224$1VmeqK)
        (fldiv0 . g$10211$1VmeqK)
        (fldiv-and-mod . g$10218$1VmeqK)
        (fldiv . g$10223$1VmeqK)
        (fldenominator . g$10198$1VmeqK)
        (flcos . g$10234$1VmeqK)
        (flceiling . g$10243$1VmeqK)
        (flatan . g$10238$1VmeqK)
        (flasin . g$10236$1VmeqK)
        (flacos . g$10237$1VmeqK)
        (flabs . g$10251$1VmeqK)
        (fl>? . g$10205$1VmeqK)
        (fl>=? . g$10206$1VmeqK)
        (fl=? . g$10202$1VmeqK)
        (fl<? . g$10203$1VmeqK)
        (fl<=? . g$10204$1VmeqK)
        (fl/ . g$10201$1VmeqK)
        (fl- . g$10200$1VmeqK)
        (fl+ . g$10196$1VmeqK)
        (fl* . g$10197$1VmeqK)
        (fixnum->flonum . g$8216$1VmeqK)
        (fxzero? . g$9299$1VmeqK)
        (fxxor . g$9262$1VmeqK)
        (fxrotate-bit-field . g$9337$1VmeqK)
        (fxreverse-bit-field . g$9338$1VmeqK)
        (fxpositive? . g$9289$1VmeqK)
        (fxodd? . g$9309$1VmeqK)
        (fxnot . g$9243$1VmeqK)
        (fxnegative? . g$9294$1VmeqK)
        (fxmod0 . g$9273$1VmeqK)
        (fxmod . g$9272$1VmeqK)
        (fxmin . g$9311$1VmeqK)
        (fxmax . g$9310$1VmeqK)
        (fxlength . g$9240$1VmeqK)
        (fxior . g$9261$1VmeqK)
        (fxif . g$9319$1VmeqK)
        (fxfirst-bit-set . g$9241$1VmeqK)
        (fxeven? . g$9304$1VmeqK)
        (fxdiv0-and-mod0 . g$9284$1VmeqK)
        (fxdiv0 . g$9279$1VmeqK)
        (fxdiv-and-mod . g$9274$1VmeqK)
        (fxdiv . g$9267$1VmeqK)
        (fxcopy-bit-field . g$9334$1VmeqK)
        (fxcopy-bit . g$9324$1VmeqK)
        (fxbit-set? . g$9242$1VmeqK)
        (fxbit-field . g$9329$1VmeqK)
        (fxbit-count . g$9235$1VmeqK)
        (fxarithmetic-shift-right . g$9336$1VmeqK)
        (fxarithmetic-shift-left . g$9335$1VmeqK)
        (fxarithmetic-shift . g$9230$1VmeqK)
        (fxand . g$9260$1VmeqK)
        (fx>? . g$9252$1VmeqK)
        (fx>=? . g$9253$1VmeqK)
        (fx=? . g$9249$1VmeqK)
        (fx<? . g$9250$1VmeqK)
        (fx<=? . g$9251$1VmeqK)
        (fx-/carry . g$9313$1VmeqK)
        (fx- . g$9224$1VmeqK)
        (fx+/carry . g$9314$1VmeqK)
        (fx+ . g$9222$1VmeqK)
        (fx*/carry . g$9312$1VmeqK)
        (fx* . g$9223$1VmeqK)
        (greatest-fixnum . g$9193$1VmeqK)
        (least-fixnum . g$9194$1VmeqK)
        (fixnum-width . g$7589$1VmeqK)
        (fixnum? . g$7587$1VmeqK)
        (bitwise-rotate-bit-field . g$9131$1VmeqK)
        (bitwise-reverse-bit-field . g$15665$1VmeqK)
        (bitwise-length . g$9122$1VmeqK)
        (bitwise-if . g$9125$1VmeqK)
        (bitwise-first-bit-set . g$9123$1VmeqK)
        (bitwise-copy-bit-field . g$9128$1VmeqK)
        (bitwise-copy-bit . g$9126$1VmeqK)
        (bitwise-bit-set? . g$9124$1VmeqK)
        (bitwise-bit-field . g$9127$1VmeqK)
        (bitwise-bit-count . g$9121$1VmeqK)
        (bitwise-xor . g$9120$1VmeqK)
        (bitwise-ior . g$9119$1VmeqK)
        (bitwise-and . g$9118$1VmeqK)
        (bitwise-not . g$9117$1VmeqK)
        (bitwise-arithmetic-shift-right . g$9130$1VmeqK)
        (bitwise-arithmetic-shift-left . g$9129$1VmeqK)
        (bitwise-arithmetic-shift . g$15664$1VmeqK)
        (zero? . g$8230$1VmeqK)
        (vector? . g$7582$1VmeqK)
        (vector-set! . g$7598$1VmeqK)
        (vector-ref . g$7597$1VmeqK)
        (vector-map . g$7661$1VmeqK)
        (vector-length . g$15663$1VmeqK)
        (vector-for-each . g$7662$1VmeqK)
        (vector-fill! . g$7599$1VmeqK)
        (vector->list . g$15662$1VmeqK)
        (vector . g$15661$1VmeqK)
        (values . g$15660$1VmeqK)
        (truncate . g$8282$1VmeqK)
        (tan . g$8274$1VmeqK)
        (symbol? . g$7584$1VmeqK)
        (symbol=? . g$7646$1VmeqK)
        (symbol->string . g$15659$1VmeqK)
        (substring . g$15658$1VmeqK)
        (string? . g$15657$1VmeqK)
        (string>? . g$7643$1VmeqK)
        (string>=? . g$7645$1VmeqK)
        (string=? . g$7641$1VmeqK)
        (string<? . g$7642$1VmeqK)
        (string<=? . g$7644$1VmeqK)
        (string-ref . g$15656$1VmeqK)
        (string-length . g$15655$1VmeqK)
        (string-for-each . g$7663$1VmeqK)
        (string-copy . g$15654$1VmeqK)
        (string-append . g$15653$1VmeqK)
        (string->symbol . g$15652$1VmeqK)
        (string->number . g$15651$1VmeqK)
        (string->list . g$15650$1VmeqK)
        (string . g$15649$1VmeqK)
        (sqrt . g$8284$1VmeqK)
        (sin . g$8268$1VmeqK)
        (round . g$8283$1VmeqK)
        (reverse . g$7601$1VmeqK)
        (real? . g$8224$1VmeqK)
        (real-valued? . g$8227$1VmeqK)
        (real-part . g$8261$1VmeqK)
        (rationalize . g$7658$1VmeqK)
        (rational? . g$8225$1VmeqK)
        (rational-valued? . g$8228$1VmeqK)
        (procedure? . g$7586$1VmeqK)
        (positive? . g$8231$1VmeqK)
        (pair? . g$15648$1VmeqK)
        (odd? . g$7631$1VmeqK)
        (numerator . g$8259$1VmeqK)
        (number? . g$8217$1VmeqK)
        (number->string . g$8238$1VmeqK)
        (null? . g$15647$1VmeqK)
        (not . g$15646$1VmeqK)
        (negative? . g$8232$1VmeqK)
        (nan? . g$8218$1VmeqK)
        (min . g$7633$1VmeqK)
        (max . g$7632$1VmeqK)
        (map . g$7244$1VmeqK)
        (make-vector . g$15645$1VmeqK)
        (make-string . g$15644$1VmeqK)
        (make-rectangular . g$8254$1VmeqK)
        (make-polar . g$8255$1VmeqK)
        (magnitude . g$8257$1VmeqK)
        (log . g$8277$1VmeqK)
        (list? . g$15643$1VmeqK)
        (list-tail . g$7224$1VmeqK)
        (list-ref . g$7225$1VmeqK)
        (list->vector . g$7595$1VmeqK)
        (list->string . g$7596$1VmeqK)
        (list . g$15642$1VmeqK)
        (length . g$15641$1VmeqK)
        (lcm . g$7635$1VmeqK)
        (integer? . g$8226$1VmeqK)
        (integer-valued? . g$8229$1VmeqK)
        (integer->char . g$15640$1VmeqK)
        (infinite? . g$8220$1VmeqK)
        (inexact? . g$8222$1VmeqK)
        (inexact . g$8233$1VmeqK)
        (imag-part . g$8262$1VmeqK)
        (gcd . g$7634$1VmeqK)
        (for-each . g$7245$1VmeqK)
        (floor . g$8280$1VmeqK)
        (finite? . g$8219$1VmeqK)
        (expt . g$8286$1VmeqK)
        (exp . g$8267$1VmeqK)
        (exact? . g$8221$1VmeqK)
        (exact-integer-sqrt . g$8285$1VmeqK)
        (exact . g$8234$1VmeqK)
        (even? . g$7630$1VmeqK)
        (error . g$15639$1VmeqK)
        (eqv? . g$15638$1VmeqK)
        (equal? . g$15637$1VmeqK)
        (eq? . g$15636$1VmeqK)
        (dynamic-wind . g$15635$1VmeqK)
        (div0-and-mod0 . g$7594$1VmeqK)
        (mod0 . g$7592$1VmeqK)
        (div0 . g$7590$1VmeqK)
        (div-and-mod . g$7593$1VmeqK)
        (mod . g$7591$1VmeqK)
        (div . g$8278$1VmeqK)
        (denominator . g$8260$1VmeqK)
        (cos . g$8271$1VmeqK)
        (cons . g$15634$1VmeqK)
        (complex? . g$8223$1VmeqK)
        (char? . g$7581$1VmeqK)
        (char>? . g$7655$1VmeqK)
        (char>=? . g$7657$1VmeqK)
        (char=? . g$7653$1VmeqK)
        (char<? . g$7654$1VmeqK)
        (char<=? . g$7656$1VmeqK)
        (char->integer . g$15633$1VmeqK)
        (ceiling . g$8281$1VmeqK)
        (call-with-values . g$15632$1VmeqK)
        (call/cc . g$15631$1VmeqK)
        (call-with-current-continuation . g$15630$1VmeqK)
        (cddddr . g$7629$1VmeqK)
        (cdddar . g$7628$1VmeqK)
        (cddadr . g$7627$1VmeqK)
        (cddaar . g$7626$1VmeqK)
        (cdaddr . g$7625$1VmeqK)
        (cdadar . g$7624$1VmeqK)
        (cdaadr . g$7623$1VmeqK)
        (cdaaar . g$7622$1VmeqK)
        (cadddr . g$7621$1VmeqK)
        (caddar . g$7620$1VmeqK)
        (cadadr . g$7619$1VmeqK)
        (cadaar . g$7618$1VmeqK)
        (caaddr . g$7617$1VmeqK)
        (caadar . g$7616$1VmeqK)
        (caaadr . g$7615$1VmeqK)
        (caaaar . g$7614$1VmeqK)
        (cdddr . g$7613$1VmeqK)
        (cddar . g$7612$1VmeqK)
        (cdadr . g$7611$1VmeqK)
        (cdaar . g$7610$1VmeqK)
        (caddr . g$7609$1VmeqK)
        (cadar . g$7608$1VmeqK)
        (caadr . g$7607$1VmeqK)
        (caaar . g$7606$1VmeqK)
        (cddr . g$7605$1VmeqK)
        (cdar . g$7604$1VmeqK)
        (cadr . g$7603$1VmeqK)
        (caar . g$7602$1VmeqK)
        (cdr . g$15629$1VmeqK)
        (car . g$15628$1VmeqK)
        (boolean? . g$7585$1VmeqK)
        (boolean=? . g$7647$1VmeqK)
        (atan . g$8276$1VmeqK)
        (assertion-violation . g$15627$1VmeqK)
        (asin . g$8269$1VmeqK)
        (apply . g$15626$1VmeqK)
        (append . g$15625$1VmeqK)
        (angle . g$8256$1VmeqK)
        (acos . g$8272$1VmeqK)
        (abs . g$8279$1VmeqK)
        (/ . g$15624$1VmeqK)
        (* . g$15623$1VmeqK)
        (- . g$15622$1VmeqK)
        (+ . g$15621$1VmeqK)
        (>= . g$8253$1VmeqK)
        (> . g$8252$1VmeqK)
        (= . g$8249$1VmeqK)
        (<= . g$8251$1VmeqK)
        (< . g$8250$1VmeqK)
        (&no-nans . g$15542$1VmeqK)
        (&no-infinities . g$15541$1VmeqK)
        (&i/o-encoding . g$15540$1VmeqK)
        (&i/o-decoding . g$15539$1VmeqK)
        (&i/o-port . g$15538$1VmeqK)
        (&i/o-file-does-not-exist . g$15537$1VmeqK)
        (&i/o-file-already-exists . g$15536$1VmeqK)
        (&i/o-file-is-read-only . g$15535$1VmeqK)
        (&i/o-file-protection . g$15534$1VmeqK)
        (&i/o-filename . g$15533$1VmeqK)
        (&i/o-invalid-position . g$15532$1VmeqK)
        (&i/o-write . g$15531$1VmeqK)
        (&i/o-read . g$15530$1VmeqK)
        (&i/o . g$15529$1VmeqK)
        (&non-continuable . g$15528$1VmeqK)
        (&undefined . g$15527$1VmeqK)
        (&syntax . g$15526$1VmeqK)
        (&lexical . g$15525$1VmeqK)
        (&implementation-restriction . g$15524$1VmeqK)
        (&who . g$15523$1VmeqK)
        (&irritants . g$15522$1VmeqK)
        (&assertion . g$15521$1VmeqK)
        (&violation . g$15520$1VmeqK)
        (&error . g$15519$1VmeqK)
        (&serious . g$15518$1VmeqK)
        (&warning . g$15517$1VmeqK)
        (&message . g$15516$1VmeqK)
        (&condition . g$15515$1VmeqK)
        (define-condition-type . g$15514$1VmeqK)
        (define-enumeration . g$15513$1VmeqK)
        (define-record-type . g$15512$1VmeqK)
        (parent-rtd . g$15511$1VmeqK)
        (nongenerative . g$15510$1VmeqK)
        (opaque . g$15509$1VmeqK)
        (sealed . g$15508$1VmeqK)
        (protocol . g$15507$1VmeqK)
        (parent . g$15506$1VmeqK)
        (immutable . g$15505$1VmeqK)
        (mutable . g$15504$1VmeqK)
        (fields . g$15503$1VmeqK)
        (error-handling-mode . g$15502$1VmeqK)
        (file-options . g$15501$1VmeqK)
        (buffer-mode . g$15500$1VmeqK)
        (eol-style . g$15499$1VmeqK)
        (guard . g$15498$1VmeqK)
        (unsyntax-splicing . g$15492$1VmeqK)
        (unsyntax . g$15491$1VmeqK)
        (unquote-splicing . g$15490$1VmeqK)
        (unquote . g$15489$1VmeqK)
        (_ . g$15488$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK)
        (... . g$15485$1VmeqK)
        (assert . g$15484$1VmeqK)
        (endianness . g$15483$1VmeqK)
        (or . g$15480$1VmeqK)
        (and . g$15479$1VmeqK)
        (do . g$15478$1VmeqK)
        (cond . g$15477$1VmeqK)
        (let* . g$15476$1VmeqK)
        (let . g$15475$1VmeqK)
        (identifier-syntax . g$15474$1VmeqK)
        (with-syntax . g$15473$1VmeqK)
        (quasisyntax . g$15472$1VmeqK)
        (quasiquote . g$15471$1VmeqK)
        (syntax-rules . g$15470$1VmeqK)
        (let-values . g$15466$1VmeqK)
        (let*-values . g$15465$1VmeqK)
        (record-constructor-descriptor . g$15464$1VmeqK)
        (record-type-descriptor . g$15463$1VmeqK)
        (case . g$15461$1VmeqK)
        (unless . g$15459$1VmeqK)
        (when . g$15458$1VmeqK)
        (if . g$15457$1VmeqK)
        (letrec* . g$15456$1VmeqK)
        (letrec . g$15455$1VmeqK)
        (case-lambda . g$15453$1VmeqK)
        (lambda . g$15452$1VmeqK)
        (syntax . g$15451$1VmeqK)
        (syntax-case . g$15450$1VmeqK)
        (quote . g$15449$1VmeqK)
        (letrec-syntax . g$15447$1VmeqK)
        (let-syntax . g$15446$1VmeqK)
        (set! . g$15445$1VmeqK)
        (begin . g$15441$1VmeqK)
        (define-syntax . g$15439$1VmeqK)
        (define . g$15438$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15838$1VmeqK
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$12340$1VmeqK)
        (quotient . g$8989$1VmeqK)
        (null-environment . g$12339$1VmeqK)
        (remainder . g$8990$1VmeqK)
        (modulo . g$8991$1VmeqK)
        (inexact->exact . g$8986$1VmeqK)
        (force . g$8993$1VmeqK)
        (exact->inexact . g$8987$1VmeqK)
        (delay . g$15482$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15839$1VmeqK
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$15478$1VmeqK)
        (unless . g$15459$1VmeqK)
        (when . g$15458$1VmeqK)
        (case-lambda . g$15453$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15840$1VmeqK
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$12342$1VmeqK) (environment . g$12338$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15841$1VmeqK
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$15679$1VmeqK) (set-car! . g$15678$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15842$1VmeqK
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$15681$1VmeqK) (string-set! . g$15680$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15843$1VmeqK
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$15682$1VmeqK) (command-line . g$15379$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15844$1VmeqK
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$12041$1VmeqK)
        (identifier? . g$12361$1VmeqK)
        (generate-temporaries . g$12350$1VmeqK)
        (free-identifier=? . g$12351$1VmeqK)
        (syntax->datum . g$12363$1VmeqK)
        (datum->syntax . g$12362$1VmeqK)
        (bound-identifier=? . g$12352$1VmeqK)
        (syntax-violation . g$12360$1VmeqK)
        (unsyntax-splicing . g$15492$1VmeqK)
        (unsyntax . g$15491$1VmeqK)
        (_ . g$15488$1VmeqK)
        (... . g$15485$1VmeqK)
        (with-syntax . g$15473$1VmeqK)
        (quasisyntax . g$15472$1VmeqK)
        (syntax . g$15451$1VmeqK)
        (syntax-case . g$15450$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15845$1VmeqK
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7895$1VmeqK)
        (file-exists? . g$7894$1VmeqK)
        (make-i/o-write-error . g$8820$1VmeqK)
        (make-i/o-read-error . g$8807$1VmeqK)
        (make-i/o-port-error . g$8915$1VmeqK)
        (make-i/o-invalid-position-error . g$8833$1VmeqK)
        (make-i/o-filename-error . g$8848$1VmeqK)
        (make-i/o-file-protection-error . g$8863$1VmeqK)
        (make-i/o-file-is-read-only-error . g$8876$1VmeqK)
        (make-i/o-file-does-not-exist-error . g$8902$1VmeqK)
        (make-i/o-file-already-exists-error . g$8889$1VmeqK)
        (make-i/o-error . g$8794$1VmeqK)
        (i/o-write-error? . g$8821$1VmeqK)
        (i/o-read-error? . g$8808$1VmeqK)
        (i/o-port-error? . g$8917$1VmeqK)
        (i/o-invalid-position-error? . g$8835$1VmeqK)
        (i/o-error-position . g$8836$1VmeqK)
        (i/o-filename-error? . g$8850$1VmeqK)
        (i/o-file-protection-error? . g$8864$1VmeqK)
        (i/o-file-is-read-only-error? . g$8877$1VmeqK)
        (i/o-file-does-not-exist-error? . g$8903$1VmeqK)
        (i/o-file-already-exists-error? . g$8890$1VmeqK)
        (i/o-error? . g$8795$1VmeqK)
        (i/o-error-port . g$8918$1VmeqK)
        (i/o-error-filename . g$8851$1VmeqK)
        (&i/o-port . g$15538$1VmeqK)
        (&i/o-file-does-not-exist . g$15537$1VmeqK)
        (&i/o-file-already-exists . g$15536$1VmeqK)
        (&i/o-file-is-read-only . g$15535$1VmeqK)
        (&i/o-file-protection . g$15534$1VmeqK)
        (&i/o-filename . g$15533$1VmeqK)
        (&i/o-invalid-position . g$15532$1VmeqK)
        (&i/o-write . g$15531$1VmeqK)
        (&i/o-read . g$15530$1VmeqK)
        (&i/o . g$15529$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15846$1VmeqK
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$15757$1VmeqK)
        (vector-sort . g$15756$1VmeqK)
        (list-sort . g$9010$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15847$1VmeqK
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$8230$1VmeqK)
        (vector? . g$7582$1VmeqK)
        (vector-set! . g$7598$1VmeqK)
        (vector-ref . g$7597$1VmeqK)
        (vector-map . g$7661$1VmeqK)
        (vector-length . g$15663$1VmeqK)
        (vector-for-each . g$7662$1VmeqK)
        (vector-fill! . g$7599$1VmeqK)
        (vector->list . g$15662$1VmeqK)
        (vector . g$15661$1VmeqK)
        (values . g$15660$1VmeqK)
        (truncate . g$8282$1VmeqK)
        (tan . g$8274$1VmeqK)
        (symbol? . g$7584$1VmeqK)
        (symbol=? . g$7646$1VmeqK)
        (symbol->string . g$15659$1VmeqK)
        (substring . g$15658$1VmeqK)
        (string? . g$15657$1VmeqK)
        (string>? . g$7643$1VmeqK)
        (string>=? . g$7645$1VmeqK)
        (string=? . g$7641$1VmeqK)
        (string<? . g$7642$1VmeqK)
        (string<=? . g$7644$1VmeqK)
        (string-ref . g$15656$1VmeqK)
        (string-length . g$15655$1VmeqK)
        (string-for-each . g$7663$1VmeqK)
        (string-copy . g$15654$1VmeqK)
        (string-append . g$15653$1VmeqK)
        (string->symbol . g$15652$1VmeqK)
        (string->number . g$15651$1VmeqK)
        (string->list . g$15650$1VmeqK)
        (string . g$15649$1VmeqK)
        (sqrt . g$8284$1VmeqK)
        (sin . g$8268$1VmeqK)
        (round . g$8283$1VmeqK)
        (reverse . g$7601$1VmeqK)
        (real? . g$8224$1VmeqK)
        (real-valued? . g$8227$1VmeqK)
        (real-part . g$8261$1VmeqK)
        (rationalize . g$7658$1VmeqK)
        (rational? . g$8225$1VmeqK)
        (rational-valued? . g$8228$1VmeqK)
        (procedure? . g$7586$1VmeqK)
        (positive? . g$8231$1VmeqK)
        (pair? . g$15648$1VmeqK)
        (odd? . g$7631$1VmeqK)
        (numerator . g$8259$1VmeqK)
        (number? . g$8217$1VmeqK)
        (number->string . g$8238$1VmeqK)
        (null? . g$15647$1VmeqK)
        (not . g$15646$1VmeqK)
        (negative? . g$8232$1VmeqK)
        (nan? . g$8218$1VmeqK)
        (min . g$7633$1VmeqK)
        (max . g$7632$1VmeqK)
        (map . g$7244$1VmeqK)
        (make-vector . g$15645$1VmeqK)
        (make-string . g$15644$1VmeqK)
        (make-rectangular . g$8254$1VmeqK)
        (make-polar . g$8255$1VmeqK)
        (magnitude . g$8257$1VmeqK)
        (log . g$8277$1VmeqK)
        (list? . g$15643$1VmeqK)
        (list-tail . g$7224$1VmeqK)
        (list-ref . g$7225$1VmeqK)
        (list->vector . g$7595$1VmeqK)
        (list->string . g$7596$1VmeqK)
        (list . g$15642$1VmeqK)
        (length . g$15641$1VmeqK)
        (lcm . g$7635$1VmeqK)
        (integer? . g$8226$1VmeqK)
        (integer-valued? . g$8229$1VmeqK)
        (integer->char . g$15640$1VmeqK)
        (infinite? . g$8220$1VmeqK)
        (inexact? . g$8222$1VmeqK)
        (inexact . g$8233$1VmeqK)
        (imag-part . g$8262$1VmeqK)
        (gcd . g$7634$1VmeqK)
        (for-each . g$7245$1VmeqK)
        (floor . g$8280$1VmeqK)
        (finite? . g$8219$1VmeqK)
        (expt . g$8286$1VmeqK)
        (exp . g$8267$1VmeqK)
        (exact? . g$8221$1VmeqK)
        (exact-integer-sqrt . g$8285$1VmeqK)
        (exact . g$8234$1VmeqK)
        (even? . g$7630$1VmeqK)
        (error . g$15639$1VmeqK)
        (eqv? . g$15638$1VmeqK)
        (equal? . g$15637$1VmeqK)
        (eq? . g$15636$1VmeqK)
        (dynamic-wind . g$15635$1VmeqK)
        (div0-and-mod0 . g$7594$1VmeqK)
        (mod0 . g$7592$1VmeqK)
        (div0 . g$7590$1VmeqK)
        (div-and-mod . g$7593$1VmeqK)
        (mod . g$7591$1VmeqK)
        (div . g$8278$1VmeqK)
        (denominator . g$8260$1VmeqK)
        (cos . g$8271$1VmeqK)
        (cons . g$15634$1VmeqK)
        (complex? . g$8223$1VmeqK)
        (char? . g$7581$1VmeqK)
        (char>? . g$7655$1VmeqK)
        (char>=? . g$7657$1VmeqK)
        (char=? . g$7653$1VmeqK)
        (char<? . g$7654$1VmeqK)
        (char<=? . g$7656$1VmeqK)
        (char->integer . g$15633$1VmeqK)
        (ceiling . g$8281$1VmeqK)
        (call-with-values . g$15632$1VmeqK)
        (call/cc . g$15631$1VmeqK)
        (call-with-current-continuation . g$15630$1VmeqK)
        (cddddr . g$7629$1VmeqK)
        (cdddar . g$7628$1VmeqK)
        (cddadr . g$7627$1VmeqK)
        (cddaar . g$7626$1VmeqK)
        (cdaddr . g$7625$1VmeqK)
        (cdadar . g$7624$1VmeqK)
        (cdaadr . g$7623$1VmeqK)
        (cdaaar . g$7622$1VmeqK)
        (cadddr . g$7621$1VmeqK)
        (caddar . g$7620$1VmeqK)
        (cadadr . g$7619$1VmeqK)
        (cadaar . g$7618$1VmeqK)
        (caaddr . g$7617$1VmeqK)
        (caadar . g$7616$1VmeqK)
        (caaadr . g$7615$1VmeqK)
        (caaaar . g$7614$1VmeqK)
        (cdddr . g$7613$1VmeqK)
        (cddar . g$7612$1VmeqK)
        (cdadr . g$7611$1VmeqK)
        (cdaar . g$7610$1VmeqK)
        (caddr . g$7609$1VmeqK)
        (cadar . g$7608$1VmeqK)
        (caadr . g$7607$1VmeqK)
        (caaar . g$7606$1VmeqK)
        (cddr . g$7605$1VmeqK)
        (cdar . g$7604$1VmeqK)
        (cadr . g$7603$1VmeqK)
        (caar . g$7602$1VmeqK)
        (cdr . g$15629$1VmeqK)
        (car . g$15628$1VmeqK)
        (boolean? . g$7585$1VmeqK)
        (boolean=? . g$7647$1VmeqK)
        (atan . g$8276$1VmeqK)
        (assertion-violation . g$15627$1VmeqK)
        (asin . g$8269$1VmeqK)
        (apply . g$15626$1VmeqK)
        (append . g$15625$1VmeqK)
        (angle . g$8256$1VmeqK)
        (acos . g$8272$1VmeqK)
        (abs . g$8279$1VmeqK)
        (/ . g$15624$1VmeqK)
        (* . g$15623$1VmeqK)
        (- . g$15622$1VmeqK)
        (+ . g$15621$1VmeqK)
        (>= . g$8253$1VmeqK)
        (> . g$8252$1VmeqK)
        (= . g$8249$1VmeqK)
        (<= . g$8251$1VmeqK)
        (< . g$8250$1VmeqK)
        (unquote-splicing . g$15490$1VmeqK)
        (unquote . g$15489$1VmeqK)
        (_ . g$15488$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK)
        (... . g$15485$1VmeqK)
        (assert . g$15484$1VmeqK)
        (or . g$15480$1VmeqK)
        (and . g$15479$1VmeqK)
        (cond . g$15477$1VmeqK)
        (let* . g$15476$1VmeqK)
        (let . g$15475$1VmeqK)
        (identifier-syntax . g$15474$1VmeqK)
        (quasiquote . g$15471$1VmeqK)
        (syntax-rules . g$15470$1VmeqK)
        (let-values . g$15466$1VmeqK)
        (let*-values . g$15465$1VmeqK)
        (case . g$15461$1VmeqK)
        (if . g$15457$1VmeqK)
        (letrec* . g$15456$1VmeqK)
        (letrec . g$15455$1VmeqK)
        (lambda . g$15452$1VmeqK)
        (quote . g$15449$1VmeqK)
        (letrec-syntax . g$15447$1VmeqK)
        (let-syntax . g$15446$1VmeqK)
        (set! . g$15445$1VmeqK)
        (begin . g$15441$1VmeqK)
        (define-syntax . g$15439$1VmeqK)
        (define . g$15438$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15848$1VmeqK
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$7249$1VmeqK)
        (remv . g$7250$1VmeqK)
        (remp . g$7230$1VmeqK)
        (remq . g$7251$1VmeqK)
        (partition . g$7229$1VmeqK)
        (memv . g$7237$1VmeqK)
        (memq . g$7236$1VmeqK)
        (memp . g$7239$1VmeqK)
        (member . g$7238$1VmeqK)
        (exists . g$7243$1VmeqK)
        (for-all . g$7242$1VmeqK)
        (fold-right . g$7248$1VmeqK)
        (fold-left . g$7247$1VmeqK)
        (find . g$7228$1VmeqK)
        (filter . g$7231$1VmeqK)
        (cons* . g$7246$1VmeqK)
        (assv . g$7233$1VmeqK)
        (assq . g$7232$1VmeqK)
        (assp . g$7235$1VmeqK)
        (assoc . g$7234$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15849$1VmeqK
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$10849$1VmeqK)
        (call-with-input-file . g$10848$1VmeqK)
        (write-char . g$10840$1VmeqK)
        (write . g$15747$1VmeqK)
        (with-output-to-file . g$10847$1VmeqK)
        (with-input-from-file . g$10846$1VmeqK)
        (read-char . g$10839$1VmeqK)
        (read . g$15746$1VmeqK)
        (peek-char . g$10838$1VmeqK)
        (open-output-file . g$15745$1VmeqK)
        (open-input-file . g$15744$1VmeqK)
        (newline . g$10850$1VmeqK)
        (display . g$15743$1VmeqK)
        (close-output-port . g$15742$1VmeqK)
        (close-input-port . g$15741$1VmeqK)
        (eof-object? . g$15740$1VmeqK)
        (eof-object . g$15739$1VmeqK)
        (current-error-port . g$15738$1VmeqK)
        (current-output-port . g$15737$1VmeqK)
        (current-input-port . g$15736$1VmeqK)
        (output-port? . g$15735$1VmeqK)
        (input-port? . g$15734$1VmeqK)
        (make-i/o-write-error . g$8820$1VmeqK)
        (make-i/o-read-error . g$8807$1VmeqK)
        (make-i/o-port-error . g$8915$1VmeqK)
        (make-i/o-invalid-position-error . g$8833$1VmeqK)
        (make-i/o-filename-error . g$8848$1VmeqK)
        (make-i/o-file-protection-error . g$8863$1VmeqK)
        (make-i/o-file-is-read-only-error . g$8876$1VmeqK)
        (make-i/o-file-does-not-exist-error . g$8902$1VmeqK)
        (make-i/o-file-already-exists-error . g$8889$1VmeqK)
        (make-i/o-error . g$8794$1VmeqK)
        (i/o-write-error? . g$8821$1VmeqK)
        (i/o-read-error? . g$8808$1VmeqK)
        (i/o-port-error? . g$8917$1VmeqK)
        (i/o-invalid-position-error? . g$8835$1VmeqK)
        (i/o-error-position . g$8836$1VmeqK)
        (i/o-filename-error? . g$8850$1VmeqK)
        (i/o-file-protection-error? . g$8864$1VmeqK)
        (i/o-file-is-read-only-error? . g$8877$1VmeqK)
        (i/o-file-does-not-exist-error? . g$8903$1VmeqK)
        (i/o-file-already-exists-error? . g$8890$1VmeqK)
        (i/o-error? . g$8795$1VmeqK)
        (i/o-error-port . g$8918$1VmeqK)
        (i/o-error-filename . g$8851$1VmeqK)
        (&i/o-port . g$15538$1VmeqK)
        (&i/o-file-does-not-exist . g$15537$1VmeqK)
        (&i/o-file-already-exists . g$15536$1VmeqK)
        (&i/o-file-is-read-only . g$15535$1VmeqK)
        (&i/o-file-protection . g$15534$1VmeqK)
        (&i/o-filename . g$15533$1VmeqK)
        (&i/o-invalid-position . g$15532$1VmeqK)
        (&i/o-write . g$15531$1VmeqK)
        (&i/o-read . g$15530$1VmeqK)
        (&i/o . g$15529$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15850$1VmeqK
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$7915$1VmeqK)
        (utf32->string . g$7933$1VmeqK)
        (utf16->string . g$7932$1VmeqK)
        (utf8->string . g$7930$1VmeqK)
        (uint-list->bytevector . g$7934$1VmeqK)
        (u8-list->bytevector . g$7926$1VmeqK)
        (string->utf8 . g$7927$1VmeqK)
        (string->utf32 . g$7929$1VmeqK)
        (string->utf16 . g$7928$1VmeqK)
        (sint-list->bytevector . g$7935$1VmeqK)
        (native-endianness . g$7901$1VmeqK)
        (bytevector? . g$7583$1VmeqK)
        (bytevector=? . g$7917$1VmeqK)
        (bytevector-uint-set! . g$15669$1VmeqK)
        (bytevector-uint-ref . g$15668$1VmeqK)
        (bytevector-u8-set! . g$7922$1VmeqK)
        (bytevector-u8-ref . g$7921$1VmeqK)
        (bytevector-u64-set! . g$7963$1VmeqK)
        (bytevector-u64-ref . g$7959$1VmeqK)
        (bytevector-u64-native-set! . g$7965$1VmeqK)
        (bytevector-u64-native-ref . g$7961$1VmeqK)
        (bytevector-u32-set! . g$7955$1VmeqK)
        (bytevector-u32-ref . g$7951$1VmeqK)
        (bytevector-u32-native-set! . g$7957$1VmeqK)
        (bytevector-u32-native-ref . g$7953$1VmeqK)
        (bytevector-u16-set! . g$7947$1VmeqK)
        (bytevector-u16-ref . g$7943$1VmeqK)
        (bytevector-u16-native-set! . g$7949$1VmeqK)
        (bytevector-u16-native-ref . g$7945$1VmeqK)
        (bytevector-sint-set! . g$15667$1VmeqK)
        (bytevector-sint-ref . g$15666$1VmeqK)
        (bytevector-s8-set! . g$7924$1VmeqK)
        (bytevector-s8-ref . g$7923$1VmeqK)
        (bytevector-s64-set! . g$7964$1VmeqK)
        (bytevector-s64-ref . g$7960$1VmeqK)
        (bytevector-s64-native-set! . g$7966$1VmeqK)
        (bytevector-s64-native-ref . g$7962$1VmeqK)
        (bytevector-s32-set! . g$7956$1VmeqK)
        (bytevector-s32-ref . g$7952$1VmeqK)
        (bytevector-s32-native-set! . g$7958$1VmeqK)
        (bytevector-s32-native-ref . g$7954$1VmeqK)
        (bytevector-s16-set! . g$7948$1VmeqK)
        (bytevector-s16-ref . g$7944$1VmeqK)
        (bytevector-s16-native-set! . g$7950$1VmeqK)
        (bytevector-s16-native-ref . g$7946$1VmeqK)
        (bytevector-length . g$7916$1VmeqK)
        (bytevector-ieee-single-set! . g$7941$1VmeqK)
        (bytevector-ieee-single-ref . g$7939$1VmeqK)
        (bytevector-ieee-single-native-set! . g$7969$1VmeqK)
        (bytevector-ieee-single-native-ref . g$7967$1VmeqK)
        (bytevector-ieee-double-set! . g$7942$1VmeqK)
        (bytevector-ieee-double-ref . g$7940$1VmeqK)
        (bytevector-ieee-double-native-set! . g$7970$1VmeqK)
        (bytevector-ieee-double-native-ref . g$7968$1VmeqK)
        (bytevector-fill! . g$7918$1VmeqK)
        (bytevector-copy! . g$7919$1VmeqK)
        (bytevector-copy . g$7920$1VmeqK)
        (bytevector->uint-list . g$7936$1VmeqK)
        (bytevector->u8-list . g$7925$1VmeqK)
        (bytevector->sint-list . g$7937$1VmeqK)
        (endianness . g$15483$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15851$1VmeqK
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$15789$1VmeqK)
        (string-titlecase . g$15788$1VmeqK)
        (string-normalize-nfkd . g$9057$1VmeqK)
        (string-normalize-nfkc . g$9056$1VmeqK)
        (string-normalize-nfd . g$9055$1VmeqK)
        (string-normalize-nfc . g$9054$1VmeqK)
        (string-foldcase . g$15787$1VmeqK)
        (string-downcase . g$15786$1VmeqK)
        (string-ci>? . g$9041$1VmeqK)
        (string-ci>=? . g$9043$1VmeqK)
        (string-ci=? . g$9039$1VmeqK)
        (string-ci<? . g$9040$1VmeqK)
        (string-ci<=? . g$9042$1VmeqK)
        (char-whitespace? . g$15785$1VmeqK)
        (char-upper-case? . g$15784$1VmeqK)
        (char-title-case? . g$15783$1VmeqK)
        (char-numeric? . g$15782$1VmeqK)
        (char-lower-case? . g$15781$1VmeqK)
        (char-general-category . g$15780$1VmeqK)
        (char-upcase . g$15779$1VmeqK)
        (char-titlecase . g$15778$1VmeqK)
        (char-foldcase . g$15777$1VmeqK)
        (char-downcase . g$15776$1VmeqK)
        (char-ci>? . g$9051$1VmeqK)
        (char-ci>=? . g$9053$1VmeqK)
        (char-ci=? . g$9049$1VmeqK)
        (char-ci<? . g$9050$1VmeqK)
        (char-ci<=? . g$9052$1VmeqK)
        (char-alphabetic? . g$15775$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15852$1VmeqK
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$15677$1VmeqK)
        (raise-continuable . g$15676$1VmeqK)
        (raise . g$15675$1VmeqK)
        (guard . g$15498$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15853$1VmeqK
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$9131$1VmeqK)
        (bitwise-reverse-bit-field . g$15665$1VmeqK)
        (bitwise-length . g$9122$1VmeqK)
        (bitwise-if . g$9125$1VmeqK)
        (bitwise-first-bit-set . g$9123$1VmeqK)
        (bitwise-copy-bit-field . g$9128$1VmeqK)
        (bitwise-copy-bit . g$9126$1VmeqK)
        (bitwise-bit-set? . g$9124$1VmeqK)
        (bitwise-bit-field . g$9127$1VmeqK)
        (bitwise-bit-count . g$9121$1VmeqK)
        (bitwise-xor . g$9120$1VmeqK)
        (bitwise-ior . g$9119$1VmeqK)
        (bitwise-and . g$9118$1VmeqK)
        (bitwise-not . g$9117$1VmeqK)
        (bitwise-arithmetic-shift-right . g$9130$1VmeqK)
        (bitwise-arithmetic-shift-left . g$9129$1VmeqK)
        (bitwise-arithmetic-shift . g$15664$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15854$1VmeqK
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$9299$1VmeqK)
        (fxxor . g$9262$1VmeqK)
        (fxrotate-bit-field . g$9337$1VmeqK)
        (fxreverse-bit-field . g$9338$1VmeqK)
        (fxpositive? . g$9289$1VmeqK)
        (fxodd? . g$9309$1VmeqK)
        (fxnot . g$9243$1VmeqK)
        (fxnegative? . g$9294$1VmeqK)
        (fxmod0 . g$9273$1VmeqK)
        (fxmod . g$9272$1VmeqK)
        (fxmin . g$9311$1VmeqK)
        (fxmax . g$9310$1VmeqK)
        (fxlength . g$9240$1VmeqK)
        (fxior . g$9261$1VmeqK)
        (fxif . g$9319$1VmeqK)
        (fxfirst-bit-set . g$9241$1VmeqK)
        (fxeven? . g$9304$1VmeqK)
        (fxdiv0-and-mod0 . g$9284$1VmeqK)
        (fxdiv0 . g$9279$1VmeqK)
        (fxdiv-and-mod . g$9274$1VmeqK)
        (fxdiv . g$9267$1VmeqK)
        (fxcopy-bit-field . g$9334$1VmeqK)
        (fxcopy-bit . g$9324$1VmeqK)
        (fxbit-set? . g$9242$1VmeqK)
        (fxbit-field . g$9329$1VmeqK)
        (fxbit-count . g$9235$1VmeqK)
        (fxarithmetic-shift-right . g$9336$1VmeqK)
        (fxarithmetic-shift-left . g$9335$1VmeqK)
        (fxarithmetic-shift . g$9230$1VmeqK)
        (fxand . g$9260$1VmeqK)
        (fx>? . g$9252$1VmeqK)
        (fx>=? . g$9253$1VmeqK)
        (fx=? . g$9249$1VmeqK)
        (fx<? . g$9250$1VmeqK)
        (fx<=? . g$9251$1VmeqK)
        (fx-/carry . g$9313$1VmeqK)
        (fx- . g$9224$1VmeqK)
        (fx+/carry . g$9314$1VmeqK)
        (fx+ . g$9222$1VmeqK)
        (fx*/carry . g$9312$1VmeqK)
        (fx* . g$9223$1VmeqK)
        (greatest-fixnum . g$9193$1VmeqK)
        (least-fixnum . g$9194$1VmeqK)
        (fixnum-width . g$7589$1VmeqK)
        (fixnum? . g$7587$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15855$1VmeqK
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$8972$1VmeqK)
        (no-infinities-violation? . g$8959$1VmeqK)
        (make-no-nans-violation . g$8971$1VmeqK)
        (make-no-infinities-violation . g$8958$1VmeqK)
        (real->flonum . g$8215$1VmeqK)
        (flzero? . g$10254$1VmeqK)
        (fltruncate . g$10249$1VmeqK)
        (fltan . g$10235$1VmeqK)
        (flsqrt . g$10240$1VmeqK)
        (flsin . g$10233$1VmeqK)
        (flround . g$10250$1VmeqK)
        (flpositive? . g$10252$1VmeqK)
        (flonum? . g$7588$1VmeqK)
        (flodd? . g$10256$1VmeqK)
        (flnumerator . g$10199$1VmeqK)
        (flnegative? . g$10253$1VmeqK)
        (flnan? . g$10232$1VmeqK)
        (flmod0 . g$10217$1VmeqK)
        (flmod . g$10216$1VmeqK)
        (flmin . g$10258$1VmeqK)
        (flmax . g$10257$1VmeqK)
        (fllog . g$10239$1VmeqK)
        (flinteger? . g$10225$1VmeqK)
        (flinfinite? . g$10231$1VmeqK)
        (flfloor . g$10248$1VmeqK)
        (flfinite? . g$10226$1VmeqK)
        (flexpt . g$10242$1VmeqK)
        (flexp . g$10241$1VmeqK)
        (fleven? . g$10255$1VmeqK)
        (fldiv0-and-mod0 . g$10224$1VmeqK)
        (fldiv0 . g$10211$1VmeqK)
        (fldiv-and-mod . g$10218$1VmeqK)
        (fldiv . g$10223$1VmeqK)
        (fldenominator . g$10198$1VmeqK)
        (flcos . g$10234$1VmeqK)
        (flceiling . g$10243$1VmeqK)
        (flatan . g$10238$1VmeqK)
        (flasin . g$10236$1VmeqK)
        (flacos . g$10237$1VmeqK)
        (flabs . g$10251$1VmeqK)
        (fl>? . g$10205$1VmeqK)
        (fl>=? . g$10206$1VmeqK)
        (fl=? . g$10202$1VmeqK)
        (fl<? . g$10203$1VmeqK)
        (fl<=? . g$10204$1VmeqK)
        (fl/ . g$10201$1VmeqK)
        (fl- . g$10200$1VmeqK)
        (fl+ . g$10196$1VmeqK)
        (fl* . g$10197$1VmeqK)
        (fixnum->flonum . g$8216$1VmeqK)
        (&no-nans . g$15542$1VmeqK)
        (&no-infinities . g$15541$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15856$1VmeqK
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$7865$1VmeqK)
        (string-ci-hash . g$7864$1VmeqK)
        (string-hash . g$7863$1VmeqK)
        (equal-hash . g$15755$1VmeqK)
        (hashtable-equivalence-function . g$15754$1VmeqK)
        (make-hashtable . g$15753$1VmeqK)
        (hashtable-hash-function . g$15752$1VmeqK)
        (make-eqv-hashtable . g$7855$1VmeqK)
        (make-eq-hashtable . g$7854$1VmeqK)
        (hashtable? . g$7853$1VmeqK)
        (hashtable-update! . g$7861$1VmeqK)
        (hashtable-size . g$7856$1VmeqK)
        (hashtable-set! . g$7858$1VmeqK)
        (hashtable-ref . g$7857$1VmeqK)
        (hashtable-mutable? . g$15751$1VmeqK)
        (hashtable-keys . g$15750$1VmeqK)
        (hashtable-entries . g$15749$1VmeqK)
        (hashtable-delete! . g$7859$1VmeqK)
        (hashtable-copy . g$15748$1VmeqK)
        (hashtable-contains? . g$7860$1VmeqK)
        (hashtable-clear! . g$7862$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15857$1VmeqK
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$15740$1VmeqK)
        (eof-object . g$15739$1VmeqK)
        (current-error-port . g$15738$1VmeqK)
        (current-output-port . g$15737$1VmeqK)
        (current-input-port . g$15736$1VmeqK)
        (output-port? . g$15735$1VmeqK)
        (input-port? . g$15734$1VmeqK)
        (utf-8-codec . g$15733$1VmeqK)
        (utf-16-codec . g$15732$1VmeqK)
        (transcoder-error-handling-mode . g$15731$1VmeqK)
        (transcoder-eol-style . g$15730$1VmeqK)
        (transcoder-codec . g$15729$1VmeqK)
        (transcoded-port . g$15728$1VmeqK)
        (textual-port? . g$15727$1VmeqK)
        (string->bytevector . g$15726$1VmeqK)
        (standard-output-port . g$10814$1VmeqK)
        (standard-input-port . g$10813$1VmeqK)
        (standard-error-port . g$10812$1VmeqK)
        (set-port-position! . g$15725$1VmeqK)
        (put-u8 . g$15724$1VmeqK)
        (put-string . g$15723$1VmeqK)
        (put-datum . g$10817$1VmeqK)
        (put-char . g$15722$1VmeqK)
        (put-bytevector . g$15721$1VmeqK)
        (port? . g$10822$1VmeqK)
        (port-transcoder . g$15720$1VmeqK)
        (port-position . g$15719$1VmeqK)
        (port-has-set-port-position!? . g$15718$1VmeqK)
        (port-has-port-position? . g$15717$1VmeqK)
        (port-eof? . g$15716$1VmeqK)
        (output-port-buffer-mode . g$15715$1VmeqK)
        (open-string-output-port . g$10821$1VmeqK)
        (open-string-input-port . g$15714$1VmeqK)
        (open-file-output-port . g$15713$1VmeqK)
        (open-file-input/output-port . g$15712$1VmeqK)
        (open-file-input-port . g$15711$1VmeqK)
        (open-bytevector-output-port . g$15710$1VmeqK)
        (open-bytevector-input-port . g$15709$1VmeqK)
        (native-transcoder . g$15708$1VmeqK)
        (native-eol-style . g$10815$1VmeqK)
        (make-transcoder . g$15707$1VmeqK)
        (latin-1-codec . g$15706$1VmeqK)
        (make-i/o-write-error . g$8820$1VmeqK)
        (make-i/o-read-error . g$8807$1VmeqK)
        (make-i/o-port-error . g$8915$1VmeqK)
        (make-i/o-invalid-position-error . g$8833$1VmeqK)
        (make-i/o-filename-error . g$8848$1VmeqK)
        (make-i/o-file-protection-error . g$8863$1VmeqK)
        (make-i/o-file-is-read-only-error . g$8876$1VmeqK)
        (make-i/o-file-does-not-exist-error . g$8902$1VmeqK)
        (make-i/o-file-already-exists-error . g$8889$1VmeqK)
        (make-i/o-error . g$8794$1VmeqK)
        (make-i/o-encoding-error . g$8943$1VmeqK)
        (make-i/o-decoding-error . g$8930$1VmeqK)
        (make-custom-textual-output-port . g$15705$1VmeqK)
        (make-custom-textual-input/output-port . g$15704$1VmeqK)
        (make-custom-textual-input-port . g$15703$1VmeqK)
        (make-custom-binary-output-port . g$15702$1VmeqK)
        (make-custom-binary-input/output-port . g$15701$1VmeqK)
        (make-custom-binary-input-port . g$15700$1VmeqK)
        (lookahead-u8 . g$15699$1VmeqK)
        (lookahead-char . g$15698$1VmeqK)
        (i/o-write-error? . g$8821$1VmeqK)
        (i/o-read-error? . g$8808$1VmeqK)
        (i/o-port-error? . g$8917$1VmeqK)
        (i/o-invalid-position-error? . g$8835$1VmeqK)
        (i/o-error-position . g$8836$1VmeqK)
        (i/o-filename-error? . g$8850$1VmeqK)
        (i/o-file-protection-error? . g$8864$1VmeqK)
        (i/o-file-is-read-only-error? . g$8877$1VmeqK)
        (i/o-file-does-not-exist-error? . g$8903$1VmeqK)
        (i/o-file-already-exists-error? . g$8890$1VmeqK)
        (i/o-error? . g$8795$1VmeqK)
        (i/o-error-port . g$8918$1VmeqK)
        (i/o-error-filename . g$8851$1VmeqK)
        (i/o-encoding-error? . g$8945$1VmeqK)
        (i/o-encoding-error-char . g$8946$1VmeqK)
        (i/o-decoding-error? . g$8931$1VmeqK)
        (get-u8 . g$15697$1VmeqK)
        (get-string-n! . g$15696$1VmeqK)
        (get-string-n . g$15695$1VmeqK)
        (get-string-all . g$15694$1VmeqK)
        (get-line . g$15693$1VmeqK)
        (get-datum . g$10818$1VmeqK)
        (get-char . g$15692$1VmeqK)
        (get-bytevector-some . g$15691$1VmeqK)
        (get-bytevector-n! . g$15690$1VmeqK)
        (get-bytevector-n . g$15689$1VmeqK)
        (get-bytevector-all . g$15688$1VmeqK)
        (flush-output-port . g$15687$1VmeqK)
        (close-port . g$15686$1VmeqK)
        (call-with-string-output-port . g$10823$1VmeqK)
        (call-with-port . g$10824$1VmeqK)
        (call-with-bytevector-output-port . g$15685$1VmeqK)
        (bytevector->string . g$15684$1VmeqK)
        (buffer-mode? . g$10816$1VmeqK)
        (binary-port? . g$15683$1VmeqK)
        (&i/o-encoding . g$15540$1VmeqK)
        (&i/o-decoding . g$15539$1VmeqK)
        (&i/o-port . g$15538$1VmeqK)
        (&i/o-file-does-not-exist . g$15537$1VmeqK)
        (&i/o-file-already-exists . g$15536$1VmeqK)
        (&i/o-file-is-read-only . g$15535$1VmeqK)
        (&i/o-file-protection . g$15534$1VmeqK)
        (&i/o-filename . g$15533$1VmeqK)
        (&i/o-invalid-position . g$15532$1VmeqK)
        (&i/o-write . g$15531$1VmeqK)
        (&i/o-read . g$15530$1VmeqK)
        (&i/o . g$15529$1VmeqK)
        (error-handling-mode . g$15502$1VmeqK)
        (file-options . g$15501$1VmeqK)
        (buffer-mode . g$15500$1VmeqK)
        (eol-style . g$15499$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15858$1VmeqK
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$10910$1VmeqK)
        (enum-set=? . g$10917$1VmeqK)
        (enum-set-universe . g$10911$1VmeqK)
        (enum-set-union . g$10918$1VmeqK)
        (enum-set-subset? . g$10916$1VmeqK)
        (enum-set-projection . g$10922$1VmeqK)
        (enum-set-member? . g$10915$1VmeqK)
        (enum-set-intersection . g$10919$1VmeqK)
        (enum-set-indexer . g$10912$1VmeqK)
        (enum-set-difference . g$10920$1VmeqK)
        (enum-set-constructor . g$10913$1VmeqK)
        (enum-set-complement . g$10921$1VmeqK)
        (enum-set->list . g$10914$1VmeqK)
        (define-enumeration . g$15513$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15859$1VmeqK
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$8682$1VmeqK)
        (warning? . g$8601$1VmeqK)
        (violation? . g$8640$1VmeqK)
        (undefined-violation? . g$8782$1VmeqK)
        (syntax-violation? . g$8767$1VmeqK)
        (syntax-violation-subform . g$8769$1VmeqK)
        (syntax-violation-form . g$8768$1VmeqK)
        (simple-conditions . g$15674$1VmeqK)
        (serious-condition? . g$8614$1VmeqK)
        (non-continuable-violation? . g$8726$1VmeqK)
        (message-condition? . g$8587$1VmeqK)
        (make-who-condition . g$8680$1VmeqK)
        (make-warning . g$8600$1VmeqK)
        (make-violation . g$8639$1VmeqK)
        (make-undefined-violation . g$8781$1VmeqK)
        (make-syntax-violation . g$8764$1VmeqK)
        (make-serious-condition . g$8613$1VmeqK)
        (make-non-continuable-violation . g$8725$1VmeqK)
        (make-message-condition . g$8585$1VmeqK)
        (make-lexical-violation . g$8751$1VmeqK)
        (make-irritants-condition . g$8665$1VmeqK)
        (make-implementation-restriction-violation . g$8738$1VmeqK)
        (make-error . g$8626$1VmeqK)
        (make-assertion-violation . g$8652$1VmeqK)
        (lexical-violation? . g$8752$1VmeqK)
        (irritants-condition? . g$8667$1VmeqK)
        (implementation-restriction-violation? . g$8739$1VmeqK)
        (error? . g$8627$1VmeqK)
        (condition-who . g$8683$1VmeqK)
        (condition-predicate . g$15673$1VmeqK)
        (condition-message . g$8588$1VmeqK)
        (condition-irritants . g$8668$1VmeqK)
        (condition-accessor . g$15672$1VmeqK)
        (condition . g$15671$1VmeqK)
        (assertion-violation? . g$8653$1VmeqK)
        (condition? . g$15670$1VmeqK)
        (&non-continuable . g$15528$1VmeqK)
        (&undefined . g$15527$1VmeqK)
        (&syntax . g$15526$1VmeqK)
        (&lexical . g$15525$1VmeqK)
        (&implementation-restriction . g$15524$1VmeqK)
        (&who . g$15523$1VmeqK)
        (&irritants . g$15522$1VmeqK)
        (&assertion . g$15521$1VmeqK)
        (&violation . g$15520$1VmeqK)
        (&error . g$15519$1VmeqK)
        (&serious . g$15518$1VmeqK)
        (&warning . g$15517$1VmeqK)
        (&message . g$15516$1VmeqK)
        (&condition . g$15515$1VmeqK)
        (define-condition-type . g$15514$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15860$1VmeqK
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$15767$1VmeqK)
        (record-type-uid . g$15766$1VmeqK)
        (record-type-sealed? . g$15765$1VmeqK)
        (record-type-parent . g$15764$1VmeqK)
        (record-type-opaque? . g$15763$1VmeqK)
        (record-type-name . g$15762$1VmeqK)
        (record-type-generative? . g$15761$1VmeqK)
        (record-type-field-names . g$15760$1VmeqK)
        (record-rtd . g$15759$1VmeqK)
        (record-field-mutable? . g$15758$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15861$1VmeqK
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$15774$1VmeqK)
        (record-predicate . g$15773$1VmeqK)
        (record-mutator . g$15772$1VmeqK)
        (record-constructor . g$15771$1VmeqK)
        (record-accessor . g$15770$1VmeqK)
        (make-record-type-descriptor . g$15769$1VmeqK)
        (make-record-constructor-descriptor . g$15768$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15862$1VmeqK
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$15512$1VmeqK)
        (parent-rtd . g$15511$1VmeqK)
        (nongenerative . g$15510$1VmeqK)
        (opaque . g$15509$1VmeqK)
        (sealed . g$15508$1VmeqK)
        (protocol . g$15507$1VmeqK)
        (parent . g$15506$1VmeqK)
        (immutable . g$15505$1VmeqK)
        (mutable . g$15504$1VmeqK)
        (fields . g$15503$1VmeqK)
        (record-constructor-descriptor . g$15464$1VmeqK)
        (record-type-descriptor . g$15463$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15863$1VmeqK
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$12237$1VmeqK)
        (&stacktrace-rcd . g$8715$1VmeqK)
        (&stacktrace-rtd . g$8714$1VmeqK)
        (&where-rcd . g$8700$1VmeqK)
        (&where-rtd . g$8699$1VmeqK)
        (&no-nans-rcd . g$8974$1VmeqK)
        (&no-nans-rtd . g$8973$1VmeqK)
        (&no-infinities-rcd . g$8961$1VmeqK)
        (&no-infinities-rtd . g$8960$1VmeqK)
        (&i/o-encoding-rcd . g$8948$1VmeqK)
        (&i/o-encoding-rtd . g$8947$1VmeqK)
        (&i/o-decoding-rcd . g$8933$1VmeqK)
        (&i/o-decoding-rtd . g$8932$1VmeqK)
        (&i/o-port-rcd . g$8920$1VmeqK)
        (&i/o-port-rtd . g$8919$1VmeqK)
        (&i/o-file-does-not-exist-rcd . g$8905$1VmeqK)
        (&i/o-file-does-not-exist-rtd . g$8904$1VmeqK)
        (&i/o-file-already-exists-rcd . g$8892$1VmeqK)
        (&i/o-file-already-exists-rtd . g$8891$1VmeqK)
        (&i/o-file-is-read-only-rcd . g$8879$1VmeqK)
        (&i/o-file-is-read-only-rtd . g$8878$1VmeqK)
        (&i/o-file-protection-rcd . g$8866$1VmeqK)
        (&i/o-file-protection-rtd . g$8865$1VmeqK)
        (&i/o-filename-rcd . g$8853$1VmeqK)
        (&i/o-filename-rtd . g$8852$1VmeqK)
        (&i/o-invalid-position-rcd . g$8838$1VmeqK)
        (&i/o-invalid-position-rtd . g$8837$1VmeqK)
        (&i/o-write-rcd . g$8823$1VmeqK)
        (&i/o-write-rtd . g$8822$1VmeqK)
        (&i/o-read-rcd . g$8810$1VmeqK)
        (&i/o-read-rtd . g$8809$1VmeqK)
        (&i/o-rcd . g$8797$1VmeqK)
        (&i/o-rtd . g$8796$1VmeqK)
        (&undefined-rcd . g$8784$1VmeqK)
        (&undefined-rtd . g$8783$1VmeqK)
        (&syntax-rcd . g$8771$1VmeqK)
        (&syntax-rtd . g$8770$1VmeqK)
        (&lexical-rcd . g$8754$1VmeqK)
        (&lexical-rtd . g$8753$1VmeqK)
        (&implementation-restriction-rcd . g$8741$1VmeqK)
        (&implementation-restriction-rtd . g$8740$1VmeqK)
        (&non-continuable-rcd . g$8728$1VmeqK)
        (&non-continuable-rtd . g$8727$1VmeqK)
        (&who-rcd . g$8685$1VmeqK)
        (&who-rtd . g$8684$1VmeqK)
        (&irritants-rcd . g$8670$1VmeqK)
        (&irritants-rtd . g$8669$1VmeqK)
        (&assertion-rcd . g$8655$1VmeqK)
        (&assertion-rtd . g$8654$1VmeqK)
        (&violation-rcd . g$8642$1VmeqK)
        (&violation-rtd . g$8641$1VmeqK)
        (&error-rcd . g$8629$1VmeqK)
        (&error-rtd . g$8628$1VmeqK)
        (&serious-rcd . g$8616$1VmeqK)
        (&serious-rtd . g$8615$1VmeqK)
        (&warning-rcd . g$8603$1VmeqK)
        (&warning-rtd . g$8602$1VmeqK)
        (&message-rcd . g$8590$1VmeqK)
        (&message-rtd . g$8589$1VmeqK)
        (&condition-rcd . g$8550$1VmeqK)
        (&condition-rtd . g$8549$1VmeqK)
        (library-letrec* . g$15826$1VmeqK)
        (annotation-stripped . g$15825$1VmeqK)
        (annotation-source . g$15824$1VmeqK)
        (annotation-expression . g$15823$1VmeqK)
        (annotation? . g$15822$1VmeqK)
        (read-annotated . g$15821$1VmeqK)
        (tanh . g$8275$1VmeqK)
        (cosh . g$8273$1VmeqK)
        (sinh . g$8270$1VmeqK)
        (make-guid . g$15820$1VmeqK)
        (unspecified? . g$15819$1VmeqK)
        (make-list . g$7227$1VmeqK)
        (last-pair . g$7226$1VmeqK)
        (load-r5rs . g$15818$1VmeqK)
        (license . g$15817$1VmeqK)
        (stacktrace . g$15816$1VmeqK)
        (ironscheme-test . g$15385$1VmeqK)
        (ironscheme-build . g$15386$1VmeqK)
        (pinvoke-call-internal . g$15815$1VmeqK)
        (ffi-callback-internal . g$15814$1VmeqK)
        (ffi-callout-internal . g$15813$1VmeqK)
        (define-clr-class-internal . g$15812$1VmeqK)
        (clr-field-set!-internal . g$15811$1VmeqK)
        (clr-field-get-internal . g$15810$1VmeqK)
        (clr-cast-internal . g$15809$1VmeqK)
        (clr-call-internal . g$15808$1VmeqK)
        (clr-new-internal . g$15807$1VmeqK)
        (clr-new-array-internal . g$15806$1VmeqK)
        (clr-is-internal . g$15805$1VmeqK)
        (clr-reference-internal . g$15804$1VmeqK)
        (clr-using-internal . g$15803$1VmeqK)
        (syntax-error . g$12357$1VmeqK)
        (syntax-dispatch . g$12232$1VmeqK)
        (compile-core . g$15802$1VmeqK)
        (eval-core . g$15801$1VmeqK)
        (remove-location . g$15800$1VmeqK)
        (set-symbol-value! . g$15799$1VmeqK)
        (symbol-value . g$15798$1VmeqK)
        (symbol-bound? . g$15797$1VmeqK)
        (ungensym . g$15796$1VmeqK)
        (gensym . g$15795$1VmeqK)
        (void . g$15794$1VmeqK)
        (load-serialized-library . g$15793$1VmeqK)
        (serialize-library . g$15792$1VmeqK)
        (compile-system-libraries . g$15390$1VmeqK)
        (compile->closure . g$15392$1VmeqK)
        (compile . g$15391$1VmeqK)
        (load . g$15384$1VmeqK)
        (string-normalize . g$15791$1VmeqK)
        (new-interaction-environment . g$12366$1VmeqK)
        (interaction-environment . g$12367$1VmeqK)
        (char-ready? . g$15790$1VmeqK)
        (string-upcase . g$15789$1VmeqK)
        (string-titlecase . g$15788$1VmeqK)
        (string-normalize-nfkd . g$9057$1VmeqK)
        (string-normalize-nfkc . g$9056$1VmeqK)
        (string-normalize-nfd . g$9055$1VmeqK)
        (string-normalize-nfc . g$9054$1VmeqK)
        (string-foldcase . g$15787$1VmeqK)
        (string-downcase . g$15786$1VmeqK)
        (string-ci>? . g$9041$1VmeqK)
        (string-ci>=? . g$9043$1VmeqK)
        (string-ci=? . g$9039$1VmeqK)
        (string-ci<? . g$9040$1VmeqK)
        (string-ci<=? . g$9042$1VmeqK)
        (char-whitespace? . g$15785$1VmeqK)
        (char-upper-case? . g$15784$1VmeqK)
        (char-title-case? . g$15783$1VmeqK)
        (char-numeric? . g$15782$1VmeqK)
        (char-lower-case? . g$15781$1VmeqK)
        (char-general-category . g$15780$1VmeqK)
        (char-upcase . g$15779$1VmeqK)
        (char-titlecase . g$15778$1VmeqK)
        (char-foldcase . g$15777$1VmeqK)
        (char-downcase . g$15776$1VmeqK)
        (char-ci>? . g$9051$1VmeqK)
        (char-ci>=? . g$9053$1VmeqK)
        (char-ci=? . g$9049$1VmeqK)
        (char-ci<? . g$9050$1VmeqK)
        (char-ci<=? . g$9052$1VmeqK)
        (char-alphabetic? . g$15775$1VmeqK)
        (variable-transformer-procedure . g$12044$1VmeqK)
        (variable-transformer? . g$12043$1VmeqK)
        (make-variable-transformer . g$12041$1VmeqK)
        (identifier? . g$12361$1VmeqK)
        (generate-temporaries . g$12350$1VmeqK)
        (free-identifier=? . g$12351$1VmeqK)
        (syntax->datum . g$12363$1VmeqK)
        (datum->syntax . g$12362$1VmeqK)
        (bound-identifier=? . g$12352$1VmeqK)
        (record-type-descriptor? . g$15774$1VmeqK)
        (record-predicate . g$15773$1VmeqK)
        (record-mutator . g$15772$1VmeqK)
        (record-constructor . g$15771$1VmeqK)
        (record-accessor . g$15770$1VmeqK)
        (make-record-type-descriptor . g$15769$1VmeqK)
        (make-record-constructor-descriptor . g$15768$1VmeqK)
        (record? . g$15767$1VmeqK)
        (record-type-uid . g$15766$1VmeqK)
        (record-type-sealed? . g$15765$1VmeqK)
        (record-type-parent . g$15764$1VmeqK)
        (record-type-opaque? . g$15763$1VmeqK)
        (record-type-name . g$15762$1VmeqK)
        (record-type-generative? . g$15761$1VmeqK)
        (record-type-field-names . g$15760$1VmeqK)
        (record-rtd . g$15759$1VmeqK)
        (record-field-mutable? . g$15758$1VmeqK)
        (delete-file . g$7895$1VmeqK)
        (file-exists? . g$7894$1VmeqK)
        (vector-sort! . g$15757$1VmeqK)
        (vector-sort . g$15756$1VmeqK)
        (list-sort . g$9010$1VmeqK)
        (symbol-hash . g$7865$1VmeqK)
        (string-ci-hash . g$7864$1VmeqK)
        (string-hash . g$7863$1VmeqK)
        (equal-hash . g$15755$1VmeqK)
        (hashtable-equivalence-function . g$15754$1VmeqK)
        (make-hashtable . g$15753$1VmeqK)
        (hashtable-hash-function . g$15752$1VmeqK)
        (make-eqv-hashtable . g$7855$1VmeqK)
        (make-eq-hashtable . g$7854$1VmeqK)
        (hashtable? . g$7853$1VmeqK)
        (hashtable-update! . g$7861$1VmeqK)
        (hashtable-size . g$7856$1VmeqK)
        (hashtable-set! . g$7858$1VmeqK)
        (hashtable-ref . g$7857$1VmeqK)
        (hashtable-mutable? . g$15751$1VmeqK)
        (hashtable-keys . g$15750$1VmeqK)
        (hashtable-entries . g$15749$1VmeqK)
        (hashtable-delete! . g$7859$1VmeqK)
        (hashtable-copy . g$15748$1VmeqK)
        (hashtable-contains? . g$7860$1VmeqK)
        (hashtable-clear! . g$7862$1VmeqK)
        (call-with-output-file . g$10849$1VmeqK)
        (call-with-input-file . g$10848$1VmeqK)
        (write-char . g$10840$1VmeqK)
        (write . g$15747$1VmeqK)
        (with-output-to-file . g$10847$1VmeqK)
        (with-input-from-file . g$10846$1VmeqK)
        (read-char . g$10839$1VmeqK)
        (read . g$15746$1VmeqK)
        (peek-char . g$10838$1VmeqK)
        (open-output-file . g$15745$1VmeqK)
        (open-input-file . g$15744$1VmeqK)
        (newline . g$10850$1VmeqK)
        (display . g$15743$1VmeqK)
        (close-output-port . g$15742$1VmeqK)
        (close-input-port . g$15741$1VmeqK)
        (eof-object? . g$15740$1VmeqK)
        (eof-object . g$15739$1VmeqK)
        (current-error-port . g$15738$1VmeqK)
        (current-output-port . g$15737$1VmeqK)
        (current-input-port . g$15736$1VmeqK)
        (output-port? . g$15735$1VmeqK)
        (input-port? . g$15734$1VmeqK)
        (utf-8-codec . g$15733$1VmeqK)
        (utf-16-codec . g$15732$1VmeqK)
        (transcoder-error-handling-mode . g$15731$1VmeqK)
        (transcoder-eol-style . g$15730$1VmeqK)
        (transcoder-codec . g$15729$1VmeqK)
        (transcoded-port . g$15728$1VmeqK)
        (textual-port? . g$15727$1VmeqK)
        (string->bytevector . g$15726$1VmeqK)
        (standard-output-port . g$10814$1VmeqK)
        (standard-input-port . g$10813$1VmeqK)
        (standard-error-port . g$10812$1VmeqK)
        (set-port-position! . g$15725$1VmeqK)
        (put-u8 . g$15724$1VmeqK)
        (put-string . g$15723$1VmeqK)
        (put-datum . g$10817$1VmeqK)
        (put-char . g$15722$1VmeqK)
        (put-bytevector . g$15721$1VmeqK)
        (port? . g$10822$1VmeqK)
        (port-transcoder . g$15720$1VmeqK)
        (port-position . g$15719$1VmeqK)
        (port-has-set-port-position!? . g$15718$1VmeqK)
        (port-has-port-position? . g$15717$1VmeqK)
        (port-eof? . g$15716$1VmeqK)
        (output-port-buffer-mode . g$15715$1VmeqK)
        (open-string-output-port . g$10821$1VmeqK)
        (open-string-input-port . g$15714$1VmeqK)
        (open-file-output-port . g$15713$1VmeqK)
        (open-file-input/output-port . g$15712$1VmeqK)
        (open-file-input-port . g$15711$1VmeqK)
        (open-bytevector-output-port . g$15710$1VmeqK)
        (open-bytevector-input-port . g$15709$1VmeqK)
        (native-transcoder . g$15708$1VmeqK)
        (native-eol-style . g$10815$1VmeqK)
        (make-transcoder . g$15707$1VmeqK)
        (latin-1-codec . g$15706$1VmeqK)
        (make-i/o-write-error . g$8820$1VmeqK)
        (make-i/o-read-error . g$8807$1VmeqK)
        (make-i/o-port-error . g$8915$1VmeqK)
        (make-i/o-invalid-position-error . g$8833$1VmeqK)
        (make-i/o-filename-error . g$8848$1VmeqK)
        (make-i/o-file-protection-error . g$8863$1VmeqK)
        (make-i/o-file-is-read-only-error . g$8876$1VmeqK)
        (make-i/o-file-does-not-exist-error . g$8902$1VmeqK)
        (make-i/o-file-already-exists-error . g$8889$1VmeqK)
        (make-i/o-error . g$8794$1VmeqK)
        (make-i/o-encoding-error . g$8943$1VmeqK)
        (make-i/o-decoding-error . g$8930$1VmeqK)
        (make-custom-textual-output-port . g$15705$1VmeqK)
        (make-custom-textual-input/output-port . g$15704$1VmeqK)
        (make-custom-textual-input-port . g$15703$1VmeqK)
        (make-custom-binary-output-port . g$15702$1VmeqK)
        (make-custom-binary-input/output-port . g$15701$1VmeqK)
        (make-custom-binary-input-port . g$15700$1VmeqK)
        (make-bytevector . g$7915$1VmeqK)
        (lookahead-u8 . g$15699$1VmeqK)
        (lookahead-char . g$15698$1VmeqK)
        (i/o-write-error? . g$8821$1VmeqK)
        (i/o-read-error? . g$8808$1VmeqK)
        (i/o-port-error? . g$8917$1VmeqK)
        (i/o-invalid-position-error? . g$8835$1VmeqK)
        (i/o-error-position . g$8836$1VmeqK)
        (i/o-filename-error? . g$8850$1VmeqK)
        (i/o-file-protection-error? . g$8864$1VmeqK)
        (i/o-file-is-read-only-error? . g$8877$1VmeqK)
        (i/o-file-does-not-exist-error? . g$8903$1VmeqK)
        (i/o-file-already-exists-error? . g$8890$1VmeqK)
        (i/o-error? . g$8795$1VmeqK)
        (i/o-error-port . g$8918$1VmeqK)
        (i/o-error-filename . g$8851$1VmeqK)
        (i/o-encoding-error? . g$8945$1VmeqK)
        (i/o-encoding-error-char . g$8946$1VmeqK)
        (i/o-decoding-error? . g$8931$1VmeqK)
        (get-u8 . g$15697$1VmeqK)
        (get-string-n! . g$15696$1VmeqK)
        (get-string-n . g$15695$1VmeqK)
        (get-string-all . g$15694$1VmeqK)
        (get-line . g$15693$1VmeqK)
        (get-datum . g$10818$1VmeqK)
        (get-char . g$15692$1VmeqK)
        (get-bytevector-some . g$15691$1VmeqK)
        (get-bytevector-n! . g$15690$1VmeqK)
        (get-bytevector-n . g$15689$1VmeqK)
        (get-bytevector-all . g$15688$1VmeqK)
        (flush-output-port . g$15687$1VmeqK)
        (close-port . g$15686$1VmeqK)
        (call-with-string-output-port . g$10823$1VmeqK)
        (call-with-port . g$10824$1VmeqK)
        (call-with-bytevector-output-port . g$15685$1VmeqK)
        (bytevector->string . g$15684$1VmeqK)
        (buffer-mode? . g$10816$1VmeqK)
        (binary-port? . g$15683$1VmeqK)
        (scheme-report-environment . g$12340$1VmeqK)
        (quotient . g$8989$1VmeqK)
        (null-environment . g$12339$1VmeqK)
        (remainder . g$8990$1VmeqK)
        (modulo . g$8991$1VmeqK)
        (inexact->exact . g$8986$1VmeqK)
        (force . g$8993$1VmeqK)
        (exact->inexact . g$8987$1VmeqK)
        (exit . g$15682$1VmeqK)
        (command-line . g$15379$1VmeqK)
        (string-fill! . g$15681$1VmeqK)
        (string-set! . g$15680$1VmeqK)
        (set-cdr! . g$15679$1VmeqK)
        (set-car! . g$15678$1VmeqK)
        (remove . g$7249$1VmeqK)
        (remv . g$7250$1VmeqK)
        (remp . g$7230$1VmeqK)
        (remq . g$7251$1VmeqK)
        (partition . g$7229$1VmeqK)
        (memv . g$7237$1VmeqK)
        (memq . g$7236$1VmeqK)
        (memp . g$7239$1VmeqK)
        (member . g$7238$1VmeqK)
        (exists . g$7243$1VmeqK)
        (for-all . g$7242$1VmeqK)
        (fold-right . g$7248$1VmeqK)
        (fold-left . g$7247$1VmeqK)
        (find . g$7228$1VmeqK)
        (filter . g$7231$1VmeqK)
        (cons* . g$7246$1VmeqK)
        (assv . g$7233$1VmeqK)
        (assq . g$7232$1VmeqK)
        (assp . g$7235$1VmeqK)
        (assoc . g$7234$1VmeqK)
        (with-exception-handler . g$15677$1VmeqK)
        (raise-continuable . g$15676$1VmeqK)
        (raise . g$15675$1VmeqK)
        (eval . g$12342$1VmeqK)
        (environment . g$12338$1VmeqK)
        (make-enumeration . g$10910$1VmeqK)
        (enum-set=? . g$10917$1VmeqK)
        (enum-set-universe . g$10911$1VmeqK)
        (enum-set-union . g$10918$1VmeqK)
        (enum-set-subset? . g$10916$1VmeqK)
        (enum-set-projection . g$10922$1VmeqK)
        (enum-set-member? . g$10915$1VmeqK)
        (enum-set-intersection . g$10919$1VmeqK)
        (enum-set-indexer . g$10912$1VmeqK)
        (enum-set-difference . g$10920$1VmeqK)
        (enum-set-constructor . g$10913$1VmeqK)
        (enum-set-complement . g$10921$1VmeqK)
        (enum-set->list . g$10914$1VmeqK)
        (who-condition? . g$8682$1VmeqK)
        (warning? . g$8601$1VmeqK)
        (violation? . g$8640$1VmeqK)
        (undefined-violation? . g$8782$1VmeqK)
        (syntax-violation? . g$8767$1VmeqK)
        (syntax-violation-subform . g$8769$1VmeqK)
        (syntax-violation-form . g$8768$1VmeqK)
        (syntax-violation . g$12360$1VmeqK)
        (simple-conditions . g$15674$1VmeqK)
        (serious-condition? . g$8614$1VmeqK)
        (non-continuable-violation? . g$8726$1VmeqK)
        (message-condition? . g$8587$1VmeqK)
        (make-who-condition . g$8680$1VmeqK)
        (make-warning . g$8600$1VmeqK)
        (make-violation . g$8639$1VmeqK)
        (make-undefined-violation . g$8781$1VmeqK)
        (make-syntax-violation . g$8764$1VmeqK)
        (make-serious-condition . g$8613$1VmeqK)
        (make-non-continuable-violation . g$8725$1VmeqK)
        (make-message-condition . g$8585$1VmeqK)
        (make-lexical-violation . g$8751$1VmeqK)
        (make-irritants-condition . g$8665$1VmeqK)
        (make-implementation-restriction-violation . g$8738$1VmeqK)
        (make-error . g$8626$1VmeqK)
        (make-assertion-violation . g$8652$1VmeqK)
        (lexical-violation? . g$8752$1VmeqK)
        (irritants-condition? . g$8667$1VmeqK)
        (implementation-restriction-violation? . g$8739$1VmeqK)
        (error? . g$8627$1VmeqK)
        (condition-who . g$8683$1VmeqK)
        (condition-predicate . g$15673$1VmeqK)
        (condition-message . g$8588$1VmeqK)
        (condition-irritants . g$8668$1VmeqK)
        (condition-accessor . g$15672$1VmeqK)
        (condition . g$15671$1VmeqK)
        (assertion-violation? . g$8653$1VmeqK)
        (condition? . g$15670$1VmeqK)
        (utf32->string . g$7933$1VmeqK)
        (utf16->string . g$7932$1VmeqK)
        (utf8->string . g$7930$1VmeqK)
        (uint-list->bytevector . g$7934$1VmeqK)
        (u8-list->bytevector . g$7926$1VmeqK)
        (string->utf8 . g$7927$1VmeqK)
        (string->utf32 . g$7929$1VmeqK)
        (string->utf16 . g$7928$1VmeqK)
        (sint-list->bytevector . g$7935$1VmeqK)
        (native-endianness . g$7901$1VmeqK)
        (bytevector? . g$7583$1VmeqK)
        (bytevector=? . g$7917$1VmeqK)
        (bytevector-uint-set! . g$15669$1VmeqK)
        (bytevector-uint-ref . g$15668$1VmeqK)
        (bytevector-u8-set! . g$7922$1VmeqK)
        (bytevector-u8-ref . g$7921$1VmeqK)
        (bytevector-u64-set! . g$7963$1VmeqK)
        (bytevector-u64-ref . g$7959$1VmeqK)
        (bytevector-u64-native-set! . g$7965$1VmeqK)
        (bytevector-u64-native-ref . g$7961$1VmeqK)
        (bytevector-u32-set! . g$7955$1VmeqK)
        (bytevector-u32-ref . g$7951$1VmeqK)
        (bytevector-u32-native-set! . g$7957$1VmeqK)
        (bytevector-u32-native-ref . g$7953$1VmeqK)
        (bytevector-u16-set! . g$7947$1VmeqK)
        (bytevector-u16-ref . g$7943$1VmeqK)
        (bytevector-u16-native-set! . g$7949$1VmeqK)
        (bytevector-u16-native-ref . g$7945$1VmeqK)
        (bytevector-sint-set! . g$15667$1VmeqK)
        (bytevector-sint-ref . g$15666$1VmeqK)
        (bytevector-s8-set! . g$7924$1VmeqK)
        (bytevector-s8-ref . g$7923$1VmeqK)
        (bytevector-s64-set! . g$7964$1VmeqK)
        (bytevector-s64-ref . g$7960$1VmeqK)
        (bytevector-s64-native-set! . g$7966$1VmeqK)
        (bytevector-s64-native-ref . g$7962$1VmeqK)
        (bytevector-s32-set! . g$7956$1VmeqK)
        (bytevector-s32-ref . g$7952$1VmeqK)
        (bytevector-s32-native-set! . g$7958$1VmeqK)
        (bytevector-s32-native-ref . g$7954$1VmeqK)
        (bytevector-s16-set! . g$7948$1VmeqK)
        (bytevector-s16-ref . g$7944$1VmeqK)
        (bytevector-s16-native-set! . g$7950$1VmeqK)
        (bytevector-s16-native-ref . g$7946$1VmeqK)
        (bytevector-length . g$7916$1VmeqK)
        (bytevector-ieee-single-set! . g$7941$1VmeqK)
        (bytevector-ieee-single-ref . g$7939$1VmeqK)
        (bytevector-ieee-single-native-set! . g$7969$1VmeqK)
        (bytevector-ieee-single-native-ref . g$7967$1VmeqK)
        (bytevector-ieee-double-set! . g$7942$1VmeqK)
        (bytevector-ieee-double-ref . g$7940$1VmeqK)
        (bytevector-ieee-double-native-set! . g$7970$1VmeqK)
        (bytevector-ieee-double-native-ref . g$7968$1VmeqK)
        (bytevector-fill! . g$7918$1VmeqK)
        (bytevector-copy! . g$7919$1VmeqK)
        (bytevector-copy . g$7920$1VmeqK)
        (bytevector->uint-list . g$7936$1VmeqK)
        (bytevector->u8-list . g$7925$1VmeqK)
        (bytevector->sint-list . g$7937$1VmeqK)
        (no-nans-violation? . g$8972$1VmeqK)
        (no-infinities-violation? . g$8959$1VmeqK)
        (make-no-nans-violation . g$8971$1VmeqK)
        (make-no-infinities-violation . g$8958$1VmeqK)
        (real->flonum . g$8215$1VmeqK)
        (flzero? . g$10254$1VmeqK)
        (fltruncate . g$10249$1VmeqK)
        (fltan . g$10235$1VmeqK)
        (flsqrt . g$10240$1VmeqK)
        (flsin . g$10233$1VmeqK)
        (flround . g$10250$1VmeqK)
        (flpositive? . g$10252$1VmeqK)
        (flonum? . g$7588$1VmeqK)
        (flodd? . g$10256$1VmeqK)
        (flnumerator . g$10199$1VmeqK)
        (flnegative? . g$10253$1VmeqK)
        (flnan? . g$10232$1VmeqK)
        (flmod0 . g$10217$1VmeqK)
        (flmod . g$10216$1VmeqK)
        (flmin . g$10258$1VmeqK)
        (flmax . g$10257$1VmeqK)
        (fllog . g$10239$1VmeqK)
        (flinteger? . g$10225$1VmeqK)
        (flinfinite? . g$10231$1VmeqK)
        (flfloor . g$10248$1VmeqK)
        (flfinite? . g$10226$1VmeqK)
        (flexpt . g$10242$1VmeqK)
        (flexp . g$10241$1VmeqK)
        (fleven? . g$10255$1VmeqK)
        (fldiv0-and-mod0 . g$10224$1VmeqK)
        (fldiv0 . g$10211$1VmeqK)
        (fldiv-and-mod . g$10218$1VmeqK)
        (fldiv . g$10223$1VmeqK)
        (fldenominator . g$10198$1VmeqK)
        (flcos . g$10234$1VmeqK)
        (flceiling . g$10243$1VmeqK)
        (flatan . g$10238$1VmeqK)
        (flasin . g$10236$1VmeqK)
        (flacos . g$10237$1VmeqK)
        (flabs . g$10251$1VmeqK)
        (fl>? . g$10205$1VmeqK)
        (fl>=? . g$10206$1VmeqK)
        (fl=? . g$10202$1VmeqK)
        (fl<? . g$10203$1VmeqK)
        (fl<=? . g$10204$1VmeqK)
        (fl/ . g$10201$1VmeqK)
        (fl- . g$10200$1VmeqK)
        (fl+ . g$10196$1VmeqK)
        (fl* . g$10197$1VmeqK)
        (fixnum->flonum . g$8216$1VmeqK)
        (fxzero? . g$9299$1VmeqK)
        (fxxor . g$9262$1VmeqK)
        (fxrotate-bit-field . g$9337$1VmeqK)
        (fxreverse-bit-field . g$9338$1VmeqK)
        (fxpositive? . g$9289$1VmeqK)
        (fxodd? . g$9309$1VmeqK)
        (fxnot . g$9243$1VmeqK)
        (fxnegative? . g$9294$1VmeqK)
        (fxmod0 . g$9273$1VmeqK)
        (fxmod . g$9272$1VmeqK)
        (fxmin . g$9311$1VmeqK)
        (fxmax . g$9310$1VmeqK)
        (fxlength . g$9240$1VmeqK)
        (fxior . g$9261$1VmeqK)
        (fxif . g$9319$1VmeqK)
        (fxfirst-bit-set . g$9241$1VmeqK)
        (fxeven? . g$9304$1VmeqK)
        (fxdiv0-and-mod0 . g$9284$1VmeqK)
        (fxdiv0 . g$9279$1VmeqK)
        (fxdiv-and-mod . g$9274$1VmeqK)
        (fxdiv . g$9267$1VmeqK)
        (fxcopy-bit-field . g$9334$1VmeqK)
        (fxcopy-bit . g$9324$1VmeqK)
        (fxbit-set? . g$9242$1VmeqK)
        (fxbit-field . g$9329$1VmeqK)
        (fxbit-count . g$9235$1VmeqK)
        (fxarithmetic-shift-right . g$9336$1VmeqK)
        (fxarithmetic-shift-left . g$9335$1VmeqK)
        (fxarithmetic-shift . g$9230$1VmeqK)
        (fxand . g$9260$1VmeqK)
        (fx>? . g$9252$1VmeqK)
        (fx>=? . g$9253$1VmeqK)
        (fx=? . g$9249$1VmeqK)
        (fx<? . g$9250$1VmeqK)
        (fx<=? . g$9251$1VmeqK)
        (fx-/carry . g$9313$1VmeqK)
        (fx- . g$9224$1VmeqK)
        (fx+/carry . g$9314$1VmeqK)
        (fx+ . g$9222$1VmeqK)
        (fx*/carry . g$9312$1VmeqK)
        (fx* . g$9223$1VmeqK)
        (greatest-fixnum . g$9193$1VmeqK)
        (least-fixnum . g$9194$1VmeqK)
        (fixnum-width . g$7589$1VmeqK)
        (fixnum? . g$7587$1VmeqK)
        (bitwise-rotate-bit-field . g$9131$1VmeqK)
        (bitwise-reverse-bit-field . g$15665$1VmeqK)
        (bitwise-length . g$9122$1VmeqK)
        (bitwise-if . g$9125$1VmeqK)
        (bitwise-first-bit-set . g$9123$1VmeqK)
        (bitwise-copy-bit-field . g$9128$1VmeqK)
        (bitwise-copy-bit . g$9126$1VmeqK)
        (bitwise-bit-set? . g$9124$1VmeqK)
        (bitwise-bit-field . g$9127$1VmeqK)
        (bitwise-bit-count . g$9121$1VmeqK)
        (bitwise-xor . g$9120$1VmeqK)
        (bitwise-ior . g$9119$1VmeqK)
        (bitwise-and . g$9118$1VmeqK)
        (bitwise-not . g$9117$1VmeqK)
        (bitwise-arithmetic-shift-right . g$9130$1VmeqK)
        (bitwise-arithmetic-shift-left . g$9129$1VmeqK)
        (bitwise-arithmetic-shift . g$15664$1VmeqK)
        (zero? . g$8230$1VmeqK)
        (vector? . g$7582$1VmeqK)
        (vector-set! . g$7598$1VmeqK)
        (vector-ref . g$7597$1VmeqK)
        (vector-map . g$7661$1VmeqK)
        (vector-length . g$15663$1VmeqK)
        (vector-for-each . g$7662$1VmeqK)
        (vector-fill! . g$7599$1VmeqK)
        (vector->list . g$15662$1VmeqK)
        (vector . g$15661$1VmeqK)
        (values . g$15660$1VmeqK)
        (truncate . g$8282$1VmeqK)
        (tan . g$8274$1VmeqK)
        (symbol? . g$7584$1VmeqK)
        (symbol=? . g$7646$1VmeqK)
        (symbol->string . g$15659$1VmeqK)
        (substring . g$15658$1VmeqK)
        (string? . g$15657$1VmeqK)
        (string>? . g$7643$1VmeqK)
        (string>=? . g$7645$1VmeqK)
        (string=? . g$7641$1VmeqK)
        (string<? . g$7642$1VmeqK)
        (string<=? . g$7644$1VmeqK)
        (string-ref . g$15656$1VmeqK)
        (string-length . g$15655$1VmeqK)
        (string-for-each . g$7663$1VmeqK)
        (string-copy . g$15654$1VmeqK)
        (string-append . g$15653$1VmeqK)
        (string->symbol . g$15652$1VmeqK)
        (string->number . g$15651$1VmeqK)
        (string->list . g$15650$1VmeqK)
        (string . g$15649$1VmeqK)
        (sqrt . g$8284$1VmeqK)
        (sin . g$8268$1VmeqK)
        (round . g$8283$1VmeqK)
        (reverse . g$7601$1VmeqK)
        (real? . g$8224$1VmeqK)
        (real-valued? . g$8227$1VmeqK)
        (real-part . g$8261$1VmeqK)
        (rationalize . g$7658$1VmeqK)
        (rational? . g$8225$1VmeqK)
        (rational-valued? . g$8228$1VmeqK)
        (procedure? . g$7586$1VmeqK)
        (positive? . g$8231$1VmeqK)
        (pair? . g$15648$1VmeqK)
        (odd? . g$7631$1VmeqK)
        (numerator . g$8259$1VmeqK)
        (number? . g$8217$1VmeqK)
        (number->string . g$8238$1VmeqK)
        (null? . g$15647$1VmeqK)
        (not . g$15646$1VmeqK)
        (negative? . g$8232$1VmeqK)
        (nan? . g$8218$1VmeqK)
        (min . g$7633$1VmeqK)
        (max . g$7632$1VmeqK)
        (map . g$7244$1VmeqK)
        (make-vector . g$15645$1VmeqK)
        (make-string . g$15644$1VmeqK)
        (make-rectangular . g$8254$1VmeqK)
        (make-polar . g$8255$1VmeqK)
        (magnitude . g$8257$1VmeqK)
        (log . g$8277$1VmeqK)
        (list? . g$15643$1VmeqK)
        (list-tail . g$7224$1VmeqK)
        (list-ref . g$7225$1VmeqK)
        (list->vector . g$7595$1VmeqK)
        (list->string . g$7596$1VmeqK)
        (list . g$15642$1VmeqK)
        (length . g$15641$1VmeqK)
        (lcm . g$7635$1VmeqK)
        (integer? . g$8226$1VmeqK)
        (integer-valued? . g$8229$1VmeqK)
        (integer->char . g$15640$1VmeqK)
        (infinite? . g$8220$1VmeqK)
        (inexact? . g$8222$1VmeqK)
        (inexact . g$8233$1VmeqK)
        (imag-part . g$8262$1VmeqK)
        (gcd . g$7634$1VmeqK)
        (for-each . g$7245$1VmeqK)
        (floor . g$8280$1VmeqK)
        (finite? . g$8219$1VmeqK)
        (expt . g$8286$1VmeqK)
        (exp . g$8267$1VmeqK)
        (exact? . g$8221$1VmeqK)
        (exact-integer-sqrt . g$8285$1VmeqK)
        (exact . g$8234$1VmeqK)
        (even? . g$7630$1VmeqK)
        (error . g$15639$1VmeqK)
        (eqv? . g$15638$1VmeqK)
        (equal? . g$15637$1VmeqK)
        (eq? . g$15636$1VmeqK)
        (dynamic-wind . g$15635$1VmeqK)
        (div0-and-mod0 . g$7594$1VmeqK)
        (mod0 . g$7592$1VmeqK)
        (div0 . g$7590$1VmeqK)
        (div-and-mod . g$7593$1VmeqK)
        (mod . g$7591$1VmeqK)
        (div . g$8278$1VmeqK)
        (denominator . g$8260$1VmeqK)
        (cos . g$8271$1VmeqK)
        (cons . g$15634$1VmeqK)
        (complex? . g$8223$1VmeqK)
        (char? . g$7581$1VmeqK)
        (char>? . g$7655$1VmeqK)
        (char>=? . g$7657$1VmeqK)
        (char=? . g$7653$1VmeqK)
        (char<? . g$7654$1VmeqK)
        (char<=? . g$7656$1VmeqK)
        (char->integer . g$15633$1VmeqK)
        (ceiling . g$8281$1VmeqK)
        (call-with-values . g$15632$1VmeqK)
        (call/cc . g$15631$1VmeqK)
        (call-with-current-continuation . g$15630$1VmeqK)
        (cddddr . g$7629$1VmeqK)
        (cdddar . g$7628$1VmeqK)
        (cddadr . g$7627$1VmeqK)
        (cddaar . g$7626$1VmeqK)
        (cdaddr . g$7625$1VmeqK)
        (cdadar . g$7624$1VmeqK)
        (cdaadr . g$7623$1VmeqK)
        (cdaaar . g$7622$1VmeqK)
        (cadddr . g$7621$1VmeqK)
        (caddar . g$7620$1VmeqK)
        (cadadr . g$7619$1VmeqK)
        (cadaar . g$7618$1VmeqK)
        (caaddr . g$7617$1VmeqK)
        (caadar . g$7616$1VmeqK)
        (caaadr . g$7615$1VmeqK)
        (caaaar . g$7614$1VmeqK)
        (cdddr . g$7613$1VmeqK)
        (cddar . g$7612$1VmeqK)
        (cdadr . g$7611$1VmeqK)
        (cdaar . g$7610$1VmeqK)
        (caddr . g$7609$1VmeqK)
        (cadar . g$7608$1VmeqK)
        (caadr . g$7607$1VmeqK)
        (caaar . g$7606$1VmeqK)
        (cddr . g$7605$1VmeqK)
        (cdar . g$7604$1VmeqK)
        (cadr . g$7603$1VmeqK)
        (caar . g$7602$1VmeqK)
        (cdr . g$15629$1VmeqK)
        (car . g$15628$1VmeqK)
        (boolean? . g$7585$1VmeqK)
        (boolean=? . g$7647$1VmeqK)
        (atan . g$8276$1VmeqK)
        (assertion-violation . g$15627$1VmeqK)
        (asin . g$8269$1VmeqK)
        (apply . g$15626$1VmeqK)
        (append . g$15625$1VmeqK)
        (angle . g$8256$1VmeqK)
        (acos . g$8272$1VmeqK)
        (abs . g$8279$1VmeqK)
        (/ . g$15624$1VmeqK)
        (* . g$15623$1VmeqK)
        (- . g$15622$1VmeqK)
        (+ . g$15621$1VmeqK)
        (>= . g$8253$1VmeqK)
        (> . g$8252$1VmeqK)
        (= . g$8249$1VmeqK)
        (<= . g$8251$1VmeqK)
        (< . g$8250$1VmeqK)
        ($bytevector-set! . g$15620$1VmeqK)
        ($bytevector-ref . g$15619$1VmeqK)
        ($fl>=? . g$15618$1VmeqK)
        ($fl>? . g$15617$1VmeqK)
        ($fl<=? . g$15616$1VmeqK)
        ($fl<? . g$15615$1VmeqK)
        ($fl- . g$15614$1VmeqK)
        ($fl/ . g$15613$1VmeqK)
        ($fl* . g$15612$1VmeqK)
        ($fl+ . g$15611$1VmeqK)
        ($fl=? . g$15610$1VmeqK)
        ($try . g$15609$1VmeqK)
        ($fxarithmetic-shift-right . g$15608$1VmeqK)
        ($fxarithmetic-shift-left . g$15607$1VmeqK)
        ($$fx- . g$15606$1VmeqK)
        ($$fx* . g$15605$1VmeqK)
        ($$fx+ . g$15604$1VmeqK)
        ($fxnot . g$15603$1VmeqK)
        ($fxxor . g$15602$1VmeqK)
        ($fxior . g$15601$1VmeqK)
        ($fxand . g$15600$1VmeqK)
        ($fx>=? . g$15599$1VmeqK)
        ($fx>? . g$15598$1VmeqK)
        ($fx<=? . g$15597$1VmeqK)
        ($fx<? . g$15596$1VmeqK)
        ($fx- . g$15595$1VmeqK)
        ($fxmod0 . g$15594$1VmeqK)
        ($fxdiv0 . g$15593$1VmeqK)
        ($fx* . g$15592$1VmeqK)
        ($fx+ . g$15591$1VmeqK)
        ($fx=? . g$15590$1VmeqK)
        ($vector-set! . g$15589$1VmeqK)
        ($vector-ref . g$15588$1VmeqK)
        ($cdr . g$15587$1VmeqK)
        ($car . g$15586$1VmeqK)
        (make-record-printer . g$15585$1VmeqK)
        (eqv-hash . g$15584$1VmeqK)
        (reverse! . g$15583$1VmeqK)
        (deserialize-port . g$15582$1VmeqK)
        (serialize-port . g$15581$1VmeqK)
        (enum-set? . g$10887$1VmeqK)
        (make-promise . g$8992$1VmeqK)
        (load/unload . g$15383$1VmeqK)
        (load/args . g$15382$1VmeqK)
        (printf . g$10996$1VmeqK)
        (fprintf . g$10997$1VmeqK)
        (format . g$10998$1VmeqK)
        (procedure-form . g$15580$1VmeqK)
        (procedure-environment . g$15579$1VmeqK)
        (procedure-name . g$15578$1VmeqK)
        (procedure-arity . g$15577$1VmeqK)
        (gc-collect . g$15576$1VmeqK)
        (typeof . g$15575$1VmeqK)
        (clr-type? . g$15574$1VmeqK)
        (get-clr-type . g$15573$1VmeqK)
        (get-command-line . g$15572$1VmeqK)
        (vector-append . g$15571$1VmeqK)
        (vector-filter . g$15570$1VmeqK)
        (vector-reverse! . g$15569$1VmeqK)
        (vector-contains? . g$15568$1VmeqK)
        (vector-index-of . g$15567$1VmeqK)
        (vector-copy . g$15566$1VmeqK)
        (vector-binary-search . g$15565$1VmeqK)
        (string-ci-compare . g$15564$1VmeqK)
        (string-compare . g$15563$1VmeqK)
        (string-format . g$15562$1VmeqK)
        (trace-printer . g$15377$1VmeqK)
        (make-traced-procedure . g$15561$1VmeqK)
        (make-traced-macro . g$11018$1VmeqK)
        (assertion-error . g$12356$1VmeqK)
        (time-it . g$15560$1VmeqK)
        (make-parameter . g$11025$1VmeqK)
        (library-locator . g$15559$1VmeqK)
        (get-library-paths . g$15558$1VmeqK)
        (open-tcp-input/output-port . g$15557$1VmeqK)
        (hashtable-for-each . g$15556$1VmeqK)
        (hashtable-map . g$15555$1VmeqK)
        (environment-bindings . g$12334$1VmeqK)
        (environment-symbols . g$12337$1VmeqK)
        (interaction-environment-symbols . g$12333$1VmeqK)
        (optimization-level . g$15554$1VmeqK)
        (library-path . g$11663$1VmeqK)
        (make-compile-time-value . g$12042$1VmeqK)
        (expand->core . g$12343$1VmeqK)
        (expand . g$12341$1VmeqK)
        (emacs-mode? . g$15380$1VmeqK)
        (syntax-transpose . g$12280$1VmeqK)
        (convert->cps . g$11344$1VmeqK)
        (inexact=? . g$15553$1VmeqK)
        (bignum-sqrt-exact . g$15552$1VmeqK)
        (bignum-sqrt . g$15551$1VmeqK)
        (flonum->string . g$15550$1VmeqK)
        (inexact-compare . g$15549$1VmeqK)
        (exact-compare . g$15548$1VmeqK)
        (condition-stacktrace . g$15547$1VmeqK)
        (stacktrace-condition? . g$8712$1VmeqK)
        (stacktrace-enable? . g$15378$1VmeqK)
        (make-stacktrace-condition . g$8710$1VmeqK)
        (condition-where . g$15546$1VmeqK)
        (where-condition? . g$8697$1VmeqK)
        (make-where-condition . g$8695$1VmeqK)
        (installed-libraries . g$11684$1VmeqK)
        (uninstall-library . g$11675$1VmeqK)
        (pretty-gensyms . g$11108$1VmeqK)
        (pretty-width . g$11105$1VmeqK)
        (pretty-print . g$11110$1VmeqK)
        (pointer+ . g$15545$1VmeqK)
        (&stacktrace . g$15544$1VmeqK)
        (&where . g$15543$1VmeqK)
        (&no-nans . g$15542$1VmeqK)
        (&no-infinities . g$15541$1VmeqK)
        (&i/o-encoding . g$15540$1VmeqK)
        (&i/o-decoding . g$15539$1VmeqK)
        (&i/o-port . g$15538$1VmeqK)
        (&i/o-file-does-not-exist . g$15537$1VmeqK)
        (&i/o-file-already-exists . g$15536$1VmeqK)
        (&i/o-file-is-read-only . g$15535$1VmeqK)
        (&i/o-file-protection . g$15534$1VmeqK)
        (&i/o-filename . g$15533$1VmeqK)
        (&i/o-invalid-position . g$15532$1VmeqK)
        (&i/o-write . g$15531$1VmeqK)
        (&i/o-read . g$15530$1VmeqK)
        (&i/o . g$15529$1VmeqK)
        (&non-continuable . g$15528$1VmeqK)
        (&undefined . g$15527$1VmeqK)
        (&syntax . g$15526$1VmeqK)
        (&lexical . g$15525$1VmeqK)
        (&implementation-restriction . g$15524$1VmeqK)
        (&who . g$15523$1VmeqK)
        (&irritants . g$15522$1VmeqK)
        (&assertion . g$15521$1VmeqK)
        (&violation . g$15520$1VmeqK)
        (&error . g$15519$1VmeqK)
        (&serious . g$15518$1VmeqK)
        (&warning . g$15517$1VmeqK)
        (&message . g$15516$1VmeqK)
        (&condition . g$15515$1VmeqK)
        (define-condition-type . g$15514$1VmeqK)
        (define-enumeration . g$15513$1VmeqK)
        (define-record-type . g$15512$1VmeqK)
        (parent-rtd . g$15511$1VmeqK)
        (nongenerative . g$15510$1VmeqK)
        (opaque . g$15509$1VmeqK)
        (sealed . g$15508$1VmeqK)
        (protocol . g$15507$1VmeqK)
        (parent . g$15506$1VmeqK)
        (immutable . g$15505$1VmeqK)
        (mutable . g$15504$1VmeqK)
        (fields . g$15503$1VmeqK)
        (error-handling-mode . g$15502$1VmeqK)
        (file-options . g$15501$1VmeqK)
        (buffer-mode . g$15500$1VmeqK)
        (eol-style . g$15499$1VmeqK)
        (guard . g$15498$1VmeqK)
        (trace-letrec-syntax . g$15497$1VmeqK)
        (trace-let-syntax . g$15496$1VmeqK)
        (trace-define-syntax . g$15495$1VmeqK)
        (trace-define . g$15494$1VmeqK)
        (trace-lambda . g$15493$1VmeqK)
        (unsyntax-splicing . g$15492$1VmeqK)
        (unsyntax . g$15491$1VmeqK)
        (unquote-splicing . g$15490$1VmeqK)
        (unquote . g$15489$1VmeqK)
        (_ . g$15488$1VmeqK)
        (else . g$15487$1VmeqK)
        (=> . g$15486$1VmeqK)
        (... . g$15485$1VmeqK)
        (assert . g$15484$1VmeqK)
        (endianness . g$15483$1VmeqK)
        (delay . g$15482$1VmeqK)
        (time . g$15481$1VmeqK)
        (or . g$15480$1VmeqK)
        (and . g$15479$1VmeqK)
        (do . g$15478$1VmeqK)
        (cond . g$15477$1VmeqK)
        (let* . g$15476$1VmeqK)
        (let . g$15475$1VmeqK)
        (identifier-syntax . g$15474$1VmeqK)
        (with-syntax . g$15473$1VmeqK)
        (quasisyntax . g$15472$1VmeqK)
        (quasiquote . g$15471$1VmeqK)
        (syntax-rules . g$15470$1VmeqK)
        (include-into . g$15469$1VmeqK)
        (include . g$15468$1VmeqK)
        (define-struct . g$15467$1VmeqK)
        (let-values . g$15466$1VmeqK)
        (let*-values . g$15465$1VmeqK)
        (record-constructor-descriptor . g$15464$1VmeqK)
        (record-type-descriptor . g$15463$1VmeqK)
        (fluid-let-syntax . g$15462$1VmeqK)
        (case . g$15461$1VmeqK)
        (parameterize . g$15460$1VmeqK)
        (unless . g$15459$1VmeqK)
        (when . g$15458$1VmeqK)
        (if . g$15457$1VmeqK)
        (letrec* . g$15456$1VmeqK)
        (letrec . g$15455$1VmeqK)
        (type-descriptor . g$15454$1VmeqK)
        (case-lambda . g$15453$1VmeqK)
        (lambda . g$15452$1VmeqK)
        (syntax . g$15451$1VmeqK)
        (syntax-case . g$15450$1VmeqK)
        (quote . g$15449$1VmeqK)
        (foreign-call . g$15448$1VmeqK)
        (letrec-syntax . g$15447$1VmeqK)
        (let-syntax . g$15446$1VmeqK)
        (set! . g$15445$1VmeqK)
        (export . g$15444$1VmeqK)
        (import . g$15443$1VmeqK)
        (library . g$15442$1VmeqK)
        (begin . g$15441$1VmeqK)
        (module . g$15440$1VmeqK)
        (define-syntax . g$15439$1VmeqK)
        (define . g$15438$1VmeqK))
      '((g$12237$1VmeqK core-prim . ellipsis-map)
        (g$8715$1VmeqK core-prim . &stacktrace-rcd)
        (g$8714$1VmeqK core-prim . &stacktrace-rtd)
        (g$8700$1VmeqK core-prim . &where-rcd)
        (g$8699$1VmeqK core-prim . &where-rtd)
        (g$8974$1VmeqK core-prim . &no-nans-rcd)
        (g$8973$1VmeqK core-prim . &no-nans-rtd)
        (g$8961$1VmeqK core-prim . &no-infinities-rcd)
        (g$8960$1VmeqK core-prim . &no-infinities-rtd)
        (g$8948$1VmeqK core-prim . &i/o-encoding-rcd)
        (g$8947$1VmeqK core-prim . &i/o-encoding-rtd)
        (g$8933$1VmeqK core-prim . &i/o-decoding-rcd)
        (g$8932$1VmeqK core-prim . &i/o-decoding-rtd)
        (g$8920$1VmeqK core-prim . &i/o-port-rcd)
        (g$8919$1VmeqK core-prim . &i/o-port-rtd)
        (g$8905$1VmeqK core-prim . &i/o-file-does-not-exist-rcd)
        (g$8904$1VmeqK core-prim . &i/o-file-does-not-exist-rtd)
        (g$8892$1VmeqK core-prim . &i/o-file-already-exists-rcd)
        (g$8891$1VmeqK core-prim . &i/o-file-already-exists-rtd)
        (g$8879$1VmeqK core-prim . &i/o-file-is-read-only-rcd)
        (g$8878$1VmeqK core-prim . &i/o-file-is-read-only-rtd)
        (g$8866$1VmeqK core-prim . &i/o-file-protection-rcd)
        (g$8865$1VmeqK core-prim . &i/o-file-protection-rtd)
        (g$8853$1VmeqK core-prim . &i/o-filename-rcd)
        (g$8852$1VmeqK core-prim . &i/o-filename-rtd)
        (g$8838$1VmeqK core-prim . &i/o-invalid-position-rcd)
        (g$8837$1VmeqK core-prim . &i/o-invalid-position-rtd)
        (g$8823$1VmeqK core-prim . &i/o-write-rcd)
        (g$8822$1VmeqK core-prim . &i/o-write-rtd)
        (g$8810$1VmeqK core-prim . &i/o-read-rcd)
        (g$8809$1VmeqK core-prim . &i/o-read-rtd)
        (g$8797$1VmeqK core-prim . &i/o-rcd)
        (g$8796$1VmeqK core-prim . &i/o-rtd)
        (g$8784$1VmeqK core-prim . &undefined-rcd)
        (g$8783$1VmeqK core-prim . &undefined-rtd)
        (g$8771$1VmeqK core-prim . &syntax-rcd)
        (g$8770$1VmeqK core-prim . &syntax-rtd)
        (g$8754$1VmeqK core-prim . &lexical-rcd)
        (g$8753$1VmeqK core-prim . &lexical-rtd)
        (g$8741$1VmeqK core-prim . &implementation-restriction-rcd)
        (g$8740$1VmeqK core-prim . &implementation-restriction-rtd)
        (g$8728$1VmeqK core-prim . &non-continuable-rcd)
        (g$8727$1VmeqK core-prim . &non-continuable-rtd)
        (g$8685$1VmeqK core-prim . &who-rcd)
        (g$8684$1VmeqK core-prim . &who-rtd)
        (g$8670$1VmeqK core-prim . &irritants-rcd)
        (g$8669$1VmeqK core-prim . &irritants-rtd)
        (g$8655$1VmeqK core-prim . &assertion-rcd)
        (g$8654$1VmeqK core-prim . &assertion-rtd)
        (g$8642$1VmeqK core-prim . &violation-rcd)
        (g$8641$1VmeqK core-prim . &violation-rtd)
        (g$8629$1VmeqK core-prim . &error-rcd)
        (g$8628$1VmeqK core-prim . &error-rtd)
        (g$8616$1VmeqK core-prim . &serious-rcd)
        (g$8615$1VmeqK core-prim . &serious-rtd)
        (g$8603$1VmeqK core-prim . &warning-rcd)
        (g$8602$1VmeqK core-prim . &warning-rtd)
        (g$8590$1VmeqK core-prim . &message-rcd)
        (g$8589$1VmeqK core-prim . &message-rtd)
        (g$8550$1VmeqK core-prim . &condition-rcd)
        (g$8549$1VmeqK core-prim . &condition-rtd)
        (g$15826$1VmeqK core-prim . library-letrec*)
        (g$15825$1VmeqK core-prim . annotation-stripped)
        (g$15824$1VmeqK core-prim . annotation-source)
        (g$15823$1VmeqK core-prim . annotation-expression)
        (g$15822$1VmeqK core-prim . annotation?)
        (g$15821$1VmeqK core-prim . read-annotated)
        (g$8275$1VmeqK core-prim . tanh)
        (g$8273$1VmeqK core-prim . cosh)
        (g$8270$1VmeqK core-prim . sinh)
        (g$15820$1VmeqK core-prim . make-guid)
        (g$15819$1VmeqK core-prim . unspecified?)
        (g$7227$1VmeqK core-prim . make-list)
        (g$7226$1VmeqK core-prim . last-pair)
        (g$15818$1VmeqK core-prim . load-r5rs)
        (g$15817$1VmeqK core-prim . license)
        (g$15816$1VmeqK core-prim . stacktrace)
        (g$15385$1VmeqK core-prim . ironscheme-test)
        (g$15386$1VmeqK core-prim . ironscheme-build)
        (g$15815$1VmeqK core-prim . pinvoke-call-internal)
        (g$15814$1VmeqK core-prim . ffi-callback-internal)
        (g$15813$1VmeqK core-prim . ffi-callout-internal)
        (g$15812$1VmeqK core-prim . define-clr-class-internal)
        (g$15811$1VmeqK core-prim . clr-field-set!-internal)
        (g$15810$1VmeqK core-prim . clr-field-get-internal)
        (g$15809$1VmeqK core-prim . clr-cast-internal)
        (g$15808$1VmeqK core-prim . clr-call-internal)
        (g$15807$1VmeqK core-prim . clr-new-internal)
        (g$15806$1VmeqK core-prim . clr-new-array-internal)
        (g$15805$1VmeqK core-prim . clr-is-internal)
        (g$15804$1VmeqK core-prim . clr-reference-internal)
        (g$15803$1VmeqK core-prim . clr-using-internal)
        (g$12357$1VmeqK core-prim . syntax-error)
        (g$12232$1VmeqK core-prim . syntax-dispatch)
        (g$15802$1VmeqK core-prim . compile-core)
        (g$15801$1VmeqK core-prim . eval-core)
        (g$15800$1VmeqK core-prim . remove-location)
        (g$15799$1VmeqK core-prim . set-symbol-value!)
        (g$15798$1VmeqK core-prim . symbol-value)
        (g$15797$1VmeqK core-prim . symbol-bound?)
        (g$15796$1VmeqK core-prim . ungensym)
        (g$15795$1VmeqK core-prim . gensym)
        (g$15794$1VmeqK core-prim . void)
        (g$15793$1VmeqK core-prim . load-serialized-library)
        (g$15792$1VmeqK core-prim . serialize-library)
        (g$15390$1VmeqK core-prim . compile-system-libraries)
        (g$15392$1VmeqK core-prim . compile->closure)
        (g$15391$1VmeqK core-prim . compile)
        (g$15384$1VmeqK core-prim . load)
        (g$15791$1VmeqK core-prim . string-normalize)
        (g$12366$1VmeqK core-prim . new-interaction-environment)
        (g$12367$1VmeqK core-prim . interaction-environment)
        (g$15790$1VmeqK core-prim . char-ready?)
        (g$15789$1VmeqK core-prim . string-upcase)
        (g$15788$1VmeqK core-prim . string-titlecase)
        (g$9057$1VmeqK core-prim . string-normalize-nfkd)
        (g$9056$1VmeqK core-prim . string-normalize-nfkc)
        (g$9055$1VmeqK core-prim . string-normalize-nfd)
        (g$9054$1VmeqK core-prim . string-normalize-nfc)
        (g$15787$1VmeqK core-prim . string-foldcase)
        (g$15786$1VmeqK core-prim . string-downcase)
        (g$9041$1VmeqK core-prim . string-ci>?)
        (g$9043$1VmeqK core-prim . string-ci>=?)
        (g$9039$1VmeqK core-prim . string-ci=?)
        (g$9040$1VmeqK core-prim . string-ci<?)
        (g$9042$1VmeqK core-prim . string-ci<=?)
        (g$15785$1VmeqK core-prim . char-whitespace?)
        (g$15784$1VmeqK core-prim . char-upper-case?)
        (g$15783$1VmeqK core-prim . char-title-case?)
        (g$15782$1VmeqK core-prim . char-numeric?)
        (g$15781$1VmeqK core-prim . char-lower-case?)
        (g$15780$1VmeqK core-prim . char-general-category)
        (g$15779$1VmeqK core-prim . char-upcase)
        (g$15778$1VmeqK core-prim . char-titlecase)
        (g$15777$1VmeqK core-prim . char-foldcase)
        (g$15776$1VmeqK core-prim . char-downcase)
        (g$9051$1VmeqK core-prim . char-ci>?)
        (g$9053$1VmeqK core-prim . char-ci>=?)
        (g$9049$1VmeqK core-prim . char-ci=?)
        (g$9050$1VmeqK core-prim . char-ci<?)
        (g$9052$1VmeqK core-prim . char-ci<=?)
        (g$15775$1VmeqK core-prim . char-alphabetic?)
        (g$12044$1VmeqK core-prim . variable-transformer-procedure)
        (g$12043$1VmeqK core-prim . variable-transformer?)
        (g$12041$1VmeqK core-prim . make-variable-transformer)
        (g$12361$1VmeqK core-prim . identifier?)
        (g$12350$1VmeqK core-prim . generate-temporaries)
        (g$12351$1VmeqK core-prim . free-identifier=?)
        (g$12363$1VmeqK core-prim . syntax->datum)
        (g$12362$1VmeqK core-prim . datum->syntax)
        (g$12352$1VmeqK core-prim . bound-identifier=?)
        (g$15774$1VmeqK core-prim . record-type-descriptor?)
        (g$15773$1VmeqK core-prim . record-predicate)
        (g$15772$1VmeqK core-prim . record-mutator)
        (g$15771$1VmeqK core-prim . record-constructor)
        (g$15770$1VmeqK core-prim . record-accessor)
        (g$15769$1VmeqK core-prim . make-record-type-descriptor)
        (g$15768$1VmeqK core-prim . make-record-constructor-descriptor)
        (g$15767$1VmeqK core-prim . record?)
        (g$15766$1VmeqK core-prim . record-type-uid)
        (g$15765$1VmeqK core-prim . record-type-sealed?)
        (g$15764$1VmeqK core-prim . record-type-parent)
        (g$15763$1VmeqK core-prim . record-type-opaque?)
        (g$15762$1VmeqK core-prim . record-type-name)
        (g$15761$1VmeqK core-prim . record-type-generative?)
        (g$15760$1VmeqK core-prim . record-type-field-names)
        (g$15759$1VmeqK core-prim . record-rtd)
        (g$15758$1VmeqK core-prim . record-field-mutable?)
        (g$7895$1VmeqK core-prim . delete-file)
        (g$7894$1VmeqK core-prim . file-exists?)
        (g$15757$1VmeqK core-prim . vector-sort!)
        (g$15756$1VmeqK core-prim . vector-sort)
        (g$9010$1VmeqK core-prim . list-sort)
        (g$7865$1VmeqK core-prim . symbol-hash)
        (g$7864$1VmeqK core-prim . string-ci-hash)
        (g$7863$1VmeqK core-prim . string-hash)
        (g$15755$1VmeqK core-prim . equal-hash)
        (g$15754$1VmeqK core-prim . hashtable-equivalence-function)
        (g$15753$1VmeqK core-prim . make-hashtable)
        (g$15752$1VmeqK core-prim . hashtable-hash-function)
        (g$7855$1VmeqK core-prim . make-eqv-hashtable)
        (g$7854$1VmeqK core-prim . make-eq-hashtable)
        (g$7853$1VmeqK core-prim . hashtable?)
        (g$7861$1VmeqK core-prim . hashtable-update!)
        (g$7856$1VmeqK core-prim . hashtable-size)
        (g$7858$1VmeqK core-prim . hashtable-set!)
        (g$7857$1VmeqK core-prim . hashtable-ref)
        (g$15751$1VmeqK core-prim . hashtable-mutable?)
        (g$15750$1VmeqK core-prim . hashtable-keys)
        (g$15749$1VmeqK core-prim . hashtable-entries)
        (g$7859$1VmeqK core-prim . hashtable-delete!)
        (g$15748$1VmeqK core-prim . hashtable-copy)
        (g$7860$1VmeqK core-prim . hashtable-contains?)
        (g$7862$1VmeqK core-prim . hashtable-clear!)
        (g$10849$1VmeqK core-prim . call-with-output-file)
        (g$10848$1VmeqK core-prim . call-with-input-file)
        (g$10840$1VmeqK core-prim . write-char)
        (g$15747$1VmeqK core-prim . write)
        (g$10847$1VmeqK core-prim . with-output-to-file)
        (g$10846$1VmeqK core-prim . with-input-from-file)
        (g$10839$1VmeqK core-prim . read-char)
        (g$15746$1VmeqK core-prim . read)
        (g$10838$1VmeqK core-prim . peek-char)
        (g$15745$1VmeqK core-prim . open-output-file)
        (g$15744$1VmeqK core-prim . open-input-file)
        (g$10850$1VmeqK core-prim . newline)
        (g$15743$1VmeqK core-prim . display)
        (g$15742$1VmeqK core-prim . close-output-port)
        (g$15741$1VmeqK core-prim . close-input-port)
        (g$15740$1VmeqK core-prim . eof-object?)
        (g$15739$1VmeqK core-prim . eof-object)
        (g$15738$1VmeqK core-prim . current-error-port)
        (g$15737$1VmeqK core-prim . current-output-port)
        (g$15736$1VmeqK core-prim . current-input-port)
        (g$15735$1VmeqK core-prim . output-port?)
        (g$15734$1VmeqK core-prim . input-port?)
        (g$15733$1VmeqK core-prim . utf-8-codec)
        (g$15732$1VmeqK core-prim . utf-16-codec)
        (g$15731$1VmeqK core-prim . transcoder-error-handling-mode)
        (g$15730$1VmeqK core-prim . transcoder-eol-style)
        (g$15729$1VmeqK core-prim . transcoder-codec)
        (g$15728$1VmeqK core-prim . transcoded-port)
        (g$15727$1VmeqK core-prim . textual-port?)
        (g$15726$1VmeqK core-prim . string->bytevector)
        (g$10814$1VmeqK core-prim . standard-output-port)
        (g$10813$1VmeqK core-prim . standard-input-port)
        (g$10812$1VmeqK core-prim . standard-error-port)
        (g$15725$1VmeqK core-prim . set-port-position!)
        (g$15724$1VmeqK core-prim . put-u8)
        (g$15723$1VmeqK core-prim . put-string)
        (g$10817$1VmeqK core-prim . put-datum)
        (g$15722$1VmeqK core-prim . put-char)
        (g$15721$1VmeqK core-prim . put-bytevector)
        (g$10822$1VmeqK core-prim . port?)
        (g$15720$1VmeqK core-prim . port-transcoder)
        (g$15719$1VmeqK core-prim . port-position)
        (g$15718$1VmeqK core-prim . port-has-set-port-position!?)
        (g$15717$1VmeqK core-prim . port-has-port-position?)
        (g$15716$1VmeqK core-prim . port-eof?)
        (g$15715$1VmeqK core-prim . output-port-buffer-mode)
        (g$10821$1VmeqK core-prim . open-string-output-port)
        (g$15714$1VmeqK core-prim . open-string-input-port)
        (g$15713$1VmeqK core-prim . open-file-output-port)
        (g$15712$1VmeqK core-prim . open-file-input/output-port)
        (g$15711$1VmeqK core-prim . open-file-input-port)
        (g$15710$1VmeqK core-prim . open-bytevector-output-port)
        (g$15709$1VmeqK core-prim . open-bytevector-input-port)
        (g$15708$1VmeqK core-prim . native-transcoder)
        (g$10815$1VmeqK core-prim . native-eol-style)
        (g$15707$1VmeqK core-prim . make-transcoder)
        (g$15706$1VmeqK core-prim . latin-1-codec)
        (g$8820$1VmeqK core-prim . make-i/o-write-error)
        (g$8807$1VmeqK core-prim . make-i/o-read-error)
        (g$8915$1VmeqK core-prim . make-i/o-port-error)
        (g$8833$1VmeqK core-prim . make-i/o-invalid-position-error)
        (g$8848$1VmeqK core-prim . make-i/o-filename-error)
        (g$8863$1VmeqK core-prim . make-i/o-file-protection-error)
        (g$8876$1VmeqK core-prim . make-i/o-file-is-read-only-error)
        (g$8902$1VmeqK core-prim . make-i/o-file-does-not-exist-error)
        (g$8889$1VmeqK core-prim . make-i/o-file-already-exists-error)
        (g$8794$1VmeqK core-prim . make-i/o-error)
        (g$8943$1VmeqK core-prim . make-i/o-encoding-error)
        (g$8930$1VmeqK core-prim . make-i/o-decoding-error)
        (g$15705$1VmeqK core-prim . make-custom-textual-output-port)
        (g$15704$1VmeqK
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$15703$1VmeqK core-prim . make-custom-textual-input-port)
        (g$15702$1VmeqK core-prim . make-custom-binary-output-port)
        (g$15701$1VmeqK
          core-prim
          .
          make-custom-binary-input/output-port)
        (g$15700$1VmeqK core-prim . make-custom-binary-input-port)
        (g$7915$1VmeqK core-prim . make-bytevector)
        (g$15699$1VmeqK core-prim . lookahead-u8)
        (g$15698$1VmeqK core-prim . lookahead-char)
        (g$8821$1VmeqK core-prim . i/o-write-error?)
        (g$8808$1VmeqK core-prim . i/o-read-error?)
        (g$8917$1VmeqK core-prim . i/o-port-error?)
        (g$8835$1VmeqK core-prim . i/o-invalid-position-error?)
        (g$8836$1VmeqK core-prim . i/o-error-position)
        (g$8850$1VmeqK core-prim . i/o-filename-error?)
        (g$8864$1VmeqK core-prim . i/o-file-protection-error?)
        (g$8877$1VmeqK core-prim . i/o-file-is-read-only-error?)
        (g$8903$1VmeqK core-prim . i/o-file-does-not-exist-error?)
        (g$8890$1VmeqK core-prim . i/o-file-already-exists-error?)
        (g$8795$1VmeqK core-prim . i/o-error?)
        (g$8918$1VmeqK core-prim . i/o-error-port)
        (g$8851$1VmeqK core-prim . i/o-error-filename)
        (g$8945$1VmeqK core-prim . i/o-encoding-error?)
        (g$8946$1VmeqK core-prim . i/o-encoding-error-char)
        (g$8931$1VmeqK core-prim . i/o-decoding-error?)
        (g$15697$1VmeqK core-prim . get-u8)
        (g$15696$1VmeqK core-prim . get-string-n!)
        (g$15695$1VmeqK core-prim . get-string-n)
        (g$15694$1VmeqK core-prim . get-string-all)
        (g$15693$1VmeqK core-prim . get-line)
        (g$10818$1VmeqK core-prim . get-datum)
        (g$15692$1VmeqK core-prim . get-char)
        (g$15691$1VmeqK core-prim . get-bytevector-some)
        (g$15690$1VmeqK core-prim . get-bytevector-n!)
        (g$15689$1VmeqK core-prim . get-bytevector-n)
        (g$15688$1VmeqK core-prim . get-bytevector-all)
        (g$15687$1VmeqK core-prim . flush-output-port)
        (g$15686$1VmeqK core-prim . close-port)
        (g$10823$1VmeqK core-prim . call-with-string-output-port)
        (g$10824$1VmeqK core-prim . call-with-port)
        (g$15685$1VmeqK core-prim . call-with-bytevector-output-port)
        (g$15684$1VmeqK core-prim . bytevector->string)
        (g$10816$1VmeqK core-prim . buffer-mode?)
        (g$15683$1VmeqK core-prim . binary-port?)
        (g$12340$1VmeqK core-prim . scheme-report-environment)
        (g$8989$1VmeqK core-prim . quotient)
        (g$12339$1VmeqK core-prim . null-environment)
        (g$8990$1VmeqK core-prim . remainder)
        (g$8991$1VmeqK core-prim . modulo)
        (g$8986$1VmeqK core-prim . inexact->exact)
        (g$8993$1VmeqK core-prim . force)
        (g$8987$1VmeqK core-prim . exact->inexact)
        (g$15682$1VmeqK core-prim . exit)
        (g$15379$1VmeqK core-prim . command-line)
        (g$15681$1VmeqK core-prim . string-fill!)
        (g$15680$1VmeqK core-prim . string-set!)
        (g$15679$1VmeqK core-prim . set-cdr!)
        (g$15678$1VmeqK core-prim . set-car!)
        (g$7249$1VmeqK core-prim . remove)
        (g$7250$1VmeqK core-prim . remv)
        (g$7230$1VmeqK core-prim . remp)
        (g$7251$1VmeqK core-prim . remq)
        (g$7229$1VmeqK core-prim . partition)
        (g$7237$1VmeqK core-prim . memv)
        (g$7236$1VmeqK core-prim . memq)
        (g$7239$1VmeqK core-prim . memp)
        (g$7238$1VmeqK core-prim . member)
        (g$7243$1VmeqK core-prim . exists)
        (g$7242$1VmeqK core-prim . for-all)
        (g$7248$1VmeqK core-prim . fold-right)
        (g$7247$1VmeqK core-prim . fold-left)
        (g$7228$1VmeqK core-prim . find)
        (g$7231$1VmeqK core-prim . filter)
        (g$7246$1VmeqK core-prim . cons*)
        (g$7233$1VmeqK core-prim . assv)
        (g$7232$1VmeqK core-prim . assq)
        (g$7235$1VmeqK core-prim . assp)
        (g$7234$1VmeqK core-prim . assoc)
        (g$15677$1VmeqK core-prim . with-exception-handler)
        (g$15676$1VmeqK core-prim . raise-continuable)
        (g$15675$1VmeqK core-prim . raise)
        (g$12342$1VmeqK core-prim . eval)
        (g$12338$1VmeqK core-prim . environment)
        (g$10910$1VmeqK core-prim . make-enumeration)
        (g$10917$1VmeqK core-prim . enum-set=?)
        (g$10911$1VmeqK core-prim . enum-set-universe)
        (g$10918$1VmeqK core-prim . enum-set-union)
        (g$10916$1VmeqK core-prim . enum-set-subset?)
        (g$10922$1VmeqK core-prim . enum-set-projection)
        (g$10915$1VmeqK core-prim . enum-set-member?)
        (g$10919$1VmeqK core-prim . enum-set-intersection)
        (g$10912$1VmeqK core-prim . enum-set-indexer)
        (g$10920$1VmeqK core-prim . enum-set-difference)
        (g$10913$1VmeqK core-prim . enum-set-constructor)
        (g$10921$1VmeqK core-prim . enum-set-complement)
        (g$10914$1VmeqK core-prim . enum-set->list)
        (g$8682$1VmeqK core-prim . who-condition?)
        (g$8601$1VmeqK core-prim . warning?)
        (g$8640$1VmeqK core-prim . violation?)
        (g$8782$1VmeqK core-prim . undefined-violation?)
        (g$8767$1VmeqK core-prim . syntax-violation?)
        (g$8769$1VmeqK core-prim . syntax-violation-subform)
        (g$8768$1VmeqK core-prim . syntax-violation-form)
        (g$12360$1VmeqK core-prim . syntax-violation)
        (g$15674$1VmeqK core-prim . simple-conditions)
        (g$8614$1VmeqK core-prim . serious-condition?)
        (g$8726$1VmeqK core-prim . non-continuable-violation?)
        (g$8587$1VmeqK core-prim . message-condition?)
        (g$8680$1VmeqK core-prim . make-who-condition)
        (g$8600$1VmeqK core-prim . make-warning)
        (g$8639$1VmeqK core-prim . make-violation)
        (g$8781$1VmeqK core-prim . make-undefined-violation)
        (g$8764$1VmeqK core-prim . make-syntax-violation)
        (g$8613$1VmeqK core-prim . make-serious-condition)
        (g$8725$1VmeqK core-prim . make-non-continuable-violation)
        (g$8585$1VmeqK core-prim . make-message-condition)
        (g$8751$1VmeqK core-prim . make-lexical-violation)
        (g$8665$1VmeqK core-prim . make-irritants-condition)
        (g$8738$1VmeqK
          core-prim
          .
          make-implementation-restriction-violation)
        (g$8626$1VmeqK core-prim . make-error)
        (g$8652$1VmeqK core-prim . make-assertion-violation)
        (g$8752$1VmeqK core-prim . lexical-violation?)
        (g$8667$1VmeqK core-prim . irritants-condition?)
        (g$8739$1VmeqK
          core-prim
          .
          implementation-restriction-violation?)
        (g$8627$1VmeqK core-prim . error?)
        (g$8683$1VmeqK core-prim . condition-who)
        (g$15673$1VmeqK core-prim . condition-predicate)
        (g$8588$1VmeqK core-prim . condition-message)
        (g$8668$1VmeqK core-prim . condition-irritants)
        (g$15672$1VmeqK core-prim . condition-accessor)
        (g$15671$1VmeqK core-prim . condition)
        (g$8653$1VmeqK core-prim . assertion-violation?)
        (g$15670$1VmeqK core-prim . condition?)
        (g$7933$1VmeqK core-prim . utf32->string)
        (g$7932$1VmeqK core-prim . utf16->string)
        (g$7930$1VmeqK core-prim . utf8->string)
        (g$7934$1VmeqK core-prim . uint-list->bytevector)
        (g$7926$1VmeqK core-prim . u8-list->bytevector)
        (g$7927$1VmeqK core-prim . string->utf8)
        (g$7929$1VmeqK core-prim . string->utf32)
        (g$7928$1VmeqK core-prim . string->utf16)
        (g$7935$1VmeqK core-prim . sint-list->bytevector)
        (g$7901$1VmeqK core-prim . native-endianness)
        (g$7583$1VmeqK core-prim . bytevector?)
        (g$7917$1VmeqK core-prim . bytevector=?)
        (g$15669$1VmeqK core-prim . bytevector-uint-set!)
        (g$15668$1VmeqK core-prim . bytevector-uint-ref)
        (g$7922$1VmeqK core-prim . bytevector-u8-set!)
        (g$7921$1VmeqK core-prim . bytevector-u8-ref)
        (g$7963$1VmeqK core-prim . bytevector-u64-set!)
        (g$7959$1VmeqK core-prim . bytevector-u64-ref)
        (g$7965$1VmeqK core-prim . bytevector-u64-native-set!)
        (g$7961$1VmeqK core-prim . bytevector-u64-native-ref)
        (g$7955$1VmeqK core-prim . bytevector-u32-set!)
        (g$7951$1VmeqK core-prim . bytevector-u32-ref)
        (g$7957$1VmeqK core-prim . bytevector-u32-native-set!)
        (g$7953$1VmeqK core-prim . bytevector-u32-native-ref)
        (g$7947$1VmeqK core-prim . bytevector-u16-set!)
        (g$7943$1VmeqK core-prim . bytevector-u16-ref)
        (g$7949$1VmeqK core-prim . bytevector-u16-native-set!)
        (g$7945$1VmeqK core-prim . bytevector-u16-native-ref)
        (g$15667$1VmeqK core-prim . bytevector-sint-set!)
        (g$15666$1VmeqK core-prim . bytevector-sint-ref)
        (g$7924$1VmeqK core-prim . bytevector-s8-set!)
        (g$7923$1VmeqK core-prim . bytevector-s8-ref)
        (g$7964$1VmeqK core-prim . bytevector-s64-set!)
        (g$7960$1VmeqK core-prim . bytevector-s64-ref)
        (g$7966$1VmeqK core-prim . bytevector-s64-native-set!)
        (g$7962$1VmeqK core-prim . bytevector-s64-native-ref)
        (g$7956$1VmeqK core-prim . bytevector-s32-set!)
        (g$7952$1VmeqK core-prim . bytevector-s32-ref)
        (g$7958$1VmeqK core-prim . bytevector-s32-native-set!)
        (g$7954$1VmeqK core-prim . bytevector-s32-native-ref)
        (g$7948$1VmeqK core-prim . bytevector-s16-set!)
        (g$7944$1VmeqK core-prim . bytevector-s16-ref)
        (g$7950$1VmeqK core-prim . bytevector-s16-native-set!)
        (g$7946$1VmeqK core-prim . bytevector-s16-native-ref)
        (g$7916$1VmeqK core-prim . bytevector-length)
        (g$7941$1VmeqK core-prim . bytevector-ieee-single-set!)
        (g$7939$1VmeqK core-prim . bytevector-ieee-single-ref)
        (g$7969$1VmeqK core-prim . bytevector-ieee-single-native-set!)
        (g$7967$1VmeqK core-prim . bytevector-ieee-single-native-ref)
        (g$7942$1VmeqK core-prim . bytevector-ieee-double-set!)
        (g$7940$1VmeqK core-prim . bytevector-ieee-double-ref)
        (g$7970$1VmeqK core-prim . bytevector-ieee-double-native-set!)
        (g$7968$1VmeqK core-prim . bytevector-ieee-double-native-ref)
        (g$7918$1VmeqK core-prim . bytevector-fill!)
        (g$7919$1VmeqK core-prim . bytevector-copy!)
        (g$7920$1VmeqK core-prim . bytevector-copy)
        (g$7936$1VmeqK core-prim . bytevector->uint-list)
        (g$7925$1VmeqK core-prim . bytevector->u8-list)
        (g$7937$1VmeqK core-prim . bytevector->sint-list)
        (g$8972$1VmeqK core-prim . no-nans-violation?)
        (g$8959$1VmeqK core-prim . no-infinities-violation?)
        (g$8971$1VmeqK core-prim . make-no-nans-violation)
        (g$8958$1VmeqK core-prim . make-no-infinities-violation)
        (g$8215$1VmeqK core-prim . real->flonum)
        (g$10254$1VmeqK core-prim . flzero?)
        (g$10249$1VmeqK core-prim . fltruncate)
        (g$10235$1VmeqK core-prim . fltan)
        (g$10240$1VmeqK core-prim . flsqrt)
        (g$10233$1VmeqK core-prim . flsin)
        (g$10250$1VmeqK core-prim . flround)
        (g$10252$1VmeqK core-prim . flpositive?)
        (g$7588$1VmeqK core-prim . flonum?)
        (g$10256$1VmeqK core-prim . flodd?)
        (g$10199$1VmeqK core-prim . flnumerator)
        (g$10253$1VmeqK core-prim . flnegative?)
        (g$10232$1VmeqK core-prim . flnan?)
        (g$10217$1VmeqK core-prim . flmod0)
        (g$10216$1VmeqK core-prim . flmod)
        (g$10258$1VmeqK core-prim . flmin)
        (g$10257$1VmeqK core-prim . flmax)
        (g$10239$1VmeqK core-prim . fllog)
        (g$10225$1VmeqK core-prim . flinteger?)
        (g$10231$1VmeqK core-prim . flinfinite?)
        (g$10248$1VmeqK core-prim . flfloor)
        (g$10226$1VmeqK core-prim . flfinite?)
        (g$10242$1VmeqK core-prim . flexpt)
        (g$10241$1VmeqK core-prim . flexp)
        (g$10255$1VmeqK core-prim . fleven?)
        (g$10224$1VmeqK core-prim . fldiv0-and-mod0)
        (g$10211$1VmeqK core-prim . fldiv0)
        (g$10218$1VmeqK core-prim . fldiv-and-mod)
        (g$10223$1VmeqK core-prim . fldiv)
        (g$10198$1VmeqK core-prim . fldenominator)
        (g$10234$1VmeqK core-prim . flcos)
        (g$10243$1VmeqK core-prim . flceiling)
        (g$10238$1VmeqK core-prim . flatan)
        (g$10236$1VmeqK core-prim . flasin)
        (g$10237$1VmeqK core-prim . flacos)
        (g$10251$1VmeqK core-prim . flabs)
        (g$10205$1VmeqK core-prim . fl>?)
        (g$10206$1VmeqK core-prim . fl>=?)
        (g$10202$1VmeqK core-prim . fl=?)
        (g$10203$1VmeqK core-prim . fl<?)
        (g$10204$1VmeqK core-prim . fl<=?)
        (g$10201$1VmeqK core-prim . fl/)
        (g$10200$1VmeqK core-prim . fl-)
        (g$10196$1VmeqK core-prim . fl+)
        (g$10197$1VmeqK core-prim . fl*)
        (g$8216$1VmeqK core-prim . fixnum->flonum)
        (g$9299$1VmeqK core-prim . fxzero?)
        (g$9262$1VmeqK core-prim . fxxor)
        (g$9337$1VmeqK core-prim . fxrotate-bit-field)
        (g$9338$1VmeqK core-prim . fxreverse-bit-field)
        (g$9289$1VmeqK core-prim . fxpositive?)
        (g$9309$1VmeqK core-prim . fxodd?)
        (g$9243$1VmeqK core-prim . fxnot)
        (g$9294$1VmeqK core-prim . fxnegative?)
        (g$9273$1VmeqK core-prim . fxmod0)
        (g$9272$1VmeqK core-prim . fxmod)
        (g$9311$1VmeqK core-prim . fxmin)
        (g$9310$1VmeqK core-prim . fxmax)
        (g$9240$1VmeqK core-prim . fxlength)
        (g$9261$1VmeqK core-prim . fxior)
        (g$9319$1VmeqK core-prim . fxif)
        (g$9241$1VmeqK core-prim . fxfirst-bit-set)
        (g$9304$1VmeqK core-prim . fxeven?)
        (g$9284$1VmeqK core-prim . fxdiv0-and-mod0)
        (g$9279$1VmeqK core-prim . fxdiv0)
        (g$9274$1VmeqK core-prim . fxdiv-and-mod)
        (g$9267$1VmeqK core-prim . fxdiv)
        (g$9334$1VmeqK core-prim . fxcopy-bit-field)
        (g$9324$1VmeqK core-prim . fxcopy-bit)
        (g$9242$1VmeqK core-prim . fxbit-set?)
        (g$9329$1VmeqK core-prim . fxbit-field)
        (g$9235$1VmeqK core-prim . fxbit-count)
        (g$9336$1VmeqK core-prim . fxarithmetic-shift-right)
        (g$9335$1VmeqK core-prim . fxarithmetic-shift-left)
        (g$9230$1VmeqK core-prim . fxarithmetic-shift)
        (g$9260$1VmeqK core-prim . fxand)
        (g$9252$1VmeqK core-prim . fx>?)
        (g$9253$1VmeqK core-prim . fx>=?)
        (g$9249$1VmeqK core-prim . fx=?)
        (g$9250$1VmeqK core-prim . fx<?)
        (g$9251$1VmeqK core-prim . fx<=?)
        (g$9313$1VmeqK core-prim . fx-/carry)
        (g$9224$1VmeqK core-prim . fx-)
        (g$9314$1VmeqK core-prim . fx+/carry)
        (g$9222$1VmeqK core-prim . fx+)
        (g$9312$1VmeqK core-prim . fx*/carry)
        (g$9223$1VmeqK core-prim . fx*)
        (g$9193$1VmeqK core-prim . greatest-fixnum)
        (g$9194$1VmeqK core-prim . least-fixnum)
        (g$7589$1VmeqK core-prim . fixnum-width)
        (g$7587$1VmeqK core-prim . fixnum?)
        (g$9131$1VmeqK core-prim . bitwise-rotate-bit-field)
        (g$15665$1VmeqK core-prim . bitwise-reverse-bit-field)
        (g$9122$1VmeqK core-prim . bitwise-length)
        (g$9125$1VmeqK core-prim . bitwise-if)
        (g$9123$1VmeqK core-prim . bitwise-first-bit-set)
        (g$9128$1VmeqK core-prim . bitwise-copy-bit-field)
        (g$9126$1VmeqK core-prim . bitwise-copy-bit)
        (g$9124$1VmeqK core-prim . bitwise-bit-set?)
        (g$9127$1VmeqK core-prim . bitwise-bit-field)
        (g$9121$1VmeqK core-prim . bitwise-bit-count)
        (g$9120$1VmeqK core-prim . bitwise-xor)
        (g$9119$1VmeqK core-prim . bitwise-ior)
        (g$9118$1VmeqK core-prim . bitwise-and)
        (g$9117$1VmeqK core-prim . bitwise-not)
        (g$9130$1VmeqK core-prim . bitwise-arithmetic-shift-right)
        (g$9129$1VmeqK core-prim . bitwise-arithmetic-shift-left)
        (g$15664$1VmeqK core-prim . bitwise-arithmetic-shift)
        (g$8230$1VmeqK core-prim . zero?)
        (g$7582$1VmeqK core-prim . vector?)
        (g$7598$1VmeqK core-prim . vector-set!)
        (g$7597$1VmeqK core-prim . vector-ref)
        (g$7661$1VmeqK core-prim . vector-map)
        (g$15663$1VmeqK core-prim . vector-length)
        (g$7662$1VmeqK core-prim . vector-for-each)
        (g$7599$1VmeqK core-prim . vector-fill!)
        (g$15662$1VmeqK core-prim . vector->list)
        (g$15661$1VmeqK core-prim . vector)
        (g$15660$1VmeqK core-prim . values)
        (g$8282$1VmeqK core-prim . truncate)
        (g$8274$1VmeqK core-prim . tan)
        (g$7584$1VmeqK core-prim . symbol?)
        (g$7646$1VmeqK core-prim . symbol=?)
        (g$15659$1VmeqK core-prim . symbol->string)
        (g$15658$1VmeqK core-prim . substring)
        (g$15657$1VmeqK core-prim . string?)
        (g$7643$1VmeqK core-prim . string>?)
        (g$7645$1VmeqK core-prim . string>=?)
        (g$7641$1VmeqK core-prim . string=?)
        (g$7642$1VmeqK core-prim . string<?)
        (g$7644$1VmeqK core-prim . string<=?)
        (g$15656$1VmeqK core-prim . string-ref)
        (g$15655$1VmeqK core-prim . string-length)
        (g$7663$1VmeqK core-prim . string-for-each)
        (g$15654$1VmeqK core-prim . string-copy)
        (g$15653$1VmeqK core-prim . string-append)
        (g$15652$1VmeqK core-prim . string->symbol)
        (g$15651$1VmeqK core-prim . string->number)
        (g$15650$1VmeqK core-prim . string->list)
        (g$15649$1VmeqK core-prim . string)
        (g$8284$1VmeqK core-prim . sqrt)
        (g$8268$1VmeqK core-prim . sin)
        (g$8283$1VmeqK core-prim . round)
        (g$7601$1VmeqK core-prim . reverse)
        (g$8224$1VmeqK core-prim . real?)
        (g$8227$1VmeqK core-prim . real-valued?)
        (g$8261$1VmeqK core-prim . real-part)
        (g$7658$1VmeqK core-prim . rationalize)
        (g$8225$1VmeqK core-prim . rational?)
        (g$8228$1VmeqK core-prim . rational-valued?)
        (g$7586$1VmeqK core-prim . procedure?)
        (g$8231$1VmeqK core-prim . positive?)
        (g$15648$1VmeqK core-prim . pair?)
        (g$7631$1VmeqK core-prim . odd?)
        (g$8259$1VmeqK core-prim . numerator)
        (g$8217$1VmeqK core-prim . number?)
        (g$8238$1VmeqK core-prim . number->string)
        (g$15647$1VmeqK core-prim . null?)
        (g$15646$1VmeqK core-prim . not)
        (g$8232$1VmeqK core-prim . negative?)
        (g$8218$1VmeqK core-prim . nan?)
        (g$7633$1VmeqK core-prim . min)
        (g$7632$1VmeqK core-prim . max)
        (g$7244$1VmeqK core-prim . map)
        (g$15645$1VmeqK core-prim . make-vector)
        (g$15644$1VmeqK core-prim . make-string)
        (g$8254$1VmeqK core-prim . make-rectangular)
        (g$8255$1VmeqK core-prim . make-polar)
        (g$8257$1VmeqK core-prim . magnitude)
        (g$8277$1VmeqK core-prim . log)
        (g$15643$1VmeqK core-prim . list?)
        (g$7224$1VmeqK core-prim . list-tail)
        (g$7225$1VmeqK core-prim . list-ref)
        (g$7595$1VmeqK core-prim . list->vector)
        (g$7596$1VmeqK core-prim . list->string)
        (g$15642$1VmeqK core-prim . list)
        (g$15641$1VmeqK core-prim . length)
        (g$7635$1VmeqK core-prim . lcm)
        (g$8226$1VmeqK core-prim . integer?)
        (g$8229$1VmeqK core-prim . integer-valued?)
        (g$15640$1VmeqK core-prim . integer->char)
        (g$8220$1VmeqK core-prim . infinite?)
        (g$8222$1VmeqK core-prim . inexact?)
        (g$8233$1VmeqK core-prim . inexact)
        (g$8262$1VmeqK core-prim . imag-part)
        (g$7634$1VmeqK core-prim . gcd)
        (g$7245$1VmeqK core-prim . for-each)
        (g$8280$1VmeqK core-prim . floor)
        (g$8219$1VmeqK core-prim . finite?)
        (g$8286$1VmeqK core-prim . expt)
        (g$8267$1VmeqK core-prim . exp)
        (g$8221$1VmeqK core-prim . exact?)
        (g$8285$1VmeqK core-prim . exact-integer-sqrt)
        (g$8234$1VmeqK core-prim . exact)
        (g$7630$1VmeqK core-prim . even?)
        (g$15639$1VmeqK core-prim . error)
        (g$15638$1VmeqK core-prim . eqv?)
        (g$15637$1VmeqK core-prim . equal?)
        (g$15636$1VmeqK core-prim . eq?)
        (g$15635$1VmeqK core-prim . dynamic-wind)
        (g$7594$1VmeqK core-prim . div0-and-mod0)
        (g$7592$1VmeqK core-prim . mod0)
        (g$7590$1VmeqK core-prim . div0)
        (g$7593$1VmeqK core-prim . div-and-mod)
        (g$7591$1VmeqK core-prim . mod)
        (g$8278$1VmeqK core-prim . div)
        (g$8260$1VmeqK core-prim . denominator)
        (g$8271$1VmeqK core-prim . cos)
        (g$15634$1VmeqK core-prim . cons)
        (g$8223$1VmeqK core-prim . complex?)
        (g$7581$1VmeqK core-prim . char?)
        (g$7655$1VmeqK core-prim . char>?)
        (g$7657$1VmeqK core-prim . char>=?)
        (g$7653$1VmeqK core-prim . char=?)
        (g$7654$1VmeqK core-prim . char<?)
        (g$7656$1VmeqK core-prim . char<=?)
        (g$15633$1VmeqK core-prim . char->integer)
        (g$8281$1VmeqK core-prim . ceiling)
        (g$15632$1VmeqK core-prim . call-with-values)
        (g$15631$1VmeqK core-prim . call/cc)
        (g$15630$1VmeqK core-prim . call-with-current-continuation)
        (g$7629$1VmeqK core-prim . cddddr)
        (g$7628$1VmeqK core-prim . cdddar)
        (g$7627$1VmeqK core-prim . cddadr)
        (g$7626$1VmeqK core-prim . cddaar)
        (g$7625$1VmeqK core-prim . cdaddr)
        (g$7624$1VmeqK core-prim . cdadar)
        (g$7623$1VmeqK core-prim . cdaadr)
        (g$7622$1VmeqK core-prim . cdaaar)
        (g$7621$1VmeqK core-prim . cadddr)
        (g$7620$1VmeqK core-prim . caddar)
        (g$7619$1VmeqK core-prim . cadadr)
        (g$7618$1VmeqK core-prim . cadaar)
        (g$7617$1VmeqK core-prim . caaddr)
        (g$7616$1VmeqK core-prim . caadar)
        (g$7615$1VmeqK core-prim . caaadr)
        (g$7614$1VmeqK core-prim . caaaar)
        (g$7613$1VmeqK core-prim . cdddr)
        (g$7612$1VmeqK core-prim . cddar)
        (g$7611$1VmeqK core-prim . cdadr)
        (g$7610$1VmeqK core-prim . cdaar)
        (g$7609$1VmeqK core-prim . caddr)
        (g$7608$1VmeqK core-prim . cadar)
        (g$7607$1VmeqK core-prim . caadr)
        (g$7606$1VmeqK core-prim . caaar)
        (g$7605$1VmeqK core-prim . cddr)
        (g$7604$1VmeqK core-prim . cdar)
        (g$7603$1VmeqK core-prim . cadr)
        (g$7602$1VmeqK core-prim . caar)
        (g$15629$1VmeqK core-prim . cdr)
        (g$15628$1VmeqK core-prim . car)
        (g$7585$1VmeqK core-prim . boolean?)
        (g$7647$1VmeqK core-prim . boolean=?)
        (g$8276$1VmeqK core-prim . atan)
        (g$15627$1VmeqK core-prim . assertion-violation)
        (g$8269$1VmeqK core-prim . asin)
        (g$15626$1VmeqK core-prim . apply)
        (g$15625$1VmeqK core-prim . append)
        (g$8256$1VmeqK core-prim . angle)
        (g$8272$1VmeqK core-prim . acos)
        (g$8279$1VmeqK core-prim . abs)
        (g$15624$1VmeqK core-prim . /)
        (g$15623$1VmeqK core-prim . *)
        (g$15622$1VmeqK core-prim . -)
        (g$15621$1VmeqK core-prim . +)
        (g$8253$1VmeqK core-prim . >=)
        (g$8252$1VmeqK core-prim . >)
        (g$8249$1VmeqK core-prim . =)
        (g$8251$1VmeqK core-prim . <=)
        (g$8250$1VmeqK core-prim . <)
        (g$15620$1VmeqK core-prim . $bytevector-set!)
        (g$15619$1VmeqK core-prim . $bytevector-ref)
        (g$15618$1VmeqK core-prim . $fl>=?)
        (g$15617$1VmeqK core-prim . $fl>?)
        (g$15616$1VmeqK core-prim . $fl<=?)
        (g$15615$1VmeqK core-prim . $fl<?)
        (g$15614$1VmeqK core-prim . $fl-)
        (g$15613$1VmeqK core-prim . $fl/)
        (g$15612$1VmeqK core-prim . $fl*)
        (g$15611$1VmeqK core-prim . $fl+)
        (g$15610$1VmeqK core-prim . $fl=?)
        (g$15609$1VmeqK core-prim . $try)
        (g$15608$1VmeqK core-prim . $fxarithmetic-shift-right)
        (g$15607$1VmeqK core-prim . $fxarithmetic-shift-left)
        (g$15606$1VmeqK core-prim . $$fx-)
        (g$15605$1VmeqK core-prim . $$fx*)
        (g$15604$1VmeqK core-prim . $$fx+)
        (g$15603$1VmeqK core-prim . $fxnot)
        (g$15602$1VmeqK core-prim . $fxxor)
        (g$15601$1VmeqK core-prim . $fxior)
        (g$15600$1VmeqK core-prim . $fxand)
        (g$15599$1VmeqK core-prim . $fx>=?)
        (g$15598$1VmeqK core-prim . $fx>?)
        (g$15597$1VmeqK core-prim . $fx<=?)
        (g$15596$1VmeqK core-prim . $fx<?)
        (g$15595$1VmeqK core-prim . $fx-)
        (g$15594$1VmeqK core-prim . $fxmod0)
        (g$15593$1VmeqK core-prim . $fxdiv0)
        (g$15592$1VmeqK core-prim . $fx*)
        (g$15591$1VmeqK core-prim . $fx+)
        (g$15590$1VmeqK core-prim . $fx=?)
        (g$15589$1VmeqK core-prim . $vector-set!)
        (g$15588$1VmeqK core-prim . $vector-ref)
        (g$15587$1VmeqK core-prim . $cdr)
        (g$15586$1VmeqK core-prim . $car)
        (g$15585$1VmeqK core-prim . make-record-printer)
        (g$15584$1VmeqK core-prim . eqv-hash)
        (g$15583$1VmeqK core-prim . reverse!)
        (g$15582$1VmeqK core-prim . deserialize-port)
        (g$15581$1VmeqK core-prim . serialize-port)
        (g$10887$1VmeqK core-prim . enum-set?)
        (g$8992$1VmeqK core-prim . make-promise)
        (g$15383$1VmeqK core-prim . load/unload)
        (g$15382$1VmeqK core-prim . load/args)
        (g$10996$1VmeqK core-prim . printf)
        (g$10997$1VmeqK core-prim . fprintf)
        (g$10998$1VmeqK core-prim . format)
        (g$15580$1VmeqK core-prim . procedure-form)
        (g$15579$1VmeqK core-prim . procedure-environment)
        (g$15578$1VmeqK core-prim . procedure-name)
        (g$15577$1VmeqK core-prim . procedure-arity)
        (g$15576$1VmeqK core-prim . gc-collect)
        (g$15575$1VmeqK core-prim . typeof)
        (g$15574$1VmeqK core-prim . clr-type?)
        (g$15573$1VmeqK core-prim . get-clr-type)
        (g$15572$1VmeqK core-prim . get-command-line)
        (g$15571$1VmeqK core-prim . vector-append)
        (g$15570$1VmeqK core-prim . vector-filter)
        (g$15569$1VmeqK core-prim . vector-reverse!)
        (g$15568$1VmeqK core-prim . vector-contains?)
        (g$15567$1VmeqK core-prim . vector-index-of)
        (g$15566$1VmeqK core-prim . vector-copy)
        (g$15565$1VmeqK core-prim . vector-binary-search)
        (g$15564$1VmeqK core-prim . string-ci-compare)
        (g$15563$1VmeqK core-prim . string-compare)
        (g$15562$1VmeqK core-prim . string-format)
        (g$15377$1VmeqK core-prim . trace-printer)
        (g$15561$1VmeqK core-prim . make-traced-procedure)
        (g$11018$1VmeqK core-prim . make-traced-macro)
        (g$12356$1VmeqK core-prim . assertion-error)
        (g$15560$1VmeqK core-prim . time-it)
        (g$11025$1VmeqK core-prim . make-parameter)
        (g$15559$1VmeqK core-prim . library-locator)
        (g$15558$1VmeqK core-prim . get-library-paths)
        (g$15557$1VmeqK core-prim . open-tcp-input/output-port)
        (g$15556$1VmeqK core-prim . hashtable-for-each)
        (g$15555$1VmeqK core-prim . hashtable-map)
        (g$12334$1VmeqK core-prim . environment-bindings)
        (g$12337$1VmeqK core-prim . environment-symbols)
        (g$12333$1VmeqK core-prim . interaction-environment-symbols)
        (g$15554$1VmeqK core-prim . optimization-level)
        (g$11663$1VmeqK core-prim . library-path)
        (g$12042$1VmeqK core-prim . make-compile-time-value)
        (g$12343$1VmeqK core-prim . expand->core)
        (g$12341$1VmeqK core-prim . expand)
        (g$15380$1VmeqK core-prim . emacs-mode?)
        (g$12280$1VmeqK core-prim . syntax-transpose)
        (g$11344$1VmeqK core-prim . convert->cps)
        (g$15553$1VmeqK core-prim . inexact=?)
        (g$15552$1VmeqK core-prim . bignum-sqrt-exact)
        (g$15551$1VmeqK core-prim . bignum-sqrt)
        (g$15550$1VmeqK core-prim . flonum->string)
        (g$15549$1VmeqK core-prim . inexact-compare)
        (g$15548$1VmeqK core-prim . exact-compare)
        (g$15547$1VmeqK core-prim . condition-stacktrace)
        (g$8712$1VmeqK core-prim . stacktrace-condition?)
        (g$15378$1VmeqK core-prim . stacktrace-enable?)
        (g$8710$1VmeqK core-prim . make-stacktrace-condition)
        (g$15546$1VmeqK core-prim . condition-where)
        (g$8697$1VmeqK core-prim . where-condition?)
        (g$8695$1VmeqK core-prim . make-where-condition)
        (g$11684$1VmeqK core-prim . installed-libraries)
        (g$11675$1VmeqK core-prim . uninstall-library)
        (g$11108$1VmeqK core-prim . pretty-gensyms)
        (g$11105$1VmeqK core-prim . pretty-width)
        (g$11110$1VmeqK core-prim . pretty-print)
        (g$15545$1VmeqK core-prim . pointer+)
        (g$15544$1VmeqK $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$15543$1VmeqK $core-rtd &where-rtd &where-rcd)
        (g$15542$1VmeqK $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$15541$1VmeqK $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$15540$1VmeqK $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$15539$1VmeqK $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$15538$1VmeqK $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$15537$1VmeqK
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$15536$1VmeqK
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$15535$1VmeqK
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$15534$1VmeqK
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$15533$1VmeqK $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$15532$1VmeqK
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$15531$1VmeqK $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$15530$1VmeqK $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$15529$1VmeqK $core-rtd &i/o-rtd &i/o-rcd)
        (g$15528$1VmeqK
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$15527$1VmeqK $core-rtd &undefined-rtd &undefined-rcd)
        (g$15526$1VmeqK $core-rtd &syntax-rtd &syntax-rcd)
        (g$15525$1VmeqK $core-rtd &lexical-rtd &lexical-rcd)
        (g$15524$1VmeqK
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$15523$1VmeqK $core-rtd &who-rtd &who-rcd)
        (g$15522$1VmeqK $core-rtd &irritants-rtd &irritants-rcd)
        (g$15521$1VmeqK $core-rtd &assertion-rtd &assertion-rcd)
        (g$15520$1VmeqK $core-rtd &violation-rtd &violation-rcd)
        (g$15519$1VmeqK $core-rtd &error-rtd &error-rcd)
        (g$15518$1VmeqK $core-rtd &serious-rtd &serious-rcd)
        (g$15517$1VmeqK $core-rtd &warning-rtd &warning-rcd)
        (g$15516$1VmeqK $core-rtd &message-rtd &message-rcd)
        (g$15515$1VmeqK $core-rtd &condition-rtd &condition-rcd)
        (g$15514$1VmeqK macro . define-condition-type)
        (g$15513$1VmeqK macro . define-enumeration)
        (g$15512$1VmeqK macro . define-record-type)
        (g$15511$1VmeqK macro . parent-rtd)
        (g$15510$1VmeqK macro . nongenerative)
        (g$15509$1VmeqK macro . opaque)
        (g$15508$1VmeqK macro . sealed)
        (g$15507$1VmeqK macro . protocol)
        (g$15506$1VmeqK macro . parent)
        (g$15505$1VmeqK macro . immutable)
        (g$15504$1VmeqK macro . mutable)
        (g$15503$1VmeqK macro . fields)
        (g$15502$1VmeqK macro . error-handling-mode)
        (g$15501$1VmeqK macro . file-options)
        (g$15500$1VmeqK macro . buffer-mode)
        (g$15499$1VmeqK macro . eol-style)
        (g$15498$1VmeqK macro . guard)
        (g$15497$1VmeqK macro . trace-letrec-syntax)
        (g$15496$1VmeqK macro . trace-let-syntax)
        (g$15495$1VmeqK macro . trace-define-syntax)
        (g$15494$1VmeqK macro . trace-define)
        (g$15493$1VmeqK macro . trace-lambda)
        (g$15492$1VmeqK macro . unsyntax-splicing)
        (g$15491$1VmeqK macro . unsyntax)
        (g$15490$1VmeqK macro . unquote-splicing)
        (g$15489$1VmeqK macro . unquote)
        (g$15488$1VmeqK macro . _)
        (g$15487$1VmeqK macro . else)
        (g$15486$1VmeqK macro . =>)
        (g$15485$1VmeqK macro . ...)
        (g$15484$1VmeqK macro . assert)
        (g$15483$1VmeqK macro . endianness)
        (g$15482$1VmeqK macro . delay)
        (g$15481$1VmeqK macro . time)
        (g$15480$1VmeqK macro . or)
        (g$15479$1VmeqK macro . and)
        (g$15478$1VmeqK macro . do)
        (g$15477$1VmeqK macro . cond)
        (g$15476$1VmeqK macro . let*)
        (g$15475$1VmeqK macro . let)
        (g$15474$1VmeqK macro . identifier-syntax)
        (g$15473$1VmeqK macro . with-syntax)
        (g$15472$1VmeqK macro . quasisyntax)
        (g$15471$1VmeqK macro . quasiquote)
        (g$15470$1VmeqK macro . syntax-rules)
        (g$15469$1VmeqK macro . include-into)
        (g$15468$1VmeqK macro . include)
        (g$15467$1VmeqK macro . define-struct)
        (g$15466$1VmeqK macro . let-values)
        (g$15465$1VmeqK macro . let*-values)
        (g$15464$1VmeqK core-macro . record-constructor-descriptor)
        (g$15463$1VmeqK core-macro . record-type-descriptor)
        (g$15462$1VmeqK core-macro . fluid-let-syntax)
        (g$15461$1VmeqK macro . case)
        (g$15460$1VmeqK macro . parameterize)
        (g$15459$1VmeqK macro . unless)
        (g$15458$1VmeqK macro . when)
        (g$15457$1VmeqK core-macro . if)
        (g$15456$1VmeqK core-macro . letrec*)
        (g$15455$1VmeqK core-macro . letrec)
        (g$15454$1VmeqK core-macro . type-descriptor)
        (g$15453$1VmeqK core-macro . case-lambda)
        (g$15452$1VmeqK core-macro . lambda)
        (g$15451$1VmeqK core-macro . syntax)
        (g$15450$1VmeqK core-macro . syntax-case)
        (g$15449$1VmeqK core-macro . quote)
        (g$15448$1VmeqK core-macro . foreign-call)
        (g$15447$1VmeqK letrec-syntax)
        (g$15446$1VmeqK let-syntax)
        (g$15445$1VmeqK set!)
        (g$15444$1VmeqK export)
        (g$15443$1VmeqK import)
        (g$15442$1VmeqK library)
        (g$15441$1VmeqK begin)
        (g$15440$1VmeqK module)
        (g$15439$1VmeqK define-syntax)
        (g$15438$1VmeqK define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28428$1VmeqK
      'g$15864$1VmeqK
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$15802$1VmeqK)
        (eval-core . g$15801$1VmeqK)
        (set-symbol-value! . g$15799$1VmeqK)
        (symbol-value . g$15798$1VmeqK)
        (gensym . g$15795$1VmeqK)
        (void . g$15794$1VmeqK))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$32939$1VmeqK
     g$trace-printer$33007$1VmeqK
     (g$make-parameter$27565$1VmeqK g$pretty-print$27775$1VmeqK))
   (g$stacktrace-enable?$32940$1VmeqK
     g$stacktrace-enable?$33008$1VmeqK
     (g$make-parameter$27565$1VmeqK '#t))
   (g$command-line$32941$1VmeqK
     g$command-line$33009$1VmeqK
     (g$make-parameter$27565$1VmeqK (get-command-line)))
   (g$emacs-mode?$32942$1VmeqK
     g$emacs-mode?$33010$1VmeqK
     (g$make-parameter$27565$1VmeqK '#f))
   (g$local-library-path$32943$1VmeqK
     g$local-library-path$33011$1VmeqK
     (case-lambda
       ((g$filename$32958$1VmeqK)
        (cons
          (g$get-directory-name$21320$1VmeqK g$filename$32958$1VmeqK)
          (g$library-path$28412$1VmeqK)))))
   (g$load/args$32944$1VmeqK
     g$load/args$33012$1VmeqK
     (case-lambda
       ((g$filename$32959$1VmeqK . g$args$32960$1VmeqK)
        (begin
          (apply
            g$load-r6rs-top-level$32955$1VmeqK
            g$filename$32959$1VmeqK
            'load
            g$args$32960$1VmeqK)
          (void)))))
   (g$load/unload$32945$1VmeqK
     g$load/unload$33013$1VmeqK
     (case-lambda
       ((g$filename$32961$1VmeqK)
        ((case-lambda
           ((g$libs$32962$1VmeqK)
            (begin
              (g$load$32946$1VmeqK g$filename$32961$1VmeqK)
              (g$for-each$20350$1VmeqK
                (case-lambda
                  ((g$lib$32963$1VmeqK)
                   (if (not (g$memq$20341$1VmeqK
                              g$lib$32963$1VmeqK
                              g$libs$32962$1VmeqK))
                     (g$uninstall-library$28424$1VmeqK
                       g$lib$32963$1VmeqK)
                     (void))))
                (g$installed-libraries$28433$1VmeqK)))))
         (g$installed-libraries$28433$1VmeqK)))))
   (g$load$32946$1VmeqK
     g$load$33014$1VmeqK
     (case-lambda
       ((g$filename$32964$1VmeqK)
        (begin
          (apply
            g$load-r6rs-top-level$32955$1VmeqK
            g$filename$32964$1VmeqK
            'load
            (cdr (g$command-line$32941$1VmeqK)))
          (void)))))
   (g$ironscheme-test$32947$1VmeqK
     g$ironscheme-test$33015$1VmeqK
     (case-lambda (() (g$load$32946$1VmeqK '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$32948$1VmeqK
     g$ironscheme-build$33016$1VmeqK
     (case-lambda
       (() (g$ironscheme-build$32948$1VmeqK '#f))
       ((g$cps?$32965$1VmeqK)
        (begin
          (g$call-with-output-file$27181$1VmeqK
            '"build-options.ss"
            (case-lambda
              ((g$p$32966$1VmeqK)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$32965$1VmeqK)
                   g$p$32966$1VmeqK)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$32965$1VmeqK))
                   g$p$32966$1VmeqK)
                 (g$newline$27182$1VmeqK g$p$32966$1VmeqK)))))
          (g$load$32946$1VmeqK '"ironscheme-buildscript.ss")))))
   (g$foreground-color$32949$1VmeqK
     g$foreground-color$33017$1VmeqK
     (case-lambda
       (()
        (if (not (g$emacs-mode?$32942$1VmeqK))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$32967$1VmeqK)
        (if (not (g$emacs-mode?$32942$1VmeqK))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$32967$1VmeqK))
          '#f))))
   (g$system-exception?$32950$1VmeqK
     g$system-exception?$33018$1VmeqK
     (case-lambda
       ((g$e$32968$1VmeqK)
        (clr-is-internal 'SystemException g$e$32968$1VmeqK))))
   (g$eval-top-level$32951$1VmeqK
     g$eval-top-level$33019$1VmeqK
     (case-lambda
       ((g$x$32969$1VmeqK)
        (call/cc
          (case-lambda
            ((g$k$32970$1VmeqK)
             (with-exception-handler
               (case-lambda
                 ((g$e$32971$1VmeqK)
                  ((case-lambda
                     ((g$serious?$32972$1VmeqK)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$32977$1VmeqK
                              g$current-output-port$32978$1VmeqK
                              g$foreground-color$32979$1VmeqK
                              g$current-output-port$32980$1VmeqK)
                            ((case-lambda
                               ((g$swap$32981$1VmeqK)
                                (dynamic-wind
                                  g$swap$32981$1VmeqK
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$32972$1VmeqK
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$32971$1VmeqK)
                                       (g$newline$27182$1VmeqK))))
                                  g$swap$32981$1VmeqK)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$32982$1VmeqK)
                                      (begin
                                        (g$foreground-color$32977$1VmeqK
                                          g$foreground-color$32979$1VmeqK)
                                        (set! g$foreground-color$32979$1VmeqK
                                          g$t$32982$1VmeqK))))
                                   (g$foreground-color$32977$1VmeqK))
                                  ((case-lambda
                                     ((g$t$32983$1VmeqK)
                                      (begin
                                        (g$current-output-port$32978$1VmeqK
                                          g$current-output-port$32980$1VmeqK)
                                        (set! g$current-output-port$32980$1VmeqK
                                          g$t$32983$1VmeqK))))
                                   (g$current-output-port$32978$1VmeqK))))))))
                         g$foreground-color$32949$1VmeqK
                         current-output-port
                         (if g$serious?$32972$1VmeqK 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$32972$1VmeqK
                          (g$k$32970$1VmeqK)
                          (void)))))
                   ((case-lambda
                      ((g$t$32984$1VmeqK)
                       (if g$t$32984$1VmeqK
                         g$t$32984$1VmeqK
                         (begin
                           '#f
                           (g$system-exception?$32950$1VmeqK
                             g$e$32971$1VmeqK)))))
                    (g$serious-condition?$22702$1VmeqK
                      g$e$32971$1VmeqK)))))
               (case-lambda
                 (()
                  (g$eval$32912$1VmeqK
                    g$x$32969$1VmeqK
                    (g$interaction-environment$32937$1VmeqK)))))))))))
   (g$compile-system-libraries$32952$1VmeqK
     g$compile-system-libraries$33020$1VmeqK
     (case-lambda
       (()
        (g$eval-top-level$32951$1VmeqK
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$32953$1VmeqK
     g$compile$33021$1VmeqK
     (case-lambda
       ((g$filename$32985$1VmeqK)
        (g$load-r6rs-top-level$32955$1VmeqK
          g$filename$32985$1VmeqK
          'compile))))
   (g$compile->closure$32954$1VmeqK
     g$compile->closure$33022$1VmeqK
     (case-lambda
       ((g$filename$32986$1VmeqK)
        (g$load-r6rs-top-level$32955$1VmeqK
          g$filename$32986$1VmeqK
          'closure))))
   (g$load-r6rs-top-level$32955$1VmeqK
     g$load-r6rs-top-level$33023$1VmeqK
     (case-lambda
       ((g$filename$32987$1VmeqK
          g$how$32988$1VmeqK
          .
          g$args$32989$1VmeqK)
        ((case-lambda
           ((g$library-path$32992$1VmeqK g$library-path$32993$1VmeqK)
            ((case-lambda
               ((g$swap$32994$1VmeqK)
                (dynamic-wind
                  g$swap$32994$1VmeqK
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$32995$1VmeqK)
                         ((case-lambda
                            ((g$t$32996$1VmeqK)
                             (if (eqv? g$t$32996$1VmeqK 'closure)
                               (g$pre-compile-r6rs-top-level$32935$1VmeqK
                                 g$x*$32995$1VmeqK)
                               (if (eqv? g$t$32996$1VmeqK 'load)
                                 ((case-lambda
                                    ((g$command-line$32999$1VmeqK
                                       g$command-line$33000$1VmeqK)
                                     ((case-lambda
                                        ((g$swap$33001$1VmeqK)
                                         (dynamic-wind
                                           g$swap$33001$1VmeqK
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$32934$1VmeqK
                                                 g$x*$32995$1VmeqK))))
                                           g$swap$33001$1VmeqK)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$33002$1VmeqK)
                                             (begin
                                               (g$command-line$32999$1VmeqK
                                                 g$command-line$33000$1VmeqK)
                                               (set! g$command-line$33000$1VmeqK
                                                 g$t$33002$1VmeqK))))
                                          (g$command-line$32999$1VmeqK)))))))
                                  g$command-line$32941$1VmeqK
                                  (cons
                                    g$filename$32987$1VmeqK
                                    (g$map$20349$1VmeqK
                                      (case-lambda
                                        ((g$x$33003$1VmeqK)
                                         (g$format$27356$1VmeqK
                                           '"~a"
                                           g$x$33003$1VmeqK)))
                                      g$args$32989$1VmeqK)))
                                 (if (eqv? g$t$32996$1VmeqK 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$32934$1VmeqK
                                       g$x*$32995$1VmeqK)
                                     (g$serialize-all$28416$1VmeqK
                                       serialize-library
                                       g$compile-core-expr$28163$1VmeqK))
                                   (if '#f '#f (void)))))))
                          g$how$32988$1VmeqK)))
                      (g$with-input-from-file$27178$1VmeqK
                        g$filename$32987$1VmeqK
                        (case-lambda
                          (()
                           ((letrec ((g$f$33004$1VmeqK
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$33005$1VmeqK)
                                              (if (eof-object?
                                                    g$x$33005$1VmeqK)
                                                '()
                                                (cons
                                                  g$x$33005$1VmeqK
                                                  (g$f$33004$1VmeqK)))))
                                           (read-annotated))))))
                              g$f$33004$1VmeqK))))))))
                  g$swap$32994$1VmeqK)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$33006$1VmeqK)
                    (begin
                      (g$library-path$32992$1VmeqK
                        g$library-path$32993$1VmeqK)
                      (set! g$library-path$32993$1VmeqK
                        g$t$33006$1VmeqK))))
                 (g$library-path$32992$1VmeqK)))))))
         g$library-path$28412$1VmeqK
         (g$local-library-path$32943$1VmeqK g$filename$32987$1VmeqK)))))
   (g$fo$32956$1VmeqK
     g$fo$33024$1VmeqK
     (g$make-enumeration$27318$1VmeqK
       '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$28417$1VmeqK
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$32957$1VmeqK)
         (if (g$serious-condition?$22702$1VmeqK g$ex$32957$1VmeqK)
           (raise g$ex$32957$1VmeqK)
           (begin
             '#f
             (display g$ex$32957$1VmeqK)
             (g$newline$27182$1VmeqK))))))
    (set-symbol-value! 'load g$load$32946$1VmeqK)
    (set-symbol-value! 'compile g$compile$32953$1VmeqK)
    (set-symbol-value!
      'compile->closure
      g$compile->closure$32954$1VmeqK)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$32951$1VmeqK)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$32903$1VmeqK)
    (set-symbol-value! 'expanded2core g$expanded->core$28162$1VmeqK)
    (set-symbol-value! 'trace-printer g$trace-printer$32939$1VmeqK)
    (set-symbol-value! 'pretty-print g$pretty-print$27775$1VmeqK)
    (set-symbol-value! 'convert->cps g$convert->cps$28093$1VmeqK)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$32942$1VmeqK)
    (set-symbol-value!
      'stacktrace-enable?
      g$stacktrace-enable?$32940$1VmeqK)
    (g$file-options-constructor$27566$1VmeqK
      (g$enum-set-constructor$27321$1VmeqK g$fo$32956$1VmeqK))
    (g$library-path$28412$1VmeqK (get-library-paths))
    (g$library-extensions$28413$1VmeqK
      (cons '".ironscheme.sls" (g$library-extensions$28413$1VmeqK)))
    (g$enable-constant-fold/env$28113$1VmeqK
      '(only
         (rnrs)
         =
         <
         >
         <=
         >=
         negative?
         positive?
         zero?
         exp
         expt
         div
         mod
         div0
         mod0)
      '(except
         (rnrs arithmetic fixnums)
         fx*/carry
         fx-/carry
         fx+/carry
         fxdiv0-and-mod0
         fxdiv-and-mod)
      '(except (rnrs arithmetic flonums) fldiv0-and-mod0 fldiv-and-mod)
      '(rnrs arithmetic bitwise))
    (g$interaction-environment$32937$1VmeqK
      (g$new-interaction-environment$32936$1VmeqK))))

