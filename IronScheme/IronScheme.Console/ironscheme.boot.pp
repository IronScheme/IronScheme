;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme conditions)
  ((g$5147$19793$6Dw7t
     g$5147$20221$6Dw7t
     (make-record-type-descriptor
       '&condition
       '#f
       'g$5150$6Dw7t
       '#f
       '#f
       '#()))
   (g$5149$19794$6Dw7t g$5149$20222$6Dw7t '#f)
   (g$5148$19795$6Dw7t
     g$5148$20223$6Dw7t
     (make-record-constructor-descriptor
       g$5147$19793$6Dw7t
       '#f
       g$5149$19794$6Dw7t))
   (g$&condition?$19798$6Dw7t
     g$&condition?$20224$6Dw7t
     (record-predicate g$5147$19793$6Dw7t))
   (g$make-&condition$19799$6Dw7t
     g$make-&condition$20225$6Dw7t
     (record-constructor g$5148$19795$6Dw7t))
   (g$&condition-rtd$19800$6Dw7t
     g$&condition-rtd$20226$6Dw7t
     g$5147$19793$6Dw7t)
   (g$&condition-rcd$19801$6Dw7t
     g$&condition-rcd$20227$6Dw7t
     g$5148$19795$6Dw7t)
   (g$5184$19899$6Dw7t
     g$5184$20228$6Dw7t
     (make-record-type-descriptor
       '&message
       g$5147$19793$6Dw7t
       'g$5187$6Dw7t
       '#f
       '#f
       '#((immutable message))))
   (g$5186$19900$6Dw7t g$5186$20229$6Dw7t '#f)
   (g$5185$19901$6Dw7t
     g$5185$20230$6Dw7t
     (make-record-constructor-descriptor
       g$5184$19899$6Dw7t
       g$5148$19795$6Dw7t
       g$5186$19900$6Dw7t))
   (g$p?$19904$6Dw7t
     g$p?$20231$6Dw7t
     (record-predicate g$5184$19899$6Dw7t))
   (g$make-message-condition$19905$6Dw7t
     g$make-message-condition$20232$6Dw7t
     (record-constructor g$5185$19901$6Dw7t))
   (g$condition-message$19906$6Dw7t
     g$condition-message$20233$6Dw7t
     (record-accessor g$5184$19899$6Dw7t '0))
   (g$message-condition?$19907$6Dw7t
     g$message-condition?$20234$6Dw7t
     (condition-predicate g$5184$19899$6Dw7t))
   (g$condition-message$19908$6Dw7t
     g$condition-message$20235$6Dw7t
     (condition-accessor
       g$5184$19899$6Dw7t
       g$condition-message$19906$6Dw7t))
   (g$&message-rtd$19909$6Dw7t
     g$&message-rtd$20236$6Dw7t
     g$5184$19899$6Dw7t)
   (g$&message-rcd$19910$6Dw7t
     g$&message-rcd$20237$6Dw7t
     g$5185$19901$6Dw7t)
   (g$5199$19911$6Dw7t
     g$5199$20238$6Dw7t
     (make-record-type-descriptor
       '&warning
       g$5147$19793$6Dw7t
       'g$5202$6Dw7t
       '#f
       '#f
       '#()))
   (g$5201$19912$6Dw7t g$5201$20239$6Dw7t '#f)
   (g$5200$19913$6Dw7t
     g$5200$20240$6Dw7t
     (make-record-constructor-descriptor
       g$5199$19911$6Dw7t
       g$5148$19795$6Dw7t
       g$5201$19912$6Dw7t))
   (g$p?$19916$6Dw7t
     g$p?$20241$6Dw7t
     (record-predicate g$5199$19911$6Dw7t))
   (g$make-warning$19917$6Dw7t
     g$make-warning$20242$6Dw7t
     (record-constructor g$5200$19913$6Dw7t))
   (g$warning?$19918$6Dw7t
     g$warning?$20243$6Dw7t
     (condition-predicate g$5199$19911$6Dw7t))
   (g$&warning-rtd$19919$6Dw7t
     g$&warning-rtd$20244$6Dw7t
     g$5199$19911$6Dw7t)
   (g$&warning-rcd$19920$6Dw7t
     g$&warning-rcd$20245$6Dw7t
     g$5200$19913$6Dw7t)
   (g$5212$19921$6Dw7t
     g$5212$20246$6Dw7t
     (make-record-type-descriptor
       '&serious
       g$5147$19793$6Dw7t
       'g$5215$6Dw7t
       '#f
       '#f
       '#()))
   (g$5214$19922$6Dw7t g$5214$20247$6Dw7t '#f)
   (g$5213$19923$6Dw7t
     g$5213$20248$6Dw7t
     (make-record-constructor-descriptor
       g$5212$19921$6Dw7t
       g$5148$19795$6Dw7t
       g$5214$19922$6Dw7t))
   (g$p?$19926$6Dw7t
     g$p?$20249$6Dw7t
     (record-predicate g$5212$19921$6Dw7t))
   (g$make-serious-condition$19927$6Dw7t
     g$make-serious-condition$20250$6Dw7t
     (record-constructor g$5213$19923$6Dw7t))
   (g$serious-condition?$19928$6Dw7t
     g$serious-condition?$20251$6Dw7t
     (condition-predicate g$5212$19921$6Dw7t))
   (g$&serious-rtd$19929$6Dw7t
     g$&serious-rtd$20252$6Dw7t
     g$5212$19921$6Dw7t)
   (g$&serious-rcd$19930$6Dw7t
     g$&serious-rcd$20253$6Dw7t
     g$5213$19923$6Dw7t)
   (g$5225$19931$6Dw7t
     g$5225$20254$6Dw7t
     (make-record-type-descriptor
       '&error
       g$5212$19921$6Dw7t
       'g$5228$6Dw7t
       '#f
       '#f
       '#()))
   (g$5227$19932$6Dw7t g$5227$20255$6Dw7t '#f)
   (g$5226$19933$6Dw7t
     g$5226$20256$6Dw7t
     (make-record-constructor-descriptor
       g$5225$19931$6Dw7t
       g$5213$19923$6Dw7t
       g$5227$19932$6Dw7t))
   (g$p?$19936$6Dw7t
     g$p?$20257$6Dw7t
     (record-predicate g$5225$19931$6Dw7t))
   (g$make-error$19937$6Dw7t
     g$make-error$20258$6Dw7t
     (record-constructor g$5226$19933$6Dw7t))
   (g$error?$19938$6Dw7t
     g$error?$20259$6Dw7t
     (condition-predicate g$5225$19931$6Dw7t))
   (g$&error-rtd$19939$6Dw7t
     g$&error-rtd$20260$6Dw7t
     g$5225$19931$6Dw7t)
   (g$&error-rcd$19940$6Dw7t
     g$&error-rcd$20261$6Dw7t
     g$5226$19933$6Dw7t)
   (g$5238$19941$6Dw7t
     g$5238$20262$6Dw7t
     (make-record-type-descriptor
       '&violation
       g$5212$19921$6Dw7t
       'g$5241$6Dw7t
       '#f
       '#f
       '#()))
   (g$5240$19942$6Dw7t g$5240$20263$6Dw7t '#f)
   (g$5239$19943$6Dw7t
     g$5239$20264$6Dw7t
     (make-record-constructor-descriptor
       g$5238$19941$6Dw7t
       g$5213$19923$6Dw7t
       g$5240$19942$6Dw7t))
   (g$p?$19946$6Dw7t
     g$p?$20265$6Dw7t
     (record-predicate g$5238$19941$6Dw7t))
   (g$make-violation$19947$6Dw7t
     g$make-violation$20266$6Dw7t
     (record-constructor g$5239$19943$6Dw7t))
   (g$violation?$19948$6Dw7t
     g$violation?$20267$6Dw7t
     (condition-predicate g$5238$19941$6Dw7t))
   (g$&violation-rtd$19949$6Dw7t
     g$&violation-rtd$20268$6Dw7t
     g$5238$19941$6Dw7t)
   (g$&violation-rcd$19950$6Dw7t
     g$&violation-rcd$20269$6Dw7t
     g$5239$19943$6Dw7t)
   (g$5251$19951$6Dw7t
     g$5251$20270$6Dw7t
     (make-record-type-descriptor
       '&assertion
       g$5238$19941$6Dw7t
       'g$5254$6Dw7t
       '#f
       '#f
       '#()))
   (g$5253$19952$6Dw7t g$5253$20271$6Dw7t '#f)
   (g$5252$19953$6Dw7t
     g$5252$20272$6Dw7t
     (make-record-constructor-descriptor
       g$5251$19951$6Dw7t
       g$5239$19943$6Dw7t
       g$5253$19952$6Dw7t))
   (g$p?$19956$6Dw7t
     g$p?$20273$6Dw7t
     (record-predicate g$5251$19951$6Dw7t))
   (g$make-assertion-violation$19957$6Dw7t
     g$make-assertion-violation$20274$6Dw7t
     (record-constructor g$5252$19953$6Dw7t))
   (g$assertion-violation?$19958$6Dw7t
     g$assertion-violation?$20275$6Dw7t
     (condition-predicate g$5251$19951$6Dw7t))
   (g$&assertion-rtd$19959$6Dw7t
     g$&assertion-rtd$20276$6Dw7t
     g$5251$19951$6Dw7t)
   (g$&assertion-rcd$19960$6Dw7t
     g$&assertion-rcd$20277$6Dw7t
     g$5252$19953$6Dw7t)
   (g$5264$19962$6Dw7t
     g$5264$20278$6Dw7t
     (make-record-type-descriptor
       '&irritants
       g$5147$19793$6Dw7t
       'g$5267$6Dw7t
       '#f
       '#f
       '#((immutable irritants))))
   (g$5266$19963$6Dw7t g$5266$20279$6Dw7t '#f)
   (g$5265$19964$6Dw7t
     g$5265$20280$6Dw7t
     (make-record-constructor-descriptor
       g$5264$19962$6Dw7t
       g$5148$19795$6Dw7t
       g$5266$19963$6Dw7t))
   (g$p?$19967$6Dw7t
     g$p?$20281$6Dw7t
     (record-predicate g$5264$19962$6Dw7t))
   (g$make-irritants-condition$19968$6Dw7t
     g$make-irritants-condition$20282$6Dw7t
     (record-constructor g$5265$19964$6Dw7t))
   (g$condition-irritants$19969$6Dw7t
     g$condition-irritants$20283$6Dw7t
     (record-accessor g$5264$19962$6Dw7t '0))
   (g$irritants-condition?$19970$6Dw7t
     g$irritants-condition?$20284$6Dw7t
     (condition-predicate g$5264$19962$6Dw7t))
   (g$condition-irritants$19971$6Dw7t
     g$condition-irritants$20285$6Dw7t
     (condition-accessor
       g$5264$19962$6Dw7t
       g$condition-irritants$19969$6Dw7t))
   (g$&irritants-rtd$19972$6Dw7t
     g$&irritants-rtd$20286$6Dw7t
     g$5264$19962$6Dw7t)
   (g$&irritants-rcd$19973$6Dw7t
     g$&irritants-rcd$20287$6Dw7t
     g$5265$19964$6Dw7t)
   (g$5279$19975$6Dw7t
     g$5279$20288$6Dw7t
     (make-record-type-descriptor
       '&who
       g$5147$19793$6Dw7t
       'g$5282$6Dw7t
       '#f
       '#f
       '#((immutable who))))
   (g$5281$19976$6Dw7t g$5281$20289$6Dw7t '#f)
   (g$5280$19977$6Dw7t
     g$5280$20290$6Dw7t
     (make-record-constructor-descriptor
       g$5279$19975$6Dw7t
       g$5148$19795$6Dw7t
       g$5281$19976$6Dw7t))
   (g$p?$19980$6Dw7t
     g$p?$20291$6Dw7t
     (record-predicate g$5279$19975$6Dw7t))
   (g$make-who-condition$19981$6Dw7t
     g$make-who-condition$20292$6Dw7t
     (record-constructor g$5280$19977$6Dw7t))
   (g$condition-who$19982$6Dw7t
     g$condition-who$20293$6Dw7t
     (record-accessor g$5279$19975$6Dw7t '0))
   (g$who-condition?$19983$6Dw7t
     g$who-condition?$20294$6Dw7t
     (condition-predicate g$5279$19975$6Dw7t))
   (g$condition-who$19984$6Dw7t
     g$condition-who$20295$6Dw7t
     (condition-accessor
       g$5279$19975$6Dw7t
       g$condition-who$19982$6Dw7t))
   (g$&who-rtd$19985$6Dw7t g$&who-rtd$20296$6Dw7t g$5279$19975$6Dw7t)
   (g$&who-rcd$19986$6Dw7t g$&who-rcd$20297$6Dw7t g$5280$19977$6Dw7t)
   (g$5294$19988$6Dw7t
     g$5294$20298$6Dw7t
     (make-record-type-descriptor
       '&where
       g$5147$19793$6Dw7t
       'g$5297$6Dw7t
       '#f
       '#f
       '#((immutable where))))
   (g$5296$19989$6Dw7t g$5296$20299$6Dw7t '#f)
   (g$5295$19990$6Dw7t
     g$5295$20300$6Dw7t
     (make-record-constructor-descriptor
       g$5294$19988$6Dw7t
       g$5148$19795$6Dw7t
       g$5296$19989$6Dw7t))
   (g$p?$19993$6Dw7t
     g$p?$20301$6Dw7t
     (record-predicate g$5294$19988$6Dw7t))
   (g$make-where-condition$19994$6Dw7t
     g$make-where-condition$20302$6Dw7t
     (record-constructor g$5295$19990$6Dw7t))
   (g$condition-where$19995$6Dw7t
     g$condition-where$20303$6Dw7t
     (record-accessor g$5294$19988$6Dw7t '0))
   (g$where-condition?$19996$6Dw7t
     g$where-condition?$20304$6Dw7t
     (condition-predicate g$5294$19988$6Dw7t))
   (g$condition-where$19997$6Dw7t
     g$condition-where$20305$6Dw7t
     (condition-accessor
       g$5294$19988$6Dw7t
       g$condition-where$19995$6Dw7t))
   (g$&where-rtd$19998$6Dw7t
     g$&where-rtd$20306$6Dw7t
     g$5294$19988$6Dw7t)
   (g$&where-rcd$19999$6Dw7t
     g$&where-rcd$20307$6Dw7t
     g$5295$19990$6Dw7t)
   (g$5309$20001$6Dw7t
     g$5309$20308$6Dw7t
     (make-record-type-descriptor
       '&stacktrace
       g$5147$19793$6Dw7t
       'g$5312$6Dw7t
       '#f
       '#f
       '#((immutable stacktrace))))
   (g$5311$20002$6Dw7t g$5311$20309$6Dw7t '#f)
   (g$5310$20003$6Dw7t
     g$5310$20310$6Dw7t
     (make-record-constructor-descriptor
       g$5309$20001$6Dw7t
       g$5148$19795$6Dw7t
       g$5311$20002$6Dw7t))
   (g$p?$20006$6Dw7t
     g$p?$20311$6Dw7t
     (record-predicate g$5309$20001$6Dw7t))
   (g$make-stacktrace-condition$20007$6Dw7t
     g$make-stacktrace-condition$20312$6Dw7t
     (record-constructor g$5310$20003$6Dw7t))
   (g$condition-stacktrace$20008$6Dw7t
     g$condition-stacktrace$20313$6Dw7t
     (record-accessor g$5309$20001$6Dw7t '0))
   (g$stacktrace-condition?$20009$6Dw7t
     g$stacktrace-condition?$20314$6Dw7t
     (condition-predicate g$5309$20001$6Dw7t))
   (g$condition-stacktrace$20010$6Dw7t
     g$condition-stacktrace$20315$6Dw7t
     (condition-accessor
       g$5309$20001$6Dw7t
       g$condition-stacktrace$20008$6Dw7t))
   (g$&stacktrace-rtd$20011$6Dw7t
     g$&stacktrace-rtd$20316$6Dw7t
     g$5309$20001$6Dw7t)
   (g$&stacktrace-rcd$20012$6Dw7t
     g$&stacktrace-rcd$20317$6Dw7t
     g$5310$20003$6Dw7t)
   (g$5324$20013$6Dw7t
     g$5324$20318$6Dw7t
     (make-record-type-descriptor
       '&non-continuable
       g$5238$19941$6Dw7t
       'g$5327$6Dw7t
       '#f
       '#f
       '#()))
   (g$5326$20014$6Dw7t g$5326$20319$6Dw7t '#f)
   (g$5325$20015$6Dw7t
     g$5325$20320$6Dw7t
     (make-record-constructor-descriptor
       g$5324$20013$6Dw7t
       g$5239$19943$6Dw7t
       g$5326$20014$6Dw7t))
   (g$p?$20018$6Dw7t
     g$p?$20321$6Dw7t
     (record-predicate g$5324$20013$6Dw7t))
   (g$make-non-continuable-violation$20019$6Dw7t
     g$make-non-continuable-violation$20322$6Dw7t
     (record-constructor g$5325$20015$6Dw7t))
   (g$non-continuable-violation?$20020$6Dw7t
     g$non-continuable-violation?$20323$6Dw7t
     (condition-predicate g$5324$20013$6Dw7t))
   (g$&non-continuable-rtd$20021$6Dw7t
     g$&non-continuable-rtd$20324$6Dw7t
     g$5324$20013$6Dw7t)
   (g$&non-continuable-rcd$20022$6Dw7t
     g$&non-continuable-rcd$20325$6Dw7t
     g$5325$20015$6Dw7t)
   (g$5337$20023$6Dw7t
     g$5337$20326$6Dw7t
     (make-record-type-descriptor
       '&implementation-restriction
       g$5238$19941$6Dw7t
       'g$5340$6Dw7t
       '#f
       '#f
       '#()))
   (g$5339$20024$6Dw7t g$5339$20327$6Dw7t '#f)
   (g$5338$20025$6Dw7t
     g$5338$20328$6Dw7t
     (make-record-constructor-descriptor
       g$5337$20023$6Dw7t
       g$5239$19943$6Dw7t
       g$5339$20024$6Dw7t))
   (g$p?$20028$6Dw7t
     g$p?$20329$6Dw7t
     (record-predicate g$5337$20023$6Dw7t))
   (g$make-implementation-restriction-violation$20029$6Dw7t
     g$make-implementation-restriction-violation$20330$6Dw7t
     (record-constructor g$5338$20025$6Dw7t))
   (g$implementation-restriction-violation?$20030$6Dw7t
     g$implementation-restriction-violation?$20331$6Dw7t
     (condition-predicate g$5337$20023$6Dw7t))
   (g$&implementation-restriction-rtd$20031$6Dw7t
     g$&implementation-restriction-rtd$20332$6Dw7t
     g$5337$20023$6Dw7t)
   (g$&implementation-restriction-rcd$20032$6Dw7t
     g$&implementation-restriction-rcd$20333$6Dw7t
     g$5338$20025$6Dw7t)
   (g$5350$20033$6Dw7t
     g$5350$20334$6Dw7t
     (make-record-type-descriptor
       '&lexical
       g$5238$19941$6Dw7t
       'g$5353$6Dw7t
       '#f
       '#f
       '#()))
   (g$5352$20034$6Dw7t g$5352$20335$6Dw7t '#f)
   (g$5351$20035$6Dw7t
     g$5351$20336$6Dw7t
     (make-record-constructor-descriptor
       g$5350$20033$6Dw7t
       g$5239$19943$6Dw7t
       g$5352$20034$6Dw7t))
   (g$p?$20038$6Dw7t
     g$p?$20337$6Dw7t
     (record-predicate g$5350$20033$6Dw7t))
   (g$make-lexical-violation$20039$6Dw7t
     g$make-lexical-violation$20338$6Dw7t
     (record-constructor g$5351$20035$6Dw7t))
   (g$lexical-violation?$20040$6Dw7t
     g$lexical-violation?$20339$6Dw7t
     (condition-predicate g$5350$20033$6Dw7t))
   (g$&lexical-rtd$20041$6Dw7t
     g$&lexical-rtd$20340$6Dw7t
     g$5350$20033$6Dw7t)
   (g$&lexical-rcd$20042$6Dw7t
     g$&lexical-rcd$20341$6Dw7t
     g$5351$20035$6Dw7t)
   (g$5363$20045$6Dw7t
     g$5363$20342$6Dw7t
     (make-record-type-descriptor
       '&syntax
       g$5238$19941$6Dw7t
       'g$5366$6Dw7t
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$5365$20046$6Dw7t g$5365$20343$6Dw7t '#f)
   (g$5364$20047$6Dw7t
     g$5364$20344$6Dw7t
     (make-record-constructor-descriptor
       g$5363$20045$6Dw7t
       g$5239$19943$6Dw7t
       g$5365$20046$6Dw7t))
   (g$p?$20050$6Dw7t
     g$p?$20345$6Dw7t
     (record-predicate g$5363$20045$6Dw7t))
   (g$make-syntax-violation$20051$6Dw7t
     g$make-syntax-violation$20346$6Dw7t
     (record-constructor g$5364$20047$6Dw7t))
   (g$syntax-violation-form$20052$6Dw7t
     g$syntax-violation-form$20347$6Dw7t
     (record-accessor g$5363$20045$6Dw7t '0))
   (g$syntax-violation-subform$20053$6Dw7t
     g$syntax-violation-subform$20348$6Dw7t
     (record-accessor g$5363$20045$6Dw7t '1))
   (g$syntax-violation?$20054$6Dw7t
     g$syntax-violation?$20349$6Dw7t
     (condition-predicate g$5363$20045$6Dw7t))
   (g$syntax-violation-form$20055$6Dw7t
     g$syntax-violation-form$20350$6Dw7t
     (condition-accessor
       g$5363$20045$6Dw7t
       g$syntax-violation-form$20052$6Dw7t))
   (g$syntax-violation-subform$20056$6Dw7t
     g$syntax-violation-subform$20351$6Dw7t
     (condition-accessor
       g$5363$20045$6Dw7t
       g$syntax-violation-subform$20053$6Dw7t))
   (g$&syntax-rtd$20057$6Dw7t
     g$&syntax-rtd$20352$6Dw7t
     g$5363$20045$6Dw7t)
   (g$&syntax-rcd$20058$6Dw7t
     g$&syntax-rcd$20353$6Dw7t
     g$5364$20047$6Dw7t)
   (g$5380$20059$6Dw7t
     g$5380$20354$6Dw7t
     (make-record-type-descriptor
       '&undefined
       g$5238$19941$6Dw7t
       'g$5383$6Dw7t
       '#f
       '#f
       '#()))
   (g$5382$20060$6Dw7t g$5382$20355$6Dw7t '#f)
   (g$5381$20061$6Dw7t
     g$5381$20356$6Dw7t
     (make-record-constructor-descriptor
       g$5380$20059$6Dw7t
       g$5239$19943$6Dw7t
       g$5382$20060$6Dw7t))
   (g$p?$20064$6Dw7t
     g$p?$20357$6Dw7t
     (record-predicate g$5380$20059$6Dw7t))
   (g$make-undefined-violation$20065$6Dw7t
     g$make-undefined-violation$20358$6Dw7t
     (record-constructor g$5381$20061$6Dw7t))
   (g$undefined-violation?$20066$6Dw7t
     g$undefined-violation?$20359$6Dw7t
     (condition-predicate g$5380$20059$6Dw7t))
   (g$&undefined-rtd$20067$6Dw7t
     g$&undefined-rtd$20360$6Dw7t
     g$5380$20059$6Dw7t)
   (g$&undefined-rcd$20068$6Dw7t
     g$&undefined-rcd$20361$6Dw7t
     g$5381$20061$6Dw7t)
   (g$5393$20069$6Dw7t
     g$5393$20362$6Dw7t
     (make-record-type-descriptor
       '&i/o
       g$5225$19931$6Dw7t
       'g$5396$6Dw7t
       '#f
       '#f
       '#()))
   (g$5395$20070$6Dw7t g$5395$20363$6Dw7t '#f)
   (g$5394$20071$6Dw7t
     g$5394$20364$6Dw7t
     (make-record-constructor-descriptor
       g$5393$20069$6Dw7t
       g$5226$19933$6Dw7t
       g$5395$20070$6Dw7t))
   (g$p?$20074$6Dw7t
     g$p?$20365$6Dw7t
     (record-predicate g$5393$20069$6Dw7t))
   (g$make-i/o-error$20075$6Dw7t
     g$make-i/o-error$20366$6Dw7t
     (record-constructor g$5394$20071$6Dw7t))
   (g$i/o-error?$20076$6Dw7t
     g$i/o-error?$20367$6Dw7t
     (condition-predicate g$5393$20069$6Dw7t))
   (g$&i/o-rtd$20077$6Dw7t g$&i/o-rtd$20368$6Dw7t g$5393$20069$6Dw7t)
   (g$&i/o-rcd$20078$6Dw7t g$&i/o-rcd$20369$6Dw7t g$5394$20071$6Dw7t)
   (g$5406$20079$6Dw7t
     g$5406$20370$6Dw7t
     (make-record-type-descriptor
       '&i/o-read
       g$5393$20069$6Dw7t
       'g$5409$6Dw7t
       '#f
       '#f
       '#()))
   (g$5408$20080$6Dw7t g$5408$20371$6Dw7t '#f)
   (g$5407$20081$6Dw7t
     g$5407$20372$6Dw7t
     (make-record-constructor-descriptor
       g$5406$20079$6Dw7t
       g$5394$20071$6Dw7t
       g$5408$20080$6Dw7t))
   (g$p?$20084$6Dw7t
     g$p?$20373$6Dw7t
     (record-predicate g$5406$20079$6Dw7t))
   (g$make-i/o-read-error$20085$6Dw7t
     g$make-i/o-read-error$20374$6Dw7t
     (record-constructor g$5407$20081$6Dw7t))
   (g$i/o-read-error?$20086$6Dw7t
     g$i/o-read-error?$20375$6Dw7t
     (condition-predicate g$5406$20079$6Dw7t))
   (g$&i/o-read-rtd$20087$6Dw7t
     g$&i/o-read-rtd$20376$6Dw7t
     g$5406$20079$6Dw7t)
   (g$&i/o-read-rcd$20088$6Dw7t
     g$&i/o-read-rcd$20377$6Dw7t
     g$5407$20081$6Dw7t)
   (g$5419$20089$6Dw7t
     g$5419$20378$6Dw7t
     (make-record-type-descriptor
       '&i/o-write
       g$5393$20069$6Dw7t
       'g$5422$6Dw7t
       '#f
       '#f
       '#()))
   (g$5421$20090$6Dw7t g$5421$20379$6Dw7t '#f)
   (g$5420$20091$6Dw7t
     g$5420$20380$6Dw7t
     (make-record-constructor-descriptor
       g$5419$20089$6Dw7t
       g$5394$20071$6Dw7t
       g$5421$20090$6Dw7t))
   (g$p?$20094$6Dw7t
     g$p?$20381$6Dw7t
     (record-predicate g$5419$20089$6Dw7t))
   (g$make-i/o-write-error$20095$6Dw7t
     g$make-i/o-write-error$20382$6Dw7t
     (record-constructor g$5420$20091$6Dw7t))
   (g$i/o-write-error?$20096$6Dw7t
     g$i/o-write-error?$20383$6Dw7t
     (condition-predicate g$5419$20089$6Dw7t))
   (g$&i/o-write-rtd$20097$6Dw7t
     g$&i/o-write-rtd$20384$6Dw7t
     g$5419$20089$6Dw7t)
   (g$&i/o-write-rcd$20098$6Dw7t
     g$&i/o-write-rcd$20385$6Dw7t
     g$5420$20091$6Dw7t)
   (g$5432$20100$6Dw7t
     g$5432$20386$6Dw7t
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$5393$20069$6Dw7t
       'g$5435$6Dw7t
       '#f
       '#f
       '#((immutable position))))
   (g$5434$20101$6Dw7t g$5434$20387$6Dw7t '#f)
   (g$5433$20102$6Dw7t
     g$5433$20388$6Dw7t
     (make-record-constructor-descriptor
       g$5432$20100$6Dw7t
       g$5394$20071$6Dw7t
       g$5434$20101$6Dw7t))
   (g$p?$20105$6Dw7t
     g$p?$20389$6Dw7t
     (record-predicate g$5432$20100$6Dw7t))
   (g$make-i/o-invalid-position-error$20106$6Dw7t
     g$make-i/o-invalid-position-error$20390$6Dw7t
     (record-constructor g$5433$20102$6Dw7t))
   (g$i/o-error-position$20107$6Dw7t
     g$i/o-error-position$20391$6Dw7t
     (record-accessor g$5432$20100$6Dw7t '0))
   (g$i/o-invalid-position-error?$20108$6Dw7t
     g$i/o-invalid-position-error?$20392$6Dw7t
     (condition-predicate g$5432$20100$6Dw7t))
   (g$i/o-error-position$20109$6Dw7t
     g$i/o-error-position$20393$6Dw7t
     (condition-accessor
       g$5432$20100$6Dw7t
       g$i/o-error-position$20107$6Dw7t))
   (g$&i/o-invalid-position-rtd$20110$6Dw7t
     g$&i/o-invalid-position-rtd$20394$6Dw7t
     g$5432$20100$6Dw7t)
   (g$&i/o-invalid-position-rcd$20111$6Dw7t
     g$&i/o-invalid-position-rcd$20395$6Dw7t
     g$5433$20102$6Dw7t)
   (g$5447$20113$6Dw7t
     g$5447$20396$6Dw7t
     (make-record-type-descriptor
       '&i/o-filename
       g$5393$20069$6Dw7t
       'g$5450$6Dw7t
       '#f
       '#f
       '#((immutable filename))))
   (g$5449$20114$6Dw7t g$5449$20397$6Dw7t '#f)
   (g$5448$20115$6Dw7t
     g$5448$20398$6Dw7t
     (make-record-constructor-descriptor
       g$5447$20113$6Dw7t
       g$5394$20071$6Dw7t
       g$5449$20114$6Dw7t))
   (g$p?$20118$6Dw7t
     g$p?$20399$6Dw7t
     (record-predicate g$5447$20113$6Dw7t))
   (g$make-i/o-filename-error$20119$6Dw7t
     g$make-i/o-filename-error$20400$6Dw7t
     (record-constructor g$5448$20115$6Dw7t))
   (g$i/o-error-filename$20120$6Dw7t
     g$i/o-error-filename$20401$6Dw7t
     (record-accessor g$5447$20113$6Dw7t '0))
   (g$i/o-filename-error?$20121$6Dw7t
     g$i/o-filename-error?$20402$6Dw7t
     (condition-predicate g$5447$20113$6Dw7t))
   (g$i/o-error-filename$20122$6Dw7t
     g$i/o-error-filename$20403$6Dw7t
     (condition-accessor
       g$5447$20113$6Dw7t
       g$i/o-error-filename$20120$6Dw7t))
   (g$&i/o-filename-rtd$20123$6Dw7t
     g$&i/o-filename-rtd$20404$6Dw7t
     g$5447$20113$6Dw7t)
   (g$&i/o-filename-rcd$20124$6Dw7t
     g$&i/o-filename-rcd$20405$6Dw7t
     g$5448$20115$6Dw7t)
   (g$5462$20125$6Dw7t
     g$5462$20406$6Dw7t
     (make-record-type-descriptor
       '&i/o-file-protection
       g$5447$20113$6Dw7t
       'g$5465$6Dw7t
       '#f
       '#f
       '#()))
   (g$5464$20126$6Dw7t g$5464$20407$6Dw7t '#f)
   (g$5463$20127$6Dw7t
     g$5463$20408$6Dw7t
     (make-record-constructor-descriptor
       g$5462$20125$6Dw7t
       g$5448$20115$6Dw7t
       g$5464$20126$6Dw7t))
   (g$p?$20130$6Dw7t
     g$p?$20409$6Dw7t
     (record-predicate g$5462$20125$6Dw7t))
   (g$make-i/o-file-protection-error$20131$6Dw7t
     g$make-i/o-file-protection-error$20410$6Dw7t
     (record-constructor g$5463$20127$6Dw7t))
   (g$i/o-file-protection-error?$20132$6Dw7t
     g$i/o-file-protection-error?$20411$6Dw7t
     (condition-predicate g$5462$20125$6Dw7t))
   (g$&i/o-file-protection-rtd$20133$6Dw7t
     g$&i/o-file-protection-rtd$20412$6Dw7t
     g$5462$20125$6Dw7t)
   (g$&i/o-file-protection-rcd$20134$6Dw7t
     g$&i/o-file-protection-rcd$20413$6Dw7t
     g$5463$20127$6Dw7t)
   (g$5475$20135$6Dw7t
     g$5475$20414$6Dw7t
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$5462$20125$6Dw7t
       'g$5478$6Dw7t
       '#f
       '#f
       '#()))
   (g$5477$20136$6Dw7t g$5477$20415$6Dw7t '#f)
   (g$5476$20137$6Dw7t
     g$5476$20416$6Dw7t
     (make-record-constructor-descriptor
       g$5475$20135$6Dw7t
       g$5463$20127$6Dw7t
       g$5477$20136$6Dw7t))
   (g$p?$20140$6Dw7t
     g$p?$20417$6Dw7t
     (record-predicate g$5475$20135$6Dw7t))
   (g$make-i/o-file-is-read-only-error$20141$6Dw7t
     g$make-i/o-file-is-read-only-error$20418$6Dw7t
     (record-constructor g$5476$20137$6Dw7t))
   (g$i/o-file-is-read-only-error?$20142$6Dw7t
     g$i/o-file-is-read-only-error?$20419$6Dw7t
     (condition-predicate g$5475$20135$6Dw7t))
   (g$&i/o-file-is-read-only-rtd$20143$6Dw7t
     g$&i/o-file-is-read-only-rtd$20420$6Dw7t
     g$5475$20135$6Dw7t)
   (g$&i/o-file-is-read-only-rcd$20144$6Dw7t
     g$&i/o-file-is-read-only-rcd$20421$6Dw7t
     g$5476$20137$6Dw7t)
   (g$5488$20145$6Dw7t
     g$5488$20422$6Dw7t
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$5447$20113$6Dw7t
       'g$5491$6Dw7t
       '#f
       '#f
       '#()))
   (g$5490$20146$6Dw7t g$5490$20423$6Dw7t '#f)
   (g$5489$20147$6Dw7t
     g$5489$20424$6Dw7t
     (make-record-constructor-descriptor
       g$5488$20145$6Dw7t
       g$5448$20115$6Dw7t
       g$5490$20146$6Dw7t))
   (g$p?$20150$6Dw7t
     g$p?$20425$6Dw7t
     (record-predicate g$5488$20145$6Dw7t))
   (g$make-i/o-file-already-exists-error$20151$6Dw7t
     g$make-i/o-file-already-exists-error$20426$6Dw7t
     (record-constructor g$5489$20147$6Dw7t))
   (g$i/o-file-already-exists-error?$20152$6Dw7t
     g$i/o-file-already-exists-error?$20427$6Dw7t
     (condition-predicate g$5488$20145$6Dw7t))
   (g$&i/o-file-already-exists-rtd$20153$6Dw7t
     g$&i/o-file-already-exists-rtd$20428$6Dw7t
     g$5488$20145$6Dw7t)
   (g$&i/o-file-already-exists-rcd$20154$6Dw7t
     g$&i/o-file-already-exists-rcd$20429$6Dw7t
     g$5489$20147$6Dw7t)
   (g$5501$20155$6Dw7t
     g$5501$20430$6Dw7t
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$5447$20113$6Dw7t
       'g$5504$6Dw7t
       '#f
       '#f
       '#()))
   (g$5503$20156$6Dw7t g$5503$20431$6Dw7t '#f)
   (g$5502$20157$6Dw7t
     g$5502$20432$6Dw7t
     (make-record-constructor-descriptor
       g$5501$20155$6Dw7t
       g$5448$20115$6Dw7t
       g$5503$20156$6Dw7t))
   (g$p?$20160$6Dw7t
     g$p?$20433$6Dw7t
     (record-predicate g$5501$20155$6Dw7t))
   (g$make-i/o-file-does-not-exist-error$20161$6Dw7t
     g$make-i/o-file-does-not-exist-error$20434$6Dw7t
     (record-constructor g$5502$20157$6Dw7t))
   (g$i/o-file-does-not-exist-error?$20162$6Dw7t
     g$i/o-file-does-not-exist-error?$20435$6Dw7t
     (condition-predicate g$5501$20155$6Dw7t))
   (g$&i/o-file-does-not-exist-rtd$20163$6Dw7t
     g$&i/o-file-does-not-exist-rtd$20436$6Dw7t
     g$5501$20155$6Dw7t)
   (g$&i/o-file-does-not-exist-rcd$20164$6Dw7t
     g$&i/o-file-does-not-exist-rcd$20437$6Dw7t
     g$5502$20157$6Dw7t)
   (g$5514$20166$6Dw7t
     g$5514$20438$6Dw7t
     (make-record-type-descriptor
       '&i/o-port
       g$5393$20069$6Dw7t
       'g$5517$6Dw7t
       '#f
       '#f
       '#((immutable port))))
   (g$5516$20167$6Dw7t g$5516$20439$6Dw7t '#f)
   (g$5515$20168$6Dw7t
     g$5515$20440$6Dw7t
     (make-record-constructor-descriptor
       g$5514$20166$6Dw7t
       g$5394$20071$6Dw7t
       g$5516$20167$6Dw7t))
   (g$p?$20171$6Dw7t
     g$p?$20441$6Dw7t
     (record-predicate g$5514$20166$6Dw7t))
   (g$make-i/o-port-error$20172$6Dw7t
     g$make-i/o-port-error$20442$6Dw7t
     (record-constructor g$5515$20168$6Dw7t))
   (g$i/o-error-port$20173$6Dw7t
     g$i/o-error-port$20443$6Dw7t
     (record-accessor g$5514$20166$6Dw7t '0))
   (g$i/o-port-error?$20174$6Dw7t
     g$i/o-port-error?$20444$6Dw7t
     (condition-predicate g$5514$20166$6Dw7t))
   (g$i/o-error-port$20175$6Dw7t
     g$i/o-error-port$20445$6Dw7t
     (condition-accessor
       g$5514$20166$6Dw7t
       g$i/o-error-port$20173$6Dw7t))
   (g$&i/o-port-rtd$20176$6Dw7t
     g$&i/o-port-rtd$20446$6Dw7t
     g$5514$20166$6Dw7t)
   (g$&i/o-port-rcd$20177$6Dw7t
     g$&i/o-port-rcd$20447$6Dw7t
     g$5515$20168$6Dw7t)
   (g$5529$20178$6Dw7t
     g$5529$20448$6Dw7t
     (make-record-type-descriptor
       '&i/o-decoding
       g$5514$20166$6Dw7t
       'g$5532$6Dw7t
       '#f
       '#f
       '#()))
   (g$5531$20179$6Dw7t g$5531$20449$6Dw7t '#f)
   (g$5530$20180$6Dw7t
     g$5530$20450$6Dw7t
     (make-record-constructor-descriptor
       g$5529$20178$6Dw7t
       g$5515$20168$6Dw7t
       g$5531$20179$6Dw7t))
   (g$p?$20183$6Dw7t
     g$p?$20451$6Dw7t
     (record-predicate g$5529$20178$6Dw7t))
   (g$make-i/o-decoding-error$20184$6Dw7t
     g$make-i/o-decoding-error$20452$6Dw7t
     (record-constructor g$5530$20180$6Dw7t))
   (g$i/o-decoding-error?$20185$6Dw7t
     g$i/o-decoding-error?$20453$6Dw7t
     (condition-predicate g$5529$20178$6Dw7t))
   (g$&i/o-decoding-rtd$20186$6Dw7t
     g$&i/o-decoding-rtd$20454$6Dw7t
     g$5529$20178$6Dw7t)
   (g$&i/o-decoding-rcd$20187$6Dw7t
     g$&i/o-decoding-rcd$20455$6Dw7t
     g$5530$20180$6Dw7t)
   (g$5542$20189$6Dw7t
     g$5542$20456$6Dw7t
     (make-record-type-descriptor
       '&i/o-encoding
       g$5514$20166$6Dw7t
       'g$5545$6Dw7t
       '#f
       '#f
       '#((immutable char))))
   (g$5544$20190$6Dw7t g$5544$20457$6Dw7t '#f)
   (g$5543$20191$6Dw7t
     g$5543$20458$6Dw7t
     (make-record-constructor-descriptor
       g$5542$20189$6Dw7t
       g$5515$20168$6Dw7t
       g$5544$20190$6Dw7t))
   (g$p?$20194$6Dw7t
     g$p?$20459$6Dw7t
     (record-predicate g$5542$20189$6Dw7t))
   (g$make-i/o-encoding-error$20195$6Dw7t
     g$make-i/o-encoding-error$20460$6Dw7t
     (record-constructor g$5543$20191$6Dw7t))
   (g$i/o-encoding-error-char$20196$6Dw7t
     g$i/o-encoding-error-char$20461$6Dw7t
     (record-accessor g$5542$20189$6Dw7t '0))
   (g$i/o-encoding-error?$20197$6Dw7t
     g$i/o-encoding-error?$20462$6Dw7t
     (condition-predicate g$5542$20189$6Dw7t))
   (g$i/o-encoding-error-char$20198$6Dw7t
     g$i/o-encoding-error-char$20463$6Dw7t
     (condition-accessor
       g$5542$20189$6Dw7t
       g$i/o-encoding-error-char$20196$6Dw7t))
   (g$&i/o-encoding-rtd$20199$6Dw7t
     g$&i/o-encoding-rtd$20464$6Dw7t
     g$5542$20189$6Dw7t)
   (g$&i/o-encoding-rcd$20200$6Dw7t
     g$&i/o-encoding-rcd$20465$6Dw7t
     g$5543$20191$6Dw7t)
   (g$5557$20201$6Dw7t
     g$5557$20466$6Dw7t
     (make-record-type-descriptor
       '&no-infinities
       g$5337$20023$6Dw7t
       'g$5560$6Dw7t
       '#f
       '#f
       '#()))
   (g$5559$20202$6Dw7t g$5559$20467$6Dw7t '#f)
   (g$5558$20203$6Dw7t
     g$5558$20468$6Dw7t
     (make-record-constructor-descriptor
       g$5557$20201$6Dw7t
       g$5338$20025$6Dw7t
       g$5559$20202$6Dw7t))
   (g$p?$20206$6Dw7t
     g$p?$20469$6Dw7t
     (record-predicate g$5557$20201$6Dw7t))
   (g$make-no-infinities-violation$20207$6Dw7t
     g$make-no-infinities-violation$20470$6Dw7t
     (record-constructor g$5558$20203$6Dw7t))
   (g$no-infinities-violation?$20208$6Dw7t
     g$no-infinities-violation?$20471$6Dw7t
     (condition-predicate g$5557$20201$6Dw7t))
   (g$&no-infinities-rtd$20209$6Dw7t
     g$&no-infinities-rtd$20472$6Dw7t
     g$5557$20201$6Dw7t)
   (g$&no-infinities-rcd$20210$6Dw7t
     g$&no-infinities-rcd$20473$6Dw7t
     g$5558$20203$6Dw7t)
   (g$5570$20211$6Dw7t
     g$5570$20474$6Dw7t
     (make-record-type-descriptor
       '&no-nans
       g$5337$20023$6Dw7t
       'g$5573$6Dw7t
       '#f
       '#f
       '#()))
   (g$5572$20212$6Dw7t g$5572$20475$6Dw7t '#f)
   (g$5571$20213$6Dw7t
     g$5571$20476$6Dw7t
     (make-record-constructor-descriptor
       g$5570$20211$6Dw7t
       g$5338$20025$6Dw7t
       g$5572$20212$6Dw7t))
   (g$p?$20216$6Dw7t
     g$p?$20477$6Dw7t
     (record-predicate g$5570$20211$6Dw7t))
   (g$make-no-nans-violation$20217$6Dw7t
     g$make-no-nans-violation$20478$6Dw7t
     (record-constructor g$5571$20213$6Dw7t))
   (g$no-nans-violation?$20218$6Dw7t
     g$no-nans-violation?$20479$6Dw7t
     (condition-predicate g$5570$20211$6Dw7t))
   (g$&no-nans-rtd$20219$6Dw7t
     g$&no-nans-rtd$20480$6Dw7t
     g$5570$20211$6Dw7t)
   (g$&no-nans-rcd$20220$6Dw7t
     g$&no-nans-rcd$20481$6Dw7t
     g$5571$20213$6Dw7t))
  (void))

(library-letrec* (ironscheme exceptions)
  ((g$assertion-violation$20482$6Dw7t
     g$assertion-violation$20490$6Dw7t
     (case-lambda
       ((g$who$20484$6Dw7t g$msg$20485$6Dw7t . g$irritants$20486$6Dw7t)
        (raise-continuable
          (condition
            (g$make-assertion-violation$20274$6Dw7t)
            (if g$who$20484$6Dw7t
              (g$make-who-condition$20292$6Dw7t g$who$20484$6Dw7t)
              (condition))
            (g$make-message-condition$20232$6Dw7t g$msg$20485$6Dw7t)
            (g$make-irritants-condition$20282$6Dw7t
              g$irritants$20486$6Dw7t))))))
   (g$error$20483$6Dw7t
     g$error$20491$6Dw7t
     (case-lambda
       ((g$who$20487$6Dw7t g$msg$20488$6Dw7t . g$irritants$20489$6Dw7t)
        (raise
          (condition
            (g$make-error$20258$6Dw7t)
            (if g$who$20487$6Dw7t
              (g$make-who-condition$20292$6Dw7t g$who$20487$6Dw7t)
              (condition))
            (g$make-message-condition$20232$6Dw7t g$msg$20488$6Dw7t)
            (g$make-irritants-condition$20282$6Dw7t
              g$irritants$20489$6Dw7t)))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$greatest-fixnum$21063$6Dw7t
     g$greatest-fixnum$23292$6Dw7t
     (case-lambda (() '2147483647)))
   (g$least-fixnum$21064$6Dw7t
     g$least-fixnum$23293$6Dw7t
     (case-lambda (() '-2147483648)))
   (g$fx+$21170$6Dw7t
     g$fx+$23294$6Dw7t
     (case-lambda
       ((g$x1$21565$6Dw7t g$x2$21566$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21565$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx+
              '"not a fixnum"
              g$x1$21565$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21566$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx+
              '"not a fixnum"
              g$x2$21566$6Dw7t)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx+ g$x1$21565$6Dw7t g$x2$21566$6Dw7t)
                (g$overflow-error$21173$6Dw7t '#f)))))))))
   (g$fx*$21171$6Dw7t
     g$fx*$23295$6Dw7t
     (case-lambda
       ((g$x1$21567$6Dw7t g$x2$21568$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21567$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx*
              '"not a fixnum"
              g$x1$21567$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21568$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx*
              '"not a fixnum"
              g$x2$21568$6Dw7t)
            (void))
          ((case-lambda
             (()
              ($try
                ($fx* g$x1$21567$6Dw7t g$x2$21568$6Dw7t)
                (g$overflow-error$21173$6Dw7t '#f)))))))))
   (g$fx-$21172$6Dw7t
     g$fx-$23296$6Dw7t
     (case-lambda
       ((g$x1$21569$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21569$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx-
              '"not a fixnum"
              g$x1$21569$6Dw7t)
            (void))
          (if ($fx=? (g$least-fixnum$21064$6Dw7t) g$x1$21569$6Dw7t)
            (g$overflow-error$21173$6Dw7t 'fx- g$x1$21569$6Dw7t)
            (void))
          ($$fx- g$x1$21569$6Dw7t)))
       ((g$x1$21570$6Dw7t g$x2$21571$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21570$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx-
              '"not a fixnum"
              g$x1$21570$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21571$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx-
              '"not a fixnum"
              g$x2$21571$6Dw7t)
            (void))
          ($try
            ($fx- g$x1$21570$6Dw7t g$x2$21571$6Dw7t)
            (g$overflow-error$21173$6Dw7t '#f))))))
   (g$overflow-error$21173$6Dw7t
     g$overflow-error$23297$6Dw7t
     (case-lambda
       ((g$name$21572$6Dw7t . g$irritants$21573$6Dw7t)
        (raise
          (condition
            (g$make-implementation-restriction-violation$20330$6Dw7t)
            (g$make-who-condition$20292$6Dw7t g$name$21572$6Dw7t)
            (g$make-message-condition$20232$6Dw7t
              '"arithmetic overflow")
            (g$make-irritants-condition$20282$6Dw7t
              g$irritants$21573$6Dw7t))))))
   (g$residual-fxarithmetic-shift*$21189$6Dw7t
     g$residual-fxarithmetic-shift*$23298$6Dw7t
     (case-lambda
       ((g$x$21594$6Dw7t g$k$21595$6Dw7t)
        (if ($fx=? g$k$21595$6Dw7t '0)
          g$x$21594$6Dw7t
          (if ($fx<? g$k$21595$6Dw7t '0)
            ($fxarithmetic-shift-right
              g$x$21594$6Dw7t
              ($$fx- g$k$21595$6Dw7t))
            ((case-lambda
               (()
                (begin
                  '#f
                  ((case-lambda
                     ((g$i$21596$6Dw7t)
                      (begin
                        (if ($fx>?
                              (clr-call-internal
                                'System.Math
                                '"abs(int32)"
                                '()
                                g$x$21594$6Dw7t)
                              (clr-call-internal
                                'System.Math
                                '"abs(int32)"
                                '()
                                g$i$21596$6Dw7t))
                          (g$overflow-error$21173$6Dw7t
                            'fxarithmetic-shift
                            g$x$21594$6Dw7t
                            g$k$21595$6Dw7t)
                          (void))
                        g$i$21596$6Dw7t)))
                   ($fxarithmetic-shift-left
                     g$x$21594$6Dw7t
                     g$k$21595$6Dw7t)))))))))))
   (g$fxarithmetic-shift$21190$6Dw7t
     g$fxarithmetic-shift$23299$6Dw7t
     (case-lambda
       ((g$x$21597$6Dw7t g$k$21598$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x$21597$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxarithmetic-shift
              '"not a fixnum"
              g$x$21597$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$k$21598$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxarithmetic-shift
              '"not a fixnum"
              g$k$21598$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$21619$6Dw7t g$k$21620$6Dw7t)
                  (if ($fx=? g$k$21620$6Dw7t '0)
                    g$x$21619$6Dw7t
                    (if ($fx<? g$k$21620$6Dw7t '0)
                      ($fxarithmetic-shift-right
                        g$x$21619$6Dw7t
                        ($$fx- g$k$21620$6Dw7t))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$i$21621$6Dw7t)
                                (begin
                                  (if ($fx>?
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$x$21619$6Dw7t)
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$i$21621$6Dw7t))
                                    (g$overflow-error$21173$6Dw7t
                                      'fxarithmetic-shift
                                      g$x$21619$6Dw7t
                                      g$k$21620$6Dw7t)
                                    (void))
                                  g$i$21621$6Dw7t)))
                             ($fxarithmetic-shift-left
                               g$x$21619$6Dw7t
                               g$k$21620$6Dw7t))))))))))
               g$x$21597$6Dw7t
               g$k$21598$6Dw7t))))))))
   (g$residual-fxbit-count*$21206$6Dw7t
     g$residual-fxbit-count*$23300$6Dw7t
     (case-lambda
       ((g$x$21642$6Dw7t)
        (if ($fx<=? g$x$21642$6Dw7t '0)
          ($fxnot
            (g$residual-fxbit-count*$21206$6Dw7t
              ($fxnot g$x$21642$6Dw7t)))
          ((letrec ((g$f$21643$6Dw7t
                      (case-lambda
                        ((g$count$21644$6Dw7t g$x$21645$6Dw7t)
                         (if ($fx<? '0 g$x$21645$6Dw7t)
                           (g$f$21643$6Dw7t
                             ($$fx+
                               g$count$21644$6Dw7t
                               ($fxand g$x$21645$6Dw7t '1))
                             ($fxarithmetic-shift-right
                               g$x$21645$6Dw7t
                               '1))
                           g$count$21644$6Dw7t)))))
             g$f$21643$6Dw7t)
           '0
           g$x$21642$6Dw7t)))))
   (g$fxbit-count$21207$6Dw7t
     g$fxbit-count$23301$6Dw7t
     (case-lambda
       ((g$x$21646$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x$21646$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxbit-count
              '"not a fixnum"
              g$x$21646$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$21667$6Dw7t)
                  (if ($fx<=? g$x$21667$6Dw7t '0)
                    ($fxnot
                      (g$residual-fxbit-count*$21206$6Dw7t
                        ($fxnot g$x$21667$6Dw7t)))
                    ((letrec ((g$f$21668$6Dw7t
                                (case-lambda
                                  ((g$count$21669$6Dw7t g$x$21670$6Dw7t)
                                   (if ($fx<? '0 g$x$21670$6Dw7t)
                                     (g$f$21668$6Dw7t
                                       ($$fx+
                                         g$count$21669$6Dw7t
                                         ($fxand g$x$21670$6Dw7t '1))
                                       ($fxarithmetic-shift-right
                                         g$x$21670$6Dw7t
                                         '1))
                                     g$count$21669$6Dw7t)))))
                       g$f$21668$6Dw7t)
                     '0
                     g$x$21667$6Dw7t))))
               g$x$21646$6Dw7t))))))))
   (g$residual-fxlength*$21223$6Dw7t
     g$residual-fxlength*$23302$6Dw7t
     (case-lambda
       ((g$x$21691$6Dw7t)
        (if ($fx<? g$x$21691$6Dw7t '0)
          (g$residual-fxlength*$21223$6Dw7t ($fxnot g$x$21691$6Dw7t))
          ((letrec ((g$f$21692$6Dw7t
                      (case-lambda
                        ((g$count$21693$6Dw7t g$x$21694$6Dw7t)
                         (if ($fx<? '0 g$x$21694$6Dw7t)
                           (g$f$21692$6Dw7t
                             ($$fx+ g$count$21693$6Dw7t '1)
                             ($fxarithmetic-shift-right
                               g$x$21694$6Dw7t
                               '1))
                           g$count$21693$6Dw7t)))))
             g$f$21692$6Dw7t)
           '0
           g$x$21691$6Dw7t)))))
   (g$fxlength$21224$6Dw7t
     g$fxlength$23303$6Dw7t
     (case-lambda
       ((g$x$21695$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x$21695$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxlength
              '"not a fixnum"
              g$x$21695$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$21716$6Dw7t)
                  (if ($fx<? g$x$21716$6Dw7t '0)
                    (g$residual-fxlength*$21223$6Dw7t
                      ($fxnot g$x$21716$6Dw7t))
                    ((letrec ((g$f$21717$6Dw7t
                                (case-lambda
                                  ((g$count$21718$6Dw7t g$x$21719$6Dw7t)
                                   (if ($fx<? '0 g$x$21719$6Dw7t)
                                     (g$f$21717$6Dw7t
                                       ($$fx+ g$count$21718$6Dw7t '1)
                                       ($fxarithmetic-shift-right
                                         g$x$21719$6Dw7t
                                         '1))
                                     g$count$21718$6Dw7t)))))
                       g$f$21717$6Dw7t)
                     '0
                     g$x$21716$6Dw7t))))
               g$x$21695$6Dw7t))))))))
   (g$fxfirst-bit-set$21225$6Dw7t
     g$fxfirst-bit-set$23304$6Dw7t
     (case-lambda
       ((g$x$21720$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x$21720$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxfirst-bit-set
              '"not a fixnum"
              g$x$21720$6Dw7t)
            (void))
          ((case-lambda
             (()
              (if ($fx=? g$x$21720$6Dw7t '0)
                '-1
                ((letrec ((g$f$21721$6Dw7t
                            (case-lambda
                              ((g$count$21722$6Dw7t g$x$21723$6Dw7t)
                               (if (not ($fx=? '0 g$x$21723$6Dw7t))
                                 (if ($fx=?
                                       '1
                                       ($fxand '1 g$x$21723$6Dw7t))
                                   g$count$21722$6Dw7t
                                   (g$f$21721$6Dw7t
                                     ($$fx+ g$count$21722$6Dw7t '1)
                                     ($fxarithmetic-shift-right
                                       g$x$21723$6Dw7t
                                       '1)))
                                 g$count$21722$6Dw7t)))))
                   g$f$21721$6Dw7t)
                 '0
                 g$x$21720$6Dw7t)))))))))
   (g$fxbit-set?$21226$6Dw7t
     g$fxbit-set?$23305$6Dw7t
     (case-lambda
       ((g$x$21724$6Dw7t g$k$21725$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x$21724$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxbit-set?
              '"not a fixnum"
              g$x$21724$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$k$21725$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxbit-set?
              '"not a fixnum"
              g$k$21725$6Dw7t)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx<? g$k$21725$6Dw7t '0)
                  (g$assertion-violation$20490$6Dw7t
                    'fxbit-set?
                    '"cannot be negative"
                    g$k$21725$6Dw7t)
                  (void))
                (if ($fx>=? g$k$21725$6Dw7t '32)
                  (g$assertion-violation$20490$6Dw7t
                    'fxbit-set?
                    '"cannot be larger than 31"
                    g$k$21725$6Dw7t)
                  (void))
                (if ($fx=? '0 g$x$21724$6Dw7t)
                  '#f
                  ($fx=?
                    '1
                    ($fxand
                      '1
                      ($fxarithmetic-shift-right
                        g$x$21724$6Dw7t
                        g$k$21725$6Dw7t))))))))))))
   (g$fxnot$21227$6Dw7t
     g$fxnot$23306$6Dw7t
     (case-lambda
       ((g$x1$21726$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21726$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxnot
              '"not a fixnum"
              g$x1$21726$6Dw7t)
            (void))
          ((case-lambda (() ($fxnot g$x1$21726$6Dw7t))))))))
   (g$fx=?$21278$6Dw7t
     g$fx=?$23307$6Dw7t
     (case-lambda
       ((g$x1$21727$6Dw7t g$x2$21728$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21727$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx=?
              '"not a fixnum"
              g$x1$21727$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21728$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx=?
              '"not a fixnum"
              g$x2$21728$6Dw7t)
            (void))
          ($fx=? g$x1$21727$6Dw7t g$x2$21728$6Dw7t)))
       ((g$x1$21729$6Dw7t g$x2$21730$6Dw7t . g$rest$21731$6Dw7t)
        ((letrec ((g$f$21732$6Dw7t
                    (case-lambda
                      ((g$a$21733$6Dw7t g$b$21734$6Dw7t)
                       (if (null? g$b$21734$6Dw7t)
                         '#t
                         (if (g$fx=?$21278$6Dw7t
                               g$a$21733$6Dw7t
                               ($car g$b$21734$6Dw7t))
                           (g$f$21732$6Dw7t
                             ($car g$b$21734$6Dw7t)
                             ($cdr g$b$21734$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$21732$6Dw7t)
         g$x1$21729$6Dw7t
         (cons g$x2$21730$6Dw7t g$rest$21731$6Dw7t)))))
   (g$fx<?$21279$6Dw7t
     g$fx<?$23308$6Dw7t
     (case-lambda
       ((g$x1$21735$6Dw7t g$x2$21736$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21735$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx<?
              '"not a fixnum"
              g$x1$21735$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21736$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx<?
              '"not a fixnum"
              g$x2$21736$6Dw7t)
            (void))
          ($fx<? g$x1$21735$6Dw7t g$x2$21736$6Dw7t)))
       ((g$x1$21737$6Dw7t g$x2$21738$6Dw7t . g$rest$21739$6Dw7t)
        ((letrec ((g$f$21740$6Dw7t
                    (case-lambda
                      ((g$a$21741$6Dw7t g$b$21742$6Dw7t)
                       (if (null? g$b$21742$6Dw7t)
                         '#t
                         (if (g$fx<?$21279$6Dw7t
                               g$a$21741$6Dw7t
                               ($car g$b$21742$6Dw7t))
                           (g$f$21740$6Dw7t
                             ($car g$b$21742$6Dw7t)
                             ($cdr g$b$21742$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$21740$6Dw7t)
         g$x1$21737$6Dw7t
         (cons g$x2$21738$6Dw7t g$rest$21739$6Dw7t)))))
   (g$fx<=?$21280$6Dw7t
     g$fx<=?$23309$6Dw7t
     (case-lambda
       ((g$x1$21743$6Dw7t g$x2$21744$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21743$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx<=?
              '"not a fixnum"
              g$x1$21743$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21744$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx<=?
              '"not a fixnum"
              g$x2$21744$6Dw7t)
            (void))
          ($fx<=? g$x1$21743$6Dw7t g$x2$21744$6Dw7t)))
       ((g$x1$21745$6Dw7t g$x2$21746$6Dw7t . g$rest$21747$6Dw7t)
        ((letrec ((g$f$21748$6Dw7t
                    (case-lambda
                      ((g$a$21749$6Dw7t g$b$21750$6Dw7t)
                       (if (null? g$b$21750$6Dw7t)
                         '#t
                         (if (g$fx<=?$21280$6Dw7t
                               g$a$21749$6Dw7t
                               ($car g$b$21750$6Dw7t))
                           (g$f$21748$6Dw7t
                             ($car g$b$21750$6Dw7t)
                             ($cdr g$b$21750$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$21748$6Dw7t)
         g$x1$21745$6Dw7t
         (cons g$x2$21746$6Dw7t g$rest$21747$6Dw7t)))))
   (g$fx>?$21281$6Dw7t
     g$fx>?$23310$6Dw7t
     (case-lambda
       ((g$x1$21751$6Dw7t g$x2$21752$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21751$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx>?
              '"not a fixnum"
              g$x1$21751$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21752$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx>?
              '"not a fixnum"
              g$x2$21752$6Dw7t)
            (void))
          ($fx>? g$x1$21751$6Dw7t g$x2$21752$6Dw7t)))
       ((g$x1$21753$6Dw7t g$x2$21754$6Dw7t . g$rest$21755$6Dw7t)
        ((letrec ((g$f$21756$6Dw7t
                    (case-lambda
                      ((g$a$21757$6Dw7t g$b$21758$6Dw7t)
                       (if (null? g$b$21758$6Dw7t)
                         '#t
                         (if (g$fx>?$21281$6Dw7t
                               g$a$21757$6Dw7t
                               ($car g$b$21758$6Dw7t))
                           (g$f$21756$6Dw7t
                             ($car g$b$21758$6Dw7t)
                             ($cdr g$b$21758$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$21756$6Dw7t)
         g$x1$21753$6Dw7t
         (cons g$x2$21754$6Dw7t g$rest$21755$6Dw7t)))))
   (g$fx>=?$21282$6Dw7t
     g$fx>=?$23311$6Dw7t
     (case-lambda
       ((g$x1$21759$6Dw7t g$x2$21760$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21759$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx>=?
              '"not a fixnum"
              g$x1$21759$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21760$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx>=?
              '"not a fixnum"
              g$x2$21760$6Dw7t)
            (void))
          ($fx>=? g$x1$21759$6Dw7t g$x2$21760$6Dw7t)))
       ((g$x1$21761$6Dw7t g$x2$21762$6Dw7t . g$rest$21763$6Dw7t)
        ((letrec ((g$f$21764$6Dw7t
                    (case-lambda
                      ((g$a$21765$6Dw7t g$b$21766$6Dw7t)
                       (if (null? g$b$21766$6Dw7t)
                         '#t
                         (if (g$fx>=?$21282$6Dw7t
                               g$a$21765$6Dw7t
                               ($car g$b$21766$6Dw7t))
                           (g$f$21764$6Dw7t
                             ($car g$b$21766$6Dw7t)
                             ($cdr g$b$21766$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$21764$6Dw7t)
         g$x1$21761$6Dw7t
         (cons g$x2$21762$6Dw7t g$rest$21763$6Dw7t)))))
   (g$fxand$21330$6Dw7t
     g$fxand$23312$6Dw7t
     (case-lambda
       (() '-1)
       ((g$x1$21767$6Dw7t g$x2$21768$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21767$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxand
              '"not a fixnum"
              g$x1$21767$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21768$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxand
              '"not a fixnum"
              g$x2$21768$6Dw7t)
            (void))
          ($fxand g$x1$21767$6Dw7t g$x2$21768$6Dw7t)))
       (g$args$21769$6Dw7t
        (g$fold-left$23588$6Dw7t
          g$fxand$21330$6Dw7t
          (g$fxand$21330$6Dw7t)
          g$args$21769$6Dw7t))))
   (g$fxior$21331$6Dw7t
     g$fxior$23313$6Dw7t
     (case-lambda
       (() '0)
       ((g$x1$21770$6Dw7t g$x2$21771$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21770$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxior
              '"not a fixnum"
              g$x1$21770$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21771$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxior
              '"not a fixnum"
              g$x2$21771$6Dw7t)
            (void))
          ($fxior g$x1$21770$6Dw7t g$x2$21771$6Dw7t)))
       (g$args$21772$6Dw7t
        (g$fold-left$23588$6Dw7t
          g$fxior$21331$6Dw7t
          (g$fxior$21331$6Dw7t)
          g$args$21772$6Dw7t))))
   (g$fxxor$21332$6Dw7t
     g$fxxor$23314$6Dw7t
     (case-lambda
       (() '0)
       ((g$x1$21773$6Dw7t g$x2$21774$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21773$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxxor
              '"not a fixnum"
              g$x1$21773$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21774$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxxor
              '"not a fixnum"
              g$x2$21774$6Dw7t)
            (void))
          ($fxxor g$x1$21773$6Dw7t g$x2$21774$6Dw7t)))
       (g$args$21775$6Dw7t
        (g$fold-left$23588$6Dw7t
          g$fxxor$21332$6Dw7t
          (g$fxxor$21332$6Dw7t)
          g$args$21775$6Dw7t))))
   (g$residual-fxdiv*$21348$6Dw7t
     g$residual-fxdiv*$23315$6Dw7t
     (case-lambda
       ((g$x1$21796$6Dw7t g$x2$21797$6Dw7t)
        (begin
          (if ($fx=? '0 g$x2$21797$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'fxdiv
              '"divide by zero"
              g$x1$21796$6Dw7t
              g$x2$21797$6Dw7t)
            (void))
          (if (if ($fx=? '-1 g$x2$21797$6Dw7t)
                (begin
                  '#f
                  ($fx=? (g$least-fixnum$21064$6Dw7t) g$x1$21796$6Dw7t))
                '#f)
            (g$overflow-error$21173$6Dw7t
              'fxdiv
              g$x1$21796$6Dw7t
              g$x2$21797$6Dw7t)
            (void))
          (if ($fx=? '0 g$x1$21796$6Dw7t)
            '0
            (if ($fx<? '0 g$x1$21796$6Dw7t)
              ((case-lambda
                 ((g$x1$21818$6Dw7t g$x2$21819$6Dw7t)
                  ($fxdiv0 g$x1$21818$6Dw7t g$x2$21819$6Dw7t)))
               g$x1$21796$6Dw7t
               g$x2$21797$6Dw7t)
              (if ($fx<? '0 g$x2$21797$6Dw7t)
                ((case-lambda
                   ((g$x1$21840$6Dw7t g$x2$21841$6Dw7t)
                    ($fxdiv0 g$x1$21840$6Dw7t g$x2$21841$6Dw7t)))
                 ($$fx- g$x1$21796$6Dw7t ($$fx- g$x2$21797$6Dw7t '1))
                 g$x2$21797$6Dw7t)
                ((case-lambda
                   (()
                    (begin
                      '#f
                      ((case-lambda
                         ((g$x1$21862$6Dw7t g$x2$21863$6Dw7t)
                          ($fxdiv0 g$x1$21862$6Dw7t g$x2$21863$6Dw7t)))
                       ($$fx+
                         g$x1$21796$6Dw7t
                         ($$fx+ g$x2$21797$6Dw7t '1))
                       g$x2$21797$6Dw7t))))))))))))
   (g$fxdiv$21349$6Dw7t
     g$fxdiv$23316$6Dw7t
     (case-lambda
       ((g$x1$21864$6Dw7t g$x2$21865$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$21864$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv
              '"not a fixnum"
              g$x1$21864$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$21865$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv
              '"not a fixnum"
              g$x2$21865$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$21886$6Dw7t g$x2$21887$6Dw7t)
                  (begin
                    (if ($fx=? '0 g$x2$21887$6Dw7t)
                      (g$assertion-violation$20490$6Dw7t
                        'fxdiv
                        '"divide by zero"
                        g$x1$21886$6Dw7t
                        g$x2$21887$6Dw7t)
                      (void))
                    (if (if ($fx=? '-1 g$x2$21887$6Dw7t)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$21064$6Dw7t)
                              g$x1$21886$6Dw7t))
                          '#f)
                      (g$overflow-error$21173$6Dw7t
                        'fxdiv
                        g$x1$21886$6Dw7t
                        g$x2$21887$6Dw7t)
                      (void))
                    (if ($fx=? '0 g$x1$21886$6Dw7t)
                      '0
                      (if ($fx<? '0 g$x1$21886$6Dw7t)
                        ((case-lambda
                           ((g$x1$21908$6Dw7t g$x2$21909$6Dw7t)
                            ($fxdiv0
                              g$x1$21908$6Dw7t
                              g$x2$21909$6Dw7t)))
                         g$x1$21886$6Dw7t
                         g$x2$21887$6Dw7t)
                        (if ($fx<? '0 g$x2$21887$6Dw7t)
                          ((case-lambda
                             ((g$x1$21930$6Dw7t g$x2$21931$6Dw7t)
                              ($fxdiv0
                                g$x1$21930$6Dw7t
                                g$x2$21931$6Dw7t)))
                           ($$fx-
                             g$x1$21886$6Dw7t
                             ($$fx- g$x2$21887$6Dw7t '1))
                           g$x2$21887$6Dw7t)
                          ((case-lambda
                             (()
                              (begin
                                '#f
                                ((case-lambda
                                   ((g$x1$21952$6Dw7t g$x2$21953$6Dw7t)
                                    ($fxdiv0
                                      g$x1$21952$6Dw7t
                                      g$x2$21953$6Dw7t)))
                                 ($$fx+
                                   g$x1$21886$6Dw7t
                                   ($$fx+ g$x2$21887$6Dw7t '1))
                                 g$x2$21887$6Dw7t)))))))))))
               g$x1$21864$6Dw7t
               g$x2$21865$6Dw7t))))))))
   (g$residual-fxmod*$21365$6Dw7t
     g$residual-fxmod*$23317$6Dw7t
     (case-lambda
       ((g$x1$21974$6Dw7t g$x2$21975$6Dw7t)
        ($$fx-
          g$x1$21974$6Dw7t
          ($$fx*
            ((case-lambda
               ((g$x1$21996$6Dw7t g$x2$21997$6Dw7t)
                (begin
                  (if ($fx=? '0 g$x2$21997$6Dw7t)
                    (g$assertion-violation$20490$6Dw7t
                      'fxdiv
                      '"divide by zero"
                      g$x1$21996$6Dw7t
                      g$x2$21997$6Dw7t)
                    (void))
                  (if (if ($fx=? '-1 g$x2$21997$6Dw7t)
                        (begin
                          '#f
                          ($fx=?
                            (g$least-fixnum$21064$6Dw7t)
                            g$x1$21996$6Dw7t))
                        '#f)
                    (g$overflow-error$21173$6Dw7t
                      'fxdiv
                      g$x1$21996$6Dw7t
                      g$x2$21997$6Dw7t)
                    (void))
                  (if ($fx=? '0 g$x1$21996$6Dw7t)
                    '0
                    (if ($fx<? '0 g$x1$21996$6Dw7t)
                      ((case-lambda
                         ((g$x1$22018$6Dw7t g$x2$22019$6Dw7t)
                          ($fxdiv0 g$x1$22018$6Dw7t g$x2$22019$6Dw7t)))
                       g$x1$21996$6Dw7t
                       g$x2$21997$6Dw7t)
                      (if ($fx<? '0 g$x2$21997$6Dw7t)
                        ((case-lambda
                           ((g$x1$22040$6Dw7t g$x2$22041$6Dw7t)
                            ($fxdiv0
                              g$x1$22040$6Dw7t
                              g$x2$22041$6Dw7t)))
                         ($$fx-
                           g$x1$21996$6Dw7t
                           ($$fx- g$x2$21997$6Dw7t '1))
                         g$x2$21997$6Dw7t)
                        ((case-lambda
                           (()
                            (begin
                              '#f
                              ((case-lambda
                                 ((g$x1$22062$6Dw7t g$x2$22063$6Dw7t)
                                  ($fxdiv0
                                    g$x1$22062$6Dw7t
                                    g$x2$22063$6Dw7t)))
                               ($$fx+
                                 g$x1$21996$6Dw7t
                                 ($$fx+ g$x2$21997$6Dw7t '1))
                               g$x2$21997$6Dw7t)))))))))))
             g$x1$21974$6Dw7t
             g$x2$21975$6Dw7t)
            g$x2$21975$6Dw7t)))))
   (g$fxmod$21366$6Dw7t
     g$fxmod$23318$6Dw7t
     (case-lambda
       ((g$x1$22064$6Dw7t g$x2$22065$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$22064$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxmod
              '"not a fixnum"
              g$x1$22064$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$22065$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxmod
              '"not a fixnum"
              g$x2$22065$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$22086$6Dw7t g$x2$22087$6Dw7t)
                  ($$fx-
                    g$x1$22086$6Dw7t
                    ($$fx*
                      ((case-lambda
                         ((g$x1$22108$6Dw7t g$x2$22109$6Dw7t)
                          (begin
                            (if ($fx=? '0 g$x2$22109$6Dw7t)
                              (g$assertion-violation$20490$6Dw7t
                                'fxdiv
                                '"divide by zero"
                                g$x1$22108$6Dw7t
                                g$x2$22109$6Dw7t)
                              (void))
                            (if (if ($fx=? '-1 g$x2$22109$6Dw7t)
                                  (begin
                                    '#f
                                    ($fx=?
                                      (g$least-fixnum$21064$6Dw7t)
                                      g$x1$22108$6Dw7t))
                                  '#f)
                              (g$overflow-error$21173$6Dw7t
                                'fxdiv
                                g$x1$22108$6Dw7t
                                g$x2$22109$6Dw7t)
                              (void))
                            (if ($fx=? '0 g$x1$22108$6Dw7t)
                              '0
                              (if ($fx<? '0 g$x1$22108$6Dw7t)
                                ((case-lambda
                                   ((g$x1$22130$6Dw7t g$x2$22131$6Dw7t)
                                    ($fxdiv0
                                      g$x1$22130$6Dw7t
                                      g$x2$22131$6Dw7t)))
                                 g$x1$22108$6Dw7t
                                 g$x2$22109$6Dw7t)
                                (if ($fx<? '0 g$x2$22109$6Dw7t)
                                  ((case-lambda
                                     ((g$x1$22152$6Dw7t
                                        g$x2$22153$6Dw7t)
                                      ($fxdiv0
                                        g$x1$22152$6Dw7t
                                        g$x2$22153$6Dw7t)))
                                   ($$fx-
                                     g$x1$22108$6Dw7t
                                     ($$fx- g$x2$22109$6Dw7t '1))
                                   g$x2$22109$6Dw7t)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        ((case-lambda
                                           ((g$x1$22174$6Dw7t
                                              g$x2$22175$6Dw7t)
                                            ($fxdiv0
                                              g$x1$22174$6Dw7t
                                              g$x2$22175$6Dw7t)))
                                         ($$fx+
                                           g$x1$22108$6Dw7t
                                           ($$fx+ g$x2$22109$6Dw7t '1))
                                         g$x2$22109$6Dw7t)))))))))))
                       g$x1$22086$6Dw7t
                       g$x2$22087$6Dw7t)
                      g$x2$22087$6Dw7t))))
               g$x1$22064$6Dw7t
               g$x2$22065$6Dw7t))))))))
   (g$fxmod0$21367$6Dw7t
     g$fxmod0$23319$6Dw7t
     (case-lambda
       ((g$x1$22176$6Dw7t g$x2$22177$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$22176$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxmod0
              '"not a fixnum"
              g$x1$22176$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$22177$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxmod0
              '"not a fixnum"
              g$x2$22177$6Dw7t)
            (void))
          ((case-lambda
             (()
              (begin
                (if ($fx=? '0 g$x2$22177$6Dw7t)
                  (g$assertion-violation$20490$6Dw7t
                    'fxmod0
                    '"divide by zero"
                    g$x1$22176$6Dw7t
                    g$x2$22177$6Dw7t)
                  (void))
                (if (if ($fx=? '-1 g$x2$22177$6Dw7t)
                      (begin
                        '#f
                        ($fx=?
                          (g$least-fixnum$21064$6Dw7t)
                          g$x1$22176$6Dw7t))
                      '#f)
                  (g$overflow-error$21173$6Dw7t
                    'fxmod0
                    g$x1$22176$6Dw7t
                    g$x2$22177$6Dw7t)
                  (void))
                ($fxmod0 g$x1$22176$6Dw7t g$x2$22177$6Dw7t)))))))))
   (g$fxdiv-and-mod$21368$6Dw7t
     g$fxdiv-and-mod$23320$6Dw7t
     (case-lambda
       ((g$x1$22178$6Dw7t g$x2$22179$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$22178$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv-and-mod
              '"not a fixnum"
              g$x1$22178$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$22179$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv-and-mod
              '"not a fixnum"
              g$x2$22179$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$22180$6Dw7t)
                  (values
                    g$d$22180$6Dw7t
                    ($$fx-
                      g$x1$22178$6Dw7t
                      ($$fx* g$d$22180$6Dw7t g$x2$22179$6Dw7t)))))
               ((case-lambda
                  ((g$x1$22201$6Dw7t g$x2$22202$6Dw7t)
                   (begin
                     (if ($fx=? '0 g$x2$22202$6Dw7t)
                       (g$assertion-violation$20490$6Dw7t
                         'fxdiv
                         '"divide by zero"
                         g$x1$22201$6Dw7t
                         g$x2$22202$6Dw7t)
                       (void))
                     (if (if ($fx=? '-1 g$x2$22202$6Dw7t)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$21064$6Dw7t)
                               g$x1$22201$6Dw7t))
                           '#f)
                       (g$overflow-error$21173$6Dw7t
                         'fxdiv
                         g$x1$22201$6Dw7t
                         g$x2$22202$6Dw7t)
                       (void))
                     (if ($fx=? '0 g$x1$22201$6Dw7t)
                       '0
                       (if ($fx<? '0 g$x1$22201$6Dw7t)
                         ((case-lambda
                            ((g$x1$22223$6Dw7t g$x2$22224$6Dw7t)
                             ($fxdiv0
                               g$x1$22223$6Dw7t
                               g$x2$22224$6Dw7t)))
                          g$x1$22201$6Dw7t
                          g$x2$22202$6Dw7t)
                         (if ($fx<? '0 g$x2$22202$6Dw7t)
                           ((case-lambda
                              ((g$x1$22245$6Dw7t g$x2$22246$6Dw7t)
                               ($fxdiv0
                                 g$x1$22245$6Dw7t
                                 g$x2$22246$6Dw7t)))
                            ($$fx-
                              g$x1$22201$6Dw7t
                              ($$fx- g$x2$22202$6Dw7t '1))
                            g$x2$22202$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$x1$22267$6Dw7t g$x2$22268$6Dw7t)
                                     ($fxdiv0
                                       g$x1$22267$6Dw7t
                                       g$x2$22268$6Dw7t)))
                                  ($$fx+
                                    g$x1$22201$6Dw7t
                                    ($$fx+ g$x2$22202$6Dw7t '1))
                                  g$x2$22202$6Dw7t)))))))))))
                g$x1$22178$6Dw7t
                g$x2$22179$6Dw7t)))))))))
   (g$residual-fxdiv0*$21384$6Dw7t
     g$residual-fxdiv0*$23321$6Dw7t
     (case-lambda
       ((g$x1$22289$6Dw7t g$x2$22290$6Dw7t)
        (begin
          (if ($fx=? '0 g$x2$22290$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'fxdiv0
              '"divide by zero"
              g$x1$22289$6Dw7t
              g$x2$22290$6Dw7t)
            (void))
          (if (if ($fx=? '-1 g$x2$22290$6Dw7t)
                (begin
                  '#f
                  ($fx=? (g$least-fixnum$21064$6Dw7t) g$x1$22289$6Dw7t))
                '#f)
            (g$overflow-error$21173$6Dw7t
              'fxdiv0
              g$x1$22289$6Dw7t
              g$x2$22290$6Dw7t)
            (void))
          ((case-lambda
             ((g$x1$22311$6Dw7t g$x2$22312$6Dw7t)
              ($fxdiv0 g$x1$22311$6Dw7t g$x2$22312$6Dw7t)))
           g$x1$22289$6Dw7t
           g$x2$22290$6Dw7t)))))
   (g$fxdiv0$21385$6Dw7t
     g$fxdiv0$23322$6Dw7t
     (case-lambda
       ((g$x1$22313$6Dw7t g$x2$22314$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$22313$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv0
              '"not a fixnum"
              g$x1$22313$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$22314$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv0
              '"not a fixnum"
              g$x2$22314$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$22335$6Dw7t g$x2$22336$6Dw7t)
                  (begin
                    (if ($fx=? '0 g$x2$22336$6Dw7t)
                      (g$assertion-violation$20490$6Dw7t
                        'fxdiv0
                        '"divide by zero"
                        g$x1$22335$6Dw7t
                        g$x2$22336$6Dw7t)
                      (void))
                    (if (if ($fx=? '-1 g$x2$22336$6Dw7t)
                          (begin
                            '#f
                            ($fx=?
                              (g$least-fixnum$21064$6Dw7t)
                              g$x1$22335$6Dw7t))
                          '#f)
                      (g$overflow-error$21173$6Dw7t
                        'fxdiv0
                        g$x1$22335$6Dw7t
                        g$x2$22336$6Dw7t)
                      (void))
                    ((case-lambda
                       ((g$x1$22357$6Dw7t g$x2$22358$6Dw7t)
                        ($fxdiv0 g$x1$22357$6Dw7t g$x2$22358$6Dw7t)))
                     g$x1$22335$6Dw7t
                     g$x2$22336$6Dw7t))))
               g$x1$22313$6Dw7t
               g$x2$22314$6Dw7t))))))))
   (g$residual-%%fxdiv0$21401$6Dw7t
     g$residual-%%fxdiv0$23323$6Dw7t
     (case-lambda
       ((g$x1$22379$6Dw7t g$x2$22380$6Dw7t)
        ($fxdiv0 g$x1$22379$6Dw7t g$x2$22380$6Dw7t))))
   (g$fxdiv0-and-mod0$21402$6Dw7t
     g$fxdiv0-and-mod0$23324$6Dw7t
     (case-lambda
       ((g$x1$22381$6Dw7t g$x2$22382$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$22381$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x1$22381$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$x2$22382$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxdiv0-and-mod0
              '"not a fixnum"
              g$x2$22382$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$22383$6Dw7t)
                  (values
                    g$d$22383$6Dw7t
                    ($$fx-
                      g$x1$22381$6Dw7t
                      ($$fx* g$d$22383$6Dw7t g$x2$22382$6Dw7t)))))
               ((case-lambda
                  ((g$x1$22404$6Dw7t g$x2$22405$6Dw7t)
                   (begin
                     (if ($fx=? '0 g$x2$22405$6Dw7t)
                       (g$assertion-violation$20490$6Dw7t
                         'fxdiv0
                         '"divide by zero"
                         g$x1$22404$6Dw7t
                         g$x2$22405$6Dw7t)
                       (void))
                     (if (if ($fx=? '-1 g$x2$22405$6Dw7t)
                           (begin
                             '#f
                             ($fx=?
                               (g$least-fixnum$21064$6Dw7t)
                               g$x1$22404$6Dw7t))
                           '#f)
                       (g$overflow-error$21173$6Dw7t
                         'fxdiv0
                         g$x1$22404$6Dw7t
                         g$x2$22405$6Dw7t)
                       (void))
                     ((case-lambda
                        ((g$x1$22426$6Dw7t g$x2$22427$6Dw7t)
                         ($fxdiv0 g$x1$22426$6Dw7t g$x2$22427$6Dw7t)))
                      g$x1$22404$6Dw7t
                      g$x2$22405$6Dw7t))))
                g$x1$22381$6Dw7t
                g$x2$22382$6Dw7t)))))))))
   (g$residual-fxpositive?*$21418$6Dw7t
     g$residual-fxpositive?*$23325$6Dw7t
     (case-lambda ((g$r$22448$6Dw7t) ($fx<? '0 g$r$22448$6Dw7t))))
   (g$fxpositive?$21419$6Dw7t
     g$fxpositive?$23326$6Dw7t
     (case-lambda
       ((g$r$22449$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$r$22449$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxpositive?
              '"not a fixnum"
              g$r$22449$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$22470$6Dw7t) ($fx<? '0 g$r$22470$6Dw7t)))
               g$r$22449$6Dw7t))))))))
   (g$residual-fxnegative?*$21435$6Dw7t
     g$residual-fxnegative?*$23327$6Dw7t
     (case-lambda ((g$r$22491$6Dw7t) ($fx>? '0 g$r$22491$6Dw7t))))
   (g$fxnegative?$21436$6Dw7t
     g$fxnegative?$23328$6Dw7t
     (case-lambda
       ((g$r$22492$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$r$22492$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxnegative?
              '"not a fixnum"
              g$r$22492$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$22513$6Dw7t) ($fx>? '0 g$r$22513$6Dw7t)))
               g$r$22492$6Dw7t))))))))
   (g$residual-fxzero?*$21452$6Dw7t
     g$residual-fxzero?*$23329$6Dw7t
     (case-lambda ((g$r$22534$6Dw7t) ($fx=? '0 g$r$22534$6Dw7t))))
   (g$fxzero?$21453$6Dw7t
     g$fxzero?$23330$6Dw7t
     (case-lambda
       ((g$r$22535$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$r$22535$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxzero?
              '"not a fixnum"
              g$r$22535$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$r$22556$6Dw7t) ($fx=? '0 g$r$22556$6Dw7t)))
               g$r$22535$6Dw7t))))))))
   (g$residual-fxeven?*$21469$6Dw7t
     g$residual-fxeven?*$23331$6Dw7t
     (case-lambda
       ((g$n$22577$6Dw7t) ($fx=? '0 ($fxand g$n$22577$6Dw7t '1)))))
   (g$fxeven?$21470$6Dw7t
     g$fxeven?$23332$6Dw7t
     (case-lambda
       ((g$n$22578$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$n$22578$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxeven?
              '"not a fixnum"
              g$n$22578$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$22599$6Dw7t)
                  ($fx=? '0 ($fxand g$n$22599$6Dw7t '1))))
               g$n$22578$6Dw7t))))))))
   (g$residual-fxodd?*$21486$6Dw7t
     g$residual-fxodd?*$23333$6Dw7t
     (case-lambda
       ((g$n$22620$6Dw7t) ($fx=? '1 ($fxand g$n$22620$6Dw7t '1)))))
   (g$fxodd?$21487$6Dw7t
     g$fxodd?$23334$6Dw7t
     (case-lambda
       ((g$n$22621$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$n$22621$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxodd?
              '"not a fixnum"
              g$n$22621$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$n$22642$6Dw7t)
                  ($fx=? '1 ($fxand g$n$22642$6Dw7t '1))))
               g$n$22621$6Dw7t))))))))
   (g$fxmax$21488$6Dw7t
     g$fxmax$23335$6Dw7t
     (case-lambda
       ((g$a$22643$6Dw7t . g$rest$22644$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$a$22643$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxmax
              '"not a fixnum"
              g$a$22643$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            (case-lambda
              ((g$a$22645$6Dw7t g$b$22646$6Dw7t)
               (if (g$fx<?$21279$6Dw7t g$a$22645$6Dw7t g$b$22646$6Dw7t)
                 g$b$22646$6Dw7t
                 g$a$22645$6Dw7t)))
            g$a$22643$6Dw7t
            g$rest$22644$6Dw7t)))))
   (g$fxmin$21489$6Dw7t
     g$fxmin$23336$6Dw7t
     (case-lambda
       ((g$a$22647$6Dw7t . g$rest$22648$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$a$22647$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxmin
              '"not a fixnum"
              g$a$22647$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            (case-lambda
              ((g$a$22649$6Dw7t g$b$22650$6Dw7t)
               (if (g$fx>?$21281$6Dw7t g$a$22649$6Dw7t g$b$22650$6Dw7t)
                 g$b$22650$6Dw7t
                 g$a$22649$6Dw7t)))
            g$a$22647$6Dw7t
            g$rest$22648$6Dw7t)))))
   (g$fx*/carry$21490$6Dw7t
     g$fx*/carry$23337$6Dw7t
     (case-lambda
       ((g$fx1$22651$6Dw7t g$fx2$22652$6Dw7t g$fx3$22653$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22651$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx*/carry
              '"not a fixnum"
              g$fx1$22651$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22652$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx*/carry
              '"not a fixnum"
              g$fx2$22652$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx3$22653$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx*/carry
              '"not a fixnum"
              g$fx3$22653$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$22654$6Dw7t g$e$22655$6Dw7t)
                  (values
                    (g$mod0$24031$6Dw7t g$s$22654$6Dw7t g$e$22655$6Dw7t)
                    (g$div0$24029$6Dw7t
                      g$s$22654$6Dw7t
                      g$e$22655$6Dw7t))))
               (+ (* g$fx1$22651$6Dw7t g$fx2$22652$6Dw7t)
                  g$fx3$22653$6Dw7t)
               (g$expt$25102$6Dw7t
                 '2
                 (g$fixnum-width$24012$6Dw7t))))))))))
   (g$fx-/carry$21491$6Dw7t
     g$fx-/carry$23338$6Dw7t
     (case-lambda
       ((g$fx1$22656$6Dw7t g$fx2$22657$6Dw7t g$fx3$22658$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22656$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx-/carry
              '"not a fixnum"
              g$fx1$22656$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22657$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx-/carry
              '"not a fixnum"
              g$fx2$22657$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx3$22658$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx-/carry
              '"not a fixnum"
              g$fx3$22658$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$22659$6Dw7t g$e$22660$6Dw7t)
                  (values
                    (g$mod0$24031$6Dw7t g$s$22659$6Dw7t g$e$22660$6Dw7t)
                    (g$div0$24029$6Dw7t
                      g$s$22659$6Dw7t
                      g$e$22660$6Dw7t))))
               (- g$fx1$22656$6Dw7t g$fx2$22657$6Dw7t g$fx3$22658$6Dw7t)
               (g$expt$25102$6Dw7t
                 '2
                 (g$fixnum-width$24012$6Dw7t))))))))))
   (g$fx+/carry$21492$6Dw7t
     g$fx+/carry$23339$6Dw7t
     (case-lambda
       ((g$fx1$22661$6Dw7t g$fx2$22662$6Dw7t g$fx3$22663$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22661$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx+/carry
              '"not a fixnum"
              g$fx1$22661$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22662$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx+/carry
              '"not a fixnum"
              g$fx2$22662$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx3$22663$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fx+/carry
              '"not a fixnum"
              g$fx3$22663$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$s$22664$6Dw7t g$e$22665$6Dw7t)
                  (values
                    (g$mod0$24031$6Dw7t g$s$22664$6Dw7t g$e$22665$6Dw7t)
                    (g$div0$24029$6Dw7t
                      g$s$22664$6Dw7t
                      g$e$22665$6Dw7t))))
               (+ g$fx1$22661$6Dw7t g$fx2$22662$6Dw7t g$fx3$22663$6Dw7t)
               (g$expt$25102$6Dw7t
                 '2
                 (g$fixnum-width$24012$6Dw7t))))))))))
   (g$residual-fxif*$21508$6Dw7t
     g$residual-fxif*$23340$6Dw7t
     (case-lambda
       ((g$fx1$22686$6Dw7t g$fx2$22687$6Dw7t g$fx3$22688$6Dw7t)
        ($fxior
          ($fxand g$fx1$22686$6Dw7t g$fx2$22687$6Dw7t)
          ($fxand ($fxnot g$fx1$22686$6Dw7t) g$fx3$22688$6Dw7t)))))
   (g$fxif$21509$6Dw7t
     g$fxif$23341$6Dw7t
     (case-lambda
       ((g$fx1$22689$6Dw7t g$fx2$22690$6Dw7t g$fx3$22691$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22689$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxif
              '"not a fixnum"
              g$fx1$22689$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22690$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxif
              '"not a fixnum"
              g$fx2$22690$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx3$22691$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxif
              '"not a fixnum"
              g$fx3$22691$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$22712$6Dw7t
                    g$fx2$22713$6Dw7t
                    g$fx3$22714$6Dw7t)
                  ($fxior
                    ($fxand g$fx1$22712$6Dw7t g$fx2$22713$6Dw7t)
                    ($fxand
                      ($fxnot g$fx1$22712$6Dw7t)
                      g$fx3$22714$6Dw7t))))
               g$fx1$22689$6Dw7t
               g$fx2$22690$6Dw7t
               g$fx3$22691$6Dw7t))))))))
   (g$residual-fxcopy-bit*$21525$6Dw7t
     g$residual-fxcopy-bit*$23342$6Dw7t
     (case-lambda
       ((g$fx1$22735$6Dw7t g$fx2$22736$6Dw7t g$fx3$22737$6Dw7t)
        ((case-lambda
           ((g$fx1$22758$6Dw7t g$fx2$22759$6Dw7t g$fx3$22760$6Dw7t)
            ($fxior
              ($fxand g$fx1$22758$6Dw7t g$fx2$22759$6Dw7t)
              ($fxand ($fxnot g$fx1$22758$6Dw7t) g$fx3$22760$6Dw7t))))
         ($fxarithmetic-shift-left '1 g$fx2$22736$6Dw7t)
         ($fxarithmetic-shift-left g$fx3$22737$6Dw7t g$fx2$22736$6Dw7t)
         g$fx1$22735$6Dw7t))))
   (g$fxcopy-bit$21526$6Dw7t
     g$fxcopy-bit$23343$6Dw7t
     (case-lambda
       ((g$fx1$22761$6Dw7t g$fx2$22762$6Dw7t g$fx3$22763$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22761$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit
              '"not a fixnum"
              g$fx1$22761$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22762$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit
              '"not a fixnum"
              g$fx2$22762$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx3$22763$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit
              '"not a fixnum"
              g$fx3$22763$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$22784$6Dw7t
                    g$fx2$22785$6Dw7t
                    g$fx3$22786$6Dw7t)
                  ((case-lambda
                     ((g$fx1$22807$6Dw7t
                        g$fx2$22808$6Dw7t
                        g$fx3$22809$6Dw7t)
                      ($fxior
                        ($fxand g$fx1$22807$6Dw7t g$fx2$22808$6Dw7t)
                        ($fxand
                          ($fxnot g$fx1$22807$6Dw7t)
                          g$fx3$22809$6Dw7t))))
                   ($fxarithmetic-shift-left '1 g$fx2$22785$6Dw7t)
                   ($fxarithmetic-shift-left
                     g$fx3$22786$6Dw7t
                     g$fx2$22785$6Dw7t)
                   g$fx1$22784$6Dw7t)))
               g$fx1$22761$6Dw7t
               g$fx2$22762$6Dw7t
               g$fx3$22763$6Dw7t))))))))
   (g$residual-fxbit-field*$21542$6Dw7t
     g$residual-fxbit-field*$23344$6Dw7t
     (case-lambda
       ((g$fx1$22830$6Dw7t g$fx2$22831$6Dw7t g$fx3$22832$6Dw7t)
        ($fxarithmetic-shift-right
          ($fxand
            g$fx1$22830$6Dw7t
            ($fxnot ($fxarithmetic-shift-left '-1 g$fx3$22832$6Dw7t)))
          g$fx2$22831$6Dw7t))))
   (g$fxbit-field$21543$6Dw7t
     g$fxbit-field$23345$6Dw7t
     (case-lambda
       ((g$fx1$22833$6Dw7t g$fx2$22834$6Dw7t g$fx3$22835$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22833$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxbit-field
              '"not a fixnum"
              g$fx1$22833$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22834$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxbit-field
              '"not a fixnum"
              g$fx2$22834$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx3$22835$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxbit-field
              '"not a fixnum"
              g$fx3$22835$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fx1$22856$6Dw7t
                    g$fx2$22857$6Dw7t
                    g$fx3$22858$6Dw7t)
                  ($fxarithmetic-shift-right
                    ($fxand
                      g$fx1$22856$6Dw7t
                      ($fxnot
                        ($fxarithmetic-shift-left
                          '-1
                          g$fx3$22858$6Dw7t)))
                    g$fx2$22857$6Dw7t)))
               g$fx1$22833$6Dw7t
               g$fx2$22834$6Dw7t
               g$fx3$22835$6Dw7t))))))))
   (g$residual-fxcopy-bit-field*$21559$6Dw7t
     g$residual-fxcopy-bit-field*$23346$6Dw7t
     (case-lambda
       ((g$to$22879$6Dw7t
          g$start$22880$6Dw7t
          g$end$22881$6Dw7t
          g$from$22882$6Dw7t)
        ((case-lambda
           ((g$fx1$22903$6Dw7t g$fx2$22904$6Dw7t g$fx3$22905$6Dw7t)
            ($fxior
              ($fxand g$fx1$22903$6Dw7t g$fx2$22904$6Dw7t)
              ($fxand ($fxnot g$fx1$22903$6Dw7t) g$fx3$22905$6Dw7t))))
         ($fxand
           ($fxarithmetic-shift-left '-1 g$start$22880$6Dw7t)
           ($fxnot ($fxarithmetic-shift-left '-1 g$end$22881$6Dw7t)))
         ($fxarithmetic-shift-left
           g$from$22882$6Dw7t
           g$start$22880$6Dw7t)
         g$to$22879$6Dw7t))))
   (g$fxcopy-bit-field$21560$6Dw7t
     g$fxcopy-bit-field$23347$6Dw7t
     (case-lambda
       ((g$to$22906$6Dw7t
          g$start$22907$6Dw7t
          g$end$22908$6Dw7t
          g$from$22909$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$to$22906$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit-field
              '"not a fixnum"
              g$to$22906$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$start$22907$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit-field
              '"not a fixnum"
              g$start$22907$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$end$22908$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit-field
              '"not a fixnum"
              g$end$22908$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$from$22909$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxcopy-bit-field
              '"not a fixnum"
              g$from$22909$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$to$22930$6Dw7t
                    g$start$22931$6Dw7t
                    g$end$22932$6Dw7t
                    g$from$22933$6Dw7t)
                  ((case-lambda
                     ((g$fx1$22954$6Dw7t
                        g$fx2$22955$6Dw7t
                        g$fx3$22956$6Dw7t)
                      ($fxior
                        ($fxand g$fx1$22954$6Dw7t g$fx2$22955$6Dw7t)
                        ($fxand
                          ($fxnot g$fx1$22954$6Dw7t)
                          g$fx3$22956$6Dw7t))))
                   ($fxand
                     ($fxarithmetic-shift-left '-1 g$start$22931$6Dw7t)
                     ($fxnot
                       ($fxarithmetic-shift-left
                         '-1
                         g$end$22932$6Dw7t)))
                   ($fxarithmetic-shift-left
                     g$from$22933$6Dw7t
                     g$start$22931$6Dw7t)
                   g$to$22930$6Dw7t)))
               g$to$22906$6Dw7t
               g$start$22907$6Dw7t
               g$end$22908$6Dw7t
               g$from$22909$6Dw7t))))))))
   (g$fxarithmetic-shift-left$21561$6Dw7t
     g$fxarithmetic-shift-left$23348$6Dw7t
     (case-lambda
       ((g$fx1$22957$6Dw7t g$fx2$22958$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22957$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx1$22957$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22958$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxarithmetic-shift-left
              '"not a fixnum"
              g$fx2$22958$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$22979$6Dw7t g$k$22980$6Dw7t)
                  (if ($fx=? g$k$22980$6Dw7t '0)
                    g$x$22979$6Dw7t
                    (if ($fx<? g$k$22980$6Dw7t '0)
                      ($fxarithmetic-shift-right
                        g$x$22979$6Dw7t
                        ($$fx- g$k$22980$6Dw7t))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$i$22981$6Dw7t)
                                (begin
                                  (if ($fx>?
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$x$22979$6Dw7t)
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$i$22981$6Dw7t))
                                    (g$overflow-error$21173$6Dw7t
                                      'fxarithmetic-shift
                                      g$x$22979$6Dw7t
                                      g$k$22980$6Dw7t)
                                    (void))
                                  g$i$22981$6Dw7t)))
                             ($fxarithmetic-shift-left
                               g$x$22979$6Dw7t
                               g$k$22980$6Dw7t))))))))))
               g$fx1$22957$6Dw7t
               g$fx2$22958$6Dw7t))))))))
   (g$fxarithmetic-shift-right$21562$6Dw7t
     g$fxarithmetic-shift-right$23349$6Dw7t
     (case-lambda
       ((g$fx1$22982$6Dw7t g$fx2$22983$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$fx1$22982$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx1$22982$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$fx2$22983$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxarithmetic-shift-right
              '"not a fixnum"
              g$fx2$22983$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x$23004$6Dw7t g$k$23005$6Dw7t)
                  (if ($fx=? g$k$23005$6Dw7t '0)
                    g$x$23004$6Dw7t
                    (if ($fx<? g$k$23005$6Dw7t '0)
                      ($fxarithmetic-shift-right
                        g$x$23004$6Dw7t
                        ($$fx- g$k$23005$6Dw7t))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$i$23006$6Dw7t)
                                (begin
                                  (if ($fx>?
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$x$23004$6Dw7t)
                                        (clr-call-internal
                                          'System.Math
                                          '"abs(int32)"
                                          '()
                                          g$i$23006$6Dw7t))
                                    (g$overflow-error$21173$6Dw7t
                                      'fxarithmetic-shift
                                      g$x$23004$6Dw7t
                                      g$k$23005$6Dw7t)
                                    (void))
                                  g$i$23006$6Dw7t)))
                             ($fxarithmetic-shift-left
                               g$x$23004$6Dw7t
                               g$k$23005$6Dw7t))))))))))
               g$fx1$22982$6Dw7t
               ($$fx- g$fx2$22983$6Dw7t)))))))))
   (g$fxrotate-bit-field$21563$6Dw7t
     g$fxrotate-bit-field$23350$6Dw7t
     (case-lambda
       ((g$n$23007$6Dw7t
          g$start$23008$6Dw7t
          g$end$23009$6Dw7t
          g$count$23010$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$n$23007$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxrotate-bit-field
              '"not a fixnum"
              g$n$23007$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$start$23008$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxrotate-bit-field
              '"not a fixnum"
              g$start$23008$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$end$23009$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxrotate-bit-field
              '"not a fixnum"
              g$end$23009$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$count$23010$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxrotate-bit-field
              '"not a fixnum"
              g$count$23010$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$width$23011$6Dw7t)
                  (if ((case-lambda
                         ((g$r$23032$6Dw7t) ($fx<? '0 g$r$23032$6Dw7t)))
                       g$width$23011$6Dw7t)
                    ((case-lambda
                       ((g$count$23033$6Dw7t g$field$23034$6Dw7t)
                        ((case-lambda
                           ((g$to$23055$6Dw7t
                              g$start$23056$6Dw7t
                              g$end$23057$6Dw7t
                              g$from$23058$6Dw7t)
                            ((case-lambda
                               ((g$fx1$23079$6Dw7t
                                  g$fx2$23080$6Dw7t
                                  g$fx3$23081$6Dw7t)
                                ($fxior
                                  ($fxand
                                    g$fx1$23079$6Dw7t
                                    g$fx2$23080$6Dw7t)
                                  ($fxand
                                    ($fxnot g$fx1$23079$6Dw7t)
                                    g$fx3$23081$6Dw7t))))
                             ($fxand
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$start$23056$6Dw7t)
                               ($fxnot
                                 ($fxarithmetic-shift-left
                                   '-1
                                   g$end$23057$6Dw7t)))
                             ($fxarithmetic-shift-left
                               g$from$23058$6Dw7t
                               g$start$23056$6Dw7t)
                             g$to$23055$6Dw7t)))
                         g$n$23007$6Dw7t
                         g$start$23008$6Dw7t
                         g$end$23009$6Dw7t
                         ($fxior
                           ($fxarithmetic-shift-left
                             g$field$23034$6Dw7t
                             g$count$23033$6Dw7t)
                           ($fxarithmetic-shift-right
                             g$field$23034$6Dw7t
                             ($$fx-
                               g$width$23011$6Dw7t
                               g$count$23033$6Dw7t))))))
                     ((case-lambda
                        ((g$x1$23102$6Dw7t g$x2$23103$6Dw7t)
                         ($$fx-
                           g$x1$23102$6Dw7t
                           ($$fx*
                             ((case-lambda
                                ((g$x1$23124$6Dw7t g$x2$23125$6Dw7t)
                                 (begin
                                   (if ($fx=? '0 g$x2$23125$6Dw7t)
                                     (g$assertion-violation$20490$6Dw7t
                                       'fxdiv
                                       '"divide by zero"
                                       g$x1$23124$6Dw7t
                                       g$x2$23125$6Dw7t)
                                     (void))
                                   (if (if ($fx=? '-1 g$x2$23125$6Dw7t)
                                         (begin
                                           '#f
                                           ($fx=?
                                             (g$least-fixnum$21064$6Dw7t)
                                             g$x1$23124$6Dw7t))
                                         '#f)
                                     (g$overflow-error$21173$6Dw7t
                                       'fxdiv
                                       g$x1$23124$6Dw7t
                                       g$x2$23125$6Dw7t)
                                     (void))
                                   (if ($fx=? '0 g$x1$23124$6Dw7t)
                                     '0
                                     (if ($fx<? '0 g$x1$23124$6Dw7t)
                                       ((case-lambda
                                          ((g$x1$23146$6Dw7t
                                             g$x2$23147$6Dw7t)
                                           ($fxdiv0
                                             g$x1$23146$6Dw7t
                                             g$x2$23147$6Dw7t)))
                                        g$x1$23124$6Dw7t
                                        g$x2$23125$6Dw7t)
                                       (if ($fx<? '0 g$x2$23125$6Dw7t)
                                         ((case-lambda
                                            ((g$x1$23168$6Dw7t
                                               g$x2$23169$6Dw7t)
                                             ($fxdiv0
                                               g$x1$23168$6Dw7t
                                               g$x2$23169$6Dw7t)))
                                          ($$fx-
                                            g$x1$23124$6Dw7t
                                            ($$fx- g$x2$23125$6Dw7t '1))
                                          g$x2$23125$6Dw7t)
                                         ((case-lambda
                                            (()
                                             (begin
                                               '#f
                                               ((case-lambda
                                                  ((g$x1$23190$6Dw7t
                                                     g$x2$23191$6Dw7t)
                                                   ($fxdiv0
                                                     g$x1$23190$6Dw7t
                                                     g$x2$23191$6Dw7t)))
                                                ($$fx+
                                                  g$x1$23124$6Dw7t
                                                  ($$fx+
                                                    g$x2$23125$6Dw7t
                                                    '1))
                                                g$x2$23125$6Dw7t)))))))))))
                              g$x1$23102$6Dw7t
                              g$x2$23103$6Dw7t)
                             g$x2$23103$6Dw7t))))
                      g$count$23010$6Dw7t
                      g$width$23011$6Dw7t)
                     ((case-lambda
                        ((g$fx1$23212$6Dw7t
                           g$fx2$23213$6Dw7t
                           g$fx3$23214$6Dw7t)
                         ($fxarithmetic-shift-right
                           ($fxand
                             g$fx1$23212$6Dw7t
                             ($fxnot
                               ($fxarithmetic-shift-left
                                 '-1
                                 g$fx3$23214$6Dw7t)))
                           g$fx2$23213$6Dw7t)))
                      g$n$23007$6Dw7t
                      g$start$23008$6Dw7t
                      g$end$23009$6Dw7t))
                    g$n$23007$6Dw7t)))
               ($$fx- g$end$23009$6Dw7t g$start$23008$6Dw7t)))))))))
   (g$fxreverse-bit-field$21564$6Dw7t
     g$fxreverse-bit-field$23351$6Dw7t
     (case-lambda
       ((g$x1$23215$6Dw7t g$start$23216$6Dw7t g$end$23217$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x1$23215$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxreverse-bit-field
              '"not a fixnum"
              g$x1$23215$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$start$23216$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxreverse-bit-field
              '"not a fixnum"
              g$start$23216$6Dw7t)
            (void))
          (if (not (g$fixnum?$24010$6Dw7t g$end$23217$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fxreverse-bit-field
              '"not a fixnum"
              g$end$23217$6Dw7t)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not ($fx<=? g$start$23216$6Dw7t g$end$23217$6Dw7t))
                  (g$assertion-violation$20490$6Dw7t
                    'fxreverse-bit-field
                    '"start must be less than end"
                    g$start$23216$6Dw7t
                    g$end$23217$6Dw7t)
                  (void))
                (letrec ((g$loop$23218$6Dw7t
                           (case-lambda
                             ((g$width$23242$6Dw7t
                                g$bits$23243$6Dw7t
                                g$rbits$23244$6Dw7t)
                              (if ($fx=? g$width$23242$6Dw7t '0)
                                (begin
                                  (if '#f '#f (void))
                                  ((case-lambda
                                     ((g$to$23265$6Dw7t
                                        g$start$23266$6Dw7t
                                        g$end$23267$6Dw7t
                                        g$from$23268$6Dw7t)
                                      ((case-lambda
                                         ((g$fx1$23289$6Dw7t
                                            g$fx2$23290$6Dw7t
                                            g$fx3$23291$6Dw7t)
                                          ($fxior
                                            ($fxand
                                              g$fx1$23289$6Dw7t
                                              g$fx2$23290$6Dw7t)
                                            ($fxand
                                              ($fxnot g$fx1$23289$6Dw7t)
                                              g$fx3$23291$6Dw7t))))
                                       ($fxand
                                         ($fxarithmetic-shift-left
                                           '-1
                                           g$start$23266$6Dw7t)
                                         ($fxnot
                                           ($fxarithmetic-shift-left
                                             '-1
                                             g$end$23267$6Dw7t)))
                                       ($fxarithmetic-shift-left
                                         g$from$23268$6Dw7t
                                         g$start$23266$6Dw7t)
                                       g$to$23265$6Dw7t)))
                                   g$x1$23215$6Dw7t
                                   g$start$23216$6Dw7t
                                   g$end$23217$6Dw7t
                                   g$rbits$23244$6Dw7t))
                                (g$loop$23218$6Dw7t
                                  ($$fx- g$width$23242$6Dw7t '1)
                                  ($fxarithmetic-shift-right
                                    g$bits$23243$6Dw7t
                                    '1)
                                  ($fxior
                                    ($fxarithmetic-shift-left
                                      g$rbits$23244$6Dw7t
                                      '1)
                                    ($fxand
                                      g$bits$23243$6Dw7t
                                      '1))))))))
                  (g$loop$23218$6Dw7t
                    ($$fx- g$end$23217$6Dw7t g$start$23216$6Dw7t)
                    ((case-lambda
                       ((g$fx1$23239$6Dw7t
                          g$fx2$23240$6Dw7t
                          g$fx3$23241$6Dw7t)
                        ($fxarithmetic-shift-right
                          ($fxand
                            g$fx1$23239$6Dw7t
                            ($fxnot
                              ($fxarithmetic-shift-left
                                '-1
                                g$fx3$23241$6Dw7t)))
                          g$fx2$23240$6Dw7t)))
                     g$x1$23215$6Dw7t
                     g$start$23216$6Dw7t
                     g$end$23217$6Dw7t)
                    '0)))))))))))
  (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$23352$6Dw7t
     g$list-tail$23557$6Dw7t
     (case-lambda
       ((g$lst$23388$6Dw7t g$index$23389$6Dw7t)
        (if ((case-lambda
               ((g$t$23390$6Dw7t)
                (if g$t$23390$6Dw7t
                  g$t$23390$6Dw7t
                  (begin
                    '#f
                    (g$negative?$25062$6Dw7t g$index$23389$6Dw7t)))))
             (null? g$lst$23388$6Dw7t))
          (g$assertion-violation$20490$6Dw7t
            'list-tail
            '"index out of range"
            g$lst$23388$6Dw7t
            g$index$23389$6Dw7t)
          (if (g$zero?$25060$6Dw7t g$index$23389$6Dw7t)
            g$lst$23388$6Dw7t
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$list-tail$23352$6Dw7t
                    (cdr g$lst$23388$6Dw7t)
                    (- g$index$23389$6Dw7t '1)))))))))))
   (g$list-ref$23353$6Dw7t
     g$list-ref$23558$6Dw7t
     (case-lambda
       ((g$lst$23391$6Dw7t g$index$23392$6Dw7t)
        (car (g$list-tail$23352$6Dw7t
               g$lst$23391$6Dw7t
               g$index$23392$6Dw7t)))))
   (g$last-pair$23354$6Dw7t
     g$last-pair$23559$6Dw7t
     (case-lambda
       ((g$lst$23393$6Dw7t)
        (if (null? g$lst$23393$6Dw7t)
          g$lst$23393$6Dw7t
          (if (null? (cdr g$lst$23393$6Dw7t))
            g$lst$23393$6Dw7t
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$last-pair$23354$6Dw7t
                    (cdr g$lst$23393$6Dw7t)))))))))))
   (g$make-list$23355$6Dw7t
     g$make-list$23560$6Dw7t
     (case-lambda
       ((g$n$23394$6Dw7t)
        (g$vector->list$24041$6Dw7t
          (g$make-vector$24038$6Dw7t g$n$23394$6Dw7t)))
       ((g$n$23395$6Dw7t g$fill$23396$6Dw7t)
        (g$vector->list$24041$6Dw7t
          (g$make-vector$24038$6Dw7t
            g$n$23395$6Dw7t
            g$fill$23396$6Dw7t)))))
   (g$find$23356$6Dw7t
     g$find$23561$6Dw7t
     (case-lambda
       ((g$proc$23397$6Dw7t g$l$23398$6Dw7t)
        (if (null? g$l$23398$6Dw7t)
          '#f
          ((case-lambda
             ((g$e$23399$6Dw7t g$r$23400$6Dw7t g$proc$23401$6Dw7t)
              (if (g$proc$23401$6Dw7t g$e$23399$6Dw7t)
                g$e$23399$6Dw7t
                (g$find$23356$6Dw7t
                  g$proc$23401$6Dw7t
                  g$r$23400$6Dw7t))))
           (car g$l$23398$6Dw7t)
           (cdr g$l$23398$6Dw7t)
           g$proc$23397$6Dw7t)))))
   (g$partition$23357$6Dw7t
     g$partition$23562$6Dw7t
     (case-lambda
       ((g$proc$23402$6Dw7t g$l$23403$6Dw7t)
        ((letrec ((g$f$23404$6Dw7t
                    (case-lambda
                      ((g$l$23405$6Dw7t g$a$23406$6Dw7t g$b$23407$6Dw7t)
                       (if (null? g$l$23405$6Dw7t)
                         (values
                           (reverse! g$a$23406$6Dw7t)
                           (reverse! g$b$23407$6Dw7t))
                         ((case-lambda
                            ((g$e$23408$6Dw7t)
                             (if (g$proc$23402$6Dw7t g$e$23408$6Dw7t)
                               (g$f$23404$6Dw7t
                                 (cdr g$l$23405$6Dw7t)
                                 (cons g$e$23408$6Dw7t g$a$23406$6Dw7t)
                                 g$b$23407$6Dw7t)
                               (g$f$23404$6Dw7t
                                 (cdr g$l$23405$6Dw7t)
                                 g$a$23406$6Dw7t
                                 (cons
                                   g$e$23408$6Dw7t
                                   g$b$23407$6Dw7t)))))
                          (car g$l$23405$6Dw7t)))))))
           g$f$23404$6Dw7t)
         g$l$23403$6Dw7t
         '()
         '()))))
   (g$remp$23358$6Dw7t
     g$remp$23563$6Dw7t
     (case-lambda
       ((g$proc$23409$6Dw7t g$l$23410$6Dw7t)
        ((letrec ((g$f$23411$6Dw7t
                    (case-lambda
                      ((g$l$23412$6Dw7t g$a$23413$6Dw7t)
                       (if (null? g$l$23412$6Dw7t)
                         (reverse! g$a$23413$6Dw7t)
                         ((case-lambda
                            ((g$e$23414$6Dw7t)
                             (if (g$proc$23409$6Dw7t g$e$23414$6Dw7t)
                               (g$f$23411$6Dw7t
                                 (cdr g$l$23412$6Dw7t)
                                 g$a$23413$6Dw7t)
                               (g$f$23411$6Dw7t
                                 (cdr g$l$23412$6Dw7t)
                                 (cons
                                   g$e$23414$6Dw7t
                                   g$a$23413$6Dw7t)))))
                          (car g$l$23412$6Dw7t)))))))
           g$f$23411$6Dw7t)
         g$l$23410$6Dw7t
         '()))))
   (g$filter$23359$6Dw7t
     g$filter$23564$6Dw7t
     (case-lambda
       ((g$proc$23415$6Dw7t g$l$23416$6Dw7t)
        ((letrec ((g$f$23417$6Dw7t
                    (case-lambda
                      ((g$l$23418$6Dw7t g$a$23419$6Dw7t)
                       (if (null? g$l$23418$6Dw7t)
                         (reverse! g$a$23419$6Dw7t)
                         ((case-lambda
                            ((g$e$23420$6Dw7t)
                             (if (g$proc$23415$6Dw7t g$e$23420$6Dw7t)
                               (g$f$23417$6Dw7t
                                 (cdr g$l$23418$6Dw7t)
                                 (cons g$e$23420$6Dw7t g$a$23419$6Dw7t))
                               (g$f$23417$6Dw7t
                                 (cdr g$l$23418$6Dw7t)
                                 g$a$23419$6Dw7t))))
                          (car g$l$23418$6Dw7t)))))))
           g$f$23417$6Dw7t)
         g$l$23416$6Dw7t
         '()))))
   (g$assq$23360$6Dw7t
     g$assq$23565$6Dw7t
     (case-lambda
       ((g$obj$23421$6Dw7t g$lst$23422$6Dw7t)
        (if (null? g$lst$23422$6Dw7t)
          '#f
          ((case-lambda
             ((g$obj$23423$6Dw7t g$t$23424$6Dw7t g$r$23425$6Dw7t)
              (if (eq? g$obj$23423$6Dw7t (car g$t$23424$6Dw7t))
                g$t$23424$6Dw7t
                (g$assq$23360$6Dw7t
                  g$obj$23423$6Dw7t
                  g$r$23425$6Dw7t))))
           g$obj$23421$6Dw7t
           (car g$lst$23422$6Dw7t)
           (cdr g$lst$23422$6Dw7t))))))
   (g$assv$23361$6Dw7t
     g$assv$23566$6Dw7t
     (case-lambda
       ((g$obj$23426$6Dw7t g$lst$23427$6Dw7t)
        (if (null? g$lst$23427$6Dw7t)
          '#f
          ((case-lambda
             ((g$obj$23428$6Dw7t g$t$23429$6Dw7t g$r$23430$6Dw7t)
              (if (eqv? g$obj$23428$6Dw7t (car g$t$23429$6Dw7t))
                g$t$23429$6Dw7t
                (g$assv$23361$6Dw7t
                  g$obj$23428$6Dw7t
                  g$r$23430$6Dw7t))))
           g$obj$23426$6Dw7t
           (car g$lst$23427$6Dw7t)
           (cdr g$lst$23427$6Dw7t))))))
   (g$assoc$23362$6Dw7t
     g$assoc$23567$6Dw7t
     (case-lambda
       ((g$obj$23431$6Dw7t g$lst$23432$6Dw7t)
        (if (null? g$lst$23432$6Dw7t)
          '#f
          ((case-lambda
             ((g$obj$23433$6Dw7t g$t$23434$6Dw7t g$r$23435$6Dw7t)
              (if (g$equal?$27474$6Dw7t
                    g$obj$23433$6Dw7t
                    (car g$t$23434$6Dw7t))
                g$t$23434$6Dw7t
                (g$assoc$23362$6Dw7t
                  g$obj$23433$6Dw7t
                  g$r$23435$6Dw7t))))
           g$obj$23431$6Dw7t
           (car g$lst$23432$6Dw7t)
           (cdr g$lst$23432$6Dw7t))))))
   (g$assp$23363$6Dw7t
     g$assp$23568$6Dw7t
     (case-lambda
       ((g$p?$23436$6Dw7t g$lst$23437$6Dw7t)
        (if (null? g$lst$23437$6Dw7t)
          '#f
          ((case-lambda
             ((g$p?$23438$6Dw7t g$t$23439$6Dw7t g$r$23440$6Dw7t)
              (if (g$p?$23438$6Dw7t (car g$t$23439$6Dw7t))
                g$t$23439$6Dw7t
                (g$assp$23363$6Dw7t g$p?$23438$6Dw7t g$r$23440$6Dw7t))))
           g$p?$23436$6Dw7t
           (car g$lst$23437$6Dw7t)
           (cdr g$lst$23437$6Dw7t))))))
   (g$memq$23364$6Dw7t
     g$memq$23569$6Dw7t
     (case-lambda
       ((g$obj$23441$6Dw7t g$lst$23442$6Dw7t)
        (if (null? g$lst$23442$6Dw7t)
          '#f
          (if (eq? g$obj$23441$6Dw7t (car g$lst$23442$6Dw7t))
            g$lst$23442$6Dw7t
            (g$memq$23364$6Dw7t
              g$obj$23441$6Dw7t
              (cdr g$lst$23442$6Dw7t)))))))
   (g$memv$23365$6Dw7t
     g$memv$23570$6Dw7t
     (case-lambda
       ((g$obj$23443$6Dw7t g$lst$23444$6Dw7t)
        (if (null? g$lst$23444$6Dw7t)
          '#f
          (if (eqv? g$obj$23443$6Dw7t (car g$lst$23444$6Dw7t))
            g$lst$23444$6Dw7t
            (g$memv$23365$6Dw7t
              g$obj$23443$6Dw7t
              (cdr g$lst$23444$6Dw7t)))))))
   (g$member$23366$6Dw7t
     g$member$23571$6Dw7t
     (case-lambda
       ((g$obj$23445$6Dw7t g$lst$23446$6Dw7t)
        (if (null? g$lst$23446$6Dw7t)
          '#f
          (if (g$equal?$27474$6Dw7t
                g$obj$23445$6Dw7t
                (car g$lst$23446$6Dw7t))
            g$lst$23446$6Dw7t
            (g$member$23366$6Dw7t
              g$obj$23445$6Dw7t
              (cdr g$lst$23446$6Dw7t)))))))
   (g$memp$23367$6Dw7t
     g$memp$23572$6Dw7t
     (case-lambda
       ((g$p?$23447$6Dw7t g$lst$23448$6Dw7t)
        (if (null? g$lst$23448$6Dw7t)
          '#f
          (if (g$p?$23447$6Dw7t (car g$lst$23448$6Dw7t))
            g$lst$23448$6Dw7t
            (g$memp$23367$6Dw7t
              g$p?$23447$6Dw7t
              (cdr g$lst$23448$6Dw7t)))))))
   (g$all-empty?$23368$6Dw7t
     g$all-empty?$23573$6Dw7t
     (case-lambda
       ((g$ls$23449$6Dw7t)
        ((case-lambda
           ((g$t$23450$6Dw7t)
            (if g$t$23450$6Dw7t
              g$t$23450$6Dw7t
              (begin
                '#f
                (if (null? (car g$ls$23449$6Dw7t))
                  (begin
                    '#f
                    (g$all-empty?$23368$6Dw7t (cdr g$ls$23449$6Dw7t)))
                  '#f)))))
         (null? g$ls$23449$6Dw7t)))))
   (g$split$23369$6Dw7t
     g$split$23574$6Dw7t
     (case-lambda
       ((g$ls$23451$6Dw7t)
        (if (null? g$ls$23451$6Dw7t)
          (values '() '())
          ((case-lambda
             (()
              (begin
                '#f
                (call-with-values
                  (case-lambda
                    (() (g$split$23369$6Dw7t (cdr g$ls$23451$6Dw7t))))
                  (case-lambda
                    ((g$cars$23452$6Dw7t g$cdrs$23453$6Dw7t)
                     ((case-lambda
                        ((g$a$23454$6Dw7t)
                         (values
                           (cons
                             (car g$a$23454$6Dw7t)
                             g$cars$23452$6Dw7t)
                           (cons
                             (cdr g$a$23454$6Dw7t)
                             g$cdrs$23453$6Dw7t))))
                      (car g$ls$23451$6Dw7t)))))))))))))
   (g$list/check?$23370$6Dw7t
     g$list/check?$23575$6Dw7t
     (case-lambda
       ((g$head$23455$6Dw7t g$tail$23456$6Dw7t)
        (if (pair? g$head$23455$6Dw7t)
          ((case-lambda
             ((g$head$23457$6Dw7t)
              (if (pair? g$head$23457$6Dw7t)
                (if (not (eq? g$head$23457$6Dw7t g$tail$23456$6Dw7t))
                  (begin
                    '#f
                    (g$list/check?$23370$6Dw7t
                      ($cdr g$head$23457$6Dw7t)
                      ($cdr g$tail$23456$6Dw7t)))
                  '#f)
                (null? g$head$23457$6Dw7t))))
           ($cdr g$head$23455$6Dw7t))
          (null? g$head$23455$6Dw7t)))))
   (g$list?$23371$6Dw7t
     g$list?$23576$6Dw7t
     (case-lambda
       ((g$obj$23458$6Dw7t)
        (g$list/check?$23370$6Dw7t
          g$obj$23458$6Dw7t
          g$obj$23458$6Dw7t))))
   (g$length/check$23372$6Dw7t
     g$length/check$23577$6Dw7t
     (case-lambda
       ((g$head$23459$6Dw7t g$tail$23460$6Dw7t g$i$23461$6Dw7t)
        (if (pair? g$head$23459$6Dw7t)
          ((case-lambda
             ((g$head$23462$6Dw7t)
              (if (pair? g$head$23462$6Dw7t)
                (if (not (eq? g$head$23462$6Dw7t g$tail$23460$6Dw7t))
                  (g$length/check$23372$6Dw7t
                    ($cdr g$head$23462$6Dw7t)
                    ($cdr g$tail$23460$6Dw7t)
                    ($$fx+ g$i$23461$6Dw7t '2))
                  (g$assertion-violation$20490$6Dw7t
                    'length
                    '"not a proper list"))
                (if (null? g$head$23462$6Dw7t)
                  ($$fx+ g$i$23461$6Dw7t '1)
                  (g$assertion-violation$20490$6Dw7t
                    'length
                    '"not a proper list")))))
           ($cdr g$head$23459$6Dw7t))
          (if (null? g$head$23459$6Dw7t)
            g$i$23461$6Dw7t
            (g$assertion-violation$20490$6Dw7t
              'length
              '"not a proper list"))))))
   (g$length$23373$6Dw7t
     g$length$23578$6Dw7t
     (case-lambda
       ((g$lst$23463$6Dw7t)
        (g$length/check$23372$6Dw7t
          g$lst$23463$6Dw7t
          g$lst$23463$6Dw7t
          '0))))
   (g$for-all$23374$6Dw7t
     g$for-all$23579$6Dw7t
     (case-lambda
       ((g$f$23464$6Dw7t g$arg1$23465$6Dw7t)
        (if (null? g$arg1$23465$6Dw7t)
          '#t
          (if (null? (cdr g$arg1$23465$6Dw7t))
            (g$f$23464$6Dw7t (car g$arg1$23465$6Dw7t))
            (if (g$f$23464$6Dw7t (car g$arg1$23465$6Dw7t))
              (begin
                '#f
                (g$for-all$23374$6Dw7t
                  g$f$23464$6Dw7t
                  (cdr g$arg1$23465$6Dw7t)))
              '#f))))
       ((g$f$23466$6Dw7t g$arg1$23467$6Dw7t . g$args$23468$6Dw7t)
        ((case-lambda
           ((g$args$23469$6Dw7t)
            (if (g$all-empty?$23368$6Dw7t g$args$23469$6Dw7t)
              '#t
              (call-with-values
                (case-lambda
                  (() (g$split$23369$6Dw7t g$args$23469$6Dw7t)))
                (case-lambda
                  ((g$cars$23470$6Dw7t g$cdrs$23471$6Dw7t)
                   (if (g$all-empty?$23368$6Dw7t g$cdrs$23471$6Dw7t)
                     (apply g$f$23466$6Dw7t g$cars$23470$6Dw7t)
                     (if (apply g$f$23466$6Dw7t g$cars$23470$6Dw7t)
                       (begin
                         '#f
                         (apply
                           g$for-all$23374$6Dw7t
                           g$f$23466$6Dw7t
                           g$cdrs$23471$6Dw7t))
                       '#f))))))))
         (cons g$arg1$23467$6Dw7t g$args$23468$6Dw7t)))))
   (g$exists$23375$6Dw7t
     g$exists$23580$6Dw7t
     (case-lambda
       ((g$f$23472$6Dw7t g$arg1$23473$6Dw7t)
        (if (null? g$arg1$23473$6Dw7t)
          '#f
          ((case-lambda
             ((g$t$23474$6Dw7t)
              (if g$t$23474$6Dw7t
                g$t$23474$6Dw7t
                (begin
                  '#f
                  (g$exists$23375$6Dw7t
                    g$f$23472$6Dw7t
                    (cdr g$arg1$23473$6Dw7t))))))
           (g$f$23472$6Dw7t (car g$arg1$23473$6Dw7t)))))
       ((g$f$23475$6Dw7t g$arg1$23476$6Dw7t . g$args$23477$6Dw7t)
        ((case-lambda
           ((g$args$23478$6Dw7t)
            (if (g$all-empty?$23368$6Dw7t g$args$23478$6Dw7t)
              '#f
              (call-with-values
                (case-lambda
                  (() (g$split$23369$6Dw7t g$args$23478$6Dw7t)))
                (case-lambda
                  ((g$cars$23479$6Dw7t g$cdrs$23480$6Dw7t)
                   ((case-lambda
                      ((g$t$23481$6Dw7t)
                       (if g$t$23481$6Dw7t
                         g$t$23481$6Dw7t
                         (begin
                           '#f
                           (apply
                             g$exists$23375$6Dw7t
                             g$f$23475$6Dw7t
                             g$cdrs$23480$6Dw7t)))))
                    (apply g$f$23475$6Dw7t g$cars$23479$6Dw7t))))))))
         (cons g$arg1$23476$6Dw7t g$args$23477$6Dw7t)))))
   (g$map$23376$6Dw7t
     g$map$23581$6Dw7t
     (case-lambda
       ((g$proc$23482$6Dw7t g$list1$23483$6Dw7t)
        ((letrec ((g$f$23484$6Dw7t
                    (case-lambda
                      ((g$lst$23485$6Dw7t g$a$23486$6Dw7t)
                       (if (null? g$lst$23485$6Dw7t)
                         (reverse! g$a$23486$6Dw7t)
                         (g$f$23484$6Dw7t
                           (cdr g$lst$23485$6Dw7t)
                           (cons
                             (g$proc$23482$6Dw7t
                               (car g$lst$23485$6Dw7t))
                             g$a$23486$6Dw7t)))))))
           g$f$23484$6Dw7t)
         g$list1$23483$6Dw7t
         '()))
       ((g$proc$23487$6Dw7t g$list1$23488$6Dw7t . g$lists$23489$6Dw7t)
        ((letrec ((g$f$23490$6Dw7t
                    (case-lambda
                      ((g$lists$23491$6Dw7t g$a$23492$6Dw7t)
                       (if (g$all-empty?$23368$6Dw7t
                             g$lists$23491$6Dw7t)
                         (reverse! g$a$23492$6Dw7t)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$split$23369$6Dw7t
                                g$lists$23491$6Dw7t)))
                           (case-lambda
                             ((g$cars$23493$6Dw7t g$cdrs$23494$6Dw7t)
                              (g$f$23490$6Dw7t
                                g$cdrs$23494$6Dw7t
                                (cons
                                  (apply
                                    g$proc$23487$6Dw7t
                                    g$cars$23493$6Dw7t)
                                  g$a$23492$6Dw7t))))))))))
           g$f$23490$6Dw7t)
         (cons g$list1$23488$6Dw7t g$lists$23489$6Dw7t)
         '()))))
   (g$for-each$23377$6Dw7t
     g$for-each$23582$6Dw7t
     (case-lambda
       ((g$f$23495$6Dw7t g$arg1$23496$6Dw7t)
        (if (not (null? g$arg1$23496$6Dw7t))
          (begin
            (g$f$23495$6Dw7t (car g$arg1$23496$6Dw7t))
            (g$for-each$23377$6Dw7t
              g$f$23495$6Dw7t
              (cdr g$arg1$23496$6Dw7t)))
          (void)))
       ((g$f$23497$6Dw7t g$arg1$23498$6Dw7t . g$args$23499$6Dw7t)
        ((case-lambda
           ((g$args$23500$6Dw7t)
            (if (not (g$all-empty?$23368$6Dw7t g$args$23500$6Dw7t))
              (call-with-values
                (case-lambda
                  (() (g$split$23369$6Dw7t g$args$23500$6Dw7t)))
                (case-lambda
                  ((g$cars$23501$6Dw7t g$cdrs$23502$6Dw7t)
                   (begin
                     (apply g$f$23497$6Dw7t g$cars$23501$6Dw7t)
                     (apply
                       g$for-each$23377$6Dw7t
                       g$f$23497$6Dw7t
                       g$cdrs$23502$6Dw7t)))))
              (void))))
         (cons g$arg1$23498$6Dw7t g$args$23499$6Dw7t)))))
   (g$cons*$23378$6Dw7t
     g$cons*$23583$6Dw7t
     (case-lambda
       ((g$a$23503$6Dw7t . g$rest$23504$6Dw7t)
        ((letrec ((g$f$23505$6Dw7t
                    (case-lambda
                      ((g$a$23506$6Dw7t g$rest$23507$6Dw7t)
                       (if (null? g$rest$23507$6Dw7t)
                         g$a$23506$6Dw7t
                         (cons
                           g$a$23506$6Dw7t
                           (g$f$23505$6Dw7t
                             (car g$rest$23507$6Dw7t)
                             (cdr g$rest$23507$6Dw7t))))))))
           g$f$23505$6Dw7t)
         g$a$23503$6Dw7t
         g$rest$23504$6Dw7t))))
   (g$list-copy$23379$6Dw7t
     g$list-copy$23584$6Dw7t
     (case-lambda
       ((g$lst$23508$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.Cons
          'FromList
          '()
          g$lst$23508$6Dw7t))))
   (g$append-fast!$23380$6Dw7t
     g$append-fast!$23585$6Dw7t
     (case-lambda
       ((g$a$23509$6Dw7t g$b$23510$6Dw7t)
        ((case-lambda
           ((g$c$23511$6Dw7t)
            (if (null? g$c$23511$6Dw7t)
              (clr-field-set!-internal
                'IronScheme.Runtime.Cons
                'cdr
                g$a$23509$6Dw7t
                g$b$23510$6Dw7t)
              (g$append-fast!$23380$6Dw7t
                g$c$23511$6Dw7t
                g$b$23510$6Dw7t))))
         ($cdr g$a$23509$6Dw7t)))))
   (g$append!$23381$6Dw7t
     g$append!$23586$6Dw7t
     (case-lambda
       ((g$a$23512$6Dw7t g$b$23513$6Dw7t)
        (if (null? g$a$23512$6Dw7t)
          g$b$23513$6Dw7t
          (if (null? g$b$23513$6Dw7t)
            g$a$23512$6Dw7t
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$append-fast!$23380$6Dw7t
                    g$a$23512$6Dw7t
                    g$b$23513$6Dw7t)
                  g$a$23512$6Dw7t)))))))))
   (g$append$23382$6Dw7t
     g$append$23587$6Dw7t
     (case-lambda
       (() '())
       ((g$obj$23514$6Dw7t) g$obj$23514$6Dw7t)
       ((g$obj1$23515$6Dw7t g$obj2$23516$6Dw7t)
        (begin
          (if (not (g$list?$23371$6Dw7t g$obj1$23515$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'append
              '"not a list"
              g$obj1$23515$6Dw7t)
            (void))
          (g$append!$23381$6Dw7t
            (g$list-copy$23379$6Dw7t g$obj1$23515$6Dw7t)
            g$obj2$23516$6Dw7t)))
       ((g$obj$23517$6Dw7t g$i1$23518$6Dw7t . g$il$23519$6Dw7t)
        (begin
          (if (not (g$list?$23371$6Dw7t g$obj$23517$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'append
              '"not a list"
              g$obj$23517$6Dw7t)
            (void))
          (if (null? g$i1$23518$6Dw7t)
            (if (null? g$il$23519$6Dw7t)
              (g$list-copy$23379$6Dw7t g$obj$23517$6Dw7t)
              (apply
                g$append$23382$6Dw7t
                (cons g$obj$23517$6Dw7t g$il$23519$6Dw7t)))
            (if (pair? g$i1$23518$6Dw7t)
              (if (null? g$il$23519$6Dw7t)
                (g$append!$23381$6Dw7t
                  (g$list-copy$23379$6Dw7t g$obj$23517$6Dw7t)
                  g$i1$23518$6Dw7t)
                (g$append!$23381$6Dw7t
                  (g$list-copy$23379$6Dw7t g$obj$23517$6Dw7t)
                  (apply
                    g$append$23382$6Dw7t
                    (cons g$i1$23518$6Dw7t g$il$23519$6Dw7t))))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$append!$23381$6Dw7t
                      (g$list-copy$23379$6Dw7t g$obj$23517$6Dw7t)
                      g$i1$23518$6Dw7t)))))))))))
   (g$fold-left$23383$6Dw7t
     g$fold-left$23588$6Dw7t
     (case-lambda
       ((g$combine$23540$6Dw7t
          g$nil$23541$6Dw7t
          g$list1$23542$6Dw7t
          .
          g$lists$23543$6Dw7t)
        (if (null? g$list1$23542$6Dw7t)
          g$nil$23541$6Dw7t
          (if (null? g$lists$23543$6Dw7t)
            (g$fold-left$23383$6Dw7t
              g$combine$23540$6Dw7t
              (g$combine$23540$6Dw7t
                g$nil$23541$6Dw7t
                (car g$list1$23542$6Dw7t))
              (cdr g$list1$23542$6Dw7t))
            ((case-lambda
               (()
                (begin
                  '#f
                  (apply
                    g$fold-left$23383$6Dw7t
                    (g$cons*$23378$6Dw7t
                      g$combine$23540$6Dw7t
                      (apply
                        g$combine$23540$6Dw7t
                        (g$cons*$23378$6Dw7t
                          g$nil$23541$6Dw7t
                          (car g$list1$23542$6Dw7t)
                          (g$map$23376$6Dw7t car g$lists$23543$6Dw7t)))
                      (cdr g$list1$23542$6Dw7t)
                      (g$map$23376$6Dw7t
                        cdr
                        g$lists$23543$6Dw7t))))))))))))
   (g$fold-right$23384$6Dw7t
     g$fold-right$23589$6Dw7t
     (case-lambda
       ((g$combine$23544$6Dw7t
          g$nil$23545$6Dw7t
          g$list1$23546$6Dw7t
          .
          g$lists$23547$6Dw7t)
        (if (null? g$list1$23546$6Dw7t)
          g$nil$23545$6Dw7t
          (if (null? g$lists$23547$6Dw7t)
            (g$combine$23544$6Dw7t
              (car g$list1$23546$6Dw7t)
              (g$fold-right$23384$6Dw7t
                g$combine$23544$6Dw7t
                g$nil$23545$6Dw7t
                (cdr g$list1$23546$6Dw7t)))
            ((case-lambda
               (()
                (begin
                  '#f
                  (apply
                    g$combine$23544$6Dw7t
                    (g$append$23382$6Dw7t
                      (list (car g$list1$23546$6Dw7t))
                      (g$map$23376$6Dw7t car g$lists$23547$6Dw7t)
                      (list
                        (apply
                          g$fold-right$23384$6Dw7t
                          (g$cons*$23378$6Dw7t
                            g$combine$23544$6Dw7t
                            g$nil$23545$6Dw7t
                            (cdr g$list1$23546$6Dw7t)
                            (g$map$23376$6Dw7t
                              cdr
                              g$lists$23547$6Dw7t)))))))))))))))
   (g$remove$23385$6Dw7t
     g$remove$23590$6Dw7t
     (case-lambda
       ((g$obj$23548$6Dw7t g$list$23549$6Dw7t)
        (g$remp$23358$6Dw7t
          (case-lambda
            ((g$x$23550$6Dw7t)
             (g$equal?$27474$6Dw7t g$obj$23548$6Dw7t g$x$23550$6Dw7t)))
          g$list$23549$6Dw7t))))
   (g$remv$23386$6Dw7t
     g$remv$23591$6Dw7t
     (case-lambda
       ((g$obj$23551$6Dw7t g$list$23552$6Dw7t)
        (g$remp$23358$6Dw7t
          (case-lambda
            ((g$x$23553$6Dw7t)
             (eqv? g$obj$23551$6Dw7t g$x$23553$6Dw7t)))
          g$list$23552$6Dw7t))))
   (g$remq$23387$6Dw7t
     g$remq$23592$6Dw7t
     (case-lambda
       ((g$obj$23554$6Dw7t g$list$23555$6Dw7t)
        (g$remp$23358$6Dw7t
          (case-lambda
            ((g$x$23556$6Dw7t) (eq? g$obj$23554$6Dw7t g$x$23556$6Dw7t)))
          g$list$23555$6Dw7t)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$clr-string?$23593$6Dw7t
     g$clr-string?$24001$6Dw7t
     (case-lambda
       ((g$obj$23769$6Dw7t)
        (clr-is-internal 'System.String g$obj$23769$6Dw7t))))
   (g$stringbuilder?$23594$6Dw7t
     g$stringbuilder?$24002$6Dw7t
     (case-lambda
       ((g$obj$23770$6Dw7t)
        (clr-is-internal
          'System.Text.StringBuilder
          g$obj$23770$6Dw7t))))
   (g$string?$23595$6Dw7t
     g$string?$24003$6Dw7t
     (case-lambda
       ((g$obj$23771$6Dw7t)
        ((case-lambda
           ((g$t$23772$6Dw7t)
            (if g$t$23772$6Dw7t
              g$t$23772$6Dw7t
              (begin
                '#f
                (g$stringbuilder?$23594$6Dw7t g$obj$23771$6Dw7t)))))
         (g$clr-string?$23593$6Dw7t g$obj$23771$6Dw7t)))))
   (g$char?$23596$6Dw7t
     g$char?$24004$6Dw7t
     (case-lambda
       ((g$obj$23773$6Dw7t)
        (clr-is-internal 'system.char g$obj$23773$6Dw7t))))
   (g$vector?$23597$6Dw7t
     g$vector?$24005$6Dw7t
     (case-lambda
       ((g$obj$23774$6Dw7t)
        (clr-is-internal 'system.object[] g$obj$23774$6Dw7t))))
   (g$bytevector?$23598$6Dw7t
     g$bytevector?$24006$6Dw7t
     (case-lambda
       ((g$obj$23775$6Dw7t)
        (clr-is-internal 'system.byte[] g$obj$23775$6Dw7t))))
   (g$symbol?$23599$6Dw7t
     g$symbol?$24007$6Dw7t
     (case-lambda
       ((g$obj$23776$6Dw7t)
        (clr-is-internal
          'microsoft.scripting.symbolid
          g$obj$23776$6Dw7t))))
   (g$boolean?$23600$6Dw7t
     g$boolean?$24008$6Dw7t
     (case-lambda
       ((g$obj$23777$6Dw7t)
        (clr-is-internal 'system.boolean g$obj$23777$6Dw7t))))
   (g$procedure?$23601$6Dw7t
     g$procedure?$24009$6Dw7t
     (case-lambda
       ((g$obj$23778$6Dw7t)
        (clr-is-internal
          'ironscheme.runtime.icallable
          g$obj$23778$6Dw7t))))
   (g$fixnum?$23602$6Dw7t
     g$fixnum?$24010$6Dw7t
     (case-lambda
       ((g$obj$23779$6Dw7t)
        (clr-is-internal 'system.int32 g$obj$23779$6Dw7t))))
   (g$flonum?$23603$6Dw7t
     g$flonum?$24011$6Dw7t
     (case-lambda
       ((g$obj$23780$6Dw7t)
        (clr-is-internal 'system.double g$obj$23780$6Dw7t))))
   (g$fixnum-width$23604$6Dw7t
     g$fixnum-width$24012$6Dw7t
     (case-lambda (() '32)))
   (g$char->integer$23605$6Dw7t
     g$char->integer$24013$6Dw7t
     (case-lambda
       ((g$chr$23781$6Dw7t)
        (begin
          (if (not (g$char?$23596$6Dw7t g$chr$23781$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char->integer
              '"not a character"
              g$chr$23781$6Dw7t)
            (void))
          (clr-cast-internal
            'System.Int32
            (clr-cast-internal 'System.Char g$chr$23781$6Dw7t))))))
   (g$integer->char$23606$6Dw7t
     g$integer->char$24014$6Dw7t
     (case-lambda
       ((g$num$23782$6Dw7t)
        (begin
          (if (not (g$fixnum?$23602$6Dw7t g$num$23782$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'integer->char
              '"not a integer"
              g$num$23782$6Dw7t)
            (void))
          (if ((case-lambda
                 ((g$t$23783$6Dw7t)
                  (if g$t$23783$6Dw7t
                    g$t$23783$6Dw7t
                    ((case-lambda
                       ((g$t$23784$6Dw7t)
                        (if g$t$23784$6Dw7t
                          g$t$23784$6Dw7t
                          (begin
                            '#f
                            (if (g$fx>?$23310$6Dw7t
                                  g$num$23782$6Dw7t
                                  '55295)
                              (begin
                                '#f
                                (g$fx<?$23308$6Dw7t
                                  g$num$23782$6Dw7t
                                  '57344))
                              '#f)))))
                     (g$fx>?$23310$6Dw7t g$num$23782$6Dw7t '1114111)))))
               (g$fxnegative?$23328$6Dw7t g$num$23782$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'integer->char
              '"not a valid unicode value"
              g$num$23782$6Dw7t)
            (void))
          (g$string-ref$23608$6Dw7t
            (clr-call-internal
              'System.Char
              'ConvertFromUtf32
              '()
              g$num$23782$6Dw7t)
            '0)))))
   (g$make-string$23607$6Dw7t
     g$make-string$24015$6Dw7t
     (case-lambda
       ((g$k$23785$6Dw7t)
        (g$make-string$23607$6Dw7t g$k$23785$6Dw7t '#\nul))
       ((g$k$23786$6Dw7t g$fill$23787$6Dw7t)
        (begin
          (if (not (g$fixnum?$23602$6Dw7t g$k$23786$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-string
              '"not a fixnum"
              g$k$23786$6Dw7t)
            (void))
          (if (g$negative?$25062$6Dw7t g$k$23786$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'make-string
              '"cannot be negative"
              g$k$23786$6Dw7t)
            (void))
          (if (not (g$char?$23596$6Dw7t g$fill$23787$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-string
              '"not a character"
              g$fill$23787$6Dw7t)
            (void))
          ((case-lambda
             ((g$str$23788$6Dw7t)
              ((letrec ((g$f$23789$6Dw7t
                          (case-lambda
                            ((g$i$23790$6Dw7t)
                             (if (g$fx=?$23307$6Dw7t
                                   g$i$23790$6Dw7t
                                   g$k$23786$6Dw7t)
                               g$str$23788$6Dw7t
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$23788$6Dw7t
                                   g$fill$23787$6Dw7t)
                                 (g$f$23789$6Dw7t
                                   (g$fx+$23294$6Dw7t
                                     g$i$23790$6Dw7t
                                     '1))))))))
                 g$f$23789$6Dw7t)
               '0)))
           (clr-new-internal
             'System.Text.StringBuilder
             (clr-cast-internal 'System.Int32 g$k$23786$6Dw7t)))))))
   (g$string-ref$23608$6Dw7t
     g$string-ref$24016$6Dw7t
     (case-lambda
       ((g$str$23791$6Dw7t g$k$23792$6Dw7t)
        (begin
          (if (not (if (g$fixnum?$23602$6Dw7t g$k$23792$6Dw7t)
                     (begin
                       '#f
                       (g$fx>=?$23311$6Dw7t g$k$23792$6Dw7t '0))
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'string-ref
              '"not a non-negative integer"
              g$k$23792$6Dw7t)
            (void))
          (if (g$clr-string?$23593$6Dw7t g$str$23791$6Dw7t)
            (clr-call-internal
              'System.String
              'get_Chars
              g$str$23791$6Dw7t
              g$k$23792$6Dw7t)
            (if (g$stringbuilder?$23594$6Dw7t g$str$23791$6Dw7t)
              (clr-call-internal
                'System.Text.StringBuilder
                'get_Chars
                g$str$23791$6Dw7t
                g$k$23792$6Dw7t)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'string-set!
                      '"not a string"
                      g$str$23791$6Dw7t)))))))))))
   (g$string-set!$23609$6Dw7t
     g$string-set!$24017$6Dw7t
     (case-lambda
       ((g$str$23793$6Dw7t g$k$23794$6Dw7t g$val$23795$6Dw7t)
        (begin
          (if (not (g$stringbuilder?$23594$6Dw7t g$str$23793$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-set!
              '"not a mutable string"
              g$str$23793$6Dw7t)
            (void))
          (if (not (if (g$fixnum?$23602$6Dw7t g$k$23794$6Dw7t)
                     (begin
                       '#f
                       (g$fx>=?$23311$6Dw7t g$k$23794$6Dw7t '0))
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'string-set!
              '"not a non-negative integer"
              g$k$23794$6Dw7t)
            (void))
          (clr-call-internal
            'System.Text.StringBuilder
            'set_Chars
            g$str$23793$6Dw7t
            g$k$23794$6Dw7t
            g$val$23795$6Dw7t)))))
   (g$string-fill!$23610$6Dw7t
     g$string-fill!$24018$6Dw7t
     (case-lambda
       ((g$str$23796$6Dw7t g$k$23797$6Dw7t g$fill$23798$6Dw7t)
        (begin
          (if (not (g$stringbuilder?$23594$6Dw7t g$str$23796$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-fill!
              '"not a mutable string"
              g$str$23796$6Dw7t)
            (void))
          (if (not (if (g$fixnum?$23602$6Dw7t g$k$23797$6Dw7t)
                     (begin
                       '#f
                       (g$fx>=?$23311$6Dw7t g$k$23797$6Dw7t '0))
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'string-fill!
              '"not a non-negative integer"
              g$k$23797$6Dw7t)
            (void))
          (if (not (g$char?$23596$6Dw7t g$fill$23798$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-fill!
              '"not a character"
              g$fill$23798$6Dw7t)
            (void))
          ((letrec ((g$f$23799$6Dw7t
                      (case-lambda
                        ((g$i$23800$6Dw7t)
                         (if (not (g$fx=?$23307$6Dw7t
                                    g$i$23800$6Dw7t
                                    g$k$23797$6Dw7t))
                           (begin
                             (clr-call-internal
                               'System.Text.StringBuilder
                               'set_Chars
                               g$str$23796$6Dw7t
                               g$i$23800$6Dw7t
                               g$fill$23798$6Dw7t)
                             (g$f$23799$6Dw7t
                               (g$fx+$23294$6Dw7t g$i$23800$6Dw7t '1)))
                           (void))))))
             g$f$23799$6Dw7t)
           '0)))))
   (g$string-length$23611$6Dw7t
     g$string-length$24019$6Dw7t
     (case-lambda
       ((g$str$23801$6Dw7t)
        (if (g$clr-string?$23593$6Dw7t g$str$23801$6Dw7t)
          (clr-call-internal
            'System.String
            'get_Length
            g$str$23801$6Dw7t)
          (if (g$stringbuilder?$23594$6Dw7t g$str$23801$6Dw7t)
            (clr-call-internal
              'System.Text.StringBuilder
              'get_Length
              g$str$23801$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'string-length
                    '"not a string"
                    g$str$23801$6Dw7t))))))))))
   (g$->string$23612$6Dw7t
     g$->string$24020$6Dw7t
     (case-lambda
       ((g$str$23802$6Dw7t)
        (if (g$clr-string?$23593$6Dw7t g$str$23802$6Dw7t)
          g$str$23802$6Dw7t
          (clr-call-internal 'Object 'ToString g$str$23802$6Dw7t)))))
   (g$string$23613$6Dw7t
     g$string$24021$6Dw7t
     (case-lambda
       (g$args$23803$6Dw7t
        (begin
          (if (not (g$for-all$23579$6Dw7t
                     g$char?$23596$6Dw7t
                     g$args$23803$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string
              '"not all char"
              g$args$23803$6Dw7t)
            (void))
          ((case-lambda
             ((g$str$23804$6Dw7t)
              ((letrec ((g$f$23805$6Dw7t
                          (case-lambda
                            ((g$args$23806$6Dw7t)
                             (if (null? g$args$23806$6Dw7t)
                               g$str$23804$6Dw7t
                               (begin
                                 (clr-call-internal
                                   'System.Text.StringBuilder
                                   '"Append(Char)"
                                   g$str$23804$6Dw7t
                                   (car g$args$23806$6Dw7t))
                                 (g$f$23805$6Dw7t
                                   (cdr g$args$23806$6Dw7t))))))))
                 g$f$23805$6Dw7t)
               g$args$23803$6Dw7t)))
           (clr-new-internal 'System.Text.StringBuilder))))))
   (g$string->list$23614$6Dw7t
     g$string->list$24022$6Dw7t
     (case-lambda
       ((g$str$23807$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$str$23807$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string->list
              '"not a string"
              g$str$23807$6Dw7t)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            (g$->string$23612$6Dw7t g$str$23807$6Dw7t))))))
   (g$string-copy$23615$6Dw7t
     g$string-copy$24023$6Dw7t
     (case-lambda
       ((g$str$23808$6Dw7t)
        (if (g$clr-string?$23593$6Dw7t g$str$23808$6Dw7t)
          (clr-call-internal 'System.String 'Copy '() g$str$23808$6Dw7t)
          (if (g$stringbuilder?$23594$6Dw7t g$str$23808$6Dw7t)
            (clr-call-internal
              'System.Text.StringBuilder
              'ToString
              g$str$23808$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'string-copy
                    '"not a string"
                    g$str$23808$6Dw7t))))))))))
   (g$substring$23616$6Dw7t
     g$substring$24024$6Dw7t
     (case-lambda
       ((g$str$23809$6Dw7t g$start$23810$6Dw7t g$end$23811$6Dw7t)
        (begin
          (if (not (if (g$fixnum?$23602$6Dw7t g$start$23810$6Dw7t)
                     (begin
                       '#f
                       (g$fx>=?$23311$6Dw7t g$start$23810$6Dw7t '0))
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'substring
              '"not a non-negative integer"
              g$start$23810$6Dw7t)
            (void))
          (if (not (if (g$fixnum?$23602$6Dw7t g$end$23811$6Dw7t)
                     (begin
                       '#f
                       (g$fx>=?$23311$6Dw7t g$end$23811$6Dw7t '0))
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'substring
              '"not a non-negative integer"
              g$end$23811$6Dw7t)
            (void))
          (if (g$clr-string?$23593$6Dw7t g$str$23809$6Dw7t)
            (clr-call-internal
              'System.String
              'Substring
              g$str$23809$6Dw7t
              g$start$23810$6Dw7t
              (g$fx-$23296$6Dw7t g$end$23811$6Dw7t g$start$23810$6Dw7t))
            (if (g$stringbuilder?$23594$6Dw7t g$str$23809$6Dw7t)
              (clr-call-internal
                'System.Text.StringBuilder
                'ToString
                g$str$23809$6Dw7t
                g$start$23810$6Dw7t
                (g$fx-$23296$6Dw7t
                  g$end$23811$6Dw7t
                  g$start$23810$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'substring
                      '"not a string"
                      g$str$23809$6Dw7t)))))))))))
   (g$string-append$23617$6Dw7t
     g$string-append$24025$6Dw7t
     (case-lambda
       (g$args$23812$6Dw7t
        (begin
          (if (not (g$for-all$23579$6Dw7t
                     g$string?$23595$6Dw7t
                     g$args$23812$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-append
              '"not strings"
              g$args$23812$6Dw7t)
            (void))
          (clr-call-internal
            'System.String
            '"Concat(String[])"
            '()
            (g$list->vector$23626$6Dw7t
              (g$map$23581$6Dw7t
                g$->string$23612$6Dw7t
                g$args$23812$6Dw7t)))))))
   (g$string-format$23618$6Dw7t
     g$string-format$24026$6Dw7t
     (case-lambda
       ((g$fmt$23813$6Dw7t . g$args$23814$6Dw7t)
        (clr-call-internal
          'System.String
          '"Format(String,Object[])"
          '()
          g$fmt$23813$6Dw7t
          (g$list->vector$23626$6Dw7t g$args$23814$6Dw7t)))))
   (g$symbol->string$23619$6Dw7t
     g$symbol->string$24027$6Dw7t
     (case-lambda
       ((g$sym$23815$6Dw7t)
        (begin
          (if (not (g$symbol?$23599$6Dw7t g$sym$23815$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'symbol->string
              '"not a symbol"
              g$sym$23815$6Dw7t)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'IdToString
            '()
            g$sym$23815$6Dw7t)))))
   (g$string->symbol$23620$6Dw7t
     g$string->symbol$24028$6Dw7t
     (case-lambda
       ((g$str$23816$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$str$23816$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string->symbol
              '"not a string"
              g$str$23816$6Dw7t)
            (void))
          (clr-call-internal
            'Microsoft.Scripting.SymbolTable
            'StringToObject
            '()
            g$str$23816$6Dw7t)))))
   (g$div0$23621$6Dw7t
     g$div0$24029$6Dw7t
     (case-lambda
       ((g$x1$23817$6Dw7t g$x2$23818$6Dw7t)
        ((case-lambda
           ((g$d$23819$6Dw7t)
            ((case-lambda
               ((g$m$23820$6Dw7t)
                (if (g$<$25070$6Dw7t
                      g$m$23820$6Dw7t
                      (g$magnitude$25077$6Dw7t (/ g$x2$23818$6Dw7t '2)))
                  g$d$23819$6Dw7t
                  (if (g$positive?$25061$6Dw7t g$x2$23818$6Dw7t)
                    (+ g$d$23819$6Dw7t '1)
                    ((case-lambda
                       (() (begin '#f (- g$d$23819$6Dw7t '1)))))))))
             (- g$x1$23817$6Dw7t
                (* g$d$23819$6Dw7t g$x2$23818$6Dw7t)))))
         (g$div$25094$6Dw7t g$x1$23817$6Dw7t g$x2$23818$6Dw7t)))))
   (g$mod$23622$6Dw7t
     g$mod$24030$6Dw7t
     (case-lambda
       ((g$x1$23821$6Dw7t g$x2$23822$6Dw7t)
        (- g$x1$23821$6Dw7t
           (* (g$div$25094$6Dw7t g$x1$23821$6Dw7t g$x2$23822$6Dw7t)
              g$x2$23822$6Dw7t)))))
   (g$mod0$23623$6Dw7t
     g$mod0$24031$6Dw7t
     (case-lambda
       ((g$x1$23823$6Dw7t g$x2$23824$6Dw7t)
        (- g$x1$23823$6Dw7t
           (* (g$div0$23621$6Dw7t g$x1$23823$6Dw7t g$x2$23824$6Dw7t)
              g$x2$23824$6Dw7t)))))
   (g$div-and-mod$23624$6Dw7t
     g$div-and-mod$24032$6Dw7t
     (case-lambda
       ((g$x1$23825$6Dw7t g$x2$23826$6Dw7t)
        ((case-lambda
           ((g$d$23827$6Dw7t)
            (values
              g$d$23827$6Dw7t
              (- g$x1$23825$6Dw7t
                 (* g$d$23827$6Dw7t g$x2$23826$6Dw7t)))))
         (g$div$25094$6Dw7t g$x1$23825$6Dw7t g$x2$23826$6Dw7t)))))
   (g$div0-and-mod0$23625$6Dw7t
     g$div0-and-mod0$24033$6Dw7t
     (case-lambda
       ((g$x1$23828$6Dw7t g$x2$23829$6Dw7t)
        ((case-lambda
           ((g$d$23830$6Dw7t)
            (values
              g$d$23830$6Dw7t
              (- g$x1$23828$6Dw7t
                 (* g$d$23830$6Dw7t g$x2$23829$6Dw7t)))))
         (g$div0$23621$6Dw7t g$x1$23828$6Dw7t g$x2$23829$6Dw7t)))))
   (g$list->vector$23626$6Dw7t
     g$list->vector$24034$6Dw7t
     (case-lambda
       ((g$lst$23831$6Dw7t) (apply vector g$lst$23831$6Dw7t))))
   (g$list->string$23627$6Dw7t
     g$list->string$24035$6Dw7t
     (case-lambda
       ((g$lst$23832$6Dw7t)
        (apply g$string$23613$6Dw7t g$lst$23832$6Dw7t))))
   (g$vector-ref$23628$6Dw7t
     g$vector-ref$24036$6Dw7t
     (case-lambda
       ((g$x$23833$6Dw7t g$n$23834$6Dw7t)
        (begin
          (if (not (g$vector?$23597$6Dw7t g$x$23833$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector-ref
              '"not a vector"
              g$x$23833$6Dw7t)
            (void))
          (if (not (g$integer?$25056$6Dw7t g$n$23834$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector-ref
              '"not an integer"
              g$n$23834$6Dw7t)
            (void))
          (if (g$negative?$25062$6Dw7t g$n$23834$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'vector-ref
              '"negative index"
              g$n$23834$6Dw7t)
            (void))
          ($vector-ref g$x$23833$6Dw7t g$n$23834$6Dw7t)))))
   (g$vector-set!$23629$6Dw7t
     g$vector-set!$24037$6Dw7t
     (case-lambda
       ((g$x$23835$6Dw7t g$n$23836$6Dw7t g$value$23837$6Dw7t)
        (begin
          (if (not (g$vector?$23597$6Dw7t g$x$23835$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector-set!
              '"not a vector"
              g$x$23835$6Dw7t)
            (void))
          (if (not (g$integer?$25056$6Dw7t g$n$23836$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector-set!
              '"not an integer"
              g$n$23836$6Dw7t)
            (void))
          (if (g$negative?$25062$6Dw7t g$n$23836$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'vector-set!
              '"negative index"
              g$n$23836$6Dw7t)
            (void))
          ($vector-set!
            g$x$23835$6Dw7t
            g$n$23836$6Dw7t
            g$value$23837$6Dw7t)
          (void)))))
   (g$make-vector$23630$6Dw7t
     g$make-vector$24038$6Dw7t
     (case-lambda
       ((g$k$23838$6Dw7t)
        (begin
          (if (not (g$fixnum?$23602$6Dw7t g$k$23838$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-vector
              '"not a fixnum"
              g$k$23838$6Dw7t)
            (void))
          (if (g$negative?$25062$6Dw7t g$k$23838$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'make-vector
              '"cannot be negative"
              g$k$23838$6Dw7t)
            (void))
          (clr-new-array-internal 'System.Object g$k$23838$6Dw7t)))
       ((g$k$23839$6Dw7t g$fill$23840$6Dw7t)
        ((case-lambda
           ((g$vec$23841$6Dw7t)
            (begin
              (g$vector-fill!$23632$6Dw7t
                g$vec$23841$6Dw7t
                g$fill$23840$6Dw7t)
              g$vec$23841$6Dw7t)))
         (g$make-vector$23630$6Dw7t g$k$23839$6Dw7t)))))
   (g$vector-length$23631$6Dw7t
     g$vector-length$24039$6Dw7t
     (case-lambda
       ((g$vec$23842$6Dw7t)
        (begin
          (if (not (g$vector?$23597$6Dw7t g$vec$23842$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector-length
              '"not a vector"
              g$vec$23842$6Dw7t)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$vec$23842$6Dw7t)))))
   (g$vector-fill!$23632$6Dw7t
     g$vector-fill!$24040$6Dw7t
     (case-lambda
       ((g$vec$23843$6Dw7t g$val$23844$6Dw7t)
        ((case-lambda
           ((g$len$23845$6Dw7t)
            (letrec ((g$loop$23846$6Dw7t
                       (case-lambda
                         ((g$i$23847$6Dw7t)
                          (if (g$fx=?$23307$6Dw7t
                                g$i$23847$6Dw7t
                                g$len$23845$6Dw7t)
                            (if '#f '#f (void))
                            (begin
                              (g$vector-set!$23629$6Dw7t
                                g$vec$23843$6Dw7t
                                g$i$23847$6Dw7t
                                g$val$23844$6Dw7t)
                              (g$loop$23846$6Dw7t
                                (g$fx+$23294$6Dw7t
                                  g$i$23847$6Dw7t
                                  '1))))))))
              (g$loop$23846$6Dw7t '0))))
         (g$vector-length$23631$6Dw7t g$vec$23843$6Dw7t)))))
   (g$vector->list$23633$6Dw7t
     g$vector->list$24041$6Dw7t
     (case-lambda
       ((g$vec$23848$6Dw7t)
        (begin
          (if (not (g$vector?$23597$6Dw7t g$vec$23848$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector->list
              '"not a vector"
              g$vec$23848$6Dw7t)
            (void))
          (clr-call-internal
            'IronScheme.Runtime.Cons
            'FromList
            '()
            g$vec$23848$6Dw7t)))))
   (g$xcons$23634$6Dw7t
     g$xcons$24042$6Dw7t
     (case-lambda
       ((g$x$23849$6Dw7t g$y$23850$6Dw7t)
        (cons g$y$23850$6Dw7t g$x$23849$6Dw7t))))
   (g$reverse$23635$6Dw7t
     g$reverse$24043$6Dw7t
     (case-lambda
       ((g$lst$23851$6Dw7t)
        (g$fold-left$23588$6Dw7t
          g$xcons$23634$6Dw7t
          '()
          g$lst$23851$6Dw7t))))
   (g$caar$23636$6Dw7t
     g$caar$24044$6Dw7t
     (case-lambda ((g$x$23852$6Dw7t) (car (car g$x$23852$6Dw7t)))))
   (g$cadr$23637$6Dw7t
     g$cadr$24045$6Dw7t
     (case-lambda ((g$x$23853$6Dw7t) (car (cdr g$x$23853$6Dw7t)))))
   (g$cdar$23638$6Dw7t
     g$cdar$24046$6Dw7t
     (case-lambda ((g$x$23854$6Dw7t) (cdr (car g$x$23854$6Dw7t)))))
   (g$cddr$23639$6Dw7t
     g$cddr$24047$6Dw7t
     (case-lambda ((g$x$23855$6Dw7t) (cdr (cdr g$x$23855$6Dw7t)))))
   (g$caaar$23640$6Dw7t
     g$caaar$24048$6Dw7t
     (case-lambda
       ((g$x$23856$6Dw7t) (g$caar$23636$6Dw7t (car g$x$23856$6Dw7t)))))
   (g$caadr$23641$6Dw7t
     g$caadr$24049$6Dw7t
     (case-lambda
       ((g$x$23857$6Dw7t) (g$caar$23636$6Dw7t (cdr g$x$23857$6Dw7t)))))
   (g$cadar$23642$6Dw7t
     g$cadar$24050$6Dw7t
     (case-lambda
       ((g$x$23858$6Dw7t) (g$cadr$23637$6Dw7t (car g$x$23858$6Dw7t)))))
   (g$caddr$23643$6Dw7t
     g$caddr$24051$6Dw7t
     (case-lambda
       ((g$x$23859$6Dw7t) (g$cadr$23637$6Dw7t (cdr g$x$23859$6Dw7t)))))
   (g$cdaar$23644$6Dw7t
     g$cdaar$24052$6Dw7t
     (case-lambda
       ((g$x$23860$6Dw7t) (g$cdar$23638$6Dw7t (car g$x$23860$6Dw7t)))))
   (g$cdadr$23645$6Dw7t
     g$cdadr$24053$6Dw7t
     (case-lambda
       ((g$x$23861$6Dw7t) (g$cdar$23638$6Dw7t (cdr g$x$23861$6Dw7t)))))
   (g$cddar$23646$6Dw7t
     g$cddar$24054$6Dw7t
     (case-lambda
       ((g$x$23862$6Dw7t) (g$cddr$23639$6Dw7t (car g$x$23862$6Dw7t)))))
   (g$cdddr$23647$6Dw7t
     g$cdddr$24055$6Dw7t
     (case-lambda
       ((g$x$23863$6Dw7t) (g$cddr$23639$6Dw7t (cdr g$x$23863$6Dw7t)))))
   (g$caaaar$23648$6Dw7t
     g$caaaar$24056$6Dw7t
     (case-lambda
       ((g$x$23864$6Dw7t) (g$caaar$23640$6Dw7t (car g$x$23864$6Dw7t)))))
   (g$caaadr$23649$6Dw7t
     g$caaadr$24057$6Dw7t
     (case-lambda
       ((g$x$23865$6Dw7t) (g$caaar$23640$6Dw7t (cdr g$x$23865$6Dw7t)))))
   (g$caadar$23650$6Dw7t
     g$caadar$24058$6Dw7t
     (case-lambda
       ((g$x$23866$6Dw7t) (g$caadr$23641$6Dw7t (car g$x$23866$6Dw7t)))))
   (g$caaddr$23651$6Dw7t
     g$caaddr$24059$6Dw7t
     (case-lambda
       ((g$x$23867$6Dw7t) (g$caadr$23641$6Dw7t (cdr g$x$23867$6Dw7t)))))
   (g$cadaar$23652$6Dw7t
     g$cadaar$24060$6Dw7t
     (case-lambda
       ((g$x$23868$6Dw7t) (g$cadar$23642$6Dw7t (car g$x$23868$6Dw7t)))))
   (g$cadadr$23653$6Dw7t
     g$cadadr$24061$6Dw7t
     (case-lambda
       ((g$x$23869$6Dw7t) (g$cadar$23642$6Dw7t (cdr g$x$23869$6Dw7t)))))
   (g$caddar$23654$6Dw7t
     g$caddar$24062$6Dw7t
     (case-lambda
       ((g$x$23870$6Dw7t) (g$caddr$23643$6Dw7t (car g$x$23870$6Dw7t)))))
   (g$cadddr$23655$6Dw7t
     g$cadddr$24063$6Dw7t
     (case-lambda
       ((g$x$23871$6Dw7t) (g$caddr$23643$6Dw7t (cdr g$x$23871$6Dw7t)))))
   (g$cdaaar$23656$6Dw7t
     g$cdaaar$24064$6Dw7t
     (case-lambda
       ((g$x$23872$6Dw7t) (g$cdaar$23644$6Dw7t (car g$x$23872$6Dw7t)))))
   (g$cdaadr$23657$6Dw7t
     g$cdaadr$24065$6Dw7t
     (case-lambda
       ((g$x$23873$6Dw7t) (g$cdaar$23644$6Dw7t (cdr g$x$23873$6Dw7t)))))
   (g$cdadar$23658$6Dw7t
     g$cdadar$24066$6Dw7t
     (case-lambda
       ((g$x$23874$6Dw7t) (g$cdadr$23645$6Dw7t (car g$x$23874$6Dw7t)))))
   (g$cdaddr$23659$6Dw7t
     g$cdaddr$24067$6Dw7t
     (case-lambda
       ((g$x$23875$6Dw7t) (g$cdadr$23645$6Dw7t (cdr g$x$23875$6Dw7t)))))
   (g$cddaar$23660$6Dw7t
     g$cddaar$24068$6Dw7t
     (case-lambda
       ((g$x$23876$6Dw7t) (g$cddar$23646$6Dw7t (car g$x$23876$6Dw7t)))))
   (g$cddadr$23661$6Dw7t
     g$cddadr$24069$6Dw7t
     (case-lambda
       ((g$x$23877$6Dw7t) (g$cddar$23646$6Dw7t (cdr g$x$23877$6Dw7t)))))
   (g$cdddar$23662$6Dw7t
     g$cdddar$24070$6Dw7t
     (case-lambda
       ((g$x$23878$6Dw7t) (g$cdddr$23647$6Dw7t (car g$x$23878$6Dw7t)))))
   (g$cddddr$23663$6Dw7t
     g$cddddr$24071$6Dw7t
     (case-lambda
       ((g$x$23879$6Dw7t) (g$cdddr$23647$6Dw7t (cdr g$x$23879$6Dw7t)))))
   (g$even?$23664$6Dw7t
     g$even?$24072$6Dw7t
     (case-lambda
       ((g$n$23880$6Dw7t)
        (begin
          (if (not (g$integer?$25056$6Dw7t g$n$23880$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'even?
              '"not a integer"
              g$n$23880$6Dw7t)
            (void))
          (g$=$25069$6Dw7t
            '0
            (g$mod$23622$6Dw7t g$n$23880$6Dw7t '2))))))
   (g$odd?$23665$6Dw7t
     g$odd?$24073$6Dw7t
     (case-lambda
       ((g$n$23881$6Dw7t)
        (begin
          (if (not (g$integer?$25056$6Dw7t g$n$23881$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'odd?
              '"not a integer"
              g$n$23881$6Dw7t)
            (void))
          (g$=$25069$6Dw7t
            '1
            (g$mod$23622$6Dw7t g$n$23881$6Dw7t '2))))))
   (g$max$23666$6Dw7t
     g$max$24074$6Dw7t
     (case-lambda
       ((g$a$23882$6Dw7t . g$rest$23883$6Dw7t)
        (begin
          (if (not (g$real?$25054$6Dw7t g$a$23882$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'max
              '"not a real"
              g$a$23882$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            (case-lambda
              ((g$a$23884$6Dw7t g$b$23885$6Dw7t)
               ((case-lambda
                  ((g$r$23886$6Dw7t)
                   (if ((case-lambda
                          ((g$t$23887$6Dw7t)
                           (if g$t$23887$6Dw7t
                             g$t$23887$6Dw7t
                             (begin
                               '#f
                               (g$inexact?$25052$6Dw7t
                                 g$b$23885$6Dw7t)))))
                        (g$inexact?$25052$6Dw7t g$a$23884$6Dw7t))
                     (g$inexact$25063$6Dw7t g$r$23886$6Dw7t)
                     g$r$23886$6Dw7t)))
                (if (g$<$25070$6Dw7t g$a$23884$6Dw7t g$b$23885$6Dw7t)
                  g$b$23885$6Dw7t
                  g$a$23884$6Dw7t))))
            g$a$23882$6Dw7t
            g$rest$23883$6Dw7t)))))
   (g$min$23667$6Dw7t
     g$min$24075$6Dw7t
     (case-lambda
       ((g$a$23888$6Dw7t . g$rest$23889$6Dw7t)
        (begin
          (if (not (g$real?$25054$6Dw7t g$a$23888$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'min
              '"not a real"
              g$a$23888$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            (case-lambda
              ((g$a$23890$6Dw7t g$b$23891$6Dw7t)
               ((case-lambda
                  ((g$r$23892$6Dw7t)
                   (if ((case-lambda
                          ((g$t$23893$6Dw7t)
                           (if g$t$23893$6Dw7t
                             g$t$23893$6Dw7t
                             (begin
                               '#f
                               (g$inexact?$25052$6Dw7t
                                 g$b$23891$6Dw7t)))))
                        (g$inexact?$25052$6Dw7t g$a$23890$6Dw7t))
                     (g$inexact$25063$6Dw7t g$r$23892$6Dw7t)
                     g$r$23892$6Dw7t)))
                (if (g$>$25072$6Dw7t g$a$23890$6Dw7t g$b$23891$6Dw7t)
                  g$b$23891$6Dw7t
                  g$a$23890$6Dw7t))))
            g$a$23888$6Dw7t
            g$rest$23889$6Dw7t)))))
   (g$gcd$23668$6Dw7t
     g$gcd$24076$6Dw7t
     (case-lambda
       (g$nums$23894$6Dw7t
        ((case-lambda
           ((g$t$23895$6Dw7t)
            (if (eqv? g$t$23895$6Dw7t '0)
              '0
              (if (eqv? g$t$23895$6Dw7t '1)
                ((case-lambda
                   ((g$n$23896$6Dw7t)
                    (begin
                      (if (not (g$integer?$25056$6Dw7t g$n$23896$6Dw7t))
                        (g$assertion-violation$20490$6Dw7t
                          'gcd
                          '"not an integer"
                          g$n$23896$6Dw7t)
                        (void))
                      (g$abs$25095$6Dw7t g$n$23896$6Dw7t))))
                 (car g$nums$23894$6Dw7t))
                (if (eqv? g$t$23895$6Dw7t '2)
                  ((case-lambda
                     ((g$a$23897$6Dw7t g$b$23898$6Dw7t)
                      (begin
                        (if (not (g$integer?$25056$6Dw7t
                                   g$a$23897$6Dw7t))
                          (g$assertion-violation$20490$6Dw7t
                            'gcd
                            '"not an integer"
                            g$a$23897$6Dw7t)
                          (void))
                        (if (not (g$integer?$25056$6Dw7t
                                   g$b$23898$6Dw7t))
                          (g$assertion-violation$20490$6Dw7t
                            'gcd
                            '"not an integer"
                            g$b$23898$6Dw7t)
                          (void))
                        (if (g$zero?$25060$6Dw7t g$b$23898$6Dw7t)
                          (g$abs$25095$6Dw7t g$a$23897$6Dw7t)
                          (g$abs$25095$6Dw7t
                            (g$gcd$23668$6Dw7t
                              g$b$23898$6Dw7t
                              (g$mod$23622$6Dw7t
                                g$a$23897$6Dw7t
                                g$b$23898$6Dw7t)))))))
                   (car g$nums$23894$6Dw7t)
                   (g$cadr$23637$6Dw7t g$nums$23894$6Dw7t))
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$fold-left$23588$6Dw7t
                          g$gcd$23668$6Dw7t
                          (g$abs$25095$6Dw7t (car g$nums$23894$6Dw7t))
                          (cdr g$nums$23894$6Dw7t)))))))))))
         (g$length$23578$6Dw7t g$nums$23894$6Dw7t)))))
   (g$lcm$23669$6Dw7t
     g$lcm$24077$6Dw7t
     (case-lambda
       (g$nums$23899$6Dw7t
        ((case-lambda
           ((g$t$23900$6Dw7t)
            (if (eqv? g$t$23900$6Dw7t '0)
              '1
              (if (eqv? g$t$23900$6Dw7t '1)
                ((case-lambda
                   ((g$n$23901$6Dw7t)
                    (begin
                      (if (not (g$integer?$25056$6Dw7t g$n$23901$6Dw7t))
                        (g$assertion-violation$20490$6Dw7t
                          'lcm
                          '"not an integer"
                          g$n$23901$6Dw7t)
                        (void))
                      (g$abs$25095$6Dw7t g$n$23901$6Dw7t))))
                 (car g$nums$23899$6Dw7t))
                (if (eqv? g$t$23900$6Dw7t '2)
                  ((case-lambda
                     ((g$a$23902$6Dw7t g$b$23903$6Dw7t)
                      (begin
                        (if (not (g$integer?$25056$6Dw7t
                                   g$a$23902$6Dw7t))
                          (g$assertion-violation$20490$6Dw7t
                            'lcm
                            '"not an integer"
                            g$a$23902$6Dw7t)
                          (void))
                        (if (not (g$integer?$25056$6Dw7t
                                   g$b$23903$6Dw7t))
                          (g$assertion-violation$20490$6Dw7t
                            'lcm
                            '"not an integer"
                            g$b$23903$6Dw7t)
                          (void))
                        (if ((case-lambda
                               ((g$t$23904$6Dw7t)
                                (if g$t$23904$6Dw7t
                                  g$t$23904$6Dw7t
                                  (begin
                                    '#f
                                    (g$zero?$25060$6Dw7t
                                      g$b$23903$6Dw7t)))))
                             (g$zero?$25060$6Dw7t g$a$23902$6Dw7t))
                          '0
                          (g$abs$25095$6Dw7t
                            (* (/ g$a$23902$6Dw7t
                                  (g$gcd$23668$6Dw7t
                                    g$a$23902$6Dw7t
                                    g$b$23903$6Dw7t))
                               g$b$23903$6Dw7t))))))
                   (car g$nums$23899$6Dw7t)
                   (g$cadr$23637$6Dw7t g$nums$23899$6Dw7t))
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$fold-left$23588$6Dw7t
                          g$lcm$23669$6Dw7t
                          (g$abs$25095$6Dw7t (car g$nums$23899$6Dw7t))
                          (cdr g$nums$23899$6Dw7t)))))))))))
         (g$length$23578$6Dw7t g$nums$23899$6Dw7t)))))
   (g$string-compare$23670$6Dw7t
     g$string-compare$24078$6Dw7t
     (case-lambda
       ((g$a$23905$6Dw7t g$b$23906$6Dw7t)
        (clr-call-internal
          'System.String
          '"Compare(String,String,StringComparison)"
          '()
          (g$->string$23612$6Dw7t g$a$23905$6Dw7t)
          (g$->string$23612$6Dw7t g$b$23906$6Dw7t)
          'ordinal))))
   (g$string=?$23711$6Dw7t
     g$string=?$24079$6Dw7t
     (case-lambda
       ((g$a$23907$6Dw7t g$b$23908$6Dw7t . g$rest$23909$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$a$23907$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string=?
              '"not a string"
              g$a$23907$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23910$6Dw7t)
               (begin
                 (if (not (g$string?$23595$6Dw7t g$x$23910$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string=?
                     '"not a string"
                     g$x$23910$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23911$6Dw7t)
                     (begin
                       (set! g$a$23907$6Dw7t g$x$23910$6Dw7t)
                       g$r$23911$6Dw7t)))
                  (g$fx=?$23307$6Dw7t
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$23612$6Dw7t g$a$23907$6Dw7t)
                      (g$->string$23612$6Dw7t g$x$23910$6Dw7t)
                      'ordinal)
                    '0)))))
            (cons g$b$23908$6Dw7t g$rest$23909$6Dw7t))))))
   (g$string<?$23712$6Dw7t
     g$string<?$24080$6Dw7t
     (case-lambda
       ((g$a$23912$6Dw7t g$b$23913$6Dw7t . g$rest$23914$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$a$23912$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string<?
              '"not a string"
              g$a$23912$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23915$6Dw7t)
               (begin
                 (if (not (g$string?$23595$6Dw7t g$x$23915$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string<?
                     '"not a string"
                     g$x$23915$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23916$6Dw7t)
                     (begin
                       (set! g$a$23912$6Dw7t g$x$23915$6Dw7t)
                       g$r$23916$6Dw7t)))
                  (g$fx<?$23308$6Dw7t
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$23612$6Dw7t g$a$23912$6Dw7t)
                      (g$->string$23612$6Dw7t g$x$23915$6Dw7t)
                      'ordinal)
                    '0)))))
            (cons g$b$23913$6Dw7t g$rest$23914$6Dw7t))))))
   (g$string>?$23713$6Dw7t
     g$string>?$24081$6Dw7t
     (case-lambda
       ((g$a$23917$6Dw7t g$b$23918$6Dw7t . g$rest$23919$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$a$23917$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string>?
              '"not a string"
              g$a$23917$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23920$6Dw7t)
               (begin
                 (if (not (g$string?$23595$6Dw7t g$x$23920$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string>?
                     '"not a string"
                     g$x$23920$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23921$6Dw7t)
                     (begin
                       (set! g$a$23917$6Dw7t g$x$23920$6Dw7t)
                       g$r$23921$6Dw7t)))
                  (g$fx>?$23310$6Dw7t
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$23612$6Dw7t g$a$23917$6Dw7t)
                      (g$->string$23612$6Dw7t g$x$23920$6Dw7t)
                      'ordinal)
                    '0)))))
            (cons g$b$23918$6Dw7t g$rest$23919$6Dw7t))))))
   (g$string<=?$23714$6Dw7t
     g$string<=?$24082$6Dw7t
     (case-lambda
       ((g$a$23922$6Dw7t g$b$23923$6Dw7t . g$rest$23924$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$a$23922$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string<=?
              '"not a string"
              g$a$23922$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23925$6Dw7t)
               (begin
                 (if (not (g$string?$23595$6Dw7t g$x$23925$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string<=?
                     '"not a string"
                     g$x$23925$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23926$6Dw7t)
                     (begin
                       (set! g$a$23922$6Dw7t g$x$23925$6Dw7t)
                       g$r$23926$6Dw7t)))
                  (g$fx<=?$23309$6Dw7t
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$23612$6Dw7t g$a$23922$6Dw7t)
                      (g$->string$23612$6Dw7t g$x$23925$6Dw7t)
                      'ordinal)
                    '0)))))
            (cons g$b$23923$6Dw7t g$rest$23924$6Dw7t))))))
   (g$string>=?$23715$6Dw7t
     g$string>=?$24083$6Dw7t
     (case-lambda
       ((g$a$23927$6Dw7t g$b$23928$6Dw7t . g$rest$23929$6Dw7t)
        (begin
          (if (not (g$string?$23595$6Dw7t g$a$23927$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string>=?
              '"not a string"
              g$a$23927$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23930$6Dw7t)
               (begin
                 (if (not (g$string?$23595$6Dw7t g$x$23930$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string>=?
                     '"not a string"
                     g$x$23930$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23931$6Dw7t)
                     (begin
                       (set! g$a$23927$6Dw7t g$x$23930$6Dw7t)
                       g$r$23931$6Dw7t)))
                  (g$fx>=?$23311$6Dw7t
                    (clr-call-internal
                      'System.String
                      '"Compare(String,String,StringComparison)"
                      '()
                      (g$->string$23612$6Dw7t g$a$23927$6Dw7t)
                      (g$->string$23612$6Dw7t g$x$23930$6Dw7t)
                      'ordinal)
                    '0)))))
            (cons g$b$23928$6Dw7t g$rest$23929$6Dw7t))))))
   (g$symbol=?$23716$6Dw7t
     g$symbol=?$24084$6Dw7t
     (case-lambda
       ((g$a$23932$6Dw7t g$b$23933$6Dw7t . g$rest$23934$6Dw7t)
        (begin
          (if (not (g$symbol?$23599$6Dw7t g$a$23932$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'symbol=?
              '"not a symbol"
              g$a$23932$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23935$6Dw7t)
               (begin
                 (if (not (g$symbol?$23599$6Dw7t g$x$23935$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'symbol=?
                     '"not a symbol"
                     g$x$23935$6Dw7t)
                   (void))
                 (eq? g$a$23932$6Dw7t g$x$23935$6Dw7t))))
            (cons g$b$23933$6Dw7t g$rest$23934$6Dw7t))))))
   (g$boolean=?$23717$6Dw7t
     g$boolean=?$24085$6Dw7t
     (case-lambda
       ((g$a$23936$6Dw7t g$b$23937$6Dw7t . g$rest$23938$6Dw7t)
        (begin
          (if (not (g$boolean?$23600$6Dw7t g$a$23936$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'boolean=?
              '"not a boolean"
              g$a$23936$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23939$6Dw7t)
               (begin
                 (if (not (g$boolean?$23600$6Dw7t g$x$23939$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'boolean=?
                     '"not a boolean"
                     g$x$23939$6Dw7t)
                   (void))
                 (eq? g$a$23936$6Dw7t g$x$23939$6Dw7t))))
            (cons g$b$23937$6Dw7t g$rest$23938$6Dw7t))))))
   (g$char=?$23758$6Dw7t
     g$char=?$24086$6Dw7t
     (case-lambda
       ((g$a$23940$6Dw7t g$b$23941$6Dw7t . g$rest$23942$6Dw7t)
        (begin
          (if (not (g$char?$23596$6Dw7t g$a$23940$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char=?
              '"not a char"
              g$a$23940$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23943$6Dw7t)
               (begin
                 (if (not (g$char?$23596$6Dw7t g$x$23943$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char=?
                     '"not a char"
                     g$x$23943$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23944$6Dw7t)
                     (begin
                       (set! g$a$23940$6Dw7t g$x$23943$6Dw7t)
                       g$r$23944$6Dw7t)))
                  (g$fx=?$23307$6Dw7t
                    (g$char->integer$23605$6Dw7t g$a$23940$6Dw7t)
                    (g$char->integer$23605$6Dw7t g$x$23943$6Dw7t))))))
            (cons g$b$23941$6Dw7t g$rest$23942$6Dw7t))))))
   (g$char<?$23759$6Dw7t
     g$char<?$24087$6Dw7t
     (case-lambda
       ((g$a$23945$6Dw7t g$b$23946$6Dw7t . g$rest$23947$6Dw7t)
        (begin
          (if (not (g$char?$23596$6Dw7t g$a$23945$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char<?
              '"not a char"
              g$a$23945$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23948$6Dw7t)
               (begin
                 (if (not (g$char?$23596$6Dw7t g$x$23948$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char<?
                     '"not a char"
                     g$x$23948$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23949$6Dw7t)
                     (begin
                       (set! g$a$23945$6Dw7t g$x$23948$6Dw7t)
                       g$r$23949$6Dw7t)))
                  (g$fx<?$23308$6Dw7t
                    (g$char->integer$23605$6Dw7t g$a$23945$6Dw7t)
                    (g$char->integer$23605$6Dw7t g$x$23948$6Dw7t))))))
            (cons g$b$23946$6Dw7t g$rest$23947$6Dw7t))))))
   (g$char>?$23760$6Dw7t
     g$char>?$24088$6Dw7t
     (case-lambda
       ((g$a$23950$6Dw7t g$b$23951$6Dw7t . g$rest$23952$6Dw7t)
        (begin
          (if (not (g$char?$23596$6Dw7t g$a$23950$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char>?
              '"not a char"
              g$a$23950$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23953$6Dw7t)
               (begin
                 (if (not (g$char?$23596$6Dw7t g$x$23953$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char>?
                     '"not a char"
                     g$x$23953$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23954$6Dw7t)
                     (begin
                       (set! g$a$23950$6Dw7t g$x$23953$6Dw7t)
                       g$r$23954$6Dw7t)))
                  (g$fx>?$23310$6Dw7t
                    (g$char->integer$23605$6Dw7t g$a$23950$6Dw7t)
                    (g$char->integer$23605$6Dw7t g$x$23953$6Dw7t))))))
            (cons g$b$23951$6Dw7t g$rest$23952$6Dw7t))))))
   (g$char<=?$23761$6Dw7t
     g$char<=?$24089$6Dw7t
     (case-lambda
       ((g$a$23955$6Dw7t g$b$23956$6Dw7t . g$rest$23957$6Dw7t)
        (begin
          (if (not (g$char?$23596$6Dw7t g$a$23955$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char<=?
              '"not a char"
              g$a$23955$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23958$6Dw7t)
               (begin
                 (if (not (g$char?$23596$6Dw7t g$x$23958$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char<=?
                     '"not a char"
                     g$x$23958$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23959$6Dw7t)
                     (begin
                       (set! g$a$23955$6Dw7t g$x$23958$6Dw7t)
                       g$r$23959$6Dw7t)))
                  (g$fx<=?$23309$6Dw7t
                    (g$char->integer$23605$6Dw7t g$a$23955$6Dw7t)
                    (g$char->integer$23605$6Dw7t g$x$23958$6Dw7t))))))
            (cons g$b$23956$6Dw7t g$rest$23957$6Dw7t))))))
   (g$char>=?$23762$6Dw7t
     g$char>=?$24090$6Dw7t
     (case-lambda
       ((g$a$23960$6Dw7t g$b$23961$6Dw7t . g$rest$23962$6Dw7t)
        (begin
          (if (not (g$char?$23596$6Dw7t g$a$23960$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char>=?
              '"not a char"
              g$a$23960$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$23963$6Dw7t)
               (begin
                 (if (not (g$char?$23596$6Dw7t g$x$23963$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char>=?
                     '"not a char"
                     g$x$23963$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$23964$6Dw7t)
                     (begin
                       (set! g$a$23960$6Dw7t g$x$23963$6Dw7t)
                       g$r$23964$6Dw7t)))
                  (g$fx>=?$23311$6Dw7t
                    (g$char->integer$23605$6Dw7t g$a$23960$6Dw7t)
                    (g$char->integer$23605$6Dw7t g$x$23963$6Dw7t))))))
            (cons g$b$23961$6Dw7t g$rest$23962$6Dw7t))))))
   (g$rationalize$23763$6Dw7t
     g$rationalize$24091$6Dw7t
     (case-lambda
       ((g$x$23965$6Dw7t g$e$23966$6Dw7t)
        (if (if (g$infinite?$25050$6Dw7t g$x$23965$6Dw7t)
              (begin '#f (g$infinite?$25050$6Dw7t g$e$23966$6Dw7t))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$23967$6Dw7t)
              (if (if (g$exact?$25051$6Dw7t g$x$23965$6Dw7t)
                    (begin '#f (g$exact?$25051$6Dw7t g$e$23966$6Dw7t))
                    '#f)
                g$r$23967$6Dw7t
                (g$inexact$25063$6Dw7t g$r$23967$6Dw7t))))
           (apply
             /
             (g$find-ratio$23764$6Dw7t
               g$x$23965$6Dw7t
               g$e$23966$6Dw7t)))))))
   (g$find-ratio$23764$6Dw7t
     g$find-ratio$24092$6Dw7t
     (case-lambda
       ((g$x$23968$6Dw7t g$e$23969$6Dw7t)
        (g$find-ratio-between$23765$6Dw7t
          (- g$x$23968$6Dw7t g$e$23969$6Dw7t)
          (+ g$x$23968$6Dw7t g$e$23969$6Dw7t)))))
   (g$find-ratio-between$23765$6Dw7t
     g$find-ratio-between$24093$6Dw7t
     (case-lambda
       ((g$x$23970$6Dw7t g$y$23971$6Dw7t)
        (letrec* ((g$sr$23972$6Dw7t
                    (case-lambda
                      ((g$x$23974$6Dw7t g$y$23975$6Dw7t)
                       ((case-lambda
                          ((g$fx$23976$6Dw7t g$fy$23977$6Dw7t)
                           (if (g$>=$25073$6Dw7t
                                 g$fx$23976$6Dw7t
                                 g$x$23974$6Dw7t)
                             (list g$fx$23976$6Dw7t '1)
                             (if (g$=$25069$6Dw7t
                                   g$fx$23976$6Dw7t
                                   g$fy$23977$6Dw7t)
                               ((case-lambda
                                  ((g$rat$23978$6Dw7t)
                                   (list
                                     (+ (g$cadr$23637$6Dw7t
                                          g$rat$23978$6Dw7t)
                                        (* g$fx$23976$6Dw7t
                                           (car g$rat$23978$6Dw7t)))
                                     (car g$rat$23978$6Dw7t))))
                                (g$sr$23972$6Dw7t
                                  (/ (- g$y$23975$6Dw7t
                                        g$fy$23977$6Dw7t))
                                  (/ (- g$x$23974$6Dw7t
                                        g$fx$23976$6Dw7t))))
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     (list
                                       (+ '1 g$fx$23976$6Dw7t)
                                       '1)))))))))
                        (g$exact$25064$6Dw7t
                          (g$floor$25096$6Dw7t g$x$23974$6Dw7t))
                        (g$exact$25064$6Dw7t
                          (g$floor$25096$6Dw7t g$y$23975$6Dw7t)))))))
          (if (g$<$25070$6Dw7t g$y$23971$6Dw7t g$x$23970$6Dw7t)
            (g$find-ratio-between$23765$6Dw7t
              g$y$23971$6Dw7t
              g$x$23970$6Dw7t)
            (if (g$>=$25073$6Dw7t g$x$23970$6Dw7t g$y$23971$6Dw7t)
              (list g$x$23970$6Dw7t '1)
              (if (g$positive?$25061$6Dw7t g$x$23970$6Dw7t)
                (g$sr$23972$6Dw7t g$x$23970$6Dw7t g$y$23971$6Dw7t)
                (if (g$negative?$25062$6Dw7t g$y$23971$6Dw7t)
                  ((case-lambda
                     ((g$rat$23973$6Dw7t)
                      (list
                        (- (car g$rat$23973$6Dw7t))
                        (g$cadr$23637$6Dw7t g$rat$23973$6Dw7t))))
                   (g$sr$23972$6Dw7t
                     (- g$y$23971$6Dw7t)
                     (- g$x$23970$6Dw7t)))
                  ((case-lambda (() (begin '#f '(0 1)))))))))))))
   (g$vector-map$23766$6Dw7t
     g$vector-map$24094$6Dw7t
     (case-lambda
       ((g$p$23979$6Dw7t g$vec1$23980$6Dw7t . g$vecs$23981$6Dw7t)
        ((case-lambda
           ((g$len$23982$6Dw7t)
            ((case-lambda
               ((g$res$23983$6Dw7t)
                (letrec ((g$loop$23984$6Dw7t
                           (case-lambda
                             ((g$i$23985$6Dw7t)
                              (if (g$fx=?$23307$6Dw7t
                                    g$i$23985$6Dw7t
                                    g$len$23982$6Dw7t)
                                (begin
                                  (if '#f '#f (void))
                                  g$res$23983$6Dw7t)
                                (begin
                                  (g$vector-set!$23629$6Dw7t
                                    g$res$23983$6Dw7t
                                    g$i$23985$6Dw7t
                                    (if (null? g$vecs$23981$6Dw7t)
                                      (g$p$23979$6Dw7t
                                        (g$vector-ref$23628$6Dw7t
                                          g$vec1$23980$6Dw7t
                                          g$i$23985$6Dw7t))
                                      (apply
                                        g$p$23979$6Dw7t
                                        (g$map$23581$6Dw7t
                                          (case-lambda
                                            ((g$x$23986$6Dw7t)
                                             (g$vector-ref$23628$6Dw7t
                                               g$x$23986$6Dw7t
                                               g$i$23985$6Dw7t)))
                                          (cons
                                            g$vec1$23980$6Dw7t
                                            g$vecs$23981$6Dw7t)))))
                                  (g$loop$23984$6Dw7t
                                    (g$fx+$23294$6Dw7t
                                      g$i$23985$6Dw7t
                                      '1))))))))
                  (g$loop$23984$6Dw7t '0))))
             (g$make-vector$23630$6Dw7t g$len$23982$6Dw7t '()))))
         (g$vector-length$23631$6Dw7t g$vec1$23980$6Dw7t)))))
   (g$vector-for-each$23767$6Dw7t
     g$vector-for-each$24095$6Dw7t
     (case-lambda
       ((g$p$23987$6Dw7t g$vec1$23988$6Dw7t . g$vecs$23989$6Dw7t)
        ((case-lambda
           ((g$len$23990$6Dw7t)
            (letrec ((g$loop$23991$6Dw7t
                       (case-lambda
                         ((g$i$23992$6Dw7t)
                          (if (g$fx=?$23307$6Dw7t
                                g$i$23992$6Dw7t
                                g$len$23990$6Dw7t)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$vecs$23989$6Dw7t)
                                (g$p$23987$6Dw7t
                                  (g$vector-ref$23628$6Dw7t
                                    g$vec1$23988$6Dw7t
                                    g$i$23992$6Dw7t))
                                (apply
                                  g$p$23987$6Dw7t
                                  (g$map$23581$6Dw7t
                                    (case-lambda
                                      ((g$x$23993$6Dw7t)
                                       (g$vector-ref$23628$6Dw7t
                                         g$x$23993$6Dw7t
                                         g$i$23992$6Dw7t)))
                                    (cons
                                      g$vec1$23988$6Dw7t
                                      g$vecs$23989$6Dw7t))))
                              (g$loop$23991$6Dw7t
                                (g$fx+$23294$6Dw7t
                                  g$i$23992$6Dw7t
                                  '1))))))))
              (g$loop$23991$6Dw7t '0))))
         (g$vector-length$23631$6Dw7t g$vec1$23988$6Dw7t)))))
   (g$string-for-each$23768$6Dw7t
     g$string-for-each$24096$6Dw7t
     (case-lambda
       ((g$p$23994$6Dw7t g$str1$23995$6Dw7t . g$strs$23996$6Dw7t)
        ((case-lambda
           ((g$len$23997$6Dw7t)
            (letrec ((g$loop$23998$6Dw7t
                       (case-lambda
                         ((g$i$23999$6Dw7t)
                          (if (g$fx=?$23307$6Dw7t
                                g$i$23999$6Dw7t
                                g$len$23997$6Dw7t)
                            (if '#f '#f (void))
                            (begin
                              (if (null? g$strs$23996$6Dw7t)
                                (g$p$23994$6Dw7t
                                  (g$string-ref$23608$6Dw7t
                                    g$str1$23995$6Dw7t
                                    g$i$23999$6Dw7t))
                                (apply
                                  g$p$23994$6Dw7t
                                  (g$map$23581$6Dw7t
                                    (case-lambda
                                      ((g$x$24000$6Dw7t)
                                       (g$string-ref$23608$6Dw7t
                                         g$x$24000$6Dw7t
                                         g$i$23999$6Dw7t)))
                                    (cons
                                      g$str1$23995$6Dw7t
                                      g$strs$23996$6Dw7t))))
                              (g$loop$23998$6Dw7t
                                (g$fx+$23294$6Dw7t
                                  g$i$23999$6Dw7t
                                  '1))))))))
              (g$loop$23998$6Dw7t '0))))
         (g$string-length$23611$6Dw7t g$str1$23995$6Dw7t))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$24098$6Dw7t
     g$using$24140$6Dw7t
     (clr-using-internal 'system))
   (g$using$24100$6Dw7t
     g$using$24141$6Dw7t
     (clr-using-internal 'system.collections))
   (g$hashtable?$24101$6Dw7t
     g$hashtable?$24142$6Dw7t
     (case-lambda
       ((g$obj$24114$6Dw7t)
        (clr-is-internal 'Hashtable g$obj$24114$6Dw7t))))
   (g$make-eq-hashtable$24102$6Dw7t
     g$make-eq-hashtable$24143$6Dw7t
     (case-lambda
       (() (g$make-eq-hashtable$24102$6Dw7t '32))
       ((g$k$24115$6Dw7t)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$24115$6Dw7t)))))
   (g$make-eqv-hashtable$24103$6Dw7t
     g$make-eqv-hashtable$24144$6Dw7t
     (case-lambda
       (() (g$make-eqv-hashtable$24103$6Dw7t '32))
       ((g$k$24116$6Dw7t)
        (make-hashtable eqv-hash eqv? g$k$24116$6Dw7t))))
   (g$hashtable-size$24104$6Dw7t
     g$hashtable-size$24145$6Dw7t
     (case-lambda
       ((g$ht$24117$6Dw7t)
        (clr-call-internal 'hashtable 'get_count g$ht$24117$6Dw7t))))
   (g$hashtable-ref$24105$6Dw7t
     g$hashtable-ref$24146$6Dw7t
     (case-lambda
       ((g$ht$24118$6Dw7t g$key$24119$6Dw7t g$default$24120$6Dw7t)
        ((case-lambda
           ((g$r$24121$6Dw7t)
            (if ((case-lambda
                   ((g$t$24122$6Dw7t)
                    (if g$t$24122$6Dw7t
                      g$t$24122$6Dw7t
                      (begin
                        '#f
                        (g$hashtable-contains?$24108$6Dw7t
                          g$ht$24118$6Dw7t
                          g$key$24119$6Dw7t)))))
                 (not (null? g$r$24121$6Dw7t)))
              g$r$24121$6Dw7t
              g$default$24120$6Dw7t)))
         (clr-call-internal
           'hashtable
           'get_item
           g$ht$24118$6Dw7t
           g$key$24119$6Dw7t)))))
   (g$hashtable-set!$24106$6Dw7t
     g$hashtable-set!$24147$6Dw7t
     (case-lambda
       ((g$ht$24123$6Dw7t g$key$24124$6Dw7t g$obj$24125$6Dw7t)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$24123$6Dw7t
          g$key$24124$6Dw7t
          g$obj$24125$6Dw7t))))
   (g$hashtable-delete!$24107$6Dw7t
     g$hashtable-delete!$24148$6Dw7t
     (case-lambda
       ((g$ht$24126$6Dw7t g$key$24127$6Dw7t)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$24126$6Dw7t
          g$key$24127$6Dw7t))))
   (g$hashtable-contains?$24108$6Dw7t
     g$hashtable-contains?$24149$6Dw7t
     (case-lambda
       ((g$ht$24128$6Dw7t g$key$24129$6Dw7t)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$24128$6Dw7t
          g$key$24129$6Dw7t))))
   (g$hashtable-update!$24109$6Dw7t
     g$hashtable-update!$24150$6Dw7t
     (case-lambda
       ((g$ht$24130$6Dw7t
          g$key$24131$6Dw7t
          g$proc$24132$6Dw7t
          g$default$24133$6Dw7t)
        (g$hashtable-set!$24106$6Dw7t
          g$ht$24130$6Dw7t
          g$key$24131$6Dw7t
          (g$proc$24132$6Dw7t
            (g$hashtable-ref$24105$6Dw7t
              g$ht$24130$6Dw7t
              g$key$24131$6Dw7t
              g$default$24133$6Dw7t))))))
   (g$hashtable-clear!$24110$6Dw7t
     g$hashtable-clear!$24151$6Dw7t
     (case-lambda
       ((g$ht$24134$6Dw7t)
        (g$hashtable-clear!$24110$6Dw7t g$ht$24134$6Dw7t '32))
       ((g$ht$24135$6Dw7t g$k$24136$6Dw7t)
        (clr-call-internal 'hashtable 'clear g$ht$24135$6Dw7t))))
   (g$string-hash$24111$6Dw7t
     g$string-hash$24152$6Dw7t
     (case-lambda
       ((g$str$24137$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$str$24137$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-hash
              '"not a string"
              g$str$24137$6Dw7t)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal 'StringComparer 'get_Ordinal '())
            (clr-call-internal 'Object 'ToString g$str$24137$6Dw7t))))))
   (g$string-ci-hash$24112$6Dw7t
     g$string-ci-hash$24153$6Dw7t
     (case-lambda
       ((g$str$24138$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$str$24138$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci-hash
              '"not a string"
              g$str$24138$6Dw7t)
            (void))
          (clr-call-internal
            'StringComparer
            '"GetHashCode(String)"
            (clr-call-internal
              'StringComparer
              'get_InvariantCultureIgnoreCase
              '())
            (clr-call-internal 'Object 'ToString g$str$24138$6Dw7t))))))
   (g$symbol-hash$24113$6Dw7t
     g$symbol-hash$24154$6Dw7t
     (case-lambda
       ((g$sym$24139$6Dw7t)
        (begin
          (if (not (g$symbol?$24007$6Dw7t g$sym$24139$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'symbol-hash
              '"not a symbol"
              g$sym$24139$6Dw7t)
            (void))
          (clr-call-internal
            'Object
            'GetHashCode
            g$sym$24139$6Dw7t))))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$24156$6Dw7t
     g$using$24163$6Dw7t
     (clr-using-internal 'system.io))
   (g$file-exists?$24157$6Dw7t
     g$file-exists?$24164$6Dw7t
     (case-lambda
       ((g$fn$24160$6Dw7t)
        (clr-call-internal 'file 'exists '() g$fn$24160$6Dw7t))))
   (g$delete-file$24158$6Dw7t
     g$delete-file$24165$6Dw7t
     (case-lambda
       ((g$fn$24161$6Dw7t)
        (clr-call-internal 'file 'delete '() g$fn$24161$6Dw7t))))
   (g$get-directory-name$24159$6Dw7t
     g$get-directory-name$24166$6Dw7t
     (case-lambda
       ((g$path$24162$6Dw7t)
        (clr-call-internal
          'path
          'getdirectoryname
          '()
          g$path$24162$6Dw7t)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$24167$6Dw7t
     g$native-endianness$24486$6Dw7t
     (case-lambda (() 'little)))
   (g$utf8$24168$6Dw7t
     g$utf8$24487$6Dw7t
     (clr-call-internal 'System.Text.Encoding 'get_UTF8 '()))
   (g$utf16le$24169$6Dw7t
     g$utf16le$24488$6Dw7t
     (clr-new-internal 'System.Text.UnicodeEncoding '#f '#f))
   (g$utf16be$24170$6Dw7t
     g$utf16be$24489$6Dw7t
     (clr-new-internal 'System.Text.UnicodeEncoding '#t '#f))
   (g$utf32le$24171$6Dw7t
     g$utf32le$24490$6Dw7t
     (clr-new-internal 'System.Text.UTF32Encoding '#f '#f))
   (g$utf32be$24172$6Dw7t
     g$utf32be$24491$6Dw7t
     (clr-new-internal 'System.Text.UTF32Encoding '#t '#f))
   (g$bignum?$24173$6Dw7t
     g$bignum?$24492$6Dw7t
     (case-lambda
       ((g$obj$24240$6Dw7t)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$24240$6Dw7t))))
   (g$->bignum$24174$6Dw7t
     g$->bignum$24493$6Dw7t
     (case-lambda
       ((g$ei$24241$6Dw7t)
        (if (g$bignum?$24173$6Dw7t g$ei$24241$6Dw7t)
          g$ei$24241$6Dw7t
          (if (g$fixnum?$24010$6Dw7t g$ei$24241$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$24241$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    '#f
                    '"not a exact integer"
                    g$ei$24241$6Dw7t))))))))))
   (g$get-bytes$24175$6Dw7t
     g$get-bytes$24494$6Dw7t
     (case-lambda
       ((g$enc$24242$6Dw7t g$str$24243$6Dw7t)
        (clr-call-internal
          'System.Text.Encoding
          '"GetBytes(String)"
          g$enc$24242$6Dw7t
          g$str$24243$6Dw7t))))
   (g$get-string$24176$6Dw7t
     g$get-string$24495$6Dw7t
     (case-lambda
       ((g$enc$24244$6Dw7t g$bv$24245$6Dw7t)
        (clr-call-internal
          'System.Text.Encoding
          '"GetString(Byte[])"
          g$enc$24244$6Dw7t
          g$bv$24245$6Dw7t))))
   (g$byte->sbyte$24177$6Dw7t
     g$byte->sbyte$24496$6Dw7t
     (case-lambda
       ((g$b$24246$6Dw7t)
        ((case-lambda
           ((g$b$24247$6Dw7t)
            (if (g$fx>?$23310$6Dw7t g$b$24247$6Dw7t '127)
              (g$fx-$23296$6Dw7t g$b$24247$6Dw7t '256)
              g$b$24247$6Dw7t)))
         (g$->fixnum$24179$6Dw7t g$b$24246$6Dw7t)))))
   (g$->byte$24178$6Dw7t
     g$->byte$24497$6Dw7t
     (case-lambda
       ((g$k$24248$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$k$24248$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              '#f
              '"not a fixnum"
              g$k$24248$6Dw7t)
            (void))
          (if ((case-lambda
                 ((g$t$24249$6Dw7t)
                  (if g$t$24249$6Dw7t
                    g$t$24249$6Dw7t
                    (begin
                      '#f
                      (g$fx>?$23310$6Dw7t g$k$24248$6Dw7t '255)))))
               (g$fx<?$23308$6Dw7t g$k$24248$6Dw7t '-128))
            (g$assertion-violation$20490$6Dw7t
              '#f
              '"too big or small for octect or byte"
              g$k$24248$6Dw7t)
            (void))
          (clr-cast-internal
            'System.Byte
            (clr-cast-internal 'System.Int32 g$k$24248$6Dw7t))))))
   (g$->fixnum$24179$6Dw7t
     g$->fixnum$24498$6Dw7t
     (case-lambda
       ((g$b$24250$6Dw7t)
        (clr-call-internal
          'System.Convert
          '"ToInt32(Object)"
          '()
          g$b$24250$6Dw7t))))
   (g$make-bytevector$24180$6Dw7t
     g$make-bytevector$24499$6Dw7t
     (case-lambda
       ((g$k$24251$6Dw7t)
        (clr-new-array-internal
          'System.Byte
          (clr-cast-internal 'System.Int32 g$k$24251$6Dw7t)))
       ((g$k$24252$6Dw7t g$fill$24253$6Dw7t)
        ((case-lambda
           ((g$bv$24254$6Dw7t)
            (begin
              (g$bytevector-fill!$24183$6Dw7t
                g$bv$24254$6Dw7t
                g$fill$24253$6Dw7t)
              g$bv$24254$6Dw7t)))
         (g$make-bytevector$24180$6Dw7t g$k$24252$6Dw7t)))))
   (g$bytevector-length$24181$6Dw7t
     g$bytevector-length$24500$6Dw7t
     (case-lambda
       ((g$bv$24255$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24255$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-length
              '"not a bytevector"
              g$bv$24255$6Dw7t)
            (void))
          (clr-call-internal
            'System.Array
            'get_Length
            g$bv$24255$6Dw7t)))))
   (g$bytevector=?$24182$6Dw7t
     g$bytevector=?$24501$6Dw7t
     (case-lambda
       ((g$bv1$24256$6Dw7t g$bv2$24257$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv1$24256$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector=?
              '"not a bytevector"
              g$bv1$24256$6Dw7t)
            (void))
          (if (not (g$bytevector?$24006$6Dw7t g$bv2$24257$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector=?
              '"not a bytevector"
              g$bv2$24257$6Dw7t)
            (void))
          (if (eq? g$bv1$24256$6Dw7t g$bv2$24257$6Dw7t)
            '#t
            ((case-lambda
               ((g$t$24258$6Dw7t)
                (if g$t$24258$6Dw7t
                  g$t$24258$6Dw7t
                  (begin '#f ((case-lambda (() (begin '#f '#f))))))))
             ((case-lambda
                ((g$bl$24259$6Dw7t)
                 (if (g$=$25069$6Dw7t
                       g$bl$24259$6Dw7t
                       (g$bytevector-length$24181$6Dw7t
                         g$bv2$24257$6Dw7t))
                   ((letrec ((g$f$24260$6Dw7t
                               (case-lambda
                                 ((g$i$24261$6Dw7t)
                                  (if (g$=$25069$6Dw7t
                                        g$i$24261$6Dw7t
                                        g$bl$24259$6Dw7t)
                                    '#t
                                    (if (g$=$25069$6Dw7t
                                          (g$bytevector-u8-ref$24186$6Dw7t
                                            g$bv1$24256$6Dw7t
                                            g$i$24261$6Dw7t)
                                          (g$bytevector-u8-ref$24186$6Dw7t
                                            g$bv2$24257$6Dw7t
                                            g$i$24261$6Dw7t))
                                      (g$f$24260$6Dw7t
                                        (+ g$i$24261$6Dw7t '1))
                                      ((case-lambda
                                         (() (begin '#f '#f))))))))))
                      g$f$24260$6Dw7t)
                    '0)
                   '#f)))
              (g$bytevector-length$24181$6Dw7t g$bv1$24256$6Dw7t))))))))
   (g$bytevector-fill!$24183$6Dw7t
     g$bytevector-fill!$24502$6Dw7t
     (case-lambda
       ((g$bv$24262$6Dw7t g$fill$24263$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24262$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-fill!
              '"not a bytevector"
              g$bv$24262$6Dw7t)
            (void))
          ((case-lambda
             ((g$fill$24264$6Dw7t g$k$24265$6Dw7t)
              ((letrec ((g$f$24266$6Dw7t
                          (case-lambda
                            ((g$i$24267$6Dw7t)
                             (if (not (g$=$25069$6Dw7t
                                        g$i$24267$6Dw7t
                                        g$k$24265$6Dw7t))
                               (begin
                                 (g$bytevector-u8-set!$24187$6Dw7t
                                   g$bv$24262$6Dw7t
                                   g$i$24267$6Dw7t
                                   g$fill$24264$6Dw7t)
                                 (g$f$24266$6Dw7t
                                   (+ g$i$24267$6Dw7t '1)))
                               (void))))))
                 g$f$24266$6Dw7t)
               '0)))
           (g$->byte$24178$6Dw7t g$fill$24263$6Dw7t)
           (g$bytevector-length$24181$6Dw7t g$bv$24262$6Dw7t))))))
   (g$bytevector-copy!$24184$6Dw7t
     g$bytevector-copy!$24503$6Dw7t
     (case-lambda
       ((g$bv1$24268$6Dw7t
          g$s1$24269$6Dw7t
          g$bv2$24270$6Dw7t
          g$s2$24271$6Dw7t
          g$len$24272$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv1$24268$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-copy!
              '"not a bytevector"
              g$bv1$24268$6Dw7t)
            (void))
          (if (not (g$bytevector?$24006$6Dw7t g$bv2$24270$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-copy!
              '"not a bytevector"
              g$bv2$24270$6Dw7t)
            (void))
          (clr-call-internal
            'System.Buffer
            'BlockCopy
            '()
            g$bv1$24268$6Dw7t
            g$s1$24269$6Dw7t
            g$bv2$24270$6Dw7t
            g$s2$24271$6Dw7t
            g$len$24272$6Dw7t)))))
   (g$bytevector-copy$24185$6Dw7t
     g$bytevector-copy$24504$6Dw7t
     (case-lambda
       ((g$bv$24273$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24273$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-copy
              '"not a bytevector"
              g$bv$24273$6Dw7t)
            (void))
          (clr-call-internal 'System.Array 'Clone g$bv$24273$6Dw7t)))))
   (g$bytevector-u8-ref$24186$6Dw7t
     g$bytevector-u8-ref$24505$6Dw7t
     (case-lambda
       ((g$bv$24274$6Dw7t g$k$24275$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24274$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-u8-ref
              '"not a bytevector"
              g$bv$24274$6Dw7t)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToInt32(Byte)"
            '()
            ($bytevector-ref g$bv$24274$6Dw7t g$k$24275$6Dw7t))))))
   (g$bytevector-u8-set!$24187$6Dw7t
     g$bytevector-u8-set!$24506$6Dw7t
     (case-lambda
       ((g$bv$24276$6Dw7t g$k$24277$6Dw7t g$value$24278$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24276$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-u8-set!
              '"not a bytevector"
              g$bv$24276$6Dw7t)
            (void))
          ($bytevector-set!
            g$bv$24276$6Dw7t
            g$k$24277$6Dw7t
            (clr-call-internal
              'System.Convert
              '"ToByte(Object)"
              '()
              g$value$24278$6Dw7t))))))
   (g$bytevector-s8-ref$24188$6Dw7t
     g$bytevector-s8-ref$24507$6Dw7t
     (case-lambda
       ((g$bv$24279$6Dw7t g$k$24280$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24279$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-s8-ref
              '"not a bytevector"
              g$bv$24279$6Dw7t)
            (void))
          (g$byte->sbyte$24177$6Dw7t
            ($bytevector-ref g$bv$24279$6Dw7t g$k$24280$6Dw7t))))))
   (g$bytevector-s8-set!$24189$6Dw7t
     g$bytevector-s8-set!$24508$6Dw7t
     (case-lambda
       ((g$bv$24281$6Dw7t g$k$24282$6Dw7t g$value$24283$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24281$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-s8-set!
              '"not a bytevector"
              g$bv$24281$6Dw7t)
            (void))
          ($bytevector-set!
            g$bv$24281$6Dw7t
            g$k$24282$6Dw7t
            (g$->byte$24178$6Dw7t g$value$24283$6Dw7t))))))
   (g$bytevector->u8-list$24190$6Dw7t
     g$bytevector->u8-list$24509$6Dw7t
     (case-lambda
       ((g$bv$24284$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24284$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector->u8-list
              '"not a bytevector"
              g$bv$24284$6Dw7t)
            (void))
          ((case-lambda
             ((g$l$24285$6Dw7t)
              ((letrec ((g$f$24286$6Dw7t
                          (case-lambda
                            ((g$i$24287$6Dw7t g$a$24288$6Dw7t)
                             (if (g$negative?$25062$6Dw7t
                                   g$i$24287$6Dw7t)
                               g$a$24288$6Dw7t
                               (g$f$24286$6Dw7t
                                 (- g$i$24287$6Dw7t '1)
                                 (cons
                                   (g$bytevector-u8-ref$24186$6Dw7t
                                     g$bv$24284$6Dw7t
                                     g$i$24287$6Dw7t)
                                   g$a$24288$6Dw7t)))))))
                 g$f$24286$6Dw7t)
               (- g$l$24285$6Dw7t '1)
               '())))
           (g$bytevector-length$24181$6Dw7t g$bv$24284$6Dw7t))))))
   (g$u8-list->bytevector$24191$6Dw7t
     g$u8-list->bytevector$24510$6Dw7t
     (case-lambda
       ((g$lst$24289$6Dw7t)
        (begin
          (if (not (g$list?$23576$6Dw7t g$lst$24289$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'u8-list->bytevector
              '"not a list"
              g$lst$24289$6Dw7t)
            (void))
          ((case-lambda
             ((g$l$24290$6Dw7t)
              ((case-lambda
                 ((g$bv$24291$6Dw7t)
                  ((letrec ((g$f$24292$6Dw7t
                              (case-lambda
                                ((g$i$24293$6Dw7t g$lst$24294$6Dw7t)
                                 (if (g$=$25069$6Dw7t
                                       g$i$24293$6Dw7t
                                       g$l$24290$6Dw7t)
                                   g$bv$24291$6Dw7t
                                   (begin
                                     (g$bytevector-u8-set!$24187$6Dw7t
                                       g$bv$24291$6Dw7t
                                       g$i$24293$6Dw7t
                                       (car g$lst$24294$6Dw7t))
                                     (g$f$24292$6Dw7t
                                       (+ g$i$24293$6Dw7t '1)
                                       (cdr g$lst$24294$6Dw7t))))))))
                     g$f$24292$6Dw7t)
                   '0
                   g$lst$24289$6Dw7t)))
               (g$make-bytevector$24180$6Dw7t g$l$24290$6Dw7t))))
           (g$length$23578$6Dw7t g$lst$24289$6Dw7t))))))
   (g$bytevector-uint-ref$24192$6Dw7t
     g$bytevector-uint-ref$24511$6Dw7t
     (case-lambda
       ((g$bv$24295$6Dw7t
          g$k$24296$6Dw7t
          g$end$24297$6Dw7t
          g$size$24298$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24295$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-ref
              '"not a bytevector"
              g$bv$24295$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$k$24296$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$k$24296$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$k$24296$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-ref
              '"not a non-negative exact integer"
              g$k$24296$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$size$24298$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$size$24298$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$size$24298$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-ref
              '"not a non-negative exact integer"
              g$size$24298$6Dw7t)
            (void))
          (if (not (g$symbol?$24007$6Dw7t g$end$24297$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-ref
              '"not a symbol"
              g$end$24297$6Dw7t)
            (void))
          ((case-lambda
             ((g$sb$24299$6Dw7t)
              (begin
                (g$bytevector-copy!$24184$6Dw7t
                  g$bv$24295$6Dw7t
                  g$k$24296$6Dw7t
                  g$sb$24299$6Dw7t
                  '0
                  g$size$24298$6Dw7t)
                (if (eq? g$end$24297$6Dw7t 'big)
                  (clr-call-internal
                    'System.Array
                    'Reverse
                    '()
                    g$sb$24299$6Dw7t)
                  (void))
                ((case-lambda
                   ((g$t$24300$6Dw7t)
                    (if (eqv? g$t$24300$6Dw7t '1)
                      (g$->fixnum$24179$6Dw7t
                        ($bytevector-ref
                          g$sb$24299$6Dw7t
                          g$k$24296$6Dw7t))
                      (if (eqv? g$t$24300$6Dw7t '2)
                        (g$->fixnum$24179$6Dw7t
                          (clr-call-internal
                            'System.BitConverter
                            '"ToUInt16(Byte[],Int32)"
                            '()
                            g$sb$24299$6Dw7t
                            '0))
                        (if (eqv? g$t$24300$6Dw7t '4)
                          (g$exact$25064$6Dw7t
                            (clr-call-internal
                              'Microsoft.Scripting.Math.BigInteger
                              '"op_Implicit(UInt32)"
                              '()
                              (clr-call-internal
                                'System.BitConverter
                                '"ToUInt32(Byte[],Int32)"
                                '()
                                g$sb$24299$6Dw7t
                                '0)))
                          (if (eqv? g$t$24300$6Dw7t '8)
                            (clr-call-internal
                              'Microsoft.Scripting.Math.BigInteger
                              '"op_Implicit(UInt64)"
                              '()
                              (clr-call-internal
                                'System.BitConverter
                                '"ToUInt64(Byte[],Int32)"
                                '()
                                g$sb$24299$6Dw7t
                                '0))
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$data$24301$6Dw7t)
                                      (begin
                                        (g$bytevector-copy!$24184$6Dw7t
                                          g$sb$24299$6Dw7t
                                          '0
                                          g$data$24301$6Dw7t
                                          '0
                                          g$size$24298$6Dw7t)
                                        (clr-call-internal
                                          'Microsoft.Scripting.Math.BigInteger
                                          '"Create(Byte[])"
                                          '()
                                          g$data$24301$6Dw7t))))
                                   (g$make-bytevector$24180$6Dw7t
                                     (+ g$size$24298$6Dw7t
                                        '1)))))))))))))
                 g$size$24298$6Dw7t))))
           (g$make-bytevector$24180$6Dw7t g$size$24298$6Dw7t))))))
   (g$bytevector-sint-ref$24193$6Dw7t
     g$bytevector-sint-ref$24512$6Dw7t
     (case-lambda
       ((g$bv$24302$6Dw7t
          g$k$24303$6Dw7t
          g$end$24304$6Dw7t
          g$size$24305$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24302$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-ref
              '"not a bytevector"
              g$bv$24302$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$k$24303$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$k$24303$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$k$24303$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-ref
              '"not a non-negative exact integer"
              g$k$24303$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$size$24305$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$size$24305$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$size$24305$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-ref
              '"not a non-negative exact integer"
              g$size$24305$6Dw7t)
            (void))
          (if (not (g$symbol?$24007$6Dw7t g$end$24304$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-ref
              '"not a symbol"
              g$end$24304$6Dw7t)
            (void))
          ((case-lambda
             ((g$sb$24306$6Dw7t)
              (begin
                (g$bytevector-copy!$24184$6Dw7t
                  g$bv$24302$6Dw7t
                  g$k$24303$6Dw7t
                  g$sb$24306$6Dw7t
                  '0
                  g$size$24305$6Dw7t)
                (if (eq? g$end$24304$6Dw7t 'big)
                  (clr-call-internal
                    'System.Array
                    'Reverse
                    '()
                    g$sb$24306$6Dw7t)
                  (void))
                ((case-lambda
                   ((g$t$24307$6Dw7t)
                    (if (eqv? g$t$24307$6Dw7t '1)
                      (g$byte->sbyte$24177$6Dw7t
                        ($bytevector-ref
                          g$sb$24306$6Dw7t
                          g$k$24303$6Dw7t))
                      (if (eqv? g$t$24307$6Dw7t '2)
                        (g$->fixnum$24179$6Dw7t
                          (clr-call-internal
                            'System.BitConverter
                            '"ToInt16(Byte[],Int32)"
                            '()
                            g$sb$24306$6Dw7t
                            '0))
                        (if (eqv? g$t$24307$6Dw7t '4)
                          (clr-call-internal
                            'System.BitConverter
                            '"ToInt32(Byte[],Int32)"
                            '()
                            g$sb$24306$6Dw7t
                            '0)
                          (if (eqv? g$t$24307$6Dw7t '8)
                            (clr-call-internal
                              'Microsoft.Scripting.Math.BigInteger
                              '"op_Implicit(Int64)"
                              '()
                              (clr-call-internal
                                'System.BitConverter
                                '"ToInt64(Byte[],Int32)"
                                '()
                                g$sb$24306$6Dw7t
                                '0))
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  (clr-call-internal
                                    'Microsoft.Scripting.Math.BigInteger
                                    '"Create(Byte[])"
                                    '()
                                    g$sb$24306$6Dw7t)))))))))))
                 g$size$24305$6Dw7t))))
           (g$make-bytevector$24180$6Dw7t g$size$24305$6Dw7t))))))
   (g$bytevector-uint-set!$24194$6Dw7t
     g$bytevector-uint-set!$24513$6Dw7t
     (case-lambda
       ((g$bv$24308$6Dw7t
          g$k$24309$6Dw7t
          g$n$24310$6Dw7t
          g$end$24311$6Dw7t
          g$size$24312$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24308$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-set!
              '"not a bytevector"
              g$bv$24308$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$k$24309$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$k$24309$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$k$24309$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-set!
              '"not a non-negative exact integer"
              g$k$24309$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$size$24312$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$size$24312$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$size$24312$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-set!
              '"not a non-negative exact integer"
              g$size$24312$6Dw7t)
            (void))
          (if (not (g$symbol?$24007$6Dw7t g$end$24311$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-uint-set!
              '"not a symbol"
              g$end$24311$6Dw7t)
            (void))
          ((case-lambda
             ((g$t$24313$6Dw7t)
              (if (eqv? g$t$24313$6Dw7t '1)
                ($bytevector-set!
                  g$bv$24308$6Dw7t
                  g$k$24309$6Dw7t
                  (g$->byte$24178$6Dw7t g$n$24310$6Dw7t))
                (if (eqv? g$t$24313$6Dw7t '2)
                  ((case-lambda
                     ((g$data$24314$6Dw7t)
                      (begin
                        (if (eq? g$end$24311$6Dw7t 'big)
                          (clr-call-internal
                            'System.Array
                            'Reverse
                            '()
                            g$data$24314$6Dw7t)
                          (void))
                        (g$bytevector-copy!$24184$6Dw7t
                          g$data$24314$6Dw7t
                          '0
                          g$bv$24308$6Dw7t
                          g$k$24309$6Dw7t
                          g$size$24312$6Dw7t))))
                   (clr-call-internal
                     'System.BitConverter
                     '"GetBytes(UInt16)"
                     '()
                     (clr-call-internal
                       'System.Convert
                       '"ToUInt16(Object)"
                       '()
                       g$n$24310$6Dw7t)))
                  (if (eqv? g$t$24313$6Dw7t '4)
                    ((case-lambda
                       ((g$data$24315$6Dw7t)
                        (begin
                          (if (eq? g$end$24311$6Dw7t 'big)
                            (clr-call-internal
                              'System.Array
                              'Reverse
                              '()
                              g$data$24315$6Dw7t)
                            (void))
                          (g$bytevector-copy!$24184$6Dw7t
                            g$data$24315$6Dw7t
                            '0
                            g$bv$24308$6Dw7t
                            g$k$24309$6Dw7t
                            g$size$24312$6Dw7t))))
                     (clr-call-internal
                       'System.BitConverter
                       '"GetBytes(UInt32)"
                       '()
                       (clr-call-internal
                         'System.Convert
                         '"ToUInt32(Object)"
                         '()
                         g$n$24310$6Dw7t)))
                    (if (eqv? g$t$24313$6Dw7t '8)
                      ((case-lambda
                         ((g$data$24316$6Dw7t)
                          (begin
                            (if (eq? g$end$24311$6Dw7t 'big)
                              (clr-call-internal
                                'System.Array
                                'Reverse
                                '()
                                g$data$24316$6Dw7t)
                              (void))
                            (g$bytevector-copy!$24184$6Dw7t
                              g$data$24316$6Dw7t
                              '0
                              g$bv$24308$6Dw7t
                              g$k$24309$6Dw7t
                              g$size$24312$6Dw7t))))
                       (clr-call-internal
                         'System.BitConverter
                         '"GetBytes(UInt64)"
                         '()
                         (clr-call-internal
                           'System.Convert
                           '"ToUInt64(Object)"
                           '()
                           g$n$24310$6Dw7t)))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$data$24317$6Dw7t)
                                (begin
                                  (if (eq? g$end$24311$6Dw7t 'big)
                                    (clr-call-internal
                                      'System.Array
                                      'Reverse
                                      '()
                                      g$data$24317$6Dw7t)
                                    (void))
                                  (g$bytevector-copy!$24184$6Dw7t
                                    g$data$24317$6Dw7t
                                    (if (eq? g$end$24311$6Dw7t 'big)
                                      '1
                                      '0)
                                    g$bv$24308$6Dw7t
                                    g$k$24309$6Dw7t
                                    g$size$24312$6Dw7t))))
                             (clr-call-internal
                               'Microsoft.Scripting.Math.BigInteger
                               'ToByteArray
                               (g$->bignum$24174$6Dw7t
                                 g$n$24310$6Dw7t)))))))))))))
           g$size$24312$6Dw7t)
          (void)))))
   (g$bytevector-sint-set!$24195$6Dw7t
     g$bytevector-sint-set!$24514$6Dw7t
     (case-lambda
       ((g$bv$24318$6Dw7t
          g$k$24319$6Dw7t
          g$n$24320$6Dw7t
          g$end$24321$6Dw7t
          g$size$24322$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24318$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-set!
              '"not a bytevector"
              g$bv$24318$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$k$24319$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$k$24319$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$k$24319$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-set!
              '"not a non-negative exact integer"
              g$k$24319$6Dw7t)
            (void))
          (if (not (if (g$integer?$25056$6Dw7t g$size$24322$6Dw7t)
                     (if (g$exact?$25051$6Dw7t g$size$24322$6Dw7t)
                       (begin
                         '#f
                         (not (g$negative?$25062$6Dw7t
                                g$size$24322$6Dw7t)))
                       '#f)
                     '#f))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-set!
              '"not a non-negative exact integer"
              g$size$24322$6Dw7t)
            (void))
          (if (not (g$symbol?$24007$6Dw7t g$end$24321$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bytevector-sint-set!
              '"not a symbol"
              g$end$24321$6Dw7t)
            (void))
          ((case-lambda
             ((g$t$24323$6Dw7t)
              (if (eqv? g$t$24323$6Dw7t '1)
                ($bytevector-set!
                  g$bv$24318$6Dw7t
                  g$k$24319$6Dw7t
                  (g$->byte$24178$6Dw7t g$n$24320$6Dw7t))
                (if (eqv? g$t$24323$6Dw7t '2)
                  ((case-lambda
                     ((g$data$24324$6Dw7t)
                      (begin
                        (if (eq? g$end$24321$6Dw7t 'big)
                          (clr-call-internal
                            'System.Array
                            'Reverse
                            '()
                            g$data$24324$6Dw7t)
                          (void))
                        (g$bytevector-copy!$24184$6Dw7t
                          g$data$24324$6Dw7t
                          '0
                          g$bv$24318$6Dw7t
                          g$k$24319$6Dw7t
                          g$size$24322$6Dw7t))))
                   (clr-call-internal
                     'System.BitConverter
                     '"GetBytes(Int16)"
                     '()
                     (clr-call-internal
                       'System.Convert
                       '"ToInt16(Object)"
                       '()
                       g$n$24320$6Dw7t)))
                  (if (eqv? g$t$24323$6Dw7t '4)
                    ((case-lambda
                       ((g$data$24325$6Dw7t)
                        (begin
                          (if (eq? g$end$24321$6Dw7t 'big)
                            (clr-call-internal
                              'System.Array
                              'Reverse
                              '()
                              g$data$24325$6Dw7t)
                            (void))
                          (g$bytevector-copy!$24184$6Dw7t
                            g$data$24325$6Dw7t
                            '0
                            g$bv$24318$6Dw7t
                            g$k$24319$6Dw7t
                            g$size$24322$6Dw7t))))
                     (clr-call-internal
                       'System.BitConverter
                       '"GetBytes(Int32)"
                       '()
                       (clr-call-internal
                         'System.Convert
                         '"ToInt32(Object)"
                         '()
                         g$n$24320$6Dw7t)))
                    (if (eqv? g$t$24323$6Dw7t '8)
                      ((case-lambda
                         ((g$data$24326$6Dw7t)
                          (begin
                            (if (eq? g$end$24321$6Dw7t 'big)
                              (clr-call-internal
                                'System.Array
                                'Reverse
                                '()
                                g$data$24326$6Dw7t)
                              (void))
                            (g$bytevector-copy!$24184$6Dw7t
                              g$data$24326$6Dw7t
                              '0
                              g$bv$24318$6Dw7t
                              g$k$24319$6Dw7t
                              g$size$24322$6Dw7t))))
                       (clr-call-internal
                         'System.BitConverter
                         '"GetBytes(Int64)"
                         '()
                         (clr-call-internal
                           'System.Convert
                           '"ToInt64(Object)"
                           '()
                           g$n$24320$6Dw7t)))
                      ((case-lambda
                         (()
                          (begin
                            '#f
                            ((case-lambda
                               ((g$data$24327$6Dw7t)
                                (begin
                                  (if (eq? g$end$24321$6Dw7t 'big)
                                    (clr-call-internal
                                      'System.Array
                                      'Reverse
                                      '()
                                      g$data$24327$6Dw7t)
                                    (void))
                                  (g$bytevector-copy!$24184$6Dw7t
                                    g$data$24327$6Dw7t
                                    '0
                                    g$bv$24318$6Dw7t
                                    g$k$24319$6Dw7t
                                    g$size$24322$6Dw7t))))
                             (clr-call-internal
                               'Microsoft.Scripting.Math.BigInteger
                               'ToByteArray
                               (g$->bignum$24174$6Dw7t
                                 g$n$24320$6Dw7t)))))))))))))
           g$size$24322$6Dw7t)
          (void)))))
   (g$string->utf8$24196$6Dw7t
     g$string->utf8$24515$6Dw7t
     (case-lambda
       ((g$s$24328$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$s$24328$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string->utf8
              '"not a string"
              g$s$24328$6Dw7t)
            (void))
          (g$get-bytes$24175$6Dw7t
            g$utf8$24168$6Dw7t
            g$s$24328$6Dw7t)))))
   (g$string->utf16$24197$6Dw7t
     g$string->utf16$24516$6Dw7t
     (case-lambda
       ((g$s$24329$6Dw7t)
        (g$string->utf16$24197$6Dw7t g$s$24329$6Dw7t 'big))
       ((g$s$24330$6Dw7t g$end$24331$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$s$24330$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string->utf16
              '"not a string"
              g$s$24330$6Dw7t)
            (void))
          ((case-lambda
             ((g$t$24332$6Dw7t)
              (if (eqv? g$t$24332$6Dw7t 'big)
                (g$get-bytes$24175$6Dw7t
                  g$utf16be$24170$6Dw7t
                  g$s$24330$6Dw7t)
                (if (eqv? g$t$24332$6Dw7t 'little)
                  (g$get-bytes$24175$6Dw7t
                    g$utf16le$24169$6Dw7t
                    g$s$24330$6Dw7t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$assertion-violation$20490$6Dw7t
                          'string->utf16
                          '"unknown endianness"
                          g$end$24331$6Dw7t)))))))))
           g$end$24331$6Dw7t)))))
   (g$string->utf32$24198$6Dw7t
     g$string->utf32$24517$6Dw7t
     (case-lambda
       ((g$s$24333$6Dw7t)
        (g$string->utf32$24198$6Dw7t g$s$24333$6Dw7t 'big))
       ((g$s$24334$6Dw7t g$end$24335$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$s$24334$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string->utf32
              '"not a string"
              g$s$24334$6Dw7t)
            (void))
          ((case-lambda
             ((g$t$24336$6Dw7t)
              (if (eqv? g$t$24336$6Dw7t 'big)
                (g$get-bytes$24175$6Dw7t
                  g$utf32be$24172$6Dw7t
                  g$s$24334$6Dw7t)
                (if (eqv? g$t$24336$6Dw7t 'little)
                  (g$get-bytes$24175$6Dw7t
                    g$utf32le$24171$6Dw7t
                    g$s$24334$6Dw7t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$assertion-violation$20490$6Dw7t
                          'string->utf32
                          '"unknown endianness"
                          g$end$24335$6Dw7t)))))))))
           g$end$24335$6Dw7t)))))
   (g$utf8->string$24199$6Dw7t
     g$utf8->string$24518$6Dw7t
     (case-lambda
       ((g$bv$24337$6Dw7t)
        (begin
          (if (not (g$bytevector?$24006$6Dw7t g$bv$24337$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'utf8->string
              '"not a bytevector"
              g$bv$24337$6Dw7t)
            (void))
          (g$get-string$24176$6Dw7t
            g$utf8$24168$6Dw7t
            g$bv$24337$6Dw7t)))))
   (g$trim-front$24200$6Dw7t
     g$trim-front$24519$6Dw7t
     (case-lambda
       ((g$bv$24338$6Dw7t g$k$24339$6Dw7t)
        ((case-lambda
           ((g$d$24340$6Dw7t)
            (begin
              (g$bytevector-copy!$24184$6Dw7t
                g$bv$24338$6Dw7t
                g$k$24339$6Dw7t
                g$d$24340$6Dw7t
                '0
                (g$bytevector-length$24181$6Dw7t g$d$24340$6Dw7t))
              g$d$24340$6Dw7t)))
         (g$make-bytevector$24180$6Dw7t
           (- (g$bytevector-length$24181$6Dw7t g$bv$24338$6Dw7t)
              g$k$24339$6Dw7t))))))
   (g$utf16->string$24201$6Dw7t
     g$utf16->string$24520$6Dw7t
     (case-lambda
       ((g$bv$24341$6Dw7t g$end$24342$6Dw7t)
        (g$utf16->string$24201$6Dw7t
          g$bv$24341$6Dw7t
          g$end$24342$6Dw7t
          '#f))
       ((g$bv$24343$6Dw7t g$end$24344$6Dw7t g$endman?$24345$6Dw7t)
        (if g$endman?$24345$6Dw7t
          (if (eq? g$end$24344$6Dw7t 'big)
            (g$get-string$24176$6Dw7t
              g$utf16be$24170$6Dw7t
              g$bv$24343$6Dw7t)
            (g$get-string$24176$6Dw7t
              g$utf16le$24169$6Dw7t
              g$bv$24343$6Dw7t))
          ((case-lambda
             ((g$b0$24346$6Dw7t g$b1$24347$6Dw7t)
              (if (if (g$=$25069$6Dw7t '255 g$b0$24346$6Dw7t)
                    (begin '#f (g$=$25069$6Dw7t g$b1$24347$6Dw7t '254))
                    '#f)
                (g$utf16->string$24201$6Dw7t
                  (g$trim-front$24200$6Dw7t g$bv$24343$6Dw7t '2)
                  'little
                  '#t)
                (if (if (g$=$25069$6Dw7t '254 g$b0$24346$6Dw7t)
                      (begin
                        '#f
                        (g$=$25069$6Dw7t g$b1$24347$6Dw7t '255))
                      '#f)
                  (g$utf16->string$24201$6Dw7t
                    (g$trim-front$24200$6Dw7t g$bv$24343$6Dw7t '2)
                    'big
                    '#t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$utf16->string$24201$6Dw7t
                          g$bv$24343$6Dw7t
                          g$end$24344$6Dw7t
                          '#t)))))))))
           (g$bytevector-u8-ref$24186$6Dw7t g$bv$24343$6Dw7t '0)
           (g$bytevector-u8-ref$24186$6Dw7t g$bv$24343$6Dw7t '1))))))
   (g$utf32->string$24202$6Dw7t
     g$utf32->string$24521$6Dw7t
     (case-lambda
       ((g$bv$24348$6Dw7t g$end$24349$6Dw7t)
        (g$utf32->string$24202$6Dw7t
          g$bv$24348$6Dw7t
          g$end$24349$6Dw7t
          '#f))
       ((g$bv$24350$6Dw7t g$end$24351$6Dw7t g$endman?$24352$6Dw7t)
        (if g$endman?$24352$6Dw7t
          (if (eq? g$end$24351$6Dw7t 'big)
            (g$get-string$24176$6Dw7t
              g$utf32be$24172$6Dw7t
              g$bv$24350$6Dw7t)
            (g$get-string$24176$6Dw7t
              g$utf32le$24171$6Dw7t
              g$bv$24350$6Dw7t))
          ((case-lambda
             ((g$b0$24353$6Dw7t
                g$b1$24354$6Dw7t
                g$b2$24355$6Dw7t
                g$b3$24356$6Dw7t)
              (if (if (g$=$25069$6Dw7t '255 g$b0$24353$6Dw7t)
                    (if (g$=$25069$6Dw7t g$b1$24354$6Dw7t '254)
                      (if (g$zero?$25060$6Dw7t g$b2$24355$6Dw7t)
                        (begin
                          '#f
                          (g$zero?$25060$6Dw7t g$b3$24356$6Dw7t))
                        '#f)
                      '#f)
                    '#f)
                (g$utf32->string$24202$6Dw7t
                  (g$trim-front$24200$6Dw7t g$bv$24350$6Dw7t '4)
                  'little
                  '#t)
                (if (if (g$zero?$25060$6Dw7t g$b0$24353$6Dw7t)
                      (if (g$zero?$25060$6Dw7t g$b1$24354$6Dw7t)
                        (if (g$=$25069$6Dw7t '254 g$b2$24355$6Dw7t)
                          (begin
                            '#f
                            (g$=$25069$6Dw7t g$b3$24356$6Dw7t '255))
                          '#f)
                        '#f)
                      '#f)
                  (g$utf32->string$24202$6Dw7t
                    (g$trim-front$24200$6Dw7t g$bv$24350$6Dw7t '4)
                    'big
                    '#t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$utf32->string$24202$6Dw7t
                          g$bv$24350$6Dw7t
                          g$end$24351$6Dw7t
                          '#t)))))))))
           (g$bytevector-u8-ref$24186$6Dw7t g$bv$24350$6Dw7t '0)
           (g$bytevector-u8-ref$24186$6Dw7t g$bv$24350$6Dw7t '1)
           (g$bytevector-u8-ref$24186$6Dw7t g$bv$24350$6Dw7t '2)
           (g$bytevector-u8-ref$24186$6Dw7t g$bv$24350$6Dw7t '3))))))
   (g$uint-list->bytevector$24203$6Dw7t
     g$uint-list->bytevector$24522$6Dw7t
     (case-lambda
       ((g$lst$24357$6Dw7t g$end$24358$6Dw7t g$size$24359$6Dw7t)
        (begin
          (if (g$negative?$25062$6Dw7t g$size$24359$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'uint-list->bytevector
              '"invalid size"
              g$size$24359$6Dw7t)
            (void))
          ((case-lambda
             ((g$bv$24360$6Dw7t)
              ((letrec ((g$f$24361$6Dw7t
                          (case-lambda
                            ((g$i$24362$6Dw7t g$lst$24363$6Dw7t)
                             (if (null? g$lst$24363$6Dw7t)
                               g$bv$24360$6Dw7t
                               (begin
                                 (g$bytevector-uint-set!$24194$6Dw7t
                                   g$bv$24360$6Dw7t
                                   g$i$24362$6Dw7t
                                   (car g$lst$24363$6Dw7t)
                                   g$end$24358$6Dw7t
                                   g$size$24359$6Dw7t)
                                 (g$f$24361$6Dw7t
                                   (+ g$i$24362$6Dw7t
                                      g$size$24359$6Dw7t)
                                   (cdr g$lst$24363$6Dw7t))))))))
                 g$f$24361$6Dw7t)
               '0
               g$lst$24357$6Dw7t)))
           (g$make-bytevector$24180$6Dw7t
             (* (g$length$23578$6Dw7t g$lst$24357$6Dw7t)
                g$size$24359$6Dw7t)))))))
   (g$sint-list->bytevector$24204$6Dw7t
     g$sint-list->bytevector$24523$6Dw7t
     (case-lambda
       ((g$lst$24364$6Dw7t g$end$24365$6Dw7t g$size$24366$6Dw7t)
        (begin
          (if (g$negative?$25062$6Dw7t g$size$24366$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'sint-list->bytevector
              '"invalid size"
              g$size$24366$6Dw7t)
            (void))
          ((case-lambda
             ((g$bv$24367$6Dw7t)
              ((letrec ((g$f$24368$6Dw7t
                          (case-lambda
                            ((g$i$24369$6Dw7t g$lst$24370$6Dw7t)
                             (if (null? g$lst$24370$6Dw7t)
                               g$bv$24367$6Dw7t
                               (begin
                                 (g$bytevector-sint-set!$24195$6Dw7t
                                   g$bv$24367$6Dw7t
                                   g$i$24369$6Dw7t
                                   (car g$lst$24370$6Dw7t)
                                   g$end$24365$6Dw7t
                                   g$size$24366$6Dw7t)
                                 (g$f$24368$6Dw7t
                                   (+ g$i$24369$6Dw7t
                                      g$size$24366$6Dw7t)
                                   (cdr g$lst$24370$6Dw7t))))))))
                 g$f$24368$6Dw7t)
               '0
               g$lst$24364$6Dw7t)))
           (g$make-bytevector$24180$6Dw7t
             (* (g$length$23578$6Dw7t g$lst$24364$6Dw7t)
                g$size$24366$6Dw7t)))))))
   (g$bytevector->uint-list$24205$6Dw7t
     g$bytevector->uint-list$24524$6Dw7t
     (case-lambda
       ((g$bv$24371$6Dw7t g$end$24372$6Dw7t g$size$24373$6Dw7t)
        (begin
          (if (g$negative?$25062$6Dw7t g$size$24373$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'bytevector->uint-list
              '"invalid size"
              g$size$24373$6Dw7t)
            (void))
          ((letrec ((g$f$24374$6Dw7t
                      (case-lambda
                        ((g$l$24375$6Dw7t g$a$24376$6Dw7t)
                         (if (g$zero?$25060$6Dw7t g$l$24375$6Dw7t)
                           g$a$24376$6Dw7t
                           (g$f$24374$6Dw7t
                             (- g$l$24375$6Dw7t g$size$24373$6Dw7t)
                             (cons
                               (g$bytevector-uint-ref$24192$6Dw7t
                                 g$bv$24371$6Dw7t
                                 (- g$l$24375$6Dw7t g$size$24373$6Dw7t)
                                 g$end$24372$6Dw7t
                                 g$size$24373$6Dw7t)
                               g$a$24376$6Dw7t)))))))
             g$f$24374$6Dw7t)
           (g$bytevector-length$24181$6Dw7t g$bv$24371$6Dw7t)
           '())))))
   (g$bytevector->sint-list$24206$6Dw7t
     g$bytevector->sint-list$24525$6Dw7t
     (case-lambda
       ((g$bv$24377$6Dw7t g$end$24378$6Dw7t g$size$24379$6Dw7t)
        (begin
          (if (g$negative?$25062$6Dw7t g$size$24379$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'bytevector->sint-list
              '"invalid size"
              g$size$24379$6Dw7t)
            (void))
          ((letrec ((g$f$24380$6Dw7t
                      (case-lambda
                        ((g$l$24381$6Dw7t g$a$24382$6Dw7t)
                         (if (g$zero?$25060$6Dw7t g$l$24381$6Dw7t)
                           g$a$24382$6Dw7t
                           (g$f$24380$6Dw7t
                             (- g$l$24381$6Dw7t g$size$24379$6Dw7t)
                             (cons
                               (g$bytevector-sint-ref$24193$6Dw7t
                                 g$bv$24377$6Dw7t
                                 (- g$l$24381$6Dw7t g$size$24379$6Dw7t)
                                 g$end$24378$6Dw7t
                                 g$size$24379$6Dw7t)
                               g$a$24382$6Dw7t)))))))
             g$f$24380$6Dw7t)
           (g$bytevector-length$24181$6Dw7t g$bv$24377$6Dw7t)
           '())))))
   (g$single->double$24207$6Dw7t
     g$single->double$24526$6Dw7t
     (case-lambda
       ((g$s$24383$6Dw7t)
        (clr-call-internal
          'System.Convert
          '"ToDouble(Single)"
          '()
          g$s$24383$6Dw7t))))
   (g$bytevector-ieee-single-ref$24208$6Dw7t
     g$bytevector-ieee-single-ref$24527$6Dw7t
     (case-lambda
       ((g$bv$24384$6Dw7t g$k$24385$6Dw7t g$end$24386$6Dw7t)
        ((case-lambda
           ((g$d$24387$6Dw7t)
            (begin
              (g$bytevector-copy!$24184$6Dw7t
                g$bv$24384$6Dw7t
                g$k$24385$6Dw7t
                g$d$24387$6Dw7t
                '0
                '4)
              (if (eq? g$end$24386$6Dw7t 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$24387$6Dw7t)
                (void))
              (g$single->double$24207$6Dw7t
                (clr-call-internal
                  'System.BitConverter
                  'ToSingle
                  '()
                  g$d$24387$6Dw7t
                  '0)))))
         (g$make-bytevector$24180$6Dw7t '4)))))
   (g$bytevector-ieee-double-ref$24209$6Dw7t
     g$bytevector-ieee-double-ref$24528$6Dw7t
     (case-lambda
       ((g$bv$24388$6Dw7t g$k$24389$6Dw7t g$end$24390$6Dw7t)
        ((case-lambda
           ((g$d$24391$6Dw7t)
            (begin
              (g$bytevector-copy!$24184$6Dw7t
                g$bv$24388$6Dw7t
                g$k$24389$6Dw7t
                g$d$24391$6Dw7t
                '0
                '8)
              (if (eq? g$end$24390$6Dw7t 'big)
                (clr-call-internal
                  'System.Array
                  'Reverse
                  '()
                  g$d$24391$6Dw7t)
                (void))
              (clr-call-internal
                'System.BitConverter
                'ToDouble
                '()
                g$d$24391$6Dw7t
                '0))))
         (g$make-bytevector$24180$6Dw7t '8)))))
   (g$bytevector-ieee-single-set!$24210$6Dw7t
     g$bytevector-ieee-single-set!$24529$6Dw7t
     (case-lambda
       ((g$bv$24392$6Dw7t
          g$k$24393$6Dw7t
          g$value$24394$6Dw7t
          g$end$24395$6Dw7t)
        ((case-lambda
           ((g$value$24396$6Dw7t)
            ((case-lambda
               ((g$data$24397$6Dw7t)
                (begin
                  (if (eq? g$end$24395$6Dw7t 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$24397$6Dw7t)
                    (void))
                  (g$bytevector-copy!$24184$6Dw7t
                    g$data$24397$6Dw7t
                    '0
                    g$bv$24392$6Dw7t
                    g$k$24393$6Dw7t
                    '4))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Single)"
               '()
               g$value$24396$6Dw7t))))
         (clr-call-internal
           'System.Convert
           '"ToSingle(Object)"
           '()
           g$value$24394$6Dw7t)))))
   (g$bytevector-ieee-double-set!$24211$6Dw7t
     g$bytevector-ieee-double-set!$24530$6Dw7t
     (case-lambda
       ((g$bv$24398$6Dw7t
          g$k$24399$6Dw7t
          g$value$24400$6Dw7t
          g$end$24401$6Dw7t)
        ((case-lambda
           ((g$value$24402$6Dw7t)
            ((case-lambda
               ((g$data$24403$6Dw7t)
                (begin
                  (if (eq? g$end$24401$6Dw7t 'big)
                    (clr-call-internal
                      'System.Array
                      'Reverse
                      '()
                      g$data$24403$6Dw7t)
                    (void))
                  (g$bytevector-copy!$24184$6Dw7t
                    g$data$24403$6Dw7t
                    '0
                    g$bv$24398$6Dw7t
                    g$k$24399$6Dw7t
                    '8))))
             (clr-call-internal
               'System.BitConverter
               '"GetBytes(Double)"
               '()
               g$value$24402$6Dw7t))))
         (clr-call-internal
           'System.Convert
           '"ToDouble(Object)"
           '()
           g$value$24400$6Dw7t)))))
   (g$bytevector-u16-ref$24212$6Dw7t
     g$bytevector-u16-ref$24531$6Dw7t
     (case-lambda
       ((g$bytevector$24404$6Dw7t
          g$k$24405$6Dw7t
          g$endianness$24406$6Dw7t)
        (g$bytevector-uint-ref$24192$6Dw7t
          g$bytevector$24404$6Dw7t
          g$k$24405$6Dw7t
          g$endianness$24406$6Dw7t
          '2))))
   (g$bytevector-s16-ref$24213$6Dw7t
     g$bytevector-s16-ref$24532$6Dw7t
     (case-lambda
       ((g$bytevector$24407$6Dw7t
          g$k$24408$6Dw7t
          g$endianness$24409$6Dw7t)
        (g$bytevector-sint-ref$24193$6Dw7t
          g$bytevector$24407$6Dw7t
          g$k$24408$6Dw7t
          g$endianness$24409$6Dw7t
          '2))))
   (g$bytevector-u16-native-ref$24214$6Dw7t
     g$bytevector-u16-native-ref$24533$6Dw7t
     (case-lambda
       ((g$bytevector$24410$6Dw7t g$k$24411$6Dw7t)
        (g$bytevector-uint-ref$24192$6Dw7t
          g$bytevector$24410$6Dw7t
          g$k$24411$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '2))))
   (g$bytevector-s16-native-ref$24215$6Dw7t
     g$bytevector-s16-native-ref$24534$6Dw7t
     (case-lambda
       ((g$bytevector$24412$6Dw7t g$k$24413$6Dw7t)
        (g$bytevector-sint-ref$24193$6Dw7t
          g$bytevector$24412$6Dw7t
          g$k$24413$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '2))))
   (g$bytevector-u16-set!$24216$6Dw7t
     g$bytevector-u16-set!$24535$6Dw7t
     (case-lambda
       ((g$bytevector$24414$6Dw7t
          g$k$24415$6Dw7t
          g$n$24416$6Dw7t
          g$endianness$24417$6Dw7t)
        (g$bytevector-uint-set!$24194$6Dw7t
          g$bytevector$24414$6Dw7t
          g$k$24415$6Dw7t
          g$n$24416$6Dw7t
          g$endianness$24417$6Dw7t
          '2))))
   (g$bytevector-s16-set!$24217$6Dw7t
     g$bytevector-s16-set!$24536$6Dw7t
     (case-lambda
       ((g$bytevector$24418$6Dw7t
          g$k$24419$6Dw7t
          g$n$24420$6Dw7t
          g$endianness$24421$6Dw7t)
        (g$bytevector-sint-set!$24195$6Dw7t
          g$bytevector$24418$6Dw7t
          g$k$24419$6Dw7t
          g$n$24420$6Dw7t
          g$endianness$24421$6Dw7t
          '2))))
   (g$bytevector-u16-native-set!$24218$6Dw7t
     g$bytevector-u16-native-set!$24537$6Dw7t
     (case-lambda
       ((g$bytevector$24422$6Dw7t g$k$24423$6Dw7t g$n$24424$6Dw7t)
        (g$bytevector-uint-set!$24194$6Dw7t
          g$bytevector$24422$6Dw7t
          g$k$24423$6Dw7t
          g$n$24424$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '2))))
   (g$bytevector-s16-native-set!$24219$6Dw7t
     g$bytevector-s16-native-set!$24538$6Dw7t
     (case-lambda
       ((g$bytevector$24425$6Dw7t g$k$24426$6Dw7t g$n$24427$6Dw7t)
        (g$bytevector-sint-set!$24195$6Dw7t
          g$bytevector$24425$6Dw7t
          g$k$24426$6Dw7t
          g$n$24427$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '2))))
   (g$bytevector-u32-ref$24220$6Dw7t
     g$bytevector-u32-ref$24539$6Dw7t
     (case-lambda
       ((g$bytevector$24428$6Dw7t
          g$k$24429$6Dw7t
          g$endianness$24430$6Dw7t)
        (g$bytevector-uint-ref$24192$6Dw7t
          g$bytevector$24428$6Dw7t
          g$k$24429$6Dw7t
          g$endianness$24430$6Dw7t
          '4))))
   (g$bytevector-s32-ref$24221$6Dw7t
     g$bytevector-s32-ref$24540$6Dw7t
     (case-lambda
       ((g$bytevector$24431$6Dw7t
          g$k$24432$6Dw7t
          g$endianness$24433$6Dw7t)
        (g$bytevector-sint-ref$24193$6Dw7t
          g$bytevector$24431$6Dw7t
          g$k$24432$6Dw7t
          g$endianness$24433$6Dw7t
          '4))))
   (g$bytevector-u32-native-ref$24222$6Dw7t
     g$bytevector-u32-native-ref$24541$6Dw7t
     (case-lambda
       ((g$bytevector$24434$6Dw7t g$k$24435$6Dw7t)
        (g$bytevector-uint-ref$24192$6Dw7t
          g$bytevector$24434$6Dw7t
          g$k$24435$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '4))))
   (g$bytevector-s32-native-ref$24223$6Dw7t
     g$bytevector-s32-native-ref$24542$6Dw7t
     (case-lambda
       ((g$bytevector$24436$6Dw7t g$k$24437$6Dw7t)
        (g$bytevector-sint-ref$24193$6Dw7t
          g$bytevector$24436$6Dw7t
          g$k$24437$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '4))))
   (g$bytevector-u32-set!$24224$6Dw7t
     g$bytevector-u32-set!$24543$6Dw7t
     (case-lambda
       ((g$bytevector$24438$6Dw7t
          g$k$24439$6Dw7t
          g$n$24440$6Dw7t
          g$endianness$24441$6Dw7t)
        (g$bytevector-uint-set!$24194$6Dw7t
          g$bytevector$24438$6Dw7t
          g$k$24439$6Dw7t
          g$n$24440$6Dw7t
          g$endianness$24441$6Dw7t
          '4))))
   (g$bytevector-s32-set!$24225$6Dw7t
     g$bytevector-s32-set!$24544$6Dw7t
     (case-lambda
       ((g$bytevector$24442$6Dw7t
          g$k$24443$6Dw7t
          g$n$24444$6Dw7t
          g$endianness$24445$6Dw7t)
        (g$bytevector-sint-set!$24195$6Dw7t
          g$bytevector$24442$6Dw7t
          g$k$24443$6Dw7t
          g$n$24444$6Dw7t
          g$endianness$24445$6Dw7t
          '4))))
   (g$bytevector-u32-native-set!$24226$6Dw7t
     g$bytevector-u32-native-set!$24545$6Dw7t
     (case-lambda
       ((g$bytevector$24446$6Dw7t g$k$24447$6Dw7t g$n$24448$6Dw7t)
        (g$bytevector-uint-set!$24194$6Dw7t
          g$bytevector$24446$6Dw7t
          g$k$24447$6Dw7t
          g$n$24448$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '4))))
   (g$bytevector-s32-native-set!$24227$6Dw7t
     g$bytevector-s32-native-set!$24546$6Dw7t
     (case-lambda
       ((g$bytevector$24449$6Dw7t g$k$24450$6Dw7t g$n$24451$6Dw7t)
        (g$bytevector-sint-set!$24195$6Dw7t
          g$bytevector$24449$6Dw7t
          g$k$24450$6Dw7t
          g$n$24451$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '4))))
   (g$bytevector-u64-ref$24228$6Dw7t
     g$bytevector-u64-ref$24547$6Dw7t
     (case-lambda
       ((g$bytevector$24452$6Dw7t
          g$k$24453$6Dw7t
          g$endianness$24454$6Dw7t)
        (g$bytevector-uint-ref$24192$6Dw7t
          g$bytevector$24452$6Dw7t
          g$k$24453$6Dw7t
          g$endianness$24454$6Dw7t
          '8))))
   (g$bytevector-s64-ref$24229$6Dw7t
     g$bytevector-s64-ref$24548$6Dw7t
     (case-lambda
       ((g$bytevector$24455$6Dw7t
          g$k$24456$6Dw7t
          g$endianness$24457$6Dw7t)
        (g$bytevector-sint-ref$24193$6Dw7t
          g$bytevector$24455$6Dw7t
          g$k$24456$6Dw7t
          g$endianness$24457$6Dw7t
          '8))))
   (g$bytevector-u64-native-ref$24230$6Dw7t
     g$bytevector-u64-native-ref$24549$6Dw7t
     (case-lambda
       ((g$bytevector$24458$6Dw7t g$k$24459$6Dw7t)
        (g$bytevector-uint-ref$24192$6Dw7t
          g$bytevector$24458$6Dw7t
          g$k$24459$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '8))))
   (g$bytevector-s64-native-ref$24231$6Dw7t
     g$bytevector-s64-native-ref$24550$6Dw7t
     (case-lambda
       ((g$bytevector$24460$6Dw7t g$k$24461$6Dw7t)
        (g$bytevector-sint-ref$24193$6Dw7t
          g$bytevector$24460$6Dw7t
          g$k$24461$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '8))))
   (g$bytevector-u64-set!$24232$6Dw7t
     g$bytevector-u64-set!$24551$6Dw7t
     (case-lambda
       ((g$bytevector$24462$6Dw7t
          g$k$24463$6Dw7t
          g$n$24464$6Dw7t
          g$endianness$24465$6Dw7t)
        (g$bytevector-uint-set!$24194$6Dw7t
          g$bytevector$24462$6Dw7t
          g$k$24463$6Dw7t
          g$n$24464$6Dw7t
          g$endianness$24465$6Dw7t
          '8))))
   (g$bytevector-s64-set!$24233$6Dw7t
     g$bytevector-s64-set!$24552$6Dw7t
     (case-lambda
       ((g$bytevector$24466$6Dw7t
          g$k$24467$6Dw7t
          g$n$24468$6Dw7t
          g$endianness$24469$6Dw7t)
        (g$bytevector-sint-set!$24195$6Dw7t
          g$bytevector$24466$6Dw7t
          g$k$24467$6Dw7t
          g$n$24468$6Dw7t
          g$endianness$24469$6Dw7t
          '8))))
   (g$bytevector-u64-native-set!$24234$6Dw7t
     g$bytevector-u64-native-set!$24553$6Dw7t
     (case-lambda
       ((g$bytevector$24470$6Dw7t g$k$24471$6Dw7t g$n$24472$6Dw7t)
        (g$bytevector-uint-set!$24194$6Dw7t
          g$bytevector$24470$6Dw7t
          g$k$24471$6Dw7t
          g$n$24472$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '8))))
   (g$bytevector-s64-native-set!$24235$6Dw7t
     g$bytevector-s64-native-set!$24554$6Dw7t
     (case-lambda
       ((g$bytevector$24473$6Dw7t g$k$24474$6Dw7t g$n$24475$6Dw7t)
        (g$bytevector-sint-set!$24195$6Dw7t
          g$bytevector$24473$6Dw7t
          g$k$24474$6Dw7t
          g$n$24475$6Dw7t
          (g$native-endianness$24167$6Dw7t)
          '8))))
   (g$bytevector-ieee-single-native-ref$24236$6Dw7t
     g$bytevector-ieee-single-native-ref$24555$6Dw7t
     (case-lambda
       ((g$bytevector$24476$6Dw7t g$k$24477$6Dw7t)
        (if (not (g$zero?$25060$6Dw7t
                   (g$mod$24030$6Dw7t g$k$24477$6Dw7t '4)))
          (g$assertion-violation$20490$6Dw7t
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$24477$6Dw7t)
          (g$bytevector-ieee-single-ref$24208$6Dw7t
            g$bytevector$24476$6Dw7t
            g$k$24477$6Dw7t
            (g$native-endianness$24167$6Dw7t))))))
   (g$bytevector-ieee-double-native-ref$24237$6Dw7t
     g$bytevector-ieee-double-native-ref$24556$6Dw7t
     (case-lambda
       ((g$bytevector$24478$6Dw7t g$k$24479$6Dw7t)
        (if (not (g$zero?$25060$6Dw7t
                   (g$mod$24030$6Dw7t g$k$24479$6Dw7t '8)))
          (g$assertion-violation$20490$6Dw7t
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$24479$6Dw7t)
          (g$bytevector-ieee-double-ref$24209$6Dw7t
            g$bytevector$24478$6Dw7t
            g$k$24479$6Dw7t
            (g$native-endianness$24167$6Dw7t))))))
   (g$bytevector-ieee-single-native-set!$24238$6Dw7t
     g$bytevector-ieee-single-native-set!$24557$6Dw7t
     (case-lambda
       ((g$bytevector$24480$6Dw7t g$k$24481$6Dw7t g$x$24482$6Dw7t)
        (if (not (g$zero?$25060$6Dw7t
                   (g$mod$24030$6Dw7t g$k$24481$6Dw7t '4)))
          (g$assertion-violation$20490$6Dw7t
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$24481$6Dw7t)
          (g$bytevector-ieee-single-set!$24210$6Dw7t
            g$bytevector$24480$6Dw7t
            g$k$24481$6Dw7t
            g$x$24482$6Dw7t
            (g$native-endianness$24167$6Dw7t))))))
   (g$bytevector-ieee-double-native-set!$24239$6Dw7t
     g$bytevector-ieee-double-native-set!$24558$6Dw7t
     (case-lambda
       ((g$bytevector$24483$6Dw7t g$k$24484$6Dw7t g$x$24485$6Dw7t)
        (if (not (g$zero?$25060$6Dw7t
                   (g$mod$24030$6Dw7t g$k$24484$6Dw7t '8)))
          (g$assertion-violation$20490$6Dw7t
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$24484$6Dw7t)
          (g$bytevector-ieee-double-set!$24211$6Dw7t
            g$bytevector$24483$6Dw7t
            g$k$24484$6Dw7t
            g$x$24485$6Dw7t
            (g$native-endianness$24167$6Dw7t)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme numbers)
  ((g$bignum?$24559$6Dw7t
     g$bignum?$25021$6Dw7t
     (case-lambda
       ((g$obj$24772$6Dw7t)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$24772$6Dw7t))))
   (g$rectnum?$24560$6Dw7t
     g$rectnum?$25022$6Dw7t
     (case-lambda
       ((g$obj$24773$6Dw7t)
        (clr-is-internal
          'IronScheme.Runtime.ComplexFraction
          g$obj$24773$6Dw7t))))
   (g$make-rectnum$24561$6Dw7t
     g$make-rectnum$25023$6Dw7t
     (case-lambda
       ((g$r1$24774$6Dw7t g$r2$24775$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'Make
          '()
          g$r1$24774$6Dw7t
          g$r2$24775$6Dw7t))))
   (g$rectnum-imag-part$24562$6Dw7t
     g$rectnum-imag-part$25024$6Dw7t
     (case-lambda
       ((g$c$24776$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Imag
          g$c$24776$6Dw7t))))
   (g$rectnum-real-part$24563$6Dw7t
     g$rectnum-real-part$25025$6Dw7t
     (case-lambda
       ((g$c$24777$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'get_Real
          g$c$24777$6Dw7t))))
   (g$ratnum?$24564$6Dw7t
     g$ratnum?$25026$6Dw7t
     (case-lambda
       ((g$obj$24778$6Dw7t)
        (clr-is-internal
          'IronScheme.Runtime.Fraction
          g$obj$24778$6Dw7t))))
   (g$ratnum-denominator$24565$6Dw7t
     g$ratnum-denominator$25027$6Dw7t
     (case-lambda
       ((g$rat$24779$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Denominator
          g$rat$24779$6Dw7t))))
   (g$ratnum-numerator$24566$6Dw7t
     g$ratnum-numerator$25028$6Dw7t
     (case-lambda
       ((g$rat$24780$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'get_Numerator
          g$rat$24780$6Dw7t))))
   (g$complexnum?$24567$6Dw7t
     g$complexnum?$25029$6Dw7t
     (case-lambda
       ((g$obj$24781$6Dw7t)
        (clr-is-internal
          'Microsoft.Scripting.Math.Complex64
          g$obj$24781$6Dw7t))))
   (g$make-complexnum$24568$6Dw7t
     g$make-complexnum$25030$6Dw7t
     (case-lambda
       ((g$r1$24782$6Dw7t g$r2$24783$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'Make
          '()
          g$r1$24782$6Dw7t
          g$r2$24783$6Dw7t))))
   (g$complexnum-imag-part$24569$6Dw7t
     g$complexnum-imag-part$25031$6Dw7t
     (case-lambda
       ((g$c$24784$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Imag
          g$c$24784$6Dw7t))))
   (g$complexnum-real-part$24570$6Dw7t
     g$complexnum-real-part$25032$6Dw7t
     (case-lambda
       ((g$c$24785$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.Complex64
          'get_Real
          g$c$24785$6Dw7t))))
   (g$bignum/$24571$6Dw7t
     g$bignum/$25033$6Dw7t
     (case-lambda
       ((g$a$24786$6Dw7t g$b$24787$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Division
          '()
          g$a$24786$6Dw7t
          g$b$24787$6Dw7t))))
   (g$bignum%$24572$6Dw7t
     g$bignum%$25034$6Dw7t
     (case-lambda
       ((g$a$24788$6Dw7t g$b$24789$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'op_Modulus
          '()
          g$a$24788$6Dw7t
          g$b$24789$6Dw7t))))
   (g$bignum->fixnum$24573$6Dw7t
     g$bignum->fixnum$25035$6Dw7t
     (case-lambda
       ((g$b$24790$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          'ToInt32
          g$b$24790$6Dw7t))))
   (g$flonum->ratnum$24574$6Dw7t
     g$flonum->ratnum$25036$6Dw7t
     (case-lambda
       ((g$f$24791$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          '"op_Implicit(System.Double)"
          '()
          g$f$24791$6Dw7t))))
   (g$ratnum->flonum$24575$6Dw7t
     g$ratnum->flonum$25037$6Dw7t
     (case-lambda
       ((g$r$24792$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.Fraction
          'ToDouble
          g$r$24792$6Dw7t
          '()))))
   (g$fixnum->bignum$24576$6Dw7t
     g$fixnum->bignum$25038$6Dw7t
     (case-lambda
       ((g$f$24793$6Dw7t)
        (clr-call-internal
          'Microsoft.Scripting.Math.BigInteger
          '"Create(System.Int32)"
          '()
          g$f$24793$6Dw7t))))
   (g$real->complexnum$24577$6Dw7t
     g$real->complexnum$25039$6Dw7t
     (case-lambda
       ((g$num$24794$6Dw7t)
        (if (g$complexnum?$24567$6Dw7t g$num$24794$6Dw7t)
          g$num$24794$6Dw7t
          (g$make-complexnum$24568$6Dw7t
            (g$inexact$24601$6Dw7t g$num$24794$6Dw7t)
            '0.0)))))
   (g$complexnum->rectnum$24578$6Dw7t
     g$complexnum->rectnum$25040$6Dw7t
     (case-lambda
       ((g$num$24795$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          '"op_Implicit(Microsoft.Scripting.Math.Complex64)"
          '()
          g$num$24795$6Dw7t))))
   (g$rectnum->complexnum$24579$6Dw7t
     g$rectnum->complexnum$25041$6Dw7t
     (case-lambda
       ((g$num$24796$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ComplexFraction
          'ToComplex64
          g$num$24796$6Dw7t))))
   (g$->fixnum$24580$6Dw7t
     g$->fixnum$25042$6Dw7t
     (case-lambda
       ((g$num$24797$6Dw7t)
        (if (g$fixnum?$24010$6Dw7t g$num$24797$6Dw7t)
          g$num$24797$6Dw7t
          (clr-call-internal
            'System.Convert
            '"ToInt32(Object)"
            '()
            g$num$24797$6Dw7t)))))
   (g$->ratnum$24581$6Dw7t
     g$->ratnum$25043$6Dw7t
     (case-lambda
       ((g$num$24798$6Dw7t)
        (if (g$ratnum?$24564$6Dw7t g$num$24798$6Dw7t)
          g$num$24798$6Dw7t
          (if (g$real?$24592$6Dw7t g$num$24798$6Dw7t)
            (g$flonum->ratnum$24574$6Dw7t
              (g$real->flonum$24583$6Dw7t g$num$24798$6Dw7t))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    '->ratnum
                    '"not a real"
                    g$num$24798$6Dw7t))))))))))
   (g$->bignum$24582$6Dw7t
     g$->bignum$25044$6Dw7t
     (case-lambda
       ((g$num$24799$6Dw7t)
        (if (g$bignum?$24559$6Dw7t g$num$24799$6Dw7t)
          g$num$24799$6Dw7t
          (if (g$fixnum?$24010$6Dw7t g$num$24799$6Dw7t)
            (g$fixnum->bignum$24576$6Dw7t g$num$24799$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    '->bignum
                    '"not an integer"
                    g$num$24799$6Dw7t))))))))))
   (g$real->flonum$24583$6Dw7t
     g$real->flonum$25045$6Dw7t
     (case-lambda
       ((g$x$24800$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x$24800$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'real->flonum
              '"not a real"
              g$x$24800$6Dw7t)
            (void))
          (clr-call-internal
            'System.Convert
            '"ToDouble(System.Object)"
            '()
            g$x$24800$6Dw7t)))))
   (g$fixnum->flonum$24584$6Dw7t
     g$fixnum->flonum$25046$6Dw7t
     (case-lambda
       ((g$x$24801$6Dw7t)
        (begin
          (if (not (g$fixnum?$24010$6Dw7t g$x$24801$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fixnum->flonum
              '"not a fixnum"
              g$x$24801$6Dw7t)
            (void))
          (clr-cast-internal
            'System.Double
            (clr-cast-internal 'System.Int32 g$x$24801$6Dw7t))))))
   (g$number?$24585$6Dw7t
     g$number?$25047$6Dw7t
     (case-lambda
       ((g$obj$24802$6Dw7t)
        ((case-lambda
           ((g$t$24803$6Dw7t)
            (if g$t$24803$6Dw7t
              g$t$24803$6Dw7t
              ((case-lambda
                 ((g$t$24804$6Dw7t)
                  (if g$t$24804$6Dw7t
                    g$t$24804$6Dw7t
                    ((case-lambda
                       ((g$t$24805$6Dw7t)
                        (if g$t$24805$6Dw7t
                          g$t$24805$6Dw7t
                          ((case-lambda
                             ((g$t$24806$6Dw7t)
                              (if g$t$24806$6Dw7t
                                g$t$24806$6Dw7t
                                ((case-lambda
                                   ((g$t$24807$6Dw7t)
                                    (if g$t$24807$6Dw7t
                                      g$t$24807$6Dw7t
                                      (begin
                                        '#f
                                        (g$rectnum?$24560$6Dw7t
                                          g$obj$24802$6Dw7t)))))
                                 (g$complexnum?$24567$6Dw7t
                                   g$obj$24802$6Dw7t)))))
                           (g$ratnum?$24564$6Dw7t g$obj$24802$6Dw7t)))))
                     (g$bignum?$24559$6Dw7t g$obj$24802$6Dw7t)))))
               (g$flonum?$24011$6Dw7t g$obj$24802$6Dw7t)))))
         (g$fixnum?$24010$6Dw7t g$obj$24802$6Dw7t)))))
   (g$nan?$24586$6Dw7t
     g$nan?$25048$6Dw7t
     (case-lambda
       ((g$num$24808$6Dw7t)
        (if ((case-lambda
               ((g$t$24809$6Dw7t)
                (if g$t$24809$6Dw7t
                  g$t$24809$6Dw7t
                  ((case-lambda
                     ((g$t$24810$6Dw7t)
                      (if g$t$24810$6Dw7t
                        g$t$24810$6Dw7t
                        ((case-lambda
                           ((g$t$24811$6Dw7t)
                            (if g$t$24811$6Dw7t
                              g$t$24811$6Dw7t
                              (begin
                                '#f
                                (g$rectnum?$24560$6Dw7t
                                  g$num$24808$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$num$24808$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$num$24808$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$num$24808$6Dw7t))
          '#f
          (if (g$flonum?$24011$6Dw7t g$num$24808$6Dw7t)
            (g$flnan?$27061$6Dw7t g$num$24808$6Dw7t)
            (if (g$complexnum?$24567$6Dw7t g$num$24808$6Dw7t)
              ((case-lambda
                 ((g$t$24812$6Dw7t)
                  (if g$t$24812$6Dw7t
                    g$t$24812$6Dw7t
                    (begin
                      '#f
                      (g$flnan?$27061$6Dw7t
                        (g$complexnum-imag-part$24569$6Dw7t
                          g$num$24808$6Dw7t))))))
               (g$flnan?$27061$6Dw7t
                 (g$complexnum-real-part$24570$6Dw7t
                   g$num$24808$6Dw7t)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'nan?
                      '"not a number"
                      g$num$24808$6Dw7t)))))))))))
   (g$finite?$24587$6Dw7t
     g$finite?$25049$6Dw7t
     (case-lambda
       ((g$num$24813$6Dw7t)
        (if ((case-lambda
               ((g$t$24814$6Dw7t)
                (if g$t$24814$6Dw7t
                  g$t$24814$6Dw7t
                  ((case-lambda
                     ((g$t$24815$6Dw7t)
                      (if g$t$24815$6Dw7t
                        g$t$24815$6Dw7t
                        ((case-lambda
                           ((g$t$24816$6Dw7t)
                            (if g$t$24816$6Dw7t
                              g$t$24816$6Dw7t
                              (begin
                                '#f
                                (g$rectnum?$24560$6Dw7t
                                  g$num$24813$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$num$24813$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$num$24813$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$num$24813$6Dw7t))
          '#t
          (if (g$flonum?$24011$6Dw7t g$num$24813$6Dw7t)
            (g$flfinite?$27058$6Dw7t g$num$24813$6Dw7t)
            (if (g$complexnum?$24567$6Dw7t g$num$24813$6Dw7t)
              (if (g$flfinite?$27058$6Dw7t
                    (g$complexnum-real-part$24570$6Dw7t
                      g$num$24813$6Dw7t))
                (begin
                  '#f
                  (g$flfinite?$27058$6Dw7t
                    (g$complexnum-imag-part$24569$6Dw7t
                      g$num$24813$6Dw7t)))
                '#f)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'finite?
                      '"not a number"
                      g$num$24813$6Dw7t)))))))))))
   (g$infinite?$24588$6Dw7t
     g$infinite?$25050$6Dw7t
     (case-lambda
       ((g$num$24817$6Dw7t)
        (if ((case-lambda
               ((g$t$24818$6Dw7t)
                (if g$t$24818$6Dw7t
                  g$t$24818$6Dw7t
                  ((case-lambda
                     ((g$t$24819$6Dw7t)
                      (if g$t$24819$6Dw7t
                        g$t$24819$6Dw7t
                        ((case-lambda
                           ((g$t$24820$6Dw7t)
                            (if g$t$24820$6Dw7t
                              g$t$24820$6Dw7t
                              (begin
                                '#f
                                (g$rectnum?$24560$6Dw7t
                                  g$num$24817$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$num$24817$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$num$24817$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$num$24817$6Dw7t))
          '#f
          (if (g$flonum?$24011$6Dw7t g$num$24817$6Dw7t)
            (g$flinfinite?$27060$6Dw7t g$num$24817$6Dw7t)
            (if (g$complexnum?$24567$6Dw7t g$num$24817$6Dw7t)
              ((case-lambda
                 ((g$t$24821$6Dw7t)
                  (if g$t$24821$6Dw7t
                    g$t$24821$6Dw7t
                    (begin
                      '#f
                      (g$flinfinite?$27060$6Dw7t
                        (g$complexnum-imag-part$24569$6Dw7t
                          g$num$24817$6Dw7t))))))
               (g$flinfinite?$27060$6Dw7t
                 (g$complexnum-real-part$24570$6Dw7t
                   g$num$24817$6Dw7t)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'infinite?
                      '"not a number"
                      g$num$24817$6Dw7t)))))))))))
   (g$exact?$24589$6Dw7t
     g$exact?$25051$6Dw7t
     (case-lambda
       ((g$obj$24822$6Dw7t)
        (if ((case-lambda
               ((g$t$24823$6Dw7t)
                (if g$t$24823$6Dw7t
                  g$t$24823$6Dw7t
                  ((case-lambda
                     ((g$t$24824$6Dw7t)
                      (if g$t$24824$6Dw7t
                        g$t$24824$6Dw7t
                        ((case-lambda
                           ((g$t$24825$6Dw7t)
                            (if g$t$24825$6Dw7t
                              g$t$24825$6Dw7t
                              (begin
                                '#f
                                (g$rectnum?$24560$6Dw7t
                                  g$obj$24822$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$obj$24822$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$obj$24822$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24822$6Dw7t))
          '#t
          (if ((case-lambda
                 ((g$t$24826$6Dw7t)
                  (if g$t$24826$6Dw7t
                    g$t$24826$6Dw7t
                    (begin
                      '#f
                      (g$complexnum?$24567$6Dw7t g$obj$24822$6Dw7t)))))
               (g$flonum?$24011$6Dw7t g$obj$24822$6Dw7t))
            '#f
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'exact
                    '"not a number"
                    g$obj$24822$6Dw7t))))))))))
   (g$inexact?$24590$6Dw7t
     g$inexact?$25052$6Dw7t
     (case-lambda
       ((g$obj$24827$6Dw7t)
        (if ((case-lambda
               ((g$t$24828$6Dw7t)
                (if g$t$24828$6Dw7t
                  g$t$24828$6Dw7t
                  ((case-lambda
                     ((g$t$24829$6Dw7t)
                      (if g$t$24829$6Dw7t
                        g$t$24829$6Dw7t
                        ((case-lambda
                           ((g$t$24830$6Dw7t)
                            (if g$t$24830$6Dw7t
                              g$t$24830$6Dw7t
                              (begin
                                '#f
                                (g$rectnum?$24560$6Dw7t
                                  g$obj$24827$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$obj$24827$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$obj$24827$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24827$6Dw7t))
          '#f
          (if ((case-lambda
                 ((g$t$24831$6Dw7t)
                  (if g$t$24831$6Dw7t
                    g$t$24831$6Dw7t
                    (begin
                      '#f
                      (g$complexnum?$24567$6Dw7t g$obj$24827$6Dw7t)))))
               (g$flonum?$24011$6Dw7t g$obj$24827$6Dw7t))
            '#t
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'inexact
                    '"not a number"
                    g$obj$24827$6Dw7t))))))))))
   (g$complex?$24591$6Dw7t
     g$complex?$25053$6Dw7t
     (case-lambda
       ((g$obj$24832$6Dw7t) (g$number?$24585$6Dw7t g$obj$24832$6Dw7t))))
   (g$real?$24592$6Dw7t
     g$real?$25054$6Dw7t
     (case-lambda
       ((g$obj$24833$6Dw7t)
        (if ((case-lambda
               ((g$t$24834$6Dw7t)
                (if g$t$24834$6Dw7t
                  g$t$24834$6Dw7t
                  ((case-lambda
                     ((g$t$24835$6Dw7t)
                      (if g$t$24835$6Dw7t
                        g$t$24835$6Dw7t
                        ((case-lambda
                           ((g$t$24836$6Dw7t)
                            (if g$t$24836$6Dw7t
                              g$t$24836$6Dw7t
                              (begin
                                '#f
                                (g$flonum?$24011$6Dw7t
                                  g$obj$24833$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$obj$24833$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$obj$24833$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24833$6Dw7t))
          '#t
          (if ((case-lambda
                 ((g$t$24837$6Dw7t)
                  (if g$t$24837$6Dw7t
                    g$t$24837$6Dw7t
                    (begin
                      '#f
                      (g$rectnum?$24560$6Dw7t g$obj$24833$6Dw7t)))))
               (g$complexnum?$24567$6Dw7t g$obj$24833$6Dw7t))
            ((case-lambda
               ((g$i$24838$6Dw7t)
                (if (g$zero?$24598$6Dw7t g$i$24838$6Dw7t)
                  (begin '#f (g$exact?$24589$6Dw7t g$i$24838$6Dw7t))
                  '#f)))
             (g$imag-part$24718$6Dw7t g$obj$24833$6Dw7t))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$rational?$24593$6Dw7t
     g$rational?$25055$6Dw7t
     (case-lambda
       ((g$obj$24839$6Dw7t)
        (if ((case-lambda
               ((g$t$24840$6Dw7t)
                (if g$t$24840$6Dw7t
                  g$t$24840$6Dw7t
                  ((case-lambda
                     ((g$t$24841$6Dw7t)
                      (if g$t$24841$6Dw7t
                        g$t$24841$6Dw7t
                        (begin
                          '#f
                          (g$ratnum?$24564$6Dw7t g$obj$24839$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$obj$24839$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24839$6Dw7t))
          '#t
          (if (if ((case-lambda
                     ((g$t$24842$6Dw7t)
                      (if g$t$24842$6Dw7t
                        g$t$24842$6Dw7t
                        ((case-lambda
                           ((g$t$24843$6Dw7t)
                            (if g$t$24843$6Dw7t
                              g$t$24843$6Dw7t
                              (begin
                                '#f
                                (g$flonum?$24011$6Dw7t
                                  g$obj$24839$6Dw7t)))))
                         (g$rectnum?$24560$6Dw7t g$obj$24839$6Dw7t)))))
                   (g$complexnum?$24567$6Dw7t g$obj$24839$6Dw7t))
                (if (g$finite?$24587$6Dw7t g$obj$24839$6Dw7t)
                  (begin
                    '#f
                    (not (g$nan?$24586$6Dw7t g$obj$24839$6Dw7t)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$24844$6Dw7t)
                (if (g$exact?$24589$6Dw7t g$i$24844$6Dw7t)
                  (begin '#f (g$zero?$24598$6Dw7t g$i$24844$6Dw7t))
                  '#f)))
             (g$imag-part$24718$6Dw7t g$obj$24839$6Dw7t))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$integer?$24594$6Dw7t
     g$integer?$25056$6Dw7t
     (case-lambda
       ((g$obj$24845$6Dw7t)
        (if ((case-lambda
               ((g$t$24846$6Dw7t)
                (if g$t$24846$6Dw7t
                  g$t$24846$6Dw7t
                  (begin
                    '#f
                    (g$bignum?$24559$6Dw7t g$obj$24845$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24845$6Dw7t))
          '#t
          (if (if ((case-lambda
                     ((g$t$24847$6Dw7t)
                      (if g$t$24847$6Dw7t
                        g$t$24847$6Dw7t
                        ((case-lambda
                           ((g$t$24848$6Dw7t)
                            (if g$t$24848$6Dw7t
                              g$t$24848$6Dw7t
                              ((case-lambda
                                 ((g$t$24849$6Dw7t)
                                  (if g$t$24849$6Dw7t
                                    g$t$24849$6Dw7t
                                    (begin
                                      '#f
                                      (g$flonum?$24011$6Dw7t
                                        g$obj$24845$6Dw7t)))))
                               (g$rectnum?$24560$6Dw7t
                                 g$obj$24845$6Dw7t)))))
                         (g$complexnum?$24567$6Dw7t
                           g$obj$24845$6Dw7t)))))
                   (g$ratnum?$24564$6Dw7t g$obj$24845$6Dw7t))
                (if (g$finite?$24587$6Dw7t g$obj$24845$6Dw7t)
                  (begin
                    '#f
                    (not (g$nan?$24586$6Dw7t g$obj$24845$6Dw7t)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$24850$6Dw7t)
                (if (g$exact?$24589$6Dw7t g$i$24850$6Dw7t)
                  (if (g$zero?$24598$6Dw7t g$i$24850$6Dw7t)
                    (begin
                      '#f
                      (g$=$24705$6Dw7t
                        (g$denominator$24716$6Dw7t
                          (g$real-part$24717$6Dw7t g$obj$24845$6Dw7t))
                        '1))
                    '#f)
                  '#f)))
             (g$imag-part$24718$6Dw7t g$obj$24845$6Dw7t))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$real-valued?$24595$6Dw7t
     g$real-valued?$25057$6Dw7t
     (case-lambda
       ((g$obj$24851$6Dw7t)
        (if ((case-lambda
               ((g$t$24852$6Dw7t)
                (if g$t$24852$6Dw7t
                  g$t$24852$6Dw7t
                  ((case-lambda
                     ((g$t$24853$6Dw7t)
                      (if g$t$24853$6Dw7t
                        g$t$24853$6Dw7t
                        ((case-lambda
                           ((g$t$24854$6Dw7t)
                            (if g$t$24854$6Dw7t
                              g$t$24854$6Dw7t
                              (begin
                                '#f
                                (g$flonum?$24011$6Dw7t
                                  g$obj$24851$6Dw7t)))))
                         (g$ratnum?$24564$6Dw7t g$obj$24851$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$obj$24851$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24851$6Dw7t))
          '#t
          (if ((case-lambda
                 ((g$t$24855$6Dw7t)
                  (if g$t$24855$6Dw7t
                    g$t$24855$6Dw7t
                    (begin
                      '#f
                      (g$rectnum?$24560$6Dw7t g$obj$24851$6Dw7t)))))
               (g$complexnum?$24567$6Dw7t g$obj$24851$6Dw7t))
            ((case-lambda
               ((g$i$24856$6Dw7t)
                (g$zero?$24598$6Dw7t g$i$24856$6Dw7t)))
             (g$imag-part$24718$6Dw7t g$obj$24851$6Dw7t))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$rational-valued?$24596$6Dw7t
     g$rational-valued?$25058$6Dw7t
     (case-lambda
       ((g$obj$24857$6Dw7t)
        (if ((case-lambda
               ((g$t$24858$6Dw7t)
                (if g$t$24858$6Dw7t
                  g$t$24858$6Dw7t
                  ((case-lambda
                     ((g$t$24859$6Dw7t)
                      (if g$t$24859$6Dw7t
                        g$t$24859$6Dw7t
                        (begin
                          '#f
                          (g$ratnum?$24564$6Dw7t g$obj$24857$6Dw7t)))))
                   (g$bignum?$24559$6Dw7t g$obj$24857$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24857$6Dw7t))
          '#t
          (if (if ((case-lambda
                     ((g$t$24860$6Dw7t)
                      (if g$t$24860$6Dw7t
                        g$t$24860$6Dw7t
                        ((case-lambda
                           ((g$t$24861$6Dw7t)
                            (if g$t$24861$6Dw7t
                              g$t$24861$6Dw7t
                              (begin
                                '#f
                                (g$flonum?$24011$6Dw7t
                                  g$obj$24857$6Dw7t)))))
                         (g$rectnum?$24560$6Dw7t g$obj$24857$6Dw7t)))))
                   (g$complexnum?$24567$6Dw7t g$obj$24857$6Dw7t))
                (if (g$finite?$24587$6Dw7t g$obj$24857$6Dw7t)
                  (begin
                    '#f
                    (not (g$nan?$24586$6Dw7t g$obj$24857$6Dw7t)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$24862$6Dw7t)
                (g$zero?$24598$6Dw7t g$i$24862$6Dw7t)))
             (g$imag-part$24718$6Dw7t g$obj$24857$6Dw7t))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$integer-valued?$24597$6Dw7t
     g$integer-valued?$25059$6Dw7t
     (case-lambda
       ((g$obj$24863$6Dw7t)
        (if ((case-lambda
               ((g$t$24864$6Dw7t)
                (if g$t$24864$6Dw7t
                  g$t$24864$6Dw7t
                  (begin
                    '#f
                    (g$bignum?$24559$6Dw7t g$obj$24863$6Dw7t)))))
             (g$fixnum?$24010$6Dw7t g$obj$24863$6Dw7t))
          '#t
          (if (if ((case-lambda
                     ((g$t$24865$6Dw7t)
                      (if g$t$24865$6Dw7t
                        g$t$24865$6Dw7t
                        ((case-lambda
                           ((g$t$24866$6Dw7t)
                            (if g$t$24866$6Dw7t
                              g$t$24866$6Dw7t
                              ((case-lambda
                                 ((g$t$24867$6Dw7t)
                                  (if g$t$24867$6Dw7t
                                    g$t$24867$6Dw7t
                                    (begin
                                      '#f
                                      (g$flonum?$24011$6Dw7t
                                        g$obj$24863$6Dw7t)))))
                               (g$rectnum?$24560$6Dw7t
                                 g$obj$24863$6Dw7t)))))
                         (g$complexnum?$24567$6Dw7t
                           g$obj$24863$6Dw7t)))))
                   (g$ratnum?$24564$6Dw7t g$obj$24863$6Dw7t))
                (if (g$finite?$24587$6Dw7t g$obj$24863$6Dw7t)
                  (begin
                    '#f
                    (not (g$nan?$24586$6Dw7t g$obj$24863$6Dw7t)))
                  '#f)
                '#f)
            ((case-lambda
               ((g$i$24868$6Dw7t)
                (if (g$zero?$24598$6Dw7t g$i$24868$6Dw7t)
                  (begin
                    '#f
                    (g$=$24705$6Dw7t
                      (g$denominator$24716$6Dw7t
                        (g$real-part$24717$6Dw7t g$obj$24863$6Dw7t))
                      '1))
                  '#f)))
             (g$imag-part$24718$6Dw7t g$obj$24863$6Dw7t))
            ((case-lambda (() (begin '#f '#f)))))))))
   (g$zero?$24598$6Dw7t
     g$zero?$25060$6Dw7t
     (case-lambda
       ((g$num$24869$6Dw7t)
        (begin
          (if (not (g$number?$24585$6Dw7t g$num$24869$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'zero?
              '"not a number"
              g$num$24869$6Dw7t)
            (void))
          (g$=$24705$6Dw7t g$num$24869$6Dw7t '0)))))
   (g$positive?$24599$6Dw7t
     g$positive?$25061$6Dw7t
     (case-lambda
       ((g$num$24870$6Dw7t)
        (begin
          (if (not (g$number?$24585$6Dw7t g$num$24870$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'positive?
              '"not a number"
              g$num$24870$6Dw7t)
            (void))
          (g$>$24708$6Dw7t g$num$24870$6Dw7t '0)))))
   (g$negative?$24600$6Dw7t
     g$negative?$25062$6Dw7t
     (case-lambda
       ((g$num$24871$6Dw7t)
        (begin
          (if (not (g$number?$24585$6Dw7t g$num$24871$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'negative?
              '"not a number"
              g$num$24871$6Dw7t)
            (void))
          (g$<$24706$6Dw7t g$num$24871$6Dw7t '0)))))
   (g$inexact$24601$6Dw7t
     g$inexact$25063$6Dw7t
     (case-lambda
       ((g$num$24872$6Dw7t)
        (if ((case-lambda
               ((g$t$24873$6Dw7t)
                (if g$t$24873$6Dw7t
                  g$t$24873$6Dw7t
                  (begin
                    '#f
                    (g$flonum?$24011$6Dw7t g$num$24872$6Dw7t)))))
             (g$complexnum?$24567$6Dw7t g$num$24872$6Dw7t))
          g$num$24872$6Dw7t
          (if ((case-lambda
                 ((g$t$24874$6Dw7t)
                  (if g$t$24874$6Dw7t
                    g$t$24874$6Dw7t
                    (begin
                      '#f
                      (g$ratnum?$24564$6Dw7t g$num$24872$6Dw7t)))))
               (g$exact-integer?$24714$6Dw7t g$num$24872$6Dw7t))
            (g$real->flonum$24583$6Dw7t g$num$24872$6Dw7t)
            (if (g$rectnum?$24560$6Dw7t g$num$24872$6Dw7t)
              (g$rectnum->complexnum$24579$6Dw7t g$num$24872$6Dw7t)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'inexact
                      '"not a number"
                      g$num$24872$6Dw7t)))))))))))
   (g$exact$24602$6Dw7t
     g$exact$25064$6Dw7t
     (case-lambda
       ((g$num$24875$6Dw7t)
        (if (g$complexnum?$24567$6Dw7t g$num$24875$6Dw7t)
          (if (g$zero?$24598$6Dw7t
                (g$complexnum-imag-part$24569$6Dw7t g$num$24875$6Dw7t))
            (g$exact$24602$6Dw7t
              (g$complexnum-real-part$24570$6Dw7t g$num$24875$6Dw7t))
            ((case-lambda
               ((g$t$24876$6Dw7t)
                (if g$t$24876$6Dw7t
                  g$t$24876$6Dw7t
                  (begin
                    '#f
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (g$assertion-violation$20490$6Dw7t
                            'exact
                            '"no exact equivalent"
                            g$num$24875$6Dw7t)))))))))
             ((case-lambda
                ((g$i$24877$6Dw7t g$r$24878$6Dw7t)
                 (if (g$rational?$24593$6Dw7t g$r$24878$6Dw7t)
                   (if (g$rational?$24593$6Dw7t g$i$24877$6Dw7t)
                     (begin
                       '#f
                       (g$make-rectnum$24561$6Dw7t
                         (g$flonum->ratnum$24574$6Dw7t g$r$24878$6Dw7t)
                         (g$flonum->ratnum$24574$6Dw7t
                           g$i$24877$6Dw7t)))
                     '#f)
                   '#f)))
              (g$complexnum-imag-part$24569$6Dw7t g$num$24875$6Dw7t)
              (g$complexnum-real-part$24570$6Dw7t g$num$24875$6Dw7t))))
          (if (g$flonum?$24011$6Dw7t g$num$24875$6Dw7t)
            (if ((case-lambda
                   ((g$t$24879$6Dw7t)
                    (if g$t$24879$6Dw7t
                      g$t$24879$6Dw7t
                      (begin
                        '#f
                        (g$flinfinite?$27060$6Dw7t
                          g$num$24875$6Dw7t)))))
                 (g$flnan?$27061$6Dw7t g$num$24875$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                'exact
                '"no exact equivalent"
                g$num$24875$6Dw7t)
              (g$flonum->ratnum$24574$6Dw7t g$num$24875$6Dw7t))
            (if (g$bignum?$24559$6Dw7t g$num$24875$6Dw7t)
              (if (g$fx<=?$23309$6Dw7t
                    (g$fixnum-width$24012$6Dw7t)
                    (g$bitwise-length$25532$6Dw7t g$num$24875$6Dw7t))
                g$num$24875$6Dw7t
                (g$bignum->fixnum$24573$6Dw7t g$num$24875$6Dw7t))
              (if (g$ratnum?$24564$6Dw7t g$num$24875$6Dw7t)
                (if (g$=$24705$6Dw7t
                      (g$ratnum-denominator$24565$6Dw7t
                        g$num$24875$6Dw7t)
                      '1)
                  (g$exact$24602$6Dw7t
                    (g$ratnum-numerator$24566$6Dw7t g$num$24875$6Dw7t))
                  g$num$24875$6Dw7t)
                (if (g$rectnum?$24560$6Dw7t g$num$24875$6Dw7t)
                  (if (g$zero?$24598$6Dw7t
                        (g$rectnum-imag-part$24562$6Dw7t
                          g$num$24875$6Dw7t))
                    (g$exact$24602$6Dw7t
                      (g$rectnum-real-part$24563$6Dw7t
                        g$num$24875$6Dw7t))
                    g$num$24875$6Dw7t)
                  (if (g$fixnum?$24010$6Dw7t g$num$24875$6Dw7t)
                    g$num$24875$6Dw7t
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (g$assertion-violation$20490$6Dw7t
                            'exact
                            '"not a number"
                            g$num$24875$6Dw7t))))))))))))))
   (g$hex-char$24603$6Dw7t
     g$hex-char$25065$6Dw7t
     (case-lambda
       ((g$num$24880$6Dw7t)
        (g$integer->char$24014$6Dw7t
          (+ g$num$24880$6Dw7t
             (g$char->integer$24013$6Dw7t
               (if (g$fx<?$23308$6Dw7t g$num$24880$6Dw7t '10)
                 '#\0
                 '#\W)))))))
   (g$fixnum->string$24604$6Dw7t
     g$fixnum->string$25066$6Dw7t
     (case-lambda
       ((g$num$24881$6Dw7t g$radix$24882$6Dw7t)
        (if (g$fxnegative?$23328$6Dw7t g$num$24881$6Dw7t)
          (g$string-append$24025$6Dw7t
            '"-"
            (g$number->string$24606$6Dw7t
              (g$abs$24764$6Dw7t g$num$24881$6Dw7t)
              g$radix$24882$6Dw7t))
          (clr-call-internal
            'System.Convert
            '"ToString(Int32,Int32)"
            '()
            g$num$24881$6Dw7t
            g$radix$24882$6Dw7t)))))
   (g$bignum->string$24605$6Dw7t
     g$bignum->string$25067$6Dw7t
     (case-lambda
       ((g$num$24883$6Dw7t g$radix$24884$6Dw7t)
        ((case-lambda
           ((g$neg?$24885$6Dw7t)
            ((case-lambda
               ((g$num$24886$6Dw7t)
                ((case-lambda
                   ((g$out$24887$6Dw7t)
                    (if g$neg?$24885$6Dw7t
                      (g$string-append$24025$6Dw7t
                        '"-"
                        g$out$24887$6Dw7t)
                      g$out$24887$6Dw7t)))
                 ((letrec ((g$f$24888$6Dw7t
                             (case-lambda
                               ((g$num$24889$6Dw7t g$a$24890$6Dw7t)
                                (if (g$zero?$24598$6Dw7t
                                      g$num$24889$6Dw7t)
                                  (apply
                                    g$string$24021$6Dw7t
                                    g$a$24890$6Dw7t)
                                  (g$f$24888$6Dw7t
                                    (g$div$24763$6Dw7t
                                      g$num$24889$6Dw7t
                                      g$radix$24884$6Dw7t)
                                    (cons
                                      (g$hex-char$24603$6Dw7t
                                        (g$mod$24030$6Dw7t
                                          g$num$24889$6Dw7t
                                          g$radix$24884$6Dw7t))
                                      g$a$24890$6Dw7t)))))))
                    g$f$24888$6Dw7t)
                  g$num$24886$6Dw7t
                  '()))))
             (g$abs$24764$6Dw7t g$num$24883$6Dw7t))))
         (g$negative?$24600$6Dw7t g$num$24883$6Dw7t)))))
   (g$number->string$24606$6Dw7t
     g$number->string$25068$6Dw7t
     (case-lambda
       ((g$num$24891$6Dw7t)
        (g$number->string$24606$6Dw7t g$num$24891$6Dw7t '10))
       ((g$num$24892$6Dw7t g$radix$24893$6Dw7t g$prec$24894$6Dw7t)
        (g$number->string$24606$6Dw7t
          g$num$24892$6Dw7t
          g$radix$24893$6Dw7t))
       ((g$num$24895$6Dw7t g$radix$24896$6Dw7t)
        (if (g$fixnum?$24010$6Dw7t g$num$24895$6Dw7t)
          (g$fixnum->string$24604$6Dw7t
            g$num$24895$6Dw7t
            g$radix$24896$6Dw7t)
          (if (g$flonum?$24011$6Dw7t g$num$24895$6Dw7t)
            (begin
              (if (not (g$=$24705$6Dw7t g$radix$24896$6Dw7t '10))
                (g$assertion-violation$20490$6Dw7t
                  'number->string
                  '"invalid radix"
                  g$radix$24896$6Dw7t)
                (void))
              (flonum->string g$num$24895$6Dw7t))
            (if (g$ratnum?$24564$6Dw7t g$num$24895$6Dw7t)
              (g$string-append$24025$6Dw7t
                (if (g$negative?$24600$6Dw7t g$num$24895$6Dw7t)
                  '"-"
                  '"")
                (g$number->string$24606$6Dw7t
                  (g$abs$24764$6Dw7t
                    (g$ratnum-numerator$24566$6Dw7t g$num$24895$6Dw7t))
                  g$radix$24896$6Dw7t)
                '"/"
                (g$number->string$24606$6Dw7t
                  (g$abs$24764$6Dw7t
                    (g$ratnum-denominator$24565$6Dw7t
                      g$num$24895$6Dw7t))
                  g$radix$24896$6Dw7t))
              (if (g$bignum?$24559$6Dw7t g$num$24895$6Dw7t)
                (g$bignum->string$24605$6Dw7t
                  g$num$24895$6Dw7t
                  g$radix$24896$6Dw7t)
                (if (g$complexnum?$24567$6Dw7t g$num$24895$6Dw7t)
                  (begin
                    (if (not (g$=$24705$6Dw7t g$radix$24896$6Dw7t '10))
                      (g$assertion-violation$20490$6Dw7t
                        'number->string
                        '"invalid radix"
                        g$radix$24896$6Dw7t)
                      (void))
                    (g$string-append$24025$6Dw7t
                      (if (g$zero?$24598$6Dw7t
                            (g$real-part$24717$6Dw7t g$num$24895$6Dw7t))
                        '""
                        (g$number->string$24606$6Dw7t
                          (g$real-part$24717$6Dw7t g$num$24895$6Dw7t)
                          g$radix$24896$6Dw7t))
                      (if ((case-lambda
                             ((g$i$24897$6Dw7t)
                              ((case-lambda
                                 ((g$t$24898$6Dw7t)
                                  (if g$t$24898$6Dw7t
                                    g$t$24898$6Dw7t
                                    ((case-lambda
                                       ((g$t$24899$6Dw7t)
                                        (if g$t$24899$6Dw7t
                                          g$t$24899$6Dw7t
                                          (begin
                                            '#f
                                            (g$infinite?$24588$6Dw7t
                                              g$i$24897$6Dw7t)))))
                                     (g$nan?$24586$6Dw7t
                                       g$i$24897$6Dw7t)))))
                               (g$negative?$24600$6Dw7t
                                 g$i$24897$6Dw7t))))
                           (g$imag-part$24718$6Dw7t g$num$24895$6Dw7t))
                        '""
                        '"+")
                      (if (g$=$24705$6Dw7t
                            '1.0
                            (g$imag-part$24718$6Dw7t g$num$24895$6Dw7t))
                        '""
                        (g$number->string$24606$6Dw7t
                          (g$imag-part$24718$6Dw7t g$num$24895$6Dw7t)
                          g$radix$24896$6Dw7t))
                      '"i"))
                  (if (g$rectnum?$24560$6Dw7t g$num$24895$6Dw7t)
                    (g$string-append$24025$6Dw7t
                      (if (g$zero?$24598$6Dw7t
                            (g$real-part$24717$6Dw7t g$num$24895$6Dw7t))
                        '""
                        (g$number->string$24606$6Dw7t
                          (g$real-part$24717$6Dw7t g$num$24895$6Dw7t)
                          g$radix$24896$6Dw7t))
                      (if (g$negative?$24600$6Dw7t
                            (g$imag-part$24718$6Dw7t g$num$24895$6Dw7t))
                        '""
                        '"+")
                      (if (g$=$24705$6Dw7t
                            '1
                            (g$imag-part$24718$6Dw7t g$num$24895$6Dw7t))
                        '""
                        (g$number->string$24606$6Dw7t
                          (g$imag-part$24718$6Dw7t g$num$24895$6Dw7t)
                          g$radix$24896$6Dw7t))
                      '"i")
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (g$assertion-violation$20490$6Dw7t
                            'number->string
                            '"not a number"
                            g$num$24895$6Dw7t))))))))))))))
   (g$=$24705$6Dw7t
     g$=$25069$6Dw7t
     (case-lambda
       ((g$a$24900$6Dw7t g$b$24901$6Dw7t)
        (if (if (g$real?$24592$6Dw7t g$a$24900$6Dw7t)
              (if (g$real?$24592$6Dw7t g$b$24901$6Dw7t)
                (if (g$finite?$24587$6Dw7t g$a$24900$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$b$24901$6Dw7t)
                    (if (not (g$nan?$24586$6Dw7t g$a$24900$6Dw7t))
                      (begin
                        '#f
                        (not (g$nan?$24586$6Dw7t g$b$24901$6Dw7t)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx=?
            (exact-compare
              (g$exact$24602$6Dw7t g$a$24900$6Dw7t)
              (g$exact$24602$6Dw7t g$b$24901$6Dw7t))
            '0)
          (if ((case-lambda
                 ((g$t$24902$6Dw7t)
                  (if g$t$24902$6Dw7t
                    g$t$24902$6Dw7t
                    (begin
                      '#f
                      (if (g$real?$24592$6Dw7t g$b$24901$6Dw7t)
                        (begin '#f (g$nan?$24586$6Dw7t g$b$24901$6Dw7t))
                        '#f)))))
               (if (g$real?$24592$6Dw7t g$a$24900$6Dw7t)
                 (begin '#f (g$nan?$24586$6Dw7t g$a$24900$6Dw7t))
                 '#f))
            '#f
            (if (if (g$number?$24585$6Dw7t g$a$24900$6Dw7t)
                  (begin '#f (g$number?$24585$6Dw7t g$b$24901$6Dw7t))
                  '#f)
              (inexact=?
                (g$inexact$24601$6Dw7t g$a$24900$6Dw7t)
                (g$inexact$24601$6Dw7t g$b$24901$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      '=
                      '"not number arguments"
                      g$a$24900$6Dw7t
                      g$b$24901$6Dw7t)))))))))
       ((g$x1$24903$6Dw7t g$x2$24904$6Dw7t . g$rest$24905$6Dw7t)
        ((letrec ((g$f$24906$6Dw7t
                    (case-lambda
                      ((g$a$24907$6Dw7t g$b$24908$6Dw7t)
                       (if (null? g$b$24908$6Dw7t)
                         '#t
                         (if (g$=$24705$6Dw7t
                               g$a$24907$6Dw7t
                               ($car g$b$24908$6Dw7t))
                           (g$f$24906$6Dw7t
                             ($car g$b$24908$6Dw7t)
                             ($cdr g$b$24908$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$24906$6Dw7t)
         g$x1$24903$6Dw7t
         (cons g$x2$24904$6Dw7t g$rest$24905$6Dw7t)))))
   (g$<$24706$6Dw7t
     g$<$25070$6Dw7t
     (case-lambda
       ((g$a$24909$6Dw7t g$b$24910$6Dw7t)
        (if (if (g$real?$24592$6Dw7t g$a$24909$6Dw7t)
              (if (g$real?$24592$6Dw7t g$b$24910$6Dw7t)
                (if (g$finite?$24587$6Dw7t g$a$24909$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$b$24910$6Dw7t)
                    (if (not (g$nan?$24586$6Dw7t g$a$24909$6Dw7t))
                      (begin
                        '#f
                        (not (g$nan?$24586$6Dw7t g$b$24910$6Dw7t)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<?
            (exact-compare
              (g$exact$24602$6Dw7t g$a$24909$6Dw7t)
              (g$exact$24602$6Dw7t g$b$24910$6Dw7t))
            '0)
          (if ((case-lambda
                 ((g$t$24911$6Dw7t)
                  (if g$t$24911$6Dw7t
                    g$t$24911$6Dw7t
                    (begin
                      '#f
                      (if (g$real?$24592$6Dw7t g$b$24910$6Dw7t)
                        (begin '#f (g$nan?$24586$6Dw7t g$b$24910$6Dw7t))
                        '#f)))))
               (if (g$real?$24592$6Dw7t g$a$24909$6Dw7t)
                 (begin '#f (g$nan?$24586$6Dw7t g$a$24909$6Dw7t))
                 '#f))
            '#f
            (if (if (g$real?$24592$6Dw7t g$a$24909$6Dw7t)
                  (begin '#f (g$real?$24592$6Dw7t g$b$24910$6Dw7t))
                  '#f)
              ($fx<?
                (inexact-compare
                  (g$inexact$24601$6Dw7t g$a$24909$6Dw7t)
                  (g$inexact$24601$6Dw7t g$b$24910$6Dw7t))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      '<
                      '"not real arguments"
                      g$a$24909$6Dw7t
                      g$b$24910$6Dw7t)))))))))
       ((g$x1$24912$6Dw7t g$x2$24913$6Dw7t . g$rest$24914$6Dw7t)
        ((letrec ((g$f$24915$6Dw7t
                    (case-lambda
                      ((g$a$24916$6Dw7t g$b$24917$6Dw7t)
                       (if (null? g$b$24917$6Dw7t)
                         '#t
                         (if (g$<$24706$6Dw7t
                               g$a$24916$6Dw7t
                               ($car g$b$24917$6Dw7t))
                           (g$f$24915$6Dw7t
                             ($car g$b$24917$6Dw7t)
                             ($cdr g$b$24917$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$24915$6Dw7t)
         g$x1$24912$6Dw7t
         (cons g$x2$24913$6Dw7t g$rest$24914$6Dw7t)))))
   (g$<=$24707$6Dw7t
     g$<=$25071$6Dw7t
     (case-lambda
       ((g$a$24918$6Dw7t g$b$24919$6Dw7t)
        (if (if (g$real?$24592$6Dw7t g$a$24918$6Dw7t)
              (if (g$real?$24592$6Dw7t g$b$24919$6Dw7t)
                (if (g$finite?$24587$6Dw7t g$a$24918$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$b$24919$6Dw7t)
                    (if (not (g$nan?$24586$6Dw7t g$a$24918$6Dw7t))
                      (begin
                        '#f
                        (not (g$nan?$24586$6Dw7t g$b$24919$6Dw7t)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx<=?
            (exact-compare
              (g$exact$24602$6Dw7t g$a$24918$6Dw7t)
              (g$exact$24602$6Dw7t g$b$24919$6Dw7t))
            '0)
          (if ((case-lambda
                 ((g$t$24920$6Dw7t)
                  (if g$t$24920$6Dw7t
                    g$t$24920$6Dw7t
                    (begin
                      '#f
                      (if (g$real?$24592$6Dw7t g$b$24919$6Dw7t)
                        (begin '#f (g$nan?$24586$6Dw7t g$b$24919$6Dw7t))
                        '#f)))))
               (if (g$real?$24592$6Dw7t g$a$24918$6Dw7t)
                 (begin '#f (g$nan?$24586$6Dw7t g$a$24918$6Dw7t))
                 '#f))
            '#f
            (if (if (g$real?$24592$6Dw7t g$a$24918$6Dw7t)
                  (begin '#f (g$real?$24592$6Dw7t g$b$24919$6Dw7t))
                  '#f)
              ($fx<=?
                (inexact-compare
                  (g$inexact$24601$6Dw7t g$a$24918$6Dw7t)
                  (g$inexact$24601$6Dw7t g$b$24919$6Dw7t))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      '<=
                      '"not real arguments"
                      g$a$24918$6Dw7t
                      g$b$24919$6Dw7t)))))))))
       ((g$x1$24921$6Dw7t g$x2$24922$6Dw7t . g$rest$24923$6Dw7t)
        ((letrec ((g$f$24924$6Dw7t
                    (case-lambda
                      ((g$a$24925$6Dw7t g$b$24926$6Dw7t)
                       (if (null? g$b$24926$6Dw7t)
                         '#t
                         (if (g$<=$24707$6Dw7t
                               g$a$24925$6Dw7t
                               ($car g$b$24926$6Dw7t))
                           (g$f$24924$6Dw7t
                             ($car g$b$24926$6Dw7t)
                             ($cdr g$b$24926$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$24924$6Dw7t)
         g$x1$24921$6Dw7t
         (cons g$x2$24922$6Dw7t g$rest$24923$6Dw7t)))))
   (g$>$24708$6Dw7t
     g$>$25072$6Dw7t
     (case-lambda
       ((g$a$24927$6Dw7t g$b$24928$6Dw7t)
        (if (if (g$real?$24592$6Dw7t g$a$24927$6Dw7t)
              (if (g$real?$24592$6Dw7t g$b$24928$6Dw7t)
                (if (g$finite?$24587$6Dw7t g$a$24927$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$b$24928$6Dw7t)
                    (if (not (g$nan?$24586$6Dw7t g$a$24927$6Dw7t))
                      (begin
                        '#f
                        (not (g$nan?$24586$6Dw7t g$b$24928$6Dw7t)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>?
            (exact-compare
              (g$exact$24602$6Dw7t g$a$24927$6Dw7t)
              (g$exact$24602$6Dw7t g$b$24928$6Dw7t))
            '0)
          (if ((case-lambda
                 ((g$t$24929$6Dw7t)
                  (if g$t$24929$6Dw7t
                    g$t$24929$6Dw7t
                    (begin
                      '#f
                      (if (g$real?$24592$6Dw7t g$b$24928$6Dw7t)
                        (begin '#f (g$nan?$24586$6Dw7t g$b$24928$6Dw7t))
                        '#f)))))
               (if (g$real?$24592$6Dw7t g$a$24927$6Dw7t)
                 (begin '#f (g$nan?$24586$6Dw7t g$a$24927$6Dw7t))
                 '#f))
            '#f
            (if (if (g$real?$24592$6Dw7t g$a$24927$6Dw7t)
                  (begin '#f (g$real?$24592$6Dw7t g$b$24928$6Dw7t))
                  '#f)
              ($fx>?
                (inexact-compare
                  (g$inexact$24601$6Dw7t g$a$24927$6Dw7t)
                  (g$inexact$24601$6Dw7t g$b$24928$6Dw7t))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      '>
                      '"not real arguments"
                      g$a$24927$6Dw7t
                      g$b$24928$6Dw7t)))))))))
       ((g$x1$24930$6Dw7t g$x2$24931$6Dw7t . g$rest$24932$6Dw7t)
        ((letrec ((g$f$24933$6Dw7t
                    (case-lambda
                      ((g$a$24934$6Dw7t g$b$24935$6Dw7t)
                       (if (null? g$b$24935$6Dw7t)
                         '#t
                         (if (g$>$24708$6Dw7t
                               g$a$24934$6Dw7t
                               ($car g$b$24935$6Dw7t))
                           (g$f$24933$6Dw7t
                             ($car g$b$24935$6Dw7t)
                             ($cdr g$b$24935$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$24933$6Dw7t)
         g$x1$24930$6Dw7t
         (cons g$x2$24931$6Dw7t g$rest$24932$6Dw7t)))))
   (g$>=$24709$6Dw7t
     g$>=$25073$6Dw7t
     (case-lambda
       ((g$a$24936$6Dw7t g$b$24937$6Dw7t)
        (if (if (g$real?$24592$6Dw7t g$a$24936$6Dw7t)
              (if (g$real?$24592$6Dw7t g$b$24937$6Dw7t)
                (if (g$finite?$24587$6Dw7t g$a$24936$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$b$24937$6Dw7t)
                    (if (not (g$nan?$24586$6Dw7t g$a$24936$6Dw7t))
                      (begin
                        '#f
                        (not (g$nan?$24586$6Dw7t g$b$24937$6Dw7t)))
                      '#f)
                    '#f)
                  '#f)
                '#f)
              '#f)
          ($fx>=?
            (exact-compare
              (g$exact$24602$6Dw7t g$a$24936$6Dw7t)
              (g$exact$24602$6Dw7t g$b$24937$6Dw7t))
            '0)
          (if ((case-lambda
                 ((g$t$24938$6Dw7t)
                  (if g$t$24938$6Dw7t
                    g$t$24938$6Dw7t
                    (begin
                      '#f
                      (if (g$real?$24592$6Dw7t g$b$24937$6Dw7t)
                        (begin '#f (g$nan?$24586$6Dw7t g$b$24937$6Dw7t))
                        '#f)))))
               (if (g$real?$24592$6Dw7t g$a$24936$6Dw7t)
                 (begin '#f (g$nan?$24586$6Dw7t g$a$24936$6Dw7t))
                 '#f))
            '#f
            (if (if (g$real?$24592$6Dw7t g$a$24936$6Dw7t)
                  (begin '#f (g$real?$24592$6Dw7t g$b$24937$6Dw7t))
                  '#f)
              ($fx>=?
                (inexact-compare
                  (g$inexact$24601$6Dw7t g$a$24936$6Dw7t)
                  (g$inexact$24601$6Dw7t g$b$24937$6Dw7t))
                '0)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      '>=
                      '"not real arguments"
                      g$a$24936$6Dw7t
                      g$b$24937$6Dw7t)))))))))
       ((g$x1$24939$6Dw7t g$x2$24940$6Dw7t . g$rest$24941$6Dw7t)
        ((letrec ((g$f$24942$6Dw7t
                    (case-lambda
                      ((g$a$24943$6Dw7t g$b$24944$6Dw7t)
                       (if (null? g$b$24944$6Dw7t)
                         '#t
                         (if (g$>=$24709$6Dw7t
                               g$a$24943$6Dw7t
                               ($car g$b$24944$6Dw7t))
                           (g$f$24942$6Dw7t
                             ($car g$b$24944$6Dw7t)
                             ($cdr g$b$24944$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$24942$6Dw7t)
         g$x1$24939$6Dw7t
         (cons g$x2$24940$6Dw7t g$rest$24941$6Dw7t)))))
   (g$make-rectangular$24710$6Dw7t
     g$make-rectangular$25074$6Dw7t
     (case-lambda
       ((g$r1$24945$6Dw7t g$r2$24946$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$r1$24945$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-rectangular
              '"not a real"
              g$r1$24945$6Dw7t)
            (void))
          (if (not (g$real?$24592$6Dw7t g$r2$24946$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-rectangular
              '"not a real"
              g$r2$24946$6Dw7t)
            (void))
          (if (if (g$exact?$24589$6Dw7t g$r1$24945$6Dw7t)
                (begin '#f (g$exact?$24589$6Dw7t g$r2$24946$6Dw7t))
                '#f)
            (g$make-rectnum$24561$6Dw7t
              (g$->ratnum$24581$6Dw7t g$r1$24945$6Dw7t)
              (g$->ratnum$24581$6Dw7t g$r2$24946$6Dw7t))
            (if (if (g$exact?$24589$6Dw7t g$r2$24946$6Dw7t)
                  (begin '#f (g$zero?$24598$6Dw7t g$r2$24946$6Dw7t))
                  '#f)
              g$r1$24945$6Dw7t
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$make-complexnum$24568$6Dw7t
                      (g$inexact$24601$6Dw7t g$r1$24945$6Dw7t)
                      (g$inexact$24601$6Dw7t
                        g$r2$24946$6Dw7t))))))))))))
   (g$make-polar$24711$6Dw7t
     g$make-polar$25075$6Dw7t
     (case-lambda
       ((g$r1$24947$6Dw7t g$r2$24948$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$r1$24947$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-polar
              '"not a real"
              g$r1$24947$6Dw7t)
            (void))
          (if (not (g$real?$24592$6Dw7t g$r2$24948$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'make-polar
              '"not a real"
              g$r2$24948$6Dw7t)
            (void))
          (if (if (g$exact?$24589$6Dw7t g$r2$24948$6Dw7t)
                (begin '#f (g$zero?$24598$6Dw7t g$r2$24948$6Dw7t))
                '#f)
            g$r1$24947$6Dw7t
            (* g$r1$24947$6Dw7t
               (g$make-rectangular$24710$6Dw7t
                 (g$cos$24756$6Dw7t g$r2$24948$6Dw7t)
                 (g$sin$24753$6Dw7t g$r2$24948$6Dw7t))))))))
   (g$angle$24712$6Dw7t
     g$angle$25076$6Dw7t
     (case-lambda
       ((g$num$24949$6Dw7t)
        (begin
          (if (not (g$number?$24585$6Dw7t g$num$24949$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'angle
              '"not a number"
              g$num$24949$6Dw7t)
            (void))
          (if (g$rectnum?$24560$6Dw7t g$num$24949$6Dw7t)
            (g$angle$24712$6Dw7t
              (g$inexact$24601$6Dw7t g$num$24949$6Dw7t))
            (g$atan$24761$6Dw7t
              (g$imag-part$24718$6Dw7t g$num$24949$6Dw7t)
              (g$real-part$24717$6Dw7t g$num$24949$6Dw7t)))))))
   (g$magnitude$24713$6Dw7t
     g$magnitude$25077$6Dw7t
     (case-lambda
       ((g$num$24950$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24950$6Dw7t)
          (g$magnitude$24713$6Dw7t
            (g$inexact$24601$6Dw7t g$num$24950$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24950$6Dw7t)
            ((case-lambda
               ((g$i$24951$6Dw7t g$r$24952$6Dw7t)
                (g$sqrt$24769$6Dw7t
                  (+ (* g$i$24951$6Dw7t g$i$24951$6Dw7t)
                     (* g$r$24952$6Dw7t g$r$24952$6Dw7t)))))
             (g$imag-part$24718$6Dw7t g$num$24950$6Dw7t)
             (g$real-part$24717$6Dw7t g$num$24950$6Dw7t))
            (if (g$real?$24592$6Dw7t g$num$24950$6Dw7t)
              (g$abs$24764$6Dw7t g$num$24950$6Dw7t)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'magnitude
                      '"not a number"
                      g$num$24950$6Dw7t)))))))))))
   (g$exact-integer?$24714$6Dw7t
     g$exact-integer?$25078$6Dw7t
     (case-lambda
       ((g$obj$24953$6Dw7t)
        ((case-lambda
           ((g$t$24954$6Dw7t)
            (if g$t$24954$6Dw7t
              g$t$24954$6Dw7t
              (begin '#f (g$bignum?$24559$6Dw7t g$obj$24953$6Dw7t)))))
         (g$fixnum?$24010$6Dw7t g$obj$24953$6Dw7t)))))
   (g$numerator$24715$6Dw7t
     g$numerator$25079$6Dw7t
     (case-lambda
       ((g$num$24955$6Dw7t)
        (if (g$exact-integer?$24714$6Dw7t g$num$24955$6Dw7t)
          g$num$24955$6Dw7t
          (if (g$ratnum?$24564$6Dw7t g$num$24955$6Dw7t)
            (g$exact$24602$6Dw7t
              (g$ratnum-numerator$24566$6Dw7t g$num$24955$6Dw7t))
            (if (if (g$real?$24592$6Dw7t g$num$24955$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$num$24955$6Dw7t)
                    (begin
                      '#f
                      (not (g$nan?$24586$6Dw7t g$num$24955$6Dw7t)))
                    '#f)
                  '#f)
              (g$inexact$24601$6Dw7t
                (g$numerator$24715$6Dw7t
                  (g$exact$24602$6Dw7t g$num$24955$6Dw7t)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'numerator
                      '"not a real"
                      g$num$24955$6Dw7t)))))))))))
   (g$denominator$24716$6Dw7t
     g$denominator$25080$6Dw7t
     (case-lambda
       ((g$num$24956$6Dw7t)
        (if (g$exact-integer?$24714$6Dw7t g$num$24956$6Dw7t)
          '1
          (if (g$ratnum?$24564$6Dw7t g$num$24956$6Dw7t)
            (g$exact$24602$6Dw7t
              (g$ratnum-denominator$24565$6Dw7t g$num$24956$6Dw7t))
            (if (if (g$real?$24592$6Dw7t g$num$24956$6Dw7t)
                  (if (g$finite?$24587$6Dw7t g$num$24956$6Dw7t)
                    (begin
                      '#f
                      (not (g$nan?$24586$6Dw7t g$num$24956$6Dw7t)))
                    '#f)
                  '#f)
              (g$inexact$24601$6Dw7t
                (g$denominator$24716$6Dw7t
                  (g$exact$24602$6Dw7t g$num$24956$6Dw7t)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'denominator
                      '"not a real"
                      g$num$24956$6Dw7t)))))))))))
   (g$real-part$24717$6Dw7t
     g$real-part$25081$6Dw7t
     (case-lambda
       ((g$num$24957$6Dw7t)
        (if (g$complexnum?$24567$6Dw7t g$num$24957$6Dw7t)
          (g$complexnum-real-part$24570$6Dw7t g$num$24957$6Dw7t)
          (if (g$rectnum?$24560$6Dw7t g$num$24957$6Dw7t)
            (g$exact$24602$6Dw7t
              (g$rectnum-real-part$24563$6Dw7t g$num$24957$6Dw7t))
            (if (g$real?$24592$6Dw7t g$num$24957$6Dw7t)
              g$num$24957$6Dw7t
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'real-part
                      '"not a number"
                      g$num$24957$6Dw7t)))))))))))
   (g$imag-part$24718$6Dw7t
     g$imag-part$25082$6Dw7t
     (case-lambda
       ((g$num$24958$6Dw7t)
        (if (g$complexnum?$24567$6Dw7t g$num$24958$6Dw7t)
          (g$complexnum-imag-part$24569$6Dw7t g$num$24958$6Dw7t)
          (if (g$rectnum?$24560$6Dw7t g$num$24958$6Dw7t)
            (g$exact$24602$6Dw7t
              (g$rectnum-imag-part$24562$6Dw7t g$num$24958$6Dw7t))
            (if (g$real?$24592$6Dw7t g$num$24958$6Dw7t)
              '0
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'imag-part
                      '"not a number"
                      g$num$24958$6Dw7t)))))))))))
   (g$exp$24752$6Dw7t
     g$exp$25083$6Dw7t
     (case-lambda
       ((g$num$24959$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24959$6Dw7t)
          (g$exp$24752$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24959$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24959$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'exp
              '()
              g$num$24959$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24959$6Dw7t)
              (clr-call-internal
                'System.Math
                'exp
                '()
                (g$inexact$24601$6Dw7t g$num$24959$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'exp
                      '"not a number"
                      g$num$24959$6Dw7t)))))))))))
   (g$sin$24753$6Dw7t
     g$sin$25084$6Dw7t
     (case-lambda
       ((g$num$24960$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24960$6Dw7t)
          (g$sin$24753$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24960$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24960$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sin
              '()
              g$num$24960$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24960$6Dw7t)
              (clr-call-internal
                'System.Math
                'sin
                '()
                (g$inexact$24601$6Dw7t g$num$24960$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'sin
                      '"not a number"
                      g$num$24960$6Dw7t)))))))))))
   (g$asin$24754$6Dw7t
     g$asin$25085$6Dw7t
     (case-lambda
       ((g$num$24961$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24961$6Dw7t)
          (g$asin$24754$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24961$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24961$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'asin
              '()
              g$num$24961$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24961$6Dw7t)
              (clr-call-internal
                'System.Math
                'asin
                '()
                (g$inexact$24601$6Dw7t g$num$24961$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'asin
                      '"not a number"
                      g$num$24961$6Dw7t)))))))))))
   (g$sinh$24755$6Dw7t
     g$sinh$25086$6Dw7t
     (case-lambda
       ((g$num$24962$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24962$6Dw7t)
          (g$sinh$24755$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24962$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24962$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'sinh
              '()
              g$num$24962$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24962$6Dw7t)
              (clr-call-internal
                'System.Math
                'sinh
                '()
                (g$inexact$24601$6Dw7t g$num$24962$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'sinh
                      '"not a number"
                      g$num$24962$6Dw7t)))))))))))
   (g$cos$24756$6Dw7t
     g$cos$25087$6Dw7t
     (case-lambda
       ((g$num$24963$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24963$6Dw7t)
          (g$cos$24756$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24963$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24963$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cos
              '()
              g$num$24963$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24963$6Dw7t)
              (clr-call-internal
                'System.Math
                'cos
                '()
                (g$inexact$24601$6Dw7t g$num$24963$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'cos
                      '"not a number"
                      g$num$24963$6Dw7t)))))))))))
   (g$acos$24757$6Dw7t
     g$acos$25088$6Dw7t
     (case-lambda
       ((g$num$24964$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24964$6Dw7t)
          (g$acos$24757$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24964$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24964$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'acos
              '()
              g$num$24964$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24964$6Dw7t)
              (clr-call-internal
                'System.Math
                'acos
                '()
                (g$inexact$24601$6Dw7t g$num$24964$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'acos
                      '"not a number"
                      g$num$24964$6Dw7t)))))))))))
   (g$cosh$24758$6Dw7t
     g$cosh$25089$6Dw7t
     (case-lambda
       ((g$num$24965$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24965$6Dw7t)
          (g$cosh$24758$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24965$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24965$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'cosh
              '()
              g$num$24965$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24965$6Dw7t)
              (clr-call-internal
                'System.Math
                'cosh
                '()
                (g$inexact$24601$6Dw7t g$num$24965$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'cosh
                      '"not a number"
                      g$num$24965$6Dw7t)))))))))))
   (g$tan$24759$6Dw7t
     g$tan$25090$6Dw7t
     (case-lambda
       ((g$num$24966$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24966$6Dw7t)
          (g$tan$24759$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24966$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24966$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tan
              '()
              g$num$24966$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24966$6Dw7t)
              (clr-call-internal
                'System.Math
                'tan
                '()
                (g$inexact$24601$6Dw7t g$num$24966$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'tan
                      '"not a number"
                      g$num$24966$6Dw7t)))))))))))
   (g$tanh$24760$6Dw7t
     g$tanh$25091$6Dw7t
     (case-lambda
       ((g$num$24967$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24967$6Dw7t)
          (g$tanh$24760$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24967$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24967$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'tanh
              '()
              g$num$24967$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24967$6Dw7t)
              (clr-call-internal
                'System.Math
                'tanh
                '()
                (g$inexact$24601$6Dw7t g$num$24967$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'tanh
                      '"not a number"
                      g$num$24967$6Dw7t)))))))))))
   (g$atan$24761$6Dw7t
     g$atan$25092$6Dw7t
     (case-lambda
       ((g$num$24968$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$24968$6Dw7t)
          (g$atan$24761$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$24968$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$24968$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Atan
              '()
              g$num$24968$6Dw7t)
            (if (g$real?$24592$6Dw7t g$num$24968$6Dw7t)
              (clr-call-internal
                'System.Math
                'Atan
                '()
                (g$inexact$24601$6Dw7t g$num$24968$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'atan
                      '"not a number"
                      g$num$24968$6Dw7t)))))))))
       ((g$num1$24969$6Dw7t g$num2$24970$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$num1$24969$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'atan
              '"not a real"
              g$num1$24969$6Dw7t)
            (void))
          (if (not (g$real?$24592$6Dw7t g$num2$24970$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'atan
              '"not a real"
              g$num2$24970$6Dw7t)
            (void))
          (clr-call-internal
            'System.Math
            'Atan2
            '()
            (g$inexact$24601$6Dw7t g$num1$24969$6Dw7t)
            (g$inexact$24601$6Dw7t g$num2$24970$6Dw7t))))))
   (g$log$24762$6Dw7t
     g$log$25093$6Dw7t
     (case-lambda
       ((g$num$24971$6Dw7t)
        (begin
          (if (not (g$number?$24585$6Dw7t g$num$24971$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'atan
              '"not a number"
              g$num$24971$6Dw7t)
            (void))
          (if (g$rectnum?$24560$6Dw7t g$num$24971$6Dw7t)
            (g$log$24762$6Dw7t
              (g$rectnum->complexnum$24579$6Dw7t g$num$24971$6Dw7t))
            (if (g$complexnum?$24567$6Dw7t g$num$24971$6Dw7t)
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Log
                '()
                g$num$24971$6Dw7t)
              (if (g$negative?$24600$6Dw7t g$num$24971$6Dw7t)
                (clr-call-internal
                  'Microsoft.Scripting.Math.Complex64
                  'Log
                  '()
                  (g$make-complexnum$24568$6Dw7t
                    (g$inexact$24601$6Dw7t g$num$24971$6Dw7t)
                    '0.0))
                (if (g$zero?$24598$6Dw7t g$num$24971$6Dw7t)
                  (if (g$exact?$24589$6Dw7t g$num$24971$6Dw7t)
                    (g$assertion-violation$20490$6Dw7t
                      'log
                      '"not possible"
                      g$num$24971$6Dw7t)
                    '-inf.0)
                  (if (g$infinite?$24588$6Dw7t g$num$24971$6Dw7t)
                    (if (g$negative?$24600$6Dw7t g$num$24971$6Dw7t)
                      (g$make-complexnum$24568$6Dw7t
                        (g$inexact$24601$6Dw7t
                          (g$abs$24764$6Dw7t g$num$24971$6Dw7t))
                        '0)
                      g$num$24971$6Dw7t)
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (clr-call-internal
                            'System.Math
                            'Log
                            '()
                            (g$inexact$24601$6Dw7t
                              g$num$24971$6Dw7t)))))))))))))
       ((g$num1$24972$6Dw7t g$num2$24973$6Dw7t)
        (/ (g$log$24762$6Dw7t g$num1$24972$6Dw7t)
           (g$log$24762$6Dw7t g$num2$24973$6Dw7t)))))
   (g$div$24763$6Dw7t
     g$div$25094$6Dw7t
     (case-lambda
       ((g$x1$24974$6Dw7t g$x2$24975$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x1$24974$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'div
              '"not a real"
              g$x1$24974$6Dw7t)
            (void))
          (if (not (g$real?$24592$6Dw7t g$x2$24975$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'div
              '"not a real"
              g$x2$24975$6Dw7t)
            (void))
          (if (g$zero?$24598$6Dw7t g$x2$24975$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'div
              '"divide by zero"
              g$x1$24974$6Dw7t
              g$x2$24975$6Dw7t)
            (void))
          (if ((case-lambda
                 ((g$t$24976$6Dw7t)
                  (if g$t$24976$6Dw7t
                    g$t$24976$6Dw7t
                    (begin
                      '#f
                      (g$infinite?$24588$6Dw7t g$x1$24974$6Dw7t)))))
               (g$nan?$24586$6Dw7t g$x1$24974$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'div
              '"cannot be nan or infinite"
              g$x1$24974$6Dw7t
              g$x2$24975$6Dw7t)
            (void))
          (call-with-values
            (case-lambda
              (()
               (if (if (g$exact?$24589$6Dw7t g$x1$24974$6Dw7t)
                     (begin '#f (g$exact?$24589$6Dw7t g$x2$24975$6Dw7t))
                     '#f)
                 ((case-lambda
                    ((g$scale$24980$6Dw7t)
                     (values
                       (* g$x1$24974$6Dw7t g$scale$24980$6Dw7t)
                       (* g$x2$24975$6Dw7t g$scale$24980$6Dw7t)
                       '#t)))
                  (* (g$denominator$24716$6Dw7t g$x1$24974$6Dw7t)
                     (g$denominator$24716$6Dw7t g$x2$24975$6Dw7t)))
                 (values g$x1$24974$6Dw7t g$x2$24975$6Dw7t '#f))))
            (case-lambda
              ((g$x1$24981$6Dw7t
                 g$x2$24982$6Dw7t
                 g$exact-args?$24983$6Dw7t)
               ((case-lambda
                  ((g$exact-args?$24984$6Dw7t
                     g$x2$24985$6Dw7t
                     g$x1$24986$6Dw7t)
                   ((case-lambda
                      ((g$d$24987$6Dw7t)
                       (if (if g$exact-args?$24984$6Dw7t
                             (begin
                               '#f
                               (g$rational-valued?$24596$6Dw7t
                                 g$d$24987$6Dw7t))
                             '#f)
                         (g$exact$24602$6Dw7t g$d$24987$6Dw7t)
                         g$d$24987$6Dw7t)))
                    (if (g$positive?$24599$6Dw7t g$x2$24985$6Dw7t)
                      (g$floor$24765$6Dw7t
                        (/ g$x1$24986$6Dw7t g$x2$24985$6Dw7t))
                      (- (g$floor$24765$6Dw7t
                           (/ g$x1$24986$6Dw7t
                              (- g$x2$24985$6Dw7t))))))))
                g$exact-args?$24983$6Dw7t
                g$x2$24982$6Dw7t
                g$x1$24981$6Dw7t))))))))
   (g$abs$24764$6Dw7t
     g$abs$25095$6Dw7t
     (case-lambda
       ((g$x1$24988$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x1$24988$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'abs
              '"not a real"
              g$x1$24988$6Dw7t)
            (void))
          (if (g$negative?$24600$6Dw7t g$x1$24988$6Dw7t)
            (- g$x1$24988$6Dw7t)
            g$x1$24988$6Dw7t)))))
   (g$floor$24765$6Dw7t
     g$floor$25096$6Dw7t
     (case-lambda
       ((g$x$24989$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x$24989$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'floor
              '"not a real"
              g$x$24989$6Dw7t)
            (void))
          (if (g$exact-integer?$24714$6Dw7t g$x$24989$6Dw7t)
            g$x$24989$6Dw7t
            (if (g$ratnum?$24564$6Dw7t g$x$24989$6Dw7t)
              ((case-lambda
                 ((g$r$24990$6Dw7t)
                  (g$exact$24602$6Dw7t
                    (if (g$negative?$24600$6Dw7t g$x$24989$6Dw7t)
                      (- g$r$24990$6Dw7t '1)
                      g$r$24990$6Dw7t))))
               (g$bignum/$24571$6Dw7t
                 (g$ratnum-numerator$24566$6Dw7t g$x$24989$6Dw7t)
                 (g$ratnum-denominator$24565$6Dw7t g$x$24989$6Dw7t)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      '"Floor(System.Double)"
                      '()
                      (g$inexact$24601$6Dw7t g$x$24989$6Dw7t))))))))))))
   (g$ceiling$24766$6Dw7t
     g$ceiling$25097$6Dw7t
     (case-lambda
       ((g$x$24991$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x$24991$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'ceiling
              '"not a real"
              g$x$24991$6Dw7t)
            (void))
          (if (g$exact-integer?$24714$6Dw7t g$x$24991$6Dw7t)
            g$x$24991$6Dw7t
            (if (g$ratnum?$24564$6Dw7t g$x$24991$6Dw7t)
              ((case-lambda
                 ((g$r$24992$6Dw7t)
                  (g$exact$24602$6Dw7t
                    (if (g$positive?$24599$6Dw7t g$r$24992$6Dw7t)
                      (+ g$r$24992$6Dw7t '1)
                      g$r$24992$6Dw7t))))
               (g$bignum/$24571$6Dw7t
                 (g$ratnum-numerator$24566$6Dw7t g$x$24991$6Dw7t)
                 (g$ratnum-denominator$24565$6Dw7t g$x$24991$6Dw7t)))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      '"Ceiling(System.Double)"
                      '()
                      (g$inexact$24601$6Dw7t g$x$24991$6Dw7t))))))))))))
   (g$truncate$24767$6Dw7t
     g$truncate$25098$6Dw7t
     (case-lambda
       ((g$x$24993$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x$24993$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'truncate
              '"not a real"
              g$x$24993$6Dw7t)
            (void))
          (if (g$exact-integer?$24714$6Dw7t g$x$24993$6Dw7t)
            g$x$24993$6Dw7t
            ((case-lambda
               (()
                (begin
                  '#f
                  ((case-lambda
                     ((g$r$24994$6Dw7t)
                      (if (g$exact?$24589$6Dw7t g$x$24993$6Dw7t)
                        (g$exact$24602$6Dw7t g$r$24994$6Dw7t)
                        g$r$24994$6Dw7t)))
                   (clr-call-internal
                     'System.Math
                     '"Truncate(System.Double)"
                     '()
                     (g$inexact$24601$6Dw7t g$x$24993$6Dw7t))))))))))))
   (g$round$24768$6Dw7t
     g$round$25099$6Dw7t
     (case-lambda
       ((g$x$24995$6Dw7t)
        (begin
          (if (not (g$real?$24592$6Dw7t g$x$24995$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'round
              '"not a real"
              g$x$24995$6Dw7t)
            (void))
          (if (g$exact-integer?$24714$6Dw7t g$x$24995$6Dw7t)
            g$x$24995$6Dw7t
            (if (g$ratnum?$24564$6Dw7t g$x$24995$6Dw7t)
              ((case-lambda
                 ((g$num$24996$6Dw7t)
                  ((case-lambda
                     ((g$den$24997$6Dw7t)
                      ((case-lambda
                         ((g$d$24998$6Dw7t)
                          ((case-lambda
                             ((g$r$24999$6Dw7t)
                              ((case-lambda
                                 ((g$hd$25000$6Dw7t)
                                  (if (g$negative?$24600$6Dw7t
                                        g$r$24999$6Dw7t)
                                    (g$exact$24602$6Dw7t
                                      (if (g$>$24708$6Dw7t
                                            (- g$r$24999$6Dw7t)
                                            g$hd$25000$6Dw7t)
                                        (- g$d$24998$6Dw7t '1)
                                        (if (g$<$24706$6Dw7t
                                              (- g$r$24999$6Dw7t)
                                              g$hd$25000$6Dw7t)
                                          g$d$24998$6Dw7t
                                          (if (g$even?$24072$6Dw7t
                                                g$d$24998$6Dw7t)
                                            g$d$24998$6Dw7t
                                            ((case-lambda
                                               (()
                                                (begin
                                                  '#f
                                                  (+ g$d$24998$6Dw7t
                                                     '1)))))))))
                                    (if (g$positive?$24599$6Dw7t
                                          g$r$24999$6Dw7t)
                                      (g$exact$24602$6Dw7t
                                        (if (g$>$24708$6Dw7t
                                              g$r$24999$6Dw7t
                                              g$hd$25000$6Dw7t)
                                          (+ g$d$24998$6Dw7t '1)
                                          (if (g$<$24706$6Dw7t
                                                g$r$24999$6Dw7t
                                                g$hd$25000$6Dw7t)
                                            g$d$24998$6Dw7t
                                            (if (g$even?$24072$6Dw7t
                                                  g$d$24998$6Dw7t)
                                              g$d$24998$6Dw7t
                                              ((case-lambda
                                                 (()
                                                  (begin
                                                    '#f
                                                    (+ g$d$24998$6Dw7t
                                                       '1)))))))))
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            g$d$24998$6Dw7t))))))))
                               (g$div$24763$6Dw7t g$d$24998$6Dw7t '2))))
                           (g$bignum%$24572$6Dw7t
                             g$num$24996$6Dw7t
                             g$den$24997$6Dw7t))))
                       (g$bignum/$24571$6Dw7t
                         g$num$24996$6Dw7t
                         g$den$24997$6Dw7t))))
                   (g$ratnum-denominator$24565$6Dw7t g$x$24995$6Dw7t))))
               (g$ratnum-numerator$24566$6Dw7t g$x$24995$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (clr-call-internal
                      'System.Math
                      '"Round(System.Double)"
                      '()
                      (g$inexact$24601$6Dw7t g$x$24995$6Dw7t))))))))))))
   (g$sqrt$24769$6Dw7t
     g$sqrt$25100$6Dw7t
     (case-lambda
       ((g$num$25001$6Dw7t)
        (if (g$rectnum?$24560$6Dw7t g$num$25001$6Dw7t)
          (g$sqrt$24769$6Dw7t
            (g$rectnum->complexnum$24579$6Dw7t g$num$25001$6Dw7t))
          (if (g$complexnum?$24567$6Dw7t g$num$25001$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.Complex64
              'Sqrt
              '()
              g$num$25001$6Dw7t)
            (if (g$negative?$24600$6Dw7t g$num$25001$6Dw7t)
              (g$make-rectangular$24710$6Dw7t
                '0
                (g$sqrt$24769$6Dw7t (- g$num$25001$6Dw7t)))
              (if (g$bignum?$24559$6Dw7t g$num$25001$6Dw7t)
                (bignum-sqrt g$num$25001$6Dw7t)
                (if (g$infinite?$24588$6Dw7t g$num$25001$6Dw7t)
                  g$num$25001$6Dw7t
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        ((case-lambda
                           ((g$r$25002$6Dw7t)
                            (if (g$exact?$24589$6Dw7t g$num$25001$6Dw7t)
                              (g$exact$24602$6Dw7t g$r$25002$6Dw7t)
                              g$r$25002$6Dw7t)))
                         (clr-call-internal
                           'System.Math
                           'Sqrt
                           '()
                           (g$inexact$24601$6Dw7t
                             g$num$25001$6Dw7t)))))))))))))))
   (g$exact-integer-sqrt$24770$6Dw7t
     g$exact-integer-sqrt$25101$6Dw7t
     (case-lambda
       ((g$num$25003$6Dw7t)
        (if (g$bignum?$24559$6Dw7t g$num$25003$6Dw7t)
          (bignum-sqrt-exact g$num$25003$6Dw7t)
          ((case-lambda
             ((g$r$25004$6Dw7t)
              ((case-lambda
                 ((g$rf$25005$6Dw7t)
                  ((case-lambda
                     ((g$rest$25006$6Dw7t)
                      (values g$rf$25005$6Dw7t g$rest$25006$6Dw7t)))
                   (- g$num$25003$6Dw7t
                      (* g$rf$25005$6Dw7t g$rf$25005$6Dw7t)))))
               (g$exact$24602$6Dw7t
                 (g$floor$24765$6Dw7t g$r$25004$6Dw7t)))))
           (g$sqrt$24769$6Dw7t g$num$25003$6Dw7t))))))
   (g$expt$24771$6Dw7t
     g$expt$25102$6Dw7t
     (case-lambda
       ((g$obj1$25007$6Dw7t g$obj2$25008$6Dw7t)
        (letrec* ((g$make-restriction-violation$25009$6Dw7t
                    (case-lambda
                      (()
                       (condition
                         (g$make-implementation-restriction-violation$20330$6Dw7t)
                         (g$make-who-condition$20292$6Dw7t 'expt)
                         (g$make-message-condition$20232$6Dw7t
                           '"not supported")
                         (g$make-irritants-condition$20282$6Dw7t
                           g$obj1$25007$6Dw7t
                           g$obj2$25008$6Dw7t))))))
          (if (g$rectnum?$24560$6Dw7t g$obj1$25007$6Dw7t)
            (g$expt$24771$6Dw7t
              (g$rectnum->complexnum$24579$6Dw7t g$obj1$25007$6Dw7t)
              g$obj2$25008$6Dw7t)
            (if ((case-lambda
                   ((g$t$25010$6Dw7t)
                    (if g$t$25010$6Dw7t
                      g$t$25010$6Dw7t
                      (begin
                        '#f
                        (g$negative?$24600$6Dw7t g$obj1$25007$6Dw7t)))))
                 (g$complexnum?$24567$6Dw7t g$obj1$25007$6Dw7t))
              (clr-call-internal
                'Microsoft.Scripting.Math.Complex64
                'Pow
                '()
                (g$real->complexnum$24577$6Dw7t g$obj1$25007$6Dw7t)
                (g$real->complexnum$24577$6Dw7t g$obj2$25008$6Dw7t))
              ((case-lambda
                 (()
                  (begin
                    '#f
                    ((case-lambda
                       ((g$e$25011$6Dw7t
                          g$z1$25012$6Dw7t
                          g$z2$25013$6Dw7t)
                        (if (if g$z1$25012$6Dw7t
                              (begin '#f (not g$z2$25013$6Dw7t))
                              '#f)
                          (if g$e$25011$6Dw7t '0 '0.0)
                          (if ((case-lambda
                                 ((g$t$25014$6Dw7t)
                                  (if g$t$25014$6Dw7t
                                    g$t$25014$6Dw7t
                                    (begin
                                      '#f
                                      (g$=$24705$6Dw7t
                                        g$obj1$25007$6Dw7t
                                        '1)))))
                               g$z2$25013$6Dw7t)
                            (if g$e$25011$6Dw7t '1 '1.0)
                            (if (g$=$24705$6Dw7t g$obj2$25008$6Dw7t '1)
                              (if g$e$25011$6Dw7t
                                g$obj1$25007$6Dw7t
                                (g$inexact$24601$6Dw7t
                                  g$obj1$25007$6Dw7t))
                              ((case-lambda
                                 (()
                                  (begin
                                    '#f
                                    ((case-lambda
                                       ((g$neg?$25015$6Dw7t)
                                        ((case-lambda
                                           ((g$obj2$25016$6Dw7t)
                                            (if (if (g$integer?$24594$6Dw7t
                                                      g$obj1$25007$6Dw7t)
                                                  (begin
                                                    '#f
                                                    (g$integer?$24594$6Dw7t
                                                      g$obj2$25016$6Dw7t))
                                                  '#f)
                                              ((case-lambda
                                                 ((g$a$25017$6Dw7t)
                                                  ((case-lambda
                                                     ((g$r$25018$6Dw7t)
                                                      (if g$neg?$25015$6Dw7t
                                                        (if (g$zero?$24598$6Dw7t
                                                              g$r$25018$6Dw7t)
                                                          (raise
                                                            (g$make-restriction-violation$25009$6Dw7t))
                                                          (/ '1
                                                             g$r$25018$6Dw7t))
                                                        (g$exact$24602$6Dw7t
                                                          g$r$25018$6Dw7t))))
                                                   (clr-call-internal
                                                     'Microsoft.Scripting.Math.BigInteger
                                                     'Power
                                                     g$a$25017$6Dw7t
                                                     (g$->fixnum$24580$6Dw7t
                                                       g$obj2$25016$6Dw7t)))))
                                               (g$->bignum$24582$6Dw7t
                                                 g$obj1$25007$6Dw7t))
                                              (if (if (g$rational?$24593$6Dw7t
                                                        g$obj1$25007$6Dw7t)
                                                    (begin
                                                      '#f
                                                      (g$integer?$24594$6Dw7t
                                                        g$obj2$25016$6Dw7t))
                                                    '#f)
                                                ((case-lambda
                                                   ((g$f$25019$6Dw7t)
                                                    (if g$neg?$25015$6Dw7t
                                                      (/ (g$expt$24771$6Dw7t
                                                           (g$denominator$24716$6Dw7t
                                                             g$f$25019$6Dw7t)
                                                           g$obj2$25016$6Dw7t)
                                                         (g$expt$24771$6Dw7t
                                                           (g$numerator$24715$6Dw7t
                                                             g$f$25019$6Dw7t)
                                                           g$obj2$25016$6Dw7t))
                                                      (/ (g$expt$24771$6Dw7t
                                                           (g$numerator$24715$6Dw7t
                                                             g$f$25019$6Dw7t)
                                                           g$obj2$25016$6Dw7t)
                                                         (g$expt$24771$6Dw7t
                                                           (g$denominator$24716$6Dw7t
                                                             g$f$25019$6Dw7t)
                                                           g$obj2$25016$6Dw7t)))))
                                                 (g$->ratnum$24581$6Dw7t
                                                   g$obj1$25007$6Dw7t))
                                                (if (if (g$real?$24592$6Dw7t
                                                          g$obj1$25007$6Dw7t)
                                                      (begin
                                                        '#f
                                                        (g$real?$24592$6Dw7t
                                                          g$obj2$25016$6Dw7t))
                                                      '#f)
                                                  ((case-lambda
                                                     ((g$r$25020$6Dw7t)
                                                      (if g$neg?$25015$6Dw7t
                                                        (/ '1
                                                           g$r$25020$6Dw7t)
                                                        g$r$25020$6Dw7t)))
                                                   (clr-call-internal
                                                     'System.Math
                                                     'Pow
                                                     '()
                                                     (g$inexact$24601$6Dw7t
                                                       g$obj1$25007$6Dw7t)
                                                     (g$inexact$24601$6Dw7t
                                                       g$obj2$25016$6Dw7t)))
                                                  ((case-lambda
                                                     (()
                                                      (begin
                                                        '#f
                                                        (raise
                                                          (g$make-restriction-violation$25009$6Dw7t)))))))))))
                                         (if g$neg?$25015$6Dw7t
                                           (g$abs$24764$6Dw7t
                                             g$obj2$25008$6Dw7t)
                                           g$obj2$25008$6Dw7t))))
                                     (g$negative?$24600$6Dw7t
                                       g$obj2$25008$6Dw7t)))))))))))
                     (if (g$exact?$24589$6Dw7t g$obj1$25007$6Dw7t)
                       (begin
                         '#f
                         (g$exact?$24589$6Dw7t g$obj2$25008$6Dw7t))
                       '#f)
                     (g$zero?$24598$6Dw7t g$obj1$25007$6Dw7t)
                     (g$zero?$24598$6Dw7t
                       g$obj2$25008$6Dw7t)))))))))))))
  (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$set-car!$25103$6Dw7t
     g$set-car!$25109$6Dw7t
     (case-lambda
       ((g$lst$25105$6Dw7t g$val$25106$6Dw7t)
        (begin
          (if (not (pair? g$lst$25105$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'set-car!
              '"not a pair"
              g$val$25106$6Dw7t)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'car
            g$lst$25105$6Dw7t
            g$val$25106$6Dw7t)))))
   (g$set-cdr!$25104$6Dw7t
     g$set-cdr!$25110$6Dw7t
     (case-lambda
       ((g$lst$25107$6Dw7t g$val$25108$6Dw7t)
        (begin
          (if (not (pair? g$lst$25107$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'set-cdr!
              '"not a pair"
              g$val$25108$6Dw7t)
            (void))
          (clr-field-set!-internal
            'IronScheme.Runtime.Cons
            'cdr
            g$lst$25107$6Dw7t
            g$val$25108$6Dw7t))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$25111$6Dw7t
     g$inexact->exact$25131$6Dw7t
     g$exact$25064$6Dw7t)
   (g$exact->inexact$25112$6Dw7t
     g$exact->inexact$25132$6Dw7t
     g$inexact$25063$6Dw7t)
   (g$sign$25113$6Dw7t
     g$sign$25133$6Dw7t
     (case-lambda
       ((g$n$25119$6Dw7t)
        (if (g$>$25072$6Dw7t g$n$25119$6Dw7t '0)
          '1
          (if (g$<$25070$6Dw7t g$n$25119$6Dw7t '0)
            '-1
            ((case-lambda (() (begin '#f '0)))))))))
   (g$quotient$25114$6Dw7t
     g$quotient$25134$6Dw7t
     (case-lambda
       ((g$n1$25120$6Dw7t g$n2$25121$6Dw7t)
        (begin
          (if (not (g$integer-valued?$25059$6Dw7t g$n1$25120$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'quotient
              '"not an integer"
              g$n1$25120$6Dw7t)
            (void))
          (if (not (g$integer-valued?$25059$6Dw7t g$n2$25121$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'quotient
              '"not an integer"
              g$n2$25121$6Dw7t)
            (void))
          (* (g$sign$25113$6Dw7t g$n1$25120$6Dw7t)
             (g$sign$25113$6Dw7t g$n2$25121$6Dw7t)
             (g$div$25094$6Dw7t
               (g$abs$25095$6Dw7t g$n1$25120$6Dw7t)
               (g$abs$25095$6Dw7t g$n2$25121$6Dw7t)))))))
   (g$remainder$25115$6Dw7t
     g$remainder$25135$6Dw7t
     (case-lambda
       ((g$n1$25122$6Dw7t g$n2$25123$6Dw7t)
        (begin
          (if (not (g$integer-valued?$25059$6Dw7t g$n1$25122$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'remainder
              '"not an integer"
              g$n1$25122$6Dw7t)
            (void))
          (if (not (g$integer-valued?$25059$6Dw7t g$n2$25123$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'remainder
              '"not an integer"
              g$n2$25123$6Dw7t)
            (void))
          (* (g$sign$25113$6Dw7t g$n1$25122$6Dw7t)
             (g$mod$24030$6Dw7t
               (g$abs$25095$6Dw7t g$n1$25122$6Dw7t)
               (g$abs$25095$6Dw7t g$n2$25123$6Dw7t)))))))
   (g$modulo$25116$6Dw7t
     g$modulo$25136$6Dw7t
     (case-lambda
       ((g$n1$25124$6Dw7t g$n2$25125$6Dw7t)
        (begin
          (if (not (g$integer-valued?$25059$6Dw7t g$n1$25124$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'modulo
              '"not an integer"
              g$n1$25124$6Dw7t)
            (void))
          (if (not (g$integer-valued?$25059$6Dw7t g$n2$25125$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'modulo
              '"not an integer"
              g$n2$25125$6Dw7t)
            (void))
          (* (g$sign$25113$6Dw7t g$n2$25125$6Dw7t)
             (g$mod$24030$6Dw7t
               (* (g$sign$25113$6Dw7t g$n2$25125$6Dw7t)
                  g$n1$25124$6Dw7t)
               (g$abs$25095$6Dw7t g$n2$25125$6Dw7t)))))))
   (g$make-promise$25117$6Dw7t
     g$make-promise$25137$6Dw7t
     (case-lambda
       ((g$proc$25126$6Dw7t)
        ((case-lambda
           ((g$result-ready?$25127$6Dw7t g$result$25128$6Dw7t)
            (case-lambda
              (()
               (if g$result-ready?$25127$6Dw7t
                 g$result$25128$6Dw7t
                 ((case-lambda
                    ((g$x$25129$6Dw7t)
                     (if g$result-ready?$25127$6Dw7t
                       g$result$25128$6Dw7t
                       (begin
                         (set! g$result-ready?$25127$6Dw7t '#t)
                         (set! g$result$25128$6Dw7t g$x$25129$6Dw7t)
                         g$result$25128$6Dw7t))))
                  (g$proc$25126$6Dw7t)))))))
         '#f
         '#f))))
   (g$force$25118$6Dw7t
     g$force$25138$6Dw7t
     (case-lambda ((g$object$25130$6Dw7t) (g$object$25130$6Dw7t)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$25139$6Dw7t
     g$split$25168$6Dw7t
     (case-lambda
       ((g$ls$25144$6Dw7t)
        ((letrec ((g$loop$25145$6Dw7t
                    (case-lambda
                      ((g$rest$25146$6Dw7t
                         g$left$25147$6Dw7t
                         g$right$25148$6Dw7t)
                       (if (null? g$rest$25146$6Dw7t)
                         (cons g$left$25147$6Dw7t g$right$25148$6Dw7t)
                         (if (null? (cdr g$rest$25146$6Dw7t))
                           (cons
                             (cons
                               (car g$rest$25146$6Dw7t)
                               g$left$25147$6Dw7t)
                             g$right$25148$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$loop$25145$6Dw7t
                                   (g$cddr$24047$6Dw7t
                                     g$rest$25146$6Dw7t)
                                   (cons
                                     (car g$rest$25146$6Dw7t)
                                     g$left$25147$6Dw7t)
                                   (cons
                                     (g$cadr$24045$6Dw7t
                                       g$rest$25146$6Dw7t)
                                     g$right$25148$6Dw7t))))))))))))
           g$loop$25145$6Dw7t)
         g$ls$25144$6Dw7t
         '()
         '()))))
   (g$reverse-it$25140$6Dw7t
     g$reverse-it$25169$6Dw7t
     (case-lambda
       ((g$head$25149$6Dw7t g$tail$25150$6Dw7t)
        (if (null? g$head$25149$6Dw7t)
          g$tail$25150$6Dw7t
          (g$reverse-it$25140$6Dw7t
            (cdr g$head$25149$6Dw7t)
            (cons (car g$head$25149$6Dw7t) g$tail$25150$6Dw7t))))))
   (g$merge$25141$6Dw7t
     g$merge$25170$6Dw7t
     (case-lambda
       ((g$list-1$25151$6Dw7t
          g$list-2$25152$6Dw7t
          g$precedes?$25153$6Dw7t)
        ((letrec ((g$loop$25154$6Dw7t
                    (case-lambda
                      ((g$source-1$25155$6Dw7t
                         g$source-2$25156$6Dw7t
                         g$so-far$25157$6Dw7t)
                       (if (null? g$source-1$25155$6Dw7t)
                         (g$reverse-it$25140$6Dw7t
                           g$so-far$25157$6Dw7t
                           g$source-2$25156$6Dw7t)
                         (if (null? g$source-2$25156$6Dw7t)
                           (g$reverse-it$25140$6Dw7t
                             g$so-far$25157$6Dw7t
                             g$source-1$25155$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$car-1$25158$6Dw7t
                                       g$car-2$25159$6Dw7t)
                                     (if (g$precedes?$25153$6Dw7t
                                           g$car-2$25159$6Dw7t
                                           g$car-1$25158$6Dw7t)
                                       (g$loop$25154$6Dw7t
                                         g$source-1$25155$6Dw7t
                                         (cdr g$source-2$25156$6Dw7t)
                                         (cons
                                           g$car-2$25159$6Dw7t
                                           g$so-far$25157$6Dw7t))
                                       (g$loop$25154$6Dw7t
                                         g$source-2$25156$6Dw7t
                                         (cdr g$source-1$25155$6Dw7t)
                                         (cons
                                           g$car-1$25158$6Dw7t
                                           g$so-far$25157$6Dw7t)))))
                                  (car g$source-1$25155$6Dw7t)
                                  (car g$source-2$25156$6Dw7t))))))))))))
           g$loop$25154$6Dw7t)
         g$list-1$25151$6Dw7t
         g$list-2$25152$6Dw7t
         '()))))
   (g$list-sort$25142$6Dw7t
     g$list-sort$25171$6Dw7t
     (case-lambda
       ((g$precedes?$25160$6Dw7t g$ls$25161$6Dw7t)
        (if (null? g$ls$25161$6Dw7t)
          '()
          ((letrec ((g$helper$25162$6Dw7t
                      (case-lambda
                        ((g$piece$25163$6Dw7t)
                         (if (null? (cdr g$piece$25163$6Dw7t))
                           g$piece$25163$6Dw7t
                           ((case-lambda
                              ((g$parts$25164$6Dw7t)
                               (g$merge$25141$6Dw7t
                                 (g$helper$25162$6Dw7t
                                   (car g$parts$25164$6Dw7t))
                                 (g$helper$25162$6Dw7t
                                   (cdr g$parts$25164$6Dw7t))
                                 g$precedes?$25160$6Dw7t)))
                            (g$split$25139$6Dw7t
                              g$piece$25163$6Dw7t)))))))
             g$helper$25162$6Dw7t)
           g$ls$25161$6Dw7t)))))
   (g$vector-sort$25143$6Dw7t
     g$vector-sort$25172$6Dw7t
     (case-lambda
       ((g$pred?$25165$6Dw7t g$vec$25166$6Dw7t)
        (begin
          (if (not (g$vector?$24005$6Dw7t g$vec$25166$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'vector-sort
              '"not a vector"
              g$vec$25166$6Dw7t)
            (void))
          ((case-lambda
             ((g$vec$25167$6Dw7t)
              (begin
                (vector-sort! g$pred?$25165$6Dw7t g$vec$25167$6Dw7t)
                g$vec$25167$6Dw7t)))
           (clr-call-internal
             'System.Array
             'Clone
             g$vec$25166$6Dw7t)))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$using$25174$6Dw7t
     g$using$25403$6Dw7t
     (clr-using-internal 'System.Globalization))
   (g$compare-info$25175$6Dw7t
     g$compare-info$25404$6Dw7t
     (clr-call-internal
       'CultureInfo
       'get_CompareInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$text-info$25176$6Dw7t
     g$text-info$25405$6Dw7t
     (clr-call-internal
       'CultureInfo
       'get_TextInfo
       (clr-call-internal 'CultureInfo 'get_InvariantCulture '())))
   (g$char-upcase$25177$6Dw7t
     g$char-upcase$25406$6Dw7t
     (case-lambda
       ((g$chr$25329$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25329$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-upcase
              '"not a character"
              g$chr$25329$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            'ToUpper
            '()
            g$chr$25329$6Dw7t)))))
   (g$char-downcase$25178$6Dw7t
     g$char-downcase$25407$6Dw7t
     (case-lambda
       ((g$chr$25330$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25330$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-downcase
              '"not a character"
              g$chr$25330$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            'ToLower
            '()
            g$chr$25330$6Dw7t)))))
   (g$char-titlecase$25179$6Dw7t
     g$char-titlecase$25408$6Dw7t
     (case-lambda
       ((g$chr$25331$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25331$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-titlecase
              '"not a character"
              g$chr$25331$6Dw7t)
            (void))
          (g$string-ref$24016$6Dw7t
            (clr-call-internal
              'TextInfo
              'ToTitleCase
              g$text-info$25176$6Dw7t
              (g$->string$25189$6Dw7t
                (g$string$24021$6Dw7t g$chr$25331$6Dw7t)))
            '0)))))
   (g$char-foldcase$25180$6Dw7t
     g$char-foldcase$25409$6Dw7t
     (case-lambda
       ((g$chr$25332$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25332$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-foldcase
              '"not a character"
              g$chr$25332$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            'ToLowerInvariant
            '()
            (clr-call-internal
              'System.Char
              'ToUpperInvariant
              '()
              g$chr$25332$6Dw7t))))))
   (g$char-alphabetic?$25181$6Dw7t
     g$char-alphabetic?$25410$6Dw7t
     (case-lambda
       ((g$chr$25333$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25333$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-alphabetic?
              '"not a character"
              g$chr$25333$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLetter(Char)"
            '()
            g$chr$25333$6Dw7t)))))
   (g$char-numeric?$25182$6Dw7t
     g$char-numeric?$25411$6Dw7t
     (case-lambda
       ((g$chr$25334$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25334$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-numeric?
              '"not a character"
              g$chr$25334$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            '"IsDigit(Char)"
            '()
            g$chr$25334$6Dw7t)))))
   (g$char-whitespace?$25183$6Dw7t
     g$char-whitespace?$25412$6Dw7t
     (case-lambda
       ((g$chr$25335$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25335$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-whitespace?
              '"not a character"
              g$chr$25335$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            '"IsWhiteSpace(Char)"
            '()
            g$chr$25335$6Dw7t)))))
   (g$char-upper-case?$25184$6Dw7t
     g$char-upper-case?$25413$6Dw7t
     (case-lambda
       ((g$chr$25336$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25336$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-upper-case?
              '"not a character"
              g$chr$25336$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            '"IsUpper(Char)"
            '()
            g$chr$25336$6Dw7t)))))
   (g$char-lower-case?$25185$6Dw7t
     g$char-lower-case?$25414$6Dw7t
     (case-lambda
       ((g$chr$25337$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25337$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-lower-case?
              '"not a character"
              g$chr$25337$6Dw7t)
            (void))
          (clr-call-internal
            'System.Char
            '"IsLower(Char)"
            '()
            g$chr$25337$6Dw7t)))))
   (g$char-title-case?$25186$6Dw7t
     g$char-title-case?$25415$6Dw7t
     (case-lambda
       ((g$chr$25338$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25338$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-title-case?
              '"not a character"
              g$chr$25338$6Dw7t)
            (void))
          ((case-lambda
             ((g$t$25339$6Dw7t)
              (if (g$memv$23570$6Dw7t g$t$25339$6Dw7t '(#\I #\A))
                '#f
                ((case-lambda
                   (()
                    (begin
                      '#f
                      (eqv?
                        g$chr$25338$6Dw7t
                        (g$char-titlecase$25179$6Dw7t
                          g$chr$25338$6Dw7t)))))))))
           g$chr$25338$6Dw7t)))))
   (g$char-general-category$25187$6Dw7t
     g$char-general-category$25416$6Dw7t
     (case-lambda
       ((g$chr$25340$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$chr$25340$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-general-category
              '"not a character"
              g$chr$25340$6Dw7t)
            (void))
          ((case-lambda
             ((g$t$25341$6Dw7t)
              (if (eqv? g$t$25341$6Dw7t 'closepunctuation)
                'Pe
                (if (eqv? g$t$25341$6Dw7t 'connectorpunctuation)
                  'Pc
                  (if (eqv? g$t$25341$6Dw7t 'control)
                    'Cc
                    (if (eqv? g$t$25341$6Dw7t 'currencysymbol)
                      'Sc
                      (if (eqv? g$t$25341$6Dw7t 'dashpunctuation)
                        'Pd
                        (if (eqv? g$t$25341$6Dw7t 'decimaldigitnumber)
                          'Nd
                          (if (eqv? g$t$25341$6Dw7t 'enclosingmark)
                            'Me
                            (if (eqv?
                                  g$t$25341$6Dw7t
                                  'finalquotepunctuation)
                              'Pf
                              (if (eqv? g$t$25341$6Dw7t 'format)
                                'Cf
                                (if (eqv?
                                      g$t$25341$6Dw7t
                                      'initialquotepunctuation)
                                  'Pi
                                  (if (eqv?
                                        g$t$25341$6Dw7t
                                        'letternumber)
                                    'Nl
                                    (if (eqv?
                                          g$t$25341$6Dw7t
                                          'lineseparator)
                                      'Zl
                                      (if (eqv?
                                            g$t$25341$6Dw7t
                                            'lowercaseletter)
                                        'Ll
                                        (if (eqv?
                                              g$t$25341$6Dw7t
                                              'mathsymbol)
                                          'Sm
                                          (if (eqv?
                                                g$t$25341$6Dw7t
                                                'modifierletter)
                                            'Lm
                                            (if (eqv?
                                                  g$t$25341$6Dw7t
                                                  'modifiersymbol)
                                              'Sk
                                              (if (eqv?
                                                    g$t$25341$6Dw7t
                                                    'nonspacingmark)
                                                'Mn
                                                (if (eqv?
                                                      g$t$25341$6Dw7t
                                                      'openpunctuation)
                                                  'Ps
                                                  (if (eqv?
                                                        g$t$25341$6Dw7t
                                                        'otherletter)
                                                    'Lo
                                                    (if (eqv?
                                                          g$t$25341$6Dw7t
                                                          'othernotassigned)
                                                      'Cn
                                                      (if (eqv?
                                                            g$t$25341$6Dw7t
                                                            'othernumber)
                                                        'No
                                                        (if (eqv?
                                                              g$t$25341$6Dw7t
                                                              'otherpunctuation)
                                                          'Po
                                                          (if (eqv?
                                                                g$t$25341$6Dw7t
                                                                'othersymbol)
                                                            'So
                                                            (if (eqv?
                                                                  g$t$25341$6Dw7t
                                                                  'paragraphseparator)
                                                              'Zp
                                                              (if (eqv?
                                                                    g$t$25341$6Dw7t
                                                                    'privateuse)
                                                                'Co
                                                                (if (eqv?
                                                                      g$t$25341$6Dw7t
                                                                      'spaceseparator)
                                                                  'Zs
                                                                  (if (eqv?
                                                                        g$t$25341$6Dw7t
                                                                        'spacingcombiningmark)
                                                                    'Mc
                                                                    (if (eqv?
                                                                          g$t$25341$6Dw7t
                                                                          'surrogate)
                                                                      'Cs
                                                                      (if (eqv?
                                                                            g$t$25341$6Dw7t
                                                                            'titlecaseletter)
                                                                        'Lt
                                                                        (if (eqv?
                                                                              g$t$25341$6Dw7t
                                                                              'uppercaseletter)
                                                                          'Lu
                                                                          ((case-lambda
                                                                             (()
                                                                              (begin
                                                                                '#f
                                                                                '#f))))))))))))))))))))))))))))))))))))
           (clr-call-internal
             'System.Char
             '"GetUnicodeCategory(Char)"
             '()
             g$chr$25340$6Dw7t))))))
   (g$clr-string?$25188$6Dw7t
     g$clr-string?$25417$6Dw7t
     (case-lambda
       ((g$obj$25342$6Dw7t)
        (clr-is-internal 'System.String g$obj$25342$6Dw7t))))
   (g$->string$25189$6Dw7t
     g$->string$25418$6Dw7t
     (case-lambda
       ((g$str$25343$6Dw7t)
        (if (g$clr-string?$25188$6Dw7t g$str$25343$6Dw7t)
          g$str$25343$6Dw7t
          (clr-call-internal 'Object 'ToString g$str$25343$6Dw7t)))))
   (g$string-ci-compare$25209$6Dw7t
     g$string-ci-compare$25419$6Dw7t
     (case-lambda
       ((g$a$25344$6Dw7t g$b$25345$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$a$25344$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci-compare
              '"not a string"
              g$a$25344$6Dw7t)
            (void))
          (if (not (g$string?$24003$6Dw7t g$b$25345$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci-compare
              '"not a string"
              g$b$25345$6Dw7t)
            (void))
          (clr-call-internal
            'CompareInfo
            '"Compare(String,String,CompareOptions)"
            g$compare-info$25175$6Dw7t
            (g$->string$25189$6Dw7t g$a$25344$6Dw7t)
            (g$->string$25189$6Dw7t g$b$25345$6Dw7t)
            'IgnoreCase)))))
   (g$string-ci=?$25248$6Dw7t
     g$string-ci=?$25420$6Dw7t
     (case-lambda
       ((g$a$25346$6Dw7t g$b$25347$6Dw7t . g$rest$25348$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$a$25346$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci=?
              '"not a string"
              g$a$25346$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25349$6Dw7t)
               (begin
                 (if (not (g$string?$24003$6Dw7t g$x$25349$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string-ci=?
                     '"not a string"
                     g$x$25349$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25350$6Dw7t)
                     (begin
                       (set! g$a$25346$6Dw7t g$x$25349$6Dw7t)
                       g$r$25350$6Dw7t)))
                  (g$fx=?$23307$6Dw7t
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$25175$6Dw7t
                      (g$->string$25189$6Dw7t g$a$25346$6Dw7t)
                      (g$->string$25189$6Dw7t g$x$25349$6Dw7t)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$25347$6Dw7t g$rest$25348$6Dw7t))))))
   (g$string-ci<?$25249$6Dw7t
     g$string-ci<?$25421$6Dw7t
     (case-lambda
       ((g$a$25351$6Dw7t g$b$25352$6Dw7t . g$rest$25353$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$a$25351$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci<?
              '"not a string"
              g$a$25351$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25354$6Dw7t)
               (begin
                 (if (not (g$string?$24003$6Dw7t g$x$25354$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string-ci<?
                     '"not a string"
                     g$x$25354$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25355$6Dw7t)
                     (begin
                       (set! g$a$25351$6Dw7t g$x$25354$6Dw7t)
                       g$r$25355$6Dw7t)))
                  (g$fx<?$23308$6Dw7t
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$25175$6Dw7t
                      (g$->string$25189$6Dw7t g$a$25351$6Dw7t)
                      (g$->string$25189$6Dw7t g$x$25354$6Dw7t)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$25352$6Dw7t g$rest$25353$6Dw7t))))))
   (g$string-ci>?$25250$6Dw7t
     g$string-ci>?$25422$6Dw7t
     (case-lambda
       ((g$a$25356$6Dw7t g$b$25357$6Dw7t . g$rest$25358$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$a$25356$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci>?
              '"not a string"
              g$a$25356$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25359$6Dw7t)
               (begin
                 (if (not (g$string?$24003$6Dw7t g$x$25359$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string-ci>?
                     '"not a string"
                     g$x$25359$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25360$6Dw7t)
                     (begin
                       (set! g$a$25356$6Dw7t g$x$25359$6Dw7t)
                       g$r$25360$6Dw7t)))
                  (g$fx>?$23310$6Dw7t
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$25175$6Dw7t
                      (g$->string$25189$6Dw7t g$a$25356$6Dw7t)
                      (g$->string$25189$6Dw7t g$x$25359$6Dw7t)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$25357$6Dw7t g$rest$25358$6Dw7t))))))
   (g$string-ci<=?$25251$6Dw7t
     g$string-ci<=?$25423$6Dw7t
     (case-lambda
       ((g$a$25361$6Dw7t g$b$25362$6Dw7t . g$rest$25363$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$a$25361$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci<=?
              '"not a string"
              g$a$25361$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25364$6Dw7t)
               (begin
                 (if (not (g$string?$24003$6Dw7t g$x$25364$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string-ci<=?
                     '"not a string"
                     g$x$25364$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25365$6Dw7t)
                     (begin
                       (set! g$a$25361$6Dw7t g$x$25364$6Dw7t)
                       g$r$25365$6Dw7t)))
                  (g$fx<=?$23309$6Dw7t
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$25175$6Dw7t
                      (g$->string$25189$6Dw7t g$a$25361$6Dw7t)
                      (g$->string$25189$6Dw7t g$x$25364$6Dw7t)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$25362$6Dw7t g$rest$25363$6Dw7t))))))
   (g$string-ci>=?$25252$6Dw7t
     g$string-ci>=?$25424$6Dw7t
     (case-lambda
       ((g$a$25366$6Dw7t g$b$25367$6Dw7t . g$rest$25368$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$a$25366$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-ci>=?
              '"not a string"
              g$a$25366$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25369$6Dw7t)
               (begin
                 (if (not (g$string?$24003$6Dw7t g$x$25369$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'string-ci>=?
                     '"not a string"
                     g$x$25369$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25370$6Dw7t)
                     (begin
                       (set! g$a$25366$6Dw7t g$x$25369$6Dw7t)
                       g$r$25370$6Dw7t)))
                  (g$fx>=?$23311$6Dw7t
                    (clr-call-internal
                      'CompareInfo
                      '"Compare(String,String,CompareOptions)"
                      g$compare-info$25175$6Dw7t
                      (g$->string$25189$6Dw7t g$a$25366$6Dw7t)
                      (g$->string$25189$6Dw7t g$x$25369$6Dw7t)
                      'IgnoreCase)
                    '0)))))
            (cons g$b$25367$6Dw7t g$rest$25368$6Dw7t))))))
   (g$string-titlecase$25253$6Dw7t
     g$string-titlecase$25425$6Dw7t
     (case-lambda
       ((g$str$25371$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$str$25371$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-titlecase
              '"not a string"
              g$str$25371$6Dw7t)
            (void))
          (clr-call-internal
            'TextInfo
            'ToTitleCase
            g$text-info$25176$6Dw7t
            (string-downcase g$str$25371$6Dw7t))))))
   (g$string-foldcase$25254$6Dw7t
     g$string-foldcase$25426$6Dw7t
     (case-lambda
       ((g$str$25372$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$str$25372$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'string-foldcase
              '"not a string"
              g$str$25372$6Dw7t)
            (void))
          (clr-call-internal
            'System.String
            'ToLowerInvariant
            (g$string-upcase$25298$6Dw7t g$str$25372$6Dw7t))))))
   (g$char-ci=?$25293$6Dw7t
     g$char-ci=?$25427$6Dw7t
     (case-lambda
       ((g$a$25373$6Dw7t g$b$25374$6Dw7t . g$rest$25375$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$a$25373$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-ci=?
              '"not a char"
              g$a$25373$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25376$6Dw7t)
               (begin
                 (if (not (g$char?$24004$6Dw7t g$x$25376$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char-ci=?
                     '"not a char"
                     g$x$25376$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25377$6Dw7t)
                     (begin
                       (set! g$a$25373$6Dw7t g$x$25376$6Dw7t)
                       g$r$25377$6Dw7t)))
                  (g$fx=?$23307$6Dw7t
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$a$25373$6Dw7t))
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$x$25376$6Dw7t)))))))
            (cons g$b$25374$6Dw7t g$rest$25375$6Dw7t))))))
   (g$char-ci<?$25294$6Dw7t
     g$char-ci<?$25428$6Dw7t
     (case-lambda
       ((g$a$25378$6Dw7t g$b$25379$6Dw7t . g$rest$25380$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$a$25378$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-ci<?
              '"not a char"
              g$a$25378$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25381$6Dw7t)
               (begin
                 (if (not (g$char?$24004$6Dw7t g$x$25381$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char-ci<?
                     '"not a char"
                     g$x$25381$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25382$6Dw7t)
                     (begin
                       (set! g$a$25378$6Dw7t g$x$25381$6Dw7t)
                       g$r$25382$6Dw7t)))
                  (g$fx<?$23308$6Dw7t
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$a$25378$6Dw7t))
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$x$25381$6Dw7t)))))))
            (cons g$b$25379$6Dw7t g$rest$25380$6Dw7t))))))
   (g$char-ci>?$25295$6Dw7t
     g$char-ci>?$25429$6Dw7t
     (case-lambda
       ((g$a$25383$6Dw7t g$b$25384$6Dw7t . g$rest$25385$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$a$25383$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-ci>?
              '"not a char"
              g$a$25383$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25386$6Dw7t)
               (begin
                 (if (not (g$char?$24004$6Dw7t g$x$25386$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char-ci>?
                     '"not a char"
                     g$x$25386$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25387$6Dw7t)
                     (begin
                       (set! g$a$25383$6Dw7t g$x$25386$6Dw7t)
                       g$r$25387$6Dw7t)))
                  (g$fx>?$23310$6Dw7t
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$a$25383$6Dw7t))
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$x$25386$6Dw7t)))))))
            (cons g$b$25384$6Dw7t g$rest$25385$6Dw7t))))))
   (g$char-ci<=?$25296$6Dw7t
     g$char-ci<=?$25430$6Dw7t
     (case-lambda
       ((g$a$25388$6Dw7t g$b$25389$6Dw7t . g$rest$25390$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$a$25388$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-ci<=?
              '"not a char"
              g$a$25388$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25391$6Dw7t)
               (begin
                 (if (not (g$char?$24004$6Dw7t g$x$25391$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char-ci<=?
                     '"not a char"
                     g$x$25391$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25392$6Dw7t)
                     (begin
                       (set! g$a$25388$6Dw7t g$x$25391$6Dw7t)
                       g$r$25392$6Dw7t)))
                  (g$fx<=?$23309$6Dw7t
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$a$25388$6Dw7t))
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$x$25391$6Dw7t)))))))
            (cons g$b$25389$6Dw7t g$rest$25390$6Dw7t))))))
   (g$char-ci>=?$25297$6Dw7t
     g$char-ci>=?$25431$6Dw7t
     (case-lambda
       ((g$a$25393$6Dw7t g$b$25394$6Dw7t . g$rest$25395$6Dw7t)
        (begin
          (if (not (g$char?$24004$6Dw7t g$a$25393$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'char-ci>=?
              '"not a char"
              g$a$25393$6Dw7t)
            (void))
          (g$for-all$23579$6Dw7t
            (case-lambda
              ((g$x$25396$6Dw7t)
               (begin
                 (if (not (g$char?$24004$6Dw7t g$x$25396$6Dw7t))
                   (g$assertion-violation$20490$6Dw7t
                     'char-ci>=?
                     '"not a char"
                     g$x$25396$6Dw7t)
                   (void))
                 ((case-lambda
                    ((g$r$25397$6Dw7t)
                     (begin
                       (set! g$a$25393$6Dw7t g$x$25396$6Dw7t)
                       g$r$25397$6Dw7t)))
                  (g$fx>=?$23311$6Dw7t
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$a$25393$6Dw7t))
                    (g$char->integer$24013$6Dw7t
                      (g$char-upcase$25177$6Dw7t g$x$25396$6Dw7t)))))))
            (cons g$b$25394$6Dw7t g$rest$25395$6Dw7t))))))
   (g$string-upcase$25298$6Dw7t
     g$string-upcase$25432$6Dw7t
     (case-lambda
       ((g$str$25398$6Dw7t)
        (if (g$string?$24003$6Dw7t g$str$25398$6Dw7t)
          (clr-call-internal
            'System.String
            'Replace
            (clr-call-internal
              'System.String
              'ToUpper
              (g$->string$25189$6Dw7t g$str$25398$6Dw7t))
            '"ß"
            '"SS")
          (g$assertion-violation$20490$6Dw7t
            'string-upcase
            '"not a string"
            g$str$25398$6Dw7t)))))
   (g$string-normalize-nfc$25325$6Dw7t
     g$string-normalize-nfc$25433$6Dw7t
     (case-lambda
       ((g$s$25399$6Dw7t)
        (if (g$string?$24003$6Dw7t g$s$25399$6Dw7t)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$25189$6Dw7t g$s$25399$6Dw7t)
            'formc)
          (g$assertion-violation$20490$6Dw7t
            'string-normalize
            '"not a string"
            g$s$25399$6Dw7t)))))
   (g$string-normalize-nfd$25326$6Dw7t
     g$string-normalize-nfd$25434$6Dw7t
     (case-lambda
       ((g$s$25400$6Dw7t)
        (if (g$string?$24003$6Dw7t g$s$25400$6Dw7t)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$25189$6Dw7t g$s$25400$6Dw7t)
            'formd)
          (g$assertion-violation$20490$6Dw7t
            'string-normalize
            '"not a string"
            g$s$25400$6Dw7t)))))
   (g$string-normalize-nfkc$25327$6Dw7t
     g$string-normalize-nfkc$25435$6Dw7t
     (case-lambda
       ((g$s$25401$6Dw7t)
        (if (g$string?$24003$6Dw7t g$s$25401$6Dw7t)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$25189$6Dw7t g$s$25401$6Dw7t)
            'formkc)
          (g$assertion-violation$20490$6Dw7t
            'string-normalize
            '"not a string"
            g$s$25401$6Dw7t)))))
   (g$string-normalize-nfkd$25328$6Dw7t
     g$string-normalize-nfkd$25436$6Dw7t
     (case-lambda
       ((g$s$25402$6Dw7t)
        (if (g$string?$24003$6Dw7t g$s$25402$6Dw7t)
          (clr-call-internal
            'System.String
            'Normalize
            (g$->string$25189$6Dw7t g$s$25402$6Dw7t)
            'formkd)
          (g$assertion-violation$20490$6Dw7t
            'string-normalize
            '"not a string"
            g$s$25402$6Dw7t))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bignum?$25437$6Dw7t
     g$bignum?$25525$6Dw7t
     (case-lambda
       ((g$obj$25456$6Dw7t)
        (clr-is-internal
          'Microsoft.Scripting.Math.BigInteger
          g$obj$25456$6Dw7t))))
   (g$->bignum$25438$6Dw7t
     g$->bignum$25526$6Dw7t
     (case-lambda
       ((g$ei$25457$6Dw7t)
        (if (g$bignum?$25437$6Dw7t g$ei$25457$6Dw7t)
          g$ei$25457$6Dw7t
          (if (g$fixnum?$24010$6Dw7t g$ei$25457$6Dw7t)
            (clr-call-internal
              'Microsoft.Scripting.Math.BigInteger
              '"Create(System.Int32)"
              '()
              g$ei$25457$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    '#f
                    '"not a exact integer"
                    g$ei$25457$6Dw7t))))))))))
   (g$bitwise-not$25439$6Dw7t
     g$bitwise-not$25527$6Dw7t
     (case-lambda
       ((g$ei$25458$6Dw7t)
        (g$exact$25064$6Dw7t
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_OnesComplement
            '()
            (g$->bignum$25438$6Dw7t g$ei$25458$6Dw7t))))))
   (g$bitwise-and$25440$6Dw7t
     g$bitwise-and$25528$6Dw7t
     (case-lambda
       (() '-1)
       ((g$ei$25459$6Dw7t) (g$->bignum$25438$6Dw7t g$ei$25459$6Dw7t))
       ((g$ei1$25460$6Dw7t g$ei2$25461$6Dw7t)
        (g$exact$25064$6Dw7t
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseAnd
            '()
            (g$->bignum$25438$6Dw7t g$ei1$25460$6Dw7t)
            (g$->bignum$25438$6Dw7t g$ei2$25461$6Dw7t))))
       ((g$ei1$25462$6Dw7t g$ei2$25463$6Dw7t . g$rest$25464$6Dw7t)
        (g$fold-left$23588$6Dw7t
          g$bitwise-and$25440$6Dw7t
          (g$->bignum$25438$6Dw7t g$ei1$25462$6Dw7t)
          (cons g$ei2$25463$6Dw7t g$rest$25464$6Dw7t)))))
   (g$bitwise-ior$25441$6Dw7t
     g$bitwise-ior$25529$6Dw7t
     (case-lambda
       (() '0)
       ((g$ei$25465$6Dw7t) (g$->bignum$25438$6Dw7t g$ei$25465$6Dw7t))
       ((g$ei1$25466$6Dw7t g$ei2$25467$6Dw7t)
        (g$exact$25064$6Dw7t
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_BitwiseOr
            '()
            (g$->bignum$25438$6Dw7t g$ei1$25466$6Dw7t)
            (g$->bignum$25438$6Dw7t g$ei2$25467$6Dw7t))))
       ((g$ei1$25468$6Dw7t g$ei2$25469$6Dw7t . g$rest$25470$6Dw7t)
        (g$fold-left$23588$6Dw7t
          g$bitwise-ior$25441$6Dw7t
          (g$->bignum$25438$6Dw7t g$ei1$25468$6Dw7t)
          (cons g$ei2$25469$6Dw7t g$rest$25470$6Dw7t)))))
   (g$bitwise-xor$25442$6Dw7t
     g$bitwise-xor$25530$6Dw7t
     (case-lambda
       (() '0)
       ((g$ei$25471$6Dw7t) (g$->bignum$25438$6Dw7t g$ei$25471$6Dw7t))
       ((g$ei1$25472$6Dw7t g$ei2$25473$6Dw7t)
        (g$exact$25064$6Dw7t
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'op_ExclusiveOr
            '()
            (g$->bignum$25438$6Dw7t g$ei1$25472$6Dw7t)
            (g$->bignum$25438$6Dw7t g$ei2$25473$6Dw7t))))
       ((g$ei1$25474$6Dw7t g$ei2$25475$6Dw7t . g$rest$25476$6Dw7t)
        (g$fold-left$23588$6Dw7t
          g$bitwise-xor$25442$6Dw7t
          (g$->bignum$25438$6Dw7t g$ei1$25474$6Dw7t)
          (cons g$ei2$25475$6Dw7t g$rest$25476$6Dw7t)))))
   (g$bitwise-bit-count$25443$6Dw7t
     g$bitwise-bit-count$25531$6Dw7t
     (case-lambda
       ((g$ei$25477$6Dw7t)
        (if (g$positive?$25061$6Dw7t g$ei$25477$6Dw7t)
          ((letrec ((g$f$25478$6Dw7t
                      (case-lambda
                        ((g$c$25479$6Dw7t g$ei$25480$6Dw7t)
                         (if (g$positive?$25061$6Dw7t g$ei$25480$6Dw7t)
                           (g$f$25478$6Dw7t
                             (+ g$c$25479$6Dw7t
                                (g$bitwise-and$25440$6Dw7t
                                  g$ei$25480$6Dw7t
                                  '1))
                             (g$bitwise-arithmetic-shift-right$25453$6Dw7t
                               g$ei$25480$6Dw7t
                               '1))
                           g$c$25479$6Dw7t)))))
             g$f$25478$6Dw7t)
           '0
           (g$->bignum$25438$6Dw7t g$ei$25477$6Dw7t))
          (g$bitwise-not$25439$6Dw7t
            (g$bitwise-bit-count$25443$6Dw7t
              (g$bitwise-not$25439$6Dw7t g$ei$25477$6Dw7t)))))))
   (g$bitwise-length$25444$6Dw7t
     g$bitwise-length$25532$6Dw7t
     (case-lambda
       ((g$ei$25481$6Dw7t)
        ((case-lambda
           ((g$ei$25482$6Dw7t)
            (if (clr-call-internal
                  'Microsoft.Scripting.Math.BigInteger
                  'op_LessThan
                  '()
                  g$ei$25482$6Dw7t
                  (g$->bignum$25438$6Dw7t '0))
              (g$bitwise-length$25444$6Dw7t
                (g$bitwise-not$25439$6Dw7t g$ei$25482$6Dw7t))
              (clr-call-internal
                'Microsoft.Scripting.Math.BigInteger
                'get_BitLength
                g$ei$25482$6Dw7t))))
         (g$->bignum$25438$6Dw7t g$ei$25481$6Dw7t)))))
   (g$bitwise-first-bit-set$25445$6Dw7t
     g$bitwise-first-bit-set$25533$6Dw7t
     (case-lambda
       ((g$ei$25483$6Dw7t)
        ((case-lambda
           ((g$ei$25484$6Dw7t)
            (if (g$zero?$25060$6Dw7t g$ei$25484$6Dw7t)
              '-1
              ((letrec ((g$f$25485$6Dw7t
                          (case-lambda
                            ((g$c$25486$6Dw7t g$ei$25487$6Dw7t)
                             (if (g$=$25069$6Dw7t
                                   '1
                                   (g$bitwise-and$25440$6Dw7t
                                     g$ei$25487$6Dw7t
                                     '1))
                               g$c$25486$6Dw7t
                               (g$f$25485$6Dw7t
                                 (+ g$c$25486$6Dw7t '1)
                                 (g$bitwise-arithmetic-shift-right$25453$6Dw7t
                                   g$ei$25487$6Dw7t
                                   '1)))))))
                 g$f$25485$6Dw7t)
               '0
               g$ei$25484$6Dw7t))))
         (g$->bignum$25438$6Dw7t g$ei$25483$6Dw7t)))))
   (g$bitwise-bit-set?$25446$6Dw7t
     g$bitwise-bit-set?$25534$6Dw7t
     (case-lambda
       ((g$ei$25488$6Dw7t g$k$25489$6Dw7t)
        ((case-lambda
           ((g$ei$25490$6Dw7t g$k$25491$6Dw7t)
            (begin
              (if (g$negative?$25062$6Dw7t g$k$25491$6Dw7t)
                (g$assertion-violation$20490$6Dw7t
                  'bitwise-bit-set?
                  '"cannot be negative"
                  g$k$25491$6Dw7t)
                (void))
              (if (g$=$25069$6Dw7t '-1 g$ei$25490$6Dw7t)
                '#t
                ((case-lambda
                   (()
                    (begin
                      '#f
                      (g$=$25069$6Dw7t
                        '1
                        (g$bitwise-and$25440$6Dw7t
                          '1
                          (g$bitwise-arithmetic-shift-right$25453$6Dw7t
                            g$ei$25490$6Dw7t
                            g$k$25491$6Dw7t)))))))))))
         (g$->bignum$25438$6Dw7t g$ei$25488$6Dw7t)
         (g$->bignum$25438$6Dw7t g$k$25489$6Dw7t)))))
   (g$bitwise-if$25447$6Dw7t
     g$bitwise-if$25535$6Dw7t
     (case-lambda
       ((g$ei1$25492$6Dw7t g$ei2$25493$6Dw7t g$ei3$25494$6Dw7t)
        (g$bitwise-ior$25441$6Dw7t
          (g$bitwise-and$25440$6Dw7t
            g$ei1$25492$6Dw7t
            g$ei2$25493$6Dw7t)
          (g$bitwise-and$25440$6Dw7t
            (g$bitwise-not$25439$6Dw7t g$ei1$25492$6Dw7t)
            g$ei3$25494$6Dw7t)))))
   (g$bitwise-copy-bit$25448$6Dw7t
     g$bitwise-copy-bit$25536$6Dw7t
     (case-lambda
       ((g$ei1$25495$6Dw7t g$ei2$25496$6Dw7t g$ei3$25497$6Dw7t)
        (g$bitwise-if$25447$6Dw7t
          (g$bitwise-arithmetic-shift-left$25452$6Dw7t
            '1
            g$ei2$25496$6Dw7t)
          (g$bitwise-arithmetic-shift-left$25452$6Dw7t
            g$ei3$25497$6Dw7t
            g$ei2$25496$6Dw7t)
          g$ei1$25495$6Dw7t))))
   (g$bitwise-bit-field$25449$6Dw7t
     g$bitwise-bit-field$25537$6Dw7t
     (case-lambda
       ((g$ei1$25498$6Dw7t g$ei2$25499$6Dw7t g$ei3$25500$6Dw7t)
        (g$bitwise-arithmetic-shift-right$25453$6Dw7t
          (g$bitwise-and$25440$6Dw7t
            g$ei1$25498$6Dw7t
            (g$bitwise-not$25439$6Dw7t
              (g$bitwise-arithmetic-shift-left$25452$6Dw7t
                '-1
                g$ei3$25500$6Dw7t)))
          g$ei2$25499$6Dw7t))))
   (g$bitwise-copy-bit-field$25450$6Dw7t
     g$bitwise-copy-bit-field$25538$6Dw7t
     (case-lambda
       ((g$to$25501$6Dw7t
          g$start$25502$6Dw7t
          g$end$25503$6Dw7t
          g$from$25504$6Dw7t)
        (g$bitwise-if$25447$6Dw7t
          (g$bitwise-and$25440$6Dw7t
            (g$bitwise-arithmetic-shift-left$25452$6Dw7t
              '-1
              g$start$25502$6Dw7t)
            (g$bitwise-not$25439$6Dw7t
              (g$bitwise-arithmetic-shift-left$25452$6Dw7t
                '-1
                g$end$25503$6Dw7t)))
          (g$bitwise-arithmetic-shift-left$25452$6Dw7t
            g$from$25504$6Dw7t
            g$start$25502$6Dw7t)
          g$to$25501$6Dw7t))))
   (g$bitwise-arithmetic-shift$25451$6Dw7t
     g$bitwise-arithmetic-shift$25539$6Dw7t
     (case-lambda
       ((g$ei$25505$6Dw7t g$k$25506$6Dw7t)
        (g$exact$25064$6Dw7t
          (clr-call-internal
            'Microsoft.Scripting.Math.BigInteger
            'LeftShift
            '()
            (g$->bignum$25438$6Dw7t g$ei$25505$6Dw7t)
            g$k$25506$6Dw7t)))))
   (g$bitwise-arithmetic-shift-left$25452$6Dw7t
     g$bitwise-arithmetic-shift-left$25540$6Dw7t
     (case-lambda
       ((g$ei1$25507$6Dw7t g$ei2$25508$6Dw7t)
        (g$bitwise-arithmetic-shift$25451$6Dw7t
          g$ei1$25507$6Dw7t
          g$ei2$25508$6Dw7t))))
   (g$bitwise-arithmetic-shift-right$25453$6Dw7t
     g$bitwise-arithmetic-shift-right$25541$6Dw7t
     (case-lambda
       ((g$ei1$25509$6Dw7t g$ei2$25510$6Dw7t)
        (g$bitwise-arithmetic-shift$25451$6Dw7t
          g$ei1$25509$6Dw7t
          (- g$ei2$25510$6Dw7t)))))
   (g$bitwise-rotate-bit-field$25454$6Dw7t
     g$bitwise-rotate-bit-field$25542$6Dw7t
     (case-lambda
       ((g$n$25511$6Dw7t
          g$start$25512$6Dw7t
          g$end$25513$6Dw7t
          g$count$25514$6Dw7t)
        ((case-lambda
           ((g$width$25515$6Dw7t)
            (if (g$positive?$25061$6Dw7t g$width$25515$6Dw7t)
              ((case-lambda
                 ((g$count$25516$6Dw7t g$field$25517$6Dw7t)
                  (g$bitwise-copy-bit-field$25450$6Dw7t
                    g$n$25511$6Dw7t
                    g$start$25512$6Dw7t
                    g$end$25513$6Dw7t
                    (g$bitwise-ior$25441$6Dw7t
                      (g$bitwise-arithmetic-shift-left$25452$6Dw7t
                        g$field$25517$6Dw7t
                        g$count$25516$6Dw7t)
                      (g$bitwise-arithmetic-shift-right$25453$6Dw7t
                        g$field$25517$6Dw7t
                        (- g$width$25515$6Dw7t g$count$25516$6Dw7t))))))
               (g$mod$24030$6Dw7t
                 g$count$25514$6Dw7t
                 g$width$25515$6Dw7t)
               (g$bitwise-bit-field$25449$6Dw7t
                 g$n$25511$6Dw7t
                 g$start$25512$6Dw7t
                 g$end$25513$6Dw7t))
              g$n$25511$6Dw7t)))
         (- g$end$25513$6Dw7t g$start$25512$6Dw7t)))))
   (g$bitwise-reverse-bit-field$25455$6Dw7t
     g$bitwise-reverse-bit-field$25543$6Dw7t
     (case-lambda
       ((g$x1$25518$6Dw7t g$start$25519$6Dw7t g$end$25520$6Dw7t)
        (begin
          (if (not (g$<$25070$6Dw7t
                     g$start$25519$6Dw7t
                     g$end$25520$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'bitwise-reverse-bit-field
              '"start must be less than end"
              g$start$25519$6Dw7t
              g$end$25520$6Dw7t)
            (void))
          (letrec ((g$loop$25521$6Dw7t
                     (case-lambda
                       ((g$width$25522$6Dw7t
                          g$bits$25523$6Dw7t
                          g$rbits$25524$6Dw7t)
                        (if (g$=$25069$6Dw7t g$width$25522$6Dw7t '0)
                          (begin
                            (if '#f '#f (void))
                            (g$bitwise-copy-bit-field$25450$6Dw7t
                              g$x1$25518$6Dw7t
                              g$start$25519$6Dw7t
                              g$end$25520$6Dw7t
                              g$rbits$25524$6Dw7t))
                          (g$loop$25521$6Dw7t
                            (- g$width$25522$6Dw7t '1)
                            (g$bitwise-arithmetic-shift-right$25453$6Dw7t
                              g$bits$25523$6Dw7t
                              '1)
                            (g$bitwise-ior$25441$6Dw7t
                              (g$bitwise-arithmetic-shift-left$25452$6Dw7t
                                g$rbits$25524$6Dw7t
                                '1)
                              (g$bitwise-and$25440$6Dw7t
                                g$bits$25523$6Dw7t
                                '1))))))))
            (g$loop$25521$6Dw7t
              (- g$end$25520$6Dw7t g$start$25519$6Dw7t)
              (g$bitwise-bit-field$25449$6Dw7t
                g$x1$25518$6Dw7t
                g$start$25519$6Dw7t
                g$end$25520$6Dw7t)
              '0)))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fl+$25722$6Dw7t
     g$fl+$27037$6Dw7t
     (case-lambda
       (() '0.0)
       ((g$x1$25845$6Dw7t g$x2$25846$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25845$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl+
              '"not a flonum"
              g$x1$25845$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25846$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl+
              '"not a flonum"
              g$x2$25846$6Dw7t)
            (void))
          ($fl+ g$x1$25845$6Dw7t g$x2$25846$6Dw7t)))
       (g$args$25847$6Dw7t
        (g$fold-left$23588$6Dw7t
          g$fl+$25722$6Dw7t
          (g$fl+$25722$6Dw7t)
          g$args$25847$6Dw7t))))
   (g$fl*$25723$6Dw7t
     g$fl*$27038$6Dw7t
     (case-lambda
       (() '1.0)
       ((g$x1$25848$6Dw7t g$x2$25849$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25848$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl*
              '"not a flonum"
              g$x1$25848$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25849$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl*
              '"not a flonum"
              g$x2$25849$6Dw7t)
            (void))
          ($fl* g$x1$25848$6Dw7t g$x2$25849$6Dw7t)))
       (g$args$25850$6Dw7t
        (g$fold-left$23588$6Dw7t
          g$fl*$25723$6Dw7t
          (g$fl*$25723$6Dw7t)
          g$args$25850$6Dw7t))))
   (g$fldenominator$25724$6Dw7t
     g$fldenominator$27039$6Dw7t
     (case-lambda
       ((g$fl$25851$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$25851$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldenominator
              '"not a flonum"
              g$fl$25851$6Dw7t)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25852$6Dw7t)
                      (if g$t$25852$6Dw7t
                        g$t$25852$6Dw7t
                        (begin
                          '#f
                          (g$flinfinite?$25805$6Dw7t
                            g$fl$25851$6Dw7t)))))
                   (g$flnan?$25806$6Dw7t g$fl$25851$6Dw7t))
                '1.0
                (g$real->flonum$25045$6Dw7t
                  (g$denominator$25080$6Dw7t g$fl$25851$6Dw7t))))))))))
   (g$flnumerator$25725$6Dw7t
     g$flnumerator$27040$6Dw7t
     (case-lambda
       ((g$fl$25853$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$25853$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flnumerator
              '"not a flonum"
              g$fl$25853$6Dw7t)
            (void))
          ((case-lambda
             (()
              (if ((case-lambda
                     ((g$t$25854$6Dw7t)
                      (if g$t$25854$6Dw7t
                        g$t$25854$6Dw7t
                        (begin
                          '#f
                          (g$flinfinite?$25805$6Dw7t
                            g$fl$25853$6Dw7t)))))
                   (g$flnan?$25806$6Dw7t g$fl$25853$6Dw7t))
                g$fl$25853$6Dw7t
                (g$real->flonum$25045$6Dw7t
                  (g$numerator$25079$6Dw7t g$fl$25853$6Dw7t))))))))))
   (g$fl-$25726$6Dw7t
     g$fl-$27041$6Dw7t
     (case-lambda
       ((g$x1$25855$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25855$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl-
              '"not a flonum"
              g$x1$25855$6Dw7t)
            (void))
          ($fl- g$x1$25855$6Dw7t)))
       ((g$x1$25856$6Dw7t g$x2$25857$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25856$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl-
              '"not a flonum"
              g$x1$25856$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25857$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl-
              '"not a flonum"
              g$x2$25857$6Dw7t)
            (void))
          ($fl- g$x1$25856$6Dw7t g$x2$25857$6Dw7t)))
       ((g$x1$25858$6Dw7t g$x2$25859$6Dw7t . g$rest$25860$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25858$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl-
              '"not a flonum"
              g$x1$25858$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            g$fl-$25726$6Dw7t
            g$x1$25858$6Dw7t
            (cons g$x2$25859$6Dw7t g$rest$25860$6Dw7t))))))
   (g$fl/$25727$6Dw7t
     g$fl/$27042$6Dw7t
     (case-lambda
       ((g$x1$25861$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25861$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl/
              '"not a flonum"
              g$x1$25861$6Dw7t)
            (void))
          ($fl/ '1.0 g$x1$25861$6Dw7t)))
       ((g$x1$25862$6Dw7t g$x2$25863$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25862$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl/
              '"not a flonum"
              g$x1$25862$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25863$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl/
              '"not a flonum"
              g$x2$25863$6Dw7t)
            (void))
          ($fl/ g$x1$25862$6Dw7t g$x2$25863$6Dw7t)))
       ((g$x1$25864$6Dw7t g$x2$25865$6Dw7t . g$rest$25866$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25864$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl/
              '"not a flonum"
              g$x1$25864$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            g$fl/$25727$6Dw7t
            g$x1$25864$6Dw7t
            (cons g$x2$25865$6Dw7t g$rest$25866$6Dw7t))))))
   (g$fl=?$25728$6Dw7t
     g$fl=?$27043$6Dw7t
     (case-lambda
       ((g$x1$25867$6Dw7t g$x2$25868$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25867$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl=?
              '"not a flonum"
              g$x1$25867$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25868$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl=?
              '"not a flonum"
              g$x2$25868$6Dw7t)
            (void))
          ($fl=? g$x1$25867$6Dw7t g$x2$25868$6Dw7t)))
       ((g$x1$25869$6Dw7t g$x2$25870$6Dw7t . g$rest$25871$6Dw7t)
        ((letrec ((g$f$25872$6Dw7t
                    (case-lambda
                      ((g$a$25873$6Dw7t g$b$25874$6Dw7t)
                       (if (null? g$b$25874$6Dw7t)
                         '#t
                         (if (g$fl=?$25728$6Dw7t
                               g$a$25873$6Dw7t
                               ($car g$b$25874$6Dw7t))
                           (g$f$25872$6Dw7t
                             ($car g$b$25874$6Dw7t)
                             ($cdr g$b$25874$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$25872$6Dw7t)
         g$x1$25869$6Dw7t
         (cons g$x2$25870$6Dw7t g$rest$25871$6Dw7t)))))
   (g$fl<?$25729$6Dw7t
     g$fl<?$27044$6Dw7t
     (case-lambda
       ((g$x1$25875$6Dw7t g$x2$25876$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25875$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl<?
              '"not a flonum"
              g$x1$25875$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25876$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl<?
              '"not a flonum"
              g$x2$25876$6Dw7t)
            (void))
          ($fl<? g$x1$25875$6Dw7t g$x2$25876$6Dw7t)))
       ((g$x1$25877$6Dw7t g$x2$25878$6Dw7t . g$rest$25879$6Dw7t)
        ((letrec ((g$f$25880$6Dw7t
                    (case-lambda
                      ((g$a$25881$6Dw7t g$b$25882$6Dw7t)
                       (if (null? g$b$25882$6Dw7t)
                         '#t
                         (if (g$fl<?$25729$6Dw7t
                               g$a$25881$6Dw7t
                               ($car g$b$25882$6Dw7t))
                           (g$f$25880$6Dw7t
                             ($car g$b$25882$6Dw7t)
                             ($cdr g$b$25882$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$25880$6Dw7t)
         g$x1$25877$6Dw7t
         (cons g$x2$25878$6Dw7t g$rest$25879$6Dw7t)))))
   (g$fl<=?$25730$6Dw7t
     g$fl<=?$27045$6Dw7t
     (case-lambda
       ((g$x1$25883$6Dw7t g$x2$25884$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25883$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl<=?
              '"not a flonum"
              g$x1$25883$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25884$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl<=?
              '"not a flonum"
              g$x2$25884$6Dw7t)
            (void))
          ($fl<=? g$x1$25883$6Dw7t g$x2$25884$6Dw7t)))
       ((g$x1$25885$6Dw7t g$x2$25886$6Dw7t . g$rest$25887$6Dw7t)
        ((letrec ((g$f$25888$6Dw7t
                    (case-lambda
                      ((g$a$25889$6Dw7t g$b$25890$6Dw7t)
                       (if (null? g$b$25890$6Dw7t)
                         '#t
                         (if (g$fl<=?$25730$6Dw7t
                               g$a$25889$6Dw7t
                               ($car g$b$25890$6Dw7t))
                           (g$f$25888$6Dw7t
                             ($car g$b$25890$6Dw7t)
                             ($cdr g$b$25890$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$25888$6Dw7t)
         g$x1$25885$6Dw7t
         (cons g$x2$25886$6Dw7t g$rest$25887$6Dw7t)))))
   (g$fl>?$25731$6Dw7t
     g$fl>?$27046$6Dw7t
     (case-lambda
       ((g$x1$25891$6Dw7t g$x2$25892$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25891$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl>?
              '"not a flonum"
              g$x1$25891$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25892$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl>?
              '"not a flonum"
              g$x2$25892$6Dw7t)
            (void))
          ($fl>? g$x1$25891$6Dw7t g$x2$25892$6Dw7t)))
       ((g$x1$25893$6Dw7t g$x2$25894$6Dw7t . g$rest$25895$6Dw7t)
        ((letrec ((g$f$25896$6Dw7t
                    (case-lambda
                      ((g$a$25897$6Dw7t g$b$25898$6Dw7t)
                       (if (null? g$b$25898$6Dw7t)
                         '#t
                         (if (g$fl>?$25731$6Dw7t
                               g$a$25897$6Dw7t
                               ($car g$b$25898$6Dw7t))
                           (g$f$25896$6Dw7t
                             ($car g$b$25898$6Dw7t)
                             ($cdr g$b$25898$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$25896$6Dw7t)
         g$x1$25893$6Dw7t
         (cons g$x2$25894$6Dw7t g$rest$25895$6Dw7t)))))
   (g$fl>=?$25732$6Dw7t
     g$fl>=?$27047$6Dw7t
     (case-lambda
       ((g$x1$25899$6Dw7t g$x2$25900$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25899$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl>=?
              '"not a flonum"
              g$x1$25899$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25900$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fl>=?
              '"not a flonum"
              g$x2$25900$6Dw7t)
            (void))
          ($fl>=? g$x1$25899$6Dw7t g$x2$25900$6Dw7t)))
       ((g$x1$25901$6Dw7t g$x2$25902$6Dw7t . g$rest$25903$6Dw7t)
        ((letrec ((g$f$25904$6Dw7t
                    (case-lambda
                      ((g$a$25905$6Dw7t g$b$25906$6Dw7t)
                       (if (null? g$b$25906$6Dw7t)
                         '#t
                         (if (g$fl>=?$25732$6Dw7t
                               g$a$25905$6Dw7t
                               ($car g$b$25906$6Dw7t))
                           (g$f$25904$6Dw7t
                             ($car g$b$25906$6Dw7t)
                             ($cdr g$b$25906$6Dw7t))
                           ((case-lambda (() (begin '#f '#f))))))))))
           g$f$25904$6Dw7t)
         g$x1$25901$6Dw7t
         (cons g$x2$25902$6Dw7t g$rest$25903$6Dw7t)))))
   (g$residual-fldiv0*$25748$6Dw7t
     g$residual-fldiv0*$27048$6Dw7t
     (case-lambda
       ((g$x1$25927$6Dw7t g$x2$25928$6Dw7t)
        ((case-lambda
           ((g$d$25929$6Dw7t)
            ((case-lambda
               ((g$m$25930$6Dw7t)
                (if ($fl<?
                      g$m$25930$6Dw7t
                      (g$magnitude$25077$6Dw7t
                        ($fl/ g$x2$25928$6Dw7t '2.0)))
                  g$d$25929$6Dw7t
                  (if ($fl<? '0.0 g$x2$25928$6Dw7t)
                    ($fl+ g$d$25929$6Dw7t '1.0)
                    ((case-lambda
                       (()
                        (begin '#f ($fl- g$d$25929$6Dw7t '1.0)))))))))
             ($fl-
               g$x1$25927$6Dw7t
               ($fl* g$d$25929$6Dw7t g$x2$25928$6Dw7t)))))
         ((case-lambda
            ((g$x1$25951$6Dw7t g$x2$25952$6Dw7t)
             (if ($fl<? '0.0 g$x2$25952$6Dw7t)
               ((case-lambda
                  ((g$fl$25973$6Dw7t)
                   (clr-call-internal
                     'system.math
                     '"floor(double)"
                     '()
                     g$fl$25973$6Dw7t)))
                ($fl/ g$x1$25951$6Dw7t g$x2$25952$6Dw7t))
               ($fl-
                 ((case-lambda
                    ((g$fl$25994$6Dw7t)
                     (clr-call-internal
                       'system.math
                       '"floor(double)"
                       '()
                       g$fl$25994$6Dw7t)))
                  ($fl/ g$x1$25951$6Dw7t ($fl- g$x2$25952$6Dw7t)))))))
          g$x1$25927$6Dw7t
          g$x2$25928$6Dw7t)))))
   (g$fldiv0$25749$6Dw7t
     g$fldiv0$27049$6Dw7t
     (case-lambda
       ((g$x1$25995$6Dw7t g$x2$25996$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$25995$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv0
              '"not a flonum"
              g$x1$25995$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$25996$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv0
              '"not a flonum"
              g$x2$25996$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26017$6Dw7t g$x2$26018$6Dw7t)
                  ((case-lambda
                     ((g$d$26019$6Dw7t)
                      ((case-lambda
                         ((g$m$26020$6Dw7t)
                          (if ($fl<?
                                g$m$26020$6Dw7t
                                (g$magnitude$25077$6Dw7t
                                  ($fl/ g$x2$26018$6Dw7t '2.0)))
                            g$d$26019$6Dw7t
                            (if ($fl<? '0.0 g$x2$26018$6Dw7t)
                              ($fl+ g$d$26019$6Dw7t '1.0)
                              ((case-lambda
                                 (()
                                  (begin
                                    '#f
                                    ($fl- g$d$26019$6Dw7t '1.0)))))))))
                       ($fl-
                         g$x1$26017$6Dw7t
                         ($fl* g$d$26019$6Dw7t g$x2$26018$6Dw7t)))))
                   ((case-lambda
                      ((g$x1$26041$6Dw7t g$x2$26042$6Dw7t)
                       (if ($fl<? '0.0 g$x2$26042$6Dw7t)
                         ((case-lambda
                            ((g$fl$26063$6Dw7t)
                             (clr-call-internal
                               'system.math
                               '"floor(double)"
                               '()
                               g$fl$26063$6Dw7t)))
                          ($fl/ g$x1$26041$6Dw7t g$x2$26042$6Dw7t))
                         ($fl-
                           ((case-lambda
                              ((g$fl$26084$6Dw7t)
                               (clr-call-internal
                                 'system.math
                                 '"floor(double)"
                                 '()
                                 g$fl$26084$6Dw7t)))
                            ($fl/
                              g$x1$26041$6Dw7t
                              ($fl- g$x2$26042$6Dw7t)))))))
                    g$x1$26017$6Dw7t
                    g$x2$26018$6Dw7t))))
               g$x1$25995$6Dw7t
               g$x2$25996$6Dw7t))))))))
   (g$residual-flmod*$25765$6Dw7t
     g$residual-flmod*$27050$6Dw7t
     (case-lambda
       ((g$x1$26105$6Dw7t g$x2$26106$6Dw7t)
        ($fl-
          g$x1$26105$6Dw7t
          ($fl*
            ((case-lambda
               ((g$x1$26127$6Dw7t g$x2$26128$6Dw7t)
                (if ($fl<? '0.0 g$x2$26128$6Dw7t)
                  ((case-lambda
                     ((g$fl$26149$6Dw7t)
                      (clr-call-internal
                        'system.math
                        '"floor(double)"
                        '()
                        g$fl$26149$6Dw7t)))
                   ($fl/ g$x1$26127$6Dw7t g$x2$26128$6Dw7t))
                  ($fl-
                    ((case-lambda
                       ((g$fl$26170$6Dw7t)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$26170$6Dw7t)))
                     ($fl/
                       g$x1$26127$6Dw7t
                       ($fl- g$x2$26128$6Dw7t)))))))
             g$x1$26105$6Dw7t
             g$x2$26106$6Dw7t)
            g$x2$26106$6Dw7t)))))
   (g$flmod$25766$6Dw7t
     g$flmod$27051$6Dw7t
     (case-lambda
       ((g$x1$26171$6Dw7t g$x2$26172$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$26171$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flmod
              '"not a flonum"
              g$x1$26171$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$26172$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flmod
              '"not a flonum"
              g$x2$26172$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26193$6Dw7t g$x2$26194$6Dw7t)
                  ($fl-
                    g$x1$26193$6Dw7t
                    ($fl*
                      ((case-lambda
                         ((g$x1$26215$6Dw7t g$x2$26216$6Dw7t)
                          (if ($fl<? '0.0 g$x2$26216$6Dw7t)
                            ((case-lambda
                               ((g$fl$26237$6Dw7t)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$26237$6Dw7t)))
                             ($fl/ g$x1$26215$6Dw7t g$x2$26216$6Dw7t))
                            ($fl-
                              ((case-lambda
                                 ((g$fl$26258$6Dw7t)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$26258$6Dw7t)))
                               ($fl/
                                 g$x1$26215$6Dw7t
                                 ($fl- g$x2$26216$6Dw7t)))))))
                       g$x1$26193$6Dw7t
                       g$x2$26194$6Dw7t)
                      g$x2$26194$6Dw7t))))
               g$x1$26171$6Dw7t
               g$x2$26172$6Dw7t))))))))
   (g$flmod0$25767$6Dw7t
     g$flmod0$27052$6Dw7t
     (case-lambda
       ((g$x1$26259$6Dw7t g$x2$26260$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$26259$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flmod0
              '"not a flonum"
              g$x1$26259$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$26260$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flmod0
              '"not a flonum"
              g$x2$26260$6Dw7t)
            (void))
          ((case-lambda
             (()
              ($fl-
                g$x1$26259$6Dw7t
                ($fl*
                  ((case-lambda
                     ((g$x1$26281$6Dw7t g$x2$26282$6Dw7t)
                      ((case-lambda
                         ((g$d$26283$6Dw7t)
                          ((case-lambda
                             ((g$m$26284$6Dw7t)
                              (if ($fl<?
                                    g$m$26284$6Dw7t
                                    (g$magnitude$25077$6Dw7t
                                      ($fl/ g$x2$26282$6Dw7t '2.0)))
                                g$d$26283$6Dw7t
                                (if ($fl<? '0.0 g$x2$26282$6Dw7t)
                                  ($fl+ g$d$26283$6Dw7t '1.0)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        ($fl-
                                          g$d$26283$6Dw7t
                                          '1.0)))))))))
                           ($fl-
                             g$x1$26281$6Dw7t
                             ($fl* g$d$26283$6Dw7t g$x2$26282$6Dw7t)))))
                       ((case-lambda
                          ((g$x1$26305$6Dw7t g$x2$26306$6Dw7t)
                           (if ($fl<? '0.0 g$x2$26306$6Dw7t)
                             ((case-lambda
                                ((g$fl$26327$6Dw7t)
                                 (clr-call-internal
                                   'system.math
                                   '"floor(double)"
                                   '()
                                   g$fl$26327$6Dw7t)))
                              ($fl/ g$x1$26305$6Dw7t g$x2$26306$6Dw7t))
                             ($fl-
                               ((case-lambda
                                  ((g$fl$26348$6Dw7t)
                                   (clr-call-internal
                                     'system.math
                                     '"floor(double)"
                                     '()
                                     g$fl$26348$6Dw7t)))
                                ($fl/
                                  g$x1$26305$6Dw7t
                                  ($fl- g$x2$26306$6Dw7t)))))))
                        g$x1$26281$6Dw7t
                        g$x2$26282$6Dw7t))))
                   g$x1$26259$6Dw7t
                   g$x2$26260$6Dw7t)
                  g$x2$26260$6Dw7t)))))))))
   (g$fldiv-and-mod$25768$6Dw7t
     g$fldiv-and-mod$27053$6Dw7t
     (case-lambda
       ((g$x1$26349$6Dw7t g$x2$26350$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$26349$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv-and-mod
              '"not a flonum"
              g$x1$26349$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$26350$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv-and-mod
              '"not a flonum"
              g$x2$26350$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$26351$6Dw7t)
                  (values
                    g$d$26351$6Dw7t
                    ($fl-
                      g$x1$26349$6Dw7t
                      ($fl* g$d$26351$6Dw7t g$x2$26350$6Dw7t)))))
               ((case-lambda
                  ((g$x1$26372$6Dw7t g$x2$26373$6Dw7t)
                   (if ($fl<? '0.0 g$x2$26373$6Dw7t)
                     ((case-lambda
                        ((g$fl$26394$6Dw7t)
                         (clr-call-internal
                           'system.math
                           '"floor(double)"
                           '()
                           g$fl$26394$6Dw7t)))
                      ($fl/ g$x1$26372$6Dw7t g$x2$26373$6Dw7t))
                     ($fl-
                       ((case-lambda
                          ((g$fl$26415$6Dw7t)
                           (clr-call-internal
                             'system.math
                             '"floor(double)"
                             '()
                             g$fl$26415$6Dw7t)))
                        ($fl/
                          g$x1$26372$6Dw7t
                          ($fl- g$x2$26373$6Dw7t)))))))
                g$x1$26349$6Dw7t
                g$x2$26350$6Dw7t)))))))))
   (g$residual-fldiv*$25784$6Dw7t
     g$residual-fldiv*$27054$6Dw7t
     (case-lambda
       ((g$x1$26436$6Dw7t g$x2$26437$6Dw7t)
        (if ($fl<? '0.0 g$x2$26437$6Dw7t)
          ((case-lambda
             ((g$fl$26458$6Dw7t)
              (clr-call-internal
                'system.math
                '"floor(double)"
                '()
                g$fl$26458$6Dw7t)))
           ($fl/ g$x1$26436$6Dw7t g$x2$26437$6Dw7t))
          ($fl-
            ((case-lambda
               ((g$fl$26479$6Dw7t)
                (clr-call-internal
                  'system.math
                  '"floor(double)"
                  '()
                  g$fl$26479$6Dw7t)))
             ($fl/ g$x1$26436$6Dw7t ($fl- g$x2$26437$6Dw7t))))))))
   (g$fldiv$25785$6Dw7t
     g$fldiv$27055$6Dw7t
     (case-lambda
       ((g$x1$26480$6Dw7t g$x2$26481$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$26480$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv
              '"not a flonum"
              g$x1$26480$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$26481$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv
              '"not a flonum"
              g$x2$26481$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$x1$26502$6Dw7t g$x2$26503$6Dw7t)
                  (if ($fl<? '0.0 g$x2$26503$6Dw7t)
                    ((case-lambda
                       ((g$fl$26524$6Dw7t)
                        (clr-call-internal
                          'system.math
                          '"floor(double)"
                          '()
                          g$fl$26524$6Dw7t)))
                     ($fl/ g$x1$26502$6Dw7t g$x2$26503$6Dw7t))
                    ($fl-
                      ((case-lambda
                         ((g$fl$26545$6Dw7t)
                          (clr-call-internal
                            'system.math
                            '"floor(double)"
                            '()
                            g$fl$26545$6Dw7t)))
                       ($fl/
                         g$x1$26502$6Dw7t
                         ($fl- g$x2$26503$6Dw7t)))))))
               g$x1$26480$6Dw7t
               g$x2$26481$6Dw7t))))))))
   (g$fldiv0-and-mod0$25786$6Dw7t
     g$fldiv0-and-mod0$27056$6Dw7t
     (case-lambda
       ((g$x1$26546$6Dw7t g$x2$26547$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$x1$26546$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv0-and-mod0
              '"not a flonum"
              g$x1$26546$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$x2$26547$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fldiv0-and-mod0
              '"not a flonum"
              g$x2$26547$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$d$26548$6Dw7t)
                  (values
                    g$d$26548$6Dw7t
                    ($fl-
                      g$x1$26546$6Dw7t
                      ($fl* g$d$26548$6Dw7t g$x2$26547$6Dw7t)))))
               ((case-lambda
                  ((g$x1$26569$6Dw7t g$x2$26570$6Dw7t)
                   ((case-lambda
                      ((g$d$26571$6Dw7t)
                       ((case-lambda
                          ((g$m$26572$6Dw7t)
                           (if ($fl<?
                                 g$m$26572$6Dw7t
                                 (g$magnitude$25077$6Dw7t
                                   ($fl/ g$x2$26570$6Dw7t '2.0)))
                             g$d$26571$6Dw7t
                             (if ($fl<? '0.0 g$x2$26570$6Dw7t)
                               ($fl+ g$d$26571$6Dw7t '1.0)
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     ($fl- g$d$26571$6Dw7t '1.0)))))))))
                        ($fl-
                          g$x1$26569$6Dw7t
                          ($fl* g$d$26571$6Dw7t g$x2$26570$6Dw7t)))))
                    ((case-lambda
                       ((g$x1$26593$6Dw7t g$x2$26594$6Dw7t)
                        (if ($fl<? '0.0 g$x2$26594$6Dw7t)
                          ((case-lambda
                             ((g$fl$26615$6Dw7t)
                              (clr-call-internal
                                'system.math
                                '"floor(double)"
                                '()
                                g$fl$26615$6Dw7t)))
                           ($fl/ g$x1$26593$6Dw7t g$x2$26594$6Dw7t))
                          ($fl-
                            ((case-lambda
                               ((g$fl$26636$6Dw7t)
                                (clr-call-internal
                                  'system.math
                                  '"floor(double)"
                                  '()
                                  g$fl$26636$6Dw7t)))
                             ($fl/
                               g$x1$26593$6Dw7t
                               ($fl- g$x2$26594$6Dw7t)))))))
                     g$x1$26569$6Dw7t
                     g$x2$26570$6Dw7t))))
                g$x1$26546$6Dw7t
                g$x2$26547$6Dw7t)))))))))
   (g$flinteger?$25787$6Dw7t
     g$flinteger?$27057$6Dw7t
     (case-lambda
       ((g$fl$26637$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26637$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flinteger?
              '"not a flonum"
              g$fl$26637$6Dw7t)
            (void))
          ((case-lambda
             (()
              ($fl=?
                '0.0
                ((case-lambda
                   ((g$x1$26658$6Dw7t g$x2$26659$6Dw7t)
                    ($fl-
                      g$x1$26658$6Dw7t
                      ($fl*
                        ((case-lambda
                           ((g$x1$26680$6Dw7t g$x2$26681$6Dw7t)
                            (if ($fl<? '0.0 g$x2$26681$6Dw7t)
                              ((case-lambda
                                 ((g$fl$26702$6Dw7t)
                                  (clr-call-internal
                                    'system.math
                                    '"floor(double)"
                                    '()
                                    g$fl$26702$6Dw7t)))
                               ($fl/ g$x1$26680$6Dw7t g$x2$26681$6Dw7t))
                              ($fl-
                                ((case-lambda
                                   ((g$fl$26723$6Dw7t)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26723$6Dw7t)))
                                 ($fl/
                                   g$x1$26680$6Dw7t
                                   ($fl- g$x2$26681$6Dw7t)))))))
                         g$x1$26658$6Dw7t
                         g$x2$26659$6Dw7t)
                        g$x2$26659$6Dw7t))))
                 g$fl$26637$6Dw7t
                 '1.0)))))))))
   (g$flfinite?$25788$6Dw7t
     g$flfinite?$27058$6Dw7t
     (case-lambda
       ((g$fl$26724$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26724$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flfinite?
              '"not a flonum"
              g$fl$26724$6Dw7t)
            (void))
          ((case-lambda
             (()
              (not ((case-lambda
                      ((g$fl$26745$6Dw7t)
                       (clr-call-internal
                         'system.double
                         'isinfinity
                         '()
                         g$fl$26745$6Dw7t)))
                    g$fl$26724$6Dw7t)))))))))
   (g$residual-flinfinite?*$25804$6Dw7t
     g$residual-flinfinite?*$27059$6Dw7t
     (case-lambda
       ((g$fl$26766$6Dw7t)
        (clr-call-internal
          'system.double
          'isinfinity
          '()
          g$fl$26766$6Dw7t))))
   (g$flinfinite?$25805$6Dw7t
     g$flinfinite?$27060$6Dw7t
     (case-lambda
       ((g$fl$26767$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26767$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flinfinite?
              '"not a flonum"
              g$fl$26767$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26788$6Dw7t)
                  (clr-call-internal
                    'system.double
                    'isinfinity
                    '()
                    g$fl$26788$6Dw7t)))
               g$fl$26767$6Dw7t))))))))
   (g$flnan?$25806$6Dw7t
     g$flnan?$27061$6Dw7t
     (case-lambda
       ((g$fl$26789$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26789$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flnan?
              '"not a flonum"
              g$fl$26789$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.double
                'isnan
                '()
                g$fl$26789$6Dw7t))))))))
   (g$flsin$25807$6Dw7t
     g$flsin$27062$6Dw7t
     (case-lambda
       ((g$fl$26790$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26790$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flsin
              '"not a flonum"
              g$fl$26790$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sin
                '()
                g$fl$26790$6Dw7t))))))))
   (g$flcos$25808$6Dw7t
     g$flcos$27063$6Dw7t
     (case-lambda
       ((g$fl$26791$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26791$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flcos
              '"not a flonum"
              g$fl$26791$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'cos
                '()
                g$fl$26791$6Dw7t))))))))
   (g$fltan$25809$6Dw7t
     g$fltan$27064$6Dw7t
     (case-lambda
       ((g$fl$26792$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26792$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fltan
              '"not a flonum"
              g$fl$26792$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'tan
                '()
                g$fl$26792$6Dw7t))))))))
   (g$flasin$25810$6Dw7t
     g$flasin$27065$6Dw7t
     (case-lambda
       ((g$fl$26793$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26793$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flasin
              '"not a flonum"
              g$fl$26793$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'asin
                '()
                g$fl$26793$6Dw7t))))))))
   (g$flacos$25811$6Dw7t
     g$flacos$27066$6Dw7t
     (case-lambda
       ((g$fl$26794$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26794$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flacos
              '"not a flonum"
              g$fl$26794$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'acos
                '()
                g$fl$26794$6Dw7t))))))))
   (g$flatan$25812$6Dw7t
     g$flatan$27067$6Dw7t
     (case-lambda
       ((g$fl$26795$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26795$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flatan
              '"not a flonum"
              g$fl$26795$6Dw7t)
            (void))
          (clr-call-internal 'system.math 'atan '() g$fl$26795$6Dw7t)))
       ((g$fl1$26796$6Dw7t g$fl2$26797$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl1$26796$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flatan
              '"not a flonum"
              g$fl1$26796$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$fl2$26797$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flatan
              '"not a flonum"
              g$fl2$26797$6Dw7t)
            (void))
          (clr-call-internal
            'system.math
            'atan2
            '()
            g$fl1$26796$6Dw7t
            g$fl2$26797$6Dw7t)))))
   (g$fllog$25813$6Dw7t
     g$fllog$27068$6Dw7t
     (case-lambda
       ((g$fl$26798$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26798$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fllog
              '"not a flonum"
              g$fl$26798$6Dw7t)
            (void))
          (clr-call-internal 'system.math 'log '() g$fl$26798$6Dw7t)))
       ((g$fl1$26799$6Dw7t g$fl2$26800$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl1$26799$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fllog
              '"not a flonum"
              g$fl1$26799$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$fl2$26800$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fllog
              '"not a flonum"
              g$fl2$26800$6Dw7t)
            (void))
          (clr-call-internal
            'system.math
            'log
            '()
            g$fl1$26799$6Dw7t
            g$fl2$26800$6Dw7t)))))
   (g$flsqrt$25814$6Dw7t
     g$flsqrt$27069$6Dw7t
     (case-lambda
       ((g$fl$26801$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26801$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flsqrt
              '"not a flonum"
              g$fl$26801$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'sqrt
                '()
                g$fl$26801$6Dw7t))))))))
   (g$flexp$25815$6Dw7t
     g$flexp$27070$6Dw7t
     (case-lambda
       ((g$fl$26802$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26802$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flexp
              '"not a flonum"
              g$fl$26802$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'exp
                '()
                g$fl$26802$6Dw7t))))))))
   (g$flexpt$25816$6Dw7t
     g$flexpt$27071$6Dw7t
     (case-lambda
       ((g$fl$26803$6Dw7t g$n$26804$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26803$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flexpt
              '"not a flonum"
              g$fl$26803$6Dw7t)
            (void))
          (if (not (g$flonum?$24011$6Dw7t g$n$26804$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flexpt
              '"not a flonum"
              g$n$26804$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                'pow
                '()
                g$fl$26803$6Dw7t
                g$n$26804$6Dw7t))))))))
   (g$flceiling$25817$6Dw7t
     g$flceiling$27072$6Dw7t
     (case-lambda
       ((g$fl$26805$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26805$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flceiling
              '"not a flonum"
              g$fl$26805$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"ceiling(double)"
                '()
                g$fl$26805$6Dw7t))))))))
   (g$residual-flfloor*$25833$6Dw7t
     g$residual-flfloor*$27073$6Dw7t
     (case-lambda
       ((g$fl$26826$6Dw7t)
        (clr-call-internal
          'system.math
          '"floor(double)"
          '()
          g$fl$26826$6Dw7t))))
   (g$flfloor$25834$6Dw7t
     g$flfloor$27074$6Dw7t
     (case-lambda
       ((g$fl$26827$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26827$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flfloor
              '"not a flonum"
              g$fl$26827$6Dw7t)
            (void))
          ((case-lambda
             (()
              ((case-lambda
                 ((g$fl$26848$6Dw7t)
                  (clr-call-internal
                    'system.math
                    '"floor(double)"
                    '()
                    g$fl$26848$6Dw7t)))
               g$fl$26827$6Dw7t))))))))
   (g$fltruncate$25835$6Dw7t
     g$fltruncate$27075$6Dw7t
     (case-lambda
       ((g$fl$26849$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26849$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fltruncate
              '"not a flonum"
              g$fl$26849$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"truncate(double)"
                '()
                g$fl$26849$6Dw7t))))))))
   (g$flround$25836$6Dw7t
     g$flround$27076$6Dw7t
     (case-lambda
       ((g$fl$26850$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26850$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flround
              '"not a flonum"
              g$fl$26850$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"round(double)"
                '()
                g$fl$26850$6Dw7t))))))))
   (g$flabs$25837$6Dw7t
     g$flabs$27077$6Dw7t
     (case-lambda
       ((g$fl$26851$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$fl$26851$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flabs
              '"not a flonum"
              g$fl$26851$6Dw7t)
            (void))
          ((case-lambda
             (()
              (clr-call-internal
                'system.math
                '"abs(double)"
                '()
                g$fl$26851$6Dw7t))))))))
   (g$flpositive?$25838$6Dw7t
     g$flpositive?$27078$6Dw7t
     (case-lambda
       ((g$r$26852$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$r$26852$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flpositive?
              '"not a flonum"
              g$r$26852$6Dw7t)
            (void))
          ((case-lambda (() ($fl<? '0.0 g$r$26852$6Dw7t))))))))
   (g$flnegative?$25839$6Dw7t
     g$flnegative?$27079$6Dw7t
     (case-lambda
       ((g$r$26853$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$r$26853$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flnegative?
              '"not a flonum"
              g$r$26853$6Dw7t)
            (void))
          ((case-lambda (() ($fl>? '0.0 g$r$26853$6Dw7t))))))))
   (g$flzero?$25840$6Dw7t
     g$flzero?$27080$6Dw7t
     (case-lambda
       ((g$r$26854$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$r$26854$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flzero?
              '"not a flonum"
              g$r$26854$6Dw7t)
            (void))
          ((case-lambda (() ($fl=? '0.0 g$r$26854$6Dw7t))))))))
   (g$fleven?$25841$6Dw7t
     g$fleven?$27081$6Dw7t
     (case-lambda
       ((g$n$26855$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$n$26855$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'fleven?
              '"not a flonum"
              g$n$26855$6Dw7t)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$25059$6Dw7t
                           g$n$26855$6Dw7t))
                  (g$assertion-violation$20490$6Dw7t
                    'fleven?
                    '"not integer valued"
                    g$n$26855$6Dw7t)
                  (void))
                ($fl=?
                  '0.0
                  ((case-lambda
                     ((g$x1$26876$6Dw7t g$x2$26877$6Dw7t)
                      ($fl-
                        g$x1$26876$6Dw7t
                        ($fl*
                          ((case-lambda
                             ((g$x1$26898$6Dw7t g$x2$26899$6Dw7t)
                              (if ($fl<? '0.0 g$x2$26899$6Dw7t)
                                ((case-lambda
                                   ((g$fl$26920$6Dw7t)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$26920$6Dw7t)))
                                 ($fl/
                                   g$x1$26898$6Dw7t
                                   g$x2$26899$6Dw7t))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$26941$6Dw7t)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$26941$6Dw7t)))
                                   ($fl/
                                     g$x1$26898$6Dw7t
                                     ($fl- g$x2$26899$6Dw7t)))))))
                           g$x1$26876$6Dw7t
                           g$x2$26877$6Dw7t)
                          g$x2$26877$6Dw7t))))
                   g$n$26855$6Dw7t
                   '2.0))))))))))
   (g$flodd?$25842$6Dw7t
     g$flodd?$27082$6Dw7t
     (case-lambda
       ((g$n$26942$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$n$26942$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flodd?
              '"not a flonum"
              g$n$26942$6Dw7t)
            (void))
          ((case-lambda
             (()
              (begin
                (if (not (g$integer-valued?$25059$6Dw7t
                           g$n$26942$6Dw7t))
                  (g$assertion-violation$20490$6Dw7t
                    'flodd?
                    '"not integer valued"
                    g$n$26942$6Dw7t)
                  (void))
                ($fl=?
                  '1.0
                  ((case-lambda
                     ((g$x1$26963$6Dw7t g$x2$26964$6Dw7t)
                      ($fl-
                        g$x1$26963$6Dw7t
                        ($fl*
                          ((case-lambda
                             ((g$x1$26985$6Dw7t g$x2$26986$6Dw7t)
                              (if ($fl<? '0.0 g$x2$26986$6Dw7t)
                                ((case-lambda
                                   ((g$fl$27007$6Dw7t)
                                    (clr-call-internal
                                      'system.math
                                      '"floor(double)"
                                      '()
                                      g$fl$27007$6Dw7t)))
                                 ($fl/
                                   g$x1$26985$6Dw7t
                                   g$x2$26986$6Dw7t))
                                ($fl-
                                  ((case-lambda
                                     ((g$fl$27028$6Dw7t)
                                      (clr-call-internal
                                        'system.math
                                        '"floor(double)"
                                        '()
                                        g$fl$27028$6Dw7t)))
                                   ($fl/
                                     g$x1$26985$6Dw7t
                                     ($fl- g$x2$26986$6Dw7t)))))))
                           g$x1$26963$6Dw7t
                           g$x2$26964$6Dw7t)
                          g$x2$26964$6Dw7t))))
                   g$n$26942$6Dw7t
                   '2.0))))))))))
   (g$flmax$25843$6Dw7t
     g$flmax$27083$6Dw7t
     (case-lambda
       ((g$a$27029$6Dw7t . g$rest$27030$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$a$27029$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flmax
              '"not a flonum"
              g$a$27029$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            (case-lambda
              ((g$a$27031$6Dw7t g$b$27032$6Dw7t)
               (if (g$fl<?$25729$6Dw7t g$a$27031$6Dw7t g$b$27032$6Dw7t)
                 g$b$27032$6Dw7t
                 g$a$27031$6Dw7t)))
            g$a$27029$6Dw7t
            g$rest$27030$6Dw7t)))))
   (g$flmin$25844$6Dw7t
     g$flmin$27084$6Dw7t
     (case-lambda
       ((g$a$27033$6Dw7t . g$rest$27034$6Dw7t)
        (begin
          (if (not (g$flonum?$24011$6Dw7t g$a$27033$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'flmin
              '"not a flonum"
              g$a$27033$6Dw7t)
            (void))
          (g$fold-left$23588$6Dw7t
            (case-lambda
              ((g$a$27035$6Dw7t g$b$27036$6Dw7t)
               (if (g$fl>?$25731$6Dw7t g$a$27035$6Dw7t g$b$27036$6Dw7t)
                 g$b$27036$6Dw7t
                 g$a$27035$6Dw7t)))
            g$a$27033$6Dw7t
            g$rest$27034$6Dw7t))))))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$27086$6Dw7t
     g$using$27112$6Dw7t
     (clr-using-internal 'ironscheme.runtime))
   (g$standard-error-port$27087$6Dw7t
     g$standard-error-port$27113$6Dw7t
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardError '()))))
   (g$standard-input-port$27088$6Dw7t
     g$standard-input-port$27114$6Dw7t
     (case-lambda
       (() (clr-call-internal 'System.Console 'OpenStandardInput '()))))
   (g$standard-output-port$27089$6Dw7t
     g$standard-output-port$27115$6Dw7t
     (case-lambda
       (()
        (clr-call-internal 'System.Console 'OpenStandardOutput '()))))
   (g$native-eol-style$27090$6Dw7t
     g$native-eol-style$27116$6Dw7t
     (case-lambda (() 'crlf)))
   (g$buffer-mode?$27091$6Dw7t
     g$buffer-mode?$27117$6Dw7t
     (case-lambda
       ((g$obj$27100$6Dw7t)
        (if (g$symbol?$24007$6Dw7t g$obj$27100$6Dw7t)
          (if (g$memq$23569$6Dw7t g$obj$27100$6Dw7t '(none line block))
            (begin '#f '#t)
            '#f)
          '#f))))
   (g$put-datum$27092$6Dw7t
     g$put-datum$27118$6Dw7t
     (case-lambda
       ((g$p$27101$6Dw7t g$datum$27102$6Dw7t)
        (write g$datum$27102$6Dw7t g$p$27101$6Dw7t))))
   (g$get-datum$27093$6Dw7t g$get-datum$27119$6Dw7t read)
   (g$get-output-string$27094$6Dw7t
     g$get-output-string$27120$6Dw7t
     (case-lambda
       ((g$port$27103$6Dw7t)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$27103$6Dw7t))))
   (g$open-output-string$27095$6Dw7t
     g$open-output-string$27121$6Dw7t
     (case-lambda
       (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$27096$6Dw7t
     g$open-string-output-port$27122$6Dw7t
     (case-lambda
       (()
        ((case-lambda
           ((g$p$27104$6Dw7t)
            (values
              g$p$27104$6Dw7t
              (case-lambda
                (()
                 (g$get-output-string$27094$6Dw7t g$p$27104$6Dw7t))))))
         (g$open-output-string$27095$6Dw7t)))))
   (g$port?$27097$6Dw7t
     g$port?$27123$6Dw7t
     (case-lambda
       ((g$obj$27105$6Dw7t)
        ((case-lambda
           ((g$t$27106$6Dw7t)
            (if g$t$27106$6Dw7t
              g$t$27106$6Dw7t
              (begin '#f (binary-port? g$obj$27105$6Dw7t)))))
         (textual-port? g$obj$27105$6Dw7t)))))
   (g$call-with-string-output-port$27098$6Dw7t
     g$call-with-string-output-port$27124$6Dw7t
     (case-lambda
       ((g$proc$27107$6Dw7t)
        ((case-lambda
           ((g$p$27108$6Dw7t)
            (begin
              (g$call-with-port$27099$6Dw7t
                g$p$27108$6Dw7t
                g$proc$27107$6Dw7t)
              (g$get-output-string$27094$6Dw7t g$p$27108$6Dw7t))))
         (g$open-output-string$27095$6Dw7t)))))
   (g$call-with-port$27099$6Dw7t
     g$call-with-port$27125$6Dw7t
     (case-lambda
       ((g$port$27109$6Dw7t g$proc$27110$6Dw7t)
        ((case-lambda
           ((g$r$27111$6Dw7t)
            (begin (close-port g$port$27109$6Dw7t) g$r$27111$6Dw7t)))
         (g$proc$27110$6Dw7t g$port$27109$6Dw7t))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$27126$6Dw7t
     g$peek-char$27181$6Dw7t
     (case-lambda
       (() (g$peek-char$27126$6Dw7t (current-input-port)))
       ((g$port$27153$6Dw7t) (lookahead-char g$port$27153$6Dw7t))))
   (g$read-char$27127$6Dw7t
     g$read-char$27182$6Dw7t
     (case-lambda
       (() (g$read-char$27127$6Dw7t (current-input-port)))
       ((g$port$27154$6Dw7t) (get-char g$port$27154$6Dw7t))))
   (g$write-char$27128$6Dw7t
     g$write-char$27183$6Dw7t
     (case-lambda
       ((g$chr$27155$6Dw7t)
        (g$write-char$27128$6Dw7t
          g$chr$27155$6Dw7t
          (current-output-port)))
       ((g$chr$27156$6Dw7t g$port$27157$6Dw7t)
        (put-char g$port$27157$6Dw7t g$chr$27156$6Dw7t))))
   (g$with-input-from-file$27148$6Dw7t
     g$with-input-from-file$27184$6Dw7t
     (case-lambda
       ((g$filename$27158$6Dw7t g$thunk$27159$6Dw7t)
        ((case-lambda
           ((g$current-input-port$27162$6Dw7t g$t$27163$6Dw7t)
            ((case-lambda
               ((g$swap$27164$6Dw7t)
                (dynamic-wind
                  g$swap$27164$6Dw7t
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$27159$6Dw7t)))
                       (case-lambda
                         (()
                          (close-input-port (current-input-port)))))))
                  g$swap$27164$6Dw7t)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$27165$6Dw7t)
                    (begin
                      (g$current-input-port$27162$6Dw7t g$t$27163$6Dw7t)
                      (set! g$t$27163$6Dw7t g$t$27165$6Dw7t))))
                 (g$current-input-port$27162$6Dw7t)))))))
         current-input-port
         (open-input-file g$filename$27158$6Dw7t)))))
   (g$with-output-to-file$27149$6Dw7t
     g$with-output-to-file$27185$6Dw7t
     (case-lambda
       ((g$filename$27166$6Dw7t g$thunk$27167$6Dw7t)
        ((case-lambda
           ((g$current-output-port$27170$6Dw7t g$t$27171$6Dw7t)
            ((case-lambda
               ((g$swap$27172$6Dw7t)
                (dynamic-wind
                  g$swap$27172$6Dw7t
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$27167$6Dw7t)))
                       (case-lambda
                         (()
                          (close-output-port (current-output-port)))))))
                  g$swap$27172$6Dw7t)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$27173$6Dw7t)
                    (begin
                      (g$current-output-port$27170$6Dw7t
                        g$t$27171$6Dw7t)
                      (set! g$t$27171$6Dw7t g$t$27173$6Dw7t))))
                 (g$current-output-port$27170$6Dw7t)))))))
         current-output-port
         (open-output-file g$filename$27166$6Dw7t)))))
   (g$call-with-input-file$27150$6Dw7t
     g$call-with-input-file$27186$6Dw7t
     (case-lambda
       ((g$filename$27174$6Dw7t g$proc$27175$6Dw7t)
        ((case-lambda
           ((g$p$27176$6Dw7t)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$27175$6Dw7t g$p$27176$6Dw7t)))
              (case-lambda (() (close-input-port g$p$27176$6Dw7t))))))
         (open-input-file g$filename$27174$6Dw7t)))))
   (g$call-with-output-file$27151$6Dw7t
     g$call-with-output-file$27187$6Dw7t
     (case-lambda
       ((g$filename$27177$6Dw7t g$proc$27178$6Dw7t)
        ((case-lambda
           ((g$p$27179$6Dw7t)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$27178$6Dw7t g$p$27179$6Dw7t)))
              (case-lambda (() (close-output-port g$p$27179$6Dw7t))))))
         (open-output-file g$filename$27177$6Dw7t)))))
   (g$newline$27152$6Dw7t
     g$newline$27188$6Dw7t
     (case-lambda
       (() (g$newline$27152$6Dw7t (current-output-port)))
       ((g$port$27180$6Dw7t) (display '"
" g$port$27180$6Dw7t)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$9041$27189$6Dw7t
     g$9041$27302$6Dw7t
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$9043$27190$6Dw7t g$9043$27303$6Dw7t '#f)
   (g$9042$27191$6Dw7t
     g$9042$27304$6Dw7t
     (make-record-constructor-descriptor
       g$9041$27189$6Dw7t
       '#f
       g$9043$27190$6Dw7t))
   (g$enum?$27194$6Dw7t
     g$enum?$27305$6Dw7t
     (record-predicate g$9041$27189$6Dw7t))
   (g$make-enum$27195$6Dw7t
     g$make-enum$27306$6Dw7t
     (record-constructor g$9042$27191$6Dw7t))
   (g$enum-value$27196$6Dw7t
     g$enum-value$27307$6Dw7t
     (record-accessor g$9041$27189$6Dw7t '0))
   (g$enum-info$27197$6Dw7t
     g$enum-info$27308$6Dw7t
     (record-accessor g$9041$27189$6Dw7t '1))
   (g$9052$27198$6Dw7t
     g$9052$27309$6Dw7t
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$9054$27199$6Dw7t g$9054$27310$6Dw7t '#f)
   (g$9053$27200$6Dw7t
     g$9053$27311$6Dw7t
     (make-record-constructor-descriptor
       g$9052$27198$6Dw7t
       '#f
       g$9054$27199$6Dw7t))
   (g$enum-universe?$27203$6Dw7t
     g$enum-universe?$27312$6Dw7t
     (record-predicate g$9052$27198$6Dw7t))
   (g$make-enum-universe$27204$6Dw7t
     g$make-enum-universe$27313$6Dw7t
     (record-constructor g$9053$27200$6Dw7t))
   (g$enum-universe-id$27205$6Dw7t
     g$enum-universe-id$27314$6Dw7t
     (record-accessor g$9052$27198$6Dw7t '0))
   (g$enum-universe-symbols$27206$6Dw7t
     g$enum-universe-symbols$27315$6Dw7t
     (record-accessor g$9052$27198$6Dw7t '1))
   (g$enum-universe-mapping$27207$6Dw7t
     g$enum-universe-mapping$27316$6Dw7t
     (record-accessor g$9052$27198$6Dw7t '2))
   (g$enum-universe-value$27208$6Dw7t
     g$enum-universe-value$27317$6Dw7t
     (record-accessor g$9052$27198$6Dw7t '3))
   (g$enum-type=?$27209$6Dw7t
     g$enum-type=?$27318$6Dw7t
     (case-lambda
       ((g$enumset1$27231$6Dw7t g$enumset2$27232$6Dw7t)
        (eq? (g$enum-universe-id$27205$6Dw7t
               (g$enum-info$27197$6Dw7t g$enumset1$27231$6Dw7t))
             (g$enum-universe-id$27205$6Dw7t
               (g$enum-info$27197$6Dw7t g$enumset2$27232$6Dw7t))))))
   (g$get-symbols$27210$6Dw7t
     g$get-symbols$27319$6Dw7t
     (case-lambda
       ((g$enumset$27233$6Dw7t)
        (g$enum-universe-symbols$27206$6Dw7t
          (g$enum-info$27197$6Dw7t g$enumset$27233$6Dw7t)))))
   (g$get-value$27211$6Dw7t
     g$get-value$27320$6Dw7t
     (case-lambda
       ((g$enumset$27234$6Dw7t g$s$27235$6Dw7t)
        (g$hashtable-ref$24146$6Dw7t
          (g$enum-universe-mapping$27207$6Dw7t
            (g$enum-info$27197$6Dw7t g$enumset$27234$6Dw7t))
          g$s$27235$6Dw7t
          '#f))))
   (g$assert-enum$27212$6Dw7t
     g$assert-enum$27321$6Dw7t
     (case-lambda
       ((g$who$27236$6Dw7t g$enumset$27237$6Dw7t)
        (if (not (g$enum?$27194$6Dw7t g$enumset$27237$6Dw7t))
          (g$assertion-violation$20490$6Dw7t
            g$who$27236$6Dw7t
            '"not an enumeration"
            g$enumset$27237$6Dw7t)
          (void)))))
   (g$make-info$27213$6Dw7t
     g$make-info$27322$6Dw7t
     (case-lambda
       ((g$symbols$27238$6Dw7t)
        ((case-lambda
           ((g$ht$27239$6Dw7t)
            ((letrec ((g$f$27240$6Dw7t
                        (case-lambda
                          ((g$s$27241$6Dw7t
                             g$a$27242$6Dw7t
                             g$mask$27243$6Dw7t)
                           (if (null? g$s$27241$6Dw7t)
                             (values
                               (reverse! g$a$27242$6Dw7t)
                               g$ht$27239$6Dw7t
                               (- g$mask$27243$6Dw7t '1))
                             ((case-lambda
                                ((g$n$27244$6Dw7t)
                                 (if (g$symbol?$24007$6Dw7t
                                       g$n$27244$6Dw7t)
                                   (if (g$hashtable-contains?$24149$6Dw7t
                                         g$ht$27239$6Dw7t
                                         g$n$27244$6Dw7t)
                                     (g$f$27240$6Dw7t
                                       (cdr g$s$27241$6Dw7t)
                                       g$a$27242$6Dw7t
                                       g$mask$27243$6Dw7t)
                                     (begin
                                       (g$hashtable-set!$24147$6Dw7t
                                         g$ht$27239$6Dw7t
                                         g$n$27244$6Dw7t
                                         g$mask$27243$6Dw7t)
                                       (g$f$27240$6Dw7t
                                         (cdr g$s$27241$6Dw7t)
                                         (cons
                                           g$n$27244$6Dw7t
                                           g$a$27242$6Dw7t)
                                         (g$bitwise-arithmetic-shift-left$25540$6Dw7t
                                           g$mask$27243$6Dw7t
                                           '1))))
                                   (g$assertion-violation$20490$6Dw7t
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$27244$6Dw7t))))
                              (car g$s$27241$6Dw7t)))))))
               g$f$27240$6Dw7t)
             g$symbols$27238$6Dw7t
             '()
             '1)))
         (g$make-eq-hashtable$24143$6Dw7t)))))
   (g$make-name$27214$6Dw7t
     g$make-name$27323$6Dw7t
     (case-lambda
       ((g$symbols$27245$6Dw7t)
        (g$string->symbol$24028$6Dw7t
          (g$format$27362$6Dw7t '"~a" g$symbols$27245$6Dw7t)))))
   (g$make-enumeration$27215$6Dw7t
     g$make-enumeration$27324$6Dw7t
     (case-lambda
       ((g$symbols$27246$6Dw7t)
        (call-with-values
          (case-lambda
            (() (g$make-info$27213$6Dw7t g$symbols$27246$6Dw7t)))
          (case-lambda
            ((g$s$27250$6Dw7t g$mapping$27251$6Dw7t g$mask$27252$6Dw7t)
             ((case-lambda
                ((g$mask$27253$6Dw7t
                   g$mapping$27254$6Dw7t
                   g$s$27255$6Dw7t)
                 (g$make-enum$27195$6Dw7t
                   g$mask$27253$6Dw7t
                   (g$make-enum-universe$27204$6Dw7t
                     (g$make-name$27214$6Dw7t g$s$27255$6Dw7t)
                     g$s$27255$6Dw7t
                     g$mapping$27254$6Dw7t
                     g$mask$27253$6Dw7t))))
              g$mask$27252$6Dw7t
              g$mapping$27251$6Dw7t
              g$s$27250$6Dw7t)))))))
   (g$enum-set-universe$27216$6Dw7t
     g$enum-set-universe$27325$6Dw7t
     (case-lambda
       ((g$enumset$27256$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-universe
            g$enumset$27256$6Dw7t)
          ((case-lambda
             ((g$ei$27257$6Dw7t)
              (g$make-enum$27195$6Dw7t
                (g$enum-universe-value$27208$6Dw7t g$ei$27257$6Dw7t)
                g$ei$27257$6Dw7t)))
           (g$enum-info$27197$6Dw7t g$enumset$27256$6Dw7t))))))
   (g$enum-set-indexer$27217$6Dw7t
     g$enum-set-indexer$27326$6Dw7t
     (case-lambda
       ((g$enumset$27258$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-indexer
            g$enumset$27258$6Dw7t)
          (case-lambda
            ((g$symbol$27259$6Dw7t)
             (begin
               (if (not (g$symbol?$24007$6Dw7t g$symbol$27259$6Dw7t))
                 (g$assertion-violation$20490$6Dw7t
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$27259$6Dw7t)
                 (void))
               ((case-lambda
                  ((g$v$27260$6Dw7t)
                   (if g$v$27260$6Dw7t
                     (- (g$bitwise-length$25532$6Dw7t g$v$27260$6Dw7t)
                        '1)
                     '#f)))
                (g$get-value$27211$6Dw7t
                  g$enumset$27258$6Dw7t
                  g$symbol$27259$6Dw7t)))))))))
   (g$enum-set-constructor$27218$6Dw7t
     g$enum-set-constructor$27327$6Dw7t
     (case-lambda
       ((g$enumset$27261$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-constructor
            g$enumset$27261$6Dw7t)
          (case-lambda
            ((g$symbols$27262$6Dw7t)
             ((letrec ((g$f$27263$6Dw7t
                         (case-lambda
                           ((g$v$27264$6Dw7t g$s$27265$6Dw7t)
                            (if (null? g$s$27265$6Dw7t)
                              (g$make-enum$27195$6Dw7t
                                g$v$27264$6Dw7t
                                (g$enum-info$27197$6Dw7t
                                  g$enumset$27261$6Dw7t))
                              ((case-lambda
                                 ((g$n$27266$6Dw7t)
                                  (if (g$symbol?$24007$6Dw7t
                                        g$n$27266$6Dw7t)
                                    ((case-lambda
                                       ((g$v*$27267$6Dw7t)
                                        (if g$v*$27267$6Dw7t
                                          (g$f$27263$6Dw7t
                                            (g$bitwise-ior$25529$6Dw7t
                                              g$v$27264$6Dw7t
                                              g$v*$27267$6Dw7t)
                                            (cdr g$s$27265$6Dw7t))
                                          (g$assertion-violation$20490$6Dw7t
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$27266$6Dw7t))))
                                     (g$get-value$27211$6Dw7t
                                       g$enumset$27261$6Dw7t
                                       g$n$27266$6Dw7t))
                                    (g$assertion-violation$20490$6Dw7t
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$27266$6Dw7t))))
                               (car g$s$27265$6Dw7t)))))))
                g$f$27263$6Dw7t)
              '0
              g$symbols$27262$6Dw7t)))))))
   (g$enum-set->list$27219$6Dw7t
     g$enum-set->list$27328$6Dw7t
     (case-lambda
       ((g$enumset$27268$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set->list
            g$enumset$27268$6Dw7t)
          ((case-lambda
             ((g$value$27269$6Dw7t)
              ((letrec ((g$f$27270$6Dw7t
                          (case-lambda
                            ((g$s$27271$6Dw7t g$l$27272$6Dw7t)
                             (if (null? g$s$27271$6Dw7t)
                               (reverse! g$l$27272$6Dw7t)
                               (if (g$zero?$25060$6Dw7t
                                     (g$bitwise-and$25528$6Dw7t
                                       (g$get-value$27211$6Dw7t
                                         g$enumset$27268$6Dw7t
                                         (car g$s$27271$6Dw7t))
                                       g$value$27269$6Dw7t))
                                 (g$f$27270$6Dw7t
                                   (cdr g$s$27271$6Dw7t)
                                   g$l$27272$6Dw7t)
                                 (g$f$27270$6Dw7t
                                   (cdr g$s$27271$6Dw7t)
                                   (cons
                                     (car g$s$27271$6Dw7t)
                                     g$l$27272$6Dw7t))))))))
                 g$f$27270$6Dw7t)
               (g$get-symbols$27210$6Dw7t g$enumset$27268$6Dw7t)
               '())))
           (g$enum-value$27196$6Dw7t g$enumset$27268$6Dw7t))))))
   (g$enum-set-member?$27220$6Dw7t
     g$enum-set-member?$27329$6Dw7t
     (case-lambda
       ((g$symbol$27273$6Dw7t g$enumset$27274$6Dw7t)
        (begin
          (if (not (g$symbol?$24007$6Dw7t g$symbol$27273$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'enum-set-member?
              '"not a symbol"
              g$symbol$27273$6Dw7t)
            (void))
          (g$assert-enum$27212$6Dw7t
            'enum-set-member?
            g$enumset$27274$6Dw7t)
          ((case-lambda
             ((g$v$27275$6Dw7t)
              (if g$v$27275$6Dw7t
                (not (g$zero?$25060$6Dw7t
                       (g$bitwise-and$25528$6Dw7t
                         g$v$27275$6Dw7t
                         (g$enum-value$27196$6Dw7t
                           g$enumset$27274$6Dw7t))))
                '#f)))
           (g$get-value$27211$6Dw7t
             g$enumset$27274$6Dw7t
             g$symbol$27273$6Dw7t))))))
   (g$enum-set-subset?$27221$6Dw7t
     g$enum-set-subset?$27330$6Dw7t
     (case-lambda
       ((g$enumset1$27276$6Dw7t g$enumset2$27277$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-subset?
            g$enumset1$27276$6Dw7t)
          (g$assert-enum$27212$6Dw7t
            'enum-set-subset?
            g$enumset2$27277$6Dw7t)
          ((case-lambda
             ((g$v1$27278$6Dw7t g$v2$27279$6Dw7t)
              (if (g$enum-type=?$27209$6Dw7t
                    g$enumset1$27276$6Dw7t
                    g$enumset2$27277$6Dw7t)
                (g$=$25069$6Dw7t
                  (g$bitwise-and$25528$6Dw7t
                    g$v1$27278$6Dw7t
                    g$v2$27279$6Dw7t)
                  g$v1$27278$6Dw7t)
                ((letrec ((g$f$27280$6Dw7t
                            (case-lambda
                              ((g$s$27281$6Dw7t)
                               (if (null? g$s$27281$6Dw7t)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$27282$6Dw7t
                                       g$v2*$27283$6Dw7t)
                                     (if g$v2*$27283$6Dw7t
                                       ((case-lambda
                                          ((g$has1$27284$6Dw7t
                                             g$has2$27285$6Dw7t)
                                           (if (if g$has1$27284$6Dw7t
                                                 (begin
                                                   '#f
                                                   (not g$has2$27285$6Dw7t))
                                                 '#f)
                                             '#f
                                             (g$f$27280$6Dw7t
                                               (cdr g$s$27281$6Dw7t)))))
                                        (not (g$zero?$25060$6Dw7t
                                               (g$bitwise-and$25528$6Dw7t
                                                 g$v1$27278$6Dw7t
                                                 g$v1*$27282$6Dw7t)))
                                        (not (g$zero?$25060$6Dw7t
                                               (g$bitwise-and$25528$6Dw7t
                                                 g$v2$27279$6Dw7t
                                                 g$v2*$27283$6Dw7t))))
                                       '#f)))
                                  (g$get-value$27211$6Dw7t
                                    g$enumset1$27276$6Dw7t
                                    (car g$s$27281$6Dw7t))
                                  (g$get-value$27211$6Dw7t
                                    g$enumset2$27277$6Dw7t
                                    (car g$s$27281$6Dw7t))))))))
                   g$f$27280$6Dw7t)
                 (g$get-symbols$27210$6Dw7t g$enumset1$27276$6Dw7t)))))
           (g$enum-value$27196$6Dw7t g$enumset1$27276$6Dw7t)
           (g$enum-value$27196$6Dw7t g$enumset2$27277$6Dw7t))))))
   (g$enum-set=?$27222$6Dw7t
     g$enum-set=?$27331$6Dw7t
     (case-lambda
       ((g$enumset1$27286$6Dw7t g$enumset2$27287$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t 'enum-set=? g$enumset1$27286$6Dw7t)
          (g$assert-enum$27212$6Dw7t 'enum-set=? g$enumset2$27287$6Dw7t)
          (if (g$enum-set-subset?$27221$6Dw7t
                g$enumset1$27286$6Dw7t
                g$enumset2$27287$6Dw7t)
            (begin
              '#f
              (g$enum-set-subset?$27221$6Dw7t
                g$enumset2$27287$6Dw7t
                g$enumset1$27286$6Dw7t))
            '#f)))))
   (g$enum-set-union$27223$6Dw7t
     g$enum-set-union$27332$6Dw7t
     (case-lambda
       ((g$enumset1$27288$6Dw7t g$enumset2$27289$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-union
            g$enumset1$27288$6Dw7t)
          (g$assert-enum$27212$6Dw7t
            'enum-set-union
            g$enumset2$27289$6Dw7t)
          (if (g$enum-type=?$27209$6Dw7t
                g$enumset1$27288$6Dw7t
                g$enumset2$27289$6Dw7t)
            (g$make-enum$27195$6Dw7t
              (g$bitwise-ior$25529$6Dw7t
                (g$enum-value$27196$6Dw7t g$enumset1$27288$6Dw7t)
                (g$enum-value$27196$6Dw7t g$enumset2$27289$6Dw7t))
              (g$enum-info$27197$6Dw7t g$enumset1$27288$6Dw7t))
            '#f)))))
   (g$enum-set-intersection$27224$6Dw7t
     g$enum-set-intersection$27333$6Dw7t
     (case-lambda
       ((g$enumset1$27290$6Dw7t g$enumset2$27291$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-intersection
            g$enumset1$27290$6Dw7t)
          (g$assert-enum$27212$6Dw7t
            'enum-set-intersection
            g$enumset2$27291$6Dw7t)
          (if (g$enum-type=?$27209$6Dw7t
                g$enumset1$27290$6Dw7t
                g$enumset2$27291$6Dw7t)
            (g$make-enum$27195$6Dw7t
              (g$bitwise-and$25528$6Dw7t
                (g$enum-value$27196$6Dw7t g$enumset1$27290$6Dw7t)
                (g$enum-value$27196$6Dw7t g$enumset2$27291$6Dw7t))
              (g$enum-info$27197$6Dw7t g$enumset1$27290$6Dw7t))
            '#f)))))
   (g$enum-set-difference$27225$6Dw7t
     g$enum-set-difference$27334$6Dw7t
     (case-lambda
       ((g$enumset1$27292$6Dw7t g$enumset2$27293$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-difference
            g$enumset1$27292$6Dw7t)
          (g$assert-enum$27212$6Dw7t
            'enum-set-difference
            g$enumset2$27293$6Dw7t)
          (if (g$enum-type=?$27209$6Dw7t
                g$enumset1$27292$6Dw7t
                g$enumset2$27293$6Dw7t)
            (g$make-enum$27195$6Dw7t
              (g$bitwise-and$25528$6Dw7t
                (g$enum-value$27196$6Dw7t g$enumset1$27292$6Dw7t)
                (g$bitwise-not$25527$6Dw7t
                  (g$enum-value$27196$6Dw7t g$enumset2$27293$6Dw7t)))
              (g$enum-info$27197$6Dw7t g$enumset1$27292$6Dw7t))
            '#f)))))
   (g$enum-set-complement$27226$6Dw7t
     g$enum-set-complement$27335$6Dw7t
     (case-lambda
       ((g$enumset$27294$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-complement
            g$enumset$27294$6Dw7t)
          (g$make-enum$27195$6Dw7t
            (g$bitwise-not$25527$6Dw7t
              (g$enum-value$27196$6Dw7t g$enumset$27294$6Dw7t))
            (g$enum-info$27197$6Dw7t g$enumset$27294$6Dw7t))))))
   (g$enum-set-projection$27227$6Dw7t
     g$enum-set-projection$27336$6Dw7t
     (case-lambda
       ((g$enumset1$27295$6Dw7t g$enumset2$27296$6Dw7t)
        (begin
          (g$assert-enum$27212$6Dw7t
            'enum-set-projection
            g$enumset1$27295$6Dw7t)
          (g$assert-enum$27212$6Dw7t
            'enum-set-projection
            g$enumset2$27296$6Dw7t)
          ((case-lambda
             ((g$v1$27297$6Dw7t)
              ((letrec ((g$f$27298$6Dw7t
                          (case-lambda
                            ((g$s$27299$6Dw7t g$v$27300$6Dw7t)
                             (if (null? g$s$27299$6Dw7t)
                               (g$make-enum$27195$6Dw7t
                                 g$v$27300$6Dw7t
                                 (g$enum-info$27197$6Dw7t
                                   g$enumset2$27296$6Dw7t))
                               (if (g$zero?$25060$6Dw7t
                                     (g$bitwise-and$25528$6Dw7t
                                       g$v1$27297$6Dw7t
                                       (g$get-value$27211$6Dw7t
                                         g$enumset1$27295$6Dw7t
                                         (car g$s$27299$6Dw7t))))
                                 (g$f$27298$6Dw7t
                                   (cdr g$s$27299$6Dw7t)
                                   g$v$27300$6Dw7t)
                                 ((case-lambda
                                    ((g$v2$27301$6Dw7t)
                                     (if g$v2$27301$6Dw7t
                                       (g$f$27298$6Dw7t
                                         (cdr g$s$27299$6Dw7t)
                                         (g$bitwise-ior$25529$6Dw7t
                                           g$v$27300$6Dw7t
                                           g$v2$27301$6Dw7t))
                                       (g$f$27298$6Dw7t
                                         (cdr g$s$27299$6Dw7t)
                                         g$v$27300$6Dw7t))))
                                  (g$get-value$27211$6Dw7t
                                    g$enumset2$27296$6Dw7t
                                    (car g$s$27299$6Dw7t)))))))))
                 g$f$27298$6Dw7t)
               (g$get-symbols$27210$6Dw7t g$enumset1$27295$6Dw7t)
               '0)))
           (g$enum-value$27196$6Dw7t g$enumset1$27295$6Dw7t)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$27228$6Dw7t g$p$27229$6Dw7t g$wr$27230$6Dw7t)
       (g$fprintf$27361$6Dw7t
         g$p$27229$6Dw7t
         '"#[enum-set ~a]"
         (g$enum-set->list$27219$6Dw7t g$x$27228$6Dw7t))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$27337$6Dw7t
     g$dofmt$27359$6Dw7t
     (case-lambda
       ((g$p$27341$6Dw7t g$cntl$27342$6Dw7t g$args$27343$6Dw7t)
        ((case-lambda
           ((g$nmax$27344$6Dw7t)
            ((letrec ((g$loop$27345$6Dw7t
                        (case-lambda
                          ((g$n$27346$6Dw7t g$a$27347$6Dw7t)
                           (if (g$fx<=?$23309$6Dw7t
                                 g$n$27346$6Dw7t
                                 g$nmax$27344$6Dw7t)
                             ((case-lambda
                                ((g$c$27348$6Dw7t)
                                 (if (if (g$char=?$24086$6Dw7t
                                           g$c$27348$6Dw7t
                                           '#\~)
                                       (begin
                                         '#f
                                         (g$fx<?$23308$6Dw7t
                                           g$n$27346$6Dw7t
                                           g$nmax$27344$6Dw7t))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$27349$6Dw7t)
                                       (if (eqv? g$t$27349$6Dw7t '#\a)
                                         (begin
                                           (display
                                             (car g$a$27347$6Dw7t)
                                             g$p$27341$6Dw7t)
                                           (g$loop$27345$6Dw7t
                                             (g$fx+$23294$6Dw7t
                                               g$n$27346$6Dw7t
                                               '2)
                                             (cdr g$a$27347$6Dw7t)))
                                         (if (eqv? g$t$27349$6Dw7t '#\s)
                                           (begin
                                             (write
                                               (car g$a$27347$6Dw7t)
                                               g$p$27341$6Dw7t)
                                             (g$loop$27345$6Dw7t
                                               (g$fx+$23294$6Dw7t
                                                 g$n$27346$6Dw7t
                                                 '2)
                                               (cdr g$a$27347$6Dw7t)))
                                           (if (eqv?
                                                 g$t$27349$6Dw7t
                                                 '#\b)
                                             (begin
                                               (write
                                                 (g$number->string$25068$6Dw7t
                                                   (car g$a$27347$6Dw7t)
                                                   '2)
                                                 g$p$27341$6Dw7t)
                                               (g$loop$27345$6Dw7t
                                                 (g$fx+$23294$6Dw7t
                                                   g$n$27346$6Dw7t
                                                   '2)
                                                 (cdr g$a$27347$6Dw7t)))
                                             (if (eqv?
                                                   g$t$27349$6Dw7t
                                                   '#\o)
                                               (begin
                                                 (write
                                                   (g$number->string$25068$6Dw7t
                                                     (car g$a$27347$6Dw7t)
                                                     '8)
                                                   g$p$27341$6Dw7t)
                                                 (g$loop$27345$6Dw7t
                                                   (g$fx+$23294$6Dw7t
                                                     g$n$27346$6Dw7t
                                                     '2)
                                                   (cdr g$a$27347$6Dw7t)))
                                               (if (eqv?
                                                     g$t$27349$6Dw7t
                                                     '#\x)
                                                 (begin
                                                   (write
                                                     (g$number->string$25068$6Dw7t
                                                       (car g$a$27347$6Dw7t)
                                                       '16)
                                                     g$p$27341$6Dw7t)
                                                   (g$loop$27345$6Dw7t
                                                     (g$fx+$23294$6Dw7t
                                                       g$n$27346$6Dw7t
                                                       '2)
                                                     (cdr g$a$27347$6Dw7t)))
                                                 (if (eqv?
                                                       g$t$27349$6Dw7t
                                                       '#\d)
                                                   (begin
                                                     (write
                                                       (g$number->string$25068$6Dw7t
                                                         (car g$a$27347$6Dw7t)
                                                         '10)
                                                       g$p$27341$6Dw7t)
                                                     (g$loop$27345$6Dw7t
                                                       (g$fx+$23294$6Dw7t
                                                         g$n$27346$6Dw7t
                                                         '2)
                                                       (cdr g$a$27347$6Dw7t)))
                                                   (if (eqv?
                                                         g$t$27349$6Dw7t
                                                         '#\~)
                                                     (begin
                                                       (g$write-char$27183$6Dw7t
                                                         '#\~
                                                         g$p$27341$6Dw7t)
                                                       (g$loop$27345$6Dw7t
                                                         (g$fx+$23294$6Dw7t
                                                           g$n$27346$6Dw7t
                                                           '2)
                                                         g$a$27347$6Dw7t))
                                                     ((case-lambda
                                                        (()
                                                         (begin
                                                           '#f
                                                           (g$write-char$27183$6Dw7t
                                                             g$c$27348$6Dw7t
                                                             g$p$27341$6Dw7t)
                                                           (g$loop$27345$6Dw7t
                                                             (g$fx+$23294$6Dw7t
                                                               g$n$27346$6Dw7t
                                                               '1)
                                                             g$a$27347$6Dw7t))))))))))))))
                                    (g$string-ref$24016$6Dw7t
                                      g$cntl$27342$6Dw7t
                                      (g$fx+$23294$6Dw7t
                                        g$n$27346$6Dw7t
                                        '1)))
                                   (begin
                                     (g$write-char$27183$6Dw7t
                                       g$c$27348$6Dw7t
                                       g$p$27341$6Dw7t)
                                     (g$loop$27345$6Dw7t
                                       (g$fx+$23294$6Dw7t
                                         g$n$27346$6Dw7t
                                         '1)
                                       g$a$27347$6Dw7t)))))
                              (g$string-ref$24016$6Dw7t
                                g$cntl$27342$6Dw7t
                                g$n$27346$6Dw7t))
                             (void))))))
               g$loop$27345$6Dw7t)
             '0
             g$args$27343$6Dw7t)))
         (g$fx-$23296$6Dw7t
           (g$string-length$24019$6Dw7t g$cntl$27342$6Dw7t)
           '1)))))
   (g$printf$27338$6Dw7t
     g$printf$27360$6Dw7t
     (case-lambda
       ((g$control$27350$6Dw7t . g$args$27351$6Dw7t)
        (g$dofmt$27337$6Dw7t
          (current-output-port)
          g$control$27350$6Dw7t
          g$args$27351$6Dw7t))))
   (g$fprintf$27339$6Dw7t
     g$fprintf$27361$6Dw7t
     (case-lambda
       ((g$p$27352$6Dw7t g$control$27353$6Dw7t . g$args$27354$6Dw7t)
        (g$dofmt$27337$6Dw7t
          g$p$27352$6Dw7t
          g$control$27353$6Dw7t
          g$args$27354$6Dw7t))))
   (g$format$27340$6Dw7t
     g$format$27362$6Dw7t
     (case-lambda
       ((g$control$27355$6Dw7t . g$args$27356$6Dw7t)
        (call-with-values
          g$open-string-output-port$27122$6Dw7t
          (case-lambda
            ((g$p$27357$6Dw7t g$c$27358$6Dw7t)
             (begin
               (g$dofmt$27337$6Dw7t
                 g$p$27357$6Dw7t
                 g$control$27355$6Dw7t
                 g$args$27356$6Dw7t)
               (g$c$27358$6Dw7t)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$27363$6Dw7t
     g$make-traced-macro$27366$6Dw7t
     (case-lambda
       ((g$name$27364$6Dw7t g$x$27365$6Dw7t)
        (if (g$procedure?$24009$6Dw7t g$x$27365$6Dw7t)
          (make-traced-procedure
            g$name$27364$6Dw7t
            g$x$27365$6Dw7t
            g$syntax->datum$33054$6Dw7t)
          (if (g$variable-transformer?$32874$6Dw7t g$x$27365$6Dw7t)
            (g$make-variable-transformer$32872$6Dw7t
              (make-traced-procedure
                g$name$27364$6Dw7t
                (g$variable-transformer-procedure$32875$6Dw7t
                  g$x$27365$6Dw7t)
                g$syntax->datum$33054$6Dw7t))
            ((case-lambda (() (begin '#f g$x$27365$6Dw7t))))))))))
  (void))

(library-letrec* (ironscheme equal)
  ((g$k0$27367$6Dw7t g$k0$27459$6Dw7t '400)
   (g$kb$27368$6Dw7t g$kb$27460$6Dw7t '-40)
   (g$9186$27369$6Dw7t
     g$9186$27461$6Dw7t
     (make-record-type-descriptor
       'box
       '#f
       '#f
       '#f
       '#f
       '#((mutable content))))
   (g$9188$27370$6Dw7t g$9188$27462$6Dw7t '#f)
   (g$9187$27371$6Dw7t
     g$9187$27463$6Dw7t
     (make-record-constructor-descriptor
       g$9186$27369$6Dw7t
       '#f
       g$9188$27370$6Dw7t))
   (g$box?$27374$6Dw7t
     g$box?$27464$6Dw7t
     (record-predicate g$9186$27369$6Dw7t))
   (g$make-box$27375$6Dw7t
     g$make-box$27465$6Dw7t
     (record-constructor g$9187$27371$6Dw7t))
   (g$box-content$27376$6Dw7t
     g$box-content$27466$6Dw7t
     (record-accessor g$9186$27369$6Dw7t '0))
   (g$set-box-content!$27377$6Dw7t
     g$set-box-content!$27467$6Dw7t
     (record-mutator g$9186$27369$6Dw7t '0))
   (g$random$27378$6Dw7t
     g$random$27468$6Dw7t
     ((case-lambda
        ((g$rg$27385$6Dw7t)
         (case-lambda
           ((g$k$27386$6Dw7t)
            (clr-call-internal
              'System.Random
              'Next
              g$rg$27385$6Dw7t
              g$k$27386$6Dw7t)))))
      (clr-new-internal 'System.Random)))
   (g$union-find$27379$6Dw7t
     g$union-find$27469$6Dw7t
     (case-lambda
       ((g$ht$27387$6Dw7t g$x$27388$6Dw7t g$y$27389$6Dw7t)
        (letrec* ((g$eq-hashtable-ref$27390$6Dw7t
                    g$hashtable-ref$24146$6Dw7t)
                  (g$eq-hashtable-set!$27391$6Dw7t
                    g$hashtable-set!$24147$6Dw7t)
                  (g$find$27392$6Dw7t
                    (case-lambda
                      ((g$b$27403$6Dw7t)
                       ((case-lambda
                          ((g$n$27404$6Dw7t)
                           (if (g$box?$27374$6Dw7t g$n$27404$6Dw7t)
                             ((letrec ((g$loop$27405$6Dw7t
                                         (case-lambda
                                           ((g$b$27406$6Dw7t
                                              g$n$27407$6Dw7t)
                                            ((case-lambda
                                               ((g$nn$27408$6Dw7t)
                                                (if (g$box?$27374$6Dw7t
                                                      g$nn$27408$6Dw7t)
                                                  (begin
                                                    (g$set-box-content!$27377$6Dw7t
                                                      g$b$27406$6Dw7t
                                                      g$nn$27408$6Dw7t)
                                                    (g$loop$27405$6Dw7t
                                                      g$n$27407$6Dw7t
                                                      g$nn$27408$6Dw7t))
                                                  g$n$27407$6Dw7t)))
                                             (g$box-content$27376$6Dw7t
                                               g$n$27407$6Dw7t))))))
                                g$loop$27405$6Dw7t)
                              g$b$27403$6Dw7t
                              g$n$27404$6Dw7t)
                             g$b$27403$6Dw7t)))
                        (g$box-content$27376$6Dw7t g$b$27403$6Dw7t))))))
          ((case-lambda
             ((g$bx$27393$6Dw7t g$by$27394$6Dw7t)
              (if (not g$bx$27393$6Dw7t)
                (if (not g$by$27394$6Dw7t)
                  ((case-lambda
                     ((g$b$27395$6Dw7t)
                      (begin
                        (g$eq-hashtable-set!$27391$6Dw7t
                          g$ht$27387$6Dw7t
                          g$x$27388$6Dw7t
                          g$b$27395$6Dw7t)
                        (g$eq-hashtable-set!$27391$6Dw7t
                          g$ht$27387$6Dw7t
                          g$y$27389$6Dw7t
                          g$b$27395$6Dw7t)
                        '#f)))
                   (g$make-box$27375$6Dw7t '1))
                  ((case-lambda
                     ((g$ry$27396$6Dw7t)
                      (begin
                        (g$eq-hashtable-set!$27391$6Dw7t
                          g$ht$27387$6Dw7t
                          g$x$27388$6Dw7t
                          g$ry$27396$6Dw7t)
                        '#f)))
                   (g$find$27392$6Dw7t g$by$27394$6Dw7t)))
                (if (not g$by$27394$6Dw7t)
                  ((case-lambda
                     ((g$rx$27397$6Dw7t)
                      (begin
                        (g$eq-hashtable-set!$27391$6Dw7t
                          g$ht$27387$6Dw7t
                          g$y$27389$6Dw7t
                          g$rx$27397$6Dw7t)
                        '#f)))
                   (g$find$27392$6Dw7t g$bx$27393$6Dw7t))
                  ((case-lambda
                     ((g$rx$27398$6Dw7t g$ry$27399$6Dw7t)
                      ((case-lambda
                         ((g$t$27400$6Dw7t)
                          (if g$t$27400$6Dw7t
                            g$t$27400$6Dw7t
                            (begin
                              '#f
                              ((case-lambda
                                 ((g$nx$27401$6Dw7t g$ny$27402$6Dw7t)
                                  (if ($fx>?
                                        g$nx$27401$6Dw7t
                                        g$ny$27402$6Dw7t)
                                    (begin
                                      (g$set-box-content!$27377$6Dw7t
                                        g$ry$27399$6Dw7t
                                        g$rx$27398$6Dw7t)
                                      (g$set-box-content!$27377$6Dw7t
                                        g$rx$27398$6Dw7t
                                        ($fx+
                                          g$nx$27401$6Dw7t
                                          g$ny$27402$6Dw7t))
                                      '#f)
                                    (begin
                                      (g$set-box-content!$27377$6Dw7t
                                        g$rx$27398$6Dw7t
                                        g$ry$27399$6Dw7t)
                                      (g$set-box-content!$27377$6Dw7t
                                        g$ry$27399$6Dw7t
                                        ($fx+
                                          g$ny$27402$6Dw7t
                                          g$nx$27401$6Dw7t))
                                      '#f))))
                               (g$box-content$27376$6Dw7t
                                 g$rx$27398$6Dw7t)
                               (g$box-content$27376$6Dw7t
                                 g$ry$27399$6Dw7t))))))
                       (eq? g$rx$27398$6Dw7t g$ry$27399$6Dw7t))))
                   (g$find$27392$6Dw7t g$bx$27393$6Dw7t)
                   (g$find$27392$6Dw7t g$by$27394$6Dw7t))))))
           (g$eq-hashtable-ref$27390$6Dw7t
             g$ht$27387$6Dw7t
             g$x$27388$6Dw7t
             '#f)
           (g$eq-hashtable-ref$27390$6Dw7t
             g$ht$27387$6Dw7t
             g$y$27389$6Dw7t
             '#f))))))
   (g$pre?$27380$6Dw7t
     g$pre?$27470$6Dw7t
     (case-lambda
       ((g$x$27409$6Dw7t g$y$27410$6Dw7t g$k$27411$6Dw7t)
        (if (eq? g$x$27409$6Dw7t g$y$27410$6Dw7t)
          g$k$27411$6Dw7t
          (if (pair? g$x$27409$6Dw7t)
            (if (pair? g$y$27410$6Dw7t)
              (begin
                '#f
                (if ($fx<=? g$k$27411$6Dw7t '0)
                  g$k$27411$6Dw7t
                  ((case-lambda
                     ((g$k$27412$6Dw7t)
                      (if g$k$27412$6Dw7t
                        (begin
                          '#f
                          (g$pre?$27380$6Dw7t
                            ($cdr g$x$27409$6Dw7t)
                            ($cdr g$y$27410$6Dw7t)
                            g$k$27412$6Dw7t))
                        '#f)))
                   (g$pre?$27380$6Dw7t
                     ($car g$x$27409$6Dw7t)
                     ($car g$y$27410$6Dw7t)
                     ($fx- g$k$27411$6Dw7t '1)))))
              '#f)
            (if (g$vector?$24005$6Dw7t g$x$27409$6Dw7t)
              (if (g$vector?$24005$6Dw7t g$y$27410$6Dw7t)
                (begin
                  '#f
                  ((case-lambda
                     ((g$n$27413$6Dw7t)
                      (if ($fx=?
                            (g$vector-length$24039$6Dw7t
                              g$y$27410$6Dw7t)
                            g$n$27413$6Dw7t)
                        (begin
                          '#f
                          ((letrec ((g$f$27414$6Dw7t
                                      (case-lambda
                                        ((g$i$27415$6Dw7t
                                           g$k$27416$6Dw7t)
                                         (if ((case-lambda
                                                ((g$t$27417$6Dw7t)
                                                 (if g$t$27417$6Dw7t
                                                   g$t$27417$6Dw7t
                                                   (begin
                                                     '#f
                                                     ($fx<=?
                                                       g$k$27416$6Dw7t
                                                       '0)))))
                                              ($fx=?
                                                g$i$27415$6Dw7t
                                                g$n$27413$6Dw7t))
                                           g$k$27416$6Dw7t
                                           ((case-lambda
                                              ((g$k$27418$6Dw7t)
                                               (if g$k$27418$6Dw7t
                                                 (begin
                                                   '#f
                                                   (g$f$27414$6Dw7t
                                                     ($fx+
                                                       g$i$27415$6Dw7t
                                                       '1)
                                                     g$k$27418$6Dw7t))
                                                 '#f)))
                                            (g$pre?$27380$6Dw7t
                                              ($vector-ref
                                                g$x$27409$6Dw7t
                                                g$i$27415$6Dw7t)
                                              ($vector-ref
                                                g$y$27410$6Dw7t
                                                g$i$27415$6Dw7t)
                                              ($fx-
                                                g$k$27416$6Dw7t
                                                '1))))))))
                             g$f$27414$6Dw7t)
                           '0
                           g$k$27411$6Dw7t))
                        '#f)))
                   (g$vector-length$24039$6Dw7t g$x$27409$6Dw7t)))
                '#f)
              (if (g$string?$24003$6Dw7t g$x$27409$6Dw7t)
                (if (g$string?$24003$6Dw7t g$y$27410$6Dw7t)
                  (if (g$string=?$24079$6Dw7t
                        g$x$27409$6Dw7t
                        g$y$27410$6Dw7t)
                    (begin '#f g$k$27411$6Dw7t)
                    '#f)
                  '#f)
                (if (g$bytevector?$24006$6Dw7t g$x$27409$6Dw7t)
                  (if (g$bytevector?$24006$6Dw7t g$y$27410$6Dw7t)
                    (if (g$bytevector=?$24501$6Dw7t
                          g$x$27409$6Dw7t
                          g$y$27410$6Dw7t)
                      (begin '#f g$k$27411$6Dw7t)
                      '#f)
                    '#f)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (if (eqv? g$x$27409$6Dw7t g$y$27410$6Dw7t)
                          (begin '#f g$k$27411$6Dw7t)
                          '#f)))))))))))))
   (g$interleave?$27381$6Dw7t
     g$interleave?$27471$6Dw7t
     (case-lambda
       ((g$x$27419$6Dw7t g$y$27420$6Dw7t g$k$27421$6Dw7t)
        ((case-lambda
           ((g$ht$27422$6Dw7t)
            (letrec* ((g$call-union-find$27423$6Dw7t
                        (case-lambda
                          ((g$x$27449$6Dw7t g$y$27450$6Dw7t)
                           (begin
                             (if (not g$ht$27422$6Dw7t)
                               (set! g$ht$27422$6Dw7t
                                 (g$make-eq-hashtable$24143$6Dw7t))
                               (void))
                             (g$union-find$27379$6Dw7t
                               g$ht$27422$6Dw7t
                               g$x$27449$6Dw7t
                               g$y$27450$6Dw7t)))))
                      (g$e?$27424$6Dw7t
                        (case-lambda
                          ((g$x$27446$6Dw7t
                             g$y$27447$6Dw7t
                             g$k$27448$6Dw7t)
                           (if ($fx<=? g$k$27448$6Dw7t '0)
                             (if ($fx=?
                                   g$k$27448$6Dw7t
                                   g$kb$27368$6Dw7t)
                               (g$fast?$27426$6Dw7t
                                 g$x$27446$6Dw7t
                                 g$y$27447$6Dw7t
                                 (g$random$27378$6Dw7t
                                   (* '2 g$k0$27367$6Dw7t)))
                               (g$slow?$27425$6Dw7t
                                 g$x$27446$6Dw7t
                                 g$y$27447$6Dw7t
                                 g$k$27448$6Dw7t))
                             (g$fast?$27426$6Dw7t
                               g$x$27446$6Dw7t
                               g$y$27447$6Dw7t
                               g$k$27448$6Dw7t)))))
                      (g$slow?$27425$6Dw7t
                        (case-lambda
                          ((g$x$27437$6Dw7t
                             g$y$27438$6Dw7t
                             g$k$27439$6Dw7t)
                           (if (eq? g$x$27437$6Dw7t g$y$27438$6Dw7t)
                             g$k$27439$6Dw7t
                             (if (pair? g$x$27437$6Dw7t)
                               (if (pair? g$y$27438$6Dw7t)
                                 (begin
                                   '#f
                                   (if (g$call-union-find$27423$6Dw7t
                                         g$x$27437$6Dw7t
                                         g$y$27438$6Dw7t)
                                     '0
                                     ((case-lambda
                                        ((g$k$27440$6Dw7t)
                                         (if g$k$27440$6Dw7t
                                           (begin
                                             '#f
                                             (g$e?$27424$6Dw7t
                                               ($cdr g$x$27437$6Dw7t)
                                               ($cdr g$y$27438$6Dw7t)
                                               g$k$27440$6Dw7t))
                                           '#f)))
                                      (g$e?$27424$6Dw7t
                                        ($car g$x$27437$6Dw7t)
                                        ($car g$y$27438$6Dw7t)
                                        ($fx- g$k$27439$6Dw7t '1)))))
                                 '#f)
                               (if (g$vector?$24005$6Dw7t
                                     g$x$27437$6Dw7t)
                                 (if (g$vector?$24005$6Dw7t
                                       g$y$27438$6Dw7t)
                                   (begin
                                     '#f
                                     ((case-lambda
                                        ((g$n$27441$6Dw7t)
                                         (if ($fx=?
                                               (g$vector-length$24039$6Dw7t
                                                 g$y$27438$6Dw7t)
                                               g$n$27441$6Dw7t)
                                           (begin
                                             '#f
                                             (if (g$call-union-find$27423$6Dw7t
                                                   g$x$27437$6Dw7t
                                                   g$y$27438$6Dw7t)
                                               '0
                                               ((letrec ((g$f$27442$6Dw7t
                                                           (case-lambda
                                                             ((g$i$27443$6Dw7t
                                                                g$k$27444$6Dw7t)
                                                              (if ($fx=?
                                                                    g$i$27443$6Dw7t
                                                                    g$n$27441$6Dw7t)
                                                                g$k$27444$6Dw7t
                                                                ((case-lambda
                                                                   ((g$k$27445$6Dw7t)
                                                                    (if g$k$27445$6Dw7t
                                                                      (begin
                                                                        '#f
                                                                        (g$f$27442$6Dw7t
                                                                          ($fx+
                                                                            g$i$27443$6Dw7t
                                                                            '1)
                                                                          g$k$27445$6Dw7t))
                                                                      '#f)))
                                                                 (g$e?$27424$6Dw7t
                                                                   ($vector-ref
                                                                     g$x$27437$6Dw7t
                                                                     g$i$27443$6Dw7t)
                                                                   ($vector-ref
                                                                     g$y$27438$6Dw7t
                                                                     g$i$27443$6Dw7t)
                                                                   g$k$27444$6Dw7t)))))))
                                                  g$f$27442$6Dw7t)
                                                '0
                                                ($fx-
                                                  g$k$27439$6Dw7t
                                                  '1))))
                                           '#f)))
                                      (g$vector-length$24039$6Dw7t
                                        g$x$27437$6Dw7t)))
                                   '#f)
                                 (if (g$string?$24003$6Dw7t
                                       g$x$27437$6Dw7t)
                                   (if (g$string?$24003$6Dw7t
                                         g$y$27438$6Dw7t)
                                     (if (g$string=?$24079$6Dw7t
                                           g$x$27437$6Dw7t
                                           g$y$27438$6Dw7t)
                                       (begin '#f g$k$27439$6Dw7t)
                                       '#f)
                                     '#f)
                                   (if (g$bytevector?$24006$6Dw7t
                                         g$x$27437$6Dw7t)
                                     (if (g$bytevector?$24006$6Dw7t
                                           g$y$27438$6Dw7t)
                                       (if (g$bytevector=?$24501$6Dw7t
                                             g$x$27437$6Dw7t
                                             g$y$27438$6Dw7t)
                                         (begin '#f g$k$27439$6Dw7t)
                                         '#f)
                                       '#f)
                                     ((case-lambda
                                        (()
                                         (begin
                                           '#f
                                           (if (eqv?
                                                 g$x$27437$6Dw7t
                                                 g$y$27438$6Dw7t)
                                             (begin '#f g$k$27439$6Dw7t)
                                             '#f)))))))))))))
                      (g$fast?$27426$6Dw7t
                        (case-lambda
                          ((g$x$27427$6Dw7t
                             g$y$27428$6Dw7t
                             g$k$27429$6Dw7t)
                           ((case-lambda
                              ((g$k$27430$6Dw7t)
                               (if (eq? g$x$27427$6Dw7t g$y$27428$6Dw7t)
                                 g$k$27430$6Dw7t
                                 (if (pair? g$x$27427$6Dw7t)
                                   (if (pair? g$y$27428$6Dw7t)
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$k$27431$6Dw7t)
                                           (if g$k$27431$6Dw7t
                                             (begin
                                               '#f
                                               (g$e?$27424$6Dw7t
                                                 ($cdr g$x$27427$6Dw7t)
                                                 ($cdr g$y$27428$6Dw7t)
                                                 g$k$27431$6Dw7t))
                                             '#f)))
                                        (g$e?$27424$6Dw7t
                                          ($car g$x$27427$6Dw7t)
                                          ($car g$y$27428$6Dw7t)
                                          g$k$27430$6Dw7t)))
                                     '#f)
                                   (if (g$vector?$24005$6Dw7t
                                         g$x$27427$6Dw7t)
                                     (if (g$vector?$24005$6Dw7t
                                           g$y$27428$6Dw7t)
                                       (begin
                                         '#f
                                         ((case-lambda
                                            ((g$n$27432$6Dw7t)
                                             (if ($fx=?
                                                   (g$vector-length$24039$6Dw7t
                                                     g$y$27428$6Dw7t)
                                                   g$n$27432$6Dw7t)
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$27433$6Dw7t
                                                             (case-lambda
                                                               ((g$i$27434$6Dw7t
                                                                  g$k$27435$6Dw7t)
                                                                (if ($fx=?
                                                                      g$i$27434$6Dw7t
                                                                      g$n$27432$6Dw7t)
                                                                  g$k$27435$6Dw7t
                                                                  ((case-lambda
                                                                     ((g$k$27436$6Dw7t)
                                                                      (if g$k$27436$6Dw7t
                                                                        (begin
                                                                          '#f
                                                                          (g$f$27433$6Dw7t
                                                                            ($fx+
                                                                              g$i$27434$6Dw7t
                                                                              '1)
                                                                            g$k$27436$6Dw7t))
                                                                        '#f)))
                                                                   (g$e?$27424$6Dw7t
                                                                     ($vector-ref
                                                                       g$x$27427$6Dw7t
                                                                       g$i$27434$6Dw7t)
                                                                     ($vector-ref
                                                                       g$y$27428$6Dw7t
                                                                       g$i$27434$6Dw7t)
                                                                     g$k$27435$6Dw7t)))))))
                                                    g$f$27433$6Dw7t)
                                                  '0
                                                  g$k$27430$6Dw7t))
                                               '#f)))
                                          (g$vector-length$24039$6Dw7t
                                            g$x$27427$6Dw7t)))
                                       '#f)
                                     (if (g$string?$24003$6Dw7t
                                           g$x$27427$6Dw7t)
                                       (if (g$string?$24003$6Dw7t
                                             g$y$27428$6Dw7t)
                                         (if (g$string=?$24079$6Dw7t
                                               g$x$27427$6Dw7t
                                               g$y$27428$6Dw7t)
                                           (begin '#f g$k$27430$6Dw7t)
                                           '#f)
                                         '#f)
                                       (if (g$bytevector?$24006$6Dw7t
                                             g$x$27427$6Dw7t)
                                         (if (g$bytevector?$24006$6Dw7t
                                               g$y$27428$6Dw7t)
                                           (if (g$bytevector=?$24501$6Dw7t
                                                 g$x$27427$6Dw7t
                                                 g$y$27428$6Dw7t)
                                             (begin '#f g$k$27430$6Dw7t)
                                             '#f)
                                           '#f)
                                         ((case-lambda
                                            (()
                                             (begin
                                               '#f
                                               (if (eqv?
                                                     g$x$27427$6Dw7t
                                                     g$y$27428$6Dw7t)
                                                 (begin
                                                   '#f
                                                   g$k$27430$6Dw7t)
                                                 '#f))))))))))))
                            ($fx- g$k$27429$6Dw7t '1))))))
              (if (g$e?$27424$6Dw7t
                    g$x$27419$6Dw7t
                    g$y$27420$6Dw7t
                    g$k$27421$6Dw7t)
                (begin '#f '#t)
                '#f))))
         '#f))))
   (g$interleave-equal?$27382$6Dw7t
     g$interleave-equal?$27472$6Dw7t
     (case-lambda
       ((g$x$27451$6Dw7t g$y$27452$6Dw7t)
        (g$interleave?$27381$6Dw7t
          g$x$27451$6Dw7t
          g$y$27452$6Dw7t
          g$k0$27367$6Dw7t))))
   (g$precheck/interleave-equal?$27383$6Dw7t
     g$precheck/interleave-equal?$27473$6Dw7t
     (case-lambda
       ((g$x$27453$6Dw7t g$y$27454$6Dw7t)
        ((case-lambda
           ((g$k$27455$6Dw7t)
            (if g$k$27455$6Dw7t
              (begin
                '#f
                ((case-lambda
                   ((g$t$27456$6Dw7t)
                    (if g$t$27456$6Dw7t
                      g$t$27456$6Dw7t
                      (begin
                        '#f
                        (g$interleave?$27381$6Dw7t
                          g$x$27453$6Dw7t
                          g$y$27454$6Dw7t
                          '0)))))
                 (g$>$25072$6Dw7t g$k$27455$6Dw7t '0)))
              '#f)))
         (g$pre?$27380$6Dw7t
           g$x$27453$6Dw7t
           g$y$27454$6Dw7t
           g$k0$27367$6Dw7t)))))
   (g$equal?$27384$6Dw7t
     g$equal?$27474$6Dw7t
     (case-lambda
       ((g$x$27457$6Dw7t g$y$27458$6Dw7t)
        (g$precheck/interleave-equal?$27383$6Dw7t
          g$x$27457$6Dw7t
          g$y$27458$6Dw7t)))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$27475$6Dw7t
     g$library-version-mismatch-warning$27678$6Dw7t
     (case-lambda
       ((g$name$27650$6Dw7t
          g$depname$27651$6Dw7t
          g$filename$27652$6Dw7t)
        (g$fprintf$27361$6Dw7t
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$27650$6Dw7t
          g$depname$27651$6Dw7t
          g$filename$27652$6Dw7t))))
   (g$file-locator-resolution-error$27476$6Dw7t
     g$file-locator-resolution-error$27679$6Dw7t
     (case-lambda
       ((g$libname$27653$6Dw7t g$failed-list$27654$6Dw7t)
        (letrec* ((g$9326$27655$6Dw7t
                    (make-record-type-descriptor
                      '&library-resolution
                      g$&condition-rtd$20226$6Dw7t
                      'g$9329$6Dw7t
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$9328$27656$6Dw7t '#f)
                  (g$9327$27657$6Dw7t
                    (make-record-constructor-descriptor
                      g$9326$27655$6Dw7t
                      g$&condition-rcd$20227$6Dw7t
                      g$9328$27656$6Dw7t))
                  (g$9325$27660$6Dw7t
                    (record-predicate g$9326$27655$6Dw7t))
                  (g$make-library-resolution-condition$27661$6Dw7t
                    (record-constructor g$9327$27657$6Dw7t))
                  (g$9323$27662$6Dw7t
                    (record-accessor g$9326$27655$6Dw7t '0))
                  (g$9324$27663$6Dw7t
                    (record-accessor g$9326$27655$6Dw7t '1))
                  (g$library-resolution-condition?$27664$6Dw7t
                    (condition-predicate g$9326$27655$6Dw7t))
                  (g$condition-library$27665$6Dw7t
                    (condition-accessor
                      g$9326$27655$6Dw7t
                      g$9323$27662$6Dw7t))
                  (g$condition-files$27666$6Dw7t
                    (condition-accessor
                      g$9326$27655$6Dw7t
                      g$9324$27663$6Dw7t)))
          (raise
            (condition
              (g$make-error$20258$6Dw7t)
              (g$make-who-condition$20292$6Dw7t 'expander)
              (g$make-message-condition$20232$6Dw7t
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$27661$6Dw7t
                g$libname$27653$6Dw7t
                g$failed-list$27654$6Dw7t)))))))
   (g$read-library-source-file$27477$6Dw7t
     g$read-library-source-file$27680$6Dw7t
     (case-lambda
       ((g$file-name$27667$6Dw7t)
        (g$with-input-from-file$27184$6Dw7t
          g$file-name$27667$6Dw7t
          read-annotated))))
   (g$make-parameter$27478$6Dw7t
     g$make-parameter$27681$6Dw7t
     (case-lambda
       ((g$x$27668$6Dw7t)
        (g$make-parameter$27478$6Dw7t
          g$x$27668$6Dw7t
          (case-lambda ((g$x$27669$6Dw7t) g$x$27669$6Dw7t))))
       ((g$x$27670$6Dw7t g$fender$27671$6Dw7t)
        (begin
          (if (not (g$procedure?$24009$6Dw7t g$fender$27671$6Dw7t))
            (g$assertion-error$33047$6Dw7t
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$27672$6Dw7t)
              (case-lambda
                (() g$x$27672$6Dw7t)
                ((g$v$27673$6Dw7t)
                 (set! g$x$27672$6Dw7t
                   (g$fender$27671$6Dw7t g$v$27673$6Dw7t))))))
           (g$fender$27671$6Dw7t g$x$27670$6Dw7t))))))
   (g$file-options-constructor$27646$6Dw7t
     g$file-options-constructor$27682$6Dw7t
     (g$make-parameter$27478$6Dw7t '#f))
   (g$file-options-spec$27647$6Dw7t
     g$file-options-spec$27683$6Dw7t
     (case-lambda
       ((g$x$27674$6Dw7t)
        ((g$file-options-constructor$27646$6Dw7t) g$x$27674$6Dw7t))))
   (g$set-label-binding!$27648$6Dw7t
     g$set-label-binding!$27684$6Dw7t
     (case-lambda
       ((g$label$27675$6Dw7t g$binding$27676$6Dw7t)
        (set-symbol-value! g$label$27675$6Dw7t g$binding$27676$6Dw7t))))
   (g$label-binding$27649$6Dw7t
     g$label-binding$27685$6Dw7t
     (case-lambda
       ((g$label$27677$6Dw7t)
        (if (symbol-bound? g$label$27677$6Dw7t)
          (begin '#f (symbol-value g$label$27677$6Dw7t))
          '#f)))))
  (void))

(library-letrec* (ironscheme pretty-print)
  ((g$genwrite:newline-str$27686$6Dw7t
     g$genwrite:newline-str$27879$6Dw7t
     (g$make-string$24015$6Dw7t '1 '#\newline))
   (g$symbol->string$27687$6Dw7t
     g$symbol->string$27880$6Dw7t
     (case-lambda
       ((g$s$27699$6Dw7t)
        (g$symbol->string$24027$6Dw7t
          (if (g$pretty-gensyms$27696$6Dw7t)
            (ungensym g$s$27699$6Dw7t)
            g$s$27699$6Dw7t)))))
   (g$read-macro-body$27688$6Dw7t
     g$read-macro-body$27881$6Dw7t
     (case-lambda
       ((g$l$27700$6Dw7t) (g$cadr$24045$6Dw7t g$l$27700$6Dw7t))))
   (g$read-macro-prefix$27689$6Dw7t
     g$read-macro-prefix$27882$6Dw7t
     (case-lambda
       ((g$l$27701$6Dw7t)
        ((case-lambda
           ((g$head$27702$6Dw7t g$tail$27703$6Dw7t)
            ((case-lambda
               ((g$t$27704$6Dw7t)
                (if (eqv? g$t$27704$6Dw7t 'syntax)
                  '"#'"
                  (if (eqv? g$t$27704$6Dw7t 'quasisyntax)
                    '"#`"
                    (if (eqv? g$t$27704$6Dw7t 'unsyntax)
                      '"#,"
                      (if (eqv? g$t$27704$6Dw7t 'unsyntax-splicing)
                        '"#,@"
                        (if (eqv? g$t$27704$6Dw7t 'quote)
                          '"'"
                          (if (eqv? g$t$27704$6Dw7t 'quasiquote)
                            '"`"
                            (if (eqv? g$t$27704$6Dw7t 'unquote)
                              '","
                              (if (eqv?
                                    g$t$27704$6Dw7t
                                    'unquote-splicing)
                                '",@"
                                (if '#f '#f (void))))))))))))
             g$head$27702$6Dw7t)))
         (car g$l$27701$6Dw7t)
         (cdr g$l$27701$6Dw7t)))))
   (g$length1?$27690$6Dw7t
     g$length1?$27883$6Dw7t
     (case-lambda
       ((g$l$27705$6Dw7t)
        (if (pair? g$l$27705$6Dw7t)
          (begin '#f (null? (cdr g$l$27705$6Dw7t)))
          '#f))))
   (g$read-macro?$27691$6Dw7t
     g$read-macro?$27884$6Dw7t
     (case-lambda
       ((g$l$27706$6Dw7t)
        ((case-lambda
           ((g$head$27707$6Dw7t g$tail$27708$6Dw7t)
            ((case-lambda
               ((g$t$27709$6Dw7t)
                (if (g$memv$23570$6Dw7t
                      g$t$27709$6Dw7t
                      '(quote
                         quasiquote
                         unquote
                         unquote-splicing
                         syntax
                         quasisyntax
                         unsyntax
                         unsyntax-splicing))
                  (g$length1?$27690$6Dw7t g$tail$27708$6Dw7t)
                  ((case-lambda (() (begin '#f '#f)))))))
             g$head$27707$6Dw7t)))
         (car g$l$27706$6Dw7t)
         (cdr g$l$27706$6Dw7t)))))
   (g$generic-write$27692$6Dw7t
     g$generic-write$27885$6Dw7t
     (case-lambda
       ((g$obj$27710$6Dw7t
          g$display?$27711$6Dw7t
          g$width$27712$6Dw7t
          g$output$27713$6Dw7t)
        (letrec* ((g$out$27714$6Dw7t
                    (case-lambda
                      ((g$str$27863$6Dw7t g$col$27864$6Dw7t)
                       (if g$col$27864$6Dw7t
                         (if (g$output$27713$6Dw7t g$str$27863$6Dw7t)
                           (begin
                             '#f
                             (g$fx+$23294$6Dw7t
                               g$col$27864$6Dw7t
                               (g$string-length$24019$6Dw7t
                                 g$str$27863$6Dw7t)))
                           '#f)
                         '#f))))
                  (g$wr$27715$6Dw7t
                    (case-lambda
                      ((g$obj$27846$6Dw7t g$col$27847$6Dw7t)
                       (letrec* ((g$wr-expr$27848$6Dw7t
                                   (case-lambda
                                     ((g$expr$27861$6Dw7t
                                        g$col$27862$6Dw7t)
                                      (if (g$read-macro?$27691$6Dw7t
                                            g$expr$27861$6Dw7t)
                                        (g$wr$27715$6Dw7t
                                          (g$read-macro-body$27688$6Dw7t
                                            g$expr$27861$6Dw7t)
                                          (g$out$27714$6Dw7t
                                            (g$read-macro-prefix$27689$6Dw7t
                                              g$expr$27861$6Dw7t)
                                            g$col$27862$6Dw7t))
                                        (g$wr-lst$27849$6Dw7t
                                          g$expr$27861$6Dw7t
                                          g$col$27862$6Dw7t)))))
                                 (g$wr-lst$27849$6Dw7t
                                   (case-lambda
                                     ((g$l$27856$6Dw7t
                                        g$col$27857$6Dw7t)
                                      (if (pair? g$l$27856$6Dw7t)
                                        ((letrec ((g$loop$27858$6Dw7t
                                                    (case-lambda
                                                      ((g$l$27859$6Dw7t
                                                         g$col$27860$6Dw7t)
                                                       (if (not g$col$27860$6Dw7t)
                                                         g$col$27860$6Dw7t
                                                         (if (pair?
                                                               g$l$27859$6Dw7t)
                                                           (g$loop$27858$6Dw7t
                                                             (cdr g$l$27859$6Dw7t)
                                                             (g$wr$27715$6Dw7t
                                                               (car g$l$27859$6Dw7t)
                                                               (g$out$27714$6Dw7t
                                                                 '" "
                                                                 g$col$27860$6Dw7t)))
                                                           (if (null?
                                                                 g$l$27859$6Dw7t)
                                                             (g$out$27714$6Dw7t
                                                               '")"
                                                               g$col$27860$6Dw7t)
                                                             ((case-lambda
                                                                (()
                                                                 (begin
                                                                   '#f
                                                                   (g$out$27714$6Dw7t
                                                                     '")"
                                                                     (g$wr$27715$6Dw7t
                                                                       g$l$27859$6Dw7t
                                                                       (g$out$27714$6Dw7t
                                                                         '" . "
                                                                         g$col$27860$6Dw7t))))))))))))))
                                           g$loop$27858$6Dw7t)
                                         (cdr g$l$27856$6Dw7t)
                                         (if g$col$27857$6Dw7t
                                           (begin
                                             '#f
                                             (g$wr$27715$6Dw7t
                                               (car g$l$27856$6Dw7t)
                                               (g$out$27714$6Dw7t
                                                 '"("
                                                 g$col$27857$6Dw7t)))
                                           '#f))
                                        (g$out$27714$6Dw7t
                                          '"()"
                                          g$col$27857$6Dw7t))))))
                         (if (pair? g$obj$27846$6Dw7t)
                           (g$wr-expr$27848$6Dw7t
                             g$obj$27846$6Dw7t
                             g$col$27847$6Dw7t)
                           (if (null? g$obj$27846$6Dw7t)
                             (g$wr-lst$27849$6Dw7t
                               g$obj$27846$6Dw7t
                               g$col$27847$6Dw7t)
                             (if (g$vector?$24005$6Dw7t
                                   g$obj$27846$6Dw7t)
                               (g$wr-lst$27849$6Dw7t
                                 (g$vector->list$24041$6Dw7t
                                   g$obj$27846$6Dw7t)
                                 (g$out$27714$6Dw7t
                                   '"#"
                                   g$col$27847$6Dw7t))
                               (if (g$boolean?$24008$6Dw7t
                                     g$obj$27846$6Dw7t)
                                 (g$out$27714$6Dw7t
                                   (if g$obj$27846$6Dw7t '"#t" '"#f")
                                   g$col$27847$6Dw7t)
                                 (if (g$number?$25047$6Dw7t
                                       g$obj$27846$6Dw7t)
                                   (g$out$27714$6Dw7t
                                     (g$number->string$25068$6Dw7t
                                       g$obj$27846$6Dw7t)
                                     g$col$27847$6Dw7t)
                                   (if (g$symbol?$24007$6Dw7t
                                         g$obj$27846$6Dw7t)
                                     (g$out$27714$6Dw7t
                                       (g$symbol->string$27687$6Dw7t
                                         g$obj$27846$6Dw7t)
                                       g$col$27847$6Dw7t)
                                     (if (g$string?$24003$6Dw7t
                                           g$obj$27846$6Dw7t)
                                       (if g$display?$27711$6Dw7t
                                         (g$out$27714$6Dw7t
                                           g$obj$27846$6Dw7t
                                           g$col$27847$6Dw7t)
                                         ((letrec ((g$loop$27850$6Dw7t
                                                     (case-lambda
                                                       ((g$i$27851$6Dw7t
                                                          g$j$27852$6Dw7t
                                                          g$col$27853$6Dw7t)
                                                        (if (if g$col$27853$6Dw7t
                                                              (begin
                                                                '#f
                                                                (g$fx<?$23308$6Dw7t
                                                                  g$j$27852$6Dw7t
                                                                  (g$string-length$24019$6Dw7t
                                                                    g$obj$27846$6Dw7t)))
                                                              '#f)
                                                          ((case-lambda
                                                             ((g$c$27854$6Dw7t)
                                                              (if ((case-lambda
                                                                     ((g$t$27855$6Dw7t)
                                                                      (if g$t$27855$6Dw7t
                                                                        g$t$27855$6Dw7t
                                                                        (begin
                                                                          '#f
                                                                          (g$char=?$24086$6Dw7t
                                                                            g$c$27854$6Dw7t
                                                                            '#\")))))
                                                                   (g$char=?$24086$6Dw7t
                                                                     g$c$27854$6Dw7t
                                                                     '#\\))
                                                                (g$loop$27850$6Dw7t
                                                                  g$j$27852$6Dw7t
                                                                  (g$fx+$23294$6Dw7t
                                                                    g$j$27852$6Dw7t
                                                                    '1)
                                                                  (g$out$27714$6Dw7t
                                                                    '"\\"
                                                                    (g$out$27714$6Dw7t
                                                                      (g$substring$24024$6Dw7t
                                                                        g$obj$27846$6Dw7t
                                                                        g$i$27851$6Dw7t
                                                                        g$j$27852$6Dw7t)
                                                                      g$col$27853$6Dw7t)))
                                                                (g$loop$27850$6Dw7t
                                                                  g$i$27851$6Dw7t
                                                                  (g$fx+$23294$6Dw7t
                                                                    g$j$27852$6Dw7t
                                                                    '1)
                                                                  g$col$27853$6Dw7t))))
                                                           (g$string-ref$24016$6Dw7t
                                                             g$obj$27846$6Dw7t
                                                             g$j$27852$6Dw7t))
                                                          (g$out$27714$6Dw7t
                                                            '"\""
                                                            (g$out$27714$6Dw7t
                                                              (g$substring$24024$6Dw7t
                                                                g$obj$27846$6Dw7t
                                                                g$i$27851$6Dw7t
                                                                g$j$27852$6Dw7t)
                                                              g$col$27853$6Dw7t)))))))
                                            g$loop$27850$6Dw7t)
                                          '0
                                          '0
                                          (g$out$27714$6Dw7t
                                            '"\""
                                            g$col$27847$6Dw7t)))
                                       ((case-lambda
                                          (()
                                           (begin
                                             '#f
                                             (g$out$27714$6Dw7t
                                               (g$format$27362$6Dw7t
                                                 (if g$display?$27711$6Dw7t
                                                   '"~a"
                                                   '"~s")
                                                 g$obj$27846$6Dw7t)
                                               g$col$27847$6Dw7t))))))))))))))))
                  (g$pp$27716$6Dw7t
                    (case-lambda
                      ((g$obj$27717$6Dw7t g$col$27718$6Dw7t)
                       (letrec* ((g$spaces$27719$6Dw7t
                                   (case-lambda
                                     ((g$n$27844$6Dw7t
                                        g$col$27845$6Dw7t)
                                      (if (g$fx>?$23310$6Dw7t
                                            g$n$27844$6Dw7t
                                            '0)
                                        (if (g$fx>?$23310$6Dw7t
                                              g$n$27844$6Dw7t
                                              '7)
                                          (g$spaces$27719$6Dw7t
                                            (g$fx-$23296$6Dw7t
                                              g$n$27844$6Dw7t
                                              '8)
                                            (g$out$27714$6Dw7t
                                              '"        "
                                              g$col$27845$6Dw7t))
                                          (g$out$27714$6Dw7t
                                            (g$substring$24024$6Dw7t
                                              '"        "
                                              '0
                                              g$n$27844$6Dw7t)
                                            g$col$27845$6Dw7t))
                                        g$col$27845$6Dw7t))))
                                 (g$indent$27720$6Dw7t
                                   (case-lambda
                                     ((g$to$27842$6Dw7t
                                        g$col$27843$6Dw7t)
                                      (if g$col$27843$6Dw7t
                                        (begin
                                          '#f
                                          (if (g$fx<?$23308$6Dw7t
                                                g$to$27842$6Dw7t
                                                g$col$27843$6Dw7t)
                                            (if (g$out$27714$6Dw7t
                                                  g$genwrite:newline-str$27686$6Dw7t
                                                  g$col$27843$6Dw7t)
                                              (begin
                                                '#f
                                                (g$spaces$27719$6Dw7t
                                                  g$to$27842$6Dw7t
                                                  '0))
                                              '#f)
                                            (g$spaces$27719$6Dw7t
                                              (g$fx-$23296$6Dw7t
                                                g$to$27842$6Dw7t
                                                g$col$27843$6Dw7t)
                                              g$col$27843$6Dw7t)))
                                        '#f))))
                                 (g$pr$27721$6Dw7t
                                   (case-lambda
                                     ((g$obj$27834$6Dw7t
                                        g$col$27835$6Dw7t
                                        g$extra$27836$6Dw7t
                                        g$pp-pair$27837$6Dw7t)
                                      (if ((case-lambda
                                             ((g$t$27838$6Dw7t)
                                              (if g$t$27838$6Dw7t
                                                g$t$27838$6Dw7t
                                                (begin
                                                  '#f
                                                  (g$vector?$24005$6Dw7t
                                                    g$obj$27834$6Dw7t)))))
                                           (pair? g$obj$27834$6Dw7t))
                                        ((case-lambda
                                           ((g$result$27839$6Dw7t
                                              g$left$27840$6Dw7t)
                                            (begin
                                              (g$generic-write$27692$6Dw7t
                                                g$obj$27834$6Dw7t
                                                g$display?$27711$6Dw7t
                                                '#f
                                                (case-lambda
                                                  ((g$str$27841$6Dw7t)
                                                   (begin
                                                     (set! g$result$27839$6Dw7t
                                                       (cons
                                                         g$str$27841$6Dw7t
                                                         g$result$27839$6Dw7t))
                                                     (set! g$left$27840$6Dw7t
                                                       (g$fx-$23296$6Dw7t
                                                         g$left$27840$6Dw7t
                                                         (g$string-length$24019$6Dw7t
                                                           g$str$27841$6Dw7t)))
                                                     (g$fx>?$23310$6Dw7t
                                                       g$left$27840$6Dw7t
                                                       '0)))))
                                              (if (g$fx>?$23310$6Dw7t
                                                    g$left$27840$6Dw7t
                                                    '0)
                                                (g$out$27714$6Dw7t
                                                  (g$reverse-string-append$27697$6Dw7t
                                                    g$result$27839$6Dw7t)
                                                  g$col$27835$6Dw7t)
                                                (if (pair?
                                                      g$obj$27834$6Dw7t)
                                                  (g$pp-pair$27837$6Dw7t
                                                    g$obj$27834$6Dw7t
                                                    g$col$27835$6Dw7t
                                                    g$extra$27836$6Dw7t)
                                                  (g$pp-list$27724$6Dw7t
                                                    (g$vector->list$24041$6Dw7t
                                                      g$obj$27834$6Dw7t)
                                                    (g$out$27714$6Dw7t
                                                      '"#"
                                                      g$col$27835$6Dw7t)
                                                    g$extra$27836$6Dw7t
                                                    g$pp-expr$27722$6Dw7t))))))
                                         '()
                                         (g$min$24075$6Dw7t
                                           (g$fx+$23294$6Dw7t
                                             (g$fx-$23296$6Dw7t
                                               (g$fx-$23296$6Dw7t
                                                 g$width$27712$6Dw7t
                                                 g$col$27835$6Dw7t)
                                               g$extra$27836$6Dw7t)
                                             '1)
                                           (g$pretty-width$27693$6Dw7t)))
                                        (g$wr$27715$6Dw7t
                                          g$obj$27834$6Dw7t
                                          g$col$27835$6Dw7t)))))
                                 (g$pp-expr$27722$6Dw7t
                                   (case-lambda
                                     ((g$expr$27829$6Dw7t
                                        g$col$27830$6Dw7t
                                        g$extra$27831$6Dw7t)
                                      (if (g$read-macro?$27691$6Dw7t
                                            g$expr$27829$6Dw7t)
                                        (g$pr$27721$6Dw7t
                                          (g$read-macro-body$27688$6Dw7t
                                            g$expr$27829$6Dw7t)
                                          (g$out$27714$6Dw7t
                                            (g$read-macro-prefix$27689$6Dw7t
                                              g$expr$27829$6Dw7t)
                                            g$col$27830$6Dw7t)
                                          g$extra$27831$6Dw7t
                                          g$pp-expr$27722$6Dw7t)
                                        ((case-lambda
                                           ((g$head$27832$6Dw7t)
                                            (if (g$symbol?$24007$6Dw7t
                                                  g$head$27832$6Dw7t)
                                              ((case-lambda
                                                 ((g$proc$27833$6Dw7t)
                                                  (if g$proc$27833$6Dw7t
                                                    (g$proc$27833$6Dw7t
                                                      g$expr$27829$6Dw7t
                                                      g$col$27830$6Dw7t
                                                      g$extra$27831$6Dw7t)
                                                    (if (g$fx>?$23310$6Dw7t
                                                          (g$string-length$24019$6Dw7t
                                                            (g$symbol->string$27687$6Dw7t
                                                              g$head$27832$6Dw7t))
                                                          (g$max-call-head-width$27695$6Dw7t))
                                                      (g$pp-general$27726$6Dw7t
                                                        g$expr$27829$6Dw7t
                                                        g$col$27830$6Dw7t
                                                        g$extra$27831$6Dw7t
                                                        '#f
                                                        '#f
                                                        '#f
                                                        g$pp-expr$27722$6Dw7t)
                                                      (g$pp-call$27723$6Dw7t
                                                        g$expr$27829$6Dw7t
                                                        g$col$27830$6Dw7t
                                                        g$extra$27831$6Dw7t
                                                        g$pp-expr$27722$6Dw7t)))))
                                               (g$style$27738$6Dw7t
                                                 g$head$27832$6Dw7t))
                                              (g$pp-list$27724$6Dw7t
                                                g$expr$27829$6Dw7t
                                                g$col$27830$6Dw7t
                                                g$extra$27831$6Dw7t
                                                g$pp-expr$27722$6Dw7t))))
                                         (car g$expr$27829$6Dw7t))))))
                                 (g$pp-call$27723$6Dw7t
                                   (case-lambda
                                     ((g$expr$27824$6Dw7t
                                        g$col$27825$6Dw7t
                                        g$extra$27826$6Dw7t
                                        g$pp-item$27827$6Dw7t)
                                      ((case-lambda
                                         ((g$col*$27828$6Dw7t)
                                          (if g$col$27825$6Dw7t
                                            (begin
                                              '#f
                                              (g$pp-down$27725$6Dw7t
                                                (cdr g$expr$27824$6Dw7t)
                                                g$col*$27828$6Dw7t
                                                (g$fx+$23294$6Dw7t
                                                  g$col*$27828$6Dw7t
                                                  '1)
                                                g$extra$27826$6Dw7t
                                                g$pp-item$27827$6Dw7t))
                                            '#f)))
                                       (g$wr$27715$6Dw7t
                                         (car g$expr$27824$6Dw7t)
                                         (g$out$27714$6Dw7t
                                           '"("
                                           g$col$27825$6Dw7t))))))
                                 (g$pp-list$27724$6Dw7t
                                   (case-lambda
                                     ((g$l$27819$6Dw7t
                                        g$col$27820$6Dw7t
                                        g$extra$27821$6Dw7t
                                        g$pp-item$27822$6Dw7t)
                                      ((case-lambda
                                         ((g$col$27823$6Dw7t)
                                          (g$pp-down$27725$6Dw7t
                                            g$l$27819$6Dw7t
                                            g$col$27823$6Dw7t
                                            g$col$27823$6Dw7t
                                            g$extra$27821$6Dw7t
                                            g$pp-item$27822$6Dw7t)))
                                       (g$out$27714$6Dw7t
                                         '"("
                                         g$col$27820$6Dw7t)))))
                                 (g$pp-down$27725$6Dw7t
                                   (case-lambda
                                     ((g$l$27809$6Dw7t
                                        g$col1$27810$6Dw7t
                                        g$col2$27811$6Dw7t
                                        g$extra$27812$6Dw7t
                                        g$pp-item$27813$6Dw7t)
                                      ((letrec ((g$loop$27814$6Dw7t
                                                  (case-lambda
                                                    ((g$l$27815$6Dw7t
                                                       g$col$27816$6Dw7t)
                                                     (if g$col$27816$6Dw7t
                                                       (begin
                                                         '#f
                                                         (if (pair?
                                                               g$l$27815$6Dw7t)
                                                           ((case-lambda
                                                              ((g$rest$27817$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$extra$27818$6Dw7t)
                                                                   (g$loop$27814$6Dw7t
                                                                     g$rest$27817$6Dw7t
                                                                     (g$pr$27721$6Dw7t
                                                                       (car g$l$27815$6Dw7t)
                                                                       (g$indent$27720$6Dw7t
                                                                         g$col2$27811$6Dw7t
                                                                         g$col$27816$6Dw7t)
                                                                       g$extra$27818$6Dw7t
                                                                       g$pp-item$27813$6Dw7t))))
                                                                (if (null?
                                                                      g$rest$27817$6Dw7t)
                                                                  (g$fx+$23294$6Dw7t
                                                                    g$extra$27812$6Dw7t
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$l$27815$6Dw7t))
                                                           (if (null?
                                                                 g$l$27815$6Dw7t)
                                                             (g$out$27714$6Dw7t
                                                               '")"
                                                               g$col$27816$6Dw7t)
                                                             ((case-lambda
                                                                (()
                                                                 (begin
                                                                   '#f
                                                                   (g$out$27714$6Dw7t
                                                                     '")"
                                                                     (g$pr$27721$6Dw7t
                                                                       g$l$27815$6Dw7t
                                                                       (g$indent$27720$6Dw7t
                                                                         g$col2$27811$6Dw7t
                                                                         (g$out$27714$6Dw7t
                                                                           '"."
                                                                           (g$indent$27720$6Dw7t
                                                                             g$col2$27811$6Dw7t
                                                                             g$col$27816$6Dw7t)))
                                                                       (g$fx+$23294$6Dw7t
                                                                         g$extra$27812$6Dw7t
                                                                         '1)
                                                                       g$pp-item$27813$6Dw7t)))))))))
                                                       '#f)))))
                                         g$loop$27814$6Dw7t)
                                       g$l$27809$6Dw7t
                                       g$col1$27810$6Dw7t))))
                                 (g$pp-general$27726$6Dw7t
                                   (case-lambda
                                     ((g$expr$27776$6Dw7t
                                        g$col$27777$6Dw7t
                                        g$extra$27778$6Dw7t
                                        g$named?$27779$6Dw7t
                                        g$pp-1$27780$6Dw7t
                                        g$pp-2$27781$6Dw7t
                                        g$pp-3$27782$6Dw7t)
                                      (letrec* ((g$tail1$27783$6Dw7t
                                                  (case-lambda
                                                    ((g$rest$27802$6Dw7t
                                                       g$col1$27803$6Dw7t
                                                       g$col2$27804$6Dw7t
                                                       g$col3$27805$6Dw7t)
                                                     (if (if g$pp-1$27780$6Dw7t
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27802$6Dw7t))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27806$6Dw7t)
                                                           ((case-lambda
                                                              ((g$rest$27807$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$extra$27808$6Dw7t)
                                                                   (g$tail2$27784$6Dw7t
                                                                     g$rest$27807$6Dw7t
                                                                     g$col1$27803$6Dw7t
                                                                     (g$pr$27721$6Dw7t
                                                                       g$val1$27806$6Dw7t
                                                                       (g$indent$27720$6Dw7t
                                                                         g$col3$27805$6Dw7t
                                                                         g$col2$27804$6Dw7t)
                                                                       g$extra$27808$6Dw7t
                                                                       g$pp-1$27780$6Dw7t)
                                                                     g$col3$27805$6Dw7t)))
                                                                (if (null?
                                                                      g$rest$27807$6Dw7t)
                                                                  (g$fx+$23294$6Dw7t
                                                                    g$extra$27778$6Dw7t
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27802$6Dw7t))))
                                                        (car g$rest$27802$6Dw7t))
                                                       (g$tail2$27784$6Dw7t
                                                         g$rest$27802$6Dw7t
                                                         g$col1$27803$6Dw7t
                                                         g$col2$27804$6Dw7t
                                                         g$col3$27805$6Dw7t)))))
                                                (g$tail2$27784$6Dw7t
                                                  (case-lambda
                                                    ((g$rest$27795$6Dw7t
                                                       g$col1$27796$6Dw7t
                                                       g$col2$27797$6Dw7t
                                                       g$col3$27798$6Dw7t)
                                                     (if (if g$pp-2$27781$6Dw7t
                                                           (begin
                                                             '#f
                                                             (pair?
                                                               g$rest$27795$6Dw7t))
                                                           '#f)
                                                       ((case-lambda
                                                          ((g$val1$27799$6Dw7t)
                                                           ((case-lambda
                                                              ((g$rest$27800$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$extra$27801$6Dw7t)
                                                                   (g$tail3$27785$6Dw7t
                                                                     g$rest$27800$6Dw7t
                                                                     g$col1$27796$6Dw7t
                                                                     (g$pr$27721$6Dw7t
                                                                       g$val1$27799$6Dw7t
                                                                       (g$indent$27720$6Dw7t
                                                                         g$col3$27798$6Dw7t
                                                                         g$col2$27797$6Dw7t)
                                                                       g$extra$27801$6Dw7t
                                                                       g$pp-2$27781$6Dw7t))))
                                                                (if (null?
                                                                      g$rest$27800$6Dw7t)
                                                                  (g$fx+$23294$6Dw7t
                                                                    g$extra$27778$6Dw7t
                                                                    '1)
                                                                  '0))))
                                                            (cdr g$rest$27795$6Dw7t))))
                                                        (car g$rest$27795$6Dw7t))
                                                       (g$tail3$27785$6Dw7t
                                                         g$rest$27795$6Dw7t
                                                         g$col1$27796$6Dw7t
                                                         g$col2$27797$6Dw7t)))))
                                                (g$tail3$27785$6Dw7t
                                                  (case-lambda
                                                    ((g$rest$27792$6Dw7t
                                                       g$col1$27793$6Dw7t
                                                       g$col2$27794$6Dw7t)
                                                     (g$pp-down$27725$6Dw7t
                                                       g$rest$27792$6Dw7t
                                                       g$col2$27794$6Dw7t
                                                       g$col1$27793$6Dw7t
                                                       g$extra$27778$6Dw7t
                                                       g$pp-3$27782$6Dw7t)))))
                                        ((case-lambda
                                           ((g$head$27786$6Dw7t)
                                            ((case-lambda
                                               ((g$rest$27787$6Dw7t)
                                                ((case-lambda
                                                   ((g$col*$27788$6Dw7t)
                                                    (if (if g$named?$27779$6Dw7t
                                                          (begin
                                                            '#f
                                                            (pair?
                                                              g$rest$27787$6Dw7t))
                                                          '#f)
                                                      ((case-lambda
                                                         ((g$name$27789$6Dw7t)
                                                          ((case-lambda
                                                             ((g$rest$27790$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$col**$27791$6Dw7t)
                                                                  (g$tail1$27783$6Dw7t
                                                                    g$rest$27790$6Dw7t
                                                                    (g$fx+$23294$6Dw7t
                                                                      g$col$27777$6Dw7t
                                                                      (g$indent-general$27694$6Dw7t))
                                                                    g$col**$27791$6Dw7t
                                                                    (g$fx+$23294$6Dw7t
                                                                      g$col**$27791$6Dw7t
                                                                      '1))))
                                                               (g$wr$27715$6Dw7t
                                                                 g$name$27789$6Dw7t
                                                                 (g$out$27714$6Dw7t
                                                                   '" "
                                                                   g$col*$27788$6Dw7t)))))
                                                           (cdr g$rest$27787$6Dw7t))))
                                                       (car g$rest$27787$6Dw7t))
                                                      (g$tail1$27783$6Dw7t
                                                        g$rest$27787$6Dw7t
                                                        (g$fx+$23294$6Dw7t
                                                          g$col$27777$6Dw7t
                                                          (g$indent-general$27694$6Dw7t))
                                                        g$col*$27788$6Dw7t
                                                        (g$fx+$23294$6Dw7t
                                                          g$col*$27788$6Dw7t
                                                          '1)))))
                                                 (g$wr$27715$6Dw7t
                                                   g$head$27786$6Dw7t
                                                   (g$out$27714$6Dw7t
                                                     '"("
                                                     g$col$27777$6Dw7t)))))
                                             (cdr g$expr$27776$6Dw7t))))
                                         (car g$expr$27776$6Dw7t))))))
                                 (g$pp-expr-list$27727$6Dw7t
                                   (case-lambda
                                     ((g$l$27773$6Dw7t
                                        g$col$27774$6Dw7t
                                        g$extra$27775$6Dw7t)
                                      (g$pp-list$27724$6Dw7t
                                        g$l$27773$6Dw7t
                                        g$col$27774$6Dw7t
                                        g$extra$27775$6Dw7t
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$pp-SYNTAX-CASE$27728$6Dw7t
                                   (case-lambda
                                     ((g$expr$27770$6Dw7t
                                        g$col$27771$6Dw7t
                                        g$extra$27772$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27770$6Dw7t
                                        g$col$27771$6Dw7t
                                        g$extra$27772$6Dw7t
                                        '#t
                                        g$pp-expr-list$27727$6Dw7t
                                        '#f
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$pp-LAMBDA$27729$6Dw7t
                                   (case-lambda
                                     ((g$expr$27767$6Dw7t
                                        g$col$27768$6Dw7t
                                        g$extra$27769$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27767$6Dw7t
                                        g$col$27768$6Dw7t
                                        g$extra$27769$6Dw7t
                                        '#f
                                        g$pp-expr-list$27727$6Dw7t
                                        '#f
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$pp-IF$27730$6Dw7t
                                   (case-lambda
                                     ((g$expr$27764$6Dw7t
                                        g$col$27765$6Dw7t
                                        g$extra$27766$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27764$6Dw7t
                                        g$col$27765$6Dw7t
                                        g$extra$27766$6Dw7t
                                        '#f
                                        g$pp-expr$27722$6Dw7t
                                        '#f
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$pp-COND$27731$6Dw7t
                                   (case-lambda
                                     ((g$expr$27761$6Dw7t
                                        g$col$27762$6Dw7t
                                        g$extra$27763$6Dw7t)
                                      (g$pp-call$27723$6Dw7t
                                        g$expr$27761$6Dw7t
                                        g$col$27762$6Dw7t
                                        g$extra$27763$6Dw7t
                                        g$pp-expr-list$27727$6Dw7t))))
                                 (g$pp-CASE$27732$6Dw7t
                                   (case-lambda
                                     ((g$expr$27758$6Dw7t
                                        g$col$27759$6Dw7t
                                        g$extra$27760$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27758$6Dw7t
                                        g$col$27759$6Dw7t
                                        g$extra$27760$6Dw7t
                                        '#f
                                        g$pp-expr$27722$6Dw7t
                                        '#f
                                        g$pp-expr-list$27727$6Dw7t))))
                                 (g$pp-CASE-LAMBDA$27733$6Dw7t
                                   (case-lambda
                                     ((g$expr$27755$6Dw7t
                                        g$col$27756$6Dw7t
                                        g$extra$27757$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27755$6Dw7t
                                        g$col$27756$6Dw7t
                                        g$extra$27757$6Dw7t
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr-list$27727$6Dw7t))))
                                 (g$pp-AND$27734$6Dw7t
                                   (case-lambda
                                     ((g$expr$27752$6Dw7t
                                        g$col$27753$6Dw7t
                                        g$extra$27754$6Dw7t)
                                      (g$pp-call$27723$6Dw7t
                                        g$expr$27752$6Dw7t
                                        g$col$27753$6Dw7t
                                        g$extra$27754$6Dw7t
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$pp-LET$27735$6Dw7t
                                   (case-lambda
                                     ((g$expr$27747$6Dw7t
                                        g$col$27748$6Dw7t
                                        g$extra$27749$6Dw7t)
                                      ((case-lambda
                                         ((g$rest$27750$6Dw7t)
                                          ((case-lambda
                                             ((g$named?$27751$6Dw7t)
                                              (g$pp-general$27726$6Dw7t
                                                g$expr$27747$6Dw7t
                                                g$col$27748$6Dw7t
                                                g$extra$27749$6Dw7t
                                                g$named?$27751$6Dw7t
                                                g$pp-expr-list$27727$6Dw7t
                                                '#f
                                                g$pp-expr$27722$6Dw7t)))
                                           (if (pair?
                                                 g$rest$27750$6Dw7t)
                                             (begin
                                               '#f
                                               (g$symbol?$24007$6Dw7t
                                                 (car g$rest$27750$6Dw7t)))
                                             '#f))))
                                       (cdr g$expr$27747$6Dw7t)))))
                                 (g$pp-BEGIN$27736$6Dw7t
                                   (case-lambda
                                     ((g$expr$27744$6Dw7t
                                        g$col$27745$6Dw7t
                                        g$extra$27746$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27744$6Dw7t
                                        g$col$27745$6Dw7t
                                        g$extra$27746$6Dw7t
                                        '#f
                                        '#f
                                        '#f
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$pp-DO$27737$6Dw7t
                                   (case-lambda
                                     ((g$expr$27741$6Dw7t
                                        g$col$27742$6Dw7t
                                        g$extra$27743$6Dw7t)
                                      (g$pp-general$27726$6Dw7t
                                        g$expr$27741$6Dw7t
                                        g$col$27742$6Dw7t
                                        g$extra$27743$6Dw7t
                                        '#f
                                        g$pp-expr-list$27727$6Dw7t
                                        g$pp-expr-list$27727$6Dw7t
                                        g$pp-expr$27722$6Dw7t))))
                                 (g$style$27738$6Dw7t
                                   (case-lambda
                                     ((g$head$27739$6Dw7t)
                                      ((case-lambda
                                         ((g$t$27740$6Dw7t)
                                          (if (g$memv$23570$6Dw7t
                                                g$t$27740$6Dw7t
                                                '(lambda let*
                                                   letrec
                                                   letrec*
                                                   define
                                                   define-syntax
                                                   syntax-rules
                                                   let-syntax
                                                   letrec-syntax
                                                   with-syntax
                                                   library
                                                   library-letrec*))
                                            g$pp-LAMBDA$27729$6Dw7t
                                            (if (eqv?
                                                  g$t$27740$6Dw7t
                                                  'syntax-case)
                                              g$pp-SYNTAX-CASE$27728$6Dw7t
                                              (if (g$memv$23570$6Dw7t
                                                    g$t$27740$6Dw7t
                                                    '(if set!
                                                       when
                                                       unless))
                                                g$pp-IF$27730$6Dw7t
                                                (if (eqv?
                                                      g$t$27740$6Dw7t
                                                      'cond)
                                                  g$pp-COND$27731$6Dw7t
                                                  (if (eqv?
                                                        g$t$27740$6Dw7t
                                                        'case-lambda)
                                                    g$pp-CASE-LAMBDA$27733$6Dw7t
                                                    (if (eqv?
                                                          g$t$27740$6Dw7t
                                                          'case)
                                                      g$pp-CASE$27732$6Dw7t
                                                      (if (g$memv$23570$6Dw7t
                                                            g$t$27740$6Dw7t
                                                            '(and or
                                                                  import
                                                                  export))
                                                        g$pp-AND$27734$6Dw7t
                                                        (if (eqv?
                                                              g$t$27740$6Dw7t
                                                              'let)
                                                          g$pp-LET$27735$6Dw7t
                                                          (if (eqv?
                                                                g$t$27740$6Dw7t
                                                                'begin)
                                                            g$pp-BEGIN$27736$6Dw7t
                                                            (if (eqv?
                                                                  g$t$27740$6Dw7t
                                                                  'do)
                                                              g$pp-DO$27737$6Dw7t
                                                              ((case-lambda
                                                                 (()
                                                                  (begin
                                                                    '#f
                                                                    '#f))))))))))))))))
                                       g$head$27739$6Dw7t)))))
                         (g$pr$27721$6Dw7t
                           g$obj$27717$6Dw7t
                           g$col$27718$6Dw7t
                           '0
                           g$pp-expr$27722$6Dw7t))))))
          (if g$width$27712$6Dw7t
            (g$out$27714$6Dw7t
              g$genwrite:newline-str$27686$6Dw7t
              (g$pp$27716$6Dw7t g$obj$27710$6Dw7t '0))
            (g$wr$27715$6Dw7t g$obj$27710$6Dw7t '0))))))
   (g$pretty-width$27693$6Dw7t
     g$pretty-width$27886$6Dw7t
     (g$make-parameter$27681$6Dw7t '72))
   (g$indent-general$27694$6Dw7t
     g$indent-general$27887$6Dw7t
     (g$make-parameter$27681$6Dw7t '2))
   (g$max-call-head-width$27695$6Dw7t
     g$max-call-head-width$27888$6Dw7t
     (g$make-parameter$27681$6Dw7t '3))
   (g$pretty-gensyms$27696$6Dw7t
     g$pretty-gensyms$27889$6Dw7t
     (g$make-parameter$27681$6Dw7t '#f))
   (g$reverse-string-append$27697$6Dw7t
     g$reverse-string-append$27890$6Dw7t
     (case-lambda
       ((g$l$27865$6Dw7t)
        (letrec* ((g$rev-string-append$27866$6Dw7t
                    (case-lambda
                      ((g$l$27867$6Dw7t g$i$27868$6Dw7t)
                       (if (pair? g$l$27867$6Dw7t)
                         ((case-lambda
                            ((g$str$27869$6Dw7t)
                             ((case-lambda
                                ((g$len$27870$6Dw7t)
                                 ((case-lambda
                                    ((g$result$27871$6Dw7t)
                                     ((letrec ((g$loop$27872$6Dw7t
                                                 (case-lambda
                                                   ((g$j$27873$6Dw7t
                                                      g$k$27874$6Dw7t)
                                                    (if (g$fx<?$23308$6Dw7t
                                                          g$j$27873$6Dw7t
                                                          g$len$27870$6Dw7t)
                                                      (begin
                                                        (g$string-set!$24017$6Dw7t
                                                          g$result$27871$6Dw7t
                                                          g$k$27874$6Dw7t
                                                          (g$string-ref$24016$6Dw7t
                                                            g$str$27869$6Dw7t
                                                            g$j$27873$6Dw7t))
                                                        (g$loop$27872$6Dw7t
                                                          (g$fx+$23294$6Dw7t
                                                            g$j$27873$6Dw7t
                                                            '1)
                                                          (g$fx+$23294$6Dw7t
                                                            g$k$27874$6Dw7t
                                                            '1)))
                                                      g$result$27871$6Dw7t)))))
                                        g$loop$27872$6Dw7t)
                                      '0
                                      (g$fx-$23296$6Dw7t
                                        (g$fx-$23296$6Dw7t
                                          (g$string-length$24019$6Dw7t
                                            g$result$27871$6Dw7t)
                                          g$i$27868$6Dw7t)
                                        g$len$27870$6Dw7t))))
                                  (g$rev-string-append$27866$6Dw7t
                                    (cdr g$l$27867$6Dw7t)
                                    (g$fx+$23294$6Dw7t
                                      g$i$27868$6Dw7t
                                      g$len$27870$6Dw7t)))))
                              (g$string-length$24019$6Dw7t
                                g$str$27869$6Dw7t))))
                          (car g$l$27867$6Dw7t))
                         (g$make-string$24015$6Dw7t
                           g$i$27868$6Dw7t))))))
          (g$rev-string-append$27866$6Dw7t g$l$27865$6Dw7t '0)))))
   (g$pretty-print$27698$6Dw7t
     g$pretty-print$27891$6Dw7t
     (case-lambda
       ((g$obj$27875$6Dw7t . g$opt$27876$6Dw7t)
        ((case-lambda
           ((g$port$27877$6Dw7t)
            (g$generic-write$27692$6Dw7t
              g$obj$27875$6Dw7t
              '#f
              (g$pretty-width$27693$6Dw7t)
              (case-lambda
                ((g$s$27878$6Dw7t)
                 (begin
                   (display g$s$27878$6Dw7t g$port$27877$6Dw7t)
                   '#t))))))
         (if (pair? g$opt$27876$6Dw7t)
           (car g$opt$27876$6Dw7t)
           (current-output-port)))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$27892$6Dw7t
     g$cps/generate-reference$28157$6Dw7t
     (case-lambda
       ((g$variable$27945$6Dw7t)
        (g$cps/generate-operand$27896$6Dw7t
          (g$make-reference$27922$6Dw7t g$variable$27945$6Dw7t)))))
   (g$cps/generate-literal$27893$6Dw7t
     g$cps/generate-literal$28158$6Dw7t
     (case-lambda
       ((g$datum$27946$6Dw7t)
        (g$cps/generate-operand$27896$6Dw7t
          (g$make-literal$27921$6Dw7t g$datum$27946$6Dw7t)))))
   (g$cps/generate-abstraction$27894$6Dw7t
     g$cps/generate-abstraction$28159$6Dw7t
     (case-lambda
       ((g$bvl$27947$6Dw7t g$body-generator$27948$6Dw7t)
        (g$cps/generate-operand$27896$6Dw7t
          (g$make-user-abstraction$27923$6Dw7t
            g$bvl$27947$6Dw7t
            (case-lambda
              ((g$continuation-variable$27949$6Dw7t)
               (g$body-generator$27948$6Dw7t
                 (g$variable-continuator$27909$6Dw7t
                   g$continuation-variable$27949$6Dw7t)))))))))
   (g$cps/generate-abstractions$27895$6Dw7t
     g$cps/generate-abstractions$28160$6Dw7t
     (case-lambda
       ((g$bvls$27950$6Dw7t g$body-generators$27951$6Dw7t)
        (g$cps/generate-operand$27896$6Dw7t
          (g$make-user-abstractions$27924$6Dw7t
            g$bvls$27950$6Dw7t
            (g$map$23581$6Dw7t
              (case-lambda
                ((g$body-generator$27952$6Dw7t)
                 (case-lambda
                   ((g$continuation-variable$27953$6Dw7t)
                    (g$body-generator$27952$6Dw7t
                      (g$variable-continuator$27909$6Dw7t
                        g$continuation-variable$27953$6Dw7t))))))
              g$body-generators$27951$6Dw7t))))))
   (g$cps/generate-operand$27896$6Dw7t
     g$cps/generate-operand$28161$6Dw7t
     (case-lambda
       ((g$operand$27954$6Dw7t)
        (case-lambda
          ((g$continuator$27955$6Dw7t)
           (g$continue-with-operand$27912$6Dw7t
             g$continuator$27955$6Dw7t
             g$operand$27954$6Dw7t))))))
   (g$cps/generate-conditional$27897$6Dw7t
     g$cps/generate-conditional$28162$6Dw7t
     (case-lambda
       ((g$condition-generator$27956$6Dw7t
          g$consequent-generator$27957$6Dw7t
          g$alternative-generator$27958$6Dw7t)
        (case-lambda
          ((g$continuator$27959$6Dw7t)
           (letrec* ((g$if-variable$27960$6Dw7t
                       (case-lambda
                         ((g$continuation-variable$27962$6Dw7t)
                          ((case-lambda
                             ((g$continuator*$27963$6Dw7t)
                              (g$condition-generator$27956$6Dw7t
                                (g$conditional-continuator$27908$6Dw7t
                                  (case-lambda
                                    ((g$condition$27964$6Dw7t)
                                     (g$make-conditional$27931$6Dw7t
                                       g$condition$27964$6Dw7t
                                       (g$consequent-generator$27957$6Dw7t
                                         g$continuator*$27963$6Dw7t)
                                       (g$alternative-generator$27958$6Dw7t
                                         g$continuator*$27963$6Dw7t))))))))
                           (g$variable-continuator$27909$6Dw7t
                             g$continuation-variable$27962$6Dw7t))))))
             (g$reify-continuation*$27914$6Dw7t
               g$continuator$27959$6Dw7t
               g$if-variable$27960$6Dw7t
               (case-lambda
                 ((g$continuation-abstraction$27961$6Dw7t)
                  (g$make-conditional-join$27932$6Dw7t
                    g$continuation-abstraction$27961$6Dw7t
                    g$if-variable$27960$6Dw7t))))))))))
   (g$cps/generate-recursive-bind$27898$6Dw7t
     g$cps/generate-recursive-bind$28163$6Dw7t
     (case-lambda
       ((g$variables$27965$6Dw7t
          g$generators$27966$6Dw7t
          g$body-generator$27967$6Dw7t)
        (case-lambda
          ((g$continuator$27968$6Dw7t)
           (g$make-recursive-bind$27926$6Dw7t
             g$variables$27965$6Dw7t
             (g$map$23581$6Dw7t
               (case-lambda
                 ((g$generator$27969$6Dw7t)
                  (case-lambda
                    ((g$continuation-variable$27970$6Dw7t)
                     (g$generator$27969$6Dw7t
                       (g$variable-continuator$27909$6Dw7t
                         g$continuation-variable$27970$6Dw7t))))))
               g$generators$27966$6Dw7t)
             (g$body-generator$27967$6Dw7t
               (g$reified-continuator$27911$6Dw7t
                 g$continuator$27968$6Dw7t))))))))
   (g$cps/generate-recursive*-bind$27899$6Dw7t
     g$cps/generate-recursive*-bind$28164$6Dw7t
     (case-lambda
       ((g$variables$27971$6Dw7t
          g$generators$27972$6Dw7t
          g$body-generator$27973$6Dw7t)
        (case-lambda
          ((g$continuator$27974$6Dw7t)
           (g$make-recursive*-bind$27927$6Dw7t
             g$variables$27971$6Dw7t
             (g$map$23581$6Dw7t
               (case-lambda
                 ((g$generator$27975$6Dw7t)
                  (case-lambda
                    ((g$continuation-variable$27976$6Dw7t)
                     (g$generator$27975$6Dw7t
                       (g$variable-continuator$27909$6Dw7t
                         g$continuation-variable$27976$6Dw7t))))))
               g$generators$27972$6Dw7t)
             (g$body-generator$27973$6Dw7t
               (g$reified-continuator$27911$6Dw7t
                 g$continuator$27974$6Dw7t))))))))
   (g$cps/generate-recursive*-library-bind$27900$6Dw7t
     g$cps/generate-recursive*-library-bind$28165$6Dw7t
     (case-lambda
       ((g$name$27977$6Dw7t
          g$variables$27978$6Dw7t
          g$variables*$27979$6Dw7t
          g$generators$27980$6Dw7t
          g$body-generator$27981$6Dw7t)
        (case-lambda
          ((g$continuator$27982$6Dw7t)
           (g$make-recursive*-library-bind$27928$6Dw7t
             g$name$27977$6Dw7t
             g$variables$27978$6Dw7t
             g$variables*$27979$6Dw7t
             (g$map$23581$6Dw7t
               (case-lambda
                 ((g$generator$27983$6Dw7t)
                  (case-lambda
                    ((g$continuation-variable$27984$6Dw7t)
                     (g$generator$27983$6Dw7t
                       (g$variable-continuator$27909$6Dw7t
                         g$continuation-variable$27984$6Dw7t))))))
               g$generators$27980$6Dw7t)
             (g$body-generator$27981$6Dw7t
               (g$reified-continuator$27911$6Dw7t
                 g$continuator$27982$6Dw7t))))))))
   (g$cps/generate-sequence$27901$6Dw7t
     g$cps/generate-sequence$28166$6Dw7t
     (case-lambda
       ((g$generators$27985$6Dw7t)
        (case-lambda
          ((g$continuator$27986$6Dw7t)
           ((letrec ((g$recur$27987$6Dw7t
                       (case-lambda
                         ((g$generators$27988$6Dw7t)
                          ((car g$generators$27988$6Dw7t)
                           ((case-lambda
                              ((g$generators$27989$6Dw7t)
                               (if (pair? g$generators$27989$6Dw7t)
                                 (g$effect-continuator$27907$6Dw7t
                                   (case-lambda
                                     (()
                                      (g$recur$27987$6Dw7t
                                        g$generators$27989$6Dw7t))))
                                 g$continuator$27986$6Dw7t)))
                            (cdr g$generators$27988$6Dw7t)))))))
              g$recur$27987$6Dw7t)
            g$generators$27985$6Dw7t))))))
   (g$cps/generate-assignment$27902$6Dw7t
     g$cps/generate-assignment$28167$6Dw7t
     (case-lambda
       ((g$location$27990$6Dw7t g$expression-generator$27991$6Dw7t)
        (case-lambda
          ((g$continuator$27992$6Dw7t)
           (g$expression-generator$27991$6Dw7t
             (g$operand-continuator$27906$6Dw7t
               (case-lambda
                 ((g$operand$27993$6Dw7t)
                  (g$make-assignment$27934$6Dw7t
                    g$location$27990$6Dw7t
                    g$operand$27993$6Dw7t
                    (g$continue-with-operand$27912$6Dw7t
                      g$continuator$27992$6Dw7t
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$27903$6Dw7t
     g$cps/generate-declaration$28168$6Dw7t
     (case-lambda
       ((g$location$27994$6Dw7t g$expression-generator$27995$6Dw7t)
        (case-lambda
          ((g$continuator$27996$6Dw7t)
           (g$expression-generator$27995$6Dw7t
             (g$operand-continuator$27906$6Dw7t
               (case-lambda
                 ((g$operand$27997$6Dw7t)
                  (g$make-declaration$27935$6Dw7t
                    g$location$27994$6Dw7t
                    g$operand$27997$6Dw7t
                    (g$continue-with-operand$27912$6Dw7t
                      g$continuator$27996$6Dw7t
                      '(cps-void))))))))))))
   (g$cps/generate-combination$27904$6Dw7t
     g$cps/generate-combination$28169$6Dw7t
     (case-lambda
       ((g$operator-generator$27998$6Dw7t
          g$operand-generators$27999$6Dw7t)
        (g$cps/generate-subproblems$27905$6Dw7t
          (g$reverse$24043$6Dw7t
            (cons
              g$operator-generator$27998$6Dw7t
              g$operand-generators$27999$6Dw7t))
          (case-lambda
            ((g$operands$28000$6Dw7t g$continuator$28001$6Dw7t)
             (g$make-combination$27929$6Dw7t
               (car g$operands$28000$6Dw7t)
               (g$reify-continuation$27913$6Dw7t
                 g$continuator$28001$6Dw7t)
               (cdr g$operands$28000$6Dw7t))))))))
   (g$cps/generate-subproblems$27905$6Dw7t
     g$cps/generate-subproblems$28170$6Dw7t
     (case-lambda
       ((g$generators$28002$6Dw7t g$combiner$28003$6Dw7t)
        (case-lambda
          ((g$continuator$28004$6Dw7t)
           ((letrec ((g$recur$28005$6Dw7t
                       (case-lambda
                         ((g$generators$28006$6Dw7t
                            g$operands$28007$6Dw7t)
                          (if (pair? g$generators$28006$6Dw7t)
                            ((car g$generators$28006$6Dw7t)
                             ((case-lambda
                                ((g$generators$28008$6Dw7t)
                                 (g$operand-continuator$27906$6Dw7t
                                   (case-lambda
                                     ((g$operand$28009$6Dw7t)
                                      (g$recur$28005$6Dw7t
                                        g$generators$28008$6Dw7t
                                        (cons
                                          g$operand$28009$6Dw7t
                                          g$operands$28007$6Dw7t)))))))
                              (cdr g$generators$28006$6Dw7t)))
                            (g$combiner$28003$6Dw7t
                              g$operands$28007$6Dw7t
                              g$continuator$28004$6Dw7t))))))
              g$recur$28005$6Dw7t)
            g$generators$28002$6Dw7t
            '()))))))
   (g$operand-continuator$27906$6Dw7t
     g$operand-continuator$28171$6Dw7t
     (case-lambda
       ((g$generator$28010$6Dw7t)
        (case-lambda
          ((g$if-operand$28011$6Dw7t
             g$if-effect$28012$6Dw7t
             g$if-conditional$28013$6Dw7t
             g$if-variable$28014$6Dw7t
             g$if-inline$28015$6Dw7t)
           (begin
             g$if-effect$28012$6Dw7t
             g$if-conditional$28013$6Dw7t
             g$if-variable$28014$6Dw7t
             g$if-inline$28015$6Dw7t
             (g$if-operand$28011$6Dw7t g$generator$28010$6Dw7t)))))))
   (g$effect-continuator$27907$6Dw7t
     g$effect-continuator$28172$6Dw7t
     (case-lambda
       ((g$generator$28016$6Dw7t)
        (case-lambda
          ((g$if-operand$28017$6Dw7t
             g$if-effect$28018$6Dw7t
             g$if-conditional$28019$6Dw7t
             g$if-variable$28020$6Dw7t
             g$if-inline$28021$6Dw7t)
           (begin
             g$if-operand$28017$6Dw7t
             g$if-conditional$28019$6Dw7t
             g$if-variable$28020$6Dw7t
             g$if-inline$28021$6Dw7t
             (g$if-effect$28018$6Dw7t g$generator$28016$6Dw7t)))))))
   (g$conditional-continuator$27908$6Dw7t
     g$conditional-continuator$28173$6Dw7t
     (case-lambda
       ((g$generator$28022$6Dw7t)
        (case-lambda
          ((g$if-operand$28023$6Dw7t
             g$if-effect$28024$6Dw7t
             g$if-conditional$28025$6Dw7t
             g$if-variable$28026$6Dw7t
             g$if-inline$28027$6Dw7t)
           (begin
             g$if-operand$28023$6Dw7t
             g$if-effect$28024$6Dw7t
             g$if-variable$28026$6Dw7t
             g$if-inline$28027$6Dw7t
             (g$if-conditional$28025$6Dw7t
               g$generator$28022$6Dw7t)))))))
   (g$variable-continuator$27909$6Dw7t
     g$variable-continuator$28174$6Dw7t
     (case-lambda
       ((g$variable$28028$6Dw7t)
        (case-lambda
          ((g$if-operand$28029$6Dw7t
             g$if-effect$28030$6Dw7t
             g$if-conditional$28031$6Dw7t
             g$if-variable$28032$6Dw7t
             g$if-inline$28033$6Dw7t)
           (begin
             g$if-operand$28029$6Dw7t
             g$if-effect$28030$6Dw7t
             g$if-variable$28032$6Dw7t
             g$if-inline$28033$6Dw7t
             (g$if-variable$28032$6Dw7t g$variable$28028$6Dw7t)))))))
   (g$inline-continuator$27910$6Dw7t
     g$inline-continuator$28175$6Dw7t
     (case-lambda
       ((g$continuation$28034$6Dw7t)
        (case-lambda
          ((g$if-operand$28035$6Dw7t
             g$if-effect$28036$6Dw7t
             g$if-conditional$28037$6Dw7t
             g$if-variable$28038$6Dw7t
             g$if-inline$28039$6Dw7t)
           (begin
             g$if-operand$28035$6Dw7t
             g$if-effect$28036$6Dw7t
             g$if-conditional$28037$6Dw7t
             g$if-variable$28038$6Dw7t
             (g$if-inline$28039$6Dw7t g$continuation$28034$6Dw7t)))))))
   (g$reified-continuator$27911$6Dw7t
     g$reified-continuator$28176$6Dw7t
     (case-lambda
       ((g$continuator$28040$6Dw7t)
        (case-lambda
          ((g$if-operand$28041$6Dw7t
             g$if-effect$28042$6Dw7t
             g$if-conditional$28043$6Dw7t
             g$if-variable$28044$6Dw7t
             g$if-inline$28045$6Dw7t)
           (begin
             g$if-operand$28041$6Dw7t
             g$if-effect$28042$6Dw7t
             g$if-conditional$28043$6Dw7t
             (g$reify-continuation*$27914$6Dw7t
               g$continuator$28040$6Dw7t
               g$if-variable$28044$6Dw7t
               g$if-inline$28045$6Dw7t)))))))
   (g$continue-with-operand$27912$6Dw7t
     g$continue-with-operand$28177$6Dw7t
     (case-lambda
       ((g$continuator$28046$6Dw7t g$operand$28047$6Dw7t)
        (g$continuator$28046$6Dw7t
          (case-lambda
            ((g$generator$28048$6Dw7t)
             (g$generator$28048$6Dw7t g$operand$28047$6Dw7t)))
          (case-lambda
            ((g$generator$28049$6Dw7t) (g$generator$28049$6Dw7t)))
          (case-lambda
            ((g$generator$28050$6Dw7t)
             (g$generator$28050$6Dw7t
               (g$make-truth-test$27936$6Dw7t g$operand$28047$6Dw7t))))
          (case-lambda
            ((g$continuation-variable$28051$6Dw7t)
             (g$make-return$27930$6Dw7t
               (g$make-reference$27922$6Dw7t
                 g$continuation-variable$28051$6Dw7t)
               (list g$operand$28047$6Dw7t))))
          (case-lambda
            ((g$continuation-abstraction$28052$6Dw7t)
             (g$make-return$27930$6Dw7t
               g$continuation-abstraction$28052$6Dw7t
               (list g$operand$28047$6Dw7t))))))))
   (g$reify-continuation$27913$6Dw7t
     g$reify-continuation$28178$6Dw7t
     (case-lambda
       ((g$continuator$28053$6Dw7t)
        (g$continuator$28053$6Dw7t
          g$operand-continuation-reifier$27916$6Dw7t
          g$effect-continuation-reifier$27918$6Dw7t
          g$conditional-continuation-reifier$27920$6Dw7t
          (case-lambda
            ((g$variable$28054$6Dw7t)
             (g$make-reference$27922$6Dw7t g$variable$28054$6Dw7t)))
          (case-lambda
            ((g$continuation$28055$6Dw7t)
             g$continuation$28055$6Dw7t))))))
   (g$reify-continuation*$27914$6Dw7t
     g$reify-continuation*$28179$6Dw7t
     (case-lambda
       ((g$continuator$28056$6Dw7t
          g$if-variable$28057$6Dw7t
          g$if-inline$28058$6Dw7t)
        (g$continuator$28056$6Dw7t
          (g$operand-continuation-reifier*$27915$6Dw7t
            g$if-inline$28058$6Dw7t)
          (g$effect-continuation-reifier*$27917$6Dw7t
            g$if-inline$28058$6Dw7t)
          (g$conditional-continuation-reifier*$27919$6Dw7t
            g$if-inline$28058$6Dw7t)
          g$if-variable$28057$6Dw7t
          g$if-inline$28058$6Dw7t))))
   (g$operand-continuation-reifier*$27915$6Dw7t
     g$operand-continuation-reifier*$28180$6Dw7t
     (case-lambda
       ((g$receiver$28059$6Dw7t)
        (case-lambda
          ((g$generator$28060$6Dw7t)
           (g$receiver$28059$6Dw7t
             ((case-lambda
                ((g$variable$28061$6Dw7t)
                 (g$make-continuation-abstraction$27925$6Dw7t
                   (list g$variable$28061$6Dw7t)
                   (g$generator$28060$6Dw7t
                     (g$make-reference$27922$6Dw7t
                       g$variable$28061$6Dw7t)))))
              (g$generate-variable$27937$6Dw7t 'V))))))))
   (g$operand-continuation-reifier$27916$6Dw7t
     g$operand-continuation-reifier$28181$6Dw7t
     (g$operand-continuation-reifier*$27915$6Dw7t values))
   (g$effect-continuation-reifier*$27917$6Dw7t
     g$effect-continuation-reifier*$28182$6Dw7t
     (case-lambda
       ((g$receiver$28062$6Dw7t)
        (case-lambda
          ((g$generator$28063$6Dw7t)
           (g$receiver$28062$6Dw7t
             ((case-lambda
                ((g$variable$28064$6Dw7t)
                 (g$make-continuation-abstraction$27925$6Dw7t
                   g$variable$28064$6Dw7t
                   (g$generator$28063$6Dw7t))))
              (g$generate-variable$27937$6Dw7t 'IGNORE))))))))
   (g$effect-continuation-reifier$27918$6Dw7t
     g$effect-continuation-reifier$28183$6Dw7t
     (g$effect-continuation-reifier*$27917$6Dw7t values))
   (g$conditional-continuation-reifier*$27919$6Dw7t
     g$conditional-continuation-reifier*$28184$6Dw7t
     (case-lambda
       ((g$receiver$28065$6Dw7t)
        (case-lambda
          ((g$generator$28066$6Dw7t)
           (g$receiver$28065$6Dw7t
             ((case-lambda
                ((g$variable$28067$6Dw7t)
                 (g$make-continuation-abstraction$27925$6Dw7t
                   (list g$variable$28067$6Dw7t)
                   (g$generator$28066$6Dw7t
                     (g$make-truth-test$27936$6Dw7t
                       (g$make-reference$27922$6Dw7t
                         g$variable$28067$6Dw7t))))))
              (g$generate-variable$27937$6Dw7t 'T))))))))
   (g$conditional-continuation-reifier$27920$6Dw7t
     g$conditional-continuation-reifier$28185$6Dw7t
     (g$conditional-continuation-reifier*$27919$6Dw7t values))
   (g$make-literal$27921$6Dw7t
     g$make-literal$28186$6Dw7t
     (case-lambda
       ((g$datum$28068$6Dw7t) (list 'quote g$datum$28068$6Dw7t))))
   (g$make-reference$27922$6Dw7t
     g$make-reference$28187$6Dw7t
     (case-lambda ((g$variable$28069$6Dw7t) g$variable$28069$6Dw7t)))
   (g$make-user-abstraction$27923$6Dw7t
     g$make-user-abstraction$28188$6Dw7t
     (case-lambda
       ((g$bvl$28070$6Dw7t g$body-constructor$28071$6Dw7t)
        ((case-lambda
           ((g$continuation$28072$6Dw7t)
            (list
              'case-lambda
              (list
                (cons g$continuation$28072$6Dw7t g$bvl$28070$6Dw7t)
                (g$body-constructor$28071$6Dw7t
                  g$continuation$28072$6Dw7t)))))
         (g$generate-variable$27937$6Dw7t 'C)))))
   (g$make-user-abstractions$27924$6Dw7t
     g$make-user-abstractions$28189$6Dw7t
     (case-lambda
       ((g$bvls$28073$6Dw7t g$body-constructors$28074$6Dw7t)
        ((case-lambda
           ((g$continuation$28075$6Dw7t)
            (cons
              'case-lambda
              (g$map$23581$6Dw7t
                (case-lambda
                  ((g$bvl$28076$6Dw7t g$body-constructor$28077$6Dw7t)
                   (list
                     (cons g$continuation$28075$6Dw7t g$bvl$28076$6Dw7t)
                     (g$body-constructor$28077$6Dw7t
                       g$continuation$28075$6Dw7t))))
                g$bvls$28073$6Dw7t
                g$body-constructors$28074$6Dw7t))))
         (g$generate-variable$27937$6Dw7t 'C)))))
   (g$make-continuation-abstraction$27925$6Dw7t
     g$make-continuation-abstraction$28190$6Dw7t
     (case-lambda
       ((g$bvl$28078$6Dw7t g$body$28079$6Dw7t)
        (list
          'case-lambda
          (list g$bvl$28078$6Dw7t g$body$28079$6Dw7t)))))
   (g$make-recursive-bind$27926$6Dw7t
     g$make-recursive-bind$28191$6Dw7t
     (case-lambda
       ((g$variables$28080$6Dw7t
          g$constructors$28081$6Dw7t
          g$body$28082$6Dw7t)
        (list
          'letrec
          (g$map$23581$6Dw7t
            (case-lambda
              ((g$variable$28083$6Dw7t g$constructor$28084$6Dw7t)
               (list
                 g$variable$28083$6Dw7t
                 (list
                   (g$make-user-abstraction$27923$6Dw7t
                     '()
                     g$constructor$28084$6Dw7t)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$28083$6Dw7t))))))
            g$variables$28080$6Dw7t
            g$constructors$28081$6Dw7t)
          g$body$28082$6Dw7t))))
   (g$make-recursive*-bind$27927$6Dw7t
     g$make-recursive*-bind$28192$6Dw7t
     (case-lambda
       ((g$variables$28085$6Dw7t
          g$constructors$28086$6Dw7t
          g$body$28087$6Dw7t)
        (list
          'letrec*
          (g$map$23581$6Dw7t
            (case-lambda
              ((g$variable$28088$6Dw7t g$constructor$28089$6Dw7t)
               (list
                 g$variable$28088$6Dw7t
                 (list
                   (g$make-user-abstraction$27923$6Dw7t
                     '()
                     g$constructor$28089$6Dw7t)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$28088$6Dw7t))))))
            g$variables$28085$6Dw7t
            g$constructors$28086$6Dw7t)
          g$body$28087$6Dw7t))))
   (g$make-recursive*-library-bind$27928$6Dw7t
     g$make-recursive*-library-bind$28193$6Dw7t
     (case-lambda
       ((g$name$28090$6Dw7t
          g$variables$28091$6Dw7t
          g$variables*$28092$6Dw7t
          g$constructors$28093$6Dw7t
          g$body$28094$6Dw7t)
        (list
          'library-letrec*
          g$name$28090$6Dw7t
          (g$map$23581$6Dw7t
            (case-lambda
              ((g$variable$28095$6Dw7t
                 g$variable*$28096$6Dw7t
                 g$constructor$28097$6Dw7t)
               (list
                 g$variable$28095$6Dw7t
                 g$variable*$28096$6Dw7t
                 (list
                   (g$make-user-abstraction$27923$6Dw7t
                     '()
                     g$constructor$28097$6Dw7t)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$28095$6Dw7t))))))
            g$variables$28091$6Dw7t
            g$variables*$28092$6Dw7t
            g$constructors$28093$6Dw7t)
          g$body$28094$6Dw7t))))
   (g$make-combination$27929$6Dw7t
     g$make-combination$28194$6Dw7t
     (case-lambda
       ((g$operator$28098$6Dw7t
          g$continuation$28099$6Dw7t
          g$operands$28100$6Dw7t)
        (cons
          g$operator$28098$6Dw7t
          (cons g$continuation$28099$6Dw7t g$operands$28100$6Dw7t)))))
   (g$make-return$27930$6Dw7t
     g$make-return$28195$6Dw7t
     (case-lambda
       ((g$continuation$28101$6Dw7t g$operands$28102$6Dw7t)
        (cons g$continuation$28101$6Dw7t g$operands$28102$6Dw7t))))
   (g$make-conditional$27931$6Dw7t
     g$make-conditional$28196$6Dw7t
     (case-lambda
       ((g$condition$28103$6Dw7t
          g$consequent$28104$6Dw7t
          g$alternative$28105$6Dw7t)
        (list
          'if
          g$condition$28103$6Dw7t
          g$consequent$28104$6Dw7t
          g$alternative$28105$6Dw7t))))
   (g$make-conditional-join$27932$6Dw7t
     g$make-conditional-join$28197$6Dw7t
     (case-lambda
       ((g$continuation$28106$6Dw7t g$constructor$28107$6Dw7t)
        ((case-lambda
           ((g$variable$28108$6Dw7t)
            (g$make-let$27933$6Dw7t
              (list g$variable$28108$6Dw7t)
              (list g$continuation$28106$6Dw7t)
              (g$constructor$28107$6Dw7t g$variable$28108$6Dw7t))))
         (g$generate-variable$27937$6Dw7t 'J)))))
   (g$make-let$27933$6Dw7t
     g$make-let$28198$6Dw7t
     (case-lambda
       ((g$variables$28109$6Dw7t
          g$expressions$28110$6Dw7t
          g$body$28111$6Dw7t)
        (cons
          (list
            'case-lambda
            (list g$variables$28109$6Dw7t g$body$28111$6Dw7t))
          g$expressions$28110$6Dw7t))))
   (g$make-assignment$27934$6Dw7t
     g$make-assignment$28199$6Dw7t
     (case-lambda
       ((g$location$28112$6Dw7t
          g$operand$28113$6Dw7t
          g$expression$28114$6Dw7t)
        (list
          'begin
          (list 'set! g$location$28112$6Dw7t g$operand$28113$6Dw7t)
          g$expression$28114$6Dw7t))))
   (g$make-declaration$27935$6Dw7t
     g$make-declaration$28200$6Dw7t
     (case-lambda
       ((g$location$28115$6Dw7t
          g$operand$28116$6Dw7t
          g$expression$28117$6Dw7t)
        (list
          'begin
          (list 'define g$location$28115$6Dw7t g$operand$28116$6Dw7t)
          g$expression$28117$6Dw7t))))
   (g$make-truth-test$27936$6Dw7t
     g$make-truth-test$28201$6Dw7t
     (case-lambda ((g$operand$28118$6Dw7t) g$operand$28118$6Dw7t)))
   (g$generate-variable$27937$6Dw7t
     g$generate-variable$28202$6Dw7t
     (case-lambda ((g$name$28119$6Dw7t) (gensym g$name$28119$6Dw7t))))
   (g$parse$27938$6Dw7t
     g$parse$28203$6Dw7t
     (case-lambda
       ((g$x$28120$6Dw7t)
        (if (pair? g$x$28120$6Dw7t)
          ((case-lambda
             ((g$t$28121$6Dw7t)
              (if (eqv? g$t$28121$6Dw7t 'quote)
                (g$cps/generate-literal$27893$6Dw7t
                  (g$cadr$24045$6Dw7t g$x$28120$6Dw7t))
                (if (eqv? g$t$28121$6Dw7t 'if)
                  (g$cps/generate-conditional$27897$6Dw7t
                    (g$parse$27938$6Dw7t
                      (g$cadr$24045$6Dw7t g$x$28120$6Dw7t))
                    (g$parse$27938$6Dw7t
                      (g$caddr$24051$6Dw7t g$x$28120$6Dw7t))
                    (g$parse$27938$6Dw7t
                      (g$cadddr$24063$6Dw7t g$x$28120$6Dw7t)))
                  (if (eqv? g$t$28121$6Dw7t 'case-lambda)
                    ((case-lambda
                       ((g$d$28122$6Dw7t)
                        (g$cps/generate-abstractions$27895$6Dw7t
                          (g$map$23581$6Dw7t car g$d$28122$6Dw7t)
                          (g$map$23581$6Dw7t
                            (case-lambda
                              ((g$e$28123$6Dw7t)
                               (g$cps/generate-sequence$27901$6Dw7t
                                 (g$map$23581$6Dw7t
                                   g$parse$27938$6Dw7t
                                   (cdr g$e$28123$6Dw7t)))))
                            g$d$28122$6Dw7t))))
                     (cdr g$x$28120$6Dw7t))
                    (if (eqv? g$t$28121$6Dw7t 'letrec)
                      ((case-lambda
                         ((g$bindings$28124$6Dw7t g$body*$28125$6Dw7t)
                          ((case-lambda
                             ((g$lhs*$28126$6Dw7t g$rhs*$28127$6Dw7t)
                              ((case-lambda
                                 ((g$t*$28128$6Dw7t g$tmps$28129$6Dw7t)
                                  ((case-lambda
                                     ((g$s*$28130$6Dw7t)
                                      (g$parse$27938$6Dw7t
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$28126$6Dw7t
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$28128$6Dw7t
                                                    (g$append$23587$6Dw7t
                                                      g$s*$28130$6Dw7t
                                                      g$body*$28125$6Dw7t)))
                                                g$rhs*$28127$6Dw7t)))
                                          g$tmps$28129$6Dw7t))))
                                   (g$map$23581$6Dw7t
                                     (case-lambda
                                       ((g$i$28131$6Dw7t
                                          g$t$28132$6Dw7t)
                                        (list
                                          'set!
                                          g$i$28131$6Dw7t
                                          g$t$28132$6Dw7t)))
                                     g$lhs*$28126$6Dw7t
                                     g$t*$28128$6Dw7t))))
                               (g$map$23581$6Dw7t
                                 gensym
                                 g$lhs*$28126$6Dw7t)
                               (g$map$23581$6Dw7t
                                 (case-lambda
                                   ((g$x$28133$6Dw7t) 'uninitialized))
                                 g$lhs*$28126$6Dw7t))))
                           (g$map$23581$6Dw7t
                             car
                             g$bindings$28124$6Dw7t)
                           (g$map$23581$6Dw7t
                             g$cadr$24045$6Dw7t
                             g$bindings$28124$6Dw7t))))
                       (g$cadr$24045$6Dw7t g$x$28120$6Dw7t)
                       (g$cddr$24047$6Dw7t g$x$28120$6Dw7t))
                      (if (eqv? g$t$28121$6Dw7t 'letrec*)
                        ((case-lambda
                           ((g$bindings$28134$6Dw7t g$body*$28135$6Dw7t)
                            ((case-lambda
                               ((g$lhs*$28136$6Dw7t g$rhs*$28137$6Dw7t)
                                (g$cps/generate-recursive*-bind$27899$6Dw7t
                                  g$lhs*$28136$6Dw7t
                                  (g$map$23581$6Dw7t
                                    g$parse$27938$6Dw7t
                                    g$rhs*$28137$6Dw7t)
                                  (g$parse$27938$6Dw7t
                                    (cons
                                      'begin
                                      g$body*$28135$6Dw7t)))))
                             (g$map$23581$6Dw7t
                               car
                               g$bindings$28134$6Dw7t)
                             (g$map$23581$6Dw7t
                               g$cadr$24045$6Dw7t
                               g$bindings$28134$6Dw7t))))
                         (g$cadr$24045$6Dw7t g$x$28120$6Dw7t)
                         (g$cddr$24047$6Dw7t g$x$28120$6Dw7t))
                        (if (eqv? g$t$28121$6Dw7t 'library-letrec*)
                          ((case-lambda
                             ((g$name$28138$6Dw7t g$x$28139$6Dw7t)
                              ((case-lambda
                                 ((g$bindings$28140$6Dw7t
                                    g$body*$28141$6Dw7t)
                                  ((case-lambda
                                     ((g$lhs*$28142$6Dw7t
                                        g$lhs**$28143$6Dw7t
                                        g$rhs*$28144$6Dw7t)
                                      (g$cps/generate-recursive*-library-bind$27900$6Dw7t
                                        g$name$28138$6Dw7t
                                        g$lhs*$28142$6Dw7t
                                        g$lhs**$28143$6Dw7t
                                        (g$map$23581$6Dw7t
                                          g$parse$27938$6Dw7t
                                          g$rhs*$28144$6Dw7t)
                                        (g$parse$27938$6Dw7t
                                          (cons
                                            'begin
                                            g$body*$28141$6Dw7t)))))
                                   (g$map$23581$6Dw7t
                                     car
                                     g$bindings$28140$6Dw7t)
                                   (g$map$23581$6Dw7t
                                     g$cadr$24045$6Dw7t
                                     g$bindings$28140$6Dw7t)
                                   (g$map$23581$6Dw7t
                                     g$caddr$24051$6Dw7t
                                     g$bindings$28140$6Dw7t))))
                               (g$cadr$24045$6Dw7t g$x$28139$6Dw7t)
                               (g$cddr$24047$6Dw7t g$x$28139$6Dw7t))))
                           (g$cadr$24045$6Dw7t g$x$28120$6Dw7t)
                           (cdr g$x$28120$6Dw7t))
                          (if (eqv? g$t$28121$6Dw7t 'begin)
                            (g$cps/generate-sequence$27901$6Dw7t
                              (g$map$23581$6Dw7t
                                g$parse$27938$6Dw7t
                                (cdr g$x$28120$6Dw7t)))
                            (if (eqv? g$t$28121$6Dw7t 'set!)
                              (g$cps/generate-assignment$27902$6Dw7t
                                (g$cadr$24045$6Dw7t g$x$28120$6Dw7t)
                                (g$parse$27938$6Dw7t
                                  (g$caddr$24051$6Dw7t
                                    g$x$28120$6Dw7t)))
                              (if (eqv? g$t$28121$6Dw7t 'define)
                                (g$cps/generate-declaration$27903$6Dw7t
                                  (g$cadr$24045$6Dw7t g$x$28120$6Dw7t)
                                  (g$parse$27938$6Dw7t
                                    (g$caddr$24051$6Dw7t
                                      g$x$28120$6Dw7t)))
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (if (g$list?$23576$6Dw7t
                                            g$x$28120$6Dw7t)
                                        (g$cps/generate-combination$27904$6Dw7t
                                          (g$parse$27938$6Dw7t
                                            (car g$x$28120$6Dw7t))
                                          (g$map$23581$6Dw7t
                                            g$parse$27938$6Dw7t
                                            (cdr g$x$28120$6Dw7t)))
                                        (g$error$20491$6Dw7t
                                          'rewrite
                                          '"invalid form ~s ~s"
                                          g$x$28120$6Dw7t
                                          (g$list?$23576$6Dw7t
                                            g$x$28120$6Dw7t))))))))))))))))))
           (car g$x$28120$6Dw7t))
          (if (g$symbol?$24007$6Dw7t g$x$28120$6Dw7t)
            (g$cps/generate-reference$27892$6Dw7t g$x$28120$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$cps/generate-literal$27893$6Dw7t
                    g$x$28120$6Dw7t))))))))))
   (g$starts-with?$27939$6Dw7t
     g$starts-with?$28204$6Dw7t
     (case-lambda
       ((g$str$28145$6Dw7t g$sub$28146$6Dw7t)
        (clr-call-internal
          'system.string
          'startswith
          g$str$28145$6Dw7t
          g$sub$28146$6Dw7t))))
   (g$ends-with?$27940$6Dw7t
     g$ends-with?$28205$6Dw7t
     (case-lambda
       ((g$str$28147$6Dw7t g$sub$28148$6Dw7t)
        (clr-call-internal
          'system.string
          'endswith
          g$str$28147$6Dw7t
          g$sub$28148$6Dw7t))))
   (g$clr-generator?$27941$6Dw7t
     g$clr-generator?$28206$6Dw7t
     (case-lambda
       ((g$o$28149$6Dw7t)
        (if (g$symbol?$24007$6Dw7t g$o$28149$6Dw7t)
          (begin
            '#f
            ((case-lambda
               ((g$o$28150$6Dw7t)
                (if (g$starts-with?$27939$6Dw7t g$o$28150$6Dw7t '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$27940$6Dw7t
                      g$o$28150$6Dw7t
                      '"-internal"))
                  '#f)))
             (g$symbol->string$24027$6Dw7t g$o$28149$6Dw7t)))
          '#f))))
   (g$fix-primitives$27942$6Dw7t
     g$fix-primitives$28207$6Dw7t
     (case-lambda
       ((g$e$28151$6Dw7t)
        (if (if (pair? g$e$28151$6Dw7t)
              (begin '#f (g$list?$23576$6Dw7t g$e$28151$6Dw7t))
              '#f)
          ((case-lambda
             ((g$o$28152$6Dw7t)
              (if (eq? g$o$28152$6Dw7t 'quote)
                g$e$28151$6Dw7t
                (if (begin
                      '#f
                      (g$clr-generator?$27941$6Dw7t g$o$28152$6Dw7t))
                  (if (pair? (cdr g$e$28151$6Dw7t))
                    (list
                      (g$fix-primitives$27942$6Dw7t
                        (g$cadr$24045$6Dw7t g$e$28151$6Dw7t))
                      (cons
                        g$o$28152$6Dw7t
                        (g$map$23581$6Dw7t
                          g$fix-primitives$27942$6Dw7t
                          (g$cddr$24047$6Dw7t g$e$28151$6Dw7t))))
                    g$e$28151$6Dw7t)
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (cons
                          (g$fix-primitives$27942$6Dw7t g$o$28152$6Dw7t)
                          (g$map$23581$6Dw7t
                            g$fix-primitives$27942$6Dw7t
                            (cdr g$e$28151$6Dw7t)))))))))))
           (car g$e$28151$6Dw7t))
          g$e$28151$6Dw7t))))
   (g$parse->cps$27943$6Dw7t
     g$parse->cps$28208$6Dw7t
     (case-lambda
       ((g$e$28153$6Dw7t g$var$28154$6Dw7t)
        ((g$parse$27938$6Dw7t g$e$28153$6Dw7t)
         (g$variable-continuator$27909$6Dw7t g$var$28154$6Dw7t)))))
   (g$convert->cps$27944$6Dw7t
     g$convert->cps$28209$6Dw7t
     (case-lambda
       ((g$e$28155$6Dw7t g$var$28156$6Dw7t)
        (g$fix-primitives$27942$6Dw7t
          (g$parse->cps$27943$6Dw7t
            g$e$28155$6Dw7t
            g$var$28156$6Dw7t))))))
  (void))

(library-letrec* (ironscheme constant-fold)
  ((g$allow-constant-fold?$28210$6Dw7t
     g$allow-constant-fold?$28225$6Dw7t
     (case-lambda
       ((g$proc$28215$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'get_AllowConstantFold
          g$proc$28215$6Dw7t))))
   (g$set-allow-constant-fold!$28211$6Dw7t
     g$set-allow-constant-fold!$28226$6Dw7t
     (case-lambda
       ((g$proc$28216$6Dw7t g$bool$28217$6Dw7t)
        (clr-call-internal
          'IronScheme.Runtime.ICallable
          'set_AllowConstantFold
          g$proc$28216$6Dw7t
          g$bool$28217$6Dw7t))))
   (g$enable-constant-fold$28212$6Dw7t
     g$enable-constant-fold$28227$6Dw7t
     (case-lambda
       (g$procs$28218$6Dw7t
        (g$for-each$23582$6Dw7t
          (case-lambda
            ((g$proc$28219$6Dw7t)
             (g$set-allow-constant-fold!$28211$6Dw7t
               g$proc$28219$6Dw7t
               '#t)))
          g$procs$28218$6Dw7t))))
   (g$proc-filter$28213$6Dw7t
     g$proc-filter$28228$6Dw7t
     (case-lambda
       ((g$b$28220$6Dw7t) (eq? 'procedure (cdr g$b$28220$6Dw7t)))))
   (g$enable-constant-fold/env$28214$6Dw7t
     g$enable-constant-fold/env$28229$6Dw7t
     (case-lambda
       (g$import-spec$28221$6Dw7t
        ((case-lambda
           ((g$env$28222$6Dw7t g$env*$28223$6Dw7t)
            ((case-lambda
               ((g$b$28224$6Dw7t)
                (apply
                  g$enable-constant-fold$28212$6Dw7t
                  (g$eval$33032$6Dw7t
                    (cons 'list g$b$28224$6Dw7t)
                    g$env*$28223$6Dw7t))))
             (g$map$23581$6Dw7t
               car
               (g$filter$23564$6Dw7t
                 g$proc-filter$28213$6Dw7t
                 (g$environment-bindings$33024$6Dw7t
                   g$env$28222$6Dw7t))))))
         (apply g$environment$33028$6Dw7t g$import-spec$28221$6Dw7t)
         (apply
           g$environment$33028$6Dw7t
           '(only (rnrs) list)
           g$import-spec$28221$6Dw7t))))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$28230$6Dw7t
     g$current-primitive-locations$28275$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda ((g$x$28236$6Dw7t) '#f))
       (case-lambda
         ((g$p$28237$6Dw7t)
          (begin
            (if (not (g$procedure?$24009$6Dw7t g$p$28237$6Dw7t))
              (g$assertion-error$33047$6Dw7t
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$28237$6Dw7t)))))
   (g$mutable?$28231$6Dw7t
     g$mutable?$28276$6Dw7t
     (case-lambda
       ((g$x$28238$6Dw7t)
        (letrec* ((g$simple?$28239$6Dw7t
                    (case-lambda
                      ((g$x$28240$6Dw7t)
                       ((case-lambda
                          ((g$t$28241$6Dw7t)
                           (if g$t$28241$6Dw7t
                             g$t$28241$6Dw7t
                             ((case-lambda
                                ((g$t$28242$6Dw7t)
                                 (if g$t$28242$6Dw7t
                                   g$t$28242$6Dw7t
                                   ((case-lambda
                                      ((g$t$28243$6Dw7t)
                                       (if g$t$28243$6Dw7t
                                         g$t$28243$6Dw7t
                                         ((case-lambda
                                            ((g$t$28244$6Dw7t)
                                             (if g$t$28244$6Dw7t
                                               g$t$28244$6Dw7t
                                               ((case-lambda
                                                  ((g$t$28245$6Dw7t)
                                                   (if g$t$28245$6Dw7t
                                                     g$t$28245$6Dw7t
                                                     ((case-lambda
                                                        ((g$t$28246$6Dw7t)
                                                         (if g$t$28246$6Dw7t
                                                           g$t$28246$6Dw7t
                                                           (begin
                                                             '#f
                                                             (g$number?$25047$6Dw7t
                                                               g$x$28240$6Dw7t)))))
                                                      (g$bytevector?$24006$6Dw7t
                                                        g$x$28240$6Dw7t)))))
                                                (g$string?$24003$6Dw7t
                                                  g$x$28240$6Dw7t)))))
                                          (g$boolean?$24008$6Dw7t
                                            g$x$28240$6Dw7t)))))
                                    (g$symbol?$24007$6Dw7t
                                      g$x$28240$6Dw7t)))))
                              (g$char?$24004$6Dw7t g$x$28240$6Dw7t)))))
                        (null? g$x$28240$6Dw7t))))))
          (not (g$simple?$28239$6Dw7t g$x$28238$6Dw7t))))))
   (g$rewriter$28232$6Dw7t
     g$rewriter$28277$6Dw7t
     (case-lambda
       ((g$quote-hack?$28247$6Dw7t)
        (letrec* ((g$f$28248$6Dw7t
                    (case-lambda
                      ((g$x$28249$6Dw7t)
                       (if (pair? g$x$28249$6Dw7t)
                         ((case-lambda
                            ((g$t$28250$6Dw7t)
                             (if (eqv? g$t$28250$6Dw7t 'quote)
                               (if (if g$quote-hack?$28247$6Dw7t
                                     (begin
                                       '#f
                                       (g$mutable?$28231$6Dw7t
                                         (g$cadr$24045$6Dw7t
                                           g$x$28249$6Dw7t)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$28251$6Dw7t)
                                     (begin
                                       (set-symbol-value!
                                         g$g$28251$6Dw7t
                                         (g$cadr$24045$6Dw7t
                                           g$x$28249$6Dw7t))
                                       g$g$28251$6Dw7t)))
                                  (gensym 'weak-temp))
                                 ((case-lambda
                                    (() (begin '#f g$x$28249$6Dw7t)))))
                               (if (eqv? g$t$28250$6Dw7t 'case-lambda)
                                 (cons
                                   'case-lambda
                                   (g$map$23581$6Dw7t
                                     (case-lambda
                                       ((g$x$28252$6Dw7t)
                                        (cons
                                          (car g$x$28252$6Dw7t)
                                          (g$map$23581$6Dw7t
                                            g$f$28248$6Dw7t
                                            (cdr g$x$28252$6Dw7t)))))
                                     (cdr g$x$28249$6Dw7t)))
                                 (if (eqv? g$t$28250$6Dw7t 'lambda)
                                   (g$cons*$23583$6Dw7t
                                     'lambda
                                     (g$cadr$24045$6Dw7t
                                       g$x$28249$6Dw7t)
                                     (g$map$23581$6Dw7t
                                       g$f$28248$6Dw7t
                                       (g$cddr$24047$6Dw7t
                                         g$x$28249$6Dw7t)))
                                   (if (eqv? g$t$28250$6Dw7t 'letrec)
                                     ((case-lambda
                                        ((g$bindings$28253$6Dw7t
                                           g$body*$28254$6Dw7t)
                                         ((case-lambda
                                            ((g$lhs*$28255$6Dw7t
                                               g$rhs*$28256$6Dw7t)
                                             (g$cons*$23583$6Dw7t
                                               'letrec
                                               (g$map$23581$6Dw7t
                                                 list
                                                 g$lhs*$28255$6Dw7t
                                                 (g$map$23581$6Dw7t
                                                   g$f$28248$6Dw7t
                                                   g$rhs*$28256$6Dw7t))
                                               (g$map$23581$6Dw7t
                                                 g$f$28248$6Dw7t
                                                 g$body*$28254$6Dw7t))))
                                          (g$map$23581$6Dw7t
                                            car
                                            g$bindings$28253$6Dw7t)
                                          (g$map$23581$6Dw7t
                                            g$cadr$24045$6Dw7t
                                            g$bindings$28253$6Dw7t))))
                                      (g$cadr$24045$6Dw7t
                                        g$x$28249$6Dw7t)
                                      (g$cddr$24047$6Dw7t
                                        g$x$28249$6Dw7t))
                                     (if (eqv? g$t$28250$6Dw7t 'letrec*)
                                       ((case-lambda
                                          ((g$bindings$28257$6Dw7t
                                             g$body*$28258$6Dw7t)
                                           ((case-lambda
                                              ((g$lhs*$28259$6Dw7t
                                                 g$rhs*$28260$6Dw7t)
                                               (g$cons*$23583$6Dw7t
                                                 'letrec*
                                                 (g$map$23581$6Dw7t
                                                   list
                                                   g$lhs*$28259$6Dw7t
                                                   (g$map$23581$6Dw7t
                                                     g$f$28248$6Dw7t
                                                     g$rhs*$28260$6Dw7t))
                                                 (g$map$23581$6Dw7t
                                                   g$f$28248$6Dw7t
                                                   g$body*$28258$6Dw7t))))
                                            (g$map$23581$6Dw7t
                                              car
                                              g$bindings$28257$6Dw7t)
                                            (g$map$23581$6Dw7t
                                              g$cadr$24045$6Dw7t
                                              g$bindings$28257$6Dw7t))))
                                        (g$cadr$24045$6Dw7t
                                          g$x$28249$6Dw7t)
                                        (g$cddr$24047$6Dw7t
                                          g$x$28249$6Dw7t))
                                       (if (eqv?
                                             g$t$28250$6Dw7t
                                             'library-letrec*)
                                         ((case-lambda
                                            ((g$name$28261$6Dw7t
                                               g$x$28262$6Dw7t)
                                             ((case-lambda
                                                ((g$bindings$28263$6Dw7t
                                                   g$body*$28264$6Dw7t)
                                                 ((case-lambda
                                                    ((g$lhs*$28265$6Dw7t
                                                       g$lhs**$28266$6Dw7t
                                                       g$rhs*$28267$6Dw7t)
                                                     (g$cons*$23583$6Dw7t
                                                       'library-letrec*
                                                       g$name$28261$6Dw7t
                                                       (g$map$23581$6Dw7t
                                                         list
                                                         g$lhs*$28265$6Dw7t
                                                         g$lhs**$28266$6Dw7t
                                                         (g$map$23581$6Dw7t
                                                           g$f$28248$6Dw7t
                                                           g$rhs*$28267$6Dw7t))
                                                       (g$map$23581$6Dw7t
                                                         g$f$28248$6Dw7t
                                                         g$body*$28264$6Dw7t))))
                                                  (g$map$23581$6Dw7t
                                                    car
                                                    g$bindings$28263$6Dw7t)
                                                  (g$map$23581$6Dw7t
                                                    g$cadr$24045$6Dw7t
                                                    g$bindings$28263$6Dw7t)
                                                  (g$map$23581$6Dw7t
                                                    g$caddr$24051$6Dw7t
                                                    g$bindings$28263$6Dw7t))))
                                              (g$cadr$24045$6Dw7t
                                                g$x$28262$6Dw7t)
                                              (g$cddr$24047$6Dw7t
                                                g$x$28262$6Dw7t))))
                                          (g$cadr$24045$6Dw7t
                                            g$x$28249$6Dw7t)
                                          (cdr g$x$28249$6Dw7t))
                                         (if (eqv?
                                               g$t$28250$6Dw7t
                                               'begin)
                                           (cons
                                             'begin
                                             (g$map$23581$6Dw7t
                                               g$f$28248$6Dw7t
                                               (cdr g$x$28249$6Dw7t)))
                                           (if (eqv?
                                                 g$t$28250$6Dw7t
                                                 'set!)
                                             (list
                                               'set!
                                               (g$cadr$24045$6Dw7t
                                                 g$x$28249$6Dw7t)
                                               (g$f$28248$6Dw7t
                                                 (g$caddr$24051$6Dw7t
                                                   g$x$28249$6Dw7t)))
                                             (if (eqv?
                                                   g$t$28250$6Dw7t
                                                   'primitive)
                                               ((case-lambda
                                                  ((g$op$28268$6Dw7t)
                                                   ((case-lambda
                                                      ((g$t$28269$6Dw7t)
                                                       (if g$t$28269$6Dw7t
                                                         ((case-lambda
                                                            ((g$loc$28270$6Dw7t)
                                                             g$loc$28270$6Dw7t))
                                                          g$t$28269$6Dw7t)
                                                         ((case-lambda
                                                            (()
                                                             (begin
                                                               '#f
                                                               g$op$28268$6Dw7t)))))))
                                                    ((g$current-primitive-locations$28230$6Dw7t)
                                                     g$op$28268$6Dw7t))))
                                                (g$cadr$24045$6Dw7t
                                                  g$x$28249$6Dw7t))
                                               (if (eqv?
                                                     g$t$28250$6Dw7t
                                                     'define)
                                                 g$x$28249$6Dw7t
                                                 ((case-lambda
                                                    (()
                                                     (begin
                                                       '#f
                                                       (if (g$list?$23576$6Dw7t
                                                             g$x$28249$6Dw7t)
                                                         (g$map$23581$6Dw7t
                                                           g$f$28248$6Dw7t
                                                           g$x$28249$6Dw7t)
                                                         (g$error$20491$6Dw7t
                                                           'rewrite
                                                           '"invalid form ~s ~s"
                                                           g$x$28249$6Dw7t
                                                           (g$list?$23576$6Dw7t
                                                             g$x$28249$6Dw7t)))))))))))))))))))
                          (car g$x$28249$6Dw7t))
                         ((case-lambda
                            (() (begin '#f g$x$28249$6Dw7t)))))))))
          g$f$28248$6Dw7t))))
   (g$expanded->core$28233$6Dw7t
     g$expanded->core$28278$6Dw7t
     (case-lambda
       ((g$x$28271$6Dw7t)
        ((g$rewriter$28232$6Dw7t '#t) g$x$28271$6Dw7t))))
   (g$compile-core-expr$28234$6Dw7t
     g$compile-core-expr$28279$6Dw7t
     (case-lambda
       ((g$x$28272$6Dw7t)
        ((g$rewriter$28232$6Dw7t '#f) g$x$28272$6Dw7t))))
   (g$compile-core-expr-to-port$28235$6Dw7t
     g$compile-core-expr-to-port$28280$6Dw7t
     (case-lambda
       ((g$x$28273$6Dw7t g$p$28274$6Dw7t)
        (g$pretty-print$27891$6Dw7t
          ((g$rewriter$28232$6Dw7t '#f) g$x$28273$6Dw7t)
          g$p$28274$6Dw7t)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$28281$6Dw7t
     g$make-collection$28490$6Dw7t
     (case-lambda
       (()
        ((case-lambda
           ((g$set$28344$6Dw7t)
            (letrec* ((g$set-cons$28345$6Dw7t
                        (case-lambda
                          ((g$x$28349$6Dw7t g$ls$28350$6Dw7t)
                           (if (g$memq$23569$6Dw7t
                                 g$x$28349$6Dw7t
                                 g$ls$28350$6Dw7t)
                             g$ls$28350$6Dw7t
                             ((case-lambda
                                (()
                                 (begin
                                   '#f
                                   (cons
                                     g$x$28349$6Dw7t
                                     g$ls$28350$6Dw7t))))))))))
              (case-lambda
                (() g$set$28344$6Dw7t)
                ((g$x$28346$6Dw7t)
                 (set! g$set$28344$6Dw7t
                   (g$set-cons$28345$6Dw7t
                     g$x$28346$6Dw7t
                     g$set$28344$6Dw7t)))
                ((g$x$28347$6Dw7t g$del?$28348$6Dw7t)
                 (if g$del?$28348$6Dw7t
                   (set! g$set$28344$6Dw7t
                     (g$remq$23592$6Dw7t
                       g$x$28347$6Dw7t
                       g$set$28344$6Dw7t))
                   (set! g$set$28344$6Dw7t
                     (g$set-cons$28345$6Dw7t
                       g$x$28347$6Dw7t
                       g$set$28344$6Dw7t))))))))
         '()))))
   (g$current-library-collection$28282$6Dw7t
     g$current-library-collection$28491$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (g$make-collection$28281$6Dw7t)
       (case-lambda
         ((g$x$28351$6Dw7t)
          (begin
            (if (not (g$procedure?$24009$6Dw7t g$x$28351$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                'current-library-collection
                '"not a procedure"
                g$x$28351$6Dw7t)
              (void))
            g$x$28351$6Dw7t)))))
   (g$9879$28283$6Dw7t
     g$9879$28492$6Dw7t
     (make-record-type-descriptor
       'library
       '#f
       'g$9882$6Dw7t
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$9881$28284$6Dw7t g$9881$28493$6Dw7t '#f)
   (g$9880$28285$6Dw7t
     g$9880$28494$6Dw7t
     (make-record-constructor-descriptor
       g$9879$28283$6Dw7t
       '#f
       g$9881$28284$6Dw7t))
   (g$library?$28288$6Dw7t
     g$library?$28495$6Dw7t
     (record-predicate g$9879$28283$6Dw7t))
   (g$make-library$28289$6Dw7t
     g$make-library$28496$6Dw7t
     (record-constructor g$9880$28285$6Dw7t))
   (g$library-id$28290$6Dw7t
     g$library-id$28497$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '0))
   (g$library-name$28291$6Dw7t
     g$library-name$28498$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '1))
   (g$library-version$28292$6Dw7t
     g$library-version$28499$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '2))
   (g$library-imp*$28293$6Dw7t
     g$library-imp*$28500$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '3))
   (g$library-vis*$28294$6Dw7t
     g$library-vis*$28501$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '4))
   (g$library-inv*$28295$6Dw7t
     g$library-inv*$28502$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '5))
   (g$library-subst$28296$6Dw7t
     g$library-subst$28503$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '6))
   (g$library-env$28297$6Dw7t
     g$library-env$28504$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '7))
   (g$library-visit-state$28298$6Dw7t
     g$library-visit-state$28505$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '8))
   (g$library-invoke-state$28299$6Dw7t
     g$library-invoke-state$28506$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '9))
   (g$library-visit-code$28300$6Dw7t
     g$library-visit-code$28507$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '10))
   (g$library-invoke-code$28301$6Dw7t
     g$library-invoke-code$28508$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '11))
   (g$library-visible?$28302$6Dw7t
     g$library-visible?$28509$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '12))
   (g$library-source-file-name$28303$6Dw7t
     g$library-source-file-name$28510$6Dw7t
     (record-accessor g$9879$28283$6Dw7t '13))
   (g$set-library-id!$28304$6Dw7t
     g$set-library-id!$28511$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '0))
   (g$set-library-name!$28305$6Dw7t
     g$set-library-name!$28512$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '1))
   (g$set-library-version!$28306$6Dw7t
     g$set-library-version!$28513$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '2))
   (g$set-library-imp*!$28307$6Dw7t
     g$set-library-imp*!$28514$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '3))
   (g$set-library-vis*!$28308$6Dw7t
     g$set-library-vis*!$28515$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '4))
   (g$set-library-inv*!$28309$6Dw7t
     g$set-library-inv*!$28516$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '5))
   (g$set-library-subst!$28310$6Dw7t
     g$set-library-subst!$28517$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '6))
   (g$set-library-env!$28311$6Dw7t
     g$set-library-env!$28518$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '7))
   (g$set-library-visit-state!$28312$6Dw7t
     g$set-library-visit-state!$28519$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '8))
   (g$set-library-invoke-state!$28313$6Dw7t
     g$set-library-invoke-state!$28520$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '9))
   (g$set-library-visit-code!$28314$6Dw7t
     g$set-library-visit-code!$28521$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '10))
   (g$set-library-invoke-code!$28315$6Dw7t
     g$set-library-invoke-code!$28522$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '11))
   (g$set-library-visible?!$28316$6Dw7t
     g$set-library-visible?!$28523$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '12))
   (g$set-library-source-file-name!$28317$6Dw7t
     g$set-library-source-file-name!$28524$6Dw7t
     (record-mutator g$9879$28283$6Dw7t '13))
   (g$rp$28318$6Dw7t
     g$rp$28525$6Dw7t
     (make-record-printer
       'library
       (case-lambda
         ((g$x$28352$6Dw7t g$p$28353$6Dw7t g$wr$28354$6Dw7t)
          (begin
            (if (not (g$library?$28288$6Dw7t g$x$28352$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                'record-type-printer
                '"not a library")
              (void))
            (display
              (g$format$27362$6Dw7t
                '"#<library ~s>"
                (if (null?
                      (g$library-version$28292$6Dw7t g$x$28352$6Dw7t))
                  (g$library-name$28291$6Dw7t g$x$28352$6Dw7t)
                  (g$append$23587$6Dw7t
                    (g$library-name$28291$6Dw7t g$x$28352$6Dw7t)
                    (list
                      (g$library-version$28292$6Dw7t
                        g$x$28352$6Dw7t)))))
              g$p$28353$6Dw7t))))))
   (g$find-dependencies$28319$6Dw7t
     g$find-dependencies$28526$6Dw7t
     (case-lambda
       ((g$ls$28355$6Dw7t)
        (if (null? g$ls$28355$6Dw7t)
          '()
          ((case-lambda
             (()
              (begin
                '#f
                (g$assertion-violation$20490$6Dw7t
                  'find-dependencies
                  '"cannot handle deps yet")))))))))
   (g$find-library-by$28320$6Dw7t
     g$find-library-by$28527$6Dw7t
     (case-lambda
       ((g$pred$28356$6Dw7t)
        ((letrec ((g$f$28357$6Dw7t
                    (case-lambda
                      ((g$ls$28358$6Dw7t)
                       (if (null? g$ls$28358$6Dw7t)
                         '#f
                         (if (g$pred$28356$6Dw7t (car g$ls$28358$6Dw7t))
                           (car g$ls$28358$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$f$28357$6Dw7t
                                   (cdr g$ls$28358$6Dw7t))))))))))))
           g$f$28357$6Dw7t)
         ((g$current-library-collection$28282$6Dw7t))))))
   (g$library-path$28321$6Dw7t
     g$library-path$28528$6Dw7t
     (g$make-parameter$27681$6Dw7t
       '(".")
       (case-lambda
         ((g$x$28359$6Dw7t)
          (if (if (g$list?$23576$6Dw7t g$x$28359$6Dw7t)
                (begin
                  '#f
                  (g$for-all$23579$6Dw7t
                    g$string?$24003$6Dw7t
                    g$x$28359$6Dw7t))
                '#f)
            (g$map$23581$6Dw7t
              (case-lambda ((g$x$28360$6Dw7t) g$x$28360$6Dw7t))
              g$x$28359$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'library-path
              '"not a list of strings"
              g$x$28359$6Dw7t))))))
   (g$library-extensions$28322$6Dw7t
     g$library-extensions$28529$6Dw7t
     (g$make-parameter$27681$6Dw7t
       '(".sls" ".ss")
       (case-lambda
         ((g$x$28361$6Dw7t)
          (if (if (g$list?$23576$6Dw7t g$x$28361$6Dw7t)
                (begin
                  '#f
                  (g$for-all$23579$6Dw7t
                    g$string?$24003$6Dw7t
                    g$x$28361$6Dw7t))
                '#f)
            (g$map$23581$6Dw7t
              (case-lambda ((g$x$28362$6Dw7t) g$x$28362$6Dw7t))
              g$x$28361$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'library-extensions
              '"not a list of strings"
              g$x$28361$6Dw7t))))))
   (g$library-name->file-name$28323$6Dw7t
     g$library-name->file-name$28530$6Dw7t
     (case-lambda
       ((g$x$28363$6Dw7t)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$27122$6Dw7t)))
          (case-lambda
            ((g$p$28366$6Dw7t g$extract$28367$6Dw7t)
             ((case-lambda
                ((g$extract$28368$6Dw7t g$p$28369$6Dw7t)
                 (letrec* ((g$display-hex$28370$6Dw7t
                             (case-lambda
                               ((g$n$28378$6Dw7t)
                                (if (g$<=$25071$6Dw7t
                                      '0
                                      g$n$28378$6Dw7t
                                      '9)
                                  (display
                                    g$n$28378$6Dw7t
                                    g$p$28369$6Dw7t)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        (display
                                          (g$integer->char$24014$6Dw7t
                                            (+ (g$char->integer$24013$6Dw7t
                                                 '#\A)
                                               (- g$n$28378$6Dw7t '10)))
                                          g$p$28369$6Dw7t))))))))))
                   (begin
                     ((letrec ((g$f$28371$6Dw7t
                                 (case-lambda
                                   ((g$ls$28372$6Dw7t)
                                    (if (not (null? g$ls$28372$6Dw7t))
                                      (begin
                                        (display '"/" g$p$28369$6Dw7t)
                                        (g$for-each$23582$6Dw7t
                                          (case-lambda
                                            ((g$c$28373$6Dw7t)
                                             (if ((case-lambda
                                                    ((g$t$28374$6Dw7t)
                                                     (if g$t$28374$6Dw7t
                                                       g$t$28374$6Dw7t
                                                       ((case-lambda
                                                          ((g$t$28375$6Dw7t)
                                                           (if g$t$28375$6Dw7t
                                                             g$t$28375$6Dw7t
                                                             ((case-lambda
                                                                ((g$t$28376$6Dw7t)
                                                                 (if g$t$28376$6Dw7t
                                                                   g$t$28376$6Dw7t
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$23570$6Dw7t
                                                                       g$c$28373$6Dw7t
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$24089$6Dw7t
                                                                '#\0
                                                                g$c$28373$6Dw7t
                                                                '#\9)))))
                                                        (g$char<=?$24089$6Dw7t
                                                          '#\A
                                                          g$c$28373$6Dw7t
                                                          '#\Z)))))
                                                  (g$char<=?$24089$6Dw7t
                                                    '#\a
                                                    g$c$28373$6Dw7t
                                                    '#\z))
                                               (display
                                                 g$c$28373$6Dw7t
                                                 g$p$28369$6Dw7t)
                                               ((case-lambda
                                                  (()
                                                   (begin
                                                     '#f
                                                     (display
                                                       '"%"
                                                       g$p$28369$6Dw7t)
                                                     ((case-lambda
                                                        ((g$n$28377$6Dw7t)
                                                         (begin
                                                           (g$display-hex$28370$6Dw7t
                                                             (g$quotient$25134$6Dw7t
                                                               g$n$28377$6Dw7t
                                                               '16))
                                                           (g$display-hex$28370$6Dw7t
                                                             (g$remainder$25135$6Dw7t
                                                               g$n$28377$6Dw7t
                                                               '16)))))
                                                      (g$char->integer$24013$6Dw7t
                                                        g$c$28373$6Dw7t)))))))))
                                          (g$string->list$24022$6Dw7t
                                            (g$symbol->string$24027$6Dw7t
                                              (car g$ls$28372$6Dw7t))))
                                        (g$f$28371$6Dw7t
                                          (cdr g$ls$28372$6Dw7t)))
                                      (void))))))
                        g$f$28371$6Dw7t)
                      g$x$28363$6Dw7t)
                     (g$extract$28368$6Dw7t)))))
              g$extract$28367$6Dw7t
              g$p$28366$6Dw7t)))))))
   (g$file-locator$28324$6Dw7t
     g$file-locator$28531$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda
         ((g$x$28379$6Dw7t)
          ((case-lambda
             ((g$str$28380$6Dw7t)
              ((letrec ((g$f$28381$6Dw7t
                          (case-lambda
                            ((g$ls$28382$6Dw7t
                               g$exts$28383$6Dw7t
                               g$failed-list$28384$6Dw7t)
                             (if (null? g$ls$28382$6Dw7t)
                               (g$file-locator-resolution-error$27679$6Dw7t
                                 g$x$28379$6Dw7t
                                 (g$reverse$24043$6Dw7t
                                   g$failed-list$28384$6Dw7t)
                                 ((case-lambda
                                    ((g$ls$28385$6Dw7t)
                                     (if (null? g$ls$28385$6Dw7t)
                                       (g$error$20491$6Dw7t
                                         'library-manager
                                         '"BUG")
                                       (cdr g$ls$28385$6Dw7t))))
                                  (g$external-pending-libraries$28330$6Dw7t)))
                               (if (null? g$exts$28383$6Dw7t)
                                 (g$f$28381$6Dw7t
                                   (cdr g$ls$28382$6Dw7t)
                                   (g$library-extensions$28322$6Dw7t)
                                   g$failed-list$28384$6Dw7t)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$name$28386$6Dw7t)
                                           (if (g$file-exists?$24164$6Dw7t
                                                 g$name$28386$6Dw7t)
                                             g$name$28386$6Dw7t
                                             (g$f$28381$6Dw7t
                                               g$ls$28382$6Dw7t
                                               (cdr g$exts$28383$6Dw7t)
                                               (cons
                                                 g$name$28386$6Dw7t
                                                 g$failed-list$28384$6Dw7t)))))
                                        (g$string-append$24025$6Dw7t
                                          (car g$ls$28382$6Dw7t)
                                          g$str$28380$6Dw7t
                                          (car g$exts$28383$6Dw7t)))))))))))))
                 g$f$28381$6Dw7t)
               (g$library-path$28321$6Dw7t)
               (g$library-extensions$28322$6Dw7t)
               '())))
           (g$library-name->file-name$28323$6Dw7t g$x$28379$6Dw7t))))
       (case-lambda
         ((g$f$28387$6Dw7t)
          (if (g$procedure?$24009$6Dw7t g$f$28387$6Dw7t)
            g$f$28387$6Dw7t
            (g$assertion-violation$20490$6Dw7t
              'file-locator
              '"not a procedure"
              g$f$28387$6Dw7t))))))
   (g$serialize-all$28325$6Dw7t
     g$serialize-all$28532$6Dw7t
     (case-lambda
       ((g$serialize$28388$6Dw7t g$compile$28389$6Dw7t)
        (letrec* ((g$library-desc$28390$6Dw7t
                    (case-lambda
                      ((g$x$28392$6Dw7t)
                       (list
                         (g$library-id$28290$6Dw7t g$x$28392$6Dw7t)
                         (g$library-name$28291$6Dw7t
                           g$x$28392$6Dw7t))))))
          (g$for-each$23582$6Dw7t
            (case-lambda
              ((g$x$28391$6Dw7t)
               (if (g$library-source-file-name$28303$6Dw7t
                     g$x$28391$6Dw7t)
                 (g$serialize$28388$6Dw7t
                   (g$library-source-file-name$28303$6Dw7t
                     g$x$28391$6Dw7t)
                   (list
                     (g$library-id$28290$6Dw7t g$x$28391$6Dw7t)
                     (g$library-name$28291$6Dw7t g$x$28391$6Dw7t)
                     (g$library-version$28292$6Dw7t g$x$28391$6Dw7t)
                     (g$map$23581$6Dw7t
                       g$library-desc$28390$6Dw7t
                       (g$library-imp*$28293$6Dw7t g$x$28391$6Dw7t))
                     (g$map$23581$6Dw7t
                       g$library-desc$28390$6Dw7t
                       (g$library-vis*$28294$6Dw7t g$x$28391$6Dw7t))
                     (g$map$23581$6Dw7t
                       g$library-desc$28390$6Dw7t
                       (g$library-inv*$28295$6Dw7t g$x$28391$6Dw7t))
                     (g$library-subst$28296$6Dw7t g$x$28391$6Dw7t)
                     (g$library-env$28297$6Dw7t g$x$28391$6Dw7t)
                     (g$compile$28389$6Dw7t
                       (g$library-visit-code$28300$6Dw7t
                         g$x$28391$6Dw7t))
                     (g$compile$28389$6Dw7t
                       (g$library-invoke-code$28301$6Dw7t
                         g$x$28391$6Dw7t))
                     (g$library-visible?$28302$6Dw7t g$x$28391$6Dw7t)))
                 (void))))
            ((g$current-library-collection$28282$6Dw7t)))))))
   (g$current-precompiled-library-loader$28326$6Dw7t
     g$current-precompiled-library-loader$28533$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda ((g$filename$28393$6Dw7t g$sk$28394$6Dw7t) '#f))))
   (g$try-load-from-file$28327$6Dw7t
     g$try-load-from-file$28534$6Dw7t
     (case-lambda
       ((g$filename$28395$6Dw7t)
        ((g$current-precompiled-library-loader$28326$6Dw7t)
         g$filename$28395$6Dw7t
         (case-lambda
           ((g$id$28396$6Dw7t
              g$name$28397$6Dw7t
              g$ver$28398$6Dw7t
              g$imp*$28399$6Dw7t
              g$vis*$28400$6Dw7t
              g$inv*$28401$6Dw7t
              g$exp-subst$28402$6Dw7t
              g$exp-env$28403$6Dw7t
              g$visit-proc$28404$6Dw7t
              g$invoke-proc$28405$6Dw7t
              g$visible?$28406$6Dw7t)
            ((letrec ((g$f$28407$6Dw7t
                        (case-lambda
                          ((g$deps$28408$6Dw7t)
                           (if (null? g$deps$28408$6Dw7t)
                             (begin
                               (g$install-library$28337$6Dw7t
                                 g$id$28396$6Dw7t
                                 g$name$28397$6Dw7t
                                 g$ver$28398$6Dw7t
                                 g$imp*$28399$6Dw7t
                                 g$vis*$28400$6Dw7t
                                 g$inv*$28401$6Dw7t
                                 g$exp-subst$28402$6Dw7t
                                 g$exp-env$28403$6Dw7t
                                 g$visit-proc$28404$6Dw7t
                                 g$invoke-proc$28405$6Dw7t
                                 '#f
                                 '#f
                                 g$visible?$28406$6Dw7t
                                 '#f)
                               '#t)
                             ((case-lambda
                                (()
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$d$28409$6Dw7t)
                                       ((case-lambda
                                          ((g$label$28410$6Dw7t
                                             g$dname$28411$6Dw7t)
                                           ((case-lambda
                                              ((g$l$28412$6Dw7t)
                                               (if (if (g$library?$28288$6Dw7t
                                                         g$l$28412$6Dw7t)
                                                     (begin
                                                       '#f
                                                       (eq? g$label$28410$6Dw7t
                                                            (g$library-id$28290$6Dw7t
                                                              g$l$28412$6Dw7t)))
                                                     '#f)
                                                 (g$f$28407$6Dw7t
                                                   (cdr g$deps$28408$6Dw7t))
                                                 ((case-lambda
                                                    (()
                                                     (begin
                                                       '#f
                                                       (g$library-version-mismatch-warning$27678$6Dw7t
                                                         g$name$28397$6Dw7t
                                                         g$dname$28411$6Dw7t
                                                         g$filename$28395$6Dw7t)
                                                       '#f)))))))
                                            (g$find-library-by-name$28332$6Dw7t
                                              g$dname$28411$6Dw7t))))
                                        (car g$d$28409$6Dw7t)
                                        (g$cadr$24045$6Dw7t
                                          g$d$28409$6Dw7t))))
                                    (car g$deps$28408$6Dw7t)))))))))))
               g$f$28407$6Dw7t)
             (g$append$23587$6Dw7t
               g$imp*$28399$6Dw7t
               g$vis*$28400$6Dw7t
               g$inv*$28401$6Dw7t)))
           (g$others$28413$6Dw7t '#f))))))
   (g$library-loader$28328$6Dw7t
     g$library-loader$28535$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda
         ((g$x$28414$6Dw7t)
          ((case-lambda
             ((g$file-name$28415$6Dw7t)
              (if (not g$file-name$28415$6Dw7t)
                (g$assertion-violation$20490$6Dw7t
                  '#f
                  '"cannot find library"
                  g$x$28414$6Dw7t)
                ((case-lambda
                   ((g$t$28416$6Dw7t)
                    (if g$t$28416$6Dw7t
                      g$t$28416$6Dw7t
                      (begin
                        '#f
                        ((case-lambda
                           (()
                            (begin
                              '#f
                              ((g$current-library-expander$28329$6Dw7t)
                               (g$read-library-source-file$27680$6Dw7t
                                 g$file-name$28415$6Dw7t)
                               g$file-name$28415$6Dw7t
                               (case-lambda
                                 ((g$name$28417$6Dw7t)
                                  (if (not (g$equal?$27474$6Dw7t
                                             g$name$28417$6Dw7t
                                             g$x$28414$6Dw7t))
                                    (g$assertion-violation$20490$6Dw7t
                                      'import
                                      (call-with-values
                                        (case-lambda
                                          (()
                                           (g$open-string-output-port$27122$6Dw7t)))
                                        (case-lambda
                                          ((g$p$28420$6Dw7t
                                             g$e$28421$6Dw7t)
                                           ((case-lambda
                                              ((g$e$28422$6Dw7t
                                                 g$p$28423$6Dw7t)
                                               (begin
                                                 (display
                                                   '"expected to find library "
                                                   g$p$28423$6Dw7t)
                                                 (write
                                                   g$x$28414$6Dw7t
                                                   g$p$28423$6Dw7t)
                                                 (display
                                                   '" in file "
                                                   g$p$28423$6Dw7t)
                                                 (display
                                                   g$file-name$28415$6Dw7t
                                                   g$p$28423$6Dw7t)
                                                 (display
                                                   '", found "
                                                   g$p$28423$6Dw7t)
                                                 (write
                                                   g$name$28417$6Dw7t
                                                   g$p$28423$6Dw7t)
                                                 (display
                                                   '" instead"
                                                   g$p$28423$6Dw7t)
                                                 (g$e$28422$6Dw7t))))
                                            g$e$28421$6Dw7t
                                            g$p$28420$6Dw7t)))))
                                    (void)))))))))))))
                 (g$try-load-from-file$28327$6Dw7t
                   g$file-name$28415$6Dw7t)))))
           ((g$file-locator$28324$6Dw7t) g$x$28414$6Dw7t))))
       (case-lambda
         ((g$f$28424$6Dw7t)
          (if (g$procedure?$24009$6Dw7t g$f$28424$6Dw7t)
            g$f$28424$6Dw7t
            (g$assertion-violation$20490$6Dw7t
              'library-locator
              '"not a procedure"
              g$f$28424$6Dw7t))))))
   (g$current-library-expander$28329$6Dw7t
     g$current-library-expander$28536$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda
         ((g$x$28425$6Dw7t)
          (g$assertion-violation$20490$6Dw7t
            'library-expander
            '"not initialized")))
       (case-lambda
         ((g$f$28426$6Dw7t)
          (if (g$procedure?$24009$6Dw7t g$f$28426$6Dw7t)
            g$f$28426$6Dw7t
            (g$assertion-violation$20490$6Dw7t
              'library-expander
              '"not a procedure"
              g$f$28426$6Dw7t))))))
   (g$external-pending-libraries$28330$6Dw7t
     g$external-pending-libraries$28537$6Dw7t
     (g$make-parameter$27681$6Dw7t '()))
   (g$find-external-library$28331$6Dw7t
     g$find-external-library$28538$6Dw7t
     (case-lambda
       ((g$name$28427$6Dw7t)
        (begin
          (if (g$member$23571$6Dw7t
                g$name$28427$6Dw7t
                (g$external-pending-libraries$28330$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              '#f
              '"circular attempt to import library was detected"
              g$name$28427$6Dw7t)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$28430$6Dw7t
                g$external-pending-libraries$28431$6Dw7t)
              ((case-lambda
                 ((g$swap$28432$6Dw7t)
                  (dynamic-wind
                    g$swap$28432$6Dw7t
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$28328$6Dw7t)
                          g$name$28427$6Dw7t)
                         ((case-lambda
                            ((g$t$28433$6Dw7t)
                             (if g$t$28433$6Dw7t
                               g$t$28433$6Dw7t
                               (begin
                                 '#f
                                 (g$assertion-violation$20490$6Dw7t
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$28427$6Dw7t)))))
                          (g$find-library-by$28320$6Dw7t
                            (case-lambda
                              ((g$x$28434$6Dw7t)
                               (g$equal?$27474$6Dw7t
                                 (g$library-name$28291$6Dw7t
                                   g$x$28434$6Dw7t)
                                 g$name$28427$6Dw7t))))))))
                    g$swap$28432$6Dw7t)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$28435$6Dw7t)
                      (begin
                        (g$external-pending-libraries$28430$6Dw7t
                          g$external-pending-libraries$28431$6Dw7t)
                        (set! g$external-pending-libraries$28431$6Dw7t
                          g$t$28435$6Dw7t))))
                   (g$external-pending-libraries$28430$6Dw7t)))))))
           g$external-pending-libraries$28330$6Dw7t
           (cons
             g$name$28427$6Dw7t
             (g$external-pending-libraries$28330$6Dw7t)))))))
   (g$find-library-by-name$28332$6Dw7t
     g$find-library-by-name$28539$6Dw7t
     (case-lambda
       ((g$name$28436$6Dw7t)
        ((case-lambda
           ((g$t$28437$6Dw7t)
            (if g$t$28437$6Dw7t
              g$t$28437$6Dw7t
              (begin
                '#f
                (g$find-external-library$28331$6Dw7t
                  g$name$28436$6Dw7t)))))
         (g$find-library-by$28320$6Dw7t
           (case-lambda
             ((g$x$28438$6Dw7t)
              (g$equal?$27474$6Dw7t
                (g$library-name$28291$6Dw7t g$x$28438$6Dw7t)
                g$name$28436$6Dw7t))))))))
   (g$uninstall-library$28333$6Dw7t
     g$uninstall-library$28540$6Dw7t
     (case-lambda
       ((g$name$28439$6Dw7t g$err?$28440$6Dw7t)
        (letrec* ((g$who$28441$6Dw7t 'uninstall-library))
          ((case-lambda
             ((g$lib$28442$6Dw7t)
              (begin
                (if (if g$err?$28440$6Dw7t
                      (begin '#f (not g$lib$28442$6Dw7t))
                      '#f)
                  (g$assertion-violation$20490$6Dw7t
                    g$who$28441$6Dw7t
                    '"library not installed"
                    g$name$28439$6Dw7t)
                  (void))
                ((g$current-library-collection$28282$6Dw7t)
                 g$lib$28442$6Dw7t
                 '#t)
                (g$for-each$23582$6Dw7t
                  (case-lambda
                    ((g$x$28443$6Dw7t)
                     ((case-lambda
                        ((g$label$28444$6Dw7t g$binding$28445$6Dw7t)
                         (begin
                           (remove-location g$label$28444$6Dw7t)
                           (if (g$memq$23569$6Dw7t
                                 (car g$binding$28445$6Dw7t)
                                 '(global
                                    global-macro
                                    global-macro!
                                    global-ctv))
                             (remove-location
                               (cdr g$binding$28445$6Dw7t))
                             (void)))))
                      (car g$x$28443$6Dw7t)
                      (cdr g$x$28443$6Dw7t))))
                  (g$library-env$28297$6Dw7t g$lib$28442$6Dw7t)))))
           (g$find-library-by$28320$6Dw7t
             (case-lambda
               ((g$x$28446$6Dw7t)
                (g$equal?$27474$6Dw7t
                  (g$library-name$28291$6Dw7t g$x$28446$6Dw7t)
                  g$name$28439$6Dw7t)))))))
       ((g$name$28447$6Dw7t)
        (g$uninstall-library$28333$6Dw7t g$name$28447$6Dw7t '#t))))
   (g$library-exists?$28334$6Dw7t
     g$library-exists?$28541$6Dw7t
     (case-lambda
       ((g$name$28448$6Dw7t)
        (if (g$find-library-by$28320$6Dw7t
              (case-lambda
                ((g$x$28449$6Dw7t)
                 (g$equal?$27474$6Dw7t
                   (g$library-name$28291$6Dw7t g$x$28449$6Dw7t)
                   g$name$28448$6Dw7t))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$28335$6Dw7t
     g$find-library-by-spec/die$28542$6Dw7t
     (case-lambda
       ((g$spec$28450$6Dw7t)
        ((case-lambda
           ((g$id$28451$6Dw7t)
            ((case-lambda
               ((g$t$28452$6Dw7t)
                (if g$t$28452$6Dw7t
                  g$t$28452$6Dw7t
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      '#f
                      '"cannot find library with required spec"
                      g$spec$28450$6Dw7t)))))
             (g$find-library-by$28320$6Dw7t
               (case-lambda
                 ((g$x$28453$6Dw7t)
                  (eq? g$id$28451$6Dw7t
                       (g$library-id$28290$6Dw7t g$x$28453$6Dw7t))))))))
         (car g$spec$28450$6Dw7t)))))
   (g$install-library-record$28336$6Dw7t
     g$install-library-record$28543$6Dw7t
     (case-lambda
       ((g$lib$28454$6Dw7t)
        (begin
          ((case-lambda
             ((g$exp-env$28455$6Dw7t)
              (g$for-each$23582$6Dw7t
                (case-lambda
                  ((g$x$28456$6Dw7t)
                   ((case-lambda
                      ((g$label$28457$6Dw7t g$binding$28458$6Dw7t)
                       ((case-lambda
                          ((g$binding$28459$6Dw7t)
                           (g$set-label-binding!$27684$6Dw7t
                             g$label$28457$6Dw7t
                             g$binding$28459$6Dw7t)))
                        ((case-lambda
                           ((g$t$28460$6Dw7t)
                            (if (eqv? g$t$28460$6Dw7t 'global)
                              (cons
                                'global
                                (cons
                                  g$lib$28454$6Dw7t
                                  (cdr g$binding$28458$6Dw7t)))
                              (if (eqv? g$t$28460$6Dw7t 'global-macro)
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$28454$6Dw7t
                                    (cdr g$binding$28458$6Dw7t)))
                                (if (eqv?
                                      g$t$28460$6Dw7t
                                      'global-macro!)
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$28454$6Dw7t
                                      (cdr g$binding$28458$6Dw7t)))
                                  (if (eqv? g$t$28460$6Dw7t 'global-ctv)
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$28454$6Dw7t
                                        (cdr g$binding$28458$6Dw7t)))
                                    ((case-lambda
                                       (()
                                        (begin
                                          '#f
                                          g$binding$28458$6Dw7t))))))))))
                         (car g$binding$28458$6Dw7t)))))
                    (car g$x$28456$6Dw7t)
                    (cdr g$x$28456$6Dw7t))))
                g$exp-env$28455$6Dw7t)))
           (g$library-env$28297$6Dw7t g$lib$28454$6Dw7t))
          ((g$current-library-collection$28282$6Dw7t)
           g$lib$28454$6Dw7t)))))
   (g$install-library$28337$6Dw7t
     g$install-library$28544$6Dw7t
     (case-lambda
       ((g$id$28461$6Dw7t
          g$name$28462$6Dw7t
          g$ver$28463$6Dw7t
          g$imp*$28464$6Dw7t
          g$vis*$28465$6Dw7t
          g$inv*$28466$6Dw7t
          g$exp-subst$28467$6Dw7t
          g$exp-env$28468$6Dw7t
          g$visit-proc$28469$6Dw7t
          g$invoke-proc$28470$6Dw7t
          g$visit-code$28471$6Dw7t
          g$invoke-code$28472$6Dw7t
          g$visible?$28473$6Dw7t
          g$source-file-name$28474$6Dw7t)
        ((case-lambda
           ((g$imp-lib*$28475$6Dw7t
              g$vis-lib*$28476$6Dw7t
              g$inv-lib*$28477$6Dw7t)
            (begin
              (if (not (if (g$symbol?$24007$6Dw7t g$id$28461$6Dw7t)
                         (if (g$list?$23576$6Dw7t g$name$28462$6Dw7t)
                           (begin
                             '#f
                             (g$list?$23576$6Dw7t g$ver$28463$6Dw7t))
                           '#f)
                         '#f))
                (g$assertion-violation$20490$6Dw7t
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$28461$6Dw7t
                  g$name$28462$6Dw7t
                  g$ver$28463$6Dw7t)
                (void))
              (if (g$library-exists?$28334$6Dw7t g$name$28462$6Dw7t)
                (g$assertion-violation$20490$6Dw7t
                  'install-library
                  '"library is already installed"
                  g$name$28462$6Dw7t)
                (void))
              ((case-lambda
                 ((g$lib$28478$6Dw7t)
                  (g$install-library-record$28336$6Dw7t
                    g$lib$28478$6Dw7t)))
               (g$make-library$28289$6Dw7t
                 g$id$28461$6Dw7t
                 g$name$28462$6Dw7t
                 g$ver$28463$6Dw7t
                 g$imp-lib*$28475$6Dw7t
                 g$vis-lib*$28476$6Dw7t
                 g$inv-lib*$28477$6Dw7t
                 g$exp-subst$28467$6Dw7t
                 g$exp-env$28468$6Dw7t
                 g$visit-proc$28469$6Dw7t
                 g$invoke-proc$28470$6Dw7t
                 g$visit-code$28471$6Dw7t
                 g$invoke-code$28472$6Dw7t
                 g$visible?$28473$6Dw7t
                 g$source-file-name$28474$6Dw7t)))))
         (g$map$23581$6Dw7t
           g$find-library-by-spec/die$28335$6Dw7t
           g$imp*$28464$6Dw7t)
         (g$map$23581$6Dw7t
           g$find-library-by-spec/die$28335$6Dw7t
           g$vis*$28465$6Dw7t)
         (g$map$23581$6Dw7t
           g$find-library-by-spec/die$28335$6Dw7t
           g$inv*$28466$6Dw7t)))))
   (g$imported-label->binding$28338$6Dw7t
     g$imported-label->binding$28545$6Dw7t
     (case-lambda
       ((g$lab$28479$6Dw7t)
        (g$label-binding$27685$6Dw7t g$lab$28479$6Dw7t))))
   (g$invoke-library$28339$6Dw7t
     g$invoke-library$28546$6Dw7t
     (case-lambda
       ((g$lib$28480$6Dw7t)
        ((case-lambda
           ((g$invoke$28481$6Dw7t)
            (if (g$procedure?$24009$6Dw7t g$invoke$28481$6Dw7t)
              (begin
                (g$set-library-invoke-state!$28313$6Dw7t
                  g$lib$28480$6Dw7t
                  (case-lambda
                    (()
                     (g$assertion-violation$20490$6Dw7t
                       'invoke
                       '"circularity detected"
                       g$lib$28480$6Dw7t))))
                (g$for-each$23582$6Dw7t
                  g$invoke-library$28339$6Dw7t
                  (g$library-inv*$28295$6Dw7t g$lib$28480$6Dw7t))
                (g$set-library-invoke-state!$28313$6Dw7t
                  g$lib$28480$6Dw7t
                  (case-lambda
                    (()
                     (g$assertion-violation$20490$6Dw7t
                       'invoke
                       '"first invoke did not return"
                       g$lib$28480$6Dw7t))))
                (g$invoke$28481$6Dw7t)
                (g$set-library-invoke-state!$28313$6Dw7t
                  g$lib$28480$6Dw7t
                  '#t))
              (void))))
         (g$library-invoke-state$28299$6Dw7t g$lib$28480$6Dw7t)))))
   (g$visit-library$28340$6Dw7t
     g$visit-library$28547$6Dw7t
     (case-lambda
       ((g$lib$28482$6Dw7t)
        ((case-lambda
           ((g$visit$28483$6Dw7t)
            (if (g$procedure?$24009$6Dw7t g$visit$28483$6Dw7t)
              (begin
                (g$set-library-visit-state!$28312$6Dw7t
                  g$lib$28482$6Dw7t
                  (case-lambda
                    (()
                     (g$assertion-violation$20490$6Dw7t
                       'visit
                       '"circularity detected"
                       g$lib$28482$6Dw7t))))
                (g$for-each$23582$6Dw7t
                  g$invoke-library$28339$6Dw7t
                  (g$library-vis*$28294$6Dw7t g$lib$28482$6Dw7t))
                (g$set-library-visit-state!$28312$6Dw7t
                  g$lib$28482$6Dw7t
                  (case-lambda
                    (()
                     (g$assertion-violation$20490$6Dw7t
                       'invoke
                       '"first visit did not return"
                       g$lib$28482$6Dw7t))))
                (g$visit$28483$6Dw7t)
                (g$set-library-visit-state!$28312$6Dw7t
                  g$lib$28482$6Dw7t
                  '#t))
              (void))))
         (g$library-visit-state$28298$6Dw7t g$lib$28482$6Dw7t)))))
   (g$invoke-library-by-spec$28341$6Dw7t
     g$invoke-library-by-spec$28548$6Dw7t
     (case-lambda
       ((g$spec$28484$6Dw7t)
        (g$invoke-library$28339$6Dw7t
          (g$find-library-by-spec/die$28335$6Dw7t
            g$spec$28484$6Dw7t)))))
   (g$installed-libraries$28342$6Dw7t
     g$installed-libraries$28549$6Dw7t
     (case-lambda
       ((g$all?$28485$6Dw7t)
        ((letrec ((g$f$28486$6Dw7t
                    (case-lambda
                      ((g$ls$28487$6Dw7t)
                       (if (null? g$ls$28487$6Dw7t)
                         '()
                         (if ((case-lambda
                                ((g$t$28488$6Dw7t)
                                 (if g$t$28488$6Dw7t
                                   g$t$28488$6Dw7t
                                   (begin
                                     '#f
                                     (g$library-visible?$28302$6Dw7t
                                       (car g$ls$28487$6Dw7t))))))
                              g$all?$28485$6Dw7t)
                           (cons
                             (g$library-name$28291$6Dw7t
                               (car g$ls$28487$6Dw7t))
                             (g$f$28486$6Dw7t (cdr g$ls$28487$6Dw7t)))
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$f$28486$6Dw7t
                                   (cdr g$ls$28487$6Dw7t))))))))))))
           g$f$28486$6Dw7t)
         ((g$current-library-collection$28282$6Dw7t))))
       (() (g$installed-libraries$28342$6Dw7t '#f))))
   (g$library-spec$28343$6Dw7t
     g$library-spec$28550$6Dw7t
     (case-lambda
       ((g$x$28489$6Dw7t)
        (begin
          (if (not (g$library?$28288$6Dw7t g$x$28489$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'library-spec
              '"not a library"
              g$x$28489$6Dw7t)
            (void))
          (list
            (g$library-id$28290$6Dw7t g$x$28489$6Dw7t)
            (g$library-name$28291$6Dw7t g$x$28489$6Dw7t)
            (g$library-version$28292$6Dw7t g$x$28489$6Dw7t)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$28551$6Dw7t
     g$build-global-define$28761$6Dw7t
     (case-lambda ((g$x$28732$6Dw7t) (g$build-void$28728$6Dw7t))))
   (g$build-lambda$28662$6Dw7t
     g$build-lambda$28762$6Dw7t
     (case-lambda
       ((g$ae$28733$6Dw7t g$vars$28734$6Dw7t g$exp$28735$6Dw7t)
        (if g$ae$28733$6Dw7t
          (list
            'case-lambda
            (list g$vars$28734$6Dw7t g$exp$28735$6Dw7t))
          (list
            'case-lambda
            (list g$vars$28734$6Dw7t g$exp$28735$6Dw7t))))))
   (g$build-case-lambda$28663$6Dw7t
     g$build-case-lambda$28763$6Dw7t
     (case-lambda
       ((g$ae$28736$6Dw7t g$vars*$28737$6Dw7t g$exp*$28738$6Dw7t)
        (if g$ae$28736$6Dw7t
          (cons
            'case-lambda
            (g$map$23581$6Dw7t
              list
              g$vars*$28737$6Dw7t
              g$exp*$28738$6Dw7t))
          (cons
            'case-lambda
            (g$map$23581$6Dw7t
              list
              g$vars*$28737$6Dw7t
              g$exp*$28738$6Dw7t))))))
   (g$build-let$28664$6Dw7t
     g$build-let$28764$6Dw7t
     (case-lambda
       ((g$ae$28739$6Dw7t
          g$lhs*$28740$6Dw7t
          g$rhs*$28741$6Dw7t
          g$body$28742$6Dw7t)
        (cons
          (g$build-lambda$28662$6Dw7t
            g$ae$28739$6Dw7t
            g$lhs*$28740$6Dw7t
            g$body$28742$6Dw7t)
          g$rhs*$28741$6Dw7t))))
   (g$build-sequence$28727$6Dw7t
     g$build-sequence$28765$6Dw7t
     (case-lambda
       ((g$ae$28743$6Dw7t g$exps$28744$6Dw7t)
        ((letrec ((g$loop$28745$6Dw7t
                    (case-lambda
                      ((g$exps$28746$6Dw7t)
                       (if (null? (cdr g$exps$28746$6Dw7t))
                         (car g$exps$28746$6Dw7t)
                         (if (g$equal?$27474$6Dw7t
                               (car g$exps$28746$6Dw7t)
                               (g$build-void$28728$6Dw7t))
                           (g$loop$28745$6Dw7t (cdr g$exps$28746$6Dw7t))
                           (cons 'begin g$exps$28746$6Dw7t)))))))
           g$loop$28745$6Dw7t)
         g$exps$28744$6Dw7t))))
   (g$build-void$28728$6Dw7t
     g$build-void$28766$6Dw7t
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$28729$6Dw7t
     g$build-letrec$28767$6Dw7t
     (case-lambda
       ((g$ae$28747$6Dw7t
          g$vars$28748$6Dw7t
          g$val-exps$28749$6Dw7t
          g$body-exp$28750$6Dw7t)
        (if (null? g$vars$28748$6Dw7t)
          g$body-exp$28750$6Dw7t
          (list
            'letrec
            (g$map$23581$6Dw7t
              list
              g$vars$28748$6Dw7t
              g$val-exps$28749$6Dw7t)
            g$body-exp$28750$6Dw7t)))))
   (g$build-letrec*$28730$6Dw7t
     g$build-letrec*$28768$6Dw7t
     (case-lambda
       ((g$ae$28751$6Dw7t
          g$vars$28752$6Dw7t
          g$val-exps$28753$6Dw7t
          g$body-exp$28754$6Dw7t)
        (if (null? g$vars$28752$6Dw7t)
          g$body-exp$28754$6Dw7t
          ((case-lambda
             (()
              (begin
                '#f
                (list
                  'letrec*
                  (g$map$23581$6Dw7t
                    list
                    g$vars$28752$6Dw7t
                    g$val-exps$28753$6Dw7t)
                  g$body-exp$28754$6Dw7t)))))))))
   (g$build-library-letrec*$28731$6Dw7t
     g$build-library-letrec*$28769$6Dw7t
     (case-lambda
       ((g$ae$28755$6Dw7t
          g$name$28756$6Dw7t
          g$vars$28757$6Dw7t
          g$locs$28758$6Dw7t
          g$val-exps$28759$6Dw7t
          g$body-exp$28760$6Dw7t)
        (list
          'library-letrec*
          g$name$28756$6Dw7t
          (g$map$23581$6Dw7t
            list
            g$vars$28757$6Dw7t
            g$locs$28758$6Dw7t
            g$val-exps$28759$6Dw7t)
          g$body-exp$28760$6Dw7t)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$28770$6Dw7t
     g$set-cons$32785$6Dw7t
     (case-lambda
       ((g$x$29467$6Dw7t g$ls$29468$6Dw7t)
        (if (g$memq$23569$6Dw7t g$x$29467$6Dw7t g$ls$29468$6Dw7t)
          g$ls$29468$6Dw7t
          ((case-lambda
             (()
              (begin '#f (cons g$x$29467$6Dw7t g$ls$29468$6Dw7t)))))))))
   (g$set-union$28771$6Dw7t
     g$set-union$32786$6Dw7t
     (case-lambda
       ((g$ls1$29469$6Dw7t g$ls2$29470$6Dw7t)
        (if (null? g$ls1$29469$6Dw7t)
          g$ls2$29470$6Dw7t
          (if (g$memq$23569$6Dw7t
                (car g$ls1$29469$6Dw7t)
                g$ls2$29470$6Dw7t)
            (g$set-union$28771$6Dw7t
              (cdr g$ls1$29469$6Dw7t)
              g$ls2$29470$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (cons
                    (car g$ls1$29469$6Dw7t)
                    (g$set-union$28771$6Dw7t
                      (cdr g$ls1$29469$6Dw7t)
                      g$ls2$29470$6Dw7t)))))))))))
   (g$top-mark*$28773$6Dw7t g$top-mark*$32787$6Dw7t '(top))
   (g$top-marked?$28774$6Dw7t
     g$top-marked?$32788$6Dw7t
     (case-lambda
       ((g$m*$29471$6Dw7t) (g$memq$23569$6Dw7t 'top g$m*$29471$6Dw7t))))
   (g$gen-lexical$28775$6Dw7t
     g$gen-lexical$32789$6Dw7t
     (case-lambda
       ((g$sym$29472$6Dw7t)
        (if (g$symbol?$24007$6Dw7t g$sym$29472$6Dw7t)
          (gensym g$sym$29472$6Dw7t)
          (if (g$stx?$28812$6Dw7t g$sym$29472$6Dw7t)
            (g$gen-lexical$28775$6Dw7t
              (g$id->sym$28841$6Dw7t g$sym$29472$6Dw7t))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'gen-lexical
                    '"BUG: invalid arg"
                    g$sym$29472$6Dw7t))))))))))
   (g$gen-global$28776$6Dw7t
     g$gen-global$32790$6Dw7t
     (case-lambda
       ((g$x$29473$6Dw7t) (g$gen-lexical$28775$6Dw7t g$x$29473$6Dw7t))))
   (g$gen-label$28777$6Dw7t
     g$gen-label$32791$6Dw7t
     (case-lambda ((g$_$29474$6Dw7t) (gensym))))
   (g$gen-top-level-label$28778$6Dw7t
     g$gen-top-level-label$32792$6Dw7t
     (case-lambda
       ((g$id$29475$6Dw7t g$rib$29476$6Dw7t)
        (letrec* ((g$find$29477$6Dw7t
                    (case-lambda
                      ((g$sym$29483$6Dw7t
                         g$mark*$29484$6Dw7t
                         g$sym*$29485$6Dw7t
                         g$mark**$29486$6Dw7t
                         g$label*$29487$6Dw7t)
                       (if (pair? g$sym*$29485$6Dw7t)
                         (begin
                           '#f
                           (if (if (eq? g$sym$29483$6Dw7t
                                        (car g$sym*$29485$6Dw7t))
                                 (begin
                                   '#f
                                   (g$same-marks?$28842$6Dw7t
                                     g$mark*$29484$6Dw7t
                                     (car g$mark**$29486$6Dw7t)))
                                 '#f)
                             (car g$label*$29487$6Dw7t)
                             (g$find$29477$6Dw7t
                               g$sym$29483$6Dw7t
                               g$mark*$29484$6Dw7t
                               (cdr g$sym*$29485$6Dw7t)
                               (cdr g$mark**$29486$6Dw7t)
                               (cdr g$label*$29487$6Dw7t))))
                         '#f)))))
          ((case-lambda
             ((g$sym$29478$6Dw7t g$mark*$29479$6Dw7t)
              ((case-lambda
                 ((g$sym*$29480$6Dw7t)
                  ((case-lambda
                     ((g$t$29481$6Dw7t)
                      (if g$t$29481$6Dw7t
                        ((case-lambda
                           ((g$label$29482$6Dw7t)
                            (if (g$imported-label->binding$28545$6Dw7t
                                  g$label$29482$6Dw7t)
                              (gensym)
                              ((case-lambda
                                 (()
                                  (begin '#f g$label$29482$6Dw7t)))))))
                         g$t$29481$6Dw7t)
                        ((case-lambda (() (begin '#f (gensym))))))))
                   (if (g$memq$23569$6Dw7t
                         g$sym$29478$6Dw7t
                         (g$rib-sym*$28788$6Dw7t g$rib$29476$6Dw7t))
                     (begin
                       '#f
                       (g$find$29477$6Dw7t
                         g$sym$29478$6Dw7t
                         g$mark*$29479$6Dw7t
                         g$sym*$29480$6Dw7t
                         (g$rib-mark**$28789$6Dw7t g$rib$29476$6Dw7t)
                         (g$rib-label*$28790$6Dw7t g$rib$29476$6Dw7t)))
                     '#f))))
               (g$rib-sym*$28788$6Dw7t g$rib$29476$6Dw7t))))
           (g$id->sym$28841$6Dw7t g$id$29475$6Dw7t)
           (g$stx-mark*$28815$6Dw7t g$id$29475$6Dw7t))))))
   (g$gen-define-label+loc$28779$6Dw7t
     g$gen-define-label+loc$32793$6Dw7t
     (case-lambda
       ((g$id$29488$6Dw7t g$rib$29489$6Dw7t g$sd?$29490$6Dw7t)
        (if g$sd?$29490$6Dw7t
          (values (gensym) (g$gen-lexical$28775$6Dw7t g$id$29488$6Dw7t))
          ((case-lambda
             ((g$env$29491$6Dw7t)
              ((case-lambda
                 ((g$label$29492$6Dw7t g$locs$29493$6Dw7t)
                  (values
                    g$label$29492$6Dw7t
                    ((case-lambda
                       ((g$t$29494$6Dw7t)
                        (if g$t$29494$6Dw7t
                          (cdr g$t$29494$6Dw7t)
                          ((case-lambda
                             (()
                              (begin
                                '#f
                                ((case-lambda
                                   ((g$loc$29495$6Dw7t)
                                    (begin
                                      (g$set-interaction-env-locs!$29428$6Dw7t
                                        g$env$29491$6Dw7t
                                        (cons
                                          (cons
                                            g$label$29492$6Dw7t
                                            g$loc$29495$6Dw7t)
                                          g$locs$29493$6Dw7t))
                                      g$loc$29495$6Dw7t)))
                                 (g$gen-lexical$28775$6Dw7t
                                   g$id$29488$6Dw7t)))))))))
                     (g$assq$23565$6Dw7t
                       g$label$29492$6Dw7t
                       g$locs$29493$6Dw7t)))))
               (g$gen-top-level-label$28778$6Dw7t
                 g$id$29488$6Dw7t
                 g$rib$29489$6Dw7t)
               (g$interaction-env-locs$29425$6Dw7t g$env$29491$6Dw7t))))
           (g$top-level-context$29466$6Dw7t))))))
   (g$gen-define-label$28780$6Dw7t
     g$gen-define-label$32794$6Dw7t
     (case-lambda
       ((g$id$29496$6Dw7t g$rib$29497$6Dw7t g$sd?$29498$6Dw7t)
        (if g$sd?$29498$6Dw7t
          (gensym)
          (g$gen-top-level-label$28778$6Dw7t
            g$id$29496$6Dw7t
            g$rib$29497$6Dw7t)))))
   (g$10206$28781$6Dw7t
     g$10206$32795$6Dw7t
     (make-record-type-descriptor
       'rib
       '#f
       'g$10209$6Dw7t
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$10208$28782$6Dw7t g$10208$32796$6Dw7t '#f)
   (g$10207$28783$6Dw7t
     g$10207$32797$6Dw7t
     (make-record-constructor-descriptor
       g$10206$28781$6Dw7t
       '#f
       g$10208$28782$6Dw7t))
   (g$rib?$28786$6Dw7t
     g$rib?$32798$6Dw7t
     (record-predicate g$10206$28781$6Dw7t))
   (g$make-rib$28787$6Dw7t
     g$make-rib$32799$6Dw7t
     (record-constructor g$10207$28783$6Dw7t))
   (g$rib-sym*$28788$6Dw7t
     g$rib-sym*$32800$6Dw7t
     (record-accessor g$10206$28781$6Dw7t '0))
   (g$rib-mark**$28789$6Dw7t
     g$rib-mark**$32801$6Dw7t
     (record-accessor g$10206$28781$6Dw7t '1))
   (g$rib-label*$28790$6Dw7t
     g$rib-label*$32802$6Dw7t
     (record-accessor g$10206$28781$6Dw7t '2))
   (g$rib-sealed/freq$28791$6Dw7t
     g$rib-sealed/freq$32803$6Dw7t
     (record-accessor g$10206$28781$6Dw7t '3))
   (g$rib-cache$28792$6Dw7t
     g$rib-cache$32804$6Dw7t
     (record-accessor g$10206$28781$6Dw7t '4))
   (g$set-rib-sym*!$28793$6Dw7t
     g$set-rib-sym*!$32805$6Dw7t
     (record-mutator g$10206$28781$6Dw7t '0))
   (g$set-rib-mark**!$28794$6Dw7t
     g$set-rib-mark**!$32806$6Dw7t
     (record-mutator g$10206$28781$6Dw7t '1))
   (g$set-rib-label*!$28795$6Dw7t
     g$set-rib-label*!$32807$6Dw7t
     (record-mutator g$10206$28781$6Dw7t '2))
   (g$set-rib-sealed/freq!$28796$6Dw7t
     g$set-rib-sealed/freq!$32808$6Dw7t
     (record-mutator g$10206$28781$6Dw7t '3))
   (g$set-rib-cache!$28797$6Dw7t
     g$set-rib-cache!$32809$6Dw7t
     (record-mutator g$10206$28781$6Dw7t '4))
   (g$make-empty-rib$28798$6Dw7t
     g$make-empty-rib$32810$6Dw7t
     (case-lambda (() (g$make-rib$28787$6Dw7t '() '() '() '#f '#f))))
   (g$make-cache-rib$28799$6Dw7t
     g$make-cache-rib$32811$6Dw7t
     (case-lambda
       (()
        (g$make-rib$28787$6Dw7t
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$24143$6Dw7t)))))
   (g$find-label$28800$6Dw7t
     g$find-label$32812$6Dw7t
     (case-lambda
       ((g$rib$29499$6Dw7t g$sym$29500$6Dw7t g$mark*$29501$6Dw7t)
        ((case-lambda
           ((g$ht$29502$6Dw7t)
            (if g$ht$29502$6Dw7t
              (begin
                '#f
                ((case-lambda
                   ((g$cv$29503$6Dw7t)
                    ((case-lambda
                       ((g$t$29504$6Dw7t)
                        (if g$t$29504$6Dw7t
                          (cdr g$t$29504$6Dw7t)
                          ((case-lambda (() (begin '#f '#f)))))))
                     (if g$cv$29503$6Dw7t
                       (begin
                         '#f
                         (g$assp$23568$6Dw7t
                           (case-lambda
                             ((g$m$29505$6Dw7t)
                              (g$same-marks?$28842$6Dw7t
                                g$mark*$29501$6Dw7t
                                g$m$29505$6Dw7t)))
                           g$cv$29503$6Dw7t))
                       '#f))))
                 (g$hashtable-ref$24146$6Dw7t
                   g$ht$29502$6Dw7t
                   g$sym$29500$6Dw7t
                   '#f)))
              '#f)))
         (g$rib-cache$28792$6Dw7t g$rib$29499$6Dw7t)))))
   (g$extend-rib!$28801$6Dw7t
     g$extend-rib!$32813$6Dw7t
     (case-lambda
       ((g$rib$29506$6Dw7t
          g$id$29507$6Dw7t
          g$label$29508$6Dw7t
          g$sd?$29509$6Dw7t)
        (letrec* ((g$find$29510$6Dw7t
                    (case-lambda
                      ((g$sym$29519$6Dw7t
                         g$mark*$29520$6Dw7t
                         g$sym*$29521$6Dw7t
                         g$mark**$29522$6Dw7t
                         g$label*$29523$6Dw7t)
                       (if (pair? g$sym*$29521$6Dw7t)
                         (begin
                           '#f
                           (if (if (eq? g$sym$29519$6Dw7t
                                        (car g$sym*$29521$6Dw7t))
                                 (begin
                                   '#f
                                   (g$same-marks?$28842$6Dw7t
                                     g$mark*$29520$6Dw7t
                                     (car g$mark**$29522$6Dw7t)))
                                 '#f)
                             g$label*$29523$6Dw7t
                             (g$find$29510$6Dw7t
                               g$sym$29519$6Dw7t
                               g$mark*$29520$6Dw7t
                               (cdr g$sym*$29521$6Dw7t)
                               (cdr g$mark**$29522$6Dw7t)
                               (cdr g$label*$29523$6Dw7t))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$28791$6Dw7t g$rib$29506$6Dw7t)
              (g$assertion-violation$20490$6Dw7t
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$29506$6Dw7t)
              (void))
            ((case-lambda
               ((g$sym$29511$6Dw7t g$mark*$29512$6Dw7t)
                ((case-lambda
                   ((g$sym*$29513$6Dw7t)
                    ((case-lambda
                       ((g$t$29514$6Dw7t)
                        (if g$t$29514$6Dw7t
                          ((case-lambda
                             ((g$p$29515$6Dw7t)
                              (if (not (eq? g$label$29508$6Dw7t
                                            g$p$29515$6Dw7t))
                                (g$syntax-violation$29458$6Dw7t
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$29507$6Dw7t)
                                (void))))
                           g$t$29514$6Dw7t)
                          ((case-lambda
                             ((g$t$29516$6Dw7t)
                              (if g$t$29516$6Dw7t
                                ((case-lambda
                                   ((g$p$29517$6Dw7t)
                                    (if (not (eq? g$label$29508$6Dw7t
                                                  (car g$p$29517$6Dw7t)))
                                      (if (not g$sd?$29509$6Dw7t)
                                        (g$set-car!$25109$6Dw7t
                                          g$p$29517$6Dw7t
                                          g$label$29508$6Dw7t)
                                        ((case-lambda
                                           (()
                                            (begin
                                              '#f
                                              (g$syntax-violation$29458$6Dw7t
                                                '#f
                                                '"multiple definitions of identifier"
                                                g$id$29507$6Dw7t))))))
                                      (void))))
                                 g$t$29516$6Dw7t)
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (if (g$rib-cache$28792$6Dw7t
                                            g$rib$29506$6Dw7t)
                                        (g$hashtable-update!$24150$6Dw7t
                                          (g$rib-cache$28792$6Dw7t
                                            g$rib$29506$6Dw7t)
                                          g$sym$29511$6Dw7t
                                          (case-lambda
                                            ((g$e$29518$6Dw7t)
                                             (cons
                                               (cons
                                                 g$mark*$29512$6Dw7t
                                                 g$label$29508$6Dw7t)
                                               g$e$29518$6Dw7t)))
                                          '())
                                        (void))
                                      (g$set-rib-sym*!$28793$6Dw7t
                                        g$rib$29506$6Dw7t
                                        (cons
                                          g$sym$29511$6Dw7t
                                          g$sym*$29513$6Dw7t))
                                      (g$set-rib-mark**!$28794$6Dw7t
                                        g$rib$29506$6Dw7t
                                        (cons
                                          g$mark*$29512$6Dw7t
                                          (g$rib-mark**$28789$6Dw7t
                                            g$rib$29506$6Dw7t)))
                                      (g$set-rib-label*!$28795$6Dw7t
                                        g$rib$29506$6Dw7t
                                        (cons
                                          g$label$29508$6Dw7t
                                          (g$rib-label*$28790$6Dw7t
                                            g$rib$29506$6Dw7t))))))))))
                           (if (g$memq$23569$6Dw7t
                                 g$sym$29511$6Dw7t
                                 (g$rib-sym*$28788$6Dw7t
                                   g$rib$29506$6Dw7t))
                             (begin
                               '#f
                               (g$find$29510$6Dw7t
                                 g$sym$29511$6Dw7t
                                 g$mark*$29512$6Dw7t
                                 g$sym*$29513$6Dw7t
                                 (g$rib-mark**$28789$6Dw7t
                                   g$rib$29506$6Dw7t)
                                 (g$rib-label*$28790$6Dw7t
                                   g$rib$29506$6Dw7t)))
                             '#f)))))
                     (g$find-label$28800$6Dw7t
                       g$rib$29506$6Dw7t
                       g$sym$29511$6Dw7t
                       g$mark*$29512$6Dw7t))))
                 (g$rib-sym*$28788$6Dw7t g$rib$29506$6Dw7t))))
             (g$id->sym$28841$6Dw7t g$id$29507$6Dw7t)
             (g$stx-mark*$28815$6Dw7t g$id$29507$6Dw7t)))))))
   (g$extend-rib/nc!$28802$6Dw7t
     g$extend-rib/nc!$32814$6Dw7t
     (case-lambda
       ((g$rib$29524$6Dw7t g$id$29525$6Dw7t g$label$29526$6Dw7t)
        ((case-lambda
           ((g$sym$29527$6Dw7t g$mark*$29528$6Dw7t)
            ((case-lambda
               ((g$sym*$29529$6Dw7t)
                (begin
                  (if (g$rib-cache$28792$6Dw7t g$rib$29524$6Dw7t)
                    (g$hashtable-update!$24150$6Dw7t
                      (g$rib-cache$28792$6Dw7t g$rib$29524$6Dw7t)
                      g$sym$29527$6Dw7t
                      (case-lambda
                        ((g$e$29530$6Dw7t)
                         (cons
                           (cons
                             g$mark*$29528$6Dw7t
                             g$label$29526$6Dw7t)
                           g$e$29530$6Dw7t)))
                      '())
                    (void))
                  (g$set-rib-sym*!$28793$6Dw7t
                    g$rib$29524$6Dw7t
                    (cons g$sym$29527$6Dw7t g$sym*$29529$6Dw7t))
                  (g$set-rib-mark**!$28794$6Dw7t
                    g$rib$29524$6Dw7t
                    (cons
                      g$mark*$29528$6Dw7t
                      (g$rib-mark**$28789$6Dw7t g$rib$29524$6Dw7t)))
                  (g$set-rib-label*!$28795$6Dw7t
                    g$rib$29524$6Dw7t
                    (cons
                      g$label$29526$6Dw7t
                      (g$rib-label*$28790$6Dw7t g$rib$29524$6Dw7t))))))
             (g$rib-sym*$28788$6Dw7t g$rib$29524$6Dw7t))))
         (g$id->sym$28841$6Dw7t g$id$29525$6Dw7t)
         (g$stx-mark*$28815$6Dw7t g$id$29525$6Dw7t)))))
   (g$make-rib-map$28803$6Dw7t
     g$make-rib-map$32815$6Dw7t
     (case-lambda
       ((g$sym*$29531$6Dw7t)
        ((case-lambda
           ((g$ht$29532$6Dw7t)
            ((letrec ((g$f$29533$6Dw7t
                        (case-lambda
                          ((g$i$29534$6Dw7t g$sym*$29535$6Dw7t)
                           (if (null? g$sym*$29535$6Dw7t)
                             g$ht$29532$6Dw7t
                             (begin
                               (g$hashtable-update!$24150$6Dw7t
                                 g$ht$29532$6Dw7t
                                 (car g$sym*$29535$6Dw7t)
                                 (case-lambda
                                   ((g$x$29536$6Dw7t)
                                    (cons
                                      g$i$29534$6Dw7t
                                      g$x$29536$6Dw7t)))
                                 '())
                               (g$f$29533$6Dw7t
                                 (+ g$i$29534$6Dw7t '1)
                                 (cdr g$sym*$29535$6Dw7t))))))))
               g$f$29533$6Dw7t)
             '0
             g$sym*$29531$6Dw7t)))
         (g$make-eq-hashtable$24143$6Dw7t)))))
   (g$seal-rib!$28804$6Dw7t
     g$seal-rib!$32816$6Dw7t
     (case-lambda
       ((g$rib$29537$6Dw7t)
        ((case-lambda
           ((g$sym*$29538$6Dw7t)
            (if (not (null? g$sym*$29538$6Dw7t))
              (begin
                (g$set-rib-sym*!$28793$6Dw7t
                  g$rib$29537$6Dw7t
                  (g$list->vector$24034$6Dw7t g$sym*$29538$6Dw7t))
                (g$set-rib-mark**!$28794$6Dw7t
                  g$rib$29537$6Dw7t
                  (g$list->vector$24034$6Dw7t
                    (g$rib-mark**$28789$6Dw7t g$rib$29537$6Dw7t)))
                (g$set-rib-label*!$28795$6Dw7t
                  g$rib$29537$6Dw7t
                  (g$list->vector$24034$6Dw7t
                    (g$rib-label*$28790$6Dw7t g$rib$29537$6Dw7t)))
                (g$set-rib-sealed/freq!$28796$6Dw7t
                  g$rib$29537$6Dw7t
                  (g$make-rib-map$28803$6Dw7t g$sym*$29538$6Dw7t)))
              (void))))
         (g$rib-sym*$28788$6Dw7t g$rib$29537$6Dw7t)))))
   (g$unseal-rib!$28805$6Dw7t
     g$unseal-rib!$32817$6Dw7t
     (case-lambda
       ((g$rib$29539$6Dw7t)
        (if (g$rib-sealed/freq$28791$6Dw7t g$rib$29539$6Dw7t)
          (begin
            (g$set-rib-sealed/freq!$28796$6Dw7t g$rib$29539$6Dw7t '#f)
            (g$set-rib-sym*!$28793$6Dw7t
              g$rib$29539$6Dw7t
              (g$vector->list$24041$6Dw7t
                (g$rib-sym*$28788$6Dw7t g$rib$29539$6Dw7t)))
            (g$set-rib-mark**!$28794$6Dw7t
              g$rib$29539$6Dw7t
              (g$vector->list$24041$6Dw7t
                (g$rib-mark**$28789$6Dw7t g$rib$29539$6Dw7t)))
            (g$set-rib-label*!$28795$6Dw7t
              g$rib$29539$6Dw7t
              (g$vector->list$24041$6Dw7t
                (g$rib-label*$28790$6Dw7t g$rib$29539$6Dw7t))))
          (void)))))
   (g$make-full-rib$28806$6Dw7t
     g$make-full-rib$32818$6Dw7t
     (case-lambda
       ((g$id*$29540$6Dw7t g$label*$29541$6Dw7t)
        ((case-lambda
           ((g$r$29542$6Dw7t)
            (begin
              (g$seal-rib!$28804$6Dw7t g$r$29542$6Dw7t)
              g$r$29542$6Dw7t)))
         (g$make-rib$28787$6Dw7t
           (g$map$23581$6Dw7t g$id->sym$28841$6Dw7t g$id*$29540$6Dw7t)
           (g$map$23581$6Dw7t g$stx-mark*$28815$6Dw7t g$id*$29540$6Dw7t)
           g$label*$29541$6Dw7t
           '#f
           '#f)))))
   (g$10235$28807$6Dw7t
     g$10235$32819$6Dw7t
     (make-record-type-descriptor
       'stx
       '#f
       'g$10238$6Dw7t
       '#t
       '#t
       '#((mutable expr)
          (mutable mark*)
          (mutable subst*)
          (mutable ae*))))
   (g$10237$28808$6Dw7t g$10237$32820$6Dw7t '#f)
   (g$10236$28809$6Dw7t
     g$10236$32821$6Dw7t
     (make-record-constructor-descriptor
       g$10235$28807$6Dw7t
       '#f
       g$10237$28808$6Dw7t))
   (g$stx?$28812$6Dw7t
     g$stx?$32822$6Dw7t
     (record-predicate g$10235$28807$6Dw7t))
   (g$make-stx$28813$6Dw7t
     g$make-stx$32823$6Dw7t
     (record-constructor g$10236$28809$6Dw7t))
   (g$stx-expr$28814$6Dw7t
     g$stx-expr$32824$6Dw7t
     (record-accessor g$10235$28807$6Dw7t '0))
   (g$stx-mark*$28815$6Dw7t
     g$stx-mark*$32825$6Dw7t
     (record-accessor g$10235$28807$6Dw7t '1))
   (g$stx-subst*$28816$6Dw7t
     g$stx-subst*$32826$6Dw7t
     (record-accessor g$10235$28807$6Dw7t '2))
   (g$stx-ae*$28817$6Dw7t
     g$stx-ae*$32827$6Dw7t
     (record-accessor g$10235$28807$6Dw7t '3))
   (g$set-stx-expr!$28818$6Dw7t
     g$set-stx-expr!$32828$6Dw7t
     (record-mutator g$10235$28807$6Dw7t '0))
   (g$set-stx-mark*!$28819$6Dw7t
     g$set-stx-mark*!$32829$6Dw7t
     (record-mutator g$10235$28807$6Dw7t '1))
   (g$set-stx-subst*!$28820$6Dw7t
     g$set-stx-subst*!$32830$6Dw7t
     (record-mutator g$10235$28807$6Dw7t '2))
   (g$set-stx-ae*!$28821$6Dw7t
     g$set-stx-ae*!$32831$6Dw7t
     (record-mutator g$10235$28807$6Dw7t '3))
   (g$rp$28822$6Dw7t
     g$rp$32832$6Dw7t
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$29543$6Dw7t g$p$29544$6Dw7t g$wr$29545$6Dw7t)
          (begin
            (display '"#<syntax " g$p$29544$6Dw7t)
            (write
              (g$stx->datum$28851$6Dw7t g$x$29543$6Dw7t)
              g$p$29544$6Dw7t)
            ((case-lambda
               ((g$expr$29546$6Dw7t)
                (if (annotation? g$expr$29546$6Dw7t)
                  ((case-lambda
                     ((g$src$29547$6Dw7t)
                      (if (pair? g$src$29547$6Dw7t)
                        (begin
                          (display '" (" g$p$29544$6Dw7t)
                          (display
                            (cdr g$src$29547$6Dw7t)
                            g$p$29544$6Dw7t)
                          (display '" of " g$p$29544$6Dw7t)
                          (display
                            (car g$src$29547$6Dw7t)
                            g$p$29544$6Dw7t)
                          (display '")" g$p$29544$6Dw7t))
                        (void))))
                   (annotation-source g$expr$29546$6Dw7t))
                  (void))))
             (g$stx-expr$28814$6Dw7t g$x$29543$6Dw7t))
            (display '">" g$p$29544$6Dw7t))))))
   (g$datum->stx$28823$6Dw7t
     g$datum->stx$32833$6Dw7t
     (case-lambda
       ((g$id$29548$6Dw7t g$datum$29549$6Dw7t)
        (g$make-stx$28813$6Dw7t
          g$datum$29549$6Dw7t
          (g$stx-mark*$28815$6Dw7t g$id$29548$6Dw7t)
          (g$stx-subst*$28816$6Dw7t g$id$29548$6Dw7t)
          (g$stx-ae*$28817$6Dw7t g$id$29548$6Dw7t)))))
   (g$gen-mark$28824$6Dw7t
     g$gen-mark$32834$6Dw7t
     (case-lambda (() (g$string$24021$6Dw7t '#\m))))
   (g$anti-mark$28825$6Dw7t g$anti-mark$32835$6Dw7t '#f)
   (g$anti-mark?$28826$6Dw7t g$anti-mark?$32836$6Dw7t not)
   (g$join-wraps$28827$6Dw7t
     g$join-wraps$32837$6Dw7t
     (case-lambda
       ((g$m1*$29550$6Dw7t
          g$s1*$29551$6Dw7t
          g$ae1*$29552$6Dw7t
          g$e$29553$6Dw7t)
        (letrec* ((g$cancel$29554$6Dw7t
                    (case-lambda
                      ((g$ls1$29558$6Dw7t g$ls2$29559$6Dw7t)
                       ((letrec ((g$f$29560$6Dw7t
                                   (case-lambda
                                     ((g$x$29561$6Dw7t
                                        g$ls1$29562$6Dw7t)
                                      (if (null? g$ls1$29562$6Dw7t)
                                        (cdr g$ls2$29559$6Dw7t)
                                        (cons
                                          g$x$29561$6Dw7t
                                          (g$f$29560$6Dw7t
                                            (car g$ls1$29562$6Dw7t)
                                            (cdr g$ls1$29562$6Dw7t))))))))
                          g$f$29560$6Dw7t)
                        (car g$ls1$29558$6Dw7t)
                        (cdr g$ls1$29558$6Dw7t))))))
          ((case-lambda
             ((g$m2*$29555$6Dw7t g$s2*$29556$6Dw7t g$ae2*$29557$6Dw7t)
              (if (if (not (null? g$m1*$29550$6Dw7t))
                    (if (not (null? g$m2*$29555$6Dw7t))
                      (begin
                        '#f
                        (g$anti-mark?$28826$6Dw7t
                          (car g$m2*$29555$6Dw7t)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$29554$6Dw7t
                    g$m1*$29550$6Dw7t
                    g$m2*$29555$6Dw7t)
                  (g$cancel$29554$6Dw7t
                    g$s1*$29551$6Dw7t
                    g$s2*$29556$6Dw7t)
                  (g$cancel$29554$6Dw7t
                    g$ae1*$29552$6Dw7t
                    g$ae2*$29557$6Dw7t))
                (values
                  (g$append$23587$6Dw7t
                    g$m1*$29550$6Dw7t
                    g$m2*$29555$6Dw7t)
                  (g$append$23587$6Dw7t
                    g$s1*$29551$6Dw7t
                    g$s2*$29556$6Dw7t)
                  (g$append$23587$6Dw7t
                    g$ae1*$29552$6Dw7t
                    g$ae2*$29557$6Dw7t)))))
           (g$stx-mark*$28815$6Dw7t g$e$29553$6Dw7t)
           (g$stx-subst*$28816$6Dw7t g$e$29553$6Dw7t)
           (g$stx-ae*$28817$6Dw7t g$e$29553$6Dw7t))))))
   (g$mkstx$28828$6Dw7t
     g$mkstx$32838$6Dw7t
     (case-lambda
       ((g$e$29563$6Dw7t
          g$m*$29564$6Dw7t
          g$s*$29565$6Dw7t
          g$ae*$29566$6Dw7t)
        (if (if (g$stx?$28812$6Dw7t g$e$29563$6Dw7t)
              (begin
                '#f
                (not (g$top-marked?$28774$6Dw7t g$m*$29564$6Dw7t)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$28827$6Dw7t
                 g$m*$29564$6Dw7t
                 g$s*$29565$6Dw7t
                 g$ae*$29566$6Dw7t
                 g$e$29563$6Dw7t)))
            (case-lambda
              ((g$m*$29570$6Dw7t g$s*$29571$6Dw7t g$ae*$29572$6Dw7t)
               ((case-lambda
                  ((g$ae*$29573$6Dw7t g$s*$29574$6Dw7t g$m*$29575$6Dw7t)
                   (g$make-stx$28813$6Dw7t
                     (g$stx-expr$28814$6Dw7t g$e$29563$6Dw7t)
                     g$m*$29575$6Dw7t
                     g$s*$29574$6Dw7t
                     g$ae*$29573$6Dw7t)))
                g$ae*$29572$6Dw7t
                g$s*$29571$6Dw7t
                g$m*$29570$6Dw7t))))
          (g$make-stx$28813$6Dw7t
            g$e$29563$6Dw7t
            g$m*$29564$6Dw7t
            g$s*$29565$6Dw7t
            g$ae*$29566$6Dw7t)))))
   (g$add-mark$28829$6Dw7t
     g$add-mark$32839$6Dw7t
     (case-lambda
       ((g$m$29576$6Dw7t g$e$29577$6Dw7t g$ae$29578$6Dw7t)
        (g$mkstx$28828$6Dw7t
          g$e$29577$6Dw7t
          (list g$m$29576$6Dw7t)
          '(shift)
          (list g$ae$29578$6Dw7t)))))
   (g$add-subst$28830$6Dw7t
     g$add-subst$32840$6Dw7t
     (case-lambda
       ((g$subst$29579$6Dw7t g$e$29580$6Dw7t)
        (g$mkstx$28828$6Dw7t
          g$e$29580$6Dw7t
          '()
          (list g$subst$29579$6Dw7t)
          '()))))
   (g$syntax-kind?$28831$6Dw7t
     g$syntax-kind?$32841$6Dw7t
     (case-lambda
       ((g$x$29581$6Dw7t g$p?$29582$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$29581$6Dw7t)
          (g$syntax-kind?$28831$6Dw7t
            (g$stx-expr$28814$6Dw7t g$x$29581$6Dw7t)
            g$p?$29582$6Dw7t)
          (if (annotation? g$x$29581$6Dw7t)
            (g$syntax-kind?$28831$6Dw7t
              (annotation-expression g$x$29581$6Dw7t)
              g$p?$29582$6Dw7t)
            ((case-lambda
               (()
                (begin '#f (g$p?$29582$6Dw7t g$x$29581$6Dw7t))))))))))
   (g$syntax-vector->list$28832$6Dw7t
     g$syntax-vector->list$32842$6Dw7t
     (case-lambda
       ((g$x$29583$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$29583$6Dw7t)
          ((case-lambda
             ((g$ls$29584$6Dw7t
                g$m*$29585$6Dw7t
                g$s*$29586$6Dw7t
                g$ae*$29587$6Dw7t)
              (g$map$23581$6Dw7t
                (case-lambda
                  ((g$x$29588$6Dw7t)
                   (g$mkstx$28828$6Dw7t
                     g$x$29588$6Dw7t
                     g$m*$29585$6Dw7t
                     g$s*$29586$6Dw7t
                     g$ae*$29587$6Dw7t)))
                g$ls$29584$6Dw7t)))
           (g$syntax-vector->list$28832$6Dw7t
             (g$stx-expr$28814$6Dw7t g$x$29583$6Dw7t))
           (g$stx-mark*$28815$6Dw7t g$x$29583$6Dw7t)
           (g$stx-subst*$28816$6Dw7t g$x$29583$6Dw7t)
           (g$stx-ae*$28817$6Dw7t g$x$29583$6Dw7t))
          (if (annotation? g$x$29583$6Dw7t)
            (g$syntax-vector->list$28832$6Dw7t
              (annotation-expression g$x$29583$6Dw7t))
            (if (g$vector?$24005$6Dw7t g$x$29583$6Dw7t)
              (g$vector->list$24041$6Dw7t g$x$29583$6Dw7t)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'syntax-vector->list
                      '"BUG: not a syntax vector"
                      g$x$29583$6Dw7t)))))))))))
   (g$syntax-pair?$28833$6Dw7t
     g$syntax-pair?$32843$6Dw7t
     (case-lambda
       ((g$x$29589$6Dw7t)
        (g$syntax-kind?$28831$6Dw7t g$x$29589$6Dw7t pair?))))
   (g$syntax-vector?$28834$6Dw7t
     g$syntax-vector?$32844$6Dw7t
     (case-lambda
       ((g$x$29590$6Dw7t)
        (g$syntax-kind?$28831$6Dw7t
          g$x$29590$6Dw7t
          g$vector?$24005$6Dw7t))))
   (g$syntax-null?$28835$6Dw7t
     g$syntax-null?$32845$6Dw7t
     (case-lambda
       ((g$x$29591$6Dw7t)
        (g$syntax-kind?$28831$6Dw7t g$x$29591$6Dw7t null?))))
   (g$syntax-list?$28836$6Dw7t
     g$syntax-list?$32846$6Dw7t
     (case-lambda
       ((g$x$29592$6Dw7t)
        ((case-lambda
           ((g$t$29593$6Dw7t)
            (if g$t$29593$6Dw7t
              g$t$29593$6Dw7t
              (begin
                '#f
                (if (g$syntax-pair?$28833$6Dw7t g$x$29592$6Dw7t)
                  (begin
                    '#f
                    (g$syntax-list?$28836$6Dw7t
                      (g$syntax-cdr$28838$6Dw7t g$x$29592$6Dw7t)))
                  '#f)))))
         (g$syntax-null?$28835$6Dw7t g$x$29592$6Dw7t)))))
   (g$syntax-car$28837$6Dw7t
     g$syntax-car$32847$6Dw7t
     (case-lambda
       ((g$x$29594$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$29594$6Dw7t)
          (g$mkstx$28828$6Dw7t
            (g$syntax-car$28837$6Dw7t
              (g$stx-expr$28814$6Dw7t g$x$29594$6Dw7t))
            (g$stx-mark*$28815$6Dw7t g$x$29594$6Dw7t)
            (g$stx-subst*$28816$6Dw7t g$x$29594$6Dw7t)
            (g$stx-ae*$28817$6Dw7t g$x$29594$6Dw7t))
          (if (annotation? g$x$29594$6Dw7t)
            (g$syntax-car$28837$6Dw7t
              (annotation-expression g$x$29594$6Dw7t))
            (if (pair? g$x$29594$6Dw7t)
              (car g$x$29594$6Dw7t)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'syntax-car
                      '"BUG: not a pair"
                      g$x$29594$6Dw7t)))))))))))
   (g$syntax-cdr$28838$6Dw7t
     g$syntax-cdr$32848$6Dw7t
     (case-lambda
       ((g$x$29595$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$29595$6Dw7t)
          (g$mkstx$28828$6Dw7t
            (g$syntax-cdr$28838$6Dw7t
              (g$stx-expr$28814$6Dw7t g$x$29595$6Dw7t))
            (g$stx-mark*$28815$6Dw7t g$x$29595$6Dw7t)
            (g$stx-subst*$28816$6Dw7t g$x$29595$6Dw7t)
            (g$stx-ae*$28817$6Dw7t g$x$29595$6Dw7t))
          (if (annotation? g$x$29595$6Dw7t)
            (g$syntax-cdr$28838$6Dw7t
              (annotation-expression g$x$29595$6Dw7t))
            (if (pair? g$x$29595$6Dw7t)
              (cdr g$x$29595$6Dw7t)
              ((case-lambda
                 (()
                  (begin
                    '#f
                    (g$assertion-violation$20490$6Dw7t
                      'syntax-cdr
                      '"BUG: not a pair"
                      g$x$29595$6Dw7t)))))))))))
   (g$syntax->list$28839$6Dw7t
     g$syntax->list$32849$6Dw7t
     (case-lambda
       ((g$x$29596$6Dw7t)
        (if (g$syntax-pair?$28833$6Dw7t g$x$29596$6Dw7t)
          (cons
            (g$syntax-car$28837$6Dw7t g$x$29596$6Dw7t)
            (g$syntax->list$28839$6Dw7t
              (g$syntax-cdr$28838$6Dw7t g$x$29596$6Dw7t)))
          (if (g$syntax-null?$28835$6Dw7t g$x$29596$6Dw7t)
            '()
            (g$assertion-violation$20490$6Dw7t
              'syntax->list
              '"BUG: invalid argument"
              g$x$29596$6Dw7t))))))
   (g$id?$28840$6Dw7t
     g$id?$32850$6Dw7t
     (case-lambda
       ((g$x$29597$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$29597$6Dw7t)
          (begin
            '#f
            ((case-lambda
               ((g$expr$29598$6Dw7t)
                (g$symbol?$24007$6Dw7t
                  (if (annotation? g$expr$29598$6Dw7t)
                    (annotation-stripped g$expr$29598$6Dw7t)
                    g$expr$29598$6Dw7t))))
             (g$stx-expr$28814$6Dw7t g$x$29597$6Dw7t)))
          '#f))))
   (g$id->sym$28841$6Dw7t
     g$id->sym$32851$6Dw7t
     (case-lambda
       ((g$x$29599$6Dw7t)
        (begin
          (if (not (g$stx?$28812$6Dw7t g$x$29599$6Dw7t))
            (g$error$20491$6Dw7t
              'id->sym
              '"BUG in ikarus: not an id"
              g$x$29599$6Dw7t)
            (void))
          ((case-lambda
             ((g$expr$29600$6Dw7t)
              ((case-lambda
                 ((g$sym$29601$6Dw7t)
                  (if (g$symbol?$24007$6Dw7t g$sym$29601$6Dw7t)
                    g$sym$29601$6Dw7t
                    (g$error$20491$6Dw7t
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$29599$6Dw7t))))
               (if (annotation? g$expr$29600$6Dw7t)
                 (annotation-stripped g$expr$29600$6Dw7t)
                 g$expr$29600$6Dw7t))))
           (g$stx-expr$28814$6Dw7t g$x$29599$6Dw7t))))))
   (g$same-marks?$28842$6Dw7t
     g$same-marks?$32852$6Dw7t
     (case-lambda
       ((g$x$29602$6Dw7t g$y$29603$6Dw7t)
        ((case-lambda
           ((g$t$29604$6Dw7t)
            (if g$t$29604$6Dw7t
              g$t$29604$6Dw7t
              (begin
                '#f
                (if (pair? g$x$29602$6Dw7t)
                  (if (pair? g$y$29603$6Dw7t)
                    (if (eq? (car g$x$29602$6Dw7t)
                             (car g$y$29603$6Dw7t))
                      (begin
                        '#f
                        (g$same-marks?$28842$6Dw7t
                          (cdr g$x$29602$6Dw7t)
                          (cdr g$y$29603$6Dw7t)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$29602$6Dw7t)
           (begin '#f (null? g$y$29603$6Dw7t))
           '#f)))))
   (g$bound-id=?$28843$6Dw7t
     g$bound-id=?$32853$6Dw7t
     (case-lambda
       ((g$x$29605$6Dw7t g$y$29606$6Dw7t)
        (if (eq? (g$id->sym$28841$6Dw7t g$x$29605$6Dw7t)
                 (g$id->sym$28841$6Dw7t g$y$29606$6Dw7t))
          (begin
            '#f
            (g$same-marks?$28842$6Dw7t
              (g$stx-mark*$28815$6Dw7t g$x$29605$6Dw7t)
              (g$stx-mark*$28815$6Dw7t g$y$29606$6Dw7t)))
          '#f))))
   (g$free-id=?$28844$6Dw7t
     g$free-id=?$32854$6Dw7t
     (case-lambda
       ((g$i$29607$6Dw7t g$j$29608$6Dw7t)
        ((case-lambda
           ((g$t0$29609$6Dw7t g$t1$29610$6Dw7t)
            (if ((case-lambda
                   ((g$t$29611$6Dw7t)
                    (if g$t$29611$6Dw7t
                      g$t$29611$6Dw7t
                      (begin '#f g$t1$29610$6Dw7t))))
                 g$t0$29609$6Dw7t)
              (eq? g$t0$29609$6Dw7t g$t1$29610$6Dw7t)
              (eq? (g$id->sym$28841$6Dw7t g$i$29607$6Dw7t)
                   (g$id->sym$28841$6Dw7t g$j$29608$6Dw7t)))))
         (g$id->real-label$28854$6Dw7t g$i$29607$6Dw7t)
         (g$id->real-label$28854$6Dw7t g$j$29608$6Dw7t)))))
   (g$valid-bound-ids?$28845$6Dw7t
     g$valid-bound-ids?$32855$6Dw7t
     (case-lambda
       ((g$id*$29612$6Dw7t)
        (if (g$for-all$23579$6Dw7t g$id?$28840$6Dw7t g$id*$29612$6Dw7t)
          (begin
            '#f
            (g$distinct-bound-ids?$28846$6Dw7t g$id*$29612$6Dw7t))
          '#f))))
   (g$distinct-bound-ids?$28846$6Dw7t
     g$distinct-bound-ids?$32856$6Dw7t
     (case-lambda
       ((g$id*$29613$6Dw7t)
        ((case-lambda
           ((g$t$29614$6Dw7t)
            (if g$t$29614$6Dw7t
              g$t$29614$6Dw7t
              (begin
                '#f
                (if (not (g$bound-id-member?$28847$6Dw7t
                           (car g$id*$29613$6Dw7t)
                           (cdr g$id*$29613$6Dw7t)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$28846$6Dw7t
                      (cdr g$id*$29613$6Dw7t)))
                  '#f)))))
         (null? g$id*$29613$6Dw7t)))))
   (g$bound-id-member?$28847$6Dw7t
     g$bound-id-member?$32857$6Dw7t
     (case-lambda
       ((g$id$29615$6Dw7t g$id*$29616$6Dw7t)
        (if (pair? g$id*$29616$6Dw7t)
          (begin
            '#f
            ((case-lambda
               ((g$t$29617$6Dw7t)
                (if g$t$29617$6Dw7t
                  g$t$29617$6Dw7t
                  (begin
                    '#f
                    (g$bound-id-member?$28847$6Dw7t
                      g$id$29615$6Dw7t
                      (cdr g$id*$29616$6Dw7t))))))
             (g$bound-id=?$28843$6Dw7t
               g$id$29615$6Dw7t
               (car g$id*$29616$6Dw7t))))
          '#f))))
   (g$self-evaluating?$28848$6Dw7t
     g$self-evaluating?$32858$6Dw7t
     (case-lambda
       ((g$x$29618$6Dw7t)
        ((case-lambda
           ((g$t$29619$6Dw7t)
            (if g$t$29619$6Dw7t
              g$t$29619$6Dw7t
              ((case-lambda
                 ((g$t$29620$6Dw7t)
                  (if g$t$29620$6Dw7t
                    g$t$29620$6Dw7t
                    ((case-lambda
                       ((g$t$29621$6Dw7t)
                        (if g$t$29621$6Dw7t
                          g$t$29621$6Dw7t
                          ((case-lambda
                             ((g$t$29622$6Dw7t)
                              (if g$t$29622$6Dw7t
                                g$t$29622$6Dw7t
                                (begin
                                  '#f
                                  (g$bytevector?$24006$6Dw7t
                                    g$x$29618$6Dw7t)))))
                           (g$boolean?$24008$6Dw7t g$x$29618$6Dw7t)))))
                     (g$char?$24004$6Dw7t g$x$29618$6Dw7t)))))
               (g$string?$24003$6Dw7t g$x$29618$6Dw7t)))))
         (g$number?$25047$6Dw7t g$x$29618$6Dw7t)))))
   (g$strip-annotations$28849$6Dw7t
     g$strip-annotations$32859$6Dw7t
     (case-lambda
       ((g$x$29623$6Dw7t)
        (if (pair? g$x$29623$6Dw7t)
          (cons
            (g$strip-annotations$28849$6Dw7t (car g$x$29623$6Dw7t))
            (g$strip-annotations$28849$6Dw7t (cdr g$x$29623$6Dw7t)))
          (if (g$vector?$24005$6Dw7t g$x$29623$6Dw7t)
            (g$vector-map$24094$6Dw7t
              g$strip-annotations$28849$6Dw7t
              g$x$29623$6Dw7t)
            (if (annotation? g$x$29623$6Dw7t)
              (annotation-stripped g$x$29623$6Dw7t)
              ((case-lambda (() (begin '#f g$x$29623$6Dw7t))))))))))
   (g$strip$28850$6Dw7t
     g$strip$32860$6Dw7t
     (case-lambda
       ((g$x$29624$6Dw7t g$m*$29625$6Dw7t)
        (if (g$top-marked?$28774$6Dw7t g$m*$29625$6Dw7t)
          (if ((case-lambda
                 ((g$t$29626$6Dw7t)
                  (if g$t$29626$6Dw7t
                    g$t$29626$6Dw7t
                    ((case-lambda
                       ((g$t$29627$6Dw7t)
                        (if g$t$29627$6Dw7t
                          g$t$29627$6Dw7t
                          (begin
                            '#f
                            (if (g$vector?$24005$6Dw7t g$x$29624$6Dw7t)
                              (if (g$>$25072$6Dw7t
                                    (g$vector-length$24039$6Dw7t
                                      g$x$29624$6Dw7t)
                                    '0)
                                (begin
                                  '#f
                                  (annotation?
                                    (g$vector-ref$24036$6Dw7t
                                      g$x$29624$6Dw7t
                                      '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$29624$6Dw7t)
                       (begin '#f (annotation? (car g$x$29624$6Dw7t)))
                       '#f)))))
               (annotation? g$x$29624$6Dw7t))
            (g$strip-annotations$28849$6Dw7t g$x$29624$6Dw7t)
            g$x$29624$6Dw7t)
          ((letrec ((g$f$29628$6Dw7t
                      (case-lambda
                        ((g$x$29629$6Dw7t)
                         (if (g$stx?$28812$6Dw7t g$x$29629$6Dw7t)
                           (g$strip$28850$6Dw7t
                             (g$stx-expr$28814$6Dw7t g$x$29629$6Dw7t)
                             (g$stx-mark*$28815$6Dw7t g$x$29629$6Dw7t))
                           (if (annotation? g$x$29629$6Dw7t)
                             (annotation-stripped g$x$29629$6Dw7t)
                             (if (pair? g$x$29629$6Dw7t)
                               ((case-lambda
                                  ((g$a$29630$6Dw7t g$d$29631$6Dw7t)
                                   (if (if (eq? g$a$29630$6Dw7t
                                                (car g$x$29629$6Dw7t))
                                         (begin
                                           '#f
                                           (eq? g$d$29631$6Dw7t
                                                (cdr g$x$29629$6Dw7t)))
                                         '#f)
                                     g$x$29629$6Dw7t
                                     (cons
                                       g$a$29630$6Dw7t
                                       g$d$29631$6Dw7t))))
                                (g$f$29628$6Dw7t (car g$x$29629$6Dw7t))
                                (g$f$29628$6Dw7t (cdr g$x$29629$6Dw7t)))
                               (if (g$vector?$24005$6Dw7t
                                     g$x$29629$6Dw7t)
                                 ((case-lambda
                                    ((g$old$29632$6Dw7t)
                                     ((case-lambda
                                        ((g$new$29633$6Dw7t)
                                         (if (g$for-all$23579$6Dw7t
                                               eq?
                                               g$old$29632$6Dw7t
                                               g$new$29633$6Dw7t)
                                           g$x$29629$6Dw7t
                                           (g$list->vector$24034$6Dw7t
                                             g$new$29633$6Dw7t))))
                                      (g$map$23581$6Dw7t
                                        g$f$29628$6Dw7t
                                        g$old$29632$6Dw7t))))
                                  (g$vector->list$24041$6Dw7t
                                    g$x$29629$6Dw7t))
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       g$x$29629$6Dw7t))))))))))))
             g$f$29628$6Dw7t)
           g$x$29624$6Dw7t)))))
   (g$stx->datum$28851$6Dw7t
     g$stx->datum$32861$6Dw7t
     (case-lambda
       ((g$x$29634$6Dw7t) (g$strip$28850$6Dw7t g$x$29634$6Dw7t '()))))
   (g$same-marks*?$28852$6Dw7t
     g$same-marks*?$32862$6Dw7t
     (case-lambda
       ((g$mark*$29635$6Dw7t g$mark**$29636$6Dw7t g$si$29637$6Dw7t)
        (if (null? g$si$29637$6Dw7t)
          '#f
          (if (g$same-marks?$28842$6Dw7t
                g$mark*$29635$6Dw7t
                (g$vector-ref$24036$6Dw7t
                  g$mark**$29636$6Dw7t
                  (car g$si$29637$6Dw7t)))
            (car g$si$29637$6Dw7t)
            (g$same-marks*?$28852$6Dw7t
              g$mark*$29635$6Dw7t
              g$mark**$29636$6Dw7t
              (cdr g$si$29637$6Dw7t)))))))
   (g$id->label$28853$6Dw7t
     g$id->label$32863$6Dw7t
     (case-lambda
       ((g$id$29638$6Dw7t)
        ((case-lambda
           ((g$t$29639$6Dw7t)
            (if g$t$29639$6Dw7t
              g$t$29639$6Dw7t
              (begin
                '#f
                ((case-lambda
                   ((g$t$29640$6Dw7t)
                    (if g$t$29640$6Dw7t
                      ((case-lambda
                         ((g$env$29641$6Dw7t)
                          ((case-lambda
                             ((g$rib$29642$6Dw7t)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$28779$6Dw7t
                                     g$id$29638$6Dw7t
                                     g$rib$29642$6Dw7t
                                     '#f)))
                                (case-lambda
                                  ((g$lab$29645$6Dw7t
                                     g$_loc$29646$6Dw7t)
                                   ((case-lambda
                                      ((g$_loc$29647$6Dw7t
                                         g$lab$29648$6Dw7t)
                                       (begin
                                         (g$extend-rib!$28801$6Dw7t
                                           g$rib$29642$6Dw7t
                                           g$id$29638$6Dw7t
                                           g$lab$29648$6Dw7t
                                           '#t)
                                         g$lab$29648$6Dw7t)))
                                    g$_loc$29646$6Dw7t
                                    g$lab$29645$6Dw7t))))))
                           (g$interaction-env-rib$29423$6Dw7t
                             g$env$29641$6Dw7t))))
                       g$t$29640$6Dw7t)
                      ((case-lambda (() (begin '#f '#f)))))))
                 (g$top-level-context$29466$6Dw7t))))))
         (g$id->real-label$28854$6Dw7t g$id$29638$6Dw7t)))))
   (g$id->real-label$28854$6Dw7t
     g$id->real-label$32864$6Dw7t
     (case-lambda
       ((g$id$29649$6Dw7t)
        ((case-lambda
           ((g$sym$29650$6Dw7t)
            ((letrec ((g$search$29651$6Dw7t
                        (case-lambda
                          ((g$subst*$29652$6Dw7t g$mark*$29653$6Dw7t)
                           (if (null? g$subst*$29652$6Dw7t)
                             '#f
                             (if (eq? (car g$subst*$29652$6Dw7t) 'shift)
                               (g$search$29651$6Dw7t
                                 (cdr g$subst*$29652$6Dw7t)
                                 (cdr g$mark*$29653$6Dw7t))
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     ((case-lambda
                                        ((g$rib$29654$6Dw7t)
                                         ((case-lambda
                                            ((g$t$29655$6Dw7t)
                                             (if g$t$29655$6Dw7t
                                               ((case-lambda
                                                  ((g$ht$29656$6Dw7t)
                                                   ((case-lambda
                                                      ((g$si$29657$6Dw7t)
                                                       ((case-lambda
                                                          ((g$i$29658$6Dw7t)
                                                           (if g$i$29658$6Dw7t
                                                             (g$vector-ref$24036$6Dw7t
                                                               (g$rib-label*$28790$6Dw7t
                                                                 g$rib$29654$6Dw7t)
                                                               g$i$29658$6Dw7t)
                                                             (g$search$29651$6Dw7t
                                                               (cdr g$subst*$29652$6Dw7t)
                                                               g$mark*$29653$6Dw7t))))
                                                        (if g$si$29657$6Dw7t
                                                          (begin
                                                            '#f
                                                            (g$same-marks*?$28852$6Dw7t
                                                              g$mark*$29653$6Dw7t
                                                              (g$rib-mark**$28789$6Dw7t
                                                                g$rib$29654$6Dw7t)
                                                              (g$reverse$24043$6Dw7t
                                                                g$si$29657$6Dw7t)))
                                                          '#f))))
                                                    (g$hashtable-ref$24146$6Dw7t
                                                      g$ht$29656$6Dw7t
                                                      g$sym$29650$6Dw7t
                                                      '#f))))
                                                g$t$29655$6Dw7t)
                                               ((case-lambda
                                                  ((g$t$29659$6Dw7t)
                                                   (if g$t$29659$6Dw7t
                                                     g$t$29659$6Dw7t
                                                     (begin
                                                       '#f
                                                       ((case-lambda
                                                          (()
                                                           (begin
                                                             '#f
                                                             ((letrec ((g$f$29660$6Dw7t
                                                                         (case-lambda
                                                                           ((g$sym*$29661$6Dw7t
                                                                              g$mark**$29662$6Dw7t
                                                                              g$label*$29663$6Dw7t)
                                                                            (if (null?
                                                                                  g$sym*$29661$6Dw7t)
                                                                              (g$search$29651$6Dw7t
                                                                                (cdr g$subst*$29652$6Dw7t)
                                                                                g$mark*$29653$6Dw7t)
                                                                              (if (if (eq? (car g$sym*$29661$6Dw7t)
                                                                                           g$sym$29650$6Dw7t)
                                                                                    (begin
                                                                                      '#f
                                                                                      (g$same-marks?$28842$6Dw7t
                                                                                        (car g$mark**$29662$6Dw7t)
                                                                                        g$mark*$29653$6Dw7t))
                                                                                    '#f)
                                                                                (car g$label*$29663$6Dw7t)
                                                                                ((case-lambda
                                                                                   (()
                                                                                    (begin
                                                                                      '#f
                                                                                      (g$f$29660$6Dw7t
                                                                                        (cdr g$sym*$29661$6Dw7t)
                                                                                        (cdr g$mark**$29662$6Dw7t)
                                                                                        (cdr g$label*$29663$6Dw7t))))))))))))
                                                                g$f$29660$6Dw7t)
                                                              (g$rib-sym*$28788$6Dw7t
                                                                g$rib$29654$6Dw7t)
                                                              (g$rib-mark**$28789$6Dw7t
                                                                g$rib$29654$6Dw7t)
                                                              (g$rib-label*$28790$6Dw7t
                                                                g$rib$29654$6Dw7t))))))))))
                                                (g$find-label$28800$6Dw7t
                                                  g$rib$29654$6Dw7t
                                                  g$sym$29650$6Dw7t
                                                  g$mark*$29653$6Dw7t)))))
                                          (g$rib-sealed/freq$28791$6Dw7t
                                            g$rib$29654$6Dw7t))))
                                      (car g$subst*$29652$6Dw7t))))))))))))
               g$search$29651$6Dw7t)
             (g$stx-subst*$28816$6Dw7t g$id$29649$6Dw7t)
             (g$stx-mark*$28815$6Dw7t g$id$29649$6Dw7t))))
         (g$id->sym$28841$6Dw7t g$id$29649$6Dw7t)))))
   (g$label->binding$28855$6Dw7t
     g$label->binding$32865$6Dw7t
     (case-lambda
       ((g$x$29664$6Dw7t g$r$29665$6Dw7t)
        (if (not g$x$29664$6Dw7t)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$29666$6Dw7t)
              (if g$t$29666$6Dw7t
                ((case-lambda
                   ((g$b$29667$6Dw7t)
                    (if (if (pair? g$b$29667$6Dw7t)
                          (begin
                            '#f
                            (eq? (car g$b$29667$6Dw7t) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$23581$6Dw7t
                          g$bless$29301$6Dw7t
                          (cdr g$b$29667$6Dw7t)))
                      (if (if (pair? g$b$29667$6Dw7t)
                            (begin
                              '#f
                              (eq? (car g$b$29667$6Dw7t) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$29668$6Dw7t g$loc$29669$6Dw7t)
                            (cons
                              '$rtd
                              (symbol-value g$loc$29669$6Dw7t))))
                         (g$cadr$24045$6Dw7t g$b$29667$6Dw7t)
                         (g$cddr$24047$6Dw7t g$b$29667$6Dw7t))
                        ((case-lambda
                           (() (begin '#f g$b$29667$6Dw7t))))))))
                 g$t$29666$6Dw7t)
                ((case-lambda
                   ((g$t$29670$6Dw7t)
                    (if g$t$29670$6Dw7t
                      (cdr g$t$29670$6Dw7t)
                      ((case-lambda
                         ((g$t$29671$6Dw7t)
                          (if g$t$29671$6Dw7t
                            ((case-lambda
                               ((g$env$29672$6Dw7t)
                                ((case-lambda
                                   ((g$t$29673$6Dw7t)
                                    (if g$t$29673$6Dw7t
                                      ((case-lambda
                                         ((g$p$29674$6Dw7t)
                                          (g$cons*$23583$6Dw7t
                                            'lexical
                                            (cdr g$p$29674$6Dw7t)
                                            '#f)))
                                       g$t$29673$6Dw7t)
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            '(displaced-lexical
                                               .
                                               #f))))))))
                                 (g$assq$23565$6Dw7t
                                   g$x$29664$6Dw7t
                                   (g$interaction-env-locs$29425$6Dw7t
                                     g$env$29672$6Dw7t)))))
                             g$t$29671$6Dw7t)
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  '(displaced-lexical . #f))))))))
                       (g$top-level-context$29466$6Dw7t)))))
                 (g$assq$23565$6Dw7t
                   g$x$29664$6Dw7t
                   g$r$29665$6Dw7t)))))
           (g$imported-label->binding$28545$6Dw7t g$x$29664$6Dw7t))))))
   (g$make-binding$28856$6Dw7t g$make-binding$32866$6Dw7t cons)
   (g$binding-type$28857$6Dw7t g$binding-type$32867$6Dw7t car)
   (g$binding-value$28858$6Dw7t g$binding-value$32868$6Dw7t cdr)
   (g$raise-unbound-error$28859$6Dw7t
     g$raise-unbound-error$32869$6Dw7t
     (case-lambda
       ((g$id$29675$6Dw7t)
        (g$syntax-violation*$29457$6Dw7t
          '#f
          '"unbound identifier"
          g$id$29675$6Dw7t
          (g$make-undefined-violation$20358$6Dw7t)))))
   (g$syntax-type$28860$6Dw7t
     g$syntax-type$32870$6Dw7t
     (case-lambda
       ((g$e$29676$6Dw7t g$r$29677$6Dw7t)
        (if (g$id?$28840$6Dw7t g$e$29676$6Dw7t)
          ((case-lambda
             ((g$id$29678$6Dw7t)
              ((case-lambda
                 ((g$label$29679$6Dw7t)
                  ((case-lambda
                     ((g$b$29680$6Dw7t)
                      ((case-lambda
                         ((g$type$29681$6Dw7t)
                          (begin
                            (if (not g$label$29679$6Dw7t)
                              (g$raise-unbound-error$28859$6Dw7t
                                g$id$29678$6Dw7t)
                              (void))
                            ((case-lambda
                               ((g$t$29682$6Dw7t)
                                (if (g$memv$23570$6Dw7t
                                      g$t$29682$6Dw7t
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$29681$6Dw7t
                                    (g$binding-value$28858$6Dw7t
                                      g$b$29680$6Dw7t)
                                    g$id$29678$6Dw7t)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        (values 'other '#f '#f))))))))
                             g$type$29681$6Dw7t))))
                       (g$binding-type$28857$6Dw7t g$b$29680$6Dw7t))))
                   (g$label->binding$28855$6Dw7t
                     g$label$29679$6Dw7t
                     g$r$29677$6Dw7t))))
               (g$id->label$28853$6Dw7t g$id$29678$6Dw7t))))
           g$e$29676$6Dw7t)
          (if (g$syntax-pair?$28833$6Dw7t g$e$29676$6Dw7t)
            ((case-lambda
               ((g$id$29683$6Dw7t)
                (if (g$id?$28840$6Dw7t g$id$29683$6Dw7t)
                  ((case-lambda
                     ((g$label$29684$6Dw7t)
                      ((case-lambda
                         ((g$b$29685$6Dw7t)
                          ((case-lambda
                             ((g$type$29686$6Dw7t)
                              (begin
                                (if (not g$label$29684$6Dw7t)
                                  (g$raise-unbound-error$28859$6Dw7t
                                    g$id$29683$6Dw7t)
                                  (void))
                                ((case-lambda
                                   ((g$t$29687$6Dw7t)
                                    (if (g$memv$23570$6Dw7t
                                          g$t$29687$6Dw7t
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$29686$6Dw7t
                                        (g$binding-value$28858$6Dw7t
                                          g$b$29685$6Dw7t)
                                        g$id$29683$6Dw7t)
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (values
                                              'call
                                              '#f
                                              '#f))))))))
                                 g$type$29686$6Dw7t))))
                           (g$binding-type$28857$6Dw7t
                             g$b$29685$6Dw7t))))
                       (g$label->binding$28855$6Dw7t
                         g$label$29684$6Dw7t
                         g$r$29677$6Dw7t))))
                   (g$id->label$28853$6Dw7t g$id$29683$6Dw7t))
                  (values 'call '#f '#f))))
             (g$syntax-car$28837$6Dw7t g$e$29676$6Dw7t))
            ((case-lambda
               (()
                (begin
                  '#f
                  ((case-lambda
                     ((g$d$29688$6Dw7t)
                      (if (g$self-evaluating?$28848$6Dw7t
                            g$d$29688$6Dw7t)
                        (values 'constant g$d$29688$6Dw7t '#f)
                        (values 'other '#f '#f))))
                   (g$stx->datum$28851$6Dw7t g$e$29676$6Dw7t)))))))))))
   (g$sanitize-binding$28883$6Dw7t
     g$sanitize-binding$32871$6Dw7t
     (case-lambda
       ((g$x$29689$6Dw7t g$src$29690$6Dw7t)
        (if (g$procedure?$24009$6Dw7t g$x$29689$6Dw7t)
          (g$cons*$23583$6Dw7t
            'local-macro
            g$x$29689$6Dw7t
            g$src$29690$6Dw7t)
          (if (if (pair? g$x$29689$6Dw7t)
                (if (eq? (car g$x$29689$6Dw7t) 'macro!)
                  (begin
                    '#f
                    (g$procedure?$24009$6Dw7t (cdr g$x$29689$6Dw7t)))
                  '#f)
                '#f)
            (g$cons*$23583$6Dw7t
              'local-macro!
              (cdr g$x$29689$6Dw7t)
              g$src$29690$6Dw7t)
            (if (if (pair? g$x$29689$6Dw7t)
                  (begin '#f (eq? (car g$x$29689$6Dw7t) '$rtd))
                  '#f)
              g$x$29689$6Dw7t
              (if (if (pair? g$x$29689$6Dw7t)
                    (begin '#f (eq? (car g$x$29689$6Dw7t) 'ctv))
                    '#f)
                (g$cons*$23583$6Dw7t
                  'local-ctv
                  (cdr g$x$29689$6Dw7t)
                  g$src$29690$6Dw7t)
                ((case-lambda
                   (()
                    (begin
                      '#f
                      (g$assertion-violation$20490$6Dw7t
                        'expand
                        '"invalid transformer"
                        g$x$29689$6Dw7t))))))))))))
   (g$make-variable-transformer$28884$6Dw7t
     g$make-variable-transformer$32872$6Dw7t
     (case-lambda
       ((g$x$29691$6Dw7t)
        (if (g$procedure?$24009$6Dw7t g$x$29691$6Dw7t)
          (cons 'macro! g$x$29691$6Dw7t)
          (g$assertion-violation$20490$6Dw7t
            'make-variable-transformer
            '"not a procedure"
            g$x$29691$6Dw7t)))))
   (g$make-compile-time-value$28885$6Dw7t
     g$make-compile-time-value$32873$6Dw7t
     (case-lambda ((g$x$29692$6Dw7t) (cons 'ctv g$x$29692$6Dw7t))))
   (g$variable-transformer?$28886$6Dw7t
     g$variable-transformer?$32874$6Dw7t
     (case-lambda
       ((g$x$29693$6Dw7t)
        (if (pair? g$x$29693$6Dw7t)
          (if (eq? (car g$x$29693$6Dw7t) 'macro!)
            (begin '#f (g$procedure?$24009$6Dw7t (cdr g$x$29693$6Dw7t)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$28887$6Dw7t
     g$variable-transformer-procedure$32875$6Dw7t
     (case-lambda
       ((g$x$29694$6Dw7t)
        (if (g$variable-transformer?$28886$6Dw7t g$x$29694$6Dw7t)
          (cdr g$x$29694$6Dw7t)
          (g$assertion-violation$20490$6Dw7t
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$29694$6Dw7t)))))
   (g$make-eval-transformer$28888$6Dw7t
     g$make-eval-transformer$32876$6Dw7t
     (case-lambda
       ((g$x$29695$6Dw7t)
        (g$sanitize-binding$28883$6Dw7t
          (eval-core (g$expanded->core$28278$6Dw7t g$x$29695$6Dw7t))
          g$x$29695$6Dw7t))))
   (g$parse-define$29278$6Dw7t
     g$parse-define$32877$6Dw7t
     (case-lambda
       ((g$x$29696$6Dw7t)
        ((case-lambda
           ((g$t$29697$6Dw7t)
            ((case-lambda
               ((g$ls/false$29698$6Dw7t)
                (if (if g$ls/false$29698$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29699$6Dw7t
                               g$fmls$29700$6Dw7t
                               g$b$29701$6Dw7t
                               g$b*$29702$6Dw7t)
                             (g$id?$28840$6Dw7t g$id$29699$6Dw7t)))
                          g$ls/false$29698$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29703$6Dw7t
                         g$fmls$29704$6Dw7t
                         g$b$29705$6Dw7t
                         g$b*$29706$6Dw7t)
                       (begin
                         (g$verify-formals$29358$6Dw7t
                           g$fmls$29704$6Dw7t
                           g$x$29696$6Dw7t)
                         (values
                           g$id$29703$6Dw7t
                           (cons 'defun g$x$29696$6Dw7t)))))
                    g$ls/false$29698$6Dw7t)
                  ((case-lambda
                     ((g$t$29707$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$29708$6Dw7t)
                          (if (if g$ls/false$29708$6Dw7t
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$29709$6Dw7t
                                         g$val$29710$6Dw7t)
                                       (g$id?$28840$6Dw7t
                                         g$id$29709$6Dw7t)))
                                    g$ls/false$29708$6Dw7t))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$29711$6Dw7t g$val$29712$6Dw7t)
                                 (values
                                   g$id$29711$6Dw7t
                                   (cons 'expr g$val$29712$6Dw7t))))
                              g$ls/false$29708$6Dw7t)
                            ((case-lambda
                               ((g$t$29713$6Dw7t)
                                ((case-lambda
                                   ((g$ls/false$29714$6Dw7t)
                                    (if (if g$ls/false$29714$6Dw7t
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$29715$6Dw7t)
                                                 (g$id?$28840$6Dw7t
                                                   g$id$29715$6Dw7t)))
                                              g$ls/false$29714$6Dw7t))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$29716$6Dw7t)
                                           (values
                                             g$id$29716$6Dw7t
                                             (cons
                                               'expr
                                               (g$bless$29301$6Dw7t
                                                 '(void))))))
                                        g$ls/false$29714$6Dw7t)
                                      (g$syntax-violation$29458$6Dw7t
                                        '#f
                                        '"invalid syntax"
                                        g$t$29713$6Dw7t))))
                                 (g$syntax-dispatch$29338$6Dw7t
                                   g$t$29713$6Dw7t
                                   '(_ any)))))
                             g$t$29707$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$29707$6Dw7t
                         '(_ any any)))))
                   g$t$29697$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29697$6Dw7t
               '(_ (any . any) any . each-any)))))
         g$x$29696$6Dw7t))))
   (g$parse-define-syntax$29279$6Dw7t
     g$parse-define-syntax$32878$6Dw7t
     (case-lambda
       ((g$x$29717$6Dw7t)
        ((case-lambda
           ((g$t$29718$6Dw7t)
            ((case-lambda
               ((g$ls/false$29719$6Dw7t)
                (if (if g$ls/false$29719$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29720$6Dw7t g$val$29721$6Dw7t)
                             (g$id?$28840$6Dw7t g$id$29720$6Dw7t)))
                          g$ls/false$29719$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29722$6Dw7t g$val$29723$6Dw7t)
                       (values g$id$29722$6Dw7t g$val$29723$6Dw7t)))
                    g$ls/false$29719$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29718$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29718$6Dw7t
               '(_ any any)))))
         g$x$29717$6Dw7t))))
   (g$scheme-stx-hashtable$29280$6Dw7t
     g$scheme-stx-hashtable$32879$6Dw7t
     (g$make-eq-hashtable$24143$6Dw7t))
   (g$scheme-stx$29281$6Dw7t
     g$scheme-stx$32880$6Dw7t
     (case-lambda
       ((g$sym$29724$6Dw7t)
        ((case-lambda
           ((g$t$29725$6Dw7t)
            (if g$t$29725$6Dw7t
              g$t$29725$6Dw7t
              (begin
                '#f
                ((case-lambda
                   ((g$subst$29726$6Dw7t)
                    ((case-lambda
                       ((g$stx$29727$6Dw7t)
                        ((case-lambda
                           ((g$stx$29728$6Dw7t)
                            (begin
                              (g$hashtable-set!$24147$6Dw7t
                                g$scheme-stx-hashtable$29280$6Dw7t
                                g$sym$29724$6Dw7t
                                g$stx$29728$6Dw7t)
                              g$stx$29728$6Dw7t)))
                         ((case-lambda
                            ((g$t$29729$6Dw7t)
                             (if g$t$29729$6Dw7t
                               ((case-lambda
                                  ((g$x$29730$6Dw7t)
                                   ((case-lambda
                                      ((g$name$29731$6Dw7t
                                         g$label$29732$6Dw7t)
                                       (g$add-subst$28830$6Dw7t
                                         (g$make-rib$28787$6Dw7t
                                           (list g$name$29731$6Dw7t)
                                           (list
                                             g$top-mark*$28773$6Dw7t)
                                           (list g$label$29732$6Dw7t)
                                           '#f
                                           '#f)
                                         g$stx$29727$6Dw7t)))
                                    (car g$x$29730$6Dw7t)
                                    (cdr g$x$29730$6Dw7t))))
                                g$t$29729$6Dw7t)
                               ((case-lambda
                                  (()
                                   (begin '#f g$stx$29727$6Dw7t)))))))
                          (g$assq$23565$6Dw7t
                            g$sym$29724$6Dw7t
                            g$subst$29726$6Dw7t)))))
                     (g$make-stx$28813$6Dw7t
                       g$sym$29724$6Dw7t
                       g$top-mark*$28773$6Dw7t
                       '()
                       '()))))
                 (g$library-subst$28503$6Dw7t
                   (g$find-library-by-name$28539$6Dw7t
                     '(psyntax system $all))))))))
         (g$hashtable-ref$24146$6Dw7t
           g$scheme-stx-hashtable$29280$6Dw7t
           g$sym$29724$6Dw7t
           '#f)))))
   (g$lexical-var$29282$6Dw7t g$lexical-var$32881$6Dw7t car)
   (g$lexical-mutable?$29283$6Dw7t g$lexical-mutable?$32882$6Dw7t cdr)
   (g$set-lexical-mutable!$29284$6Dw7t
     g$set-lexical-mutable!$32883$6Dw7t
     g$set-cdr!$25110$6Dw7t)
   (g$add-lexical$29285$6Dw7t
     g$add-lexical$32884$6Dw7t
     (case-lambda
       ((g$lab$29733$6Dw7t g$lex$29734$6Dw7t g$r$29735$6Dw7t)
        (cons
          (g$cons*$23583$6Dw7t
            g$lab$29733$6Dw7t
            'lexical
            g$lex$29734$6Dw7t
            '#f)
          g$r$29735$6Dw7t))))
   (g$add-lexicals$29286$6Dw7t
     g$add-lexicals$32885$6Dw7t
     (case-lambda
       ((g$lab*$29736$6Dw7t g$lex*$29737$6Dw7t g$r$29738$6Dw7t)
        (if (null? g$lab*$29736$6Dw7t)
          g$r$29738$6Dw7t
          ((case-lambda
             (()
              (begin
                '#f
                (g$add-lexicals$29286$6Dw7t
                  (cdr g$lab*$29736$6Dw7t)
                  (cdr g$lex*$29737$6Dw7t)
                  (g$add-lexical$29285$6Dw7t
                    (car g$lab*$29736$6Dw7t)
                    (car g$lex*$29737$6Dw7t)
                    g$r$29738$6Dw7t))))))))))
   (g$letrec-helper$29287$6Dw7t
     g$letrec-helper$32886$6Dw7t
     (case-lambda
       ((g$e$29739$6Dw7t
          g$r$29740$6Dw7t
          g$mr$29741$6Dw7t
          g$build$29742$6Dw7t)
        ((case-lambda
           ((g$t$29743$6Dw7t)
            ((case-lambda
               ((g$ls/false$29744$6Dw7t)
                (if g$ls/false$29744$6Dw7t
                  (apply
                    (case-lambda
                      ((g$lhs*$29745$6Dw7t
                         g$rhs*$29746$6Dw7t
                         g$b$29747$6Dw7t
                         g$b*$29748$6Dw7t)
                       (if (not (g$valid-bound-ids?$28845$6Dw7t
                                  g$lhs*$29745$6Dw7t))
                         (g$invalid-fmls-error$29303$6Dw7t
                           g$e$29739$6Dw7t
                           g$lhs*$29745$6Dw7t)
                         ((case-lambda
                            ((g$lex*$29749$6Dw7t g$lab*$29750$6Dw7t)
                             ((case-lambda
                                ((g$rib$29751$6Dw7t g$r$29752$6Dw7t)
                                 ((case-lambda
                                    ((g$body$29753$6Dw7t
                                       g$rhs*$29754$6Dw7t)
                                     (g$build$29742$6Dw7t
                                       '#f
                                       g$lex*$29749$6Dw7t
                                       g$rhs*$29754$6Dw7t
                                       g$body$29753$6Dw7t)))
                                  (g$chi-internal$29367$6Dw7t
                                    (g$add-subst$28830$6Dw7t
                                      g$rib$29751$6Dw7t
                                      (cons
                                        g$b$29747$6Dw7t
                                        g$b*$29748$6Dw7t))
                                    g$r$29752$6Dw7t
                                    g$mr$29741$6Dw7t)
                                  (g$chi-expr*$29354$6Dw7t
                                    (g$map$23581$6Dw7t
                                      (case-lambda
                                        ((g$x$29755$6Dw7t)
                                         (g$add-subst$28830$6Dw7t
                                           g$rib$29751$6Dw7t
                                           g$x$29755$6Dw7t)))
                                      g$rhs*$29746$6Dw7t)
                                    g$r$29752$6Dw7t
                                    g$mr$29741$6Dw7t))))
                              (g$make-full-rib$28806$6Dw7t
                                g$lhs*$29745$6Dw7t
                                g$lab*$29750$6Dw7t)
                              (g$add-lexicals$29286$6Dw7t
                                g$lab*$29750$6Dw7t
                                g$lex*$29749$6Dw7t
                                g$r$29740$6Dw7t))))
                          (g$map$23581$6Dw7t
                            g$gen-lexical$28775$6Dw7t
                            g$lhs*$29745$6Dw7t)
                          (g$map$23581$6Dw7t
                            g$gen-label$28777$6Dw7t
                            g$lhs*$29745$6Dw7t)))))
                    g$ls/false$29744$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29743$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29743$6Dw7t
               '(_ #(each (any any)) any . each-any)))))
         g$e$29739$6Dw7t))))
   (g$letrec-transformer$29288$6Dw7t
     g$letrec-transformer$32887$6Dw7t
     (case-lambda
       ((g$e$29756$6Dw7t g$r$29757$6Dw7t g$mr$29758$6Dw7t)
        (g$letrec-helper$29287$6Dw7t
          g$e$29756$6Dw7t
          g$r$29757$6Dw7t
          g$mr$29758$6Dw7t
          g$build-letrec$28767$6Dw7t))))
   (g$letrec*-transformer$29289$6Dw7t
     g$letrec*-transformer$32888$6Dw7t
     (case-lambda
       ((g$e$29759$6Dw7t g$r$29760$6Dw7t g$mr$29761$6Dw7t)
        (g$letrec-helper$29287$6Dw7t
          g$e$29759$6Dw7t
          g$r$29760$6Dw7t
          g$mr$29761$6Dw7t
          g$build-letrec*$28768$6Dw7t))))
   (g$fluid-let-syntax-transformer$29290$6Dw7t
     g$fluid-let-syntax-transformer$32889$6Dw7t
     (case-lambda
       ((g$e$29762$6Dw7t g$r$29763$6Dw7t g$mr$29764$6Dw7t)
        (letrec* ((g$lookup$29765$6Dw7t
                    (case-lambda
                      ((g$x$29775$6Dw7t)
                       ((case-lambda
                          ((g$t$29776$6Dw7t)
                           (if g$t$29776$6Dw7t
                             g$t$29776$6Dw7t
                             (begin
                               '#f
                               (g$syntax-violation$29458$6Dw7t
                                 '#f
                                 '"unbound identifier"
                                 g$e$29762$6Dw7t
                                 g$x$29775$6Dw7t)))))
                        (g$id->label$28853$6Dw7t g$x$29775$6Dw7t))))))
          ((case-lambda
             ((g$t$29766$6Dw7t)
              ((case-lambda
                 ((g$ls/false$29767$6Dw7t)
                  (if g$ls/false$29767$6Dw7t
                    (apply
                      (case-lambda
                        ((g$lhs*$29768$6Dw7t
                           g$rhs*$29769$6Dw7t
                           g$b$29770$6Dw7t
                           g$b*$29771$6Dw7t)
                         (if (not (g$valid-bound-ids?$28845$6Dw7t
                                    g$lhs*$29768$6Dw7t))
                           (g$invalid-fmls-error$29303$6Dw7t
                             g$e$29762$6Dw7t
                             g$lhs*$29768$6Dw7t)
                           ((case-lambda
                              ((g$lab*$29772$6Dw7t g$rhs*$29773$6Dw7t)
                               (g$chi-internal$29367$6Dw7t
                                 (cons g$b$29770$6Dw7t g$b*$29771$6Dw7t)
                                 (g$append$23587$6Dw7t
                                   (g$map$23581$6Dw7t
                                     cons
                                     g$lab*$29772$6Dw7t
                                     g$rhs*$29773$6Dw7t)
                                   g$r$29763$6Dw7t)
                                 (g$append$23587$6Dw7t
                                   (g$map$23581$6Dw7t
                                     cons
                                     g$lab*$29772$6Dw7t
                                     g$rhs*$29773$6Dw7t)
                                   g$mr$29764$6Dw7t))))
                            (g$map$23581$6Dw7t
                              g$lookup$29765$6Dw7t
                              g$lhs*$29768$6Dw7t)
                            (g$map$23581$6Dw7t
                              (case-lambda
                                ((g$x$29774$6Dw7t)
                                 (g$make-eval-transformer$28888$6Dw7t
                                   (g$expand-transformer$29386$6Dw7t
                                     g$x$29774$6Dw7t
                                     g$mr$29764$6Dw7t))))
                              g$rhs*$29769$6Dw7t)))))
                      g$ls/false$29767$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$29766$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$29766$6Dw7t
                 '(_ #(each (any any)) any . each-any)))))
           g$e$29762$6Dw7t)))))
   (g$type-descriptor-transformer$29291$6Dw7t
     g$type-descriptor-transformer$32890$6Dw7t
     (case-lambda
       ((g$e$29777$6Dw7t g$r$29778$6Dw7t g$mr$29779$6Dw7t)
        ((case-lambda
           ((g$t$29780$6Dw7t)
            ((case-lambda
               ((g$ls/false$29781$6Dw7t)
                (if (if g$ls/false$29781$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29782$6Dw7t)
                             (g$id?$28840$6Dw7t g$id$29782$6Dw7t)))
                          g$ls/false$29781$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29783$6Dw7t)
                       ((case-lambda
                          ((g$lab$29784$6Dw7t)
                           ((case-lambda
                              ((g$b$29785$6Dw7t)
                               ((case-lambda
                                  ((g$type$29786$6Dw7t)
                                   (begin
                                     (if (not g$lab$29784$6Dw7t)
                                       (g$raise-unbound-error$28859$6Dw7t
                                         g$id$29783$6Dw7t)
                                       (void))
                                     (if (not (if (eq? g$type$29786$6Dw7t
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (not (g$list?$23576$6Dw7t
                                                         (g$binding-value$28858$6Dw7t
                                                           g$b$29785$6Dw7t))))
                                                '#f))
                                       (g$syntax-violation$29458$6Dw7t
                                         '#f
                                         '"not a record type"
                                         g$e$29777$6Dw7t)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$28858$6Dw7t
                                         g$b$29785$6Dw7t)))))
                                (g$binding-type$28857$6Dw7t
                                  g$b$29785$6Dw7t))))
                            (g$label->binding$28855$6Dw7t
                              g$lab$29784$6Dw7t
                              g$r$29778$6Dw7t))))
                        (g$id->label$28853$6Dw7t g$id$29783$6Dw7t))))
                    g$ls/false$29781$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29780$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$29780$6Dw7t '(_ any)))))
         g$e$29777$6Dw7t))))
   (g$record-type-descriptor-transformer$29292$6Dw7t
     g$record-type-descriptor-transformer$32891$6Dw7t
     (case-lambda
       ((g$e$29787$6Dw7t g$r$29788$6Dw7t g$mr$29789$6Dw7t)
        ((case-lambda
           ((g$t$29790$6Dw7t)
            ((case-lambda
               ((g$ls/false$29791$6Dw7t)
                (if (if g$ls/false$29791$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29792$6Dw7t)
                             (g$id?$28840$6Dw7t g$id$29792$6Dw7t)))
                          g$ls/false$29791$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29793$6Dw7t)
                       ((case-lambda
                          ((g$lab$29794$6Dw7t)
                           ((case-lambda
                              ((g$b$29795$6Dw7t)
                               ((case-lambda
                                  ((g$type$29796$6Dw7t)
                                   (begin
                                     (if (not g$lab$29794$6Dw7t)
                                       (g$raise-unbound-error$28859$6Dw7t
                                         g$id$29793$6Dw7t)
                                       (void))
                                     (if (not (if (eq? g$type$29796$6Dw7t
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (g$list?$23576$6Dw7t
                                                    (g$binding-value$28858$6Dw7t
                                                      g$b$29795$6Dw7t)))
                                                '#f))
                                       (g$syntax-violation$29458$6Dw7t
                                         '#f
                                         '"not a record type"
                                         g$e$29787$6Dw7t)
                                       (void))
                                     (g$chi-expr$29356$6Dw7t
                                       (car (g$binding-value$28858$6Dw7t
                                              g$b$29795$6Dw7t))
                                       g$r$29788$6Dw7t
                                       g$mr$29789$6Dw7t))))
                                (g$binding-type$28857$6Dw7t
                                  g$b$29795$6Dw7t))))
                            (g$label->binding$28855$6Dw7t
                              g$lab$29794$6Dw7t
                              g$r$29788$6Dw7t))))
                        (g$id->label$28853$6Dw7t g$id$29793$6Dw7t))))
                    g$ls/false$29791$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29790$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$29790$6Dw7t '(_ any)))))
         g$e$29787$6Dw7t))))
   (g$record-constructor-descriptor-transformer$29293$6Dw7t
     g$record-constructor-descriptor-transformer$32892$6Dw7t
     (case-lambda
       ((g$e$29797$6Dw7t g$r$29798$6Dw7t g$mr$29799$6Dw7t)
        ((case-lambda
           ((g$t$29800$6Dw7t)
            ((case-lambda
               ((g$ls/false$29801$6Dw7t)
                (if (if g$ls/false$29801$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$29802$6Dw7t)
                             (g$id?$28840$6Dw7t g$id$29802$6Dw7t)))
                          g$ls/false$29801$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$29803$6Dw7t)
                       ((case-lambda
                          ((g$lab$29804$6Dw7t)
                           ((case-lambda
                              ((g$b$29805$6Dw7t)
                               ((case-lambda
                                  ((g$type$29806$6Dw7t)
                                   (begin
                                     (if (not g$lab$29804$6Dw7t)
                                       (g$raise-unbound-error$28859$6Dw7t
                                         g$id$29803$6Dw7t)
                                       (void))
                                     (if (not (if (eq? g$type$29806$6Dw7t
                                                       '$rtd)
                                                (begin
                                                  '#f
                                                  (g$list?$23576$6Dw7t
                                                    (g$binding-value$28858$6Dw7t
                                                      g$b$29805$6Dw7t)))
                                                '#f))
                                       (g$syntax-violation$29458$6Dw7t
                                         '#f
                                         '"invalid type"
                                         g$e$29797$6Dw7t)
                                       (void))
                                     (g$chi-expr$29356$6Dw7t
                                       (g$cadr$24045$6Dw7t
                                         (g$binding-value$28858$6Dw7t
                                           g$b$29805$6Dw7t))
                                       g$r$29798$6Dw7t
                                       g$mr$29799$6Dw7t))))
                                (g$binding-type$28857$6Dw7t
                                  g$b$29805$6Dw7t))))
                            (g$label->binding$28855$6Dw7t
                              g$lab$29804$6Dw7t
                              g$r$29798$6Dw7t))))
                        (g$id->label$28853$6Dw7t g$id$29803$6Dw7t))))
                    g$ls/false$29801$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29800$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$29800$6Dw7t '(_ any)))))
         g$e$29797$6Dw7t))))
   (g$when-macro$29294$6Dw7t
     g$when-macro$32893$6Dw7t
     (case-lambda
       ((g$e$29807$6Dw7t)
        ((case-lambda
           ((g$t$29808$6Dw7t)
            ((case-lambda
               ((g$ls/false$29809$6Dw7t)
                (if g$ls/false$29809$6Dw7t
                  (apply
                    (case-lambda
                      ((g$test$29810$6Dw7t
                         g$e$29811$6Dw7t
                         g$e*$29812$6Dw7t)
                       (g$bless$29301$6Dw7t
                         (list
                           'if
                           g$test$29810$6Dw7t
                           (cons
                             'begin
                             (cons
                               g$e$29811$6Dw7t
                               g$e*$29812$6Dw7t))))))
                    g$ls/false$29809$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29808$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29808$6Dw7t
               '(_ any any . each-any)))))
         g$e$29807$6Dw7t))))
   (g$unless-macro$29295$6Dw7t
     g$unless-macro$32894$6Dw7t
     (case-lambda
       ((g$e$29813$6Dw7t)
        ((case-lambda
           ((g$t$29814$6Dw7t)
            ((case-lambda
               ((g$ls/false$29815$6Dw7t)
                (if g$ls/false$29815$6Dw7t
                  (apply
                    (case-lambda
                      ((g$test$29816$6Dw7t
                         g$e$29817$6Dw7t
                         g$e*$29818$6Dw7t)
                       (g$bless$29301$6Dw7t
                         (list
                           'if
                           (list 'not g$test$29816$6Dw7t)
                           (cons
                             'begin
                             (cons
                               g$e$29817$6Dw7t
                               g$e*$29818$6Dw7t))))))
                    g$ls/false$29815$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29814$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29814$6Dw7t
               '(_ any any . each-any)))))
         g$e$29813$6Dw7t))))
   (g$if-transformer$29296$6Dw7t
     g$if-transformer$32895$6Dw7t
     (case-lambda
       ((g$e$29819$6Dw7t g$r$29820$6Dw7t g$mr$29821$6Dw7t)
        ((case-lambda
           ((g$t$29822$6Dw7t)
            ((case-lambda
               ((g$ls/false$29823$6Dw7t)
                (if g$ls/false$29823$6Dw7t
                  (apply
                    (case-lambda
                      ((g$e0$29824$6Dw7t
                         g$e1$29825$6Dw7t
                         g$e2$29826$6Dw7t)
                       (list
                         'if
                         (g$chi-expr$29356$6Dw7t
                           g$e0$29824$6Dw7t
                           g$r$29820$6Dw7t
                           g$mr$29821$6Dw7t)
                         (g$chi-expr$29356$6Dw7t
                           g$e1$29825$6Dw7t
                           g$r$29820$6Dw7t
                           g$mr$29821$6Dw7t)
                         (g$chi-expr$29356$6Dw7t
                           g$e2$29826$6Dw7t
                           g$r$29820$6Dw7t
                           g$mr$29821$6Dw7t))))
                    g$ls/false$29823$6Dw7t)
                  ((case-lambda
                     ((g$t$29827$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$29828$6Dw7t)
                          (if g$ls/false$29828$6Dw7t
                            (apply
                              (case-lambda
                                ((g$e0$29829$6Dw7t g$e1$29830$6Dw7t)
                                 (list
                                   'if
                                   (g$chi-expr$29356$6Dw7t
                                     g$e0$29829$6Dw7t
                                     g$r$29820$6Dw7t
                                     g$mr$29821$6Dw7t)
                                   (g$chi-expr$29356$6Dw7t
                                     g$e1$29830$6Dw7t
                                     g$r$29820$6Dw7t
                                     g$mr$29821$6Dw7t)
                                   (g$build-void$28766$6Dw7t))))
                              g$ls/false$29828$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$29827$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$29827$6Dw7t
                         '(_ any any)))))
                   g$t$29822$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29822$6Dw7t
               '(_ any any any)))))
         g$e$29819$6Dw7t))))
   (g$case-macro$29297$6Dw7t
     g$case-macro$32896$6Dw7t
     (case-lambda
       ((g$e$29831$6Dw7t)
        (letrec* ((g$build-last$29832$6Dw7t
                    (case-lambda
                      ((g$cls$29852$6Dw7t)
                       ((case-lambda
                          ((g$t$29853$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$29854$6Dw7t)
                               (if g$ls/false$29854$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$e$29855$6Dw7t g$e*$29856$6Dw7t)
                                      (cons
                                        'let
                                        (cons
                                          '()
                                          (cons
                                            '#f
                                            (cons
                                              g$e$29855$6Dw7t
                                              g$e*$29856$6Dw7t))))))
                                   g$ls/false$29854$6Dw7t)
                                 ((case-lambda
                                    ((g$t$29857$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$29858$6Dw7t)
                                         (if g$ls/false$29858$6Dw7t
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$29833$6Dw7t
                                                  g$cls$29852$6Dw7t
                                                  '(if #f #f))))
                                             g$ls/false$29858$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$29857$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$29857$6Dw7t
                                        '_))))
                                  g$t$29853$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$29853$6Dw7t
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$29852$6Dw7t))))
                  (g$build-one$29833$6Dw7t
                    (case-lambda
                      ((g$cls$29845$6Dw7t g$k$29846$6Dw7t)
                       ((case-lambda
                          ((g$t$29847$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$29848$6Dw7t)
                               (if g$ls/false$29848$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$d*$29849$6Dw7t
                                        g$e$29850$6Dw7t
                                        g$e*$29851$6Dw7t)
                                      (if (g$=$25069$6Dw7t
                                            '1
                                            (g$length$23578$6Dw7t
                                              g$d*$29849$6Dw7t))
                                        (list
                                          'if
                                          (list
                                            'eqv?
                                            't
                                            (list
                                              'quote
                                              (car g$d*$29849$6Dw7t)))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29850$6Dw7t
                                              g$e*$29851$6Dw7t))
                                          g$k$29846$6Dw7t)
                                        (list
                                          'if
                                          (list
                                            'memv
                                            't
                                            (list
                                              'quote
                                              g$d*$29849$6Dw7t))
                                          (cons
                                            'begin
                                            (cons
                                              g$e$29850$6Dw7t
                                              g$e*$29851$6Dw7t))
                                          g$k$29846$6Dw7t))))
                                   g$ls/false$29848$6Dw7t)
                                 (g$syntax-violation$29458$6Dw7t
                                   '#f
                                   '"invalid syntax"
                                   g$t$29847$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$29847$6Dw7t
                              '(each-any any . each-any)))))
                        g$cls$29845$6Dw7t)))))
          ((case-lambda
             ((g$t$29834$6Dw7t)
              ((case-lambda
                 ((g$ls/false$29835$6Dw7t)
                  (if g$ls/false$29835$6Dw7t
                    (apply
                      (case-lambda
                        ((g$expr$29836$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$29836$6Dw7t))
                               '((if #f #f)))))))
                      g$ls/false$29835$6Dw7t)
                    ((case-lambda
                       ((g$t$29837$6Dw7t)
                        ((case-lambda
                           ((g$ls/false$29838$6Dw7t)
                            (if g$ls/false$29838$6Dw7t
                              (apply
                                (case-lambda
                                  ((g$expr$29839$6Dw7t
                                     g$cls$29840$6Dw7t
                                     g$cls*$29841$6Dw7t)
                                   (g$bless$29301$6Dw7t
                                     (list
                                       'let
                                       (list
                                         (list 't g$expr$29839$6Dw7t))
                                       ((letrec ((g$f$29842$6Dw7t
                                                   (case-lambda
                                                     ((g$cls$29843$6Dw7t
                                                        g$cls*$29844$6Dw7t)
                                                      (if (null?
                                                            g$cls*$29844$6Dw7t)
                                                        (g$build-last$29832$6Dw7t
                                                          g$cls$29843$6Dw7t)
                                                        (g$build-one$29833$6Dw7t
                                                          g$cls$29843$6Dw7t
                                                          (g$f$29842$6Dw7t
                                                            (car g$cls*$29844$6Dw7t)
                                                            (cdr g$cls*$29844$6Dw7t))))))))
                                          g$f$29842$6Dw7t)
                                        g$cls$29840$6Dw7t
                                        g$cls*$29841$6Dw7t)))))
                                g$ls/false$29838$6Dw7t)
                              (g$syntax-violation$29458$6Dw7t
                                '#f
                                '"invalid syntax"
                                g$t$29837$6Dw7t))))
                         (g$syntax-dispatch$29338$6Dw7t
                           g$t$29837$6Dw7t
                           '(_ any any . each-any)))))
                     g$t$29834$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$29834$6Dw7t
                 '(_ any)))))
           g$e$29831$6Dw7t)))))
   (g$quote-transformer$29298$6Dw7t
     g$quote-transformer$32897$6Dw7t
     (case-lambda
       ((g$e$29859$6Dw7t g$r$29860$6Dw7t g$mr$29861$6Dw7t)
        ((case-lambda
           ((g$t$29862$6Dw7t)
            ((case-lambda
               ((g$ls/false$29863$6Dw7t)
                (if g$ls/false$29863$6Dw7t
                  (apply
                    (case-lambda
                      ((g$datum$29864$6Dw7t)
                       (list
                         'quote
                         (g$stx->datum$28851$6Dw7t
                           g$datum$29864$6Dw7t))))
                    g$ls/false$29863$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29862$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$29862$6Dw7t '(_ any)))))
         g$e$29859$6Dw7t))))
   (g$case-lambda-transformer$29299$6Dw7t
     g$case-lambda-transformer$32898$6Dw7t
     (case-lambda
       ((g$e$29865$6Dw7t g$r$29866$6Dw7t g$mr$29867$6Dw7t)
        ((case-lambda
           ((g$t$29868$6Dw7t)
            ((case-lambda
               ((g$ls/false$29869$6Dw7t)
                (if g$ls/false$29869$6Dw7t
                  (apply
                    (case-lambda
                      ((g$fmls*$29870$6Dw7t
                         g$b*$29871$6Dw7t
                         g$b**$29872$6Dw7t)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$29360$6Dw7t
                              g$e$29865$6Dw7t
                              g$fmls*$29870$6Dw7t
                              (g$map$23581$6Dw7t
                                cons
                                g$b*$29871$6Dw7t
                                g$b**$29872$6Dw7t)
                              g$r$29866$6Dw7t
                              g$mr$29867$6Dw7t)))
                         (case-lambda
                           ((g$fmls*$29875$6Dw7t g$body*$29876$6Dw7t)
                            ((case-lambda
                               ((g$body*$29877$6Dw7t
                                  g$fmls*$29878$6Dw7t)
                                (g$build-case-lambda$28763$6Dw7t
                                  (g$syntax-annotation$29453$6Dw7t
                                    g$e$29865$6Dw7t)
                                  g$fmls*$29878$6Dw7t
                                  g$body*$29877$6Dw7t)))
                             g$body*$29876$6Dw7t
                             g$fmls*$29875$6Dw7t))))))
                    g$ls/false$29869$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29868$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29868$6Dw7t
               '(_ . #(each (any any . each-any)))))))
         g$e$29865$6Dw7t))))
   (g$lambda-transformer$29300$6Dw7t
     g$lambda-transformer$32899$6Dw7t
     (case-lambda
       ((g$e$29879$6Dw7t g$r$29880$6Dw7t g$mr$29881$6Dw7t)
        ((case-lambda
           ((g$t$29882$6Dw7t)
            ((case-lambda
               ((g$ls/false$29883$6Dw7t)
                (if g$ls/false$29883$6Dw7t
                  (apply
                    (case-lambda
                      ((g$fmls$29884$6Dw7t
                         g$b$29885$6Dw7t
                         g$b*$29886$6Dw7t)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$29359$6Dw7t
                              g$e$29879$6Dw7t
                              g$fmls$29884$6Dw7t
                              (cons g$b$29885$6Dw7t g$b*$29886$6Dw7t)
                              g$r$29880$6Dw7t
                              g$mr$29881$6Dw7t)))
                         (case-lambda
                           ((g$fmls$29889$6Dw7t g$body$29890$6Dw7t)
                            ((case-lambda
                               ((g$body$29891$6Dw7t g$fmls$29892$6Dw7t)
                                (g$build-lambda$28762$6Dw7t
                                  (g$syntax-annotation$29453$6Dw7t
                                    g$e$29879$6Dw7t)
                                  g$fmls$29892$6Dw7t
                                  g$body$29891$6Dw7t)))
                             g$body$29890$6Dw7t
                             g$fmls$29889$6Dw7t))))))
                    g$ls/false$29883$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29882$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29882$6Dw7t
               '(_ any any . each-any)))))
         g$e$29879$6Dw7t))))
   (g$bless$29301$6Dw7t
     g$bless$32900$6Dw7t
     (case-lambda
       ((g$x$29893$6Dw7t)
        (g$mkstx$28828$6Dw7t
          ((letrec ((g$f$29894$6Dw7t
                      (case-lambda
                        ((g$x$29895$6Dw7t)
                         (if (g$stx?$28812$6Dw7t g$x$29895$6Dw7t)
                           g$x$29895$6Dw7t
                           (if (pair? g$x$29895$6Dw7t)
                             (cons
                               (g$f$29894$6Dw7t (car g$x$29895$6Dw7t))
                               (g$f$29894$6Dw7t (cdr g$x$29895$6Dw7t)))
                             (if (g$symbol?$24007$6Dw7t g$x$29895$6Dw7t)
                               (g$scheme-stx$29281$6Dw7t
                                 g$x$29895$6Dw7t)
                               (if (g$vector?$24005$6Dw7t
                                     g$x$29895$6Dw7t)
                                 (g$vector-map$24094$6Dw7t
                                   g$f$29894$6Dw7t
                                   g$x$29895$6Dw7t)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       g$x$29895$6Dw7t))))))))))))
             g$f$29894$6Dw7t)
           g$x$29893$6Dw7t)
          '()
          '()
          '()))))
   (g$with-syntax-macro$29302$6Dw7t
     g$with-syntax-macro$32901$6Dw7t
     (case-lambda
       ((g$e$29896$6Dw7t)
        ((case-lambda
           ((g$t$29897$6Dw7t)
            ((case-lambda
               ((g$ls/false$29898$6Dw7t)
                (if g$ls/false$29898$6Dw7t
                  (apply
                    (case-lambda
                      ((g$pat*$29899$6Dw7t
                         g$expr*$29900$6Dw7t
                         g$b$29901$6Dw7t
                         g$b*$29902$6Dw7t)
                       ((case-lambda
                          ((g$idn*$29903$6Dw7t)
                           (begin
                             (g$verify-formals$29358$6Dw7t
                               (g$map$23581$6Dw7t
                                 car
                                 g$idn*$29903$6Dw7t)
                               g$e$29896$6Dw7t)
                             ((case-lambda
                                ((g$t*$29904$6Dw7t)
                                 (g$bless$29301$6Dw7t
                                   (list
                                     'let
                                     (g$map$23581$6Dw7t
                                       list
                                       g$t*$29904$6Dw7t
                                       g$expr*$29900$6Dw7t)
                                     ((letrec ((g$f$29905$6Dw7t
                                                 (case-lambda
                                                   ((g$pat*$29906$6Dw7t
                                                      g$t*$29907$6Dw7t)
                                                    (if (null?
                                                          g$pat*$29906$6Dw7t)
                                                      (cons
                                                        'let
                                                        (cons
                                                          '()
                                                          (cons
                                                            g$b$29901$6Dw7t
                                                            g$b*$29902$6Dw7t)))
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            (list
                                                              'syntax-case
                                                              (car g$t*$29907$6Dw7t)
                                                              '()
                                                              (list
                                                                (car g$pat*$29906$6Dw7t)
                                                                (g$f$29905$6Dw7t
                                                                  (cdr g$pat*$29906$6Dw7t)
                                                                  (cdr g$t*$29907$6Dw7t)))
                                                              (list
                                                                '_
                                                                (list
                                                                  'assertion-violation
                                                                  ''with-syntax
                                                                  '"pattern does not match value"
                                                                  (list
                                                                    'quote
                                                                    (car g$pat*$29906$6Dw7t))
                                                                  (car g$t*$29907$6Dw7t)))))))))))))
                                        g$f$29905$6Dw7t)
                                      g$pat*$29899$6Dw7t
                                      g$t*$29904$6Dw7t)))))
                              (g$generate-temporaries$29447$6Dw7t
                                g$expr*$29900$6Dw7t)))))
                        ((letrec ((g$f$29908$6Dw7t
                                    (case-lambda
                                      ((g$pat*$29909$6Dw7t)
                                       (if (null? g$pat*$29909$6Dw7t)
                                         '()
                                         ((case-lambda
                                            (()
                                             (begin
                                               '#f
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$convert-pattern$29337$6Dw7t
                                                      (car g$pat*$29909$6Dw7t)
                                                      '())))
                                                 (case-lambda
                                                   ((g$pat$29912$6Dw7t
                                                      g$idn*$29913$6Dw7t)
                                                    ((case-lambda
                                                       ((g$idn*$29914$6Dw7t
                                                          g$pat$29915$6Dw7t)
                                                        (g$append$23587$6Dw7t
                                                          g$idn*$29914$6Dw7t
                                                          (g$f$29908$6Dw7t
                                                            (cdr g$pat*$29909$6Dw7t)))))
                                                     g$idn*$29913$6Dw7t
                                                     g$pat$29912$6Dw7t)))))))))))))
                           g$f$29908$6Dw7t)
                         g$pat*$29899$6Dw7t))))
                    g$ls/false$29898$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$29897$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29897$6Dw7t
               '(_ #(each (any any)) any . each-any)))))
         g$e$29896$6Dw7t))))
   (g$invalid-fmls-error$29303$6Dw7t
     g$invalid-fmls-error$32902$6Dw7t
     (case-lambda
       ((g$stx$29916$6Dw7t g$fmls$29917$6Dw7t)
        ((case-lambda
           ((g$t$29918$6Dw7t)
            ((case-lambda
               ((g$ls/false$29919$6Dw7t)
                (if g$ls/false$29919$6Dw7t
                  (apply
                    (case-lambda
                      ((g$id*$29920$6Dw7t g$last$29921$6Dw7t)
                       ((letrec ((g$f$29922$6Dw7t
                                   (case-lambda
                                     ((g$id*$29923$6Dw7t)
                                      (if (null? g$id*$29923$6Dw7t)
                                        (values)
                                        (if (not (g$id?$28840$6Dw7t
                                                   (car g$id*$29923$6Dw7t)))
                                          (g$syntax-violation$29458$6Dw7t
                                            '#f
                                            '"not an identifier"
                                            g$stx$29916$6Dw7t
                                            (car g$id*$29923$6Dw7t))
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (g$f$29922$6Dw7t
                                                  (cdr g$id*$29923$6Dw7t))
                                                (if (g$bound-id-member?$28847$6Dw7t
                                                      (car g$id*$29923$6Dw7t)
                                                      (cdr g$id*$29923$6Dw7t))
                                                  (g$syntax-violation$29458$6Dw7t
                                                    '#f
                                                    '"duplicate binding"
                                                    g$stx$29916$6Dw7t
                                                    (car g$id*$29923$6Dw7t))
                                                  (void))))))))))))
                          g$f$29922$6Dw7t)
                        (if (g$id?$28840$6Dw7t g$last$29921$6Dw7t)
                          (cons g$last$29921$6Dw7t g$id*$29920$6Dw7t)
                          (if (g$syntax-null?$28835$6Dw7t
                                g$last$29921$6Dw7t)
                            g$id*$29920$6Dw7t
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  (g$syntax-violation$29458$6Dw7t
                                    '#f
                                    '"not an identifier"
                                    g$stx$29916$6Dw7t
                                    g$last$29921$6Dw7t))))))))))
                    g$ls/false$29919$6Dw7t)
                  ((case-lambda
                     ((g$t$29924$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$29925$6Dw7t)
                          (if g$ls/false$29925$6Dw7t
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$29458$6Dw7t
                                   '#f
                                   '"malformed binding form"
                                   g$stx$29916$6Dw7t
                                   g$fmls$29917$6Dw7t)))
                              g$ls/false$29925$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$29924$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$29924$6Dw7t
                         '_))))
                   g$t$29918$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29918$6Dw7t
               '#(each+ any () any)))))
         g$fmls$29917$6Dw7t))))
   (g$let-macro$29304$6Dw7t
     g$let-macro$32903$6Dw7t
     (case-lambda
       ((g$stx$29926$6Dw7t)
        ((case-lambda
           ((g$t$29927$6Dw7t)
            ((case-lambda
               ((g$ls/false$29928$6Dw7t)
                (if g$ls/false$29928$6Dw7t
                  (apply
                    (case-lambda
                      ((g$lhs*$29929$6Dw7t
                         g$rhs*$29930$6Dw7t
                         g$b$29931$6Dw7t
                         g$b*$29932$6Dw7t)
                       (if (g$valid-bound-ids?$28845$6Dw7t
                             g$lhs*$29929$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$29929$6Dw7t
                                 (cons
                                   g$b$29931$6Dw7t
                                   g$b*$29932$6Dw7t)))
                             g$rhs*$29930$6Dw7t))
                         (g$invalid-fmls-error$29303$6Dw7t
                           g$stx$29926$6Dw7t
                           g$lhs*$29929$6Dw7t))))
                    g$ls/false$29928$6Dw7t)
                  ((case-lambda
                     ((g$t$29933$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$29934$6Dw7t)
                          (if (if g$ls/false$29934$6Dw7t
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$29935$6Dw7t
                                         g$lhs*$29936$6Dw7t
                                         g$rhs*$29937$6Dw7t
                                         g$b$29938$6Dw7t
                                         g$b*$29939$6Dw7t)
                                       (g$id?$28840$6Dw7t
                                         g$f$29935$6Dw7t)))
                                    g$ls/false$29934$6Dw7t))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$29940$6Dw7t
                                   g$lhs*$29941$6Dw7t
                                   g$rhs*$29942$6Dw7t
                                   g$b$29943$6Dw7t
                                   g$b*$29944$6Dw7t)
                                 (if (g$valid-bound-ids?$28845$6Dw7t
                                       g$lhs*$29941$6Dw7t)
                                   (g$bless$29301$6Dw7t
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$29940$6Dw7t
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$29941$6Dw7t
                                                 (cons
                                                   g$b$29943$6Dw7t
                                                   g$b*$29944$6Dw7t)))))
                                         g$f$29940$6Dw7t)
                                       g$rhs*$29942$6Dw7t))
                                   (g$invalid-fmls-error$29303$6Dw7t
                                     g$stx$29926$6Dw7t
                                     g$lhs*$29941$6Dw7t))))
                              g$ls/false$29934$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$29933$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$29933$6Dw7t
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$29927$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$29927$6Dw7t
               '(_ #(each (any any)) any . each-any)))))
         g$stx$29926$6Dw7t))))
   (g$let-values-macro$29305$6Dw7t
     g$let-values-macro$32904$6Dw7t
     (case-lambda
       ((g$stx$29945$6Dw7t)
        (letrec* ((g$rename$29946$6Dw7t
                    (case-lambda
                      ((g$x$29997$6Dw7t
                         g$old*$29998$6Dw7t
                         g$new*$29999$6Dw7t)
                       (begin
                         (if (not (g$id?$28840$6Dw7t g$x$29997$6Dw7t))
                           (g$syntax-violation$29458$6Dw7t
                             '#f
                             '"not an indentifier"
                             g$stx$29945$6Dw7t
                             g$x$29997$6Dw7t)
                           (void))
                         (if (g$bound-id-member?$28847$6Dw7t
                               g$x$29997$6Dw7t
                               g$old*$29998$6Dw7t)
                           (g$syntax-violation$29458$6Dw7t
                             '#f
                             '"duplicate binding"
                             g$stx$29945$6Dw7t
                             g$x$29997$6Dw7t)
                           (void))
                         ((case-lambda
                            ((g$y$30000$6Dw7t)
                             (values
                               g$y$30000$6Dw7t
                               (cons g$x$29997$6Dw7t g$old*$29998$6Dw7t)
                               (cons
                                 g$y$30000$6Dw7t
                                 g$new*$29999$6Dw7t))))
                          (gensym
                            (g$syntax->datum$29461$6Dw7t
                              g$x$29997$6Dw7t)))))))
                  (g$rename*$29947$6Dw7t
                    (case-lambda
                      ((g$x*$29988$6Dw7t
                         g$old*$29989$6Dw7t
                         g$new*$29990$6Dw7t)
                       (if (null? g$x*$29988$6Dw7t)
                         (values
                           '()
                           g$old*$29989$6Dw7t
                           g$new*$29990$6Dw7t)
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$rename$29946$6Dw7t
                                      (car g$x*$29988$6Dw7t)
                                      g$old*$29989$6Dw7t
                                      g$new*$29990$6Dw7t)))
                                 (case-lambda
                                   ((g$x$29991$6Dw7t
                                      g$old*$29992$6Dw7t
                                      g$new*$29993$6Dw7t)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$rename*$29947$6Dw7t
                                           (cdr g$x*$29988$6Dw7t)
                                           g$old*$29992$6Dw7t
                                           g$new*$29993$6Dw7t)))
                                      (case-lambda
                                        ((g$x*$29994$6Dw7t
                                           g$old*$29995$6Dw7t
                                           g$new*$29996$6Dw7t)
                                         (values
                                           (cons
                                             g$x$29991$6Dw7t
                                             g$x*$29994$6Dw7t)
                                           g$old*$29995$6Dw7t
                                           g$new*$29996$6Dw7t))))))))))))))))
          ((case-lambda
             ((g$t$29948$6Dw7t)
              ((case-lambda
                 ((g$ls/false$29949$6Dw7t)
                  (if g$ls/false$29949$6Dw7t
                    (apply
                      (case-lambda
                        ((g$b$29950$6Dw7t g$b*$29951$6Dw7t)
                         (g$cons*$23583$6Dw7t
                           (g$bless$29301$6Dw7t 'let)
                           '()
                           g$b$29950$6Dw7t
                           g$b*$29951$6Dw7t)))
                      g$ls/false$29949$6Dw7t)
                    ((case-lambda
                       ((g$t$29952$6Dw7t)
                        ((case-lambda
                           ((g$ls/false$29953$6Dw7t)
                            (if g$ls/false$29953$6Dw7t
                              (apply
                                (case-lambda
                                  ((g$lhs*$29954$6Dw7t
                                     g$rhs*$29955$6Dw7t
                                     g$b$29956$6Dw7t
                                     g$b*$29957$6Dw7t)
                                   (g$bless$29301$6Dw7t
                                     ((letrec ((g$f$29958$6Dw7t
                                                 (case-lambda
                                                   ((g$lhs*$29959$6Dw7t
                                                      g$rhs*$29960$6Dw7t
                                                      g$old*$29961$6Dw7t
                                                      g$new*$29962$6Dw7t)
                                                    (if (null?
                                                          g$lhs*$29959$6Dw7t)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$23581$6Dw7t
                                                            list
                                                            g$old*$29961$6Dw7t
                                                            g$new*$29962$6Dw7t)
                                                          (cons
                                                            g$b$29956$6Dw7t
                                                            g$b*$29957$6Dw7t)))
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            ((case-lambda
                                                               ((g$t$29963$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$ls/false$29964$6Dw7t)
                                                                    (if g$ls/false$29964$6Dw7t
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x*$29965$6Dw7t)
                                                                           (call-with-values
                                                                             (case-lambda
                                                                               (()
                                                                                (g$rename*$29947$6Dw7t
                                                                                  g$x*$29965$6Dw7t
                                                                                  g$old*$29961$6Dw7t
                                                                                  g$new*$29962$6Dw7t)))
                                                                             (case-lambda
                                                                               ((g$y*$29969$6Dw7t
                                                                                  g$old*$29970$6Dw7t
                                                                                  g$new*$29971$6Dw7t)
                                                                                ((case-lambda
                                                                                   ((g$new*$29972$6Dw7t
                                                                                      g$old*$29973$6Dw7t
                                                                                      g$y*$29974$6Dw7t)
                                                                                    (list
                                                                                      'call-with-values
                                                                                      (list
                                                                                        'lambda
                                                                                        '()
                                                                                        (car g$rhs*$29960$6Dw7t))
                                                                                      (list
                                                                                        'lambda
                                                                                        g$y*$29974$6Dw7t
                                                                                        (g$f$29958$6Dw7t
                                                                                          (cdr g$lhs*$29959$6Dw7t)
                                                                                          (cdr g$rhs*$29960$6Dw7t)
                                                                                          g$old*$29973$6Dw7t
                                                                                          g$new*$29972$6Dw7t)))))
                                                                                 g$new*$29971$6Dw7t
                                                                                 g$old*$29970$6Dw7t
                                                                                 g$y*$29969$6Dw7t))))))
                                                                        g$ls/false$29964$6Dw7t)
                                                                      ((case-lambda
                                                                         ((g$t$29975$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$ls/false$29976$6Dw7t)
                                                                              (if g$ls/false$29976$6Dw7t
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$x*$29977$6Dw7t
                                                                                       g$x$29978$6Dw7t)
                                                                                     (call-with-values
                                                                                       (case-lambda
                                                                                         (()
                                                                                          (g$rename$29946$6Dw7t
                                                                                            g$x$29978$6Dw7t
                                                                                            g$old*$29961$6Dw7t
                                                                                            g$new*$29962$6Dw7t)))
                                                                                       (case-lambda
                                                                                         ((g$y$29979$6Dw7t
                                                                                            g$old*$29980$6Dw7t
                                                                                            g$new*$29981$6Dw7t)
                                                                                          (call-with-values
                                                                                            (case-lambda
                                                                                              (()
                                                                                               (g$rename*$29947$6Dw7t
                                                                                                 g$x*$29977$6Dw7t
                                                                                                 g$old*$29980$6Dw7t
                                                                                                 g$new*$29981$6Dw7t)))
                                                                                            (case-lambda
                                                                                              ((g$y*$29982$6Dw7t
                                                                                                 g$old*$29983$6Dw7t
                                                                                                 g$new*$29984$6Dw7t)
                                                                                               (list
                                                                                                 'call-with-values
                                                                                                 (list
                                                                                                   'lambda
                                                                                                   '()
                                                                                                   (car g$rhs*$29960$6Dw7t))
                                                                                                 (list
                                                                                                   'lambda
                                                                                                   (g$append$23587$6Dw7t
                                                                                                     g$y*$29982$6Dw7t
                                                                                                     g$y$29979$6Dw7t)
                                                                                                   (g$f$29958$6Dw7t
                                                                                                     (cdr g$lhs*$29959$6Dw7t)
                                                                                                     (cdr g$rhs*$29960$6Dw7t)
                                                                                                     g$old*$29983$6Dw7t
                                                                                                     g$new*$29984$6Dw7t)))))))))))
                                                                                  g$ls/false$29976$6Dw7t)
                                                                                ((case-lambda
                                                                                   ((g$t$29985$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$29986$6Dw7t)
                                                                                        (if g$ls/false$29986$6Dw7t
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$29987$6Dw7t)
                                                                                               (g$syntax-violation$29458$6Dw7t
                                                                                                 '#f
                                                                                                 '"malformed bindings"
                                                                                                 g$stx$29945$6Dw7t
                                                                                                 g$others$29987$6Dw7t)))
                                                                                            g$ls/false$29986$6Dw7t)
                                                                                          (g$syntax-violation$29458$6Dw7t
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$29985$6Dw7t))))
                                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                                       g$t$29985$6Dw7t
                                                                                       'any))))
                                                                                 g$t$29975$6Dw7t))))
                                                                           (g$syntax-dispatch$29338$6Dw7t
                                                                             g$t$29975$6Dw7t
                                                                             '#(each+
                                                                                any
                                                                                ()
                                                                                any)))))
                                                                       g$t$29963$6Dw7t))))
                                                                 (g$syntax-dispatch$29338$6Dw7t
                                                                   g$t$29963$6Dw7t
                                                                   'each-any))))
                                                             (car g$lhs*$29959$6Dw7t)))))))))))
                                        g$f$29958$6Dw7t)
                                      g$lhs*$29954$6Dw7t
                                      g$rhs*$29955$6Dw7t
                                      '()
                                      '()))))
                                g$ls/false$29953$6Dw7t)
                              (g$syntax-violation$29458$6Dw7t
                                '#f
                                '"invalid syntax"
                                g$t$29952$6Dw7t))))
                         (g$syntax-dispatch$29338$6Dw7t
                           g$t$29952$6Dw7t
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$29948$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$29948$6Dw7t
                 '(_ () any . each-any)))))
           g$stx$29945$6Dw7t)))))
   (g$let*-values-macro$29306$6Dw7t
     g$let*-values-macro$32905$6Dw7t
     (case-lambda
       ((g$stx$30001$6Dw7t)
        (letrec* ((g$check$30002$6Dw7t
                    (case-lambda
                      ((g$x*$30026$6Dw7t)
                       (if (not (null? g$x*$30026$6Dw7t))
                         ((case-lambda
                            ((g$x$30027$6Dw7t)
                             (begin
                               (if (not (g$id?$28840$6Dw7t
                                          g$x$30027$6Dw7t))
                                 (g$syntax-violation$29458$6Dw7t
                                   '#f
                                   '"not an identifier"
                                   g$stx$30001$6Dw7t
                                   g$x$30027$6Dw7t)
                                 (void))
                               (g$check$30002$6Dw7t
                                 (cdr g$x*$30026$6Dw7t))
                               (if (g$bound-id-member?$28847$6Dw7t
                                     g$x$30027$6Dw7t
                                     (cdr g$x*$30026$6Dw7t))
                                 (g$syntax-violation$29458$6Dw7t
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$30001$6Dw7t
                                   g$x$30027$6Dw7t)
                                 (void)))))
                          (car g$x*$30026$6Dw7t))
                         (void))))))
          ((case-lambda
             ((g$t$30003$6Dw7t)
              ((case-lambda
                 ((g$ls/false$30004$6Dw7t)
                  (if g$ls/false$30004$6Dw7t
                    (apply
                      (case-lambda
                        ((g$b$30005$6Dw7t g$b*$30006$6Dw7t)
                         (g$cons*$23583$6Dw7t
                           (g$bless$29301$6Dw7t 'let)
                           '()
                           g$b$30005$6Dw7t
                           g$b*$30006$6Dw7t)))
                      g$ls/false$30004$6Dw7t)
                    ((case-lambda
                       ((g$t$30007$6Dw7t)
                        ((case-lambda
                           ((g$ls/false$30008$6Dw7t)
                            (if g$ls/false$30008$6Dw7t
                              (apply
                                (case-lambda
                                  ((g$lhs*$30009$6Dw7t
                                     g$rhs*$30010$6Dw7t
                                     g$b$30011$6Dw7t
                                     g$b*$30012$6Dw7t)
                                   (g$bless$29301$6Dw7t
                                     ((letrec ((g$f$30013$6Dw7t
                                                 (case-lambda
                                                   ((g$lhs*$30014$6Dw7t
                                                      g$rhs*$30015$6Dw7t)
                                                    (if (null?
                                                          g$lhs*$30014$6Dw7t)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$30011$6Dw7t
                                                          g$b*$30012$6Dw7t))
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            ((case-lambda
                                                               ((g$t$30016$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$ls/false$30017$6Dw7t)
                                                                    (if g$ls/false$30017$6Dw7t
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x*$30018$6Dw7t)
                                                                           (begin
                                                                             (g$check$30002$6Dw7t
                                                                               g$x*$30018$6Dw7t)
                                                                             (list
                                                                               'call-with-values
                                                                               (list
                                                                                 'lambda
                                                                                 '()
                                                                                 (car g$rhs*$30015$6Dw7t))
                                                                               (list
                                                                                 'lambda
                                                                                 g$x*$30018$6Dw7t
                                                                                 (g$f$30013$6Dw7t
                                                                                   (cdr g$lhs*$30014$6Dw7t)
                                                                                   (cdr g$rhs*$30015$6Dw7t)))))))
                                                                        g$ls/false$30017$6Dw7t)
                                                                      ((case-lambda
                                                                         ((g$t$30019$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30020$6Dw7t)
                                                                              (if g$ls/false$30020$6Dw7t
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$x*$30021$6Dw7t
                                                                                       g$x$30022$6Dw7t)
                                                                                     (begin
                                                                                       (g$check$30002$6Dw7t
                                                                                         (cons
                                                                                           g$x$30022$6Dw7t
                                                                                           g$x*$30021$6Dw7t))
                                                                                       (list
                                                                                         'call-with-values
                                                                                         (list
                                                                                           'lambda
                                                                                           '()
                                                                                           (car g$rhs*$30015$6Dw7t))
                                                                                         (list
                                                                                           'lambda
                                                                                           (g$append$23587$6Dw7t
                                                                                             g$x*$30021$6Dw7t
                                                                                             g$x$30022$6Dw7t)
                                                                                           (g$f$30013$6Dw7t
                                                                                             (cdr g$lhs*$30014$6Dw7t)
                                                                                             (cdr g$rhs*$30015$6Dw7t)))))))
                                                                                  g$ls/false$30020$6Dw7t)
                                                                                ((case-lambda
                                                                                   ((g$t$30023$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$30024$6Dw7t)
                                                                                        (if g$ls/false$30024$6Dw7t
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$30025$6Dw7t)
                                                                                               (g$syntax-violation$29458$6Dw7t
                                                                                                 '#f
                                                                                                 '"malformed bindings"
                                                                                                 g$stx$30001$6Dw7t
                                                                                                 g$others$30025$6Dw7t)))
                                                                                            g$ls/false$30024$6Dw7t)
                                                                                          (g$syntax-violation$29458$6Dw7t
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$30023$6Dw7t))))
                                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                                       g$t$30023$6Dw7t
                                                                                       'any))))
                                                                                 g$t$30019$6Dw7t))))
                                                                           (g$syntax-dispatch$29338$6Dw7t
                                                                             g$t$30019$6Dw7t
                                                                             '#(each+
                                                                                any
                                                                                ()
                                                                                any)))))
                                                                       g$t$30016$6Dw7t))))
                                                                 (g$syntax-dispatch$29338$6Dw7t
                                                                   g$t$30016$6Dw7t
                                                                   'each-any))))
                                                             (car g$lhs*$30014$6Dw7t)))))))))))
                                        g$f$30013$6Dw7t)
                                      g$lhs*$30009$6Dw7t
                                      g$rhs*$30010$6Dw7t))))
                                g$ls/false$30008$6Dw7t)
                              (g$syntax-violation$29458$6Dw7t
                                '#f
                                '"invalid syntax"
                                g$t$30007$6Dw7t))))
                         (g$syntax-dispatch$29338$6Dw7t
                           g$t$30007$6Dw7t
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$30003$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$30003$6Dw7t
                 '(_ () any . each-any)))))
           g$stx$30001$6Dw7t)))))
   (g$trace-lambda-macro$29307$6Dw7t
     g$trace-lambda-macro$32906$6Dw7t
     (case-lambda
       ((g$stx$30028$6Dw7t)
        ((case-lambda
           ((g$t$30029$6Dw7t)
            ((case-lambda
               ((g$ls/false$30030$6Dw7t)
                (if g$ls/false$30030$6Dw7t
                  (apply
                    (case-lambda
                      ((g$who$30031$6Dw7t
                         g$fmls$30032$6Dw7t
                         g$b$30033$6Dw7t
                         g$b*$30034$6Dw7t)
                       (if (g$valid-bound-ids?$28845$6Dw7t
                             g$fmls$30032$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$30031$6Dw7t)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$30032$6Dw7t
                                 (cons
                                   g$b$30033$6Dw7t
                                   g$b*$30034$6Dw7t)))))
                         (g$invalid-fmls-error$29303$6Dw7t
                           g$stx$30028$6Dw7t
                           g$fmls$30032$6Dw7t))))
                    g$ls/false$30030$6Dw7t)
                  ((case-lambda
                     ((g$t$30035$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$30036$6Dw7t)
                          (if g$ls/false$30036$6Dw7t
                            (apply
                              (case-lambda
                                ((g$who$30037$6Dw7t
                                   g$fmls$30038$6Dw7t
                                   g$last$30039$6Dw7t
                                   g$b$30040$6Dw7t
                                   g$b*$30041$6Dw7t)
                                 (if (g$valid-bound-ids?$28845$6Dw7t
                                       (cons
                                         g$last$30039$6Dw7t
                                         g$fmls$30038$6Dw7t))
                                   (g$bless$29301$6Dw7t
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$30037$6Dw7t)
                                       (cons
                                         'lambda
                                         (cons
                                           (g$append$23587$6Dw7t
                                             g$fmls$30038$6Dw7t
                                             g$last$30039$6Dw7t)
                                           (cons
                                             g$b$30040$6Dw7t
                                             g$b*$30041$6Dw7t)))))
                                   (g$invalid-fmls-error$29303$6Dw7t
                                     g$stx$30028$6Dw7t
                                     (g$append$23587$6Dw7t
                                       g$fmls$30038$6Dw7t
                                       g$last$30039$6Dw7t)))))
                              g$ls/false$30036$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$30035$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$30035$6Dw7t
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$30029$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30029$6Dw7t
               '(_ any each-any any . each-any)))))
         g$stx$30028$6Dw7t))))
   (g$trace-define-macro$29308$6Dw7t
     g$trace-define-macro$32907$6Dw7t
     (case-lambda
       ((g$stx$30042$6Dw7t)
        ((case-lambda
           ((g$t$30043$6Dw7t)
            ((case-lambda
               ((g$ls/false$30044$6Dw7t)
                (if g$ls/false$30044$6Dw7t
                  (apply
                    (case-lambda
                      ((g$who$30045$6Dw7t
                         g$fmls$30046$6Dw7t
                         g$b$30047$6Dw7t
                         g$b*$30048$6Dw7t)
                       (if (g$valid-bound-ids?$28845$6Dw7t
                             g$fmls$30046$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (list
                             'define
                             g$who$30045$6Dw7t
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$30045$6Dw7t)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$30046$6Dw7t
                                   (cons
                                     g$b$30047$6Dw7t
                                     g$b*$30048$6Dw7t))))))
                         (g$invalid-fmls-error$29303$6Dw7t
                           g$stx$30042$6Dw7t
                           g$fmls$30046$6Dw7t))))
                    g$ls/false$30044$6Dw7t)
                  ((case-lambda
                     ((g$t$30049$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$30050$6Dw7t)
                          (if g$ls/false$30050$6Dw7t
                            (apply
                              (case-lambda
                                ((g$who$30051$6Dw7t
                                   g$fmls$30052$6Dw7t
                                   g$last$30053$6Dw7t
                                   g$b$30054$6Dw7t
                                   g$b*$30055$6Dw7t)
                                 (if (g$valid-bound-ids?$28845$6Dw7t
                                       (cons
                                         g$last$30053$6Dw7t
                                         g$fmls$30052$6Dw7t))
                                   (g$bless$29301$6Dw7t
                                     (list
                                       'define
                                       g$who$30051$6Dw7t
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$30051$6Dw7t)
                                         (cons
                                           'lambda
                                           (cons
                                             (g$append$23587$6Dw7t
                                               g$fmls$30052$6Dw7t
                                               g$last$30053$6Dw7t)
                                             (cons
                                               g$b$30054$6Dw7t
                                               g$b*$30055$6Dw7t))))))
                                   (g$invalid-fmls-error$29303$6Dw7t
                                     g$stx$30042$6Dw7t
                                     (g$append$23587$6Dw7t
                                       g$fmls$30052$6Dw7t
                                       g$last$30053$6Dw7t)))))
                              g$ls/false$30050$6Dw7t)
                            ((case-lambda
                               ((g$t$30056$6Dw7t)
                                ((case-lambda
                                   ((g$ls/false$30057$6Dw7t)
                                    (if g$ls/false$30057$6Dw7t
                                      (apply
                                        (case-lambda
                                          ((g$who$30058$6Dw7t
                                             g$expr$30059$6Dw7t)
                                           (if (g$id?$28840$6Dw7t
                                                 g$who$30058$6Dw7t)
                                             (g$bless$29301$6Dw7t
                                               (list
                                                 'define
                                                 g$who$30058$6Dw7t
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$30059$6Dw7t))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$30058$6Dw7t)
                                                             '(v)))
                                                         '(v)))))))
                                             (g$syntax-violation$29458$6Dw7t
                                               '#f
                                               '"invalid name"
                                               g$stx$30042$6Dw7t))))
                                        g$ls/false$30057$6Dw7t)
                                      (g$syntax-violation$29458$6Dw7t
                                        '#f
                                        '"invalid syntax"
                                        g$t$30056$6Dw7t))))
                                 (g$syntax-dispatch$29338$6Dw7t
                                   g$t$30056$6Dw7t
                                   '(_ any any)))))
                             g$t$30049$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$30049$6Dw7t
                         '(_ (any . #(each+ any () any))
                             any
                             .
                             each-any)))))
                   g$t$30043$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30043$6Dw7t
               '(_ (any . each-any) any . each-any)))))
         g$stx$30042$6Dw7t))))
   (g$trace-define-syntax-macro$29309$6Dw7t
     g$trace-define-syntax-macro$32908$6Dw7t
     (case-lambda
       ((g$stx$30060$6Dw7t)
        ((case-lambda
           ((g$t$30061$6Dw7t)
            ((case-lambda
               ((g$ls/false$30062$6Dw7t)
                (if g$ls/false$30062$6Dw7t
                  (apply
                    (case-lambda
                      ((g$who$30063$6Dw7t g$expr$30064$6Dw7t)
                       (if (g$id?$28840$6Dw7t g$who$30063$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (list
                             'define-syntax
                             g$who$30063$6Dw7t
                             (list
                               'make-traced-macro
                               (list 'quote g$who$30063$6Dw7t)
                               g$expr$30064$6Dw7t)))
                         (g$syntax-violation$29458$6Dw7t
                           '#f
                           '"invalid name"
                           g$stx$30060$6Dw7t))))
                    g$ls/false$30062$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30061$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30061$6Dw7t
               '(_ any any)))))
         g$stx$30060$6Dw7t))))
   (g$trace-let/rec-syntax$29310$6Dw7t
     g$trace-let/rec-syntax$32909$6Dw7t
     (case-lambda
       ((g$who$30065$6Dw7t)
        (case-lambda
          ((g$stx$30066$6Dw7t)
           ((case-lambda
              ((g$t$30067$6Dw7t)
               ((case-lambda
                  ((g$ls/false$30068$6Dw7t)
                   (if g$ls/false$30068$6Dw7t
                     (apply
                       (case-lambda
                         ((g$lhs*$30069$6Dw7t
                            g$rhs*$30070$6Dw7t
                            g$b$30071$6Dw7t
                            g$b*$30072$6Dw7t)
                          (if (g$valid-bound-ids?$28845$6Dw7t
                                g$lhs*$30069$6Dw7t)
                            ((case-lambda
                               ((g$rhs*$30073$6Dw7t)
                                (g$bless$29301$6Dw7t
                                  (cons
                                    g$who$30065$6Dw7t
                                    (cons
                                      (g$map$23581$6Dw7t
                                        list
                                        g$lhs*$30069$6Dw7t
                                        g$rhs*$30073$6Dw7t)
                                      (cons
                                        g$b$30071$6Dw7t
                                        g$b*$30072$6Dw7t))))))
                             (g$map$23581$6Dw7t
                               (case-lambda
                                 ((g$lhs$30074$6Dw7t g$rhs$30075$6Dw7t)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$30074$6Dw7t)
                                    g$rhs$30075$6Dw7t)))
                               g$lhs*$30069$6Dw7t
                               g$rhs*$30070$6Dw7t))
                            (g$invalid-fmls-error$29303$6Dw7t
                              g$stx$30066$6Dw7t
                              g$lhs*$30069$6Dw7t))))
                       g$ls/false$30068$6Dw7t)
                     (g$syntax-violation$29458$6Dw7t
                       '#f
                       '"invalid syntax"
                       g$t$30067$6Dw7t))))
                (g$syntax-dispatch$29338$6Dw7t
                  g$t$30067$6Dw7t
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$30066$6Dw7t))))))
   (g$trace-let-syntax-macro$29311$6Dw7t
     g$trace-let-syntax-macro$32910$6Dw7t
     (g$trace-let/rec-syntax$29310$6Dw7t 'let-syntax))
   (g$trace-letrec-syntax-macro$29312$6Dw7t
     g$trace-letrec-syntax-macro$32911$6Dw7t
     (g$trace-let/rec-syntax$29310$6Dw7t 'letrec-syntax))
   (g$guard-macro$29313$6Dw7t
     g$guard-macro$32912$6Dw7t
     (case-lambda
       ((g$x$30076$6Dw7t)
        (letrec* ((g$gen-clauses$30077$6Dw7t
                    (case-lambda
                      ((g$con$30089$6Dw7t
                         g$outerk$30090$6Dw7t
                         g$clause*$30091$6Dw7t)
                       (letrec* ((g$f$30092$6Dw7t
                                   (case-lambda
                                     ((g$x$30120$6Dw7t g$k$30121$6Dw7t)
                                      ((case-lambda
                                         ((g$t$30122$6Dw7t)
                                          ((case-lambda
                                             ((g$ls/false$30123$6Dw7t)
                                              (if g$ls/false$30123$6Dw7t
                                                (apply
                                                  (case-lambda
                                                    ((g$e$30124$6Dw7t
                                                       g$p$30125$6Dw7t)
                                                     ((case-lambda
                                                        ((g$t$30126$6Dw7t)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$30126$6Dw7t
                                                               g$e$30124$6Dw7t))
                                                           (list
                                                             'if
                                                             g$t$30126$6Dw7t
                                                             (list
                                                               g$p$30125$6Dw7t
                                                               g$t$30126$6Dw7t)
                                                             g$k$30121$6Dw7t))))
                                                      (gensym))))
                                                  g$ls/false$30123$6Dw7t)
                                                ((case-lambda
                                                   ((g$t$30127$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$30128$6Dw7t)
                                                        (if g$ls/false$30128$6Dw7t
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$30129$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$t$30130$6Dw7t)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$30130$6Dw7t
                                                                         g$e$30129$6Dw7t))
                                                                     (list
                                                                       'if
                                                                       g$t$30130$6Dw7t
                                                                       g$t$30130$6Dw7t
                                                                       g$k$30121$6Dw7t))))
                                                                (gensym))))
                                                            g$ls/false$30128$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$30131$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$30132$6Dw7t)
                                                                  (if g$ls/false$30132$6Dw7t
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$30133$6Dw7t
                                                                           g$v$30134$6Dw7t
                                                                           g$v*$30135$6Dw7t)
                                                                         (list
                                                                           'if
                                                                           g$e$30133$6Dw7t
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$30134$6Dw7t
                                                                               g$v*$30135$6Dw7t))
                                                                           g$k$30121$6Dw7t)))
                                                                      g$ls/false$30132$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$t$30136$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30137$6Dw7t)
                                                                            (if g$ls/false$30137$6Dw7t
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$29458$6Dw7t
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$30120$6Dw7t)))
                                                                                g$ls/false$30137$6Dw7t)
                                                                              (g$syntax-violation$29458$6Dw7t
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$30136$6Dw7t))))
                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                           g$t$30136$6Dw7t
                                                                           '_))))
                                                                     g$t$30131$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$30131$6Dw7t
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$30127$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$30127$6Dw7t
                                                       '(any)))))
                                                 g$t$30122$6Dw7t))))
                                           (g$syntax-dispatch$29338$6Dw7t
                                             g$t$30122$6Dw7t
                                             '(any #(scheme-id =>)
                                                   any)))))
                                       g$x$30120$6Dw7t))))
                                 (g$f*$30093$6Dw7t
                                   (case-lambda
                                     ((g$x*$30100$6Dw7t)
                                      ((case-lambda
                                         ((g$t$30101$6Dw7t)
                                          ((case-lambda
                                             ((g$ls/false$30102$6Dw7t)
                                              (if g$ls/false$30102$6Dw7t
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$30089$6Dw7t)
                                                       '#t)))
                                                  g$ls/false$30102$6Dw7t)
                                                ((case-lambda
                                                   ((g$t$30103$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$30104$6Dw7t)
                                                        (if g$ls/false$30104$6Dw7t
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$30105$6Dw7t
                                                                 g$e*$30106$6Dw7t)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$30105$6Dw7t
                                                                     g$e*$30106$6Dw7t))
                                                                 '#f)))
                                                            g$ls/false$30104$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$30107$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$30108$6Dw7t)
                                                                  (if g$ls/false$30108$6Dw7t
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$30109$6Dw7t
                                                                           g$cls*$30110$6Dw7t)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$30093$6Dw7t
                                                                                g$cls*$30110$6Dw7t)))
                                                                           (case-lambda
                                                                             ((g$e$30113$6Dw7t
                                                                                g$g$30114$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$g$30115$6Dw7t
                                                                                    g$e$30116$6Dw7t)
                                                                                  (values
                                                                                    (g$f$30092$6Dw7t
                                                                                      g$cls$30109$6Dw7t
                                                                                      g$e$30116$6Dw7t)
                                                                                    g$g$30115$6Dw7t)))
                                                                               g$g$30114$6Dw7t
                                                                               g$e$30113$6Dw7t))))))
                                                                      g$ls/false$30108$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$t$30117$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30118$6Dw7t)
                                                                            (if g$ls/false$30118$6Dw7t
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$30119$6Dw7t)
                                                                                   (g$syntax-violation$29458$6Dw7t
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$30119$6Dw7t)))
                                                                                g$ls/false$30118$6Dw7t)
                                                                              (g$syntax-violation$29458$6Dw7t
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$30117$6Dw7t))))
                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                           g$t$30117$6Dw7t
                                                                           'any))))
                                                                     g$t$30107$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$30107$6Dw7t
                                                                 '(any .
                                                                       any)))))
                                                           g$t$30103$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$30103$6Dw7t
                                                       '((#(scheme-id
                                                            else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$30101$6Dw7t))))
                                           (g$syntax-dispatch$29338$6Dw7t
                                             g$t$30101$6Dw7t
                                             '()))))
                                       g$x*$30100$6Dw7t)))))
                         (call-with-values
                           (case-lambda
                             (()
                              (g$f*$30093$6Dw7t g$clause*$30091$6Dw7t)))
                           (case-lambda
                             ((g$code$30096$6Dw7t g$raisek$30097$6Dw7t)
                              ((case-lambda
                                 ((g$raisek$30098$6Dw7t
                                    g$code$30099$6Dw7t)
                                  (if g$raisek$30098$6Dw7t
                                    (list
                                      g$outerk$30090$6Dw7t
                                      g$code$30099$6Dw7t)
                                    g$code$30099$6Dw7t)))
                               g$raisek$30097$6Dw7t
                               g$code$30096$6Dw7t)))))))))
          ((case-lambda
             ((g$t$30078$6Dw7t)
              ((case-lambda
                 ((g$ls/false$30079$6Dw7t)
                  (if (if g$ls/false$30079$6Dw7t
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$30080$6Dw7t
                                 g$clause*$30081$6Dw7t
                                 g$b$30082$6Dw7t
                                 g$b*$30083$6Dw7t)
                               (g$id?$28840$6Dw7t g$con$30080$6Dw7t)))
                            g$ls/false$30079$6Dw7t))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$30084$6Dw7t
                           g$clause*$30085$6Dw7t
                           g$b$30086$6Dw7t
                           g$b*$30087$6Dw7t)
                         ((case-lambda
                            ((g$outerk$30088$6Dw7t)
                             (g$bless$29301$6Dw7t
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$30088$6Dw7t)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$30084$6Dw7t)
                                           (g$gen-clauses$30077$6Dw7t
                                             g$con$30084$6Dw7t
                                             g$outerk$30088$6Dw7t
                                             g$clause*$30085$6Dw7t))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               g$b$30086$6Dw7t
                                               g$b*$30087$6Dw7t)))))))))))
                          (gensym))))
                      g$ls/false$30079$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$30078$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$30078$6Dw7t
                 '(_ (any . each-any) any . each-any)))))
           g$x$30076$6Dw7t)))))
   (g$define-enumeration-macro$29314$6Dw7t
     g$define-enumeration-macro$32913$6Dw7t
     (case-lambda
       ((g$stx$30138$6Dw7t)
        (letrec* ((g$set?$30139$6Dw7t
                    (case-lambda
                      ((g$x$30152$6Dw7t)
                       ((case-lambda
                          ((g$t$30153$6Dw7t)
                           (if g$t$30153$6Dw7t
                             g$t$30153$6Dw7t
                             (begin
                               '#f
                               (if (not (g$memq$23569$6Dw7t
                                          (car g$x$30152$6Dw7t)
                                          (cdr g$x$30152$6Dw7t)))
                                 (begin
                                   '#f
                                   (g$set?$30139$6Dw7t
                                     (cdr g$x$30152$6Dw7t)))
                                 '#f)))))
                        (null? g$x$30152$6Dw7t)))))
                  (g$remove-dups$30140$6Dw7t
                    (case-lambda
                      ((g$ls$30151$6Dw7t)
                       (if (null? g$ls$30151$6Dw7t)
                         '()
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (cons
                                 (car g$ls$30151$6Dw7t)
                                 (g$remove-dups$30140$6Dw7t
                                   (g$remq$23592$6Dw7t
                                     (car g$ls$30151$6Dw7t)
                                     (cdr g$ls$30151$6Dw7t)))))))))))))
          ((case-lambda
             ((g$t$30141$6Dw7t)
              ((case-lambda
                 ((g$ls/false$30142$6Dw7t)
                  (if (if g$ls/false$30142$6Dw7t
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$30143$6Dw7t
                                 g$id*$30144$6Dw7t
                                 g$maker$30145$6Dw7t)
                               (if (g$id?$28840$6Dw7t
                                     g$name$30143$6Dw7t)
                                 (if (g$id?$28840$6Dw7t
                                       g$maker$30145$6Dw7t)
                                   (begin
                                     '#f
                                     (g$for-all$23579$6Dw7t
                                       g$id?$28840$6Dw7t
                                       g$id*$30144$6Dw7t))
                                   '#f)
                                 '#f)))
                            g$ls/false$30142$6Dw7t))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$30146$6Dw7t
                           g$id*$30147$6Dw7t
                           g$maker$30148$6Dw7t)
                         ((case-lambda
                            ((g$name*$30149$6Dw7t g$mk$30150$6Dw7t)
                             (g$bless$29301$6Dw7t
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$30150$6Dw7t
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list
                                         'quote
                                         g$name*$30149$6Dw7t))))
                                 (list
                                   'define-syntax
                                   g$name$30146$6Dw7t
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list
                                               'quote
                                               g$name*$30149$6Dw7t))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list
                                                 'quote
                                                 g$name$30146$6Dw7t)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$30148$6Dw7t
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$30148$6Dw7t)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$30149$6Dw7t))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$30148$6Dw7t)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$30150$6Dw7t
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$30140$6Dw7t
                            (g$syntax->datum$29461$6Dw7t
                              g$id*$30147$6Dw7t))
                          (gensym))))
                      g$ls/false$30142$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$30141$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$30141$6Dw7t
                 '(_ any each-any any)))))
           g$stx$30138$6Dw7t)))))
   (g$time-macro$29315$6Dw7t
     g$time-macro$32914$6Dw7t
     (case-lambda
       ((g$stx$30154$6Dw7t)
        ((case-lambda
           ((g$t$30155$6Dw7t)
            ((case-lambda
               ((g$ls/false$30156$6Dw7t)
                (if g$ls/false$30156$6Dw7t
                  (apply
                    (case-lambda
                      ((g$expr$30157$6Dw7t)
                       ((case-lambda
                          ((g$str$30158$6Dw7t)
                           (g$bless$29301$6Dw7t
                             (list
                               'time-it
                               g$str$30158$6Dw7t
                               (list 'lambda '() g$expr$30157$6Dw7t)))))
                        (call-with-values
                          (case-lambda
                            (()
                             (g$open-string-output-port$27122$6Dw7t)))
                          (case-lambda
                            ((g$p$30161$6Dw7t g$e$30162$6Dw7t)
                             ((case-lambda
                                ((g$e$30163$6Dw7t g$p$30164$6Dw7t)
                                 (begin
                                   (write
                                     (g$syntax->datum$29461$6Dw7t
                                       g$expr$30157$6Dw7t)
                                     g$p$30164$6Dw7t)
                                   (g$e$30163$6Dw7t))))
                              g$e$30162$6Dw7t
                              g$p$30161$6Dw7t)))))))
                    g$ls/false$30156$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30155$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30155$6Dw7t '(_ any)))))
         g$stx$30154$6Dw7t))))
   (g$delay-macro$29316$6Dw7t
     g$delay-macro$32915$6Dw7t
     (case-lambda
       ((g$stx$30165$6Dw7t)
        ((case-lambda
           ((g$t$30166$6Dw7t)
            ((case-lambda
               ((g$ls/false$30167$6Dw7t)
                (if g$ls/false$30167$6Dw7t
                  (apply
                    (case-lambda
                      ((g$expr$30168$6Dw7t)
                       (g$bless$29301$6Dw7t
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$30168$6Dw7t)))))
                    g$ls/false$30167$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30166$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30166$6Dw7t '(_ any)))))
         g$stx$30165$6Dw7t))))
   (g$assert-macro$29317$6Dw7t
     g$assert-macro$32916$6Dw7t
     (case-lambda
       ((g$stx$30169$6Dw7t)
        ((case-lambda
           ((g$t$30170$6Dw7t)
            ((case-lambda
               ((g$ls/false$30171$6Dw7t)
                (if g$ls/false$30171$6Dw7t
                  (apply
                    (case-lambda
                      ((g$expr$30172$6Dw7t)
                       ((case-lambda
                          ((g$pos$30173$6Dw7t)
                           (g$bless$29301$6Dw7t
                             (list
                               'unless
                               g$expr$30172$6Dw7t
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$30172$6Dw7t)
                                 (list 'quote g$pos$30173$6Dw7t))))))
                        ((case-lambda
                           ((g$t$30174$6Dw7t)
                            (if g$t$30174$6Dw7t
                              g$t$30174$6Dw7t
                              (begin
                                '#f
                                (g$expression-position$29452$6Dw7t
                                  g$expr$30172$6Dw7t)))))
                         (g$expression-position$29452$6Dw7t
                           g$stx$30169$6Dw7t)))))
                    g$ls/false$30171$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30170$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30170$6Dw7t '(_ any)))))
         g$stx$30169$6Dw7t))))
   (g$endianness-macro$29318$6Dw7t
     g$endianness-macro$32917$6Dw7t
     (case-lambda
       ((g$stx$30175$6Dw7t)
        ((case-lambda
           ((g$t$30176$6Dw7t)
            ((case-lambda
               ((g$ls/false$30177$6Dw7t)
                (if g$ls/false$30177$6Dw7t
                  (apply
                    (case-lambda
                      ((g$e$30178$6Dw7t)
                       ((case-lambda
                          ((g$t$30179$6Dw7t)
                           (if (eqv? g$t$30179$6Dw7t 'little)
                             (g$bless$29301$6Dw7t ''little)
                             (if (eqv? g$t$30179$6Dw7t 'big)
                               (g$bless$29301$6Dw7t ''big)
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     (g$syntax-violation$29458$6Dw7t
                                       '#f
                                       '"endianness must be big or little"
                                       g$stx$30175$6Dw7t)))))))))
                        (g$syntax->datum$29461$6Dw7t g$e$30178$6Dw7t))))
                    g$ls/false$30177$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30176$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30176$6Dw7t '(_ any)))))
         g$stx$30175$6Dw7t))))
   (g$identifier-syntax-macro$29319$6Dw7t
     g$identifier-syntax-macro$32918$6Dw7t
     (case-lambda
       ((g$stx$30180$6Dw7t)
        ((case-lambda
           ((g$t$30181$6Dw7t)
            ((case-lambda
               ((g$ls/false$30182$6Dw7t)
                (if g$ls/false$30182$6Dw7t
                  (apply
                    (case-lambda
                      ((g$expr$30183$6Dw7t)
                       (g$bless$29301$6Dw7t
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$30183$6Dw7t))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$30183$6Dw7t)
                                   '(#'(e* ...))))))))))
                    g$ls/false$30182$6Dw7t)
                  ((case-lambda
                     ((g$t$30184$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$30185$6Dw7t)
                          (if (if g$ls/false$30185$6Dw7t
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$30186$6Dw7t
                                         g$expr1$30187$6Dw7t
                                         g$id2$30188$6Dw7t
                                         g$expr2$30189$6Dw7t
                                         g$expr3$30190$6Dw7t)
                                       (if (g$id?$28840$6Dw7t
                                             g$id1$30186$6Dw7t)
                                         (if (g$id?$28840$6Dw7t
                                               g$id2$30188$6Dw7t)
                                           (begin
                                             '#f
                                             (g$id?$28840$6Dw7t
                                               g$expr2$30189$6Dw7t))
                                           '#f)
                                         '#f)))
                                    g$ls/false$30185$6Dw7t))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$30191$6Dw7t
                                   g$expr1$30192$6Dw7t
                                   g$id2$30193$6Dw7t
                                   g$expr2$30194$6Dw7t
                                   g$expr3$30195$6Dw7t)
                                 (g$bless$29301$6Dw7t
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             g$expr1$30192$6Dw7t))
                                         (list
                                           (list
                                             'set!
                                             'id
                                             g$expr2$30194$6Dw7t)
                                           (list
                                             'syntax
                                             g$expr3$30195$6Dw7t))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$30192$6Dw7t
                                               '(e* ...))))))))))
                              g$ls/false$30185$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$30184$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$30184$6Dw7t
                         '(_ (any any)
                             ((#(scheme-id set!) any any) any))))))
                   g$t$30181$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30181$6Dw7t '(_ any)))))
         g$stx$30180$6Dw7t))))
   (g$do-macro$29320$6Dw7t
     g$do-macro$32919$6Dw7t
     (case-lambda
       ((g$stx$30196$6Dw7t)
        (letrec* ((g$bind$30197$6Dw7t
                    (case-lambda
                      ((g$x$30209$6Dw7t)
                       ((case-lambda
                          ((g$t$30210$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30211$6Dw7t)
                               (if g$ls/false$30211$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$x$30212$6Dw7t
                                        g$init$30213$6Dw7t)
                                      (list
                                        g$x$30212$6Dw7t
                                        g$init$30213$6Dw7t
                                        g$x$30212$6Dw7t)))
                                   g$ls/false$30211$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30214$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30215$6Dw7t)
                                         (if g$ls/false$30215$6Dw7t
                                           (apply
                                             (case-lambda
                                               ((g$x$30216$6Dw7t
                                                  g$init$30217$6Dw7t
                                                  g$step$30218$6Dw7t)
                                                (list
                                                  g$x$30216$6Dw7t
                                                  g$init$30217$6Dw7t
                                                  g$step$30218$6Dw7t)))
                                             g$ls/false$30215$6Dw7t)
                                           ((case-lambda
                                              ((g$t$30219$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$30220$6Dw7t)
                                                   (if g$ls/false$30220$6Dw7t
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$29458$6Dw7t
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$30196$6Dw7t)))
                                                       g$ls/false$30220$6Dw7t)
                                                     (g$syntax-violation$29458$6Dw7t
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30219$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$30219$6Dw7t
                                                  '_))))
                                            g$t$30214$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30214$6Dw7t
                                        '(any any any)))))
                                  g$t$30210$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30210$6Dw7t
                              '(any any)))))
                        g$x$30209$6Dw7t)))))
          ((case-lambda
             ((g$t$30198$6Dw7t)
              ((case-lambda
                 ((g$ls/false$30199$6Dw7t)
                  (if g$ls/false$30199$6Dw7t
                    (apply
                      (case-lambda
                        ((g$binding*$30200$6Dw7t
                           g$test$30201$6Dw7t
                           g$expr*$30202$6Dw7t
                           g$command*$30203$6Dw7t)
                         ((case-lambda
                            ((g$t$30204$6Dw7t)
                             ((case-lambda
                                ((g$ls/false$30205$6Dw7t)
                                 (if g$ls/false$30205$6Dw7t
                                   (apply
                                     (case-lambda
                                       ((g$x*$30206$6Dw7t
                                          g$init*$30207$6Dw7t
                                          g$step*$30208$6Dw7t)
                                        (if (g$valid-bound-ids?$28845$6Dw7t
                                              g$x*$30206$6Dw7t)
                                          (g$bless$29301$6Dw7t
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$30206$6Dw7t
                                                    (list
                                                      'if
                                                      g$test$30201$6Dw7t
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$30202$6Dw7t))
                                                      (cons
                                                        'begin
                                                        (g$append$23587$6Dw7t
                                                          g$command*$30203$6Dw7t
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$30208$6Dw7t))))))))
                                              (cons
                                                'loop
                                                g$init*$30207$6Dw7t)))
                                          (g$syntax-violation$29458$6Dw7t
                                            '#f
                                            '"invalid bindings"
                                            g$stx$30196$6Dw7t))))
                                     g$ls/false$30205$6Dw7t)
                                   (g$syntax-violation$29458$6Dw7t
                                     '#f
                                     '"invalid syntax"
                                     g$t$30204$6Dw7t))))
                              (g$syntax-dispatch$29338$6Dw7t
                                g$t$30204$6Dw7t
                                '#(each (any any any))))))
                          (g$map$23581$6Dw7t
                            g$bind$30197$6Dw7t
                            g$binding*$30200$6Dw7t))))
                      g$ls/false$30199$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$30198$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$30198$6Dw7t
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$30196$6Dw7t)))))
   (g$let*-macro$29321$6Dw7t
     g$let*-macro$32920$6Dw7t
     (case-lambda
       ((g$stx$30221$6Dw7t)
        ((case-lambda
           ((g$t$30222$6Dw7t)
            ((case-lambda
               ((g$ls/false$30223$6Dw7t)
                (if (if g$ls/false$30223$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$30224$6Dw7t
                               g$rhs*$30225$6Dw7t
                               g$b$30226$6Dw7t
                               g$b*$30227$6Dw7t)
                             (g$for-all$23579$6Dw7t
                               g$id?$28840$6Dw7t
                               g$lhs*$30224$6Dw7t)))
                          g$ls/false$30223$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$30228$6Dw7t
                         g$rhs*$30229$6Dw7t
                         g$b$30230$6Dw7t
                         g$b*$30231$6Dw7t)
                       (g$bless$29301$6Dw7t
                         ((letrec ((g$f$30232$6Dw7t
                                     (case-lambda
                                       ((g$x*$30233$6Dw7t)
                                        (if (null? g$x*$30233$6Dw7t)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$30230$6Dw7t
                                                g$b*$30231$6Dw7t)))
                                          (if (null?
                                                (cdr g$x*$30233$6Dw7t))
                                            (cons
                                              'let
                                              (cons
                                                (list
                                                  (car g$x*$30233$6Dw7t))
                                                (cons
                                                  g$b$30230$6Dw7t
                                                  g$b*$30231$6Dw7t)))
                                            ((case-lambda
                                               (()
                                                (begin
                                                  '#f
                                                  (list
                                                    'let
                                                    (list
                                                      (car g$x*$30233$6Dw7t))
                                                    (g$f$30232$6Dw7t
                                                      (cdr g$x*$30233$6Dw7t)))))))))))))
                            g$f$30232$6Dw7t)
                          (g$map$23581$6Dw7t
                            list
                            g$lhs*$30228$6Dw7t
                            g$rhs*$30229$6Dw7t)))))
                    g$ls/false$30223$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30222$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30222$6Dw7t
               '(_ #(each (any any)) any . each-any)))))
         g$stx$30221$6Dw7t))))
   (g$or-macro$29322$6Dw7t
     g$or-macro$32921$6Dw7t
     (case-lambda
       ((g$stx$30234$6Dw7t)
        ((case-lambda
           ((g$t$30235$6Dw7t)
            ((case-lambda
               ((g$ls/false$30236$6Dw7t)
                (if g$ls/false$30236$6Dw7t
                  (apply (case-lambda (() '#f)) g$ls/false$30236$6Dw7t)
                  ((case-lambda
                     ((g$t$30237$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$30238$6Dw7t)
                          (if g$ls/false$30238$6Dw7t
                            (apply
                              (case-lambda
                                ((g$e$30239$6Dw7t g$e*$30240$6Dw7t)
                                 (g$bless$29301$6Dw7t
                                   ((letrec ((g$f$30241$6Dw7t
                                               (case-lambda
                                                 ((g$e$30242$6Dw7t
                                                    g$e*$30243$6Dw7t)
                                                  (if (null?
                                                        g$e*$30243$6Dw7t)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$30242$6Dw7t)
                                                    ((case-lambda
                                                       (()
                                                        (begin
                                                          '#f
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                g$e$30242$6Dw7t))
                                                            (list
                                                              'if
                                                              't
                                                              't
                                                              (g$f$30241$6Dw7t
                                                                (car g$e*$30243$6Dw7t)
                                                                (cdr g$e*$30243$6Dw7t)))))))))))))
                                      g$f$30241$6Dw7t)
                                    g$e$30239$6Dw7t
                                    g$e*$30240$6Dw7t))))
                              g$ls/false$30238$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$30237$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$30237$6Dw7t
                         '(_ any . each-any)))))
                   g$t$30235$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30235$6Dw7t '(_)))))
         g$stx$30234$6Dw7t))))
   (g$and-macro$29323$6Dw7t
     g$and-macro$32922$6Dw7t
     (case-lambda
       ((g$stx$30244$6Dw7t)
        ((case-lambda
           ((g$t$30245$6Dw7t)
            ((case-lambda
               ((g$ls/false$30246$6Dw7t)
                (if g$ls/false$30246$6Dw7t
                  (apply (case-lambda (() '#t)) g$ls/false$30246$6Dw7t)
                  ((case-lambda
                     ((g$t$30247$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$30248$6Dw7t)
                          (if g$ls/false$30248$6Dw7t
                            (apply
                              (case-lambda
                                ((g$e$30249$6Dw7t g$e*$30250$6Dw7t)
                                 (g$bless$29301$6Dw7t
                                   ((letrec ((g$f$30251$6Dw7t
                                               (case-lambda
                                                 ((g$e$30252$6Dw7t
                                                    g$e*$30253$6Dw7t)
                                                  (if (null?
                                                        g$e*$30253$6Dw7t)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$30252$6Dw7t)
                                                    ((case-lambda
                                                       (()
                                                        (begin
                                                          '#f
                                                          (cons
                                                            'if
                                                            (cons
                                                              g$e$30252$6Dw7t
                                                              (cons
                                                                (g$f$30251$6Dw7t
                                                                  (car g$e*$30253$6Dw7t)
                                                                  (cdr g$e*$30253$6Dw7t))
                                                                '(#f)))))))))))))
                                      g$f$30251$6Dw7t)
                                    g$e$30249$6Dw7t
                                    g$e*$30250$6Dw7t))))
                              g$ls/false$30248$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$30247$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$30247$6Dw7t
                         '(_ any . each-any)))))
                   g$t$30245$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$30245$6Dw7t '(_)))))
         g$stx$30244$6Dw7t))))
   (g$cond-macro$29324$6Dw7t
     g$cond-macro$32923$6Dw7t
     (case-lambda
       ((g$stx$30254$6Dw7t)
        ((case-lambda
           ((g$t$30255$6Dw7t)
            ((case-lambda
               ((g$ls/false$30256$6Dw7t)
                (if g$ls/false$30256$6Dw7t
                  (apply
                    (case-lambda
                      ((g$cls$30257$6Dw7t g$cls*$30258$6Dw7t)
                       (g$bless$29301$6Dw7t
                         ((letrec ((g$f$30259$6Dw7t
                                     (case-lambda
                                       ((g$cls$30260$6Dw7t
                                          g$cls*$30261$6Dw7t)
                                        (if (null? g$cls*$30261$6Dw7t)
                                          ((case-lambda
                                             ((g$t$30262$6Dw7t)
                                              ((case-lambda
                                                 ((g$ls/false$30263$6Dw7t)
                                                  (if g$ls/false$30263$6Dw7t
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$30264$6Dw7t
                                                           g$e*$30265$6Dw7t)
                                                         (cons
                                                           'let
                                                           (cons
                                                             '()
                                                             (cons
                                                               '#f
                                                               (cons
                                                                 g$e$30264$6Dw7t
                                                                 g$e*$30265$6Dw7t))))))
                                                      g$ls/false$30263$6Dw7t)
                                                    ((case-lambda
                                                       ((g$t$30266$6Dw7t)
                                                        ((case-lambda
                                                           ((g$ls/false$30267$6Dw7t)
                                                            (if g$ls/false$30267$6Dw7t
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$30268$6Dw7t
                                                                     g$p$30269$6Dw7t)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$30268$6Dw7t))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$30269$6Dw7t
                                                                         '(t))))))
                                                                g$ls/false$30267$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$t$30270$6Dw7t)
                                                                  ((case-lambda
                                                                     ((g$ls/false$30271$6Dw7t)
                                                                      (if g$ls/false$30271$6Dw7t
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$30272$6Dw7t)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$30272$6Dw7t
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$30271$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$t$30273$6Dw7t)
                                                                            ((case-lambda
                                                                               ((g$ls/false$30274$6Dw7t)
                                                                                (if g$ls/false$30274$6Dw7t
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$30275$6Dw7t
                                                                                         g$e*$30276$6Dw7t)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$30275$6Dw7t
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$30276$6Dw7t))))
                                                                                    g$ls/false$30274$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$t$30277$6Dw7t)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$30278$6Dw7t)
                                                                                          (if g$ls/false$30278$6Dw7t
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$29458$6Dw7t
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$30254$6Dw7t)))
                                                                                              g$ls/false$30278$6Dw7t)
                                                                                            (g$syntax-violation$29458$6Dw7t
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$30277$6Dw7t))))
                                                                                       (g$syntax-dispatch$29338$6Dw7t
                                                                                         g$t$30277$6Dw7t
                                                                                         '_))))
                                                                                   g$t$30273$6Dw7t))))
                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                               g$t$30273$6Dw7t
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$30270$6Dw7t))))
                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                     g$t$30270$6Dw7t
                                                                     '(any)))))
                                                               g$t$30266$6Dw7t))))
                                                         (g$syntax-dispatch$29338$6Dw7t
                                                           g$t$30266$6Dw7t
                                                           '(any #(scheme-id
                                                                   =>)
                                                                 any)))))
                                                     g$t$30262$6Dw7t))))
                                               (g$syntax-dispatch$29338$6Dw7t
                                                 g$t$30262$6Dw7t
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$30260$6Dw7t)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$t$30279$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$30280$6Dw7t)
                                                        (if g$ls/false$30280$6Dw7t
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$30281$6Dw7t
                                                                 g$e*$30282$6Dw7t)
                                                               (g$syntax-violation$29458$6Dw7t
                                                                 '#f
                                                                 '"incorrect position of keyword else"
                                                                 g$stx$30254$6Dw7t)))
                                                            g$ls/false$30280$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$30283$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$30284$6Dw7t)
                                                                  (if g$ls/false$30284$6Dw7t
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$30285$6Dw7t
                                                                           g$p$30286$6Dw7t)
                                                                         (list
                                                                           'let
                                                                           (list
                                                                             (list
                                                                               't
                                                                               g$e$30285$6Dw7t))
                                                                           (list
                                                                             'if
                                                                             't
                                                                             (cons
                                                                               g$p$30286$6Dw7t
                                                                               '(t))
                                                                             (g$f$30259$6Dw7t
                                                                               (car g$cls*$30261$6Dw7t)
                                                                               (cdr g$cls*$30261$6Dw7t))))))
                                                                      g$ls/false$30284$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$t$30287$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30288$6Dw7t)
                                                                            (if g$ls/false$30288$6Dw7t
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$e$30289$6Dw7t)
                                                                                   (list
                                                                                     'or
                                                                                     g$e$30289$6Dw7t
                                                                                     (g$f$30259$6Dw7t
                                                                                       (car g$cls*$30261$6Dw7t)
                                                                                       (cdr g$cls*$30261$6Dw7t)))))
                                                                                g$ls/false$30288$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$30290$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$30291$6Dw7t)
                                                                                      (if g$ls/false$30291$6Dw7t
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$e$30292$6Dw7t
                                                                                               g$e*$30293$6Dw7t)
                                                                                             (list
                                                                                               'if
                                                                                               g$e$30292$6Dw7t
                                                                                               (cons
                                                                                                 'begin
                                                                                                 g$e*$30293$6Dw7t)
                                                                                               (g$f$30259$6Dw7t
                                                                                                 (car g$cls*$30261$6Dw7t)
                                                                                                 (cdr g$cls*$30261$6Dw7t)))))
                                                                                          g$ls/false$30291$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$t$30294$6Dw7t)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$30295$6Dw7t)
                                                                                                (if g$ls/false$30295$6Dw7t
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$29458$6Dw7t
                                                                                                         '#f
                                                                                                         '"invalid last clause"
                                                                                                         g$stx$30254$6Dw7t)))
                                                                                                    g$ls/false$30295$6Dw7t)
                                                                                                  (g$syntax-violation$29458$6Dw7t
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$30294$6Dw7t))))
                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                               g$t$30294$6Dw7t
                                                                                               '_))))
                                                                                         g$t$30290$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$30290$6Dw7t
                                                                                     '(any .
                                                                                           each-any)))))
                                                                               g$t$30287$6Dw7t))))
                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                           g$t$30287$6Dw7t
                                                                           '(any)))))
                                                                     g$t$30283$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$30283$6Dw7t
                                                                 '(any #(scheme-id
                                                                         =>)
                                                                       any)))))
                                                           g$t$30279$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$30279$6Dw7t
                                                       '(#(scheme-id
                                                           else)
                                                         any
                                                         .
                                                         each-any)))))
                                                 g$cls$30260$6Dw7t))))))))))
                            g$f$30259$6Dw7t)
                          g$cls$30257$6Dw7t
                          g$cls*$30258$6Dw7t))))
                    g$ls/false$30256$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30255$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30255$6Dw7t
               '(_ any . each-any)))))
         g$stx$30254$6Dw7t))))
   (g$do-include$29325$6Dw7t
     g$do-include$32924$6Dw7t
     (case-lambda
       ((g$stx$30296$6Dw7t g$id$30297$6Dw7t g$filename$30298$6Dw7t)
        ((case-lambda
           ((g$filename$30299$6Dw7t)
            (begin
              (if (not (if (g$string?$24003$6Dw7t
                             g$filename$30299$6Dw7t)
                         (begin
                           '#f
                           (g$id?$28840$6Dw7t g$id$30297$6Dw7t))
                         '#f))
                (g$syntax-violation$29458$6Dw7t
                  '#f
                  '"invalid syntax"
                  g$stx$30296$6Dw7t)
                (void))
              (cons
                (g$bless$29301$6Dw7t 'begin)
                (g$with-input-from-file$27184$6Dw7t
                  g$filename$30299$6Dw7t
                  (case-lambda
                    (()
                     ((letrec ((g$f$30300$6Dw7t
                                 (case-lambda
                                   ((g$ls$30301$6Dw7t)
                                    ((case-lambda
                                       ((g$x$30302$6Dw7t)
                                        (if (eof-object?
                                              g$x$30302$6Dw7t)
                                          (g$reverse$24043$6Dw7t
                                            g$ls$30301$6Dw7t)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (g$f$30300$6Dw7t
                                                  (cons
                                                    (g$datum->stx$28823$6Dw7t
                                                      g$id$30297$6Dw7t
                                                      g$x$30302$6Dw7t)
                                                    g$ls$30301$6Dw7t)))))))))
                                     (read-annotated))))))
                        g$f$30300$6Dw7t)
                      '()))))))))
         (g$stx->datum$28851$6Dw7t g$filename$30298$6Dw7t)))))
   (g$include-macro$29326$6Dw7t
     g$include-macro$32925$6Dw7t
     (case-lambda
       ((g$e$30303$6Dw7t)
        ((case-lambda
           ((g$t$30304$6Dw7t)
            ((case-lambda
               ((g$ls/false$30305$6Dw7t)
                (if g$ls/false$30305$6Dw7t
                  (apply
                    (case-lambda
                      ((g$id$30306$6Dw7t g$filename$30307$6Dw7t)
                       (g$do-include$29325$6Dw7t
                         g$e$30303$6Dw7t
                         g$id$30306$6Dw7t
                         g$filename$30307$6Dw7t)))
                    g$ls/false$30305$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30304$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30304$6Dw7t
               '(any any)))))
         g$e$30303$6Dw7t))))
   (g$include-into-macro$29327$6Dw7t
     g$include-into-macro$32926$6Dw7t
     (case-lambda
       ((g$e$30308$6Dw7t)
        ((case-lambda
           ((g$t$30309$6Dw7t)
            ((case-lambda
               ((g$ls/false$30310$6Dw7t)
                (if g$ls/false$30310$6Dw7t
                  (apply
                    (case-lambda
                      ((g$id$30311$6Dw7t g$filename$30312$6Dw7t)
                       (g$do-include$29325$6Dw7t
                         g$e$30308$6Dw7t
                         g$id$30311$6Dw7t
                         g$filename$30312$6Dw7t)))
                    g$ls/false$30310$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30309$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30309$6Dw7t
               '(_ any any)))))
         g$e$30308$6Dw7t))))
   (g$syntax-rules-macro$29328$6Dw7t
     g$syntax-rules-macro$32927$6Dw7t
     (case-lambda
       ((g$e$30313$6Dw7t)
        ((case-lambda
           ((g$t$30314$6Dw7t)
            ((case-lambda
               ((g$ls/false$30315$6Dw7t)
                (if g$ls/false$30315$6Dw7t
                  (apply
                    (case-lambda
                      ((g$lits$30316$6Dw7t
                         g$pat*$30317$6Dw7t
                         g$tmp*$30318$6Dw7t)
                       (begin
                         (g$verify-literals$29341$6Dw7t
                           g$lits$30316$6Dw7t
                           g$e$30313$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$30316$6Dw7t
                                   (g$map$23581$6Dw7t
                                     (case-lambda
                                       ((g$pat$30319$6Dw7t
                                          g$tmp$30320$6Dw7t)
                                        ((case-lambda
                                           ((g$t$30321$6Dw7t)
                                            ((case-lambda
                                               ((g$ls/false$30322$6Dw7t)
                                                (if g$ls/false$30322$6Dw7t
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$30323$6Dw7t)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$30323$6Dw7t)
                                                         (list
                                                           'syntax
                                                           g$tmp$30320$6Dw7t))))
                                                    g$ls/false$30322$6Dw7t)
                                                  ((case-lambda
                                                     ((g$t$30324$6Dw7t)
                                                      ((case-lambda
                                                         ((g$ls/false$30325$6Dw7t)
                                                          (if g$ls/false$30325$6Dw7t
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$29458$6Dw7t
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$30313$6Dw7t
                                                                   g$pat$30319$6Dw7t)))
                                                              g$ls/false$30325$6Dw7t)
                                                            (g$syntax-violation$29458$6Dw7t
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$30324$6Dw7t))))
                                                       (g$syntax-dispatch$29338$6Dw7t
                                                         g$t$30324$6Dw7t
                                                         '_))))
                                                   g$t$30321$6Dw7t))))
                                             (g$syntax-dispatch$29338$6Dw7t
                                               g$t$30321$6Dw7t
                                               '(_ . any)))))
                                         g$pat$30319$6Dw7t)))
                                     g$pat*$30317$6Dw7t
                                     g$tmp*$30318$6Dw7t)))))))))
                    g$ls/false$30315$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30314$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30314$6Dw7t
               '(_ each-any . #(each (any any)))))))
         g$e$30313$6Dw7t))))
   (g$quasiquote-macro$29329$6Dw7t
     g$quasiquote-macro$32928$6Dw7t
     ((case-lambda
        (()
         (letrec* ((g$datum$30326$6Dw7t
                     (case-lambda
                       ((g$x$30476$6Dw7t)
                        (list
                          (g$scheme-stx$29281$6Dw7t 'quote)
                          (g$mkstx$28828$6Dw7t
                            g$x$30476$6Dw7t
                            '()
                            '()
                            '())))))
                   (g$quasicons*$30361$6Dw7t
                     (case-lambda
                       ((g$x$30472$6Dw7t g$y$30473$6Dw7t)
                        ((letrec ((g$f$30474$6Dw7t
                                    (case-lambda
                                      ((g$x$30475$6Dw7t)
                                       (if (null? g$x$30475$6Dw7t)
                                         g$y$30473$6Dw7t
                                         (g$quasicons$30362$6Dw7t
                                           (car g$x$30475$6Dw7t)
                                           (g$f$30474$6Dw7t
                                             (cdr g$x$30475$6Dw7t))))))))
                           g$f$30474$6Dw7t)
                         g$x$30472$6Dw7t))))
                   (g$quasicons$30362$6Dw7t
                     (case-lambda
                       ((g$x$30453$6Dw7t g$y$30454$6Dw7t)
                        ((case-lambda
                           ((g$t$30455$6Dw7t)
                            ((case-lambda
                               ((g$ls/false$30456$6Dw7t)
                                (if g$ls/false$30456$6Dw7t
                                  (apply
                                    (case-lambda
                                      ((g$dy$30457$6Dw7t)
                                       ((case-lambda
                                          ((g$t$30458$6Dw7t)
                                           ((case-lambda
                                              ((g$ls/false$30459$6Dw7t)
                                               (if g$ls/false$30459$6Dw7t
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$30460$6Dw7t)
                                                      (list
                                                        (g$scheme-stx$29281$6Dw7t
                                                          'quote)
                                                        (cons
                                                          g$dx$30460$6Dw7t
                                                          g$dy$30457$6Dw7t))))
                                                   g$ls/false$30459$6Dw7t)
                                                 ((case-lambda
                                                    ((g$t$30461$6Dw7t)
                                                     ((case-lambda
                                                        ((g$ls/false$30462$6Dw7t)
                                                         (if g$ls/false$30462$6Dw7t
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$30463$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30464$6Dw7t)
                                                                        (if g$ls/false$30464$6Dw7t
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$29281$6Dw7t
                                                                                   'list)
                                                                                 g$x$30453$6Dw7t)))
                                                                            g$ls/false$30464$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$t$30465$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30466$6Dw7t)
                                                                                  (if g$ls/false$30466$6Dw7t
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$29281$6Dw7t
                                                                                             'cons)
                                                                                           g$x$30453$6Dw7t
                                                                                           g$y$30454$6Dw7t)))
                                                                                      g$ls/false$30466$6Dw7t)
                                                                                    (g$syntax-violation$29458$6Dw7t
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$30465$6Dw7t))))
                                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                                 g$t$30465$6Dw7t
                                                                                 '_))))
                                                                           g$t$30463$6Dw7t))))
                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                       g$t$30463$6Dw7t
                                                                       '()))))
                                                                 g$dy$30457$6Dw7t)))
                                                             g$ls/false$30462$6Dw7t)
                                                           (g$syntax-violation$29458$6Dw7t
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$30461$6Dw7t))))
                                                      (g$syntax-dispatch$29338$6Dw7t
                                                        g$t$30461$6Dw7t
                                                        '_))))
                                                  g$t$30458$6Dw7t))))
                                            (g$syntax-dispatch$29338$6Dw7t
                                              g$t$30458$6Dw7t
                                              '(#(scheme-id quote)
                                                any)))))
                                        g$x$30453$6Dw7t)))
                                    g$ls/false$30456$6Dw7t)
                                  ((case-lambda
                                     ((g$t$30467$6Dw7t)
                                      ((case-lambda
                                         ((g$ls/false$30468$6Dw7t)
                                          (if g$ls/false$30468$6Dw7t
                                            (apply
                                              (case-lambda
                                                ((g$stuff$30469$6Dw7t)
                                                 (g$cons*$23583$6Dw7t
                                                   (g$scheme-stx$29281$6Dw7t
                                                     'list)
                                                   g$x$30453$6Dw7t
                                                   g$stuff$30469$6Dw7t)))
                                              g$ls/false$30468$6Dw7t)
                                            ((case-lambda
                                               ((g$t$30470$6Dw7t)
                                                ((case-lambda
                                                   ((g$ls/false$30471$6Dw7t)
                                                    (if g$ls/false$30471$6Dw7t
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$29281$6Dw7t
                                                               'cons)
                                                             g$x$30453$6Dw7t
                                                             g$y$30454$6Dw7t)))
                                                        g$ls/false$30471$6Dw7t)
                                                      (g$syntax-violation$29458$6Dw7t
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$30470$6Dw7t))))
                                                 (g$syntax-dispatch$29338$6Dw7t
                                                   g$t$30470$6Dw7t
                                                   '_))))
                                             g$t$30467$6Dw7t))))
                                       (g$syntax-dispatch$29338$6Dw7t
                                         g$t$30467$6Dw7t
                                         '(#(scheme-id list)
                                           .
                                           each-any)))))
                                   g$t$30455$6Dw7t))))
                             (g$syntax-dispatch$29338$6Dw7t
                               g$t$30455$6Dw7t
                               '(#(scheme-id quote) any)))))
                         g$y$30454$6Dw7t))))
                   (g$quasiappend$30363$6Dw7t
                     (case-lambda
                       ((g$x$30440$6Dw7t g$y$30441$6Dw7t)
                        ((case-lambda
                           ((g$ls$30442$6Dw7t)
                            (if (null? g$ls$30442$6Dw7t)
                              (list
                                (g$scheme-stx$29281$6Dw7t 'quote)
                                '())
                              (if (null? (cdr g$ls$30442$6Dw7t))
                                (car g$ls$30442$6Dw7t)
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (g$cons*$23583$6Dw7t
                                        (g$scheme-stx$29281$6Dw7t
                                          'append)
                                        g$ls$30442$6Dw7t)))))))))
                         ((letrec ((g$f$30443$6Dw7t
                                     (case-lambda
                                       ((g$x$30444$6Dw7t)
                                        (if (null? g$x$30444$6Dw7t)
                                          ((case-lambda
                                             ((g$t$30445$6Dw7t)
                                              ((case-lambda
                                                 ((g$ls/false$30446$6Dw7t)
                                                  (if g$ls/false$30446$6Dw7t
                                                    (apply
                                                      (case-lambda
                                                        (() '()))
                                                      g$ls/false$30446$6Dw7t)
                                                    ((case-lambda
                                                       ((g$t$30447$6Dw7t)
                                                        ((case-lambda
                                                           ((g$ls/false$30448$6Dw7t)
                                                            (if g$ls/false$30448$6Dw7t
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$30441$6Dw7t)))
                                                                g$ls/false$30448$6Dw7t)
                                                              (g$syntax-violation$29458$6Dw7t
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30447$6Dw7t))))
                                                         (g$syntax-dispatch$29338$6Dw7t
                                                           g$t$30447$6Dw7t
                                                           '_))))
                                                     g$t$30445$6Dw7t))))
                                               (g$syntax-dispatch$29338$6Dw7t
                                                 g$t$30445$6Dw7t
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           g$y$30441$6Dw7t)
                                          ((case-lambda
                                             ((g$t$30449$6Dw7t)
                                              ((case-lambda
                                                 ((g$ls/false$30450$6Dw7t)
                                                  (if g$ls/false$30450$6Dw7t
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$30443$6Dw7t
                                                           (cdr g$x$30444$6Dw7t))))
                                                      g$ls/false$30450$6Dw7t)
                                                    ((case-lambda
                                                       ((g$t$30451$6Dw7t)
                                                        ((case-lambda
                                                           ((g$ls/false$30452$6Dw7t)
                                                            (if g$ls/false$30452$6Dw7t
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$30444$6Dw7t)
                                                                     (g$f$30443$6Dw7t
                                                                       (cdr g$x$30444$6Dw7t)))))
                                                                g$ls/false$30452$6Dw7t)
                                                              (g$syntax-violation$29458$6Dw7t
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30451$6Dw7t))))
                                                         (g$syntax-dispatch$29338$6Dw7t
                                                           g$t$30451$6Dw7t
                                                           '_))))
                                                     g$t$30449$6Dw7t))))
                                               (g$syntax-dispatch$29338$6Dw7t
                                                 g$t$30449$6Dw7t
                                                 '(#(scheme-id quote)
                                                   ())))))
                                           (car g$x$30444$6Dw7t)))))))
                            g$f$30443$6Dw7t)
                          g$x$30440$6Dw7t)))))
                   (g$quasivector$30364$6Dw7t
                     (case-lambda
                       ((g$x$30415$6Dw7t)
                        ((case-lambda
                           ((g$pat-x$30416$6Dw7t)
                            ((case-lambda
                               ((g$t$30417$6Dw7t)
                                ((case-lambda
                                   ((g$ls/false$30418$6Dw7t)
                                    (if g$ls/false$30418$6Dw7t
                                      (apply
                                        (case-lambda
                                          ((g$x*$30419$6Dw7t)
                                           (list
                                             (g$scheme-stx$29281$6Dw7t
                                               'quote)
                                             (g$list->vector$24034$6Dw7t
                                               g$x*$30419$6Dw7t))))
                                        g$ls/false$30418$6Dw7t)
                                      ((case-lambda
                                         ((g$t$30420$6Dw7t)
                                          ((case-lambda
                                             ((g$ls/false$30421$6Dw7t)
                                              (if g$ls/false$30421$6Dw7t
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$30422$6Dw7t
                                                                 (case-lambda
                                                                   ((g$x$30423$6Dw7t
                                                                      g$k$30424$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$t$30425$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ls/false$30426$6Dw7t)
                                                                            (if g$ls/false$30426$6Dw7t
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$30427$6Dw7t)
                                                                                   (g$k$30424$6Dw7t
                                                                                     (g$map$23581$6Dw7t
                                                                                       (case-lambda
                                                                                         ((g$x$30428$6Dw7t)
                                                                                          (list
                                                                                            (g$scheme-stx$29281$6Dw7t
                                                                                              'quote)
                                                                                            g$x$30428$6Dw7t)))
                                                                                       g$x*$30427$6Dw7t))))
                                                                                g$ls/false$30426$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$30429$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$30430$6Dw7t)
                                                                                      (if g$ls/false$30430$6Dw7t
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$30431$6Dw7t)
                                                                                             (g$k$30424$6Dw7t
                                                                                               g$x*$30431$6Dw7t)))
                                                                                          g$ls/false$30430$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$t$30432$6Dw7t)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$30433$6Dw7t)
                                                                                                (if g$ls/false$30433$6Dw7t
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$30434$6Dw7t
                                                                                                         g$y$30435$6Dw7t)
                                                                                                       (g$f$30422$6Dw7t
                                                                                                         g$y$30435$6Dw7t
                                                                                                         (case-lambda
                                                                                                           ((g$ls$30436$6Dw7t)
                                                                                                            (g$k$30424$6Dw7t
                                                                                                              (cons
                                                                                                                g$x$30434$6Dw7t
                                                                                                                g$ls$30436$6Dw7t)))))))
                                                                                                    g$ls/false$30433$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$30437$6Dw7t)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$30438$6Dw7t)
                                                                                                          (if g$ls/false$30438$6Dw7t
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$29281$6Dw7t
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$30416$6Dw7t)))
                                                                                                              g$ls/false$30438$6Dw7t)
                                                                                                            (g$syntax-violation$29458$6Dw7t
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$30437$6Dw7t))))
                                                                                                       (g$syntax-dispatch$29338$6Dw7t
                                                                                                         g$t$30437$6Dw7t
                                                                                                         '_))))
                                                                                                   g$t$30432$6Dw7t))))
                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                               g$t$30432$6Dw7t
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$30429$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$30429$6Dw7t
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$30425$6Dw7t))))
                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                           g$t$30425$6Dw7t
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$30423$6Dw7t)))))
                                                        g$f$30422$6Dw7t)
                                                      g$x$30415$6Dw7t
                                                      (case-lambda
                                                        ((g$ls$30439$6Dw7t)
                                                         (g$cons*$23583$6Dw7t
                                                           (g$scheme-stx$29281$6Dw7t
                                                             'vector)
                                                           g$ls$30439$6Dw7t))))))
                                                  g$ls/false$30421$6Dw7t)
                                                (g$syntax-violation$29458$6Dw7t
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$30420$6Dw7t))))
                                           (g$syntax-dispatch$29338$6Dw7t
                                             g$t$30420$6Dw7t
                                             '_))))
                                       g$t$30417$6Dw7t))))
                                 (g$syntax-dispatch$29338$6Dw7t
                                   g$t$30417$6Dw7t
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$30416$6Dw7t)))
                         g$x$30415$6Dw7t))))
                   (g$vquasi$30365$6Dw7t
                     (case-lambda
                       ((g$p$30398$6Dw7t g$lev$30399$6Dw7t)
                        ((case-lambda
                           ((g$t$30400$6Dw7t)
                            ((case-lambda
                               ((g$ls/false$30401$6Dw7t)
                                (if g$ls/false$30401$6Dw7t
                                  (apply
                                    (case-lambda
                                      ((g$p$30402$6Dw7t g$q$30403$6Dw7t)
                                       ((case-lambda
                                          ((g$t$30404$6Dw7t)
                                           ((case-lambda
                                              ((g$ls/false$30405$6Dw7t)
                                               (if g$ls/false$30405$6Dw7t
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$30406$6Dw7t)
                                                      (if (g$=$25069$6Dw7t
                                                            g$lev$30399$6Dw7t
                                                            '0)
                                                        (g$quasicons*$30361$6Dw7t
                                                          g$p$30406$6Dw7t
                                                          (g$vquasi$30365$6Dw7t
                                                            g$q$30403$6Dw7t
                                                            g$lev$30399$6Dw7t))
                                                        (g$quasicons$30362$6Dw7t
                                                          (g$quasicons$30362$6Dw7t
                                                            (g$datum$30326$6Dw7t
                                                              'unquote)
                                                            (g$quasi$30366$6Dw7t
                                                              g$p$30406$6Dw7t
                                                              (- g$lev$30399$6Dw7t
                                                                 '1)))
                                                          (g$vquasi$30365$6Dw7t
                                                            g$q$30403$6Dw7t
                                                            g$lev$30399$6Dw7t)))))
                                                   g$ls/false$30405$6Dw7t)
                                                 ((case-lambda
                                                    ((g$t$30407$6Dw7t)
                                                     ((case-lambda
                                                        ((g$ls/false$30408$6Dw7t)
                                                         (if g$ls/false$30408$6Dw7t
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$30409$6Dw7t)
                                                                (if (g$=$25069$6Dw7t
                                                                      g$lev$30399$6Dw7t
                                                                      '0)
                                                                  (g$quasiappend$30363$6Dw7t
                                                                    g$p$30409$6Dw7t
                                                                    (g$vquasi$30365$6Dw7t
                                                                      g$q$30403$6Dw7t
                                                                      g$lev$30399$6Dw7t))
                                                                  (g$quasicons$30362$6Dw7t
                                                                    (g$quasicons$30362$6Dw7t
                                                                      (g$datum$30326$6Dw7t
                                                                        'unquote-splicing)
                                                                      (g$quasi$30366$6Dw7t
                                                                        g$p$30409$6Dw7t
                                                                        (- g$lev$30399$6Dw7t
                                                                           '1)))
                                                                    (g$vquasi$30365$6Dw7t
                                                                      g$q$30403$6Dw7t
                                                                      g$lev$30399$6Dw7t)))))
                                                             g$ls/false$30408$6Dw7t)
                                                           ((case-lambda
                                                              ((g$t$30410$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$ls/false$30411$6Dw7t)
                                                                   (if g$ls/false$30411$6Dw7t
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$30412$6Dw7t)
                                                                          (g$quasicons$30362$6Dw7t
                                                                            (g$quasi$30366$6Dw7t
                                                                              g$p$30412$6Dw7t
                                                                              g$lev$30399$6Dw7t)
                                                                            (g$vquasi$30365$6Dw7t
                                                                              g$q$30403$6Dw7t
                                                                              g$lev$30399$6Dw7t))))
                                                                       g$ls/false$30411$6Dw7t)
                                                                     (g$syntax-violation$29458$6Dw7t
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$30410$6Dw7t))))
                                                                (g$syntax-dispatch$29338$6Dw7t
                                                                  g$t$30410$6Dw7t
                                                                  'any))))
                                                            g$t$30407$6Dw7t))))
                                                      (g$syntax-dispatch$29338$6Dw7t
                                                        g$t$30407$6Dw7t
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$30404$6Dw7t))))
                                            (g$syntax-dispatch$29338$6Dw7t
                                              g$t$30404$6Dw7t
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$30402$6Dw7t)))
                                    g$ls/false$30401$6Dw7t)
                                  ((case-lambda
                                     ((g$t$30413$6Dw7t)
                                      ((case-lambda
                                         ((g$ls/false$30414$6Dw7t)
                                          (if g$ls/false$30414$6Dw7t
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$29281$6Dw7t
                                                     'quote)
                                                   '())))
                                              g$ls/false$30414$6Dw7t)
                                            (g$syntax-violation$29458$6Dw7t
                                              '#f
                                              '"invalid syntax"
                                              g$t$30413$6Dw7t))))
                                       (g$syntax-dispatch$29338$6Dw7t
                                         g$t$30413$6Dw7t
                                         '()))))
                                   g$t$30400$6Dw7t))))
                             (g$syntax-dispatch$29338$6Dw7t
                               g$t$30400$6Dw7t
                               '(any . any)))))
                         g$p$30398$6Dw7t))))
                   (g$quasi$30366$6Dw7t
                     (case-lambda
                       ((g$p$30371$6Dw7t g$lev$30372$6Dw7t)
                        ((case-lambda
                           ((g$t$30373$6Dw7t)
                            ((case-lambda
                               ((g$ls/false$30374$6Dw7t)
                                (if g$ls/false$30374$6Dw7t
                                  (apply
                                    (case-lambda
                                      ((g$p$30375$6Dw7t)
                                       (if (g$=$25069$6Dw7t
                                             g$lev$30372$6Dw7t
                                             '0)
                                         g$p$30375$6Dw7t
                                         (g$quasicons$30362$6Dw7t
                                           (g$datum$30326$6Dw7t
                                             'unquote)
                                           (g$quasi$30366$6Dw7t
                                             (list g$p$30375$6Dw7t)
                                             (- g$lev$30372$6Dw7t
                                                '1))))))
                                    g$ls/false$30374$6Dw7t)
                                  ((case-lambda
                                     ((g$t$30376$6Dw7t)
                                      ((case-lambda
                                         ((g$ls/false$30377$6Dw7t)
                                          (if g$ls/false$30377$6Dw7t
                                            (apply
                                              (case-lambda
                                                ((g$p$30378$6Dw7t
                                                   g$q$30379$6Dw7t)
                                                 (if (g$=$25069$6Dw7t
                                                       g$lev$30372$6Dw7t
                                                       '0)
                                                   (g$quasicons*$30361$6Dw7t
                                                     g$p$30378$6Dw7t
                                                     (g$quasi$30366$6Dw7t
                                                       g$q$30379$6Dw7t
                                                       g$lev$30372$6Dw7t))
                                                   (g$quasicons$30362$6Dw7t
                                                     (g$quasicons$30362$6Dw7t
                                                       (g$datum$30326$6Dw7t
                                                         'unquote)
                                                       (g$quasi$30366$6Dw7t
                                                         g$p$30378$6Dw7t
                                                         (- g$lev$30372$6Dw7t
                                                            '1)))
                                                     (g$quasi$30366$6Dw7t
                                                       g$q$30379$6Dw7t
                                                       g$lev$30372$6Dw7t)))))
                                              g$ls/false$30377$6Dw7t)
                                            ((case-lambda
                                               ((g$t$30380$6Dw7t)
                                                ((case-lambda
                                                   ((g$ls/false$30381$6Dw7t)
                                                    (if g$ls/false$30381$6Dw7t
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$30382$6Dw7t
                                                             g$q$30383$6Dw7t)
                                                           (if (g$=$25069$6Dw7t
                                                                 g$lev$30372$6Dw7t
                                                                 '0)
                                                             (g$quasiappend$30363$6Dw7t
                                                               g$p$30382$6Dw7t
                                                               (g$quasi$30366$6Dw7t
                                                                 g$q$30383$6Dw7t
                                                                 g$lev$30372$6Dw7t))
                                                             (g$quasicons$30362$6Dw7t
                                                               (g$quasicons$30362$6Dw7t
                                                                 (g$datum$30326$6Dw7t
                                                                   'unquote-splicing)
                                                                 (g$quasi$30366$6Dw7t
                                                                   g$p$30382$6Dw7t
                                                                   (- g$lev$30372$6Dw7t
                                                                      '1)))
                                                               (g$quasi$30366$6Dw7t
                                                                 g$q$30383$6Dw7t
                                                                 g$lev$30372$6Dw7t)))))
                                                        g$ls/false$30381$6Dw7t)
                                                      ((case-lambda
                                                         ((g$t$30384$6Dw7t)
                                                          ((case-lambda
                                                             ((g$ls/false$30385$6Dw7t)
                                                              (if g$ls/false$30385$6Dw7t
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$30386$6Dw7t)
                                                                     (g$quasicons$30362$6Dw7t
                                                                       (g$datum$30326$6Dw7t
                                                                         'quasiquote)
                                                                       (g$quasi$30366$6Dw7t
                                                                         (list
                                                                           g$p$30386$6Dw7t)
                                                                         (+ g$lev$30372$6Dw7t
                                                                            '1)))))
                                                                  g$ls/false$30385$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$t$30387$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30388$6Dw7t)
                                                                        (if g$ls/false$30388$6Dw7t
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$30389$6Dw7t
                                                                                 g$q$30390$6Dw7t)
                                                                               (g$quasicons$30362$6Dw7t
                                                                                 (g$quasi$30366$6Dw7t
                                                                                   g$p$30389$6Dw7t
                                                                                   g$lev$30372$6Dw7t)
                                                                                 (g$quasi$30366$6Dw7t
                                                                                   g$q$30390$6Dw7t
                                                                                   g$lev$30372$6Dw7t))))
                                                                            g$ls/false$30388$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$t$30391$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30392$6Dw7t)
                                                                                  (if (if g$ls/false$30392$6Dw7t
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$30393$6Dw7t)
                                                                                               (not (g$stx?$28812$6Dw7t
                                                                                                      g$x$30393$6Dw7t))))
                                                                                            g$ls/false$30392$6Dw7t))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$30394$6Dw7t)
                                                                                         (g$quasivector$30364$6Dw7t
                                                                                           (g$vquasi$30365$6Dw7t
                                                                                             g$x$30394$6Dw7t
                                                                                             g$lev$30372$6Dw7t))))
                                                                                      g$ls/false$30392$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$t$30395$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30396$6Dw7t)
                                                                                            (if g$ls/false$30396$6Dw7t
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$30397$6Dw7t)
                                                                                                   (list
                                                                                                     (g$scheme-stx$29281$6Dw7t
                                                                                                       'quote)
                                                                                                     g$p$30397$6Dw7t)))
                                                                                                g$ls/false$30396$6Dw7t)
                                                                                              (g$syntax-violation$29458$6Dw7t
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$30395$6Dw7t))))
                                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                                           g$t$30395$6Dw7t
                                                                                           'any))))
                                                                                     g$t$30391$6Dw7t))))
                                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                                 g$t$30391$6Dw7t
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$30387$6Dw7t))))
                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                       g$t$30387$6Dw7t
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$30384$6Dw7t))))
                                                           (g$syntax-dispatch$29338$6Dw7t
                                                             g$t$30384$6Dw7t
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$30380$6Dw7t))))
                                                 (g$syntax-dispatch$29338$6Dw7t
                                                   g$t$30380$6Dw7t
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$30376$6Dw7t))))
                                       (g$syntax-dispatch$29338$6Dw7t
                                         g$t$30376$6Dw7t
                                         '((#(scheme-id unquote)
                                            .
                                            each-any)
                                           .
                                           any)))))
                                   g$t$30373$6Dw7t))))
                             (g$syntax-dispatch$29338$6Dw7t
                               g$t$30373$6Dw7t
                               '(#(scheme-id unquote) any)))))
                         g$p$30371$6Dw7t)))))
           (case-lambda
             ((g$x$30367$6Dw7t)
              ((case-lambda
                 ((g$t$30368$6Dw7t)
                  ((case-lambda
                     ((g$ls/false$30369$6Dw7t)
                      (if g$ls/false$30369$6Dw7t
                        (apply
                          (case-lambda
                            ((g$e$30370$6Dw7t)
                             (g$quasi$30366$6Dw7t g$e$30370$6Dw7t '0)))
                          g$ls/false$30369$6Dw7t)
                        (g$syntax-violation$29458$6Dw7t
                          '#f
                          '"invalid syntax"
                          g$t$30368$6Dw7t))))
                   (g$syntax-dispatch$29338$6Dw7t
                     g$t$30368$6Dw7t
                     '(_ any)))))
               g$x$30367$6Dw7t))))))))
   (g$quasisyntax-macro$29330$6Dw7t
     g$quasisyntax-macro$32929$6Dw7t
     ((case-lambda
        (()
         (letrec* ((g$quasi$30477$6Dw7t
                     (case-lambda
                       ((g$p$30491$6Dw7t g$lev$30492$6Dw7t)
                        ((case-lambda
                           ((g$t$30493$6Dw7t)
                            ((case-lambda
                               ((g$ls/false$30494$6Dw7t)
                                (if g$ls/false$30494$6Dw7t
                                  (apply
                                    (case-lambda
                                      ((g$p$30495$6Dw7t)
                                       (if (g$=$25069$6Dw7t
                                             g$lev$30492$6Dw7t
                                             '0)
                                         ((case-lambda
                                            ((g$g$30496$6Dw7t)
                                             (values
                                               (list g$g$30496$6Dw7t)
                                               (list g$p$30495$6Dw7t)
                                               g$g$30496$6Dw7t)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$30477$6Dw7t
                                                g$p$30495$6Dw7t
                                                (- g$lev$30492$6Dw7t
                                                   '1))))
                                           (case-lambda
                                             ((g$lhs*$30500$6Dw7t
                                                g$rhs*$30501$6Dw7t
                                                g$p$30502$6Dw7t)
                                              ((case-lambda
                                                 ((g$p$30503$6Dw7t
                                                    g$rhs*$30504$6Dw7t
                                                    g$lhs*$30505$6Dw7t)
                                                  (values
                                                    g$lhs*$30505$6Dw7t
                                                    g$rhs*$30504$6Dw7t
                                                    (list
                                                      'unsyntax
                                                      g$p$30503$6Dw7t))))
                                               g$p$30502$6Dw7t
                                               g$rhs*$30501$6Dw7t
                                               g$lhs*$30500$6Dw7t)))))))
                                    g$ls/false$30494$6Dw7t)
                                  ((case-lambda
                                     ((g$t$30506$6Dw7t)
                                      ((case-lambda
                                         ((g$ls/false$30507$6Dw7t)
                                          (if (if g$ls/false$30507$6Dw7t
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (g$=$25069$6Dw7t
                                                         g$lev$30492$6Dw7t
                                                         '0)))
                                                    g$ls/false$30507$6Dw7t))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$29458$6Dw7t
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$30491$6Dw7t)))
                                              g$ls/false$30507$6Dw7t)
                                            ((case-lambda
                                               ((g$t$30508$6Dw7t)
                                                ((case-lambda
                                                   ((g$ls/false$30509$6Dw7t)
                                                    (if g$ls/false$30509$6Dw7t
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$30510$6Dw7t
                                                             g$q$30511$6Dw7t)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$30477$6Dw7t
                                                                  g$q$30511$6Dw7t
                                                                  g$lev$30492$6Dw7t)))
                                                             (case-lambda
                                                               ((g$lhs*$30515$6Dw7t
                                                                  g$rhs*$30516$6Dw7t
                                                                  g$q$30517$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$q$30518$6Dw7t
                                                                      g$rhs*$30519$6Dw7t
                                                                      g$lhs*$30520$6Dw7t)
                                                                    (if (g$=$25069$6Dw7t
                                                                          g$lev$30492$6Dw7t
                                                                          '0)
                                                                      ((case-lambda
                                                                         ((g$g*$30521$6Dw7t)
                                                                          (values
                                                                            (g$append$23587$6Dw7t
                                                                              g$g*$30521$6Dw7t
                                                                              g$lhs*$30520$6Dw7t)
                                                                            (g$append$23587$6Dw7t
                                                                              g$p*$30510$6Dw7t
                                                                              g$rhs*$30519$6Dw7t)
                                                                            (g$append$23587$6Dw7t
                                                                              g$g*$30521$6Dw7t
                                                                              g$q$30518$6Dw7t))))
                                                                       (g$map$23581$6Dw7t
                                                                         (case-lambda
                                                                           ((g$x$30522$6Dw7t)
                                                                            (gensym)))
                                                                         g$p*$30510$6Dw7t))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$30477$6Dw7t
                                                                             g$p*$30510$6Dw7t
                                                                             (- g$lev$30492$6Dw7t
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$30526$6Dw7t
                                                                             g$rhs2*$30527$6Dw7t
                                                                             g$p*$30528$6Dw7t)
                                                                           ((case-lambda
                                                                              ((g$p*$30529$6Dw7t
                                                                                 g$rhs2*$30530$6Dw7t
                                                                                 g$lhs2*$30531$6Dw7t)
                                                                               (values
                                                                                 (g$append$23587$6Dw7t
                                                                                   g$lhs2*$30531$6Dw7t
                                                                                   g$lhs*$30520$6Dw7t)
                                                                                 (g$append$23587$6Dw7t
                                                                                   g$rhs2*$30530$6Dw7t
                                                                                   g$rhs*$30519$6Dw7t)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$30529$6Dw7t)
                                                                                   g$q$30518$6Dw7t))))
                                                                            g$p*$30528$6Dw7t
                                                                            g$rhs2*$30527$6Dw7t
                                                                            g$lhs2*$30526$6Dw7t)))))))
                                                                 g$q$30517$6Dw7t
                                                                 g$rhs*$30516$6Dw7t
                                                                 g$lhs*$30515$6Dw7t))))))
                                                        g$ls/false$30509$6Dw7t)
                                                      ((case-lambda
                                                         ((g$t$30532$6Dw7t)
                                                          ((case-lambda
                                                             ((g$ls/false$30533$6Dw7t)
                                                              (if g$ls/false$30533$6Dw7t
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$30534$6Dw7t
                                                                       g$q$30535$6Dw7t)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$30477$6Dw7t
                                                                            g$q$30535$6Dw7t
                                                                            g$lev$30492$6Dw7t)))
                                                                       (case-lambda
                                                                         ((g$lhs*$30539$6Dw7t
                                                                            g$rhs*$30540$6Dw7t
                                                                            g$q$30541$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$q$30542$6Dw7t
                                                                                g$rhs*$30543$6Dw7t
                                                                                g$lhs*$30544$6Dw7t)
                                                                              (if (g$=$25069$6Dw7t
                                                                                    g$lev$30492$6Dw7t
                                                                                    '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$30545$6Dw7t)
                                                                                    (values
                                                                                      (g$append$23587$6Dw7t
                                                                                        (g$map$23581$6Dw7t
                                                                                          (case-lambda
                                                                                            ((g$g$30546$6Dw7t)
                                                                                             (cons
                                                                                               g$g$30546$6Dw7t
                                                                                               '(...))))
                                                                                          g$g*$30545$6Dw7t)
                                                                                        g$lhs*$30544$6Dw7t)
                                                                                      (g$append$23587$6Dw7t
                                                                                        g$p*$30534$6Dw7t
                                                                                        g$rhs*$30543$6Dw7t)
                                                                                      (g$append$23587$6Dw7t
                                                                                        (apply
                                                                                          g$append$23587$6Dw7t
                                                                                          (g$map$23581$6Dw7t
                                                                                            (case-lambda
                                                                                              ((g$g$30547$6Dw7t)
                                                                                               (cons
                                                                                                 g$g$30547$6Dw7t
                                                                                                 '(...))))
                                                                                            g$g*$30545$6Dw7t))
                                                                                        g$q$30542$6Dw7t))))
                                                                                 (g$map$23581$6Dw7t
                                                                                   (case-lambda
                                                                                     ((g$x$30548$6Dw7t)
                                                                                      (gensym)))
                                                                                   g$p*$30534$6Dw7t))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$30477$6Dw7t
                                                                                       g$p*$30534$6Dw7t
                                                                                       (- g$lev$30492$6Dw7t
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$30552$6Dw7t
                                                                                       g$rhs2*$30553$6Dw7t
                                                                                       g$p*$30554$6Dw7t)
                                                                                     ((case-lambda
                                                                                        ((g$p*$30555$6Dw7t
                                                                                           g$rhs2*$30556$6Dw7t
                                                                                           g$lhs2*$30557$6Dw7t)
                                                                                         (values
                                                                                           (g$append$23587$6Dw7t
                                                                                             g$lhs2*$30557$6Dw7t
                                                                                             g$lhs*$30544$6Dw7t)
                                                                                           (g$append$23587$6Dw7t
                                                                                             g$rhs2*$30556$6Dw7t
                                                                                             g$rhs*$30543$6Dw7t)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$30555$6Dw7t)
                                                                                             g$q$30542$6Dw7t))))
                                                                                      g$p*$30554$6Dw7t
                                                                                      g$rhs2*$30553$6Dw7t
                                                                                      g$lhs2*$30552$6Dw7t)))))))
                                                                           g$q$30541$6Dw7t
                                                                           g$rhs*$30540$6Dw7t
                                                                           g$lhs*$30539$6Dw7t))))))
                                                                  g$ls/false$30533$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$t$30558$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$ls/false$30559$6Dw7t)
                                                                        (if (if g$ls/false$30559$6Dw7t
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$=$25069$6Dw7t
                                                                                       g$lev$30492$6Dw7t
                                                                                       '0)))
                                                                                  g$ls/false$30559$6Dw7t))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$29458$6Dw7t
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$30491$6Dw7t)))
                                                                            g$ls/false$30559$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$t$30560$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$30561$6Dw7t)
                                                                                  (if g$ls/false$30561$6Dw7t
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$30562$6Dw7t)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$30477$6Dw7t
                                                                                                g$p$30562$6Dw7t
                                                                                                (+ g$lev$30492$6Dw7t
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$30566$6Dw7t
                                                                                                g$rhs*$30567$6Dw7t
                                                                                                g$p$30568$6Dw7t)
                                                                                              ((case-lambda
                                                                                                 ((g$p$30569$6Dw7t
                                                                                                    g$rhs*$30570$6Dw7t
                                                                                                    g$lhs*$30571$6Dw7t)
                                                                                                  (values
                                                                                                    g$lhs*$30571$6Dw7t
                                                                                                    g$rhs*$30570$6Dw7t
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$30569$6Dw7t))))
                                                                                               g$p$30568$6Dw7t
                                                                                               g$rhs*$30567$6Dw7t
                                                                                               g$lhs*$30566$6Dw7t))))))
                                                                                      g$ls/false$30561$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$t$30572$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$30573$6Dw7t)
                                                                                            (if g$ls/false$30573$6Dw7t
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$30574$6Dw7t
                                                                                                     g$q$30575$6Dw7t)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$30477$6Dw7t
                                                                                                          g$p$30574$6Dw7t
                                                                                                          g$lev$30492$6Dw7t)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$30582$6Dw7t
                                                                                                          g$rhs*$30583$6Dw7t
                                                                                                          g$p$30584$6Dw7t)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$30477$6Dw7t
                                                                                                               g$q$30575$6Dw7t
                                                                                                               g$lev$30492$6Dw7t)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$30585$6Dw7t
                                                                                                               g$rhs2*$30586$6Dw7t
                                                                                                               g$q$30587$6Dw7t)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$30588$6Dw7t
                                                                                                                   g$rhs2*$30589$6Dw7t
                                                                                                                   g$lhs2*$30590$6Dw7t
                                                                                                                   g$p$30591$6Dw7t
                                                                                                                   g$rhs*$30592$6Dw7t
                                                                                                                   g$lhs*$30593$6Dw7t)
                                                                                                                 (values
                                                                                                                   (g$append$23587$6Dw7t
                                                                                                                     g$lhs2*$30590$6Dw7t
                                                                                                                     g$lhs*$30593$6Dw7t)
                                                                                                                   (g$append$23587$6Dw7t
                                                                                                                     g$rhs2*$30589$6Dw7t
                                                                                                                     g$rhs*$30592$6Dw7t)
                                                                                                                   (cons
                                                                                                                     g$p$30591$6Dw7t
                                                                                                                     g$q$30588$6Dw7t))))
                                                                                                              g$q$30587$6Dw7t
                                                                                                              g$rhs2*$30586$6Dw7t
                                                                                                              g$lhs2*$30585$6Dw7t
                                                                                                              g$p$30584$6Dw7t
                                                                                                              g$rhs*$30583$6Dw7t
                                                                                                              g$lhs*$30582$6Dw7t)))))))))
                                                                                                g$ls/false$30573$6Dw7t)
                                                                                              ((case-lambda
                                                                                                 ((g$t$30594$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$30595$6Dw7t)
                                                                                                      (if g$ls/false$30595$6Dw7t
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$30596$6Dw7t)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$30477$6Dw7t
                                                                                                                    g$x*$30596$6Dw7t
                                                                                                                    g$lev$30492$6Dw7t)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$30600$6Dw7t
                                                                                                                    g$rhs*$30601$6Dw7t
                                                                                                                    g$x*$30602$6Dw7t)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$30603$6Dw7t
                                                                                                                        g$rhs*$30604$6Dw7t
                                                                                                                        g$lhs*$30605$6Dw7t)
                                                                                                                      (values
                                                                                                                        g$lhs*$30605$6Dw7t
                                                                                                                        g$rhs*$30604$6Dw7t
                                                                                                                        (g$list->vector$24034$6Dw7t
                                                                                                                          g$x*$30603$6Dw7t))))
                                                                                                                   g$x*$30602$6Dw7t
                                                                                                                   g$rhs*$30601$6Dw7t
                                                                                                                   g$lhs*$30600$6Dw7t))))))
                                                                                                          g$ls/false$30595$6Dw7t)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$30606$6Dw7t)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$30607$6Dw7t)
                                                                                                                (if g$ls/false$30607$6Dw7t
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$30491$6Dw7t)))
                                                                                                                    g$ls/false$30607$6Dw7t)
                                                                                                                  (g$syntax-violation$29458$6Dw7t
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$30606$6Dw7t))))
                                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                                               g$t$30606$6Dw7t
                                                                                                               '_))))
                                                                                                         g$t$30594$6Dw7t))))
                                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                                     g$t$30594$6Dw7t
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$30572$6Dw7t))))
                                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                                           g$t$30572$6Dw7t
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$30560$6Dw7t))))
                                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                                 g$t$30560$6Dw7t
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$30558$6Dw7t))))
                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                       g$t$30558$6Dw7t
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$30532$6Dw7t))))
                                                           (g$syntax-dispatch$29338$6Dw7t
                                                             g$t$30532$6Dw7t
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$30508$6Dw7t))))
                                                 (g$syntax-dispatch$29338$6Dw7t
                                                   g$t$30508$6Dw7t
                                                   '((#(scheme-id
                                                        unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$30506$6Dw7t))))
                                       (g$syntax-dispatch$29338$6Dw7t
                                         g$t$30506$6Dw7t
                                         '#(scheme-id unsyntax)))))
                                   g$t$30493$6Dw7t))))
                             (g$syntax-dispatch$29338$6Dw7t
                               g$t$30493$6Dw7t
                               '(#(scheme-id unsyntax) any)))))
                         g$p$30491$6Dw7t)))))
           (case-lambda
             ((g$x$30478$6Dw7t)
              ((case-lambda
                 ((g$t$30479$6Dw7t)
                  ((case-lambda
                     ((g$ls/false$30480$6Dw7t)
                      (if g$ls/false$30480$6Dw7t
                        (apply
                          (case-lambda
                            ((g$e$30481$6Dw7t)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$quasi$30477$6Dw7t
                                    g$e$30481$6Dw7t
                                    '0)))
                               (case-lambda
                                 ((g$lhs*$30485$6Dw7t
                                    g$rhs*$30486$6Dw7t
                                    g$v$30487$6Dw7t)
                                  ((case-lambda
                                     ((g$v$30488$6Dw7t
                                        g$rhs*$30489$6Dw7t
                                        g$lhs*$30490$6Dw7t)
                                      (g$bless$29301$6Dw7t
                                        (list
                                          'syntax-case
                                          (cons
                                            'list
                                            g$rhs*$30489$6Dw7t)
                                          '()
                                          (list
                                            g$lhs*$30490$6Dw7t
                                            (list
                                              'syntax
                                              g$v$30488$6Dw7t))))))
                                   g$v$30487$6Dw7t
                                   g$rhs*$30486$6Dw7t
                                   g$lhs*$30485$6Dw7t))))))
                          g$ls/false$30480$6Dw7t)
                        (g$syntax-violation$29458$6Dw7t
                          '#f
                          '"invalid syntax"
                          g$t$30479$6Dw7t))))
                   (g$syntax-dispatch$29338$6Dw7t
                     g$t$30479$6Dw7t
                     '(_ any)))))
               g$x$30478$6Dw7t))))))))
   (g$define-struct-macro$29331$6Dw7t
     g$define-struct-macro$32930$6Dw7t
     (case-lambda
       ((g$stx$30608$6Dw7t)
        (g$syntax-violation$29458$6Dw7t
          '#f
          '"define-struct not supported"
          g$stx$30608$6Dw7t))))
   (g$define-record-type-macro$29332$6Dw7t
     g$define-record-type-macro$32931$6Dw7t
     (case-lambda
       ((g$x$30609$6Dw7t)
        (letrec* ((g$id$30610$6Dw7t
                    (case-lambda
                      ((g$ctxt$30862$6Dw7t . g$str*$30863$6Dw7t)
                       (g$datum->syntax$29460$6Dw7t
                         g$ctxt$30862$6Dw7t
                         (g$string->symbol$24028$6Dw7t
                           (apply
                             g$string-append$24025$6Dw7t
                             (g$map$23581$6Dw7t
                               (case-lambda
                                 ((g$x$30864$6Dw7t)
                                  (if (g$symbol?$24007$6Dw7t
                                        g$x$30864$6Dw7t)
                                    (g$symbol->string$24027$6Dw7t
                                      g$x$30864$6Dw7t)
                                    (if (g$string?$24003$6Dw7t
                                          g$x$30864$6Dw7t)
                                      g$x$30864$6Dw7t
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (g$assertion-violation$20490$6Dw7t
                                              'define-record-type
                                              '"BUG")))))))))
                               g$str*$30863$6Dw7t)))))))
                  (g$get-record-name$30611$6Dw7t
                    (case-lambda
                      ((g$spec$30853$6Dw7t)
                       ((case-lambda
                          ((g$t$30854$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30855$6Dw7t)
                               (if g$ls/false$30855$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$foo$30856$6Dw7t
                                        g$make-foo$30857$6Dw7t
                                        g$foo?$30858$6Dw7t)
                                      g$foo$30856$6Dw7t))
                                   g$ls/false$30855$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30859$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30860$6Dw7t)
                                         (if g$ls/false$30860$6Dw7t
                                           (apply
                                             (case-lambda
                                               ((g$foo$30861$6Dw7t)
                                                g$foo$30861$6Dw7t))
                                             g$ls/false$30860$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30859$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30859$6Dw7t
                                        'any))))
                                  g$t$30854$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30854$6Dw7t
                              '(any any any)))))
                        g$spec$30853$6Dw7t))))
                  (g$get-record-constructor-name$30612$6Dw7t
                    (case-lambda
                      ((g$spec$30843$6Dw7t)
                       ((case-lambda
                          ((g$t$30844$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30845$6Dw7t)
                               (if g$ls/false$30845$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$foo$30846$6Dw7t
                                        g$make-foo$30847$6Dw7t
                                        g$foo?$30848$6Dw7t)
                                      g$make-foo$30847$6Dw7t))
                                   g$ls/false$30845$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30849$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30850$6Dw7t)
                                         (if (if g$ls/false$30850$6Dw7t
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30851$6Dw7t)
                                                      (g$id?$28840$6Dw7t
                                                        g$foo$30851$6Dw7t)))
                                                   g$ls/false$30850$6Dw7t))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30852$6Dw7t)
                                                (g$id$30610$6Dw7t
                                                  g$foo$30852$6Dw7t
                                                  '"make-"
                                                  (g$stx->datum$28851$6Dw7t
                                                    g$foo$30852$6Dw7t))))
                                             g$ls/false$30850$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30849$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30849$6Dw7t
                                        'any))))
                                  g$t$30844$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30844$6Dw7t
                              '(any any any)))))
                        g$spec$30843$6Dw7t))))
                  (g$get-record-predicate-name$30613$6Dw7t
                    (case-lambda
                      ((g$spec$30833$6Dw7t)
                       ((case-lambda
                          ((g$t$30834$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30835$6Dw7t)
                               (if g$ls/false$30835$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$foo$30836$6Dw7t
                                        g$make-foo$30837$6Dw7t
                                        g$foo?$30838$6Dw7t)
                                      g$foo?$30838$6Dw7t))
                                   g$ls/false$30835$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30839$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30840$6Dw7t)
                                         (if (if g$ls/false$30840$6Dw7t
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$30841$6Dw7t)
                                                      (g$id?$28840$6Dw7t
                                                        g$foo$30841$6Dw7t)))
                                                   g$ls/false$30840$6Dw7t))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$30842$6Dw7t)
                                                (g$id$30610$6Dw7t
                                                  g$foo$30842$6Dw7t
                                                  (g$stx->datum$28851$6Dw7t
                                                    g$foo$30842$6Dw7t)
                                                  '"?")))
                                             g$ls/false$30840$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30839$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30839$6Dw7t
                                        'any))))
                                  g$t$30834$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30834$6Dw7t
                              '(any any any)))))
                        g$spec$30833$6Dw7t))))
                  (g$get-clause$30614$6Dw7t
                    (case-lambda
                      ((g$id$30824$6Dw7t g$ls$30825$6Dw7t)
                       ((case-lambda
                          ((g$t$30826$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30827$6Dw7t)
                               (if g$ls/false$30827$6Dw7t
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$30827$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30828$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30829$6Dw7t)
                                         (if g$ls/false$30829$6Dw7t
                                           (apply
                                             (case-lambda
                                               ((g$x$30830$6Dw7t
                                                  g$rest$30831$6Dw7t
                                                  g$ls$30832$6Dw7t)
                                                (if (g$free-id=?$28844$6Dw7t
                                                      (g$bless$29301$6Dw7t
                                                        g$id$30824$6Dw7t)
                                                      g$x$30830$6Dw7t)
                                                  (cons
                                                    g$x$30830$6Dw7t
                                                    g$rest$30831$6Dw7t)
                                                  (g$get-clause$30614$6Dw7t
                                                    g$id$30824$6Dw7t
                                                    g$ls$30832$6Dw7t))))
                                             g$ls/false$30829$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30828$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30828$6Dw7t
                                        '((any . any) . any)))))
                                  g$t$30826$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30826$6Dw7t
                              '()))))
                        g$ls$30825$6Dw7t))))
                  (g$foo-rtd-code$30615$6Dw7t
                    (case-lambda
                      ((g$name$30783$6Dw7t
                         g$clause*$30784$6Dw7t
                         g$parent-rtd-code$30785$6Dw7t)
                       (letrec* ((g$convert-field-spec*$30786$6Dw7t
                                   (case-lambda
                                     ((g$ls$30811$6Dw7t)
                                      (g$list->vector$24034$6Dw7t
                                        (g$map$23581$6Dw7t
                                          (case-lambda
                                            ((g$x$30812$6Dw7t)
                                             ((case-lambda
                                                ((g$t$30813$6Dw7t)
                                                 ((case-lambda
                                                    ((g$ls/false$30814$6Dw7t)
                                                     (if g$ls/false$30814$6Dw7t
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$30815$6Dw7t
                                                              g$rest$30816$6Dw7t)
                                                            (list
                                                              'mutable
                                                              g$name$30815$6Dw7t)))
                                                         g$ls/false$30814$6Dw7t)
                                                       ((case-lambda
                                                          ((g$t$30817$6Dw7t)
                                                           ((case-lambda
                                                              ((g$ls/false$30818$6Dw7t)
                                                               (if g$ls/false$30818$6Dw7t
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$30819$6Dw7t
                                                                        g$rest$30820$6Dw7t)
                                                                      (list
                                                                        'immutable
                                                                        g$name$30819$6Dw7t)))
                                                                   g$ls/false$30818$6Dw7t)
                                                                 ((case-lambda
                                                                    ((g$t$30821$6Dw7t)
                                                                     ((case-lambda
                                                                        ((g$ls/false$30822$6Dw7t)
                                                                         (if g$ls/false$30822$6Dw7t
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$30823$6Dw7t)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$30823$6Dw7t)))
                                                                             g$ls/false$30822$6Dw7t)
                                                                           (g$syntax-violation$29458$6Dw7t
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$30821$6Dw7t))))
                                                                      (g$syntax-dispatch$29338$6Dw7t
                                                                        g$t$30821$6Dw7t
                                                                        'any))))
                                                                  g$t$30817$6Dw7t))))
                                                            (g$syntax-dispatch$29338$6Dw7t
                                                              g$t$30817$6Dw7t
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$30813$6Dw7t))))
                                                  (g$syntax-dispatch$29338$6Dw7t
                                                    g$t$30813$6Dw7t
                                                    '(#(scheme-id
                                                        mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$30812$6Dw7t)))
                                          g$ls$30811$6Dw7t))))))
                         ((case-lambda
                            ((g$uid-code$30787$6Dw7t
                               g$sealed?$30788$6Dw7t
                               g$opaque?$30789$6Dw7t
                               g$fields$30790$6Dw7t)
                             (g$bless$29301$6Dw7t
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$30783$6Dw7t)
                                 g$parent-rtd-code$30785$6Dw7t
                                 g$uid-code$30787$6Dw7t
                                 g$sealed?$30788$6Dw7t
                                 g$opaque?$30789$6Dw7t
                                 g$fields$30790$6Dw7t))))
                          ((case-lambda
                             ((g$t$30791$6Dw7t)
                              ((case-lambda
                                 ((g$ls/false$30792$6Dw7t)
                                  (if g$ls/false$30792$6Dw7t
                                    (apply
                                      (case-lambda
                                        (() (list 'quote (gensym))))
                                      g$ls/false$30792$6Dw7t)
                                    ((case-lambda
                                       ((g$t$30793$6Dw7t)
                                        ((case-lambda
                                           ((g$ls/false$30794$6Dw7t)
                                            (if g$ls/false$30794$6Dw7t
                                              (apply
                                                (case-lambda
                                                  ((g$uid$30795$6Dw7t)
                                                   (list
                                                     'quote
                                                     g$uid$30795$6Dw7t)))
                                                g$ls/false$30794$6Dw7t)
                                              ((case-lambda
                                                 ((g$t$30796$6Dw7t)
                                                  ((case-lambda
                                                     ((g$ls/false$30797$6Dw7t)
                                                      (if g$ls/false$30797$6Dw7t
                                                        (apply
                                                          (case-lambda
                                                            (() '#f))
                                                          g$ls/false$30797$6Dw7t)
                                                        (g$syntax-violation$29458$6Dw7t
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$30796$6Dw7t))))
                                                   (g$syntax-dispatch$29338$6Dw7t
                                                     g$t$30796$6Dw7t
                                                     '_))))
                                               g$t$30793$6Dw7t))))
                                         (g$syntax-dispatch$29338$6Dw7t
                                           g$t$30793$6Dw7t
                                           '(_ any)))))
                                     g$t$30791$6Dw7t))))
                               (g$syntax-dispatch$29338$6Dw7t
                                 g$t$30791$6Dw7t
                                 '(_)))))
                           (g$get-clause$30614$6Dw7t
                             'nongenerative
                             g$clause*$30784$6Dw7t))
                          ((case-lambda
                             ((g$t$30798$6Dw7t)
                              ((case-lambda
                                 ((g$ls/false$30799$6Dw7t)
                                  (if g$ls/false$30799$6Dw7t
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30799$6Dw7t)
                                    ((case-lambda
                                       ((g$t$30800$6Dw7t)
                                        ((case-lambda
                                           ((g$ls/false$30801$6Dw7t)
                                            (if g$ls/false$30801$6Dw7t
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30801$6Dw7t)
                                              (g$syntax-violation$29458$6Dw7t
                                                '#f
                                                '"invalid syntax"
                                                g$t$30800$6Dw7t))))
                                         (g$syntax-dispatch$29338$6Dw7t
                                           g$t$30800$6Dw7t
                                           '_))))
                                     g$t$30798$6Dw7t))))
                               (g$syntax-dispatch$29338$6Dw7t
                                 g$t$30798$6Dw7t
                                 '(_ #(atom #t))))))
                           (g$get-clause$30614$6Dw7t
                             'sealed
                             g$clause*$30784$6Dw7t))
                          ((case-lambda
                             ((g$t$30802$6Dw7t)
                              ((case-lambda
                                 ((g$ls/false$30803$6Dw7t)
                                  (if g$ls/false$30803$6Dw7t
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$30803$6Dw7t)
                                    ((case-lambda
                                       ((g$t$30804$6Dw7t)
                                        ((case-lambda
                                           ((g$ls/false$30805$6Dw7t)
                                            (if g$ls/false$30805$6Dw7t
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$30805$6Dw7t)
                                              (g$syntax-violation$29458$6Dw7t
                                                '#f
                                                '"invalid syntax"
                                                g$t$30804$6Dw7t))))
                                         (g$syntax-dispatch$29338$6Dw7t
                                           g$t$30804$6Dw7t
                                           '_))))
                                     g$t$30802$6Dw7t))))
                               (g$syntax-dispatch$29338$6Dw7t
                                 g$t$30802$6Dw7t
                                 '(_ #(atom #t))))))
                           (g$get-clause$30614$6Dw7t
                             'opaque
                             g$clause*$30784$6Dw7t))
                          ((case-lambda
                             ((g$t$30806$6Dw7t)
                              ((case-lambda
                                 ((g$ls/false$30807$6Dw7t)
                                  (if g$ls/false$30807$6Dw7t
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$30808$6Dw7t)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$30786$6Dw7t
                                             g$field-spec*$30808$6Dw7t))))
                                      g$ls/false$30807$6Dw7t)
                                    ((case-lambda
                                       ((g$t$30809$6Dw7t)
                                        ((case-lambda
                                           ((g$ls/false$30810$6Dw7t)
                                            (if g$ls/false$30810$6Dw7t
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$30810$6Dw7t)
                                              (g$syntax-violation$29458$6Dw7t
                                                '#f
                                                '"invalid syntax"
                                                g$t$30809$6Dw7t))))
                                         (g$syntax-dispatch$29338$6Dw7t
                                           g$t$30809$6Dw7t
                                           '_))))
                                     g$t$30806$6Dw7t))))
                               (g$syntax-dispatch$29338$6Dw7t
                                 g$t$30806$6Dw7t
                                 '(_ . each-any)))))
                           (g$get-clause$30614$6Dw7t
                             'fields
                             g$clause*$30784$6Dw7t)))))))
                  (g$parent-rtd-code$30616$6Dw7t
                    (case-lambda
                      ((g$clause*$30771$6Dw7t)
                       ((case-lambda
                          ((g$t$30772$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30773$6Dw7t)
                               (if g$ls/false$30773$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$name$30774$6Dw7t)
                                      (list
                                        'record-type-descriptor
                                        g$name$30774$6Dw7t)))
                                   g$ls/false$30773$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30775$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30776$6Dw7t)
                                         (if g$ls/false$30776$6Dw7t
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30777$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$30778$6Dw7t)
                                                        (if g$ls/false$30778$6Dw7t
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30779$6Dw7t
                                                                 g$rcd$30780$6Dw7t)
                                                               g$rtd$30779$6Dw7t))
                                                            g$ls/false$30778$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$30781$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$30782$6Dw7t)
                                                                  (if g$ls/false$30782$6Dw7t
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30782$6Dw7t)
                                                                    (g$syntax-violation$29458$6Dw7t
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30781$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$30781$6Dw7t
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30777$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$30777$6Dw7t
                                                       '(_ any any)))))
                                                 (g$get-clause$30614$6Dw7t
                                                   'parent-rtd
                                                   g$clause*$30771$6Dw7t))))
                                             g$ls/false$30776$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30775$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30775$6Dw7t
                                        '#(atom #f)))))
                                  g$t$30772$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30772$6Dw7t
                              '(_ any)))))
                        (g$get-clause$30614$6Dw7t
                          'parent
                          g$clause*$30771$6Dw7t)))))
                  (g$parent-rcd-code$30617$6Dw7t
                    (case-lambda
                      ((g$clause*$30759$6Dw7t)
                       ((case-lambda
                          ((g$t$30760$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30761$6Dw7t)
                               (if g$ls/false$30761$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$name$30762$6Dw7t)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$30762$6Dw7t)))
                                   g$ls/false$30761$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30763$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30764$6Dw7t)
                                         (if g$ls/false$30764$6Dw7t
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$30765$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$30766$6Dw7t)
                                                        (if g$ls/false$30766$6Dw7t
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$30767$6Dw7t
                                                                 g$rcd$30768$6Dw7t)
                                                               g$rcd$30768$6Dw7t))
                                                            g$ls/false$30766$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$30769$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$30770$6Dw7t)
                                                                  (if g$ls/false$30770$6Dw7t
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$30770$6Dw7t)
                                                                    (g$syntax-violation$29458$6Dw7t
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30769$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$30769$6Dw7t
                                                                 '#(atom
                                                                    #f)))))
                                                           g$t$30765$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$30765$6Dw7t
                                                       '(_ any any)))))
                                                 (g$get-clause$30614$6Dw7t
                                                   'parent-rtd
                                                   g$clause*$30759$6Dw7t))))
                                             g$ls/false$30764$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30763$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30763$6Dw7t
                                        '#(atom #f)))))
                                  g$t$30760$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30760$6Dw7t
                              '(_ any)))))
                        (g$get-clause$30614$6Dw7t
                          'parent
                          g$clause*$30759$6Dw7t)))))
                  (g$foo-rcd-code$30618$6Dw7t
                    (case-lambda
                      ((g$clause*$30755$6Dw7t
                         g$foo-rtd$30756$6Dw7t
                         g$protocol$30757$6Dw7t
                         g$parent-rcd-code$30758$6Dw7t)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$30756$6Dw7t
                         g$parent-rcd-code$30758$6Dw7t
                         g$protocol$30757$6Dw7t))))
                  (g$get-protocol-code$30619$6Dw7t
                    (case-lambda
                      ((g$clause*$30749$6Dw7t)
                       ((case-lambda
                          ((g$t$30750$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30751$6Dw7t)
                               (if g$ls/false$30751$6Dw7t
                                 (apply
                                   (case-lambda
                                     ((g$expr$30752$6Dw7t)
                                      g$expr$30752$6Dw7t))
                                   g$ls/false$30751$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30753$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30754$6Dw7t)
                                         (if g$ls/false$30754$6Dw7t
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$30754$6Dw7t)
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$t$30753$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30753$6Dw7t
                                        '_))))
                                  g$t$30750$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30750$6Dw7t
                              '(_ any)))))
                        (g$get-clause$30614$6Dw7t
                          'protocol
                          g$clause*$30749$6Dw7t)))))
                  (g$get-fields$30620$6Dw7t
                    (case-lambda
                      ((g$clause*$30740$6Dw7t)
                       ((case-lambda
                          ((g$t$30741$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30742$6Dw7t)
                               (if g$ls/false$30742$6Dw7t
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$30742$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30743$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30744$6Dw7t)
                                         (if g$ls/false$30744$6Dw7t
                                           (apply
                                             (case-lambda
                                               ((g$f*$30745$6Dw7t)
                                                g$f*$30745$6Dw7t))
                                             g$ls/false$30744$6Dw7t)
                                           ((case-lambda
                                              ((g$t$30746$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$30747$6Dw7t)
                                                   (if g$ls/false$30747$6Dw7t
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$30748$6Dw7t)
                                                          (g$get-fields$30620$6Dw7t
                                                            g$rest$30748$6Dw7t)))
                                                       g$ls/false$30747$6Dw7t)
                                                     (g$syntax-violation$29458$6Dw7t
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$30746$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$30746$6Dw7t
                                                  '(_ . any)))))
                                            g$t$30743$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30743$6Dw7t
                                        '((#(scheme-id fields)
                                           .
                                           each-any)
                                          .
                                          _)))))
                                  g$t$30741$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30741$6Dw7t
                              '()))))
                        g$clause*$30740$6Dw7t))))
                  (g$get-mutator-indices$30621$6Dw7t
                    (case-lambda
                      ((g$fields$30728$6Dw7t)
                       ((letrec ((g$f$30729$6Dw7t
                                   (case-lambda
                                     ((g$fields$30730$6Dw7t
                                        g$i$30731$6Dw7t)
                                      ((case-lambda
                                         ((g$t$30732$6Dw7t)
                                          ((case-lambda
                                             ((g$ls/false$30733$6Dw7t)
                                              (if g$ls/false$30733$6Dw7t
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$30733$6Dw7t)
                                                ((case-lambda
                                                   ((g$t$30734$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$30735$6Dw7t)
                                                        (if g$ls/false$30735$6Dw7t
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$30736$6Dw7t)
                                                               (cons
                                                                 g$i$30731$6Dw7t
                                                                 (g$f$30729$6Dw7t
                                                                   g$rest$30736$6Dw7t
                                                                   (+ g$i$30731$6Dw7t
                                                                      '1)))))
                                                            g$ls/false$30735$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$30737$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$30738$6Dw7t)
                                                                  (if g$ls/false$30738$6Dw7t
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$30739$6Dw7t)
                                                                         (g$f$30729$6Dw7t
                                                                           g$rest$30739$6Dw7t
                                                                           (+ g$i$30731$6Dw7t
                                                                              '1))))
                                                                      g$ls/false$30738$6Dw7t)
                                                                    (g$syntax-violation$29458$6Dw7t
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$30737$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$30737$6Dw7t
                                                                 '(_ .
                                                                     any)))))
                                                           g$t$30734$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$30734$6Dw7t
                                                       '((#(scheme-id
                                                            mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$30732$6Dw7t))))
                                           (g$syntax-dispatch$29338$6Dw7t
                                             g$t$30732$6Dw7t
                                             '()))))
                                       g$fields$30730$6Dw7t)))))
                          g$f$30729$6Dw7t)
                        g$fields$30728$6Dw7t
                        '0))))
                  (g$get-mutators$30622$6Dw7t
                    (case-lambda
                      ((g$foo$30707$6Dw7t g$fields$30708$6Dw7t)
                       (letrec* ((g$gen-name$30709$6Dw7t
                                   (case-lambda
                                     ((g$x$30727$6Dw7t)
                                      (g$datum->syntax$29460$6Dw7t
                                        g$foo$30707$6Dw7t
                                        (g$string->symbol$24028$6Dw7t
                                          (g$string-append$24025$6Dw7t
                                            (g$symbol->string$24027$6Dw7t
                                              (g$syntax->datum$29461$6Dw7t
                                                g$foo$30707$6Dw7t))
                                            '"-"
                                            (g$symbol->string$24027$6Dw7t
                                              (g$syntax->datum$29461$6Dw7t
                                                g$x$30727$6Dw7t))
                                            '"-set!")))))))
                         ((letrec ((g$f$30710$6Dw7t
                                     (case-lambda
                                       ((g$fields$30711$6Dw7t)
                                        ((case-lambda
                                           ((g$t$30712$6Dw7t)
                                            ((case-lambda
                                               ((g$ls/false$30713$6Dw7t)
                                                (if g$ls/false$30713$6Dw7t
                                                  (apply
                                                    (case-lambda
                                                      (() '()))
                                                    g$ls/false$30713$6Dw7t)
                                                  ((case-lambda
                                                     ((g$t$30714$6Dw7t)
                                                      ((case-lambda
                                                         ((g$ls/false$30715$6Dw7t)
                                                          (if g$ls/false$30715$6Dw7t
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30716$6Dw7t
                                                                   g$accessor$30717$6Dw7t
                                                                   g$mutator$30718$6Dw7t
                                                                   g$rest$30719$6Dw7t)
                                                                 (cons
                                                                   g$mutator$30718$6Dw7t
                                                                   (g$f$30710$6Dw7t
                                                                     g$rest$30719$6Dw7t))))
                                                              g$ls/false$30715$6Dw7t)
                                                            ((case-lambda
                                                               ((g$t$30720$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$ls/false$30721$6Dw7t)
                                                                    (if g$ls/false$30721$6Dw7t
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30722$6Dw7t
                                                                             g$rest$30723$6Dw7t)
                                                                           (cons
                                                                             (g$gen-name$30709$6Dw7t
                                                                               g$name$30722$6Dw7t)
                                                                             (g$f$30710$6Dw7t
                                                                               g$rest$30723$6Dw7t))))
                                                                        g$ls/false$30721$6Dw7t)
                                                                      ((case-lambda
                                                                         ((g$t$30724$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30725$6Dw7t)
                                                                              (if g$ls/false$30725$6Dw7t
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$30726$6Dw7t)
                                                                                     (g$f$30710$6Dw7t
                                                                                       g$rest$30726$6Dw7t)))
                                                                                  g$ls/false$30725$6Dw7t)
                                                                                (g$syntax-violation$29458$6Dw7t
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$30724$6Dw7t))))
                                                                           (g$syntax-dispatch$29338$6Dw7t
                                                                             g$t$30724$6Dw7t
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$30720$6Dw7t))))
                                                                 (g$syntax-dispatch$29338$6Dw7t
                                                                   g$t$30720$6Dw7t
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$30714$6Dw7t))))
                                                       (g$syntax-dispatch$29338$6Dw7t
                                                         g$t$30714$6Dw7t
                                                         '((#(scheme-id
                                                              mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$30712$6Dw7t))))
                                             (g$syntax-dispatch$29338$6Dw7t
                                               g$t$30712$6Dw7t
                                               '()))))
                                         g$fields$30711$6Dw7t)))))
                            g$f$30710$6Dw7t)
                          g$fields$30708$6Dw7t)))))
                  (g$get-accessors$30623$6Dw7t
                    (case-lambda
                      ((g$foo$30673$6Dw7t g$fields$30674$6Dw7t)
                       (letrec* ((g$gen-name$30675$6Dw7t
                                   (case-lambda
                                     ((g$x$30706$6Dw7t)
                                      (g$datum->syntax$29460$6Dw7t
                                        g$foo$30673$6Dw7t
                                        (g$string->symbol$24028$6Dw7t
                                          (g$string-append$24025$6Dw7t
                                            (g$symbol->string$24027$6Dw7t
                                              (g$syntax->datum$29461$6Dw7t
                                                g$foo$30673$6Dw7t))
                                            '"-"
                                            (g$symbol->string$24027$6Dw7t
                                              (g$syntax->datum$29461$6Dw7t
                                                g$x$30706$6Dw7t)))))))))
                         (g$map$23581$6Dw7t
                           (case-lambda
                             ((g$field$30676$6Dw7t)
                              ((case-lambda
                                 ((g$t$30677$6Dw7t)
                                  ((case-lambda
                                     ((g$ls/false$30678$6Dw7t)
                                      (if (if g$ls/false$30678$6Dw7t
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$30679$6Dw7t
                                                     g$accessor$30680$6Dw7t
                                                     g$mutator$30681$6Dw7t)
                                                   (g$id?$28840$6Dw7t
                                                     g$accessor$30680$6Dw7t)))
                                                g$ls/false$30678$6Dw7t))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$30682$6Dw7t
                                               g$accessor$30683$6Dw7t
                                               g$mutator$30684$6Dw7t)
                                             g$accessor$30683$6Dw7t))
                                          g$ls/false$30678$6Dw7t)
                                        ((case-lambda
                                           ((g$t$30685$6Dw7t)
                                            ((case-lambda
                                               ((g$ls/false$30686$6Dw7t)
                                                (if (if g$ls/false$30686$6Dw7t
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$30687$6Dw7t
                                                               g$accessor$30688$6Dw7t)
                                                             (g$id?$28840$6Dw7t
                                                               g$accessor$30688$6Dw7t)))
                                                          g$ls/false$30686$6Dw7t))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$30689$6Dw7t
                                                         g$accessor$30690$6Dw7t)
                                                       g$accessor$30690$6Dw7t))
                                                    g$ls/false$30686$6Dw7t)
                                                  ((case-lambda
                                                     ((g$t$30691$6Dw7t)
                                                      ((case-lambda
                                                         ((g$ls/false$30692$6Dw7t)
                                                          (if (if g$ls/false$30692$6Dw7t
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$30693$6Dw7t)
                                                                       (g$id?$28840$6Dw7t
                                                                         g$name$30693$6Dw7t)))
                                                                    g$ls/false$30692$6Dw7t))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$30694$6Dw7t)
                                                                 (g$gen-name$30675$6Dw7t
                                                                   g$name$30694$6Dw7t)))
                                                              g$ls/false$30692$6Dw7t)
                                                            ((case-lambda
                                                               ((g$t$30695$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$ls/false$30696$6Dw7t)
                                                                    (if (if g$ls/false$30696$6Dw7t
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$30697$6Dw7t)
                                                                                 (g$id?$28840$6Dw7t
                                                                                   g$name$30697$6Dw7t)))
                                                                              g$ls/false$30696$6Dw7t))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$30698$6Dw7t)
                                                                           (g$gen-name$30675$6Dw7t
                                                                             g$name$30698$6Dw7t)))
                                                                        g$ls/false$30696$6Dw7t)
                                                                      ((case-lambda
                                                                         ((g$t$30699$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$ls/false$30700$6Dw7t)
                                                                              (if (if g$ls/false$30700$6Dw7t
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$30701$6Dw7t)
                                                                                           (g$id?$28840$6Dw7t
                                                                                             g$name$30701$6Dw7t)))
                                                                                        g$ls/false$30700$6Dw7t))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$30702$6Dw7t)
                                                                                     (g$gen-name$30675$6Dw7t
                                                                                       g$name$30702$6Dw7t)))
                                                                                  g$ls/false$30700$6Dw7t)
                                                                                ((case-lambda
                                                                                   ((g$t$30703$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$30704$6Dw7t)
                                                                                        (if g$ls/false$30704$6Dw7t
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$30705$6Dw7t)
                                                                                               (g$syntax-violation$29458$6Dw7t
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$30676$6Dw7t)))
                                                                                            g$ls/false$30704$6Dw7t)
                                                                                          (g$syntax-violation$29458$6Dw7t
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$30703$6Dw7t))))
                                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                                       g$t$30703$6Dw7t
                                                                                       'any))))
                                                                                 g$t$30699$6Dw7t))))
                                                                           (g$syntax-dispatch$29338$6Dw7t
                                                                             g$t$30699$6Dw7t
                                                                             'any))))
                                                                       g$t$30695$6Dw7t))))
                                                                 (g$syntax-dispatch$29338$6Dw7t
                                                                   g$t$30695$6Dw7t
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$30691$6Dw7t))))
                                                       (g$syntax-dispatch$29338$6Dw7t
                                                         g$t$30691$6Dw7t
                                                         '(#(scheme-id
                                                             mutable)
                                                           any)))))
                                                   g$t$30685$6Dw7t))))
                                             (g$syntax-dispatch$29338$6Dw7t
                                               g$t$30685$6Dw7t
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$30677$6Dw7t))))
                                   (g$syntax-dispatch$29338$6Dw7t
                                     g$t$30677$6Dw7t
                                     '(#(scheme-id mutable)
                                       any
                                       any
                                       any)))))
                               g$field$30676$6Dw7t)))
                           g$fields$30674$6Dw7t)))))
                  (g$enumerate$30624$6Dw7t
                    (case-lambda
                      ((g$ls$30669$6Dw7t)
                       ((letrec ((g$f$30670$6Dw7t
                                   (case-lambda
                                     ((g$ls$30671$6Dw7t g$i$30672$6Dw7t)
                                      (if (null? g$ls$30671$6Dw7t)
                                        '()
                                        ((case-lambda
                                           (()
                                            (begin
                                              '#f
                                              (cons
                                                g$i$30672$6Dw7t
                                                (g$f$30670$6Dw7t
                                                  (cdr g$ls$30671$6Dw7t)
                                                  (+ g$i$30672$6Dw7t
                                                     '1))))))))))))
                          g$f$30670$6Dw7t)
                        g$ls$30669$6Dw7t
                        '0))))
                  (g$do-define-record$30625$6Dw7t
                    (case-lambda
                      ((g$namespec$30649$6Dw7t g$clause*$30650$6Dw7t)
                       ((case-lambda
                          ((g$foo$30651$6Dw7t)
                           ((case-lambda
                              ((g$foo-rtd$30652$6Dw7t)
                               ((case-lambda
                                  ((g$foo-rcd$30653$6Dw7t)
                                   ((case-lambda
                                      ((g$protocol$30654$6Dw7t)
                                       ((case-lambda
                                          ((g$make-foo$30655$6Dw7t)
                                           ((case-lambda
                                              ((g$fields$30656$6Dw7t)
                                               ((case-lambda
                                                  ((g$idx*$30657$6Dw7t)
                                                   ((case-lambda
                                                      ((g$foo-x*$30658$6Dw7t)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$30659$6Dw7t)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$30660$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$foo?$30661$6Dw7t)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$30662$6Dw7t)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$30663$6Dw7t)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$30664$6Dw7t)
                                                                               (g$bless$29301$6Dw7t
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$30652$6Dw7t
                                                                                       g$foo-rtd-code$30662$6Dw7t)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$30654$6Dw7t
                                                                                         g$protocol-code$30664$6Dw7t)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$30653$6Dw7t
                                                                                           g$foo-rcd-code$30663$6Dw7t)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$30651$6Dw7t
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$30652$6Dw7t)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$30653$6Dw7t)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$30661$6Dw7t
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$30652$6Dw7t))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$30655$6Dw7t
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$30653$6Dw7t))
                                                                                               (g$append$23587$6Dw7t
                                                                                                 (g$map$23581$6Dw7t
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$30665$6Dw7t
                                                                                                        g$idx$30666$6Dw7t)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$30665$6Dw7t
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$30652$6Dw7t
                                                                                                          g$idx$30666$6Dw7t))))
                                                                                                   g$foo-x*$30658$6Dw7t
                                                                                                   g$idx*$30657$6Dw7t)
                                                                                                 (g$map$23581$6Dw7t
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$30667$6Dw7t
                                                                                                        g$idx$30668$6Dw7t)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$30667$6Dw7t
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$30652$6Dw7t
                                                                                                          g$idx$30668$6Dw7t))))
                                                                                                   g$set-foo-x!*$30659$6Dw7t
                                                                                                   g$set-foo-idx*$30660$6Dw7t))))))))))))
                                                                            (g$get-protocol-code$30619$6Dw7t
                                                                              g$clause*$30650$6Dw7t))))
                                                                        (g$foo-rcd-code$30618$6Dw7t
                                                                          g$clause*$30650$6Dw7t
                                                                          g$foo-rtd$30652$6Dw7t
                                                                          g$protocol$30654$6Dw7t
                                                                          (g$parent-rcd-code$30617$6Dw7t
                                                                            g$clause*$30650$6Dw7t)))))
                                                                    (g$foo-rtd-code$30615$6Dw7t
                                                                      g$foo$30651$6Dw7t
                                                                      g$clause*$30650$6Dw7t
                                                                      (g$parent-rtd-code$30616$6Dw7t
                                                                        g$clause*$30650$6Dw7t)))))
                                                                (g$get-record-predicate-name$30613$6Dw7t
                                                                  g$namespec$30649$6Dw7t))))
                                                            (g$get-mutator-indices$30621$6Dw7t
                                                              g$fields$30656$6Dw7t))))
                                                        (g$get-mutators$30622$6Dw7t
                                                          g$foo$30651$6Dw7t
                                                          g$fields$30656$6Dw7t))))
                                                    (g$get-accessors$30623$6Dw7t
                                                      g$foo$30651$6Dw7t
                                                      g$fields$30656$6Dw7t))))
                                                (g$enumerate$30624$6Dw7t
                                                  g$fields$30656$6Dw7t))))
                                            (g$get-fields$30620$6Dw7t
                                              g$clause*$30650$6Dw7t))))
                                        (g$get-record-constructor-name$30612$6Dw7t
                                          g$namespec$30649$6Dw7t))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$30611$6Dw7t
                          g$namespec$30649$6Dw7t)))))
                  (g$verify-clauses$30626$6Dw7t
                    (case-lambda
                      ((g$x$30631$6Dw7t g$cls*$30632$6Dw7t)
                       (letrec* ((g$valid-kwds$30633$6Dw7t
                                   (g$map$23581$6Dw7t
                                     g$bless$29301$6Dw7t
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$30634$6Dw7t
                                   (case-lambda
                                     ((g$x$30646$6Dw7t g$ls$30647$6Dw7t)
                                      (if (pair? g$ls$30647$6Dw7t)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$30648$6Dw7t)
                                              (if g$t$30648$6Dw7t
                                                g$t$30648$6Dw7t
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$30634$6Dw7t
                                                    g$x$30646$6Dw7t
                                                    (cdr g$ls$30647$6Dw7t))))))
                                           (g$free-id=?$28844$6Dw7t
                                             g$x$30646$6Dw7t
                                             (car g$ls$30647$6Dw7t))))
                                        '#f)))))
                         ((letrec ((g$f$30635$6Dw7t
                                     (case-lambda
                                       ((g$cls*$30636$6Dw7t
                                          g$seen*$30637$6Dw7t)
                                        (if (not (null?
                                                   g$cls*$30636$6Dw7t))
                                          ((case-lambda
                                             ((g$t$30638$6Dw7t)
                                              ((case-lambda
                                                 ((g$ls/false$30639$6Dw7t)
                                                  (if g$ls/false$30639$6Dw7t
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$30640$6Dw7t
                                                           g$rest$30641$6Dw7t)
                                                         (if ((case-lambda
                                                                ((g$t$30642$6Dw7t)
                                                                 (if g$t$30642$6Dw7t
                                                                   g$t$30642$6Dw7t
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$30634$6Dw7t
                                                                            g$kwd$30640$6Dw7t
                                                                            g$valid-kwds$30633$6Dw7t))))))
                                                              (not (g$id?$28840$6Dw7t
                                                                     g$kwd$30640$6Dw7t)))
                                                           (g$syntax-violation$29458$6Dw7t
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$30640$6Dw7t)
                                                           (if (g$bound-id-member?$28847$6Dw7t
                                                                 g$kwd$30640$6Dw7t
                                                                 g$seen*$30637$6Dw7t)
                                                             (g$syntax-violation$29458$6Dw7t
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$30631$6Dw7t
                                                               g$kwd$30640$6Dw7t)
                                                             ((case-lambda
                                                                (()
                                                                 (begin
                                                                   '#f
                                                                   (g$f$30635$6Dw7t
                                                                     (cdr g$cls*$30636$6Dw7t)
                                                                     (cons
                                                                       g$kwd$30640$6Dw7t
                                                                       g$seen*$30637$6Dw7t))))))))))
                                                      g$ls/false$30639$6Dw7t)
                                                    ((case-lambda
                                                       ((g$t$30643$6Dw7t)
                                                        ((case-lambda
                                                           ((g$ls/false$30644$6Dw7t)
                                                            (if g$ls/false$30644$6Dw7t
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$30645$6Dw7t)
                                                                   (g$syntax-violation$29458$6Dw7t
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$30645$6Dw7t)))
                                                                g$ls/false$30644$6Dw7t)
                                                              (g$syntax-violation$29458$6Dw7t
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$30643$6Dw7t))))
                                                         (g$syntax-dispatch$29338$6Dw7t
                                                           g$t$30643$6Dw7t
                                                           'any))))
                                                     g$t$30638$6Dw7t))))
                                               (g$syntax-dispatch$29338$6Dw7t
                                                 g$t$30638$6Dw7t
                                                 '(any . any)))))
                                           (car g$cls*$30636$6Dw7t))
                                          (void))))))
                            g$f$30635$6Dw7t)
                          g$cls*$30632$6Dw7t
                          '()))))))
          ((case-lambda
             ((g$t$30627$6Dw7t)
              ((case-lambda
                 ((g$ls/false$30628$6Dw7t)
                  (if g$ls/false$30628$6Dw7t
                    (apply
                      (case-lambda
                        ((g$namespec$30629$6Dw7t g$clause*$30630$6Dw7t)
                         (begin
                           (g$verify-clauses$30626$6Dw7t
                             g$x$30609$6Dw7t
                             g$clause*$30630$6Dw7t)
                           (g$do-define-record$30625$6Dw7t
                             g$namespec$30629$6Dw7t
                             g$clause*$30630$6Dw7t))))
                      g$ls/false$30628$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$30627$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$30627$6Dw7t
                 '(_ any . each-any)))))
           g$x$30609$6Dw7t)))))
   (g$define-condition-type-macro$29333$6Dw7t
     g$define-condition-type-macro$32932$6Dw7t
     (case-lambda
       ((g$x$30865$6Dw7t)
        (letrec* ((g$mkname$30866$6Dw7t
                    (case-lambda
                      ((g$name$30889$6Dw7t g$suffix$30890$6Dw7t)
                       (g$datum->syntax$29460$6Dw7t
                         g$name$30889$6Dw7t
                         (g$string->symbol$24028$6Dw7t
                           (g$string-append$24025$6Dw7t
                             (g$symbol->string$24027$6Dw7t
                               (g$syntax->datum$29461$6Dw7t
                                 g$name$30889$6Dw7t))
                             g$suffix$30890$6Dw7t)))))))
          ((case-lambda
             ((g$t$30867$6Dw7t)
              ((case-lambda
                 ((g$ls/false$30868$6Dw7t)
                  (if (if g$ls/false$30868$6Dw7t
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$30869$6Dw7t
                                 g$name$30870$6Dw7t
                                 g$super$30871$6Dw7t
                                 g$constructor$30872$6Dw7t
                                 g$predicate$30873$6Dw7t
                                 g$field*$30874$6Dw7t
                                 g$accessor*$30875$6Dw7t)
                               (if (g$id?$28840$6Dw7t
                                     g$name$30870$6Dw7t)
                                 (if (g$id?$28840$6Dw7t
                                       g$super$30871$6Dw7t)
                                   (if (g$id?$28840$6Dw7t
                                         g$constructor$30872$6Dw7t)
                                     (if (g$id?$28840$6Dw7t
                                           g$predicate$30873$6Dw7t)
                                       (if (g$for-all$23579$6Dw7t
                                             g$id?$28840$6Dw7t
                                             g$field*$30874$6Dw7t)
                                         (begin
                                           '#f
                                           (g$for-all$23579$6Dw7t
                                             g$id?$28840$6Dw7t
                                             g$accessor*$30875$6Dw7t))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$30868$6Dw7t))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$30876$6Dw7t
                           g$name$30877$6Dw7t
                           g$super$30878$6Dw7t
                           g$constructor$30879$6Dw7t
                           g$predicate$30880$6Dw7t
                           g$field*$30881$6Dw7t
                           g$accessor*$30882$6Dw7t)
                         ((case-lambda
                            ((g$aux-accessor*$30883$6Dw7t)
                             (g$bless$29301$6Dw7t
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$30877$6Dw7t
                                         g$constructor$30879$6Dw7t
                                         (gensym))
                                       (cons
                                         (list
                                           'parent
                                           g$super$30878$6Dw7t)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$23581$6Dw7t
                                               (case-lambda
                                                 ((g$field$30884$6Dw7t
                                                    g$aux$30885$6Dw7t)
                                                  (list
                                                    'immutable
                                                    g$field$30884$6Dw7t
                                                    g$aux$30885$6Dw7t)))
                                               g$field*$30881$6Dw7t
                                               g$aux-accessor*$30883$6Dw7t))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$30880$6Dw7t
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$30877$6Dw7t)))
                                     (g$map$23581$6Dw7t
                                       (case-lambda
                                         ((g$accessor$30886$6Dw7t
                                            g$aux$30887$6Dw7t)
                                          (list
                                            'define
                                            g$accessor$30886$6Dw7t
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$30877$6Dw7t)
                                              g$aux$30887$6Dw7t))))
                                       g$accessor*$30882$6Dw7t
                                       g$aux-accessor*$30883$6Dw7t)))))))
                          (g$map$23581$6Dw7t
                            (case-lambda ((g$x$30888$6Dw7t) (gensym)))
                            g$accessor*$30882$6Dw7t))))
                      g$ls/false$30868$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$30867$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$30867$6Dw7t
                 '(any any any any any . #(each (any any)))))))
           g$x$30865$6Dw7t)))))
   (g$incorrect-usage-macro$29334$6Dw7t
     g$incorrect-usage-macro$32933$6Dw7t
     (case-lambda
       ((g$e$30891$6Dw7t)
        (g$syntax-violation$29458$6Dw7t
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$30891$6Dw7t))))
   (g$parameterize-macro$29335$6Dw7t
     g$parameterize-macro$32934$6Dw7t
     (case-lambda
       ((g$e$30892$6Dw7t)
        ((case-lambda
           ((g$t$30893$6Dw7t)
            ((case-lambda
               ((g$ls/false$30894$6Dw7t)
                (if g$ls/false$30894$6Dw7t
                  (apply
                    (case-lambda
                      ((g$b$30895$6Dw7t g$b*$30896$6Dw7t)
                       (g$bless$29301$6Dw7t
                         (cons
                           'let
                           (cons
                             '()
                             (cons
                               g$b$30895$6Dw7t
                               g$b*$30896$6Dw7t))))))
                    g$ls/false$30894$6Dw7t)
                  ((case-lambda
                     ((g$t$30897$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$30898$6Dw7t)
                          (if g$ls/false$30898$6Dw7t
                            (apply
                              (case-lambda
                                ((g$olhs*$30899$6Dw7t
                                   g$orhs*$30900$6Dw7t
                                   g$b$30901$6Dw7t
                                   g$b*$30902$6Dw7t)
                                 ((case-lambda
                                    ((g$lhs*$30903$6Dw7t
                                       g$rhs*$30904$6Dw7t)
                                     (g$bless$29301$6Dw7t
                                       (cons
                                         (list
                                           'lambda
                                           (g$append$23587$6Dw7t
                                             g$lhs*$30903$6Dw7t
                                             g$rhs*$30904$6Dw7t)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$23581$6Dw7t
                                                       (case-lambda
                                                         ((g$lhs$30905$6Dw7t
                                                            g$rhs$30906$6Dw7t)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$30905$6Dw7t)))
                                                            (list
                                                              g$lhs$30905$6Dw7t
                                                              g$rhs$30906$6Dw7t)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$30906$6Dw7t
                                                                '(t))))))
                                                       g$lhs*$30903$6Dw7t
                                                       g$rhs*$30904$6Dw7t)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$30901$6Dw7t
                                                         g$b*$30902$6Dw7t)))
                                                   '(swap))))))
                                         (g$append$23587$6Dw7t
                                           g$olhs*$30899$6Dw7t
                                           g$orhs*$30900$6Dw7t)))))
                                  (g$generate-temporaries$29447$6Dw7t
                                    g$olhs*$30899$6Dw7t)
                                  (g$generate-temporaries$29447$6Dw7t
                                    g$orhs*$30900$6Dw7t))))
                              g$ls/false$30898$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$30897$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$30897$6Dw7t
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$30893$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30893$6Dw7t
               '(_ () any . each-any)))))
         g$e$30892$6Dw7t))))
   (g$foreign-call-transformer$29336$6Dw7t
     g$foreign-call-transformer$32935$6Dw7t
     (case-lambda
       ((g$e$30907$6Dw7t g$r$30908$6Dw7t g$mr$30909$6Dw7t)
        ((case-lambda
           ((g$t$30910$6Dw7t)
            ((case-lambda
               ((g$ls/false$30911$6Dw7t)
                (if g$ls/false$30911$6Dw7t
                  (apply
                    (case-lambda
                      ((g$name$30912$6Dw7t g$arg*$30913$6Dw7t)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$29356$6Dw7t
                             g$name$30912$6Dw7t
                             g$r$30908$6Dw7t
                             g$mr$30909$6Dw7t)
                           (g$chi-expr*$29354$6Dw7t
                             g$arg*$30913$6Dw7t
                             g$r$30908$6Dw7t
                             g$mr$30909$6Dw7t)))))
                    g$ls/false$30911$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$30910$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$30910$6Dw7t
               '(_ any . each-any)))))
         g$e$30907$6Dw7t))))
   (g$convert-pattern$29337$6Dw7t
     g$convert-pattern$32936$6Dw7t
     (case-lambda
       ((g$pattern$30914$6Dw7t g$keys$30915$6Dw7t)
        (letrec* ((g$cvt*$30916$6Dw7t
                    (case-lambda
                      ((g$p*$30996$6Dw7t
                         g$n$30997$6Dw7t
                         g$ids$30998$6Dw7t)
                       (if (null? g$p*$30996$6Dw7t)
                         (values '() g$ids$30998$6Dw7t)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$30916$6Dw7t
                                (cdr g$p*$30996$6Dw7t)
                                g$n$30997$6Dw7t
                                g$ids$30998$6Dw7t)))
                           (case-lambda
                             ((g$y$31001$6Dw7t g$ids$31002$6Dw7t)
                              ((case-lambda
                                 ((g$ids$31003$6Dw7t g$y$31004$6Dw7t)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$30917$6Dw7t
                                         (car g$p*$30996$6Dw7t)
                                         g$n$30997$6Dw7t
                                         g$ids$31003$6Dw7t)))
                                    (case-lambda
                                      ((g$x$31007$6Dw7t
                                         g$ids$31008$6Dw7t)
                                       ((case-lambda
                                          ((g$ids$31009$6Dw7t
                                             g$x$31010$6Dw7t)
                                           (values
                                             (cons
                                               g$x$31010$6Dw7t
                                               g$y$31004$6Dw7t)
                                             g$ids$31009$6Dw7t)))
                                        g$ids$31008$6Dw7t
                                        g$x$31007$6Dw7t))))))
                               g$ids$31002$6Dw7t
                               g$y$31001$6Dw7t))))))))
                  (g$cvt$30917$6Dw7t
                    (case-lambda
                      ((g$p$30918$6Dw7t
                         g$n$30919$6Dw7t
                         g$ids$30920$6Dw7t)
                       ((case-lambda
                          ((g$t$30921$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$30922$6Dw7t)
                               (if (if g$ls/false$30922$6Dw7t
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$30923$6Dw7t)
                                            (g$id?$28840$6Dw7t
                                              g$id$30923$6Dw7t)))
                                         g$ls/false$30922$6Dw7t))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$30924$6Dw7t)
                                      (if (g$bound-id-member?$28847$6Dw7t
                                            g$p$30918$6Dw7t
                                            g$keys$30915$6Dw7t)
                                        (values
                                          (vector
                                            'free-id
                                            g$p$30918$6Dw7t)
                                          g$ids$30920$6Dw7t)
                                        (if (g$free-id=?$28844$6Dw7t
                                              g$p$30918$6Dw7t
                                              (g$scheme-stx$29281$6Dw7t
                                                '_))
                                          (values '_ g$ids$30920$6Dw7t)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (values
                                                  'any
                                                  (cons
                                                    (cons
                                                      g$p$30918$6Dw7t
                                                      g$n$30919$6Dw7t)
                                                    g$ids$30920$6Dw7t))))))))))
                                   g$ls/false$30922$6Dw7t)
                                 ((case-lambda
                                    ((g$t$30925$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$30926$6Dw7t)
                                         (if (if g$ls/false$30926$6Dw7t
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$30927$6Dw7t
                                                        g$dots$30928$6Dw7t)
                                                      (g$ellipsis?$29339$6Dw7t
                                                        g$dots$30928$6Dw7t)))
                                                   g$ls/false$30926$6Dw7t))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$30929$6Dw7t
                                                  g$dots$30930$6Dw7t)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$30917$6Dw7t
                                                       g$p$30929$6Dw7t
                                                       (+ g$n$30919$6Dw7t
                                                          '1)
                                                       g$ids$30920$6Dw7t)))
                                                  (case-lambda
                                                    ((g$p$30933$6Dw7t
                                                       g$ids$30934$6Dw7t)
                                                     ((case-lambda
                                                        ((g$ids$30935$6Dw7t
                                                           g$p$30936$6Dw7t)
                                                         (values
                                                           (if (eq? g$p$30936$6Dw7t
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$30936$6Dw7t))
                                                           g$ids$30935$6Dw7t)))
                                                      g$ids$30934$6Dw7t
                                                      g$p$30933$6Dw7t))))))
                                             g$ls/false$30926$6Dw7t)
                                           ((case-lambda
                                              ((g$t$30937$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$30938$6Dw7t)
                                                   (if (if g$ls/false$30938$6Dw7t
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$30939$6Dw7t
                                                                  g$dots$30940$6Dw7t
                                                                  g$ys$30941$6Dw7t
                                                                  g$z$30942$6Dw7t)
                                                                (g$ellipsis?$29339$6Dw7t
                                                                  g$dots$30940$6Dw7t)))
                                                             g$ls/false$30938$6Dw7t))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$30943$6Dw7t
                                                            g$dots$30944$6Dw7t
                                                            g$ys$30945$6Dw7t
                                                            g$z$30946$6Dw7t)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$30917$6Dw7t
                                                                 g$z$30946$6Dw7t
                                                                 g$n$30919$6Dw7t
                                                                 g$ids$30920$6Dw7t)))
                                                            (case-lambda
                                                              ((g$z$30949$6Dw7t
                                                                 g$ids$30950$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$ids$30951$6Dw7t
                                                                     g$z$30952$6Dw7t)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$30916$6Dw7t
                                                                          g$ys$30945$6Dw7t
                                                                          g$n$30919$6Dw7t
                                                                          g$ids$30951$6Dw7t)))
                                                                     (case-lambda
                                                                       ((g$ys$30955$6Dw7t
                                                                          g$ids$30956$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ids$30957$6Dw7t
                                                                              g$ys$30958$6Dw7t)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$30917$6Dw7t
                                                                                   g$x$30943$6Dw7t
                                                                                   (+ g$n$30919$6Dw7t
                                                                                      '1)
                                                                                   g$ids$30957$6Dw7t)))
                                                                              (case-lambda
                                                                                ((g$x$30961$6Dw7t
                                                                                   g$ids$30962$6Dw7t)
                                                                                 ((case-lambda
                                                                                    ((g$ids$30963$6Dw7t
                                                                                       g$x$30964$6Dw7t)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$30964$6Dw7t
                                                                                         (g$reverse$24043$6Dw7t
                                                                                           g$ys$30958$6Dw7t)
                                                                                         g$z$30952$6Dw7t)
                                                                                       g$ids$30963$6Dw7t)))
                                                                                  g$ids$30962$6Dw7t
                                                                                  g$x$30961$6Dw7t))))))
                                                                         g$ids$30956$6Dw7t
                                                                         g$ys$30955$6Dw7t))))))
                                                                g$ids$30950$6Dw7t
                                                                g$z$30949$6Dw7t))))))
                                                       g$ls/false$30938$6Dw7t)
                                                     ((case-lambda
                                                        ((g$t$30965$6Dw7t)
                                                         ((case-lambda
                                                            ((g$ls/false$30966$6Dw7t)
                                                             (if g$ls/false$30966$6Dw7t
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$30967$6Dw7t
                                                                      g$y$30968$6Dw7t)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$30917$6Dw7t
                                                                           g$y$30968$6Dw7t
                                                                           g$n$30919$6Dw7t
                                                                           g$ids$30920$6Dw7t)))
                                                                      (case-lambda
                                                                        ((g$y$30971$6Dw7t
                                                                           g$ids$30972$6Dw7t)
                                                                         ((case-lambda
                                                                            ((g$ids$30973$6Dw7t
                                                                               g$y$30974$6Dw7t)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$30917$6Dw7t
                                                                                    g$x$30967$6Dw7t
                                                                                    g$n$30919$6Dw7t
                                                                                    g$ids$30973$6Dw7t)))
                                                                               (case-lambda
                                                                                 ((g$x$30977$6Dw7t
                                                                                    g$ids$30978$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ids$30979$6Dw7t
                                                                                        g$x$30980$6Dw7t)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$30980$6Dw7t
                                                                                          g$y$30974$6Dw7t)
                                                                                        g$ids$30979$6Dw7t)))
                                                                                   g$ids$30978$6Dw7t
                                                                                   g$x$30977$6Dw7t))))))
                                                                          g$ids$30972$6Dw7t
                                                                          g$y$30971$6Dw7t))))))
                                                                 g$ls/false$30966$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$t$30981$6Dw7t)
                                                                   ((case-lambda
                                                                      ((g$ls/false$30982$6Dw7t)
                                                                       (if g$ls/false$30982$6Dw7t
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$30920$6Dw7t)))
                                                                           g$ls/false$30982$6Dw7t)
                                                                         ((case-lambda
                                                                            ((g$t$30983$6Dw7t)
                                                                             ((case-lambda
                                                                                ((g$ls/false$30984$6Dw7t)
                                                                                 (if (if g$ls/false$30984$6Dw7t
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$30985$6Dw7t)
                                                                                              (not (g$stx?$28812$6Dw7t
                                                                                                     g$p$30985$6Dw7t))))
                                                                                           g$ls/false$30984$6Dw7t))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$30986$6Dw7t)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$30917$6Dw7t
                                                                                               g$p$30986$6Dw7t
                                                                                               g$n$30919$6Dw7t
                                                                                               g$ids$30920$6Dw7t)))
                                                                                          (case-lambda
                                                                                            ((g$p$30989$6Dw7t
                                                                                               g$ids$30990$6Dw7t)
                                                                                             ((case-lambda
                                                                                                ((g$ids$30991$6Dw7t
                                                                                                   g$p$30992$6Dw7t)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$30992$6Dw7t)
                                                                                                   g$ids$30991$6Dw7t)))
                                                                                              g$ids$30990$6Dw7t
                                                                                              g$p$30989$6Dw7t))))))
                                                                                     g$ls/false$30984$6Dw7t)
                                                                                   ((case-lambda
                                                                                      ((g$t$30993$6Dw7t)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$30994$6Dw7t)
                                                                                           (if g$ls/false$30994$6Dw7t
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$30995$6Dw7t)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$28851$6Dw7t
                                                                                                        g$datum$30995$6Dw7t))
                                                                                                    g$ids$30920$6Dw7t)))
                                                                                               g$ls/false$30994$6Dw7t)
                                                                                             (g$syntax-violation$29458$6Dw7t
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$30993$6Dw7t))))
                                                                                        (g$syntax-dispatch$29338$6Dw7t
                                                                                          g$t$30993$6Dw7t
                                                                                          'any))))
                                                                                    g$t$30983$6Dw7t))))
                                                                              (g$syntax-dispatch$29338$6Dw7t
                                                                                g$t$30983$6Dw7t
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$30981$6Dw7t))))
                                                                    (g$syntax-dispatch$29338$6Dw7t
                                                                      g$t$30981$6Dw7t
                                                                      '()))))
                                                                g$t$30965$6Dw7t))))
                                                          (g$syntax-dispatch$29338$6Dw7t
                                                            g$t$30965$6Dw7t
                                                            '(any .
                                                                  any)))))
                                                      g$t$30937$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$30937$6Dw7t
                                                  '(any any
                                                        .
                                                        #(each+
                                                          any
                                                          ()
                                                          any))))))
                                            g$t$30925$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$30925$6Dw7t
                                        '(any any)))))
                                  g$t$30921$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$30921$6Dw7t
                              'any))))
                        g$p$30918$6Dw7t)))))
          (g$cvt$30917$6Dw7t g$pattern$30914$6Dw7t '0 '())))))
   (g$syntax-dispatch$29338$6Dw7t
     g$syntax-dispatch$32937$6Dw7t
     (case-lambda
       ((g$e$31011$6Dw7t g$p$31012$6Dw7t)
        (letrec* ((g$stx^$31013$6Dw7t
                    (case-lambda
                      ((g$e$31121$6Dw7t
                         g$m*$31122$6Dw7t
                         g$s*$31123$6Dw7t
                         g$ae*$31124$6Dw7t)
                       (if (if (null? g$m*$31122$6Dw7t)
                             (if (null? g$s*$31123$6Dw7t)
                               (begin '#f (null? g$ae*$31124$6Dw7t))
                               '#f)
                             '#f)
                         g$e$31121$6Dw7t
                         (g$mkstx$28828$6Dw7t
                           g$e$31121$6Dw7t
                           g$m*$31122$6Dw7t
                           g$s*$31123$6Dw7t
                           g$ae*$31124$6Dw7t)))))
                  (g$match-each$31014$6Dw7t
                    (case-lambda
                      ((g$e$31105$6Dw7t
                         g$p$31106$6Dw7t
                         g$m*$31107$6Dw7t
                         g$s*$31108$6Dw7t
                         g$ae*$31109$6Dw7t)
                       (if (pair? g$e$31105$6Dw7t)
                         ((case-lambda
                            ((g$first$31110$6Dw7t)
                             (if g$first$31110$6Dw7t
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$31111$6Dw7t)
                                     (if g$rest$31111$6Dw7t
                                       (begin
                                         '#f
                                         (cons
                                           g$first$31110$6Dw7t
                                           g$rest$31111$6Dw7t))
                                       '#f)))
                                  (g$match-each$31014$6Dw7t
                                    (cdr g$e$31105$6Dw7t)
                                    g$p$31106$6Dw7t
                                    g$m*$31107$6Dw7t
                                    g$s*$31108$6Dw7t
                                    g$ae*$31109$6Dw7t)))
                               '#f)))
                          (g$match$31020$6Dw7t
                            (car g$e$31105$6Dw7t)
                            g$p$31106$6Dw7t
                            g$m*$31107$6Dw7t
                            g$s*$31108$6Dw7t
                            g$ae*$31109$6Dw7t
                            '()))
                         (if (null? g$e$31105$6Dw7t)
                           '()
                           (if (g$stx?$28812$6Dw7t g$e$31105$6Dw7t)
                             (if (not (g$top-marked?$28774$6Dw7t
                                        g$m*$31107$6Dw7t))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28827$6Dw7t
                                        g$m*$31107$6Dw7t
                                        g$s*$31108$6Dw7t
                                        g$ae*$31109$6Dw7t
                                        g$e$31105$6Dw7t)))
                                   (case-lambda
                                     ((g$m*$31115$6Dw7t
                                        g$s*$31116$6Dw7t
                                        g$ae*$31117$6Dw7t)
                                      ((case-lambda
                                         ((g$ae*$31118$6Dw7t
                                            g$s*$31119$6Dw7t
                                            g$m*$31120$6Dw7t)
                                          (g$match-each$31014$6Dw7t
                                            (g$stx-expr$28814$6Dw7t
                                              g$e$31105$6Dw7t)
                                            g$p$31106$6Dw7t
                                            g$m*$31120$6Dw7t
                                            g$s*$31119$6Dw7t
                                            g$ae*$31118$6Dw7t)))
                                       g$ae*$31117$6Dw7t
                                       g$s*$31116$6Dw7t
                                       g$m*$31115$6Dw7t)))))
                               '#f)
                             (if (annotation? g$e$31105$6Dw7t)
                               (g$match-each$31014$6Dw7t
                                 (annotation-expression g$e$31105$6Dw7t)
                                 g$p$31106$6Dw7t
                                 g$m*$31107$6Dw7t
                                 g$s*$31108$6Dw7t
                                 g$ae*$31109$6Dw7t)
                               ((case-lambda
                                  (() (begin '#f '#f)))))))))))
                  (g$match-each+$31015$6Dw7t
                    (case-lambda
                      ((g$e$31073$6Dw7t
                         g$x-pat$31074$6Dw7t
                         g$y-pat$31075$6Dw7t
                         g$z-pat$31076$6Dw7t
                         g$m*$31077$6Dw7t
                         g$s*$31078$6Dw7t
                         g$ae*$31079$6Dw7t
                         g$r$31080$6Dw7t)
                       ((letrec ((g$f$31081$6Dw7t
                                   (case-lambda
                                     ((g$e$31082$6Dw7t
                                        g$m*$31083$6Dw7t
                                        g$s*$31084$6Dw7t
                                        g$ae*$31085$6Dw7t)
                                      (if (pair? g$e$31082$6Dw7t)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$31081$6Dw7t
                                               (cdr g$e$31082$6Dw7t)
                                               g$m*$31083$6Dw7t
                                               g$s*$31084$6Dw7t
                                               g$ae*$31085$6Dw7t)))
                                          (case-lambda
                                            ((g$xr*$31089$6Dw7t
                                               g$y-pat$31090$6Dw7t
                                               g$r$31091$6Dw7t)
                                             ((case-lambda
                                                ((g$r$31092$6Dw7t
                                                   g$y-pat$31093$6Dw7t
                                                   g$xr*$31094$6Dw7t)
                                                 (if g$r$31092$6Dw7t
                                                   (if (null?
                                                         g$y-pat$31093$6Dw7t)
                                                     ((case-lambda
                                                        ((g$xr$31095$6Dw7t)
                                                         (if g$xr$31095$6Dw7t
                                                           (values
                                                             (cons
                                                               g$xr$31095$6Dw7t
                                                               g$xr*$31094$6Dw7t)
                                                             g$y-pat$31093$6Dw7t
                                                             g$r$31092$6Dw7t)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$31020$6Dw7t
                                                        (car g$e$31082$6Dw7t)
                                                        g$x-pat$31074$6Dw7t
                                                        g$m*$31083$6Dw7t
                                                        g$s*$31084$6Dw7t
                                                        g$ae*$31085$6Dw7t
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$31093$6Dw7t)
                                                       (g$match$31020$6Dw7t
                                                         (car g$e$31082$6Dw7t)
                                                         (car g$y-pat$31093$6Dw7t)
                                                         g$m*$31083$6Dw7t
                                                         g$s*$31084$6Dw7t
                                                         g$ae*$31085$6Dw7t
                                                         g$r$31092$6Dw7t)))
                                                   (values
                                                     '#f
                                                     '#f
                                                     '#f))))
                                              g$r$31091$6Dw7t
                                              g$y-pat$31090$6Dw7t
                                              g$xr*$31089$6Dw7t))))
                                        (if (g$stx?$28812$6Dw7t
                                              g$e$31082$6Dw7t)
                                          (if (g$top-marked?$28774$6Dw7t
                                                g$m*$31083$6Dw7t)
                                            (values
                                              '()
                                              g$y-pat$31075$6Dw7t
                                              (g$match$31020$6Dw7t
                                                g$e$31082$6Dw7t
                                                g$z-pat$31076$6Dw7t
                                                g$m*$31083$6Dw7t
                                                g$s*$31084$6Dw7t
                                                g$ae*$31085$6Dw7t
                                                g$r$31080$6Dw7t))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$28827$6Dw7t
                                                   g$m*$31083$6Dw7t
                                                   g$s*$31084$6Dw7t
                                                   g$ae*$31085$6Dw7t
                                                   g$e$31082$6Dw7t)))
                                              (case-lambda
                                                ((g$m*$31099$6Dw7t
                                                   g$s*$31100$6Dw7t
                                                   g$ae*$31101$6Dw7t)
                                                 ((case-lambda
                                                    ((g$ae*$31102$6Dw7t
                                                       g$s*$31103$6Dw7t
                                                       g$m*$31104$6Dw7t)
                                                     (g$f$31081$6Dw7t
                                                       (g$stx-expr$28814$6Dw7t
                                                         g$e$31082$6Dw7t)
                                                       g$m*$31104$6Dw7t
                                                       g$s*$31103$6Dw7t
                                                       g$ae*$31102$6Dw7t)))
                                                  g$ae*$31101$6Dw7t
                                                  g$s*$31100$6Dw7t
                                                  g$m*$31099$6Dw7t)))))
                                          (if (annotation?
                                                g$e$31082$6Dw7t)
                                            (g$f$31081$6Dw7t
                                              (annotation-expression
                                                g$e$31082$6Dw7t)
                                              g$m*$31083$6Dw7t
                                              g$s*$31084$6Dw7t
                                              g$ae*$31085$6Dw7t)
                                            ((case-lambda
                                               (()
                                                (begin
                                                  '#f
                                                  (values
                                                    '()
                                                    g$y-pat$31075$6Dw7t
                                                    (g$match$31020$6Dw7t
                                                      g$e$31082$6Dw7t
                                                      g$z-pat$31076$6Dw7t
                                                      g$m*$31083$6Dw7t
                                                      g$s*$31084$6Dw7t
                                                      g$ae*$31085$6Dw7t
                                                      g$r$31080$6Dw7t)))))))))))))
                          g$f$31081$6Dw7t)
                        g$e$31073$6Dw7t
                        g$m*$31077$6Dw7t
                        g$s*$31078$6Dw7t
                        g$ae*$31079$6Dw7t))))
                  (g$match-each-any$31016$6Dw7t
                    (case-lambda
                      ((g$e$31059$6Dw7t
                         g$m*$31060$6Dw7t
                         g$s*$31061$6Dw7t
                         g$ae*$31062$6Dw7t)
                       (if (pair? g$e$31059$6Dw7t)
                         ((case-lambda
                            ((g$l$31063$6Dw7t)
                             (if g$l$31063$6Dw7t
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$31013$6Dw7t
                                     (car g$e$31059$6Dw7t)
                                     g$m*$31060$6Dw7t
                                     g$s*$31061$6Dw7t
                                     g$ae*$31062$6Dw7t)
                                   g$l$31063$6Dw7t))
                               '#f)))
                          (g$match-each-any$31016$6Dw7t
                            (cdr g$e$31059$6Dw7t)
                            g$m*$31060$6Dw7t
                            g$s*$31061$6Dw7t
                            g$ae*$31062$6Dw7t))
                         (if (null? g$e$31059$6Dw7t)
                           '()
                           (if (g$stx?$28812$6Dw7t g$e$31059$6Dw7t)
                             (if (not (g$top-marked?$28774$6Dw7t
                                        g$m*$31060$6Dw7t))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$28827$6Dw7t
                                        g$m*$31060$6Dw7t
                                        g$s*$31061$6Dw7t
                                        g$ae*$31062$6Dw7t
                                        g$e$31059$6Dw7t)))
                                   (case-lambda
                                     ((g$m*$31067$6Dw7t
                                        g$s*$31068$6Dw7t
                                        g$ae*$31069$6Dw7t)
                                      ((case-lambda
                                         ((g$ae*$31070$6Dw7t
                                            g$s*$31071$6Dw7t
                                            g$m*$31072$6Dw7t)
                                          (g$match-each-any$31016$6Dw7t
                                            (g$stx-expr$28814$6Dw7t
                                              g$e$31059$6Dw7t)
                                            g$m*$31072$6Dw7t
                                            g$s*$31071$6Dw7t
                                            g$ae*$31070$6Dw7t)))
                                       g$ae*$31069$6Dw7t
                                       g$s*$31068$6Dw7t
                                       g$m*$31067$6Dw7t)))))
                               '#f)
                             (if (annotation? g$e$31059$6Dw7t)
                               (g$match-each-any$31016$6Dw7t
                                 (annotation-expression g$e$31059$6Dw7t)
                                 g$m*$31060$6Dw7t
                                 g$s*$31061$6Dw7t
                                 g$ae*$31062$6Dw7t)
                               ((case-lambda
                                  (() (begin '#f '#f)))))))))))
                  (g$match-empty$31017$6Dw7t
                    (case-lambda
                      ((g$p$31056$6Dw7t g$r$31057$6Dw7t)
                       (if (null? g$p$31056$6Dw7t)
                         g$r$31057$6Dw7t
                         (if (eq? g$p$31056$6Dw7t '_)
                           g$r$31057$6Dw7t
                           (if (eq? g$p$31056$6Dw7t 'any)
                             (cons '() g$r$31057$6Dw7t)
                             (if (pair? g$p$31056$6Dw7t)
                               (g$match-empty$31017$6Dw7t
                                 (car g$p$31056$6Dw7t)
                                 (g$match-empty$31017$6Dw7t
                                   (cdr g$p$31056$6Dw7t)
                                   g$r$31057$6Dw7t))
                               (if (eq? g$p$31056$6Dw7t 'each-any)
                                 (cons '() g$r$31057$6Dw7t)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       ((case-lambda
                                          ((g$t$31058$6Dw7t)
                                           (if (eqv?
                                                 g$t$31058$6Dw7t
                                                 'each)
                                             (g$match-empty$31017$6Dw7t
                                               (g$vector-ref$24036$6Dw7t
                                                 g$p$31056$6Dw7t
                                                 '1)
                                               g$r$31057$6Dw7t)
                                             (if (eqv?
                                                   g$t$31058$6Dw7t
                                                   'each+)
                                               (g$match-empty$31017$6Dw7t
                                                 (g$vector-ref$24036$6Dw7t
                                                   g$p$31056$6Dw7t
                                                   '1)
                                                 (g$match-empty$31017$6Dw7t
                                                   (g$reverse$24043$6Dw7t
                                                     (g$vector-ref$24036$6Dw7t
                                                       g$p$31056$6Dw7t
                                                       '2))
                                                   (g$match-empty$31017$6Dw7t
                                                     (g$vector-ref$24036$6Dw7t
                                                       g$p$31056$6Dw7t
                                                       '3)
                                                     g$r$31057$6Dw7t)))
                                               (if (g$memv$23570$6Dw7t
                                                     g$t$31058$6Dw7t
                                                     '(free-id atom))
                                                 g$r$31057$6Dw7t
                                                 (if (g$memv$23570$6Dw7t
                                                       g$t$31058$6Dw7t
                                                       '(scheme-id
                                                          atom))
                                                   g$r$31057$6Dw7t
                                                   (if (eqv?
                                                         g$t$31058$6Dw7t
                                                         'vector)
                                                     (g$match-empty$31017$6Dw7t
                                                       (g$vector-ref$24036$6Dw7t
                                                         g$p$31056$6Dw7t
                                                         '1)
                                                       g$r$31057$6Dw7t)
                                                     ((case-lambda
                                                        (()
                                                         (begin
                                                           '#f
                                                           (g$assertion-violation$20490$6Dw7t
                                                             'syntax-dispatch
                                                             '"invalid pattern"
                                                             g$p$31056$6Dw7t))))))))))))
                                        (g$vector-ref$24036$6Dw7t
                                          g$p$31056$6Dw7t
                                          '0))))))))))))))
                  (g$combine$31018$6Dw7t
                    (case-lambda
                      ((g$r*$31054$6Dw7t g$r$31055$6Dw7t)
                       (if (null? (car g$r*$31054$6Dw7t))
                         g$r$31055$6Dw7t
                         (cons
                           (g$map$23581$6Dw7t car g$r*$31054$6Dw7t)
                           (g$combine$31018$6Dw7t
                             (g$map$23581$6Dw7t cdr g$r*$31054$6Dw7t)
                             g$r$31055$6Dw7t))))))
                  (g$match*$31019$6Dw7t
                    (case-lambda
                      ((g$e$31036$6Dw7t
                         g$p$31037$6Dw7t
                         g$m*$31038$6Dw7t
                         g$s*$31039$6Dw7t
                         g$ae*$31040$6Dw7t
                         g$r$31041$6Dw7t)
                       (if (null? g$p$31037$6Dw7t)
                         (if (null? g$e$31036$6Dw7t)
                           (begin '#f g$r$31041$6Dw7t)
                           '#f)
                         (if (pair? g$p$31037$6Dw7t)
                           (if (pair? g$e$31036$6Dw7t)
                             (begin
                               '#f
                               (g$match$31020$6Dw7t
                                 (car g$e$31036$6Dw7t)
                                 (car g$p$31037$6Dw7t)
                                 g$m*$31038$6Dw7t
                                 g$s*$31039$6Dw7t
                                 g$ae*$31040$6Dw7t
                                 (g$match$31020$6Dw7t
                                   (cdr g$e$31036$6Dw7t)
                                   (cdr g$p$31037$6Dw7t)
                                   g$m*$31038$6Dw7t
                                   g$s*$31039$6Dw7t
                                   g$ae*$31040$6Dw7t
                                   g$r$31041$6Dw7t)))
                             '#f)
                           (if (eq? g$p$31037$6Dw7t 'each-any)
                             ((case-lambda
                                ((g$l$31042$6Dw7t)
                                 (if g$l$31042$6Dw7t
                                   (begin
                                     '#f
                                     (cons
                                       g$l$31042$6Dw7t
                                       g$r$31041$6Dw7t))
                                   '#f)))
                              (g$match-each-any$31016$6Dw7t
                                g$e$31036$6Dw7t
                                g$m*$31038$6Dw7t
                                g$s*$31039$6Dw7t
                                g$ae*$31040$6Dw7t))
                             ((case-lambda
                                (()
                                 (begin
                                   '#f
                                   ((case-lambda
                                      ((g$t$31043$6Dw7t)
                                       (if (eqv? g$t$31043$6Dw7t 'each)
                                         (if (null? g$e$31036$6Dw7t)
                                           (g$match-empty$31017$6Dw7t
                                             (g$vector-ref$24036$6Dw7t
                                               g$p$31037$6Dw7t
                                               '1)
                                             g$r$31041$6Dw7t)
                                           ((case-lambda
                                              ((g$r*$31044$6Dw7t)
                                               (if g$r*$31044$6Dw7t
                                                 (begin
                                                   '#f
                                                   (g$combine$31018$6Dw7t
                                                     g$r*$31044$6Dw7t
                                                     g$r$31041$6Dw7t))
                                                 '#f)))
                                            (g$match-each$31014$6Dw7t
                                              g$e$31036$6Dw7t
                                              (g$vector-ref$24036$6Dw7t
                                                g$p$31037$6Dw7t
                                                '1)
                                              g$m*$31038$6Dw7t
                                              g$s*$31039$6Dw7t
                                              g$ae*$31040$6Dw7t)))
                                         (if (eqv?
                                               g$t$31043$6Dw7t
                                               'free-id)
                                           (if (g$symbol?$24007$6Dw7t
                                                 g$e$31036$6Dw7t)
                                             (if (g$top-marked?$28774$6Dw7t
                                                   g$m*$31038$6Dw7t)
                                               (if (g$free-id=?$28844$6Dw7t
                                                     (g$stx^$31013$6Dw7t
                                                       g$e$31036$6Dw7t
                                                       g$m*$31038$6Dw7t
                                                       g$s*$31039$6Dw7t
                                                       g$ae*$31040$6Dw7t)
                                                     (g$vector-ref$24036$6Dw7t
                                                       g$p$31037$6Dw7t
                                                       '1))
                                                 (begin
                                                   '#f
                                                   g$r$31041$6Dw7t)
                                                 '#f)
                                               '#f)
                                             '#f)
                                           (if (eqv?
                                                 g$t$31043$6Dw7t
                                                 'scheme-id)
                                             (if (g$symbol?$24007$6Dw7t
                                                   g$e$31036$6Dw7t)
                                               (if (g$top-marked?$28774$6Dw7t
                                                     g$m*$31038$6Dw7t)
                                                 (if (g$free-id=?$28844$6Dw7t
                                                       (g$stx^$31013$6Dw7t
                                                         g$e$31036$6Dw7t
                                                         g$m*$31038$6Dw7t
                                                         g$s*$31039$6Dw7t
                                                         g$ae*$31040$6Dw7t)
                                                       (g$scheme-stx$29281$6Dw7t
                                                         (g$vector-ref$24036$6Dw7t
                                                           g$p$31037$6Dw7t
                                                           '1)))
                                                   (begin
                                                     '#f
                                                     g$r$31041$6Dw7t)
                                                   '#f)
                                                 '#f)
                                               '#f)
                                             (if (eqv?
                                                   g$t$31043$6Dw7t
                                                   'each+)
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$match-each+$31015$6Dw7t
                                                      g$e$31036$6Dw7t
                                                      (g$vector-ref$24036$6Dw7t
                                                        g$p$31037$6Dw7t
                                                        '1)
                                                      (g$vector-ref$24036$6Dw7t
                                                        g$p$31037$6Dw7t
                                                        '2)
                                                      (g$vector-ref$24036$6Dw7t
                                                        g$p$31037$6Dw7t
                                                        '3)
                                                      g$m*$31038$6Dw7t
                                                      g$s*$31039$6Dw7t
                                                      g$ae*$31040$6Dw7t
                                                      g$r$31041$6Dw7t)))
                                                 (case-lambda
                                                   ((g$xr*$31048$6Dw7t
                                                      g$y-pat$31049$6Dw7t
                                                      g$r$31050$6Dw7t)
                                                    ((case-lambda
                                                       ((g$r$31051$6Dw7t
                                                          g$y-pat$31052$6Dw7t
                                                          g$xr*$31053$6Dw7t)
                                                        (if g$r$31051$6Dw7t
                                                          (if (null?
                                                                g$y-pat$31052$6Dw7t)
                                                            (begin
                                                              '#f
                                                              (if (null?
                                                                    g$xr*$31053$6Dw7t)
                                                                (g$match-empty$31017$6Dw7t
                                                                  (g$vector-ref$24036$6Dw7t
                                                                    g$p$31037$6Dw7t
                                                                    '1)
                                                                  g$r$31051$6Dw7t)
                                                                (g$combine$31018$6Dw7t
                                                                  g$xr*$31053$6Dw7t
                                                                  g$r$31051$6Dw7t)))
                                                            '#f)
                                                          '#f)))
                                                     g$r$31050$6Dw7t
                                                     g$y-pat$31049$6Dw7t
                                                     g$xr*$31048$6Dw7t))))
                                               (if (eqv?
                                                     g$t$31043$6Dw7t
                                                     'atom)
                                                 (if (g$equal?$27474$6Dw7t
                                                       (g$vector-ref$24036$6Dw7t
                                                         g$p$31037$6Dw7t
                                                         '1)
                                                       (g$strip$28850$6Dw7t
                                                         g$e$31036$6Dw7t
                                                         g$m*$31038$6Dw7t))
                                                   (begin
                                                     '#f
                                                     g$r$31041$6Dw7t)
                                                   '#f)
                                                 (if (eqv?
                                                       g$t$31043$6Dw7t
                                                       'vector)
                                                   (if (g$vector?$24005$6Dw7t
                                                         g$e$31036$6Dw7t)
                                                     (begin
                                                       '#f
                                                       (g$match$31020$6Dw7t
                                                         (g$vector->list$24041$6Dw7t
                                                           g$e$31036$6Dw7t)
                                                         (g$vector-ref$24036$6Dw7t
                                                           g$p$31037$6Dw7t
                                                           '1)
                                                         g$m*$31038$6Dw7t
                                                         g$s*$31039$6Dw7t
                                                         g$ae*$31040$6Dw7t
                                                         g$r$31041$6Dw7t))
                                                     '#f)
                                                   ((case-lambda
                                                      (()
                                                       (begin
                                                         '#f
                                                         (g$assertion-violation$20490$6Dw7t
                                                           'syntax-dispatch
                                                           '"invalid pattern"
                                                           g$p$31037$6Dw7t)))))))))))))
                                    (g$vector-ref$24036$6Dw7t
                                      g$p$31037$6Dw7t
                                      '0))))))))))))
                  (g$match$31020$6Dw7t
                    (case-lambda
                      ((g$e$31021$6Dw7t
                         g$p$31022$6Dw7t
                         g$m*$31023$6Dw7t
                         g$s*$31024$6Dw7t
                         g$ae*$31025$6Dw7t
                         g$r$31026$6Dw7t)
                       (if (not g$r$31026$6Dw7t)
                         '#f
                         (if (eq? g$p$31022$6Dw7t '_)
                           g$r$31026$6Dw7t
                           (if (eq? g$p$31022$6Dw7t 'any)
                             (cons
                               (g$stx^$31013$6Dw7t
                                 g$e$31021$6Dw7t
                                 g$m*$31023$6Dw7t
                                 g$s*$31024$6Dw7t
                                 g$ae*$31025$6Dw7t)
                               g$r$31026$6Dw7t)
                             (if (g$stx?$28812$6Dw7t g$e$31021$6Dw7t)
                               (if (not (g$top-marked?$28774$6Dw7t
                                          g$m*$31023$6Dw7t))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$28827$6Dw7t
                                          g$m*$31023$6Dw7t
                                          g$s*$31024$6Dw7t
                                          g$ae*$31025$6Dw7t
                                          g$e$31021$6Dw7t)))
                                     (case-lambda
                                       ((g$m*$31030$6Dw7t
                                          g$s*$31031$6Dw7t
                                          g$ae*$31032$6Dw7t)
                                        ((case-lambda
                                           ((g$ae*$31033$6Dw7t
                                              g$s*$31034$6Dw7t
                                              g$m*$31035$6Dw7t)
                                            (g$match$31020$6Dw7t
                                              (g$stx-expr$28814$6Dw7t
                                                g$e$31021$6Dw7t)
                                              g$p$31022$6Dw7t
                                              g$m*$31035$6Dw7t
                                              g$s*$31034$6Dw7t
                                              g$ae*$31033$6Dw7t
                                              g$r$31026$6Dw7t)))
                                         g$ae*$31032$6Dw7t
                                         g$s*$31031$6Dw7t
                                         g$m*$31030$6Dw7t)))))
                                 '#f)
                               (if (annotation? g$e$31021$6Dw7t)
                                 (g$match$31020$6Dw7t
                                   (annotation-expression
                                     g$e$31021$6Dw7t)
                                   g$p$31022$6Dw7t
                                   g$m*$31023$6Dw7t
                                   g$s*$31024$6Dw7t
                                   g$ae*$31025$6Dw7t
                                   g$r$31026$6Dw7t)
                                 ((case-lambda
                                    (()
                                     (begin
                                       '#f
                                       (g$match*$31019$6Dw7t
                                         g$e$31021$6Dw7t
                                         g$p$31022$6Dw7t
                                         g$m*$31023$6Dw7t
                                         g$s*$31024$6Dw7t
                                         g$ae*$31025$6Dw7t
                                         g$r$31026$6Dw7t))))))))))))))
          (g$match$31020$6Dw7t
            g$e$31011$6Dw7t
            g$p$31012$6Dw7t
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$29339$6Dw7t
     g$ellipsis?$32938$6Dw7t
     (case-lambda
       ((g$x$31125$6Dw7t)
        (if (g$id?$28840$6Dw7t g$x$31125$6Dw7t)
          (begin
            '#f
            (g$free-id=?$28844$6Dw7t
              g$x$31125$6Dw7t
              (g$scheme-stx$29281$6Dw7t '...)))
          '#f))))
   (g$underscore?$29340$6Dw7t
     g$underscore?$32939$6Dw7t
     (case-lambda
       ((g$x$31126$6Dw7t)
        (if (g$id?$28840$6Dw7t g$x$31126$6Dw7t)
          (begin
            '#f
            (g$free-id=?$28844$6Dw7t
              g$x$31126$6Dw7t
              (g$scheme-stx$29281$6Dw7t '_)))
          '#f))))
   (g$verify-literals$29341$6Dw7t
     g$verify-literals$32940$6Dw7t
     (case-lambda
       ((g$lits$31127$6Dw7t g$expr$31128$6Dw7t)
        (g$for-each$23582$6Dw7t
          (case-lambda
            ((g$x$31129$6Dw7t)
             (if ((case-lambda
                    ((g$t$31130$6Dw7t)
                     (if g$t$31130$6Dw7t
                       g$t$31130$6Dw7t
                       ((case-lambda
                          ((g$t$31131$6Dw7t)
                           (if g$t$31131$6Dw7t
                             g$t$31131$6Dw7t
                             (begin
                               '#f
                               (g$underscore?$29340$6Dw7t
                                 g$x$31129$6Dw7t)))))
                        (g$ellipsis?$29339$6Dw7t g$x$31129$6Dw7t)))))
                  (not (g$id?$28840$6Dw7t g$x$31129$6Dw7t)))
               (g$syntax-violation$29458$6Dw7t
                 '#f
                 '"invalid literal"
                 g$expr$31128$6Dw7t
                 g$x$31129$6Dw7t)
               (void))))
          g$lits$31127$6Dw7t))))
   (g$syntax-case-transformer$29342$6Dw7t
     g$syntax-case-transformer$32941$6Dw7t
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$31132$6Dw7t
                     (case-lambda
                       ((g$pvars$31189$6Dw7t
                          g$expr$31190$6Dw7t
                          g$y$31191$6Dw7t
                          g$r$31192$6Dw7t
                          g$mr$31193$6Dw7t)
                        ((case-lambda
                           ((g$ids$31194$6Dw7t g$levels$31195$6Dw7t)
                            ((case-lambda
                               ((g$labels$31196$6Dw7t
                                  g$new-vars$31197$6Dw7t)
                                ((case-lambda
                                   ((g$body$31198$6Dw7t)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$28762$6Dw7t
                                        '#f
                                        g$new-vars$31197$6Dw7t
                                        g$body$31198$6Dw7t)
                                      g$y$31191$6Dw7t)))
                                 (g$chi-expr$29356$6Dw7t
                                   (g$add-subst$28830$6Dw7t
                                     (g$make-full-rib$28806$6Dw7t
                                       g$ids$31194$6Dw7t
                                       g$labels$31196$6Dw7t)
                                     g$expr$31190$6Dw7t)
                                   (g$append$23587$6Dw7t
                                     (g$map$23581$6Dw7t
                                       (case-lambda
                                         ((g$label$31199$6Dw7t
                                            g$var$31200$6Dw7t
                                            g$level$31201$6Dw7t)
                                          (cons
                                            g$label$31199$6Dw7t
                                            (g$make-binding$28856$6Dw7t
                                              'syntax
                                              (cons
                                                g$var$31200$6Dw7t
                                                g$level$31201$6Dw7t)))))
                                       g$labels$31196$6Dw7t
                                       g$new-vars$31197$6Dw7t
                                       (g$map$23581$6Dw7t
                                         cdr
                                         g$pvars$31189$6Dw7t))
                                     g$r$31192$6Dw7t)
                                   g$mr$31193$6Dw7t))))
                             (g$map$23581$6Dw7t
                               g$gen-label$28777$6Dw7t
                               g$ids$31194$6Dw7t)
                             (g$map$23581$6Dw7t
                               g$gen-lexical$28775$6Dw7t
                               g$ids$31194$6Dw7t))))
                         (g$map$23581$6Dw7t car g$pvars$31189$6Dw7t)
                         (g$map$23581$6Dw7t cdr g$pvars$31189$6Dw7t)))))
                   (g$invalid-ids-error$31133$6Dw7t
                     (case-lambda
                       ((g$id*$31183$6Dw7t
                          g$e$31184$6Dw7t
                          g$class$31185$6Dw7t)
                        ((letrec ((g$find$31186$6Dw7t
                                    (case-lambda
                                      ((g$id*$31187$6Dw7t
                                         g$ok*$31188$6Dw7t)
                                       (if (null? g$id*$31187$6Dw7t)
                                         (g$syntax-violation$29458$6Dw7t
                                           '#f
                                           '"invalid syntax"
                                           g$e$31184$6Dw7t)
                                         (if (g$id?$28840$6Dw7t
                                               (car g$id*$31187$6Dw7t))
                                           (if (g$bound-id-member?$28847$6Dw7t
                                                 (car g$id*$31187$6Dw7t)
                                                 g$ok*$31188$6Dw7t)
                                             (g$syntax-error$29455$6Dw7t
                                               (car g$id*$31187$6Dw7t)
                                               '"duplicate "
                                               g$class$31185$6Dw7t)
                                             (g$find$31186$6Dw7t
                                               (cdr g$id*$31187$6Dw7t)
                                               (cons
                                                 (car g$id*$31187$6Dw7t)
                                                 g$ok*$31188$6Dw7t)))
                                           (g$syntax-error$29455$6Dw7t
                                             (car g$id*$31187$6Dw7t)
                                             '"invalid "
                                             g$class$31185$6Dw7t)))))))
                           g$find$31186$6Dw7t)
                         g$id*$31183$6Dw7t
                         '()))))
                   (g$gen-clause$31134$6Dw7t
                     (case-lambda
                       ((g$x$31163$6Dw7t
                          g$keys$31164$6Dw7t
                          g$clauses$31165$6Dw7t
                          g$r$31166$6Dw7t
                          g$mr$31167$6Dw7t
                          g$pat$31168$6Dw7t
                          g$fender$31169$6Dw7t
                          g$expr$31170$6Dw7t)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$29337$6Dw7t
                               g$pat$31168$6Dw7t
                               g$keys$31164$6Dw7t)))
                          (case-lambda
                            ((g$p$31173$6Dw7t g$pvars$31174$6Dw7t)
                             ((case-lambda
                                ((g$pvars$31175$6Dw7t g$p$31176$6Dw7t)
                                 (if (not (g$distinct-bound-ids?$28846$6Dw7t
                                            (g$map$23581$6Dw7t
                                              car
                                              g$pvars$31175$6Dw7t)))
                                   (g$invalid-ids-error$31133$6Dw7t
                                     (g$map$23581$6Dw7t
                                       car
                                       g$pvars$31175$6Dw7t)
                                     g$pat$31168$6Dw7t
                                     '"pattern variable")
                                   (if (not (g$for-all$23579$6Dw7t
                                              (case-lambda
                                                ((g$x$31177$6Dw7t)
                                                 (not (g$ellipsis?$29339$6Dw7t
                                                        (car g$x$31177$6Dw7t)))))
                                              g$pvars$31175$6Dw7t))
                                     (g$syntax-violation$29458$6Dw7t
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$31168$6Dw7t)
                                     ((case-lambda
                                        (()
                                         (begin
                                           '#f
                                           ((case-lambda
                                              ((g$y$31178$6Dw7t)
                                               ((case-lambda
                                                  ((g$test$31179$6Dw7t)
                                                   ((case-lambda
                                                      ((g$conseq$31180$6Dw7t)
                                                       ((case-lambda
                                                          ((g$altern$31181$6Dw7t)
                                                           (list
                                                             (g$build-lambda$28762$6Dw7t
                                                               '#f
                                                               (list
                                                                 g$y$31178$6Dw7t)
                                                               (list
                                                                 'if
                                                                 g$test$31179$6Dw7t
                                                                 g$conseq$31180$6Dw7t
                                                                 g$altern$31181$6Dw7t))
                                                             (list
                                                               '(primitive
                                                                  syntax-dispatch)
                                                               g$x$31163$6Dw7t
                                                               (list
                                                                 'quote
                                                                 g$p$31176$6Dw7t)))))
                                                        (g$gen-syntax-case$31135$6Dw7t
                                                          g$x$31163$6Dw7t
                                                          g$keys$31164$6Dw7t
                                                          g$clauses$31165$6Dw7t
                                                          g$r$31166$6Dw7t
                                                          g$mr$31167$6Dw7t))))
                                                    (g$build-dispatch-call$31132$6Dw7t
                                                      g$pvars$31175$6Dw7t
                                                      g$expr$31170$6Dw7t
                                                      g$y$31178$6Dw7t
                                                      g$r$31166$6Dw7t
                                                      g$mr$31167$6Dw7t))))
                                                (if (eq? g$fender$31169$6Dw7t
                                                         '#t)
                                                  g$y$31178$6Dw7t
                                                  ((case-lambda
                                                     (()
                                                      (begin
                                                        '#f
                                                        ((case-lambda
                                                           ((g$call$31182$6Dw7t)
                                                            (list
                                                              'if
                                                              g$y$31178$6Dw7t
                                                              g$call$31182$6Dw7t
                                                              (list
                                                                'quote
                                                                '#f))))
                                                         (g$build-dispatch-call$31132$6Dw7t
                                                           g$pvars$31175$6Dw7t
                                                           g$fender$31169$6Dw7t
                                                           g$y$31178$6Dw7t
                                                           g$r$31166$6Dw7t
                                                           g$mr$31167$6Dw7t))))))))))
                                            (g$gen-lexical$28775$6Dw7t
                                              'tmp))))))))))
                              g$pvars$31174$6Dw7t
                              g$p$31173$6Dw7t)))))))
                   (g$gen-syntax-case$31135$6Dw7t
                     (case-lambda
                       ((g$x$31146$6Dw7t
                          g$keys$31147$6Dw7t
                          g$clauses$31148$6Dw7t
                          g$r$31149$6Dw7t
                          g$mr$31150$6Dw7t)
                        (if (null? g$clauses$31148$6Dw7t)
                          (list
                            '(primitive syntax-error)
                            g$x$31146$6Dw7t)
                          ((case-lambda
                             ((g$t$31151$6Dw7t)
                              ((case-lambda
                                 ((g$ls/false$31152$6Dw7t)
                                  (if g$ls/false$31152$6Dw7t
                                    (apply
                                      (case-lambda
                                        ((g$pat$31153$6Dw7t
                                           g$expr$31154$6Dw7t)
                                         (if (if (g$id?$28840$6Dw7t
                                                   g$pat$31153$6Dw7t)
                                               (if (not (g$bound-id-member?$28847$6Dw7t
                                                          g$pat$31153$6Dw7t
                                                          g$keys$31147$6Dw7t))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$29339$6Dw7t
                                                          g$pat$31153$6Dw7t)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$28844$6Dw7t
                                                 g$pat$31153$6Dw7t
                                                 (g$scheme-stx$29281$6Dw7t
                                                   '_))
                                             (g$chi-expr$29356$6Dw7t
                                               g$expr$31154$6Dw7t
                                               g$r$31149$6Dw7t
                                               g$mr$31150$6Dw7t)
                                             ((case-lambda
                                                ((g$lab$31155$6Dw7t
                                                   g$lex$31156$6Dw7t)
                                                 ((case-lambda
                                                    ((g$body$31157$6Dw7t)
                                                     (list
                                                       (g$build-lambda$28762$6Dw7t
                                                         '#f
                                                         (list
                                                           g$lex$31156$6Dw7t)
                                                         g$body$31157$6Dw7t)
                                                       g$x$31146$6Dw7t)))
                                                  (g$chi-expr$29356$6Dw7t
                                                    (g$add-subst$28830$6Dw7t
                                                      (g$make-full-rib$28806$6Dw7t
                                                        (list
                                                          g$pat$31153$6Dw7t)
                                                        (list
                                                          g$lab$31155$6Dw7t))
                                                      g$expr$31154$6Dw7t)
                                                    (cons
                                                      (cons
                                                        g$lab$31155$6Dw7t
                                                        (g$make-binding$28856$6Dw7t
                                                          'syntax
                                                          (cons
                                                            g$lex$31156$6Dw7t
                                                            '0)))
                                                      g$r$31149$6Dw7t)
                                                    g$mr$31150$6Dw7t))))
                                              (g$gen-label$28777$6Dw7t
                                                g$pat$31153$6Dw7t)
                                              (g$gen-lexical$28775$6Dw7t
                                                g$pat$31153$6Dw7t)))
                                           (g$gen-clause$31134$6Dw7t
                                             g$x$31146$6Dw7t
                                             g$keys$31147$6Dw7t
                                             (cdr g$clauses$31148$6Dw7t)
                                             g$r$31149$6Dw7t
                                             g$mr$31150$6Dw7t
                                             g$pat$31153$6Dw7t
                                             '#t
                                             g$expr$31154$6Dw7t))))
                                      g$ls/false$31152$6Dw7t)
                                    ((case-lambda
                                       ((g$t$31158$6Dw7t)
                                        ((case-lambda
                                           ((g$ls/false$31159$6Dw7t)
                                            (if g$ls/false$31159$6Dw7t
                                              (apply
                                                (case-lambda
                                                  ((g$pat$31160$6Dw7t
                                                     g$fender$31161$6Dw7t
                                                     g$expr$31162$6Dw7t)
                                                   (g$gen-clause$31134$6Dw7t
                                                     g$x$31146$6Dw7t
                                                     g$keys$31147$6Dw7t
                                                     (cdr g$clauses$31148$6Dw7t)
                                                     g$r$31149$6Dw7t
                                                     g$mr$31150$6Dw7t
                                                     g$pat$31160$6Dw7t
                                                     g$fender$31161$6Dw7t
                                                     g$expr$31162$6Dw7t)))
                                                g$ls/false$31159$6Dw7t)
                                              (g$syntax-violation$29458$6Dw7t
                                                '#f
                                                '"invalid syntax"
                                                g$t$31158$6Dw7t))))
                                         (g$syntax-dispatch$29338$6Dw7t
                                           g$t$31158$6Dw7t
                                           '(any any any)))))
                                     g$t$31151$6Dw7t))))
                               (g$syntax-dispatch$29338$6Dw7t
                                 g$t$31151$6Dw7t
                                 '(any any)))))
                           (car g$clauses$31148$6Dw7t)))))))
           (case-lambda
             ((g$e$31136$6Dw7t g$r$31137$6Dw7t g$mr$31138$6Dw7t)
              ((case-lambda
                 ((g$t$31139$6Dw7t)
                  ((case-lambda
                     ((g$ls/false$31140$6Dw7t)
                      (if g$ls/false$31140$6Dw7t
                        (apply
                          (case-lambda
                            ((g$expr$31141$6Dw7t
                               g$keys$31142$6Dw7t
                               g$clauses$31143$6Dw7t)
                             (begin
                               (g$verify-literals$29341$6Dw7t
                                 g$keys$31142$6Dw7t
                                 g$e$31136$6Dw7t)
                               ((case-lambda
                                  ((g$x$31144$6Dw7t)
                                   ((case-lambda
                                      ((g$body$31145$6Dw7t)
                                       (list
                                         (g$build-lambda$28762$6Dw7t
                                           '#f
                                           (list g$x$31144$6Dw7t)
                                           g$body$31145$6Dw7t)
                                         (g$chi-expr$29356$6Dw7t
                                           g$expr$31141$6Dw7t
                                           g$r$31137$6Dw7t
                                           g$mr$31138$6Dw7t))))
                                    (g$gen-syntax-case$31135$6Dw7t
                                      g$x$31144$6Dw7t
                                      g$keys$31142$6Dw7t
                                      g$clauses$31143$6Dw7t
                                      g$r$31137$6Dw7t
                                      g$mr$31138$6Dw7t))))
                                (g$gen-lexical$28775$6Dw7t 'tmp)))))
                          g$ls/false$31140$6Dw7t)
                        (g$syntax-violation$29458$6Dw7t
                          '#f
                          '"invalid syntax"
                          g$t$31139$6Dw7t))))
                   (g$syntax-dispatch$29338$6Dw7t
                     g$t$31139$6Dw7t
                     '(_ any each-any . each-any)))))
               g$e$31136$6Dw7t))))))))
   (g$ellipsis-map$29343$6Dw7t
     g$ellipsis-map$32942$6Dw7t
     (case-lambda
       ((g$proc$31202$6Dw7t g$ls$31203$6Dw7t . g$ls*$31204$6Dw7t)
        (letrec* ((g$who$31205$6Dw7t '...))
          (begin
            (if (not (g$list?$23576$6Dw7t g$ls$31203$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                g$who$31205$6Dw7t
                '"not a list"
                g$ls$31203$6Dw7t)
              (void))
            (if (not (null? g$ls*$31204$6Dw7t))
              ((case-lambda
                 ((g$n$31206$6Dw7t)
                  (g$for-each$23582$6Dw7t
                    (case-lambda
                      ((g$x$31207$6Dw7t)
                       (begin
                         (if (not (g$list?$23576$6Dw7t g$x$31207$6Dw7t))
                           (g$assertion-violation$20490$6Dw7t
                             g$who$31205$6Dw7t
                             '"not a list"
                             g$x$31207$6Dw7t)
                           (void))
                         (if (not (g$=$25069$6Dw7t
                                    (g$length$23578$6Dw7t
                                      g$x$31207$6Dw7t)
                                    g$n$31206$6Dw7t))
                           (g$assertion-violation$20490$6Dw7t
                             g$who$31205$6Dw7t
                             '"length mismatch"
                             g$ls$31203$6Dw7t
                             g$x$31207$6Dw7t)
                           (void)))))
                    g$ls*$31204$6Dw7t)))
               (g$length$23578$6Dw7t g$ls$31203$6Dw7t))
              (void))
            (apply
              g$map$23581$6Dw7t
              g$proc$31202$6Dw7t
              g$ls$31203$6Dw7t
              g$ls*$31204$6Dw7t))))))
   (g$syntax-transformer$29344$6Dw7t
     g$syntax-transformer$32943$6Dw7t
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$31208$6Dw7t
                     (case-lambda
                       ((g$src$31268$6Dw7t
                          g$e$31269$6Dw7t
                          g$r$31270$6Dw7t
                          g$maps$31271$6Dw7t
                          g$ellipsis?$31272$6Dw7t
                          g$vec?$31273$6Dw7t)
                        ((case-lambda
                           ((g$t$31274$6Dw7t)
                            ((case-lambda
                               ((g$ls/false$31275$6Dw7t)
                                (if (if g$ls/false$31275$6Dw7t
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$31276$6Dw7t)
                                             (g$ellipsis?$31272$6Dw7t
                                               g$dots$31276$6Dw7t)))
                                          g$ls/false$31275$6Dw7t))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$31277$6Dw7t)
                                       (g$syntax-violation$29458$6Dw7t
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$31268$6Dw7t)))
                                    g$ls/false$31275$6Dw7t)
                                  ((case-lambda
                                     ((g$t$31278$6Dw7t)
                                      ((case-lambda
                                         ((g$ls/false$31279$6Dw7t)
                                          (if (if g$ls/false$31279$6Dw7t
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$31280$6Dw7t)
                                                       (g$id?$28840$6Dw7t
                                                         g$id$31280$6Dw7t)))
                                                    g$ls/false$31279$6Dw7t))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$31281$6Dw7t)
                                                 ((case-lambda
                                                    ((g$label$31282$6Dw7t)
                                                     ((case-lambda
                                                        ((g$b$31283$6Dw7t)
                                                         (if (eq? (g$binding-type$28857$6Dw7t
                                                                    g$b$31283$6Dw7t)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$31286$6Dw7t)
                                                                    (g$gen-ref$31209$6Dw7t
                                                                      g$src$31268$6Dw7t
                                                                      (car g$var.lev$31286$6Dw7t)
                                                                      (cdr g$var.lev$31286$6Dw7t)
                                                                      g$maps$31271$6Dw7t)))
                                                                 (g$binding-value$28858$6Dw7t
                                                                   g$b$31283$6Dw7t))))
                                                             (case-lambda
                                                               ((g$var$31287$6Dw7t
                                                                  g$maps$31288$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$maps$31289$6Dw7t
                                                                      g$var$31290$6Dw7t)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$31290$6Dw7t)
                                                                      g$maps$31289$6Dw7t)))
                                                                 g$maps$31288$6Dw7t
                                                                 g$var$31287$6Dw7t))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$31269$6Dw7t)
                                                             g$maps$31271$6Dw7t))))
                                                      (g$label->binding$28855$6Dw7t
                                                        g$label$31282$6Dw7t
                                                        g$r$31270$6Dw7t))))
                                                  (g$id->label$28853$6Dw7t
                                                    g$e$31269$6Dw7t))))
                                              g$ls/false$31279$6Dw7t)
                                            ((case-lambda
                                               ((g$t$31291$6Dw7t)
                                                ((case-lambda
                                                   ((g$ls/false$31292$6Dw7t)
                                                    (if (if g$ls/false$31292$6Dw7t
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$31293$6Dw7t
                                                                   g$e$31294$6Dw7t)
                                                                 (g$ellipsis?$31272$6Dw7t
                                                                   g$dots$31293$6Dw7t)))
                                                              g$ls/false$31292$6Dw7t))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$31295$6Dw7t
                                                             g$e$31296$6Dw7t)
                                                           (if g$vec?$31273$6Dw7t
                                                             (g$syntax-violation$29458$6Dw7t
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$31268$6Dw7t)
                                                             (g$gen-syntax$31208$6Dw7t
                                                               g$src$31268$6Dw7t
                                                               g$e$31296$6Dw7t
                                                               g$r$31270$6Dw7t
                                                               g$maps$31271$6Dw7t
                                                               (case-lambda
                                                                 ((g$x$31297$6Dw7t)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$31292$6Dw7t)
                                                      ((case-lambda
                                                         ((g$t$31298$6Dw7t)
                                                          ((case-lambda
                                                             ((g$ls/false$31299$6Dw7t)
                                                              (if (if g$ls/false$31299$6Dw7t
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$31300$6Dw7t
                                                                             g$dots$31301$6Dw7t
                                                                             g$y$31302$6Dw7t)
                                                                           (g$ellipsis?$31272$6Dw7t
                                                                             g$dots$31301$6Dw7t)))
                                                                        g$ls/false$31299$6Dw7t))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$31303$6Dw7t
                                                                       g$dots$31304$6Dw7t
                                                                       g$y$31305$6Dw7t)
                                                                     ((letrec ((g$f$31306$6Dw7t
                                                                                 (case-lambda
                                                                                   ((g$y$31307$6Dw7t
                                                                                      g$k$31308$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$t$31309$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31310$6Dw7t)
                                                                                            (if g$ls/false$31310$6Dw7t
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$31308$6Dw7t
                                                                                                     g$maps$31271$6Dw7t)))
                                                                                                g$ls/false$31310$6Dw7t)
                                                                                              ((case-lambda
                                                                                                 ((g$t$31311$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$31312$6Dw7t)
                                                                                                      (if (if g$ls/false$31312$6Dw7t
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$31313$6Dw7t
                                                                                                                     g$y$31314$6Dw7t)
                                                                                                                   (g$ellipsis?$31272$6Dw7t
                                                                                                                     g$dots$31313$6Dw7t)))
                                                                                                                g$ls/false$31312$6Dw7t))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$31315$6Dw7t
                                                                                                               g$y$31316$6Dw7t)
                                                                                                             (g$f$31306$6Dw7t
                                                                                                               g$y$31316$6Dw7t
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$31317$6Dw7t)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$31308$6Dw7t
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$31317$6Dw7t))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$31320$6Dw7t
                                                                                                                         g$maps$31321$6Dw7t)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$31322$6Dw7t
                                                                                                                             g$x$31323$6Dw7t)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$31322$6Dw7t))
                                                                                                                             (g$syntax-violation$29458$6Dw7t
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$31268$6Dw7t)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$31211$6Dw7t
                                                                                                                                 g$x$31323$6Dw7t
                                                                                                                                 (car g$maps$31322$6Dw7t))
                                                                                                                               (cdr g$maps$31322$6Dw7t)))))
                                                                                                                        g$maps$31321$6Dw7t
                                                                                                                        g$x$31320$6Dw7t)))))))))
                                                                                                          g$ls/false$31312$6Dw7t)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$31324$6Dw7t)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$31325$6Dw7t)
                                                                                                                (if g$ls/false$31325$6Dw7t
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$31208$6Dw7t
                                                                                                                              g$src$31268$6Dw7t
                                                                                                                              g$y$31307$6Dw7t
                                                                                                                              g$r$31270$6Dw7t
                                                                                                                              g$maps$31271$6Dw7t
                                                                                                                              g$ellipsis?$31272$6Dw7t
                                                                                                                              g$vec?$31273$6Dw7t)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$31328$6Dw7t
                                                                                                                              g$maps$31329$6Dw7t)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$31330$6Dw7t
                                                                                                                                  g$y$31331$6Dw7t)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$31308$6Dw7t
                                                                                                                                       g$maps$31330$6Dw7t)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$31334$6Dw7t
                                                                                                                                       g$maps$31335$6Dw7t)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$31336$6Dw7t
                                                                                                                                           g$x$31337$6Dw7t)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$31210$6Dw7t
                                                                                                                                             g$x$31337$6Dw7t
                                                                                                                                             g$y$31331$6Dw7t)
                                                                                                                                           g$maps$31336$6Dw7t)))
                                                                                                                                      g$maps$31335$6Dw7t
                                                                                                                                      g$x$31334$6Dw7t))))))
                                                                                                                             g$maps$31329$6Dw7t
                                                                                                                             g$y$31328$6Dw7t))))))
                                                                                                                    g$ls/false$31325$6Dw7t)
                                                                                                                  (g$syntax-violation$29458$6Dw7t
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$31324$6Dw7t))))
                                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                                               g$t$31324$6Dw7t
                                                                                                               '_))))
                                                                                                         g$t$31311$6Dw7t))))
                                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                                     g$t$31311$6Dw7t
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$31309$6Dw7t))))
                                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                                           g$t$31309$6Dw7t
                                                                                           '()))))
                                                                                     g$y$31307$6Dw7t)))))
                                                                        g$f$31306$6Dw7t)
                                                                      g$y$31305$6Dw7t
                                                                      (case-lambda
                                                                        ((g$maps$31338$6Dw7t)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$31208$6Dw7t
                                                                                g$src$31268$6Dw7t
                                                                                g$x$31303$6Dw7t
                                                                                g$r$31270$6Dw7t
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$31338$6Dw7t)
                                                                                g$ellipsis?$31272$6Dw7t
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$31341$6Dw7t
                                                                                g$maps$31342$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$maps$31343$6Dw7t
                                                                                    g$x$31344$6Dw7t)
                                                                                  (if (null?
                                                                                        (car g$maps$31343$6Dw7t))
                                                                                    (g$syntax-violation$29458$6Dw7t
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$31268$6Dw7t)
                                                                                    (values
                                                                                      (g$gen-map$31212$6Dw7t
                                                                                        g$x$31344$6Dw7t
                                                                                        (car g$maps$31343$6Dw7t))
                                                                                      (cdr g$maps$31343$6Dw7t)))))
                                                                               g$maps$31342$6Dw7t
                                                                               g$x$31341$6Dw7t)))))))))
                                                                  g$ls/false$31299$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$t$31345$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$ls/false$31346$6Dw7t)
                                                                        (if g$ls/false$31346$6Dw7t
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$31347$6Dw7t
                                                                                 g$y$31348$6Dw7t)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$31208$6Dw7t
                                                                                      g$src$31268$6Dw7t
                                                                                      g$x$31347$6Dw7t
                                                                                      g$r$31270$6Dw7t
                                                                                      g$maps$31271$6Dw7t
                                                                                      g$ellipsis?$31272$6Dw7t
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$31351$6Dw7t
                                                                                      g$maps$31352$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$maps$31353$6Dw7t
                                                                                          g$xnew$31354$6Dw7t)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$31208$6Dw7t
                                                                                               g$src$31268$6Dw7t
                                                                                               g$y$31348$6Dw7t
                                                                                               g$r$31270$6Dw7t
                                                                                               g$maps$31353$6Dw7t
                                                                                               g$ellipsis?$31272$6Dw7t
                                                                                               g$vec?$31273$6Dw7t)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$31357$6Dw7t
                                                                                               g$maps$31358$6Dw7t)
                                                                                             ((case-lambda
                                                                                                ((g$maps$31359$6Dw7t
                                                                                                   g$ynew$31360$6Dw7t)
                                                                                                 (values
                                                                                                   (g$gen-cons$31213$6Dw7t
                                                                                                     g$e$31269$6Dw7t
                                                                                                     g$x$31347$6Dw7t
                                                                                                     g$y$31348$6Dw7t
                                                                                                     g$xnew$31354$6Dw7t
                                                                                                     g$ynew$31360$6Dw7t)
                                                                                                   g$maps$31359$6Dw7t)))
                                                                                              g$maps$31358$6Dw7t
                                                                                              g$ynew$31357$6Dw7t))))))
                                                                                     g$maps$31352$6Dw7t
                                                                                     g$xnew$31351$6Dw7t))))))
                                                                            g$ls/false$31346$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$t$31361$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$31362$6Dw7t)
                                                                                  (if g$ls/false$31362$6Dw7t
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$31363$6Dw7t)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$31208$6Dw7t
                                                                                                g$src$31268$6Dw7t
                                                                                                g$ls$31363$6Dw7t
                                                                                                g$r$31270$6Dw7t
                                                                                                g$maps$31271$6Dw7t
                                                                                                g$ellipsis?$31272$6Dw7t
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$31366$6Dw7t
                                                                                                g$maps$31367$6Dw7t)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$31368$6Dw7t
                                                                                                    g$lsnew$31369$6Dw7t)
                                                                                                  (values
                                                                                                    (g$gen-vector$31214$6Dw7t
                                                                                                      g$e$31269$6Dw7t
                                                                                                      g$ls$31363$6Dw7t
                                                                                                      g$lsnew$31369$6Dw7t)
                                                                                                    g$maps$31368$6Dw7t)))
                                                                                               g$maps$31367$6Dw7t
                                                                                               g$lsnew$31366$6Dw7t))))))
                                                                                      g$ls/false$31362$6Dw7t)
                                                                                    ((case-lambda
                                                                                       ((g$t$31370$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$31371$6Dw7t)
                                                                                            (if g$ls/false$31371$6Dw7t
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$31269$6Dw7t)
                                                                                                     g$maps$31271$6Dw7t)))
                                                                                                g$ls/false$31371$6Dw7t)
                                                                                              (g$syntax-violation$29458$6Dw7t
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$31370$6Dw7t))))
                                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                                           g$t$31370$6Dw7t
                                                                                           '_))))
                                                                                     g$t$31361$6Dw7t))))
                                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                                 g$t$31361$6Dw7t
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$31345$6Dw7t))))
                                                                     (g$syntax-dispatch$29338$6Dw7t
                                                                       g$t$31345$6Dw7t
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$31298$6Dw7t))))
                                                           (g$syntax-dispatch$29338$6Dw7t
                                                             g$t$31298$6Dw7t
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$31291$6Dw7t))))
                                                 (g$syntax-dispatch$29338$6Dw7t
                                                   g$t$31291$6Dw7t
                                                   '(any any)))))
                                             g$t$31278$6Dw7t))))
                                       (g$syntax-dispatch$29338$6Dw7t
                                         g$t$31278$6Dw7t
                                         'any))))
                                   g$t$31274$6Dw7t))))
                             (g$syntax-dispatch$29338$6Dw7t
                               g$t$31274$6Dw7t
                               'any))))
                         g$e$31269$6Dw7t))))
                   (g$gen-ref$31209$6Dw7t
                     (case-lambda
                       ((g$src$31255$6Dw7t
                          g$var$31256$6Dw7t
                          g$level$31257$6Dw7t
                          g$maps$31258$6Dw7t)
                        (if (g$=$25069$6Dw7t g$level$31257$6Dw7t '0)
                          (values g$var$31256$6Dw7t g$maps$31258$6Dw7t)
                          (if (null? g$maps$31258$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$31255$6Dw7t)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$31209$6Dw7t
                                   g$src$31255$6Dw7t
                                   g$var$31256$6Dw7t
                                   (- g$level$31257$6Dw7t '1)
                                   (cdr g$maps$31258$6Dw7t))))
                              (case-lambda
                                ((g$outer-var$31261$6Dw7t
                                   g$outer-maps$31262$6Dw7t)
                                 ((case-lambda
                                    ((g$outer-maps$31263$6Dw7t
                                       g$outer-var$31264$6Dw7t)
                                     ((case-lambda
                                        ((g$t$31265$6Dw7t)
                                         (if g$t$31265$6Dw7t
                                           ((case-lambda
                                              ((g$b$31266$6Dw7t)
                                               (values
                                                 (cdr g$b$31266$6Dw7t)
                                                 g$maps$31258$6Dw7t)))
                                            g$t$31265$6Dw7t)
                                           ((case-lambda
                                              (()
                                               (begin
                                                 '#f
                                                 ((case-lambda
                                                    ((g$inner-var$31267$6Dw7t)
                                                     (values
                                                       g$inner-var$31267$6Dw7t
                                                       (cons
                                                         (cons
                                                           (cons
                                                             g$outer-var$31264$6Dw7t
                                                             g$inner-var$31267$6Dw7t)
                                                           (car g$maps$31258$6Dw7t))
                                                         g$outer-maps$31263$6Dw7t))))
                                                  (g$gen-lexical$28775$6Dw7t
                                                    'tmp)))))))))
                                      (g$assq$23565$6Dw7t
                                        g$outer-var$31264$6Dw7t
                                        (car g$maps$31258$6Dw7t)))))
                                  g$outer-maps$31262$6Dw7t
                                  g$outer-var$31261$6Dw7t)))))))))
                   (g$gen-append$31210$6Dw7t
                     (case-lambda
                       ((g$x$31253$6Dw7t g$y$31254$6Dw7t)
                        (if (g$equal?$27474$6Dw7t g$y$31254$6Dw7t ''())
                          g$x$31253$6Dw7t
                          (list
                            'append
                            g$x$31253$6Dw7t
                            g$y$31254$6Dw7t)))))
                   (g$gen-mappend$31211$6Dw7t
                     (case-lambda
                       ((g$e$31251$6Dw7t g$map-env$31252$6Dw7t)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$31212$6Dw7t
                            g$e$31251$6Dw7t
                            g$map-env$31252$6Dw7t)))))
                   (g$gen-map$31212$6Dw7t
                     (case-lambda
                       ((g$e$31242$6Dw7t g$map-env$31243$6Dw7t)
                        ((case-lambda
                           ((g$formals$31244$6Dw7t
                              g$actuals$31245$6Dw7t)
                            (if (eq? (car g$e$31242$6Dw7t) 'ref)
                              (car g$actuals$31245$6Dw7t)
                              (if (g$for-all$23579$6Dw7t
                                    (case-lambda
                                      ((g$x$31246$6Dw7t)
                                       (if (eq? (car g$x$31246$6Dw7t)
                                                'ref)
                                         (begin
                                           '#f
                                           (g$memq$23569$6Dw7t
                                             (g$cadr$24045$6Dw7t
                                               g$x$31246$6Dw7t)
                                             g$formals$31244$6Dw7t))
                                         '#f)))
                                    (cdr g$e$31242$6Dw7t))
                                ((case-lambda
                                   ((g$args$31247$6Dw7t)
                                    (cons
                                      'map
                                      (cons
                                        (list
                                          'primitive
                                          (car g$e$31242$6Dw7t))
                                        g$args$31247$6Dw7t))))
                                 (g$map$23581$6Dw7t
                                   ((case-lambda
                                      ((g$r$31248$6Dw7t)
                                       (case-lambda
                                         ((g$x$31249$6Dw7t)
                                          (cdr (g$assq$23565$6Dw7t
                                                 (g$cadr$24045$6Dw7t
                                                   g$x$31249$6Dw7t)
                                                 g$r$31248$6Dw7t))))))
                                    (g$map$23581$6Dw7t
                                      cons
                                      g$formals$31244$6Dw7t
                                      g$actuals$31245$6Dw7t))
                                   (cdr g$e$31242$6Dw7t)))
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (g$cons*$23583$6Dw7t
                                        'map
                                        (list
                                          'lambda
                                          g$formals$31244$6Dw7t
                                          g$e$31242$6Dw7t)
                                        g$actuals$31245$6Dw7t)))))))))
                         (g$map$23581$6Dw7t cdr g$map-env$31243$6Dw7t)
                         (g$map$23581$6Dw7t
                           (case-lambda
                             ((g$x$31250$6Dw7t)
                              (list 'ref (car g$x$31250$6Dw7t))))
                           g$map-env$31243$6Dw7t)))))
                   (g$gen-cons$31213$6Dw7t
                     (case-lambda
                       ((g$e$31234$6Dw7t
                          g$x$31235$6Dw7t
                          g$y$31236$6Dw7t
                          g$xnew$31237$6Dw7t
                          g$ynew$31238$6Dw7t)
                        ((case-lambda
                           ((g$t$31239$6Dw7t)
                            (if (eqv? g$t$31239$6Dw7t 'quote)
                              (if (eq? (car g$xnew$31237$6Dw7t) 'quote)
                                ((case-lambda
                                   ((g$xnew$31240$6Dw7t
                                      g$ynew$31241$6Dw7t)
                                    (if (if (eq? g$xnew$31240$6Dw7t
                                                 g$x$31235$6Dw7t)
                                          (begin
                                            '#f
                                            (eq? g$ynew$31241$6Dw7t
                                                 g$y$31236$6Dw7t))
                                          '#f)
                                      (list 'quote g$e$31234$6Dw7t)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$31240$6Dw7t
                                          g$ynew$31241$6Dw7t)))))
                                 (g$cadr$24045$6Dw7t g$xnew$31237$6Dw7t)
                                 (g$cadr$24045$6Dw7t
                                   g$ynew$31238$6Dw7t))
                                (if (null?
                                      (g$cadr$24045$6Dw7t
                                        g$ynew$31238$6Dw7t))
                                  (list 'list g$xnew$31237$6Dw7t)
                                  (list
                                    'cons
                                    g$xnew$31237$6Dw7t
                                    g$ynew$31238$6Dw7t)))
                              (if (eqv? g$t$31239$6Dw7t 'list)
                                (cons
                                  'list
                                  (cons
                                    g$xnew$31237$6Dw7t
                                    (cdr g$ynew$31238$6Dw7t)))
                                ((case-lambda
                                   (()
                                    (begin
                                      '#f
                                      (list
                                        'cons
                                        g$xnew$31237$6Dw7t
                                        g$ynew$31238$6Dw7t)))))))))
                         (car g$ynew$31238$6Dw7t)))))
                   (g$gen-vector$31214$6Dw7t
                     (case-lambda
                       ((g$e$31231$6Dw7t
                          g$ls$31232$6Dw7t
                          g$lsnew$31233$6Dw7t)
                        (if (eq? (car g$lsnew$31233$6Dw7t) 'quote)
                          (if (eq? (g$cadr$24045$6Dw7t
                                     g$lsnew$31233$6Dw7t)
                                   g$ls$31232$6Dw7t)
                            (list 'quote g$e$31231$6Dw7t)
                            (list
                              'quote
                              (g$list->vector$24034$6Dw7t
                                (g$cadr$24045$6Dw7t
                                  g$lsnew$31233$6Dw7t))))
                          (if (eq? (car g$lsnew$31233$6Dw7t) 'list)
                            (cons 'vector (cdr g$lsnew$31233$6Dw7t))
                            ((case-lambda
                               (()
                                (begin
                                  '#f
                                  (list
                                    'list->vector
                                    g$lsnew$31233$6Dw7t))))))))))
                   (g$regen$31215$6Dw7t
                     (case-lambda
                       ((g$x$31228$6Dw7t)
                        ((case-lambda
                           ((g$t$31229$6Dw7t)
                            (if (eqv? g$t$31229$6Dw7t 'ref)
                              (g$cadr$24045$6Dw7t g$x$31228$6Dw7t)
                              (if (eqv? g$t$31229$6Dw7t 'primitive)
                                (list
                                  'primitive
                                  (g$cadr$24045$6Dw7t g$x$31228$6Dw7t))
                                (if (eqv? g$t$31229$6Dw7t 'quote)
                                  (list
                                    'quote
                                    (g$cadr$24045$6Dw7t
                                      g$x$31228$6Dw7t))
                                  (if (eqv? g$t$31229$6Dw7t 'lambda)
                                    (g$build-lambda$28762$6Dw7t
                                      '#f
                                      (g$cadr$24045$6Dw7t
                                        g$x$31228$6Dw7t)
                                      (g$regen$31215$6Dw7t
                                        (g$caddr$24051$6Dw7t
                                          g$x$31228$6Dw7t)))
                                    (if (eqv? g$t$31229$6Dw7t 'map)
                                      ((case-lambda
                                         ((g$ls$31230$6Dw7t)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$31230$6Dw7t)))
                                       (g$map$23581$6Dw7t
                                         g$regen$31215$6Dw7t
                                         (cdr g$x$31228$6Dw7t)))
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (cons
                                              (list
                                                'primitive
                                                (car g$x$31228$6Dw7t))
                                              (g$map$23581$6Dw7t
                                                g$regen$31215$6Dw7t
                                                (cdr g$x$31228$6Dw7t))))))))))))))
                         (car g$x$31228$6Dw7t))))))
           (case-lambda
             ((g$e$31216$6Dw7t g$r$31217$6Dw7t g$mr$31218$6Dw7t)
              ((case-lambda
                 ((g$t$31219$6Dw7t)
                  ((case-lambda
                     ((g$ls/false$31220$6Dw7t)
                      (if g$ls/false$31220$6Dw7t
                        (apply
                          (case-lambda
                            ((g$x$31221$6Dw7t)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$31208$6Dw7t
                                    g$e$31216$6Dw7t
                                    g$x$31221$6Dw7t
                                    g$r$31217$6Dw7t
                                    '()
                                    g$ellipsis?$29339$6Dw7t
                                    '#f)))
                               (case-lambda
                                 ((g$e$31224$6Dw7t g$maps$31225$6Dw7t)
                                  ((case-lambda
                                     ((g$maps$31226$6Dw7t
                                        g$e$31227$6Dw7t)
                                      (g$regen$31215$6Dw7t
                                        g$e$31227$6Dw7t)))
                                   g$maps$31225$6Dw7t
                                   g$e$31224$6Dw7t))))))
                          g$ls/false$31220$6Dw7t)
                        (g$syntax-violation$29458$6Dw7t
                          '#f
                          '"invalid syntax"
                          g$t$31219$6Dw7t))))
                   (g$syntax-dispatch$29338$6Dw7t
                     g$t$31219$6Dw7t
                     '(_ any)))))
               g$e$31216$6Dw7t))))))))
   (g$core-macro-transformer$29345$6Dw7t
     g$core-macro-transformer$32944$6Dw7t
     (case-lambda
       ((g$name$31372$6Dw7t)
        ((case-lambda
           ((g$t$31373$6Dw7t)
            (if (eqv? g$t$31373$6Dw7t 'quote)
              g$quote-transformer$29298$6Dw7t
              (if (eqv? g$t$31373$6Dw7t 'lambda)
                g$lambda-transformer$29300$6Dw7t
                (if (eqv? g$t$31373$6Dw7t 'case-lambda)
                  g$case-lambda-transformer$29299$6Dw7t
                  (if (eqv? g$t$31373$6Dw7t 'letrec)
                    g$letrec-transformer$29288$6Dw7t
                    (if (eqv? g$t$31373$6Dw7t 'letrec*)
                      g$letrec*-transformer$29289$6Dw7t
                      (if (eqv? g$t$31373$6Dw7t 'if)
                        g$if-transformer$29296$6Dw7t
                        (if (eqv? g$t$31373$6Dw7t 'foreign-call)
                          g$foreign-call-transformer$29336$6Dw7t
                          (if (eqv? g$t$31373$6Dw7t 'syntax-case)
                            g$syntax-case-transformer$29342$6Dw7t
                            (if (eqv? g$t$31373$6Dw7t 'syntax)
                              g$syntax-transformer$29344$6Dw7t
                              (if (eqv?
                                    g$t$31373$6Dw7t
                                    'type-descriptor)
                                g$type-descriptor-transformer$29291$6Dw7t
                                (if (eqv?
                                      g$t$31373$6Dw7t
                                      'record-type-descriptor)
                                  g$record-type-descriptor-transformer$29292$6Dw7t
                                  (if (eqv?
                                        g$t$31373$6Dw7t
                                        'record-constructor-descriptor)
                                    g$record-constructor-descriptor-transformer$29293$6Dw7t
                                    (if (eqv?
                                          g$t$31373$6Dw7t
                                          'fluid-let-syntax)
                                      g$fluid-let-syntax-transformer$29290$6Dw7t
                                      ((case-lambda
                                         (()
                                          (begin
                                            '#f
                                            (g$assertion-violation$20490$6Dw7t
                                              'macro-transformer
                                              '"BUG: cannot find transformer"
                                              g$name$31372$6Dw7t))))))))))))))))))))
         g$name$31372$6Dw7t))))
   (g$file-options-macro$29346$6Dw7t
     g$file-options-macro$32945$6Dw7t
     (case-lambda
       ((g$x$31374$6Dw7t)
        (letrec* ((g$valid-option?$31375$6Dw7t
                    (case-lambda
                      ((g$x$31380$6Dw7t)
                       (if (g$id?$28840$6Dw7t g$x$31380$6Dw7t)
                         (begin
                           '#f
                           (g$memq$23569$6Dw7t
                             (g$id->sym$28841$6Dw7t g$x$31380$6Dw7t)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$31376$6Dw7t)
              ((case-lambda
                 ((g$ls/false$31377$6Dw7t)
                  (if (if g$ls/false$31377$6Dw7t
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$31378$6Dw7t)
                               (if (g$for-all$23579$6Dw7t
                                     g$valid-option?$31375$6Dw7t
                                     g$opt*$31378$6Dw7t)
                                 (begin
                                   '#f
                                   (g$file-options-spec$27683$6Dw7t
                                     (g$map$23581$6Dw7t
                                       g$id->sym$28841$6Dw7t
                                       g$opt*$31378$6Dw7t)))
                                 '#f)))
                            g$ls/false$31377$6Dw7t))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$31379$6Dw7t)
                         (g$bless$29301$6Dw7t
                           (list
                             'quote
                             (g$file-options-spec$27683$6Dw7t
                               (g$map$23581$6Dw7t
                                 g$id->sym$28841$6Dw7t
                                 g$opt*$31379$6Dw7t))))))
                      g$ls/false$31377$6Dw7t)
                    (g$syntax-violation$29458$6Dw7t
                      '#f
                      '"invalid syntax"
                      g$t$31376$6Dw7t))))
               (g$syntax-dispatch$29338$6Dw7t
                 g$t$31376$6Dw7t
                 '(_ . each-any)))))
           g$x$31374$6Dw7t)))))
   (g$symbol-macro$29347$6Dw7t
     g$symbol-macro$32946$6Dw7t
     (case-lambda
       ((g$x$31381$6Dw7t g$set$31382$6Dw7t)
        ((case-lambda
           ((g$t$31383$6Dw7t)
            ((case-lambda
               ((g$ls/false$31384$6Dw7t)
                (if (if g$ls/false$31384$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$31385$6Dw7t)
                             (if (g$id?$28840$6Dw7t g$name$31385$6Dw7t)
                               (begin
                                 '#f
                                 (g$memq$23569$6Dw7t
                                   (g$id->sym$28841$6Dw7t
                                     g$name$31385$6Dw7t)
                                   g$set$31382$6Dw7t))
                               '#f)))
                          g$ls/false$31384$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$31386$6Dw7t)
                       (g$bless$29301$6Dw7t
                         (list 'quote g$name$31386$6Dw7t))))
                    g$ls/false$31384$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$31383$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t g$t$31383$6Dw7t '(_ any)))))
         g$x$31381$6Dw7t))))
   (g$macro-transformer$29348$6Dw7t
     g$macro-transformer$32947$6Dw7t
     (case-lambda
       ((g$x$31387$6Dw7t)
        (if (g$procedure?$24009$6Dw7t g$x$31387$6Dw7t)
          g$x$31387$6Dw7t
          (if (g$symbol?$24007$6Dw7t g$x$31387$6Dw7t)
            ((case-lambda
               ((g$t$31388$6Dw7t)
                (if (eqv? g$t$31388$6Dw7t 'define-record-type)
                  g$define-record-type-macro$29332$6Dw7t
                  (if (eqv? g$t$31388$6Dw7t 'define-struct)
                    g$define-struct-macro$29331$6Dw7t
                    (if (eqv? g$t$31388$6Dw7t 'include)
                      g$include-macro$29326$6Dw7t
                      (if (eqv? g$t$31388$6Dw7t 'cond)
                        g$cond-macro$29324$6Dw7t
                        (if (eqv? g$t$31388$6Dw7t 'let)
                          g$let-macro$29304$6Dw7t
                          (if (eqv? g$t$31388$6Dw7t 'do)
                            g$do-macro$29320$6Dw7t
                            (if (eqv? g$t$31388$6Dw7t 'or)
                              g$or-macro$29322$6Dw7t
                              (if (eqv? g$t$31388$6Dw7t 'and)
                                g$and-macro$29323$6Dw7t
                                (if (eqv? g$t$31388$6Dw7t 'let*)
                                  g$let*-macro$29321$6Dw7t
                                  (if (eqv? g$t$31388$6Dw7t 'let-values)
                                    g$let-values-macro$29305$6Dw7t
                                    (if (eqv?
                                          g$t$31388$6Dw7t
                                          'let*-values)
                                      g$let*-values-macro$29306$6Dw7t
                                      (if (eqv?
                                            g$t$31388$6Dw7t
                                            'syntax-rules)
                                        g$syntax-rules-macro$29328$6Dw7t
                                        (if (eqv?
                                              g$t$31388$6Dw7t
                                              'quasiquote)
                                          g$quasiquote-macro$29329$6Dw7t
                                          (if (eqv?
                                                g$t$31388$6Dw7t
                                                'quasisyntax)
                                            g$quasisyntax-macro$29330$6Dw7t
                                            (if (eqv?
                                                  g$t$31388$6Dw7t
                                                  'with-syntax)
                                              g$with-syntax-macro$29302$6Dw7t
                                              (if (eqv?
                                                    g$t$31388$6Dw7t
                                                    'when)
                                                g$when-macro$29294$6Dw7t
                                                (if (eqv?
                                                      g$t$31388$6Dw7t
                                                      'unless)
                                                  g$unless-macro$29295$6Dw7t
                                                  (if (eqv?
                                                        g$t$31388$6Dw7t
                                                        'case)
                                                    g$case-macro$29297$6Dw7t
                                                    (if (eqv?
                                                          g$t$31388$6Dw7t
                                                          'identifier-syntax)
                                                      g$identifier-syntax-macro$29319$6Dw7t
                                                      (if (eqv?
                                                            g$t$31388$6Dw7t
                                                            'time)
                                                        g$time-macro$29315$6Dw7t
                                                        (if (eqv?
                                                              g$t$31388$6Dw7t
                                                              'delay)
                                                          g$delay-macro$29316$6Dw7t
                                                          (if (eqv?
                                                                g$t$31388$6Dw7t
                                                                'assert)
                                                            g$assert-macro$29317$6Dw7t
                                                            (if (eqv?
                                                                  g$t$31388$6Dw7t
                                                                  'endianness)
                                                              g$endianness-macro$29318$6Dw7t
                                                              (if (eqv?
                                                                    g$t$31388$6Dw7t
                                                                    'guard)
                                                                g$guard-macro$29313$6Dw7t
                                                                (if (eqv?
                                                                      g$t$31388$6Dw7t
                                                                      'define-enumeration)
                                                                  g$define-enumeration-macro$29314$6Dw7t
                                                                  (if (eqv?
                                                                        g$t$31388$6Dw7t
                                                                        'trace-lambda)
                                                                    g$trace-lambda-macro$29307$6Dw7t
                                                                    (if (eqv?
                                                                          g$t$31388$6Dw7t
                                                                          'trace-define)
                                                                      g$trace-define-macro$29308$6Dw7t
                                                                      (if (eqv?
                                                                            g$t$31388$6Dw7t
                                                                            'trace-define-syntax)
                                                                        g$trace-define-syntax-macro$29309$6Dw7t
                                                                        (if (eqv?
                                                                              g$t$31388$6Dw7t
                                                                              'trace-let-syntax)
                                                                          g$trace-let-syntax-macro$29311$6Dw7t
                                                                          (if (eqv?
                                                                                g$t$31388$6Dw7t
                                                                                'trace-letrec-syntax)
                                                                            g$trace-letrec-syntax-macro$29312$6Dw7t
                                                                            (if (eqv?
                                                                                  g$t$31388$6Dw7t
                                                                                  'define-condition-type)
                                                                              g$define-condition-type-macro$29333$6Dw7t
                                                                              (if (eqv?
                                                                                    g$t$31388$6Dw7t
                                                                                    'parameterize)
                                                                                g$parameterize-macro$29335$6Dw7t
                                                                                (if (eqv?
                                                                                      g$t$31388$6Dw7t
                                                                                      'include-into)
                                                                                  g$include-into-macro$29327$6Dw7t
                                                                                  (if (eqv?
                                                                                        g$t$31388$6Dw7t
                                                                                        'eol-style)
                                                                                    (case-lambda
                                                                                      ((g$x$31389$6Dw7t)
                                                                                       (g$symbol-macro$29347$6Dw7t
                                                                                         g$x$31389$6Dw7t
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (eqv?
                                                                                          g$t$31388$6Dw7t
                                                                                          'error-handling-mode)
                                                                                      (case-lambda
                                                                                        ((g$x$31390$6Dw7t)
                                                                                         (g$symbol-macro$29347$6Dw7t
                                                                                           g$x$31390$6Dw7t
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (eqv?
                                                                                            g$t$31388$6Dw7t
                                                                                            'buffer-mode)
                                                                                        (case-lambda
                                                                                          ((g$x$31391$6Dw7t)
                                                                                           (g$symbol-macro$29347$6Dw7t
                                                                                             g$x$31391$6Dw7t
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (eqv?
                                                                                              g$t$31388$6Dw7t
                                                                                              'file-options)
                                                                                          g$file-options-macro$29346$6Dw7t
                                                                                          (if (g$memv$23570$6Dw7t
                                                                                                g$t$31388$6Dw7t
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$29334$6Dw7t
                                                                                            ((case-lambda
                                                                                               (()
                                                                                                (begin
                                                                                                  '#f
                                                                                                  (g$error$20491$6Dw7t
                                                                                                    'macro-transformer
                                                                                                    '"BUG: invalid macro"
                                                                                                    g$x$31387$6Dw7t)))))))))))))))))))))))))))))))))))))))))))))
             g$x$31387$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$error$20491$6Dw7t
                    'core-macro-transformer
                    '"BUG: invalid macro"
                    g$x$31387$6Dw7t))))))))))
   (g$local-macro-transformer$29349$6Dw7t
     g$local-macro-transformer$32948$6Dw7t
     (case-lambda ((g$x$31392$6Dw7t) (car g$x$31392$6Dw7t))))
   (g$do-macro-call$29350$6Dw7t
     g$do-macro-call$32949$6Dw7t
     (case-lambda
       ((g$transformer$31393$6Dw7t g$expr$31394$6Dw7t g$r$31395$6Dw7t)
        (letrec* ((g$return$31396$6Dw7t
                    (case-lambda
                      ((g$x$31404$6Dw7t)
                       (begin
                         ((letrec ((g$f$31405$6Dw7t
                                     (case-lambda
                                       ((g$x$31406$6Dw7t)
                                        (if (not (g$stx?$28812$6Dw7t
                                                   g$x$31406$6Dw7t))
                                          (if (pair? g$x$31406$6Dw7t)
                                            (begin
                                              (g$f$31405$6Dw7t
                                                (car g$x$31406$6Dw7t))
                                              (g$f$31405$6Dw7t
                                                (cdr g$x$31406$6Dw7t)))
                                            (if (g$vector?$24005$6Dw7t
                                                  g$x$31406$6Dw7t)
                                              (g$vector-for-each$24095$6Dw7t
                                                g$f$31405$6Dw7t
                                                g$x$31406$6Dw7t)
                                              (if (g$symbol?$24007$6Dw7t
                                                    g$x$31406$6Dw7t)
                                                (g$syntax-violation$29458$6Dw7t
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$31394$6Dw7t
                                                  g$x$31406$6Dw7t)
                                                (void))))
                                          (void))))))
                            g$f$31405$6Dw7t)
                          g$x$31404$6Dw7t)
                         (g$add-mark$28829$6Dw7t
                           (g$gen-mark$28824$6Dw7t)
                           g$x$31404$6Dw7t
                           g$expr$31394$6Dw7t))))))
          ((case-lambda
             ((g$x$31397$6Dw7t)
              (if (g$procedure?$24009$6Dw7t g$x$31397$6Dw7t)
                (g$return$31396$6Dw7t
                  (g$x$31397$6Dw7t
                    (case-lambda
                      ((g$id$31398$6Dw7t)
                       (begin
                         (if (not (g$id?$28840$6Dw7t g$id$31398$6Dw7t))
                           (g$assertion-violation$20490$6Dw7t
                             'rho
                             '"not an identifier"
                             g$id$31398$6Dw7t)
                           (void))
                         ((case-lambda
                            ((g$label$31399$6Dw7t)
                             ((case-lambda
                                ((g$binding$31400$6Dw7t)
                                 ((case-lambda
                                    ((g$t$31401$6Dw7t)
                                     (if (eqv?
                                           g$t$31401$6Dw7t
                                           'local-ctv)
                                       (g$cadr$24045$6Dw7t
                                         g$binding$31400$6Dw7t)
                                       (if (eqv?
                                             g$t$31401$6Dw7t
                                             'global-ctv)
                                         ((case-lambda
                                            ((g$lib$31402$6Dw7t
                                               g$loc$31403$6Dw7t)
                                             (begin
                                               (g$visit-library$28547$6Dw7t
                                                 g$lib$31402$6Dw7t)
                                               (symbol-value
                                                 g$loc$31403$6Dw7t))))
                                          (g$cadr$24045$6Dw7t
                                            g$binding$31400$6Dw7t)
                                          (g$cddr$24047$6Dw7t
                                            g$binding$31400$6Dw7t))
                                         ((case-lambda
                                            (() (begin '#f '#f))))))))
                                  (car g$binding$31400$6Dw7t))))
                              (g$label->binding$28855$6Dw7t
                                g$label$31399$6Dw7t
                                g$r$31395$6Dw7t))))
                          (g$id->label$28853$6Dw7t
                            g$id$31398$6Dw7t)))))))
                (g$return$31396$6Dw7t g$x$31397$6Dw7t))))
           (g$transformer$31393$6Dw7t
             (g$add-mark$28829$6Dw7t
               g$anti-mark$28825$6Dw7t
               g$expr$31394$6Dw7t
               '#f)))))))
   (g$chi-macro$29351$6Dw7t
     g$chi-macro$32950$6Dw7t
     (case-lambda
       ((g$p$31407$6Dw7t g$e$31408$6Dw7t g$r$31409$6Dw7t)
        (g$do-macro-call$29350$6Dw7t
          (g$macro-transformer$29348$6Dw7t g$p$31407$6Dw7t)
          g$e$31408$6Dw7t
          g$r$31409$6Dw7t))))
   (g$chi-local-macro$29352$6Dw7t
     g$chi-local-macro$32951$6Dw7t
     (case-lambda
       ((g$p$31410$6Dw7t g$e$31411$6Dw7t g$r$31412$6Dw7t)
        (g$do-macro-call$29350$6Dw7t
          (g$local-macro-transformer$29349$6Dw7t g$p$31410$6Dw7t)
          g$e$31411$6Dw7t
          g$r$31412$6Dw7t))))
   (g$chi-global-macro$29353$6Dw7t
     g$chi-global-macro$32952$6Dw7t
     (case-lambda
       ((g$p$31413$6Dw7t g$e$31414$6Dw7t g$r$31415$6Dw7t)
        ((case-lambda
           ((g$lib$31416$6Dw7t g$loc$31417$6Dw7t)
            (begin
              (g$visit-library$28547$6Dw7t g$lib$31416$6Dw7t)
              ((case-lambda
                 ((g$x$31418$6Dw7t)
                  ((case-lambda
                     ((g$transformer$31419$6Dw7t)
                      (g$do-macro-call$29350$6Dw7t
                        g$transformer$31419$6Dw7t
                        g$e$31414$6Dw7t
                        g$r$31415$6Dw7t)))
                   (if (g$procedure?$24009$6Dw7t g$x$31418$6Dw7t)
                     g$x$31418$6Dw7t
                     ((case-lambda
                        (()
                         (begin
                           '#f
                           (g$assertion-violation$20490$6Dw7t
                             'chi-global-macro
                             '"BUG: not a procedure"
                             g$x$31418$6Dw7t)))))))))
               (symbol-value g$loc$31417$6Dw7t)))))
         (car g$p$31413$6Dw7t)
         (cdr g$p$31413$6Dw7t)))))
   (g$chi-expr*$29354$6Dw7t
     g$chi-expr*$32953$6Dw7t
     (case-lambda
       ((g$e*$31420$6Dw7t g$r$31421$6Dw7t g$mr$31422$6Dw7t)
        (if (null? g$e*$31420$6Dw7t)
          '()
          ((case-lambda
             (()
              (begin
                '#f
                ((case-lambda
                   ((g$e$31423$6Dw7t)
                    (cons
                      g$e$31423$6Dw7t
                      (g$chi-expr*$29354$6Dw7t
                        (cdr g$e*$31420$6Dw7t)
                        g$r$31421$6Dw7t
                        g$mr$31422$6Dw7t))))
                 (g$chi-expr$29356$6Dw7t
                   (car g$e*$31420$6Dw7t)
                   g$r$31421$6Dw7t
                   g$mr$31422$6Dw7t))))))))))
   (g$chi-application$29355$6Dw7t
     g$chi-application$32954$6Dw7t
     (case-lambda
       ((g$e$31424$6Dw7t g$r$31425$6Dw7t g$mr$31426$6Dw7t)
        ((case-lambda
           ((g$t$31427$6Dw7t)
            ((case-lambda
               ((g$ls/false$31428$6Dw7t)
                (if g$ls/false$31428$6Dw7t
                  (apply
                    (case-lambda
                      ((g$rator$31429$6Dw7t g$rands$31430$6Dw7t)
                       ((case-lambda
                          ((g$rator$31431$6Dw7t)
                           (cons
                             g$rator$31431$6Dw7t
                             (g$chi-expr*$29354$6Dw7t
                               g$rands$31430$6Dw7t
                               g$r$31425$6Dw7t
                               g$mr$31426$6Dw7t))))
                        (g$chi-expr$29356$6Dw7t
                          g$rator$31429$6Dw7t
                          g$r$31425$6Dw7t
                          g$mr$31426$6Dw7t))))
                    g$ls/false$31428$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$31427$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31427$6Dw7t
               '(any . each-any)))))
         g$e$31424$6Dw7t))))
   (g$chi-expr$29356$6Dw7t
     g$chi-expr$32955$6Dw7t
     (case-lambda
       ((g$e$31432$6Dw7t g$r$31433$6Dw7t g$mr$31434$6Dw7t)
        (call-with-values
          (case-lambda
            (()
             (g$syntax-type$28860$6Dw7t
               g$e$31432$6Dw7t
               g$r$31433$6Dw7t)))
          (case-lambda
            ((g$type$31438$6Dw7t g$value$31439$6Dw7t g$kwd$31440$6Dw7t)
             ((case-lambda
                ((g$kwd$31441$6Dw7t
                   g$value$31442$6Dw7t
                   g$type$31443$6Dw7t)
                 ((case-lambda
                    ((g$t$31444$6Dw7t)
                     (if (eqv? g$t$31444$6Dw7t 'core-macro)
                       ((case-lambda
                          ((g$transformer$31445$6Dw7t)
                           (g$transformer$31445$6Dw7t
                             g$e$31432$6Dw7t
                             g$r$31433$6Dw7t
                             g$mr$31434$6Dw7t)))
                        (g$core-macro-transformer$29345$6Dw7t
                          g$value$31442$6Dw7t))
                       (if (eqv? g$t$31444$6Dw7t 'global)
                         ((case-lambda
                            ((g$lib$31446$6Dw7t)
                             ((case-lambda
                                ((g$loc$31447$6Dw7t)
                                 (begin
                                   ((g$inv-collector$29393$6Dw7t)
                                    g$lib$31446$6Dw7t)
                                   g$loc$31447$6Dw7t)))
                              (cdr g$value$31442$6Dw7t))))
                          (car g$value$31442$6Dw7t))
                         (if (eqv? g$t$31444$6Dw7t 'core-prim)
                           ((case-lambda
                              ((g$name$31448$6Dw7t)
                               (list 'primitive g$name$31448$6Dw7t)))
                            g$value$31442$6Dw7t)
                           (if (eqv? g$t$31444$6Dw7t 'call)
                             (g$chi-application$29355$6Dw7t
                               g$e$31432$6Dw7t
                               g$r$31433$6Dw7t
                               g$mr$31434$6Dw7t)
                             (if (eqv? g$t$31444$6Dw7t 'lexical)
                               ((case-lambda
                                  ((g$lex$31449$6Dw7t)
                                   g$lex$31449$6Dw7t))
                                (g$lexical-var$29282$6Dw7t
                                  g$value$31442$6Dw7t))
                               (if (g$memv$23570$6Dw7t
                                     g$t$31444$6Dw7t
                                     '(global-macro global-macro!))
                                 (g$chi-expr$29356$6Dw7t
                                   (g$chi-global-macro$29353$6Dw7t
                                     g$value$31442$6Dw7t
                                     g$e$31432$6Dw7t
                                     g$r$31433$6Dw7t)
                                   g$r$31433$6Dw7t
                                   g$mr$31434$6Dw7t)
                                 (if (g$memv$23570$6Dw7t
                                       g$t$31444$6Dw7t
                                       '(local-macro local-macro!))
                                   (g$chi-expr$29356$6Dw7t
                                     (g$chi-local-macro$29352$6Dw7t
                                       g$value$31442$6Dw7t
                                       g$e$31432$6Dw7t
                                       g$r$31433$6Dw7t)
                                     g$r$31433$6Dw7t
                                     g$mr$31434$6Dw7t)
                                   (if (g$memv$23570$6Dw7t
                                         g$t$31444$6Dw7t
                                         '(macro macro!))
                                     (g$chi-expr$29356$6Dw7t
                                       (g$chi-macro$29351$6Dw7t
                                         g$value$31442$6Dw7t
                                         g$e$31432$6Dw7t
                                         g$r$31433$6Dw7t)
                                       g$r$31433$6Dw7t
                                       g$mr$31434$6Dw7t)
                                     (if (eqv?
                                           g$t$31444$6Dw7t
                                           'constant)
                                       ((case-lambda
                                          ((g$datum$31450$6Dw7t)
                                           (list
                                             'quote
                                             g$datum$31450$6Dw7t)))
                                        g$value$31442$6Dw7t)
                                       (if (eqv? g$t$31444$6Dw7t 'set!)
                                         (g$chi-set!$29357$6Dw7t
                                           g$e$31432$6Dw7t
                                           g$r$31433$6Dw7t
                                           g$mr$31434$6Dw7t)
                                         (if (eqv?
                                               g$t$31444$6Dw7t
                                               'begin)
                                           ((case-lambda
                                              ((g$t$31451$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$31452$6Dw7t)
                                                   (if g$ls/false$31452$6Dw7t
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$31453$6Dw7t
                                                            g$x*$31454$6Dw7t)
                                                          (g$build-sequence$28765$6Dw7t
                                                            '#f
                                                            (g$chi-expr*$29354$6Dw7t
                                                              (cons
                                                                g$x$31453$6Dw7t
                                                                g$x*$31454$6Dw7t)
                                                              g$r$31433$6Dw7t
                                                              g$mr$31434$6Dw7t))))
                                                       g$ls/false$31452$6Dw7t)
                                                     (g$syntax-violation$29458$6Dw7t
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$31451$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$31451$6Dw7t
                                                  '(_ any
                                                      .
                                                      each-any)))))
                                            g$e$31432$6Dw7t)
                                           (if (g$memv$23570$6Dw7t
                                                 g$t$31444$6Dw7t
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$31455$6Dw7t)
                                                 ((case-lambda
                                                    ((g$ls/false$31456$6Dw7t)
                                                     (if (if g$ls/false$31456$6Dw7t
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$31457$6Dw7t
                                                                    g$xrhs*$31458$6Dw7t
                                                                    g$xbody$31459$6Dw7t
                                                                    g$xbody*$31460$6Dw7t)
                                                                  (if (not (g$valid-bound-ids?$28845$6Dw7t
                                                                             g$xlhs*$31457$6Dw7t))
                                                                    (g$syntax-violation$29458$6Dw7t
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$31432$6Dw7t)
                                                                    (void))))
                                                               g$ls/false$31456$6Dw7t))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$31461$6Dw7t
                                                              g$xrhs*$31462$6Dw7t
                                                              g$xbody$31463$6Dw7t
                                                              g$xbody*$31464$6Dw7t)
                                                            ((case-lambda
                                                               ((g$xlab*$31465$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$xrib$31466$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$xb*$31467$6Dw7t)
                                                                        (g$build-sequence$28765$6Dw7t
                                                                          '#f
                                                                          (g$chi-expr*$29354$6Dw7t
                                                                            (g$map$23581$6Dw7t
                                                                              (case-lambda
                                                                                ((g$x$31468$6Dw7t)
                                                                                 (g$add-subst$28830$6Dw7t
                                                                                   g$xrib$31466$6Dw7t
                                                                                   g$x$31468$6Dw7t)))
                                                                              (cons
                                                                                g$xbody$31463$6Dw7t
                                                                                g$xbody*$31464$6Dw7t))
                                                                            (g$append$23587$6Dw7t
                                                                              (g$map$23581$6Dw7t
                                                                                cons
                                                                                g$xlab*$31465$6Dw7t
                                                                                g$xb*$31467$6Dw7t)
                                                                              g$r$31433$6Dw7t)
                                                                            (g$append$23587$6Dw7t
                                                                              (g$map$23581$6Dw7t
                                                                                cons
                                                                                g$xlab*$31465$6Dw7t
                                                                                g$xb*$31467$6Dw7t)
                                                                              g$mr$31434$6Dw7t)))))
                                                                     (g$map$23581$6Dw7t
                                                                       (case-lambda
                                                                         ((g$x$31469$6Dw7t)
                                                                          (g$make-eval-transformer$28888$6Dw7t
                                                                            (g$expand-transformer$29386$6Dw7t
                                                                              (if (eq? g$type$31443$6Dw7t
                                                                                       'let-syntax)
                                                                                g$x$31469$6Dw7t
                                                                                (g$add-subst$28830$6Dw7t
                                                                                  g$xrib$31466$6Dw7t
                                                                                  g$x$31469$6Dw7t))
                                                                              g$mr$31434$6Dw7t))))
                                                                       g$xrhs*$31462$6Dw7t))))
                                                                 (g$make-full-rib$28806$6Dw7t
                                                                   g$xlhs*$31461$6Dw7t
                                                                   g$xlab*$31465$6Dw7t))))
                                                             (g$map$23581$6Dw7t
                                                               g$gen-label$28777$6Dw7t
                                                               g$xlhs*$31461$6Dw7t))))
                                                         g$ls/false$31456$6Dw7t)
                                                       (g$syntax-violation$29458$6Dw7t
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$31455$6Dw7t))))
                                                  (g$syntax-dispatch$29338$6Dw7t
                                                    g$t$31455$6Dw7t
                                                    '(_ #(each
                                                          (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$31432$6Dw7t)
                                             (if (eqv?
                                                   g$t$31444$6Dw7t
                                                   'displaced-lexical)
                                               (g$syntax-violation$29458$6Dw7t
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$31432$6Dw7t)
                                               (if (eqv?
                                                     g$t$31444$6Dw7t
                                                     'syntax)
                                                 (g$syntax-violation$29458$6Dw7t
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$31432$6Dw7t)
                                                 (if (g$memv$23570$6Dw7t
                                                       g$t$31444$6Dw7t
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$29458$6Dw7t
                                                     '#f
                                                     (g$string-append$24025$6Dw7t
                                                       ((case-lambda
                                                          ((g$t$31470$6Dw7t)
                                                           (if (eqv?
                                                                 g$t$31470$6Dw7t
                                                                 'define)
                                                             '"a definition"
                                                             (if (eqv?
                                                                   g$t$31470$6Dw7t
                                                                   'define-syntax)
                                                               '"a define-syntax"
                                                               (if (eqv?
                                                                     g$t$31470$6Dw7t
                                                                     'module)
                                                                 '"a module definition"
                                                                 (if (eqv?
                                                                       g$t$31470$6Dw7t
                                                                       'library)
                                                                   '"a library definition"
                                                                   (if (eqv?
                                                                         g$t$31470$6Dw7t
                                                                         'import)
                                                                     '"an import declaration"
                                                                     (if (eqv?
                                                                           g$t$31470$6Dw7t
                                                                           'export)
                                                                       '"an export declaration"
                                                                       ((case-lambda
                                                                          (()
                                                                           (begin
                                                                             '#f
                                                                             '"a non-expression"))))))))))))
                                                        g$type$31443$6Dw7t)
                                                       '" was found where an expression was expected")
                                                     g$e$31432$6Dw7t)
                                                   (if (eqv?
                                                         g$t$31444$6Dw7t
                                                         'mutable)
                                                     (g$syntax-violation$29458$6Dw7t
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$31432$6Dw7t)
                                                     ((case-lambda
                                                        (()
                                                         (begin
                                                           '#f
                                                           (g$syntax-violation$29458$6Dw7t
                                                             '#f
                                                             '"invalid expression"
                                                             g$e$31432$6Dw7t)))))))))))))))))))))))
                  g$type$31443$6Dw7t)))
              g$kwd$31440$6Dw7t
              g$value$31439$6Dw7t
              g$type$31438$6Dw7t)))))))
   (g$chi-set!$29357$6Dw7t
     g$chi-set!$32956$6Dw7t
     (case-lambda
       ((g$e$31471$6Dw7t g$r$31472$6Dw7t g$mr$31473$6Dw7t)
        ((case-lambda
           ((g$t$31474$6Dw7t)
            ((case-lambda
               ((g$ls/false$31475$6Dw7t)
                (if (if g$ls/false$31475$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$31476$6Dw7t g$v$31477$6Dw7t)
                             (g$id?$28840$6Dw7t g$x$31476$6Dw7t)))
                          g$ls/false$31475$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$31478$6Dw7t g$v$31479$6Dw7t)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$28860$6Dw7t
                              g$x$31478$6Dw7t
                              g$r$31472$6Dw7t)))
                         (case-lambda
                           ((g$type$31483$6Dw7t
                              g$value$31484$6Dw7t
                              g$kwd$31485$6Dw7t)
                            ((case-lambda
                               ((g$kwd$31486$6Dw7t
                                  g$value$31487$6Dw7t
                                  g$type$31488$6Dw7t)
                                ((case-lambda
                                   ((g$t$31489$6Dw7t)
                                    (if (eqv? g$t$31489$6Dw7t 'lexical)
                                      (begin
                                        (g$set-lexical-mutable!$29284$6Dw7t
                                          g$value$31487$6Dw7t
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$29282$6Dw7t
                                            g$value$31487$6Dw7t)
                                          (g$chi-expr$29356$6Dw7t
                                            g$v$31479$6Dw7t
                                            g$r$31472$6Dw7t
                                            g$mr$31473$6Dw7t)))
                                      (if (eqv?
                                            g$t$31489$6Dw7t
                                            'core-prim)
                                        (g$syntax-violation$29458$6Dw7t
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$31471$6Dw7t)
                                        (if (eqv?
                                              g$t$31489$6Dw7t
                                              'global)
                                          (g$syntax-violation$29458$6Dw7t
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$31471$6Dw7t)
                                          (if (eqv?
                                                g$t$31489$6Dw7t
                                                'global-macro!)
                                            (g$chi-expr$29356$6Dw7t
                                              (g$chi-global-macro$29353$6Dw7t
                                                g$value$31487$6Dw7t
                                                g$e$31471$6Dw7t
                                                g$r$31472$6Dw7t)
                                              g$r$31472$6Dw7t
                                              g$mr$31473$6Dw7t)
                                            (if (eqv?
                                                  g$t$31489$6Dw7t
                                                  'local-macro!)
                                              (g$chi-expr$29356$6Dw7t
                                                (g$chi-local-macro$29352$6Dw7t
                                                  g$value$31487$6Dw7t
                                                  g$e$31471$6Dw7t
                                                  g$r$31472$6Dw7t)
                                                g$r$31472$6Dw7t
                                                g$mr$31473$6Dw7t)
                                              (if (eqv?
                                                    g$t$31489$6Dw7t
                                                    'mutable)
                                                (g$syntax-violation$29458$6Dw7t
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$31471$6Dw7t)
                                                ((case-lambda
                                                   (()
                                                    (begin
                                                      '#f
                                                      (g$syntax-violation$29458$6Dw7t
                                                        '#f
                                                        '"invalid syntax"
                                                        g$e$31471$6Dw7t)))))))))))))
                                 g$type$31488$6Dw7t)))
                             g$kwd$31485$6Dw7t
                             g$value$31484$6Dw7t
                             g$type$31483$6Dw7t))))))
                    g$ls/false$31475$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$31474$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31474$6Dw7t
               '(_ any any)))))
         g$e$31471$6Dw7t))))
   (g$verify-formals$29358$6Dw7t
     g$verify-formals$32957$6Dw7t
     (case-lambda
       ((g$fmls$31490$6Dw7t g$stx$31491$6Dw7t)
        ((case-lambda
           ((g$t$31492$6Dw7t)
            ((case-lambda
               ((g$ls/false$31493$6Dw7t)
                (if g$ls/false$31493$6Dw7t
                  (apply
                    (case-lambda
                      ((g$x*$31494$6Dw7t)
                       (if (not (g$valid-bound-ids?$28845$6Dw7t
                                  g$x*$31494$6Dw7t))
                         (g$invalid-fmls-error$29303$6Dw7t
                           g$stx$31491$6Dw7t
                           g$fmls$31490$6Dw7t)
                         (void))))
                    g$ls/false$31493$6Dw7t)
                  ((case-lambda
                     ((g$t$31495$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$31496$6Dw7t)
                          (if g$ls/false$31496$6Dw7t
                            (apply
                              (case-lambda
                                ((g$x*$31497$6Dw7t g$x$31498$6Dw7t)
                                 (if (not (g$valid-bound-ids?$28845$6Dw7t
                                            (cons
                                              g$x$31498$6Dw7t
                                              g$x*$31497$6Dw7t)))
                                   (g$invalid-fmls-error$29303$6Dw7t
                                     g$stx$31491$6Dw7t
                                     g$fmls$31490$6Dw7t)
                                   (void))))
                              g$ls/false$31496$6Dw7t)
                            ((case-lambda
                               ((g$t$31499$6Dw7t)
                                ((case-lambda
                                   ((g$ls/false$31500$6Dw7t)
                                    (if g$ls/false$31500$6Dw7t
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$stx$31491$6Dw7t)))
                                        g$ls/false$31500$6Dw7t)
                                      (g$syntax-violation$29458$6Dw7t
                                        '#f
                                        '"invalid syntax"
                                        g$t$31499$6Dw7t))))
                                 (g$syntax-dispatch$29338$6Dw7t
                                   g$t$31499$6Dw7t
                                   '_))))
                             g$t$31495$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$31495$6Dw7t
                         '#(each+ any () any)))))
                   g$t$31492$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31492$6Dw7t
               'each-any))))
         g$fmls$31490$6Dw7t))))
   (g$chi-lambda-clause$29359$6Dw7t
     g$chi-lambda-clause$32958$6Dw7t
     (case-lambda
       ((g$stx$31501$6Dw7t
          g$fmls$31502$6Dw7t
          g$body*$31503$6Dw7t
          g$r$31504$6Dw7t
          g$mr$31505$6Dw7t)
        ((case-lambda
           ((g$t$31506$6Dw7t)
            ((case-lambda
               ((g$ls/false$31507$6Dw7t)
                (if g$ls/false$31507$6Dw7t
                  (apply
                    (case-lambda
                      ((g$x*$31508$6Dw7t)
                       (begin
                         (g$verify-formals$29358$6Dw7t
                           g$fmls$31502$6Dw7t
                           g$stx$31501$6Dw7t)
                         ((case-lambda
                            ((g$lex*$31509$6Dw7t g$lab*$31510$6Dw7t)
                             (values
                               g$lex*$31509$6Dw7t
                               (g$chi-internal$29367$6Dw7t
                                 (g$add-subst$28830$6Dw7t
                                   (g$make-full-rib$28806$6Dw7t
                                     g$x*$31508$6Dw7t
                                     g$lab*$31510$6Dw7t)
                                   g$body*$31503$6Dw7t)
                                 (g$add-lexicals$29286$6Dw7t
                                   g$lab*$31510$6Dw7t
                                   g$lex*$31509$6Dw7t
                                   g$r$31504$6Dw7t)
                                 g$mr$31505$6Dw7t))))
                          (g$map$23581$6Dw7t
                            g$gen-lexical$28775$6Dw7t
                            g$x*$31508$6Dw7t)
                          (g$map$23581$6Dw7t
                            g$gen-label$28777$6Dw7t
                            g$x*$31508$6Dw7t)))))
                    g$ls/false$31507$6Dw7t)
                  ((case-lambda
                     ((g$t$31511$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$31512$6Dw7t)
                          (if g$ls/false$31512$6Dw7t
                            (apply
                              (case-lambda
                                ((g$x*$31513$6Dw7t g$x$31514$6Dw7t)
                                 (begin
                                   (g$verify-formals$29358$6Dw7t
                                     g$fmls$31502$6Dw7t
                                     g$stx$31501$6Dw7t)
                                   ((case-lambda
                                      ((g$lex*$31515$6Dw7t
                                         g$lab*$31516$6Dw7t
                                         g$lex$31517$6Dw7t
                                         g$lab$31518$6Dw7t)
                                       (values
                                         (g$append$23587$6Dw7t
                                           g$lex*$31515$6Dw7t
                                           g$lex$31517$6Dw7t)
                                         (g$chi-internal$29367$6Dw7t
                                           (g$add-subst$28830$6Dw7t
                                             (g$make-full-rib$28806$6Dw7t
                                               (cons
                                                 g$x$31514$6Dw7t
                                                 g$x*$31513$6Dw7t)
                                               (cons
                                                 g$lab$31518$6Dw7t
                                                 g$lab*$31516$6Dw7t))
                                             g$body*$31503$6Dw7t)
                                           (g$add-lexicals$29286$6Dw7t
                                             (cons
                                               g$lab$31518$6Dw7t
                                               g$lab*$31516$6Dw7t)
                                             (cons
                                               g$lex$31517$6Dw7t
                                               g$lex*$31515$6Dw7t)
                                             g$r$31504$6Dw7t)
                                           g$mr$31505$6Dw7t))))
                                    (g$map$23581$6Dw7t
                                      g$gen-lexical$28775$6Dw7t
                                      g$x*$31513$6Dw7t)
                                    (g$map$23581$6Dw7t
                                      g$gen-label$28777$6Dw7t
                                      g$x*$31513$6Dw7t)
                                    (g$gen-lexical$28775$6Dw7t
                                      g$x$31514$6Dw7t)
                                    (g$gen-label$28777$6Dw7t
                                      g$x$31514$6Dw7t)))))
                              g$ls/false$31512$6Dw7t)
                            ((case-lambda
                               ((g$t$31519$6Dw7t)
                                ((case-lambda
                                   ((g$ls/false$31520$6Dw7t)
                                    (if g$ls/false$31520$6Dw7t
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$29458$6Dw7t
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$31502$6Dw7t)))
                                        g$ls/false$31520$6Dw7t)
                                      (g$syntax-violation$29458$6Dw7t
                                        '#f
                                        '"invalid syntax"
                                        g$t$31519$6Dw7t))))
                                 (g$syntax-dispatch$29338$6Dw7t
                                   g$t$31519$6Dw7t
                                   '_))))
                             g$t$31511$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$31511$6Dw7t
                         '#(each+ any () any)))))
                   g$t$31506$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31506$6Dw7t
               'each-any))))
         g$fmls$31502$6Dw7t))))
   (g$chi-lambda-clause*$29360$6Dw7t
     g$chi-lambda-clause*$32959$6Dw7t
     (case-lambda
       ((g$stx$31521$6Dw7t
          g$fmls*$31522$6Dw7t
          g$body**$31523$6Dw7t
          g$r$31524$6Dw7t
          g$mr$31525$6Dw7t)
        (if (null? g$fmls*$31522$6Dw7t)
          (values '() '())
          ((case-lambda
             (()
              (begin
                '#f
                (call-with-values
                  (case-lambda
                    (()
                     (g$chi-lambda-clause$29359$6Dw7t
                       g$stx$31521$6Dw7t
                       (car g$fmls*$31522$6Dw7t)
                       (car g$body**$31523$6Dw7t)
                       g$r$31524$6Dw7t
                       g$mr$31525$6Dw7t)))
                  (case-lambda
                    ((g$a$31528$6Dw7t g$b$31529$6Dw7t)
                     ((case-lambda
                        ((g$b$31530$6Dw7t g$a$31531$6Dw7t)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-lambda-clause*$29360$6Dw7t
                                g$stx$31521$6Dw7t
                                (cdr g$fmls*$31522$6Dw7t)
                                (cdr g$body**$31523$6Dw7t)
                                g$r$31524$6Dw7t
                                g$mr$31525$6Dw7t)))
                           (case-lambda
                             ((g$a*$31534$6Dw7t g$b*$31535$6Dw7t)
                              ((case-lambda
                                 ((g$b*$31536$6Dw7t g$a*$31537$6Dw7t)
                                  (values
                                    (cons
                                      g$a$31531$6Dw7t
                                      g$a*$31537$6Dw7t)
                                    (cons
                                      g$b$31530$6Dw7t
                                      g$b*$31536$6Dw7t))))
                               g$b*$31535$6Dw7t
                               g$a*$31534$6Dw7t))))))
                      g$b$31529$6Dw7t
                      g$a$31528$6Dw7t))))))))))))
   (g$chi-defun$29361$6Dw7t
     g$chi-defun$32960$6Dw7t
     (case-lambda
       ((g$x$31538$6Dw7t g$r$31539$6Dw7t g$mr$31540$6Dw7t)
        ((case-lambda
           ((g$t$31541$6Dw7t)
            ((case-lambda
               ((g$ls/false$31542$6Dw7t)
                (if g$ls/false$31542$6Dw7t
                  (apply
                    (case-lambda
                      ((g$fmls$31543$6Dw7t g$body*$31544$6Dw7t)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$29359$6Dw7t
                              g$fmls$31543$6Dw7t
                              g$fmls$31543$6Dw7t
                              g$body*$31544$6Dw7t
                              g$r$31539$6Dw7t
                              g$mr$31540$6Dw7t)))
                         (case-lambda
                           ((g$fmls$31547$6Dw7t g$body$31548$6Dw7t)
                            ((case-lambda
                               ((g$body$31549$6Dw7t g$fmls$31550$6Dw7t)
                                (g$build-lambda$28762$6Dw7t
                                  (g$syntax-annotation$29453$6Dw7t
                                    g$x$31538$6Dw7t)
                                  g$fmls$31550$6Dw7t
                                  g$body$31549$6Dw7t)))
                             g$body$31548$6Dw7t
                             g$fmls$31547$6Dw7t))))))
                    g$ls/false$31542$6Dw7t)
                  (g$syntax-violation$29458$6Dw7t
                    '#f
                    '"invalid syntax"
                    g$t$31541$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31541$6Dw7t
               '(_ (_ . any) . any)))))
         g$x$31538$6Dw7t))))
   (g$chi-rhs$29362$6Dw7t
     g$chi-rhs$32961$6Dw7t
     (case-lambda
       ((g$rhs$31551$6Dw7t g$r$31552$6Dw7t g$mr$31553$6Dw7t)
        ((case-lambda
           ((g$t$31554$6Dw7t)
            (if (eqv? g$t$31554$6Dw7t 'defun)
              (g$chi-defun$29361$6Dw7t
                (cdr g$rhs$31551$6Dw7t)
                g$r$31552$6Dw7t
                g$mr$31553$6Dw7t)
              (if (eqv? g$t$31554$6Dw7t 'expr)
                ((case-lambda
                   ((g$expr$31555$6Dw7t)
                    (g$chi-expr$29356$6Dw7t
                      g$expr$31555$6Dw7t
                      g$r$31552$6Dw7t
                      g$mr$31553$6Dw7t)))
                 (cdr g$rhs$31551$6Dw7t))
                (if (eqv? g$t$31554$6Dw7t 'top-expr)
                  ((case-lambda
                     ((g$expr$31556$6Dw7t)
                      (g$build-sequence$28765$6Dw7t
                        '#f
                        (list
                          (g$chi-expr$29356$6Dw7t
                            g$expr$31556$6Dw7t
                            g$r$31552$6Dw7t
                            g$mr$31553$6Dw7t)
                          (g$build-void$28766$6Dw7t)))))
                   (cdr g$rhs$31551$6Dw7t))
                  ((case-lambda
                     (()
                      (begin
                        '#f
                        (g$assertion-violation$20490$6Dw7t
                          'chi-rhs
                          '"BUG: invalid rhs"
                          g$rhs$31551$6Dw7t))))))))))
         (car g$rhs$31551$6Dw7t)))))
   (g$expand-interaction-rhs*/init*$29363$6Dw7t
     g$expand-interaction-rhs*/init*$32962$6Dw7t
     (case-lambda
       ((g$lhs*$31557$6Dw7t
          g$rhs*$31558$6Dw7t
          g$init*$31559$6Dw7t
          g$r$31560$6Dw7t
          g$mr$31561$6Dw7t)
        ((letrec ((g$f$31562$6Dw7t
                    (case-lambda
                      ((g$lhs*$31563$6Dw7t g$rhs*$31564$6Dw7t)
                       (if (null? g$lhs*$31563$6Dw7t)
                         (g$map$23581$6Dw7t
                           (case-lambda
                             ((g$x$31565$6Dw7t)
                              (g$chi-expr$29356$6Dw7t
                                g$x$31565$6Dw7t
                                g$r$31560$6Dw7t
                                g$mr$31561$6Dw7t)))
                           g$init*$31559$6Dw7t)
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$lhs$31566$6Dw7t g$rhs$31567$6Dw7t)
                                   ((case-lambda
                                      ((g$t$31568$6Dw7t)
                                       (if (eqv? g$t$31568$6Dw7t 'defun)
                                         ((case-lambda
                                            ((g$rhs$31569$6Dw7t)
                                             (cons
                                               (list
                                                 'set!
                                                 g$lhs$31566$6Dw7t
                                                 g$rhs$31569$6Dw7t)
                                               (g$f$31562$6Dw7t
                                                 (cdr g$lhs*$31563$6Dw7t)
                                                 (cdr g$rhs*$31564$6Dw7t)))))
                                          (g$chi-defun$29361$6Dw7t
                                            (cdr g$rhs$31567$6Dw7t)
                                            g$r$31560$6Dw7t
                                            g$mr$31561$6Dw7t))
                                         (if (eqv?
                                               g$t$31568$6Dw7t
                                               'expr)
                                           ((case-lambda
                                              ((g$rhs$31570$6Dw7t)
                                               (cons
                                                 (list
                                                   'set!
                                                   g$lhs$31566$6Dw7t
                                                   g$rhs$31570$6Dw7t)
                                                 (g$f$31562$6Dw7t
                                                   (cdr g$lhs*$31563$6Dw7t)
                                                   (cdr g$rhs*$31564$6Dw7t)))))
                                            (g$chi-expr$29356$6Dw7t
                                              (cdr g$rhs$31567$6Dw7t)
                                              g$r$31560$6Dw7t
                                              g$mr$31561$6Dw7t))
                                           (if (eqv?
                                                 g$t$31568$6Dw7t
                                                 'top-expr)
                                             ((case-lambda
                                                ((g$e$31571$6Dw7t)
                                                 (cons
                                                   g$e$31571$6Dw7t
                                                   (g$f$31562$6Dw7t
                                                     (cdr g$lhs*$31563$6Dw7t)
                                                     (cdr g$rhs*$31564$6Dw7t)))))
                                              (g$chi-expr$29356$6Dw7t
                                                (cdr g$rhs$31567$6Dw7t)
                                                g$r$31560$6Dw7t
                                                g$mr$31561$6Dw7t))
                                             ((case-lambda
                                                (()
                                                 (begin
                                                   '#f
                                                   (g$error$20491$6Dw7t
                                                     'expand-interaction
                                                     '"invallid"
                                                     g$rhs$31567$6Dw7t))))))))))
                                    (car g$rhs$31567$6Dw7t))))
                                (car g$lhs*$31563$6Dw7t)
                                (car g$rhs*$31564$6Dw7t)))))))))))
           g$f$31562$6Dw7t)
         g$lhs*$31557$6Dw7t
         g$rhs*$31558$6Dw7t))))
   (g$chi-rhs*$29364$6Dw7t
     g$chi-rhs*$32963$6Dw7t
     (case-lambda
       ((g$rhs*$31572$6Dw7t g$r$31573$6Dw7t g$mr$31574$6Dw7t)
        ((letrec ((g$f$31575$6Dw7t
                    (case-lambda
                      ((g$ls$31576$6Dw7t)
                       (if (null? g$ls$31576$6Dw7t)
                         '()
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$a$31577$6Dw7t)
                                   (cons
                                     g$a$31577$6Dw7t
                                     (g$f$31575$6Dw7t
                                       (cdr g$ls$31576$6Dw7t)))))
                                (g$chi-rhs$29362$6Dw7t
                                  (car g$ls$31576$6Dw7t)
                                  g$r$31573$6Dw7t
                                  g$mr$31574$6Dw7t)))))))))))
           g$f$31575$6Dw7t)
         g$rhs*$31572$6Dw7t))))
   (g$find-bound=?$29365$6Dw7t
     g$find-bound=?$32964$6Dw7t
     (case-lambda
       ((g$x$31578$6Dw7t g$lhs*$31579$6Dw7t g$rhs*$31580$6Dw7t)
        (if (null? g$lhs*$31579$6Dw7t)
          '#f
          (if (g$bound-id=?$28843$6Dw7t
                g$x$31578$6Dw7t
                (car g$lhs*$31579$6Dw7t))
            (car g$rhs*$31580$6Dw7t)
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$find-bound=?$29365$6Dw7t
                    g$x$31578$6Dw7t
                    (cdr g$lhs*$31579$6Dw7t)
                    (cdr g$rhs*$31580$6Dw7t)))))))))))
   (g$find-dups$29366$6Dw7t
     g$find-dups$32965$6Dw7t
     (case-lambda
       ((g$ls$31581$6Dw7t)
        ((letrec ((g$f$31582$6Dw7t
                    (case-lambda
                      ((g$ls$31583$6Dw7t g$dups$31584$6Dw7t)
                       (if (null? g$ls$31583$6Dw7t)
                         g$dups$31584$6Dw7t
                         ((case-lambda
                            ((g$t$31585$6Dw7t)
                             (if g$t$31585$6Dw7t
                               ((case-lambda
                                  ((g$x$31586$6Dw7t)
                                   (g$f$31582$6Dw7t
                                     (cdr g$ls$31583$6Dw7t)
                                     (cons
                                       (list
                                         (car g$ls$31583$6Dw7t)
                                         g$x$31586$6Dw7t)
                                       g$dups$31584$6Dw7t))))
                                g$t$31585$6Dw7t)
                               ((case-lambda
                                  (()
                                   (begin
                                     '#f
                                     (g$f$31582$6Dw7t
                                       (cdr g$ls$31583$6Dw7t)
                                       g$dups$31584$6Dw7t))))))))
                          (g$find-bound=?$29365$6Dw7t
                            (car g$ls$31583$6Dw7t)
                            (cdr g$ls$31583$6Dw7t)
                            (cdr g$ls$31583$6Dw7t))))))))
           g$f$31582$6Dw7t)
         g$ls$31581$6Dw7t
         '()))))
   (g$chi-internal$29367$6Dw7t
     g$chi-internal$32966$6Dw7t
     (case-lambda
       ((g$e*$31587$6Dw7t g$r$31588$6Dw7t g$mr$31589$6Dw7t)
        ((case-lambda
           ((g$rib$31590$6Dw7t)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$29385$6Dw7t
                   (g$map$23581$6Dw7t
                     (case-lambda
                       ((g$x$31599$6Dw7t)
                        (g$add-subst$28830$6Dw7t
                          g$rib$31590$6Dw7t
                          g$x$31599$6Dw7t)))
                     (g$syntax->list$28839$6Dw7t g$e*$31587$6Dw7t))
                   g$r$31588$6Dw7t
                   g$mr$31589$6Dw7t
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$31590$6Dw7t
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$31600$6Dw7t
                   g$r$31601$6Dw7t
                   g$mr$31602$6Dw7t
                   g$lex*$31603$6Dw7t
                   g$rhs*$31604$6Dw7t
                   g$mod**$31605$6Dw7t
                   g$kwd*$31606$6Dw7t
                   g$_exp*$31607$6Dw7t)
                 ((case-lambda
                    ((g$_exp*$31608$6Dw7t
                       g$kwd*$31609$6Dw7t
                       g$mod**$31610$6Dw7t
                       g$rhs*$31611$6Dw7t
                       g$lex*$31612$6Dw7t
                       g$mr$31613$6Dw7t
                       g$r$31614$6Dw7t
                       g$e*$31615$6Dw7t)
                     (begin
                       (if (null? g$e*$31615$6Dw7t)
                         (g$syntax-violation$29458$6Dw7t
                           '#f
                           '"no expression in body"
                           g$e*$31615$6Dw7t)
                         (void))
                       ((case-lambda
                          ((g$init*$31616$6Dw7t)
                           ((case-lambda
                              ((g$rhs*$31617$6Dw7t)
                               (g$build-letrec*$28768$6Dw7t
                                 '#f
                                 (g$reverse$24043$6Dw7t
                                   g$lex*$31612$6Dw7t)
                                 (g$reverse$24043$6Dw7t
                                   g$rhs*$31617$6Dw7t)
                                 (g$build-sequence$28765$6Dw7t
                                   '#f
                                   g$init*$31616$6Dw7t))))
                            (g$chi-rhs*$29364$6Dw7t
                              g$rhs*$31611$6Dw7t
                              g$r$31614$6Dw7t
                              g$mr$31613$6Dw7t))))
                        (g$chi-expr*$29354$6Dw7t
                          (g$append$23587$6Dw7t
                            (apply
                              g$append$23587$6Dw7t
                              (g$reverse$24043$6Dw7t
                                g$mod**$31610$6Dw7t))
                            g$e*$31615$6Dw7t)
                          g$r$31614$6Dw7t
                          g$mr$31613$6Dw7t)))))
                  g$_exp*$31607$6Dw7t
                  g$kwd*$31606$6Dw7t
                  g$mod**$31605$6Dw7t
                  g$rhs*$31604$6Dw7t
                  g$lex*$31603$6Dw7t
                  g$mr$31602$6Dw7t
                  g$r$31601$6Dw7t
                  g$e*$31600$6Dw7t))))))
         (g$make-empty-rib$28798$6Dw7t)))))
   (g$parse-module$29368$6Dw7t
     g$parse-module$32967$6Dw7t
     (case-lambda
       ((g$e$31618$6Dw7t)
        ((case-lambda
           ((g$t$31619$6Dw7t)
            ((case-lambda
               ((g$ls/false$31620$6Dw7t)
                (if g$ls/false$31620$6Dw7t
                  (apply
                    (case-lambda
                      ((g$export*$31621$6Dw7t g$b*$31622$6Dw7t)
                       (begin
                         (if (not (g$for-all$23579$6Dw7t
                                    g$id?$28840$6Dw7t
                                    g$export*$31621$6Dw7t))
                           (g$syntax-violation$29458$6Dw7t
                             '#f
                             '"module exports must be identifiers"
                             g$e$31618$6Dw7t)
                           (void))
                         (values
                           '#f
                           (g$list->vector$24034$6Dw7t
                             g$export*$31621$6Dw7t)
                           g$b*$31622$6Dw7t))))
                    g$ls/false$31620$6Dw7t)
                  ((case-lambda
                     ((g$t$31623$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$31624$6Dw7t)
                          (if g$ls/false$31624$6Dw7t
                            (apply
                              (case-lambda
                                ((g$name$31625$6Dw7t
                                   g$export*$31626$6Dw7t
                                   g$b*$31627$6Dw7t)
                                 (begin
                                   (if (not (g$id?$28840$6Dw7t
                                              g$name$31625$6Dw7t))
                                     (g$syntax-violation$29458$6Dw7t
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$31618$6Dw7t)
                                     (void))
                                   (if (not (g$for-all$23579$6Dw7t
                                              g$id?$28840$6Dw7t
                                              g$export*$31626$6Dw7t))
                                     (g$syntax-violation$29458$6Dw7t
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$31618$6Dw7t)
                                     (void))
                                   (values
                                     g$name$31625$6Dw7t
                                     (g$list->vector$24034$6Dw7t
                                       g$export*$31626$6Dw7t)
                                     g$b*$31627$6Dw7t))))
                              g$ls/false$31624$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$31623$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$31623$6Dw7t
                         '(_ any each-any . each-any)))))
                   g$t$31619$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31619$6Dw7t
               '(_ each-any . each-any)))))
         g$e$31618$6Dw7t))))
   (g$10520$29369$6Dw7t
     g$10520$32968$6Dw7t
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$10523$6Dw7t
       '#t
       '#t
       '#((mutable first-mark)
          (mutable exp-id-vec)
          (mutable exp-lab-vec))))
   (g$10522$29370$6Dw7t g$10522$32969$6Dw7t '#f)
   (g$10521$29371$6Dw7t
     g$10521$32970$6Dw7t
     (make-record-constructor-descriptor
       g$10520$29369$6Dw7t
       '#f
       g$10522$29370$6Dw7t))
   (g$module-interface?$29374$6Dw7t
     g$module-interface?$32971$6Dw7t
     (record-predicate g$10520$29369$6Dw7t))
   (g$make-module-interface$29375$6Dw7t
     g$make-module-interface$32972$6Dw7t
     (record-constructor g$10521$29371$6Dw7t))
   (g$module-interface-first-mark$29376$6Dw7t
     g$module-interface-first-mark$32973$6Dw7t
     (record-accessor g$10520$29369$6Dw7t '0))
   (g$module-interface-exp-id-vec$29377$6Dw7t
     g$module-interface-exp-id-vec$32974$6Dw7t
     (record-accessor g$10520$29369$6Dw7t '1))
   (g$module-interface-exp-lab-vec$29378$6Dw7t
     g$module-interface-exp-lab-vec$32975$6Dw7t
     (record-accessor g$10520$29369$6Dw7t '2))
   (g$set-module-interface-first-mark!$29379$6Dw7t
     g$set-module-interface-first-mark!$32976$6Dw7t
     (record-mutator g$10520$29369$6Dw7t '0))
   (g$set-module-interface-exp-id-vec!$29380$6Dw7t
     g$set-module-interface-exp-id-vec!$32977$6Dw7t
     (record-mutator g$10520$29369$6Dw7t '1))
   (g$set-module-interface-exp-lab-vec!$29381$6Dw7t
     g$set-module-interface-exp-lab-vec!$32978$6Dw7t
     (record-mutator g$10520$29369$6Dw7t '2))
   (g$module-interface-exp-id*$29382$6Dw7t
     g$module-interface-exp-id*$32979$6Dw7t
     (case-lambda
       ((g$iface$31628$6Dw7t g$id$31629$6Dw7t)
        (letrec* ((g$diff-marks$31630$6Dw7t
                    (case-lambda
                      ((g$ls$31634$6Dw7t g$x$31635$6Dw7t)
                       (begin
                         (if (null? g$ls$31634$6Dw7t)
                           (g$error$20491$6Dw7t
                             'diff-marks
                             '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$31636$6Dw7t)
                             (if (eq? g$a$31636$6Dw7t g$x$31635$6Dw7t)
                               '()
                               (cons
                                 g$a$31636$6Dw7t
                                 (g$diff-marks$31630$6Dw7t
                                   (cdr g$ls$31634$6Dw7t)
                                   g$x$31635$6Dw7t)))))
                          (car g$ls$31634$6Dw7t)))))))
          ((case-lambda
             ((g$diff$31631$6Dw7t g$id-vec$31632$6Dw7t)
              (if (null? g$diff$31631$6Dw7t)
                g$id-vec$31632$6Dw7t
                (g$vector-map$24094$6Dw7t
                  (case-lambda
                    ((g$x$31633$6Dw7t)
                     (g$make-stx$28813$6Dw7t
                       (g$stx-expr$28814$6Dw7t g$x$31633$6Dw7t)
                       (g$append$23587$6Dw7t
                         g$diff$31631$6Dw7t
                         (g$stx-mark*$28815$6Dw7t g$x$31633$6Dw7t))
                       '()
                       '())))
                  g$id-vec$31632$6Dw7t))))
           (g$diff-marks$31630$6Dw7t
             (g$stx-mark*$28815$6Dw7t g$id$31629$6Dw7t)
             (g$module-interface-first-mark$29376$6Dw7t
               g$iface$31628$6Dw7t))
           (g$module-interface-exp-id-vec$29377$6Dw7t
             g$iface$31628$6Dw7t))))))
   (g$syntax-transpose$29383$6Dw7t
     g$syntax-transpose$32980$6Dw7t
     (case-lambda
       ((g$object$31637$6Dw7t
          g$base-id$31638$6Dw7t
          g$new-id$31639$6Dw7t)
        (letrec* ((g$who$31640$6Dw7t 'syntax-transpose)
                  (g$err$31641$6Dw7t
                    (case-lambda
                      ((g$msg$31683$6Dw7t . g$args$31684$6Dw7t)
                       (apply
                         g$assertion-violation$20490$6Dw7t
                         g$who$31640$6Dw7t
                         g$msg$31683$6Dw7t
                         g$args$31684$6Dw7t))))
                  (g$split$31642$6Dw7t
                    (case-lambda
                      ((g$s*$31676$6Dw7t)
                       (if (eq? (car g$s*$31676$6Dw7t) 'shift)
                         (values (list 'shift) (cdr g$s*$31676$6Dw7t))
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$31642$6Dw7t
                                      (cdr g$s*$31676$6Dw7t))))
                                 (case-lambda
                                   ((g$s1*$31679$6Dw7t
                                      g$s2*$31680$6Dw7t)
                                    ((case-lambda
                                       ((g$s2*$31681$6Dw7t
                                          g$s1*$31682$6Dw7t)
                                        (values
                                          (cons
                                            (car g$s*$31676$6Dw7t)
                                            g$s1*$31682$6Dw7t)
                                          g$s2*$31681$6Dw7t)))
                                     g$s2*$31680$6Dw7t
                                     g$s1*$31679$6Dw7t))))))))))))
                  (g$final$31643$6Dw7t
                    (case-lambda
                      ((g$s*$31674$6Dw7t)
                       (if ((case-lambda
                              ((g$t$31675$6Dw7t)
                               (if g$t$31675$6Dw7t
                                 g$t$31675$6Dw7t
                                 (begin
                                   '#f
                                   (eq? (car g$s*$31674$6Dw7t)
                                        'shift)))))
                            (null? g$s*$31674$6Dw7t))
                         '()
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               (cons
                                 (car g$s*$31674$6Dw7t)
                                 (g$final$31643$6Dw7t
                                   (cdr g$s*$31674$6Dw7t)))))))))))
                  (g$diff$31644$6Dw7t
                    (case-lambda
                      ((g$m$31654$6Dw7t
                         g$m*$31655$6Dw7t
                         g$s*$31656$6Dw7t
                         g$ae*$31657$6Dw7t)
                       (if (null? g$m*$31655$6Dw7t)
                         (g$err$31641$6Dw7t
                           '"unmatched identifiers"
                           g$base-id$31638$6Dw7t
                           g$new-id$31639$6Dw7t)
                         ((case-lambda
                            ((g$m1$31658$6Dw7t)
                             (if (eq? g$m$31654$6Dw7t g$m1$31658$6Dw7t)
                               (values
                                 '()
                                 (g$final$31643$6Dw7t g$s*$31656$6Dw7t)
                                 '())
                               (call-with-values
                                 (case-lambda
                                   (()
                                    (g$split$31642$6Dw7t
                                      g$s*$31656$6Dw7t)))
                                 (case-lambda
                                   ((g$s1*$31661$6Dw7t
                                      g$s2*$31662$6Dw7t)
                                    ((case-lambda
                                       ((g$s2*$31663$6Dw7t
                                          g$s1*$31664$6Dw7t)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$diff$31644$6Dw7t
                                               g$m$31654$6Dw7t
                                               (cdr g$m*$31655$6Dw7t)
                                               g$s2*$31663$6Dw7t
                                               (cdr g$ae*$31657$6Dw7t))))
                                          (case-lambda
                                            ((g$nm*$31668$6Dw7t
                                               g$ns*$31669$6Dw7t
                                               g$nae*$31670$6Dw7t)
                                             ((case-lambda
                                                ((g$nae*$31671$6Dw7t
                                                   g$ns*$31672$6Dw7t
                                                   g$nm*$31673$6Dw7t)
                                                 (values
                                                   (cons
                                                     g$m1$31658$6Dw7t
                                                     g$nm*$31673$6Dw7t)
                                                   (g$append$23587$6Dw7t
                                                     g$s1*$31664$6Dw7t
                                                     g$ns*$31672$6Dw7t)
                                                   (cons
                                                     (car g$ae*$31657$6Dw7t)
                                                     g$nae*$31671$6Dw7t))))
                                              g$nae*$31670$6Dw7t
                                              g$ns*$31669$6Dw7t
                                              g$nm*$31668$6Dw7t))))))
                                     g$s2*$31662$6Dw7t
                                     g$s1*$31661$6Dw7t)))))))
                          (car g$m*$31655$6Dw7t)))))))
          (begin
            (if (not (g$id?$28840$6Dw7t g$base-id$31638$6Dw7t))
              (g$err$31641$6Dw7t
                '"not an identifier"
                g$base-id$31638$6Dw7t)
              (void))
            (if (not (g$id?$28840$6Dw7t g$new-id$31639$6Dw7t))
              (g$err$31641$6Dw7t
                '"not an identifier"
                g$new-id$31639$6Dw7t)
              (void))
            (if (not (g$free-identifier=?$29448$6Dw7t
                       g$base-id$31638$6Dw7t
                       g$new-id$31639$6Dw7t))
              (g$err$31641$6Dw7t
                '"not the same identifier"
                g$base-id$31638$6Dw7t
                g$new-id$31639$6Dw7t)
              (void))
            (call-with-values
              (case-lambda
                (()
                 (g$diff$31644$6Dw7t
                   (car (g$stx-mark*$28815$6Dw7t g$base-id$31638$6Dw7t))
                   (g$stx-mark*$28815$6Dw7t g$new-id$31639$6Dw7t)
                   (g$stx-subst*$28816$6Dw7t g$new-id$31639$6Dw7t)
                   (g$stx-ae*$28817$6Dw7t g$new-id$31639$6Dw7t))))
              (case-lambda
                ((g$m*$31648$6Dw7t g$s*$31649$6Dw7t g$ae*$31650$6Dw7t)
                 ((case-lambda
                    ((g$ae*$31651$6Dw7t
                       g$s*$31652$6Dw7t
                       g$m*$31653$6Dw7t)
                     (if (if (null? g$m*$31653$6Dw7t)
                           (begin '#f (null? g$s*$31652$6Dw7t))
                           '#f)
                       g$object$31637$6Dw7t
                       (g$mkstx$28828$6Dw7t
                         g$object$31637$6Dw7t
                         g$m*$31653$6Dw7t
                         g$s*$31652$6Dw7t
                         g$ae*$31651$6Dw7t))))
                  g$ae*$31650$6Dw7t
                  g$s*$31649$6Dw7t
                  g$m*$31648$6Dw7t)))))))))
   (g$chi-internal-module$29384$6Dw7t
     g$chi-internal-module$32981$6Dw7t
     (case-lambda
       ((g$e$31685$6Dw7t
          g$r$31686$6Dw7t
          g$mr$31687$6Dw7t
          g$lex*$31688$6Dw7t
          g$rhs*$31689$6Dw7t
          g$mod**$31690$6Dw7t
          g$kwd*$31691$6Dw7t)
        (call-with-values
          (case-lambda
            (() (g$parse-module$29368$6Dw7t g$e$31685$6Dw7t)))
          (case-lambda
            ((g$name$31695$6Dw7t g$exp-id*$31696$6Dw7t g$e*$31697$6Dw7t)
             ((case-lambda
                ((g$e*$31698$6Dw7t
                   g$exp-id*$31699$6Dw7t
                   g$name$31700$6Dw7t)
                 ((case-lambda
                    ((g$rib$31701$6Dw7t)
                     ((case-lambda
                        ((g$e*$31702$6Dw7t)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$29385$6Dw7t
                                g$e*$31702$6Dw7t
                                g$r$31686$6Dw7t
                                g$mr$31687$6Dw7t
                                g$lex*$31688$6Dw7t
                                g$rhs*$31689$6Dw7t
                                g$mod**$31690$6Dw7t
                                g$kwd*$31691$6Dw7t
                                '()
                                g$rib$31701$6Dw7t
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$31711$6Dw7t
                                g$r$31712$6Dw7t
                                g$mr$31713$6Dw7t
                                g$lex*$31714$6Dw7t
                                g$rhs*$31715$6Dw7t
                                g$mod**$31716$6Dw7t
                                g$kwd*$31717$6Dw7t
                                g$_exp*$31718$6Dw7t)
                              ((case-lambda
                                 ((g$_exp*$31719$6Dw7t
                                    g$kwd*$31720$6Dw7t
                                    g$mod**$31721$6Dw7t
                                    g$rhs*$31722$6Dw7t
                                    g$lex*$31723$6Dw7t
                                    g$mr$31724$6Dw7t
                                    g$r$31725$6Dw7t
                                    g$e*$31726$6Dw7t)
                                  ((case-lambda
                                     ((g$exp-lab*$31727$6Dw7t
                                        g$mod**$31728$6Dw7t)
                                      (if (not g$name$31700$6Dw7t)
                                        (values
                                          g$lex*$31723$6Dw7t
                                          g$rhs*$31722$6Dw7t
                                          g$exp-id*$31699$6Dw7t
                                          g$exp-lab*$31727$6Dw7t
                                          g$r$31725$6Dw7t
                                          g$mr$31724$6Dw7t
                                          g$mod**$31728$6Dw7t
                                          g$kwd*$31720$6Dw7t)
                                        ((case-lambda
                                           ((g$lab$31729$6Dw7t
                                              g$iface$31730$6Dw7t)
                                            (values
                                              g$lex*$31723$6Dw7t
                                              g$rhs*$31722$6Dw7t
                                              (vector
                                                g$name$31700$6Dw7t)
                                              (vector g$lab$31729$6Dw7t)
                                              (cons
                                                (cons
                                                  g$lab$31729$6Dw7t
                                                  (cons
                                                    '$module
                                                    g$iface$31730$6Dw7t))
                                                g$r$31725$6Dw7t)
                                              (cons
                                                (cons
                                                  g$lab$31729$6Dw7t
                                                  (cons
                                                    '$module
                                                    g$iface$31730$6Dw7t))
                                                g$mr$31724$6Dw7t)
                                              g$mod**$31728$6Dw7t
                                              g$kwd*$31720$6Dw7t)))
                                         (g$gen-label$28777$6Dw7t
                                           'module)
                                         (g$make-module-interface$29375$6Dw7t
                                           (car (g$stx-mark*$28815$6Dw7t
                                                  g$name$31700$6Dw7t))
                                           (g$vector-map$24094$6Dw7t
                                             (case-lambda
                                               ((g$x$31731$6Dw7t)
                                                (g$make-stx$28813$6Dw7t
                                                  (g$stx-expr$28814$6Dw7t
                                                    g$x$31731$6Dw7t)
                                                  (g$stx-mark*$28815$6Dw7t
                                                    g$x$31731$6Dw7t)
                                                  '()
                                                  '())))
                                             g$exp-id*$31699$6Dw7t)
                                           g$exp-lab*$31727$6Dw7t)))))
                                   (g$vector-map$24094$6Dw7t
                                     (case-lambda
                                       ((g$x$31732$6Dw7t)
                                        ((case-lambda
                                           ((g$t$31733$6Dw7t)
                                            (if g$t$31733$6Dw7t
                                              g$t$31733$6Dw7t
                                              (begin
                                                '#f
                                                (g$syntax-violation$29458$6Dw7t
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$31732$6Dw7t)))))
                                         (g$id->label$28853$6Dw7t
                                           (g$make-stx$28813$6Dw7t
                                             (g$id->sym$28841$6Dw7t
                                               g$x$31732$6Dw7t)
                                             (g$stx-mark*$28815$6Dw7t
                                               g$x$31732$6Dw7t)
                                             (list g$rib$31701$6Dw7t)
                                             '())))))
                                     g$exp-id*$31699$6Dw7t)
                                   (cons
                                     g$e*$31726$6Dw7t
                                     g$mod**$31721$6Dw7t))))
                               g$_exp*$31718$6Dw7t
                               g$kwd*$31717$6Dw7t
                               g$mod**$31716$6Dw7t
                               g$rhs*$31715$6Dw7t
                               g$lex*$31714$6Dw7t
                               g$mr$31713$6Dw7t
                               g$r$31712$6Dw7t
                               g$e*$31711$6Dw7t))))))
                      (g$map$23581$6Dw7t
                        (case-lambda
                          ((g$x$31734$6Dw7t)
                           (g$add-subst$28830$6Dw7t
                             g$rib$31701$6Dw7t
                             g$x$31734$6Dw7t)))
                        (g$syntax->list$28839$6Dw7t
                          g$e*$31698$6Dw7t)))))
                  (g$make-empty-rib$28798$6Dw7t))))
              g$e*$31697$6Dw7t
              g$exp-id*$31696$6Dw7t
              g$name$31695$6Dw7t)))))))
   (g$chi-body*$29385$6Dw7t
     g$chi-body*$32982$6Dw7t
     (case-lambda
       ((g$e*$31735$6Dw7t
          g$r$31736$6Dw7t
          g$mr$31737$6Dw7t
          g$lex*$31738$6Dw7t
          g$rhs*$31739$6Dw7t
          g$mod**$31740$6Dw7t
          g$kwd*$31741$6Dw7t
          g$exp*$31742$6Dw7t
          g$rib$31743$6Dw7t
          g$mix?$31744$6Dw7t
          g$sd?$31745$6Dw7t)
        (if (null? g$e*$31735$6Dw7t)
          (values
            g$e*$31735$6Dw7t
            g$r$31736$6Dw7t
            g$mr$31737$6Dw7t
            g$lex*$31738$6Dw7t
            g$rhs*$31739$6Dw7t
            g$mod**$31740$6Dw7t
            g$kwd*$31741$6Dw7t
            g$exp*$31742$6Dw7t)
          ((case-lambda
             (()
              (begin
                '#f
                ((case-lambda
                   ((g$e$31746$6Dw7t)
                    (call-with-values
                      (case-lambda
                        (()
                         (g$syntax-type$28860$6Dw7t
                           g$e$31746$6Dw7t
                           g$r$31736$6Dw7t)))
                      (case-lambda
                        ((g$type$31750$6Dw7t
                           g$value$31751$6Dw7t
                           g$kwd$31752$6Dw7t)
                         ((case-lambda
                            ((g$kwd$31753$6Dw7t
                               g$value$31754$6Dw7t
                               g$type$31755$6Dw7t)
                             ((case-lambda
                                ((g$kwd*$31756$6Dw7t)
                                 ((case-lambda
                                    ((g$t$31757$6Dw7t)
                                     (if (eqv? g$t$31757$6Dw7t 'define)
                                       (call-with-values
                                         (case-lambda
                                           (()
                                            (g$parse-define$29278$6Dw7t
                                              g$e$31746$6Dw7t)))
                                         (case-lambda
                                           ((g$id$31760$6Dw7t
                                              g$rhs$31761$6Dw7t)
                                            ((case-lambda
                                               ((g$rhs$31762$6Dw7t
                                                  g$id$31763$6Dw7t)
                                                (begin
                                                  (if (g$bound-id-member?$28847$6Dw7t
                                                        g$id$31763$6Dw7t
                                                        g$kwd*$31756$6Dw7t)
                                                    (g$syntax-violation$29458$6Dw7t
                                                      '#f
                                                      '"cannot redefine keyword"
                                                      g$e$31746$6Dw7t)
                                                    (void))
                                                  (call-with-values
                                                    (case-lambda
                                                      (()
                                                       (g$gen-define-label+loc$28779$6Dw7t
                                                         g$id$31763$6Dw7t
                                                         g$rib$31743$6Dw7t
                                                         g$sd?$31745$6Dw7t)))
                                                    (case-lambda
                                                      ((g$lab$31766$6Dw7t
                                                         g$lex$31767$6Dw7t)
                                                       ((case-lambda
                                                          ((g$lex$31768$6Dw7t
                                                             g$lab$31769$6Dw7t)
                                                           (begin
                                                             (g$extend-rib!$28801$6Dw7t
                                                               g$rib$31743$6Dw7t
                                                               g$id$31763$6Dw7t
                                                               g$lab$31769$6Dw7t
                                                               g$sd?$31745$6Dw7t)
                                                             (g$chi-body*$29385$6Dw7t
                                                               (cdr g$e*$31735$6Dw7t)
                                                               (g$add-lexical$29285$6Dw7t
                                                                 g$lab$31769$6Dw7t
                                                                 g$lex$31768$6Dw7t
                                                                 g$r$31736$6Dw7t)
                                                               g$mr$31737$6Dw7t
                                                               (cons
                                                                 g$lex$31768$6Dw7t
                                                                 g$lex*$31738$6Dw7t)
                                                               (cons
                                                                 g$rhs$31762$6Dw7t
                                                                 g$rhs*$31739$6Dw7t)
                                                               g$mod**$31740$6Dw7t
                                                               g$kwd*$31756$6Dw7t
                                                               g$exp*$31742$6Dw7t
                                                               g$rib$31743$6Dw7t
                                                               g$mix?$31744$6Dw7t
                                                               g$sd?$31745$6Dw7t))))
                                                        g$lex$31767$6Dw7t
                                                        g$lab$31766$6Dw7t)))))))
                                             g$rhs$31761$6Dw7t
                                             g$id$31760$6Dw7t))))
                                       (if (eqv?
                                             g$t$31757$6Dw7t
                                             'define-syntax)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$parse-define-syntax$29279$6Dw7t
                                                g$e$31746$6Dw7t)))
                                           (case-lambda
                                             ((g$id$31772$6Dw7t
                                                g$rhs$31773$6Dw7t)
                                              ((case-lambda
                                                 ((g$rhs$31774$6Dw7t
                                                    g$id$31775$6Dw7t)
                                                  (begin
                                                    (if (g$bound-id-member?$28847$6Dw7t
                                                          g$id$31775$6Dw7t
                                                          g$kwd*$31756$6Dw7t)
                                                      (g$syntax-violation$29458$6Dw7t
                                                        '#f
                                                        '"cannot redefine keyword"
                                                        g$e$31746$6Dw7t)
                                                      (void))
                                                    ((case-lambda
                                                       ((g$lab$31776$6Dw7t)
                                                        ((case-lambda
                                                           ((g$expanded-rhs$31777$6Dw7t)
                                                            (begin
                                                              (g$extend-rib!$28801$6Dw7t
                                                                g$rib$31743$6Dw7t
                                                                g$id$31775$6Dw7t
                                                                g$lab$31776$6Dw7t
                                                                g$sd?$31745$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$b$31778$6Dw7t)
                                                                  (g$chi-body*$29385$6Dw7t
                                                                    (cdr g$e*$31735$6Dw7t)
                                                                    (cons
                                                                      (cons
                                                                        g$lab$31776$6Dw7t
                                                                        g$b$31778$6Dw7t)
                                                                      g$r$31736$6Dw7t)
                                                                    (cons
                                                                      (cons
                                                                        g$lab$31776$6Dw7t
                                                                        g$b$31778$6Dw7t)
                                                                      g$mr$31737$6Dw7t)
                                                                    g$lex*$31738$6Dw7t
                                                                    g$rhs*$31739$6Dw7t
                                                                    g$mod**$31740$6Dw7t
                                                                    g$kwd*$31756$6Dw7t
                                                                    g$exp*$31742$6Dw7t
                                                                    g$rib$31743$6Dw7t
                                                                    g$mix?$31744$6Dw7t
                                                                    g$sd?$31745$6Dw7t)))
                                                               (g$make-eval-transformer$28888$6Dw7t
                                                                 g$expanded-rhs$31777$6Dw7t)))))
                                                         (g$expand-transformer$29386$6Dw7t
                                                           g$rhs$31774$6Dw7t
                                                           g$mr$31737$6Dw7t))))
                                                     (g$gen-define-label$28780$6Dw7t
                                                       g$id$31775$6Dw7t
                                                       g$rib$31743$6Dw7t
                                                       g$sd?$31745$6Dw7t)))))
                                               g$rhs$31773$6Dw7t
                                               g$id$31772$6Dw7t))))
                                         (if (g$memv$23570$6Dw7t
                                               g$t$31757$6Dw7t
                                               '(let-syntax letrec-syntax))
                                           ((case-lambda
                                              ((g$t$31779$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$31780$6Dw7t)
                                                   (if (if g$ls/false$31780$6Dw7t
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$xlhs*$31781$6Dw7t
                                                                  g$xrhs*$31782$6Dw7t
                                                                  g$xbody*$31783$6Dw7t)
                                                                (if (not (g$valid-bound-ids?$28845$6Dw7t
                                                                           g$xlhs*$31781$6Dw7t))
                                                                  (g$syntax-violation$29458$6Dw7t
                                                                    '#f
                                                                    '"invalid identifiers"
                                                                    g$e$31746$6Dw7t)
                                                                  (void))))
                                                             g$ls/false$31780$6Dw7t))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$31784$6Dw7t
                                                            g$xrhs*$31785$6Dw7t
                                                            g$xbody*$31786$6Dw7t)
                                                          ((case-lambda
                                                             ((g$xlab*$31787$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$xrib$31788$6Dw7t)
                                                                  ((case-lambda
                                                                     ((g$xb*$31789$6Dw7t)
                                                                      (g$chi-body*$29385$6Dw7t
                                                                        (g$append$23587$6Dw7t
                                                                          (g$map$23581$6Dw7t
                                                                            (case-lambda
                                                                              ((g$x$31790$6Dw7t)
                                                                               (g$add-subst$28830$6Dw7t
                                                                                 g$xrib$31788$6Dw7t
                                                                                 g$x$31790$6Dw7t)))
                                                                            g$xbody*$31786$6Dw7t)
                                                                          (cdr g$e*$31735$6Dw7t))
                                                                        (g$append$23587$6Dw7t
                                                                          (g$map$23581$6Dw7t
                                                                            cons
                                                                            g$xlab*$31787$6Dw7t
                                                                            g$xb*$31789$6Dw7t)
                                                                          g$r$31736$6Dw7t)
                                                                        (g$append$23587$6Dw7t
                                                                          (g$map$23581$6Dw7t
                                                                            cons
                                                                            g$xlab*$31787$6Dw7t
                                                                            g$xb*$31789$6Dw7t)
                                                                          g$mr$31737$6Dw7t)
                                                                        g$lex*$31738$6Dw7t
                                                                        g$rhs*$31739$6Dw7t
                                                                        g$mod**$31740$6Dw7t
                                                                        g$kwd*$31756$6Dw7t
                                                                        g$exp*$31742$6Dw7t
                                                                        g$rib$31743$6Dw7t
                                                                        g$mix?$31744$6Dw7t
                                                                        g$sd?$31745$6Dw7t)))
                                                                   (g$map$23581$6Dw7t
                                                                     (case-lambda
                                                                       ((g$x$31791$6Dw7t)
                                                                        (g$make-eval-transformer$28888$6Dw7t
                                                                          (g$expand-transformer$29386$6Dw7t
                                                                            (if (eq? g$type$31755$6Dw7t
                                                                                     'let-syntax)
                                                                              g$x$31791$6Dw7t
                                                                              (g$add-subst$28830$6Dw7t
                                                                                g$xrib$31788$6Dw7t
                                                                                g$x$31791$6Dw7t))
                                                                            g$mr$31737$6Dw7t))))
                                                                     g$xrhs*$31785$6Dw7t))))
                                                               (g$make-full-rib$28806$6Dw7t
                                                                 g$xlhs*$31784$6Dw7t
                                                                 g$xlab*$31787$6Dw7t))))
                                                           (g$map$23581$6Dw7t
                                                             g$gen-label$28777$6Dw7t
                                                             g$xlhs*$31784$6Dw7t))))
                                                       g$ls/false$31780$6Dw7t)
                                                     (g$syntax-violation$29458$6Dw7t
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$31779$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$31779$6Dw7t
                                                  '(_ #(each (any any))
                                                      .
                                                      each-any)))))
                                            g$e$31746$6Dw7t)
                                           (if (eqv?
                                                 g$t$31757$6Dw7t
                                                 'begin)
                                             ((case-lambda
                                                ((g$t$31792$6Dw7t)
                                                 ((case-lambda
                                                    ((g$ls/false$31793$6Dw7t)
                                                     (if g$ls/false$31793$6Dw7t
                                                       (apply
                                                         (case-lambda
                                                           ((g$x*$31794$6Dw7t)
                                                            (g$chi-body*$29385$6Dw7t
                                                              (g$append$23587$6Dw7t
                                                                g$x*$31794$6Dw7t
                                                                (cdr g$e*$31735$6Dw7t))
                                                              g$r$31736$6Dw7t
                                                              g$mr$31737$6Dw7t
                                                              g$lex*$31738$6Dw7t
                                                              g$rhs*$31739$6Dw7t
                                                              g$mod**$31740$6Dw7t
                                                              g$kwd*$31756$6Dw7t
                                                              g$exp*$31742$6Dw7t
                                                              g$rib$31743$6Dw7t
                                                              g$mix?$31744$6Dw7t
                                                              g$sd?$31745$6Dw7t)))
                                                         g$ls/false$31793$6Dw7t)
                                                       (g$syntax-violation$29458$6Dw7t
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$31792$6Dw7t))))
                                                  (g$syntax-dispatch$29338$6Dw7t
                                                    g$t$31792$6Dw7t
                                                    '(_ . each-any)))))
                                              g$e$31746$6Dw7t)
                                             (if (g$memv$23570$6Dw7t
                                                   g$t$31757$6Dw7t
                                                   '(global-macro
                                                      global-macro!))
                                               (g$chi-body*$29385$6Dw7t
                                                 (cons
                                                   (g$add-subst$28830$6Dw7t
                                                     g$rib$31743$6Dw7t
                                                     (g$chi-global-macro$29353$6Dw7t
                                                       g$value$31754$6Dw7t
                                                       g$e$31746$6Dw7t
                                                       g$r$31736$6Dw7t))
                                                   (cdr g$e*$31735$6Dw7t))
                                                 g$r$31736$6Dw7t
                                                 g$mr$31737$6Dw7t
                                                 g$lex*$31738$6Dw7t
                                                 g$rhs*$31739$6Dw7t
                                                 g$mod**$31740$6Dw7t
                                                 g$kwd*$31756$6Dw7t
                                                 g$exp*$31742$6Dw7t
                                                 g$rib$31743$6Dw7t
                                                 g$mix?$31744$6Dw7t
                                                 g$sd?$31745$6Dw7t)
                                               (if (g$memv$23570$6Dw7t
                                                     g$t$31757$6Dw7t
                                                     '(local-macro
                                                        local-macro!))
                                                 (g$chi-body*$29385$6Dw7t
                                                   (cons
                                                     (g$add-subst$28830$6Dw7t
                                                       g$rib$31743$6Dw7t
                                                       (g$chi-local-macro$29352$6Dw7t
                                                         g$value$31754$6Dw7t
                                                         g$e$31746$6Dw7t
                                                         g$r$31736$6Dw7t))
                                                     (cdr g$e*$31735$6Dw7t))
                                                   g$r$31736$6Dw7t
                                                   g$mr$31737$6Dw7t
                                                   g$lex*$31738$6Dw7t
                                                   g$rhs*$31739$6Dw7t
                                                   g$mod**$31740$6Dw7t
                                                   g$kwd*$31756$6Dw7t
                                                   g$exp*$31742$6Dw7t
                                                   g$rib$31743$6Dw7t
                                                   g$mix?$31744$6Dw7t
                                                   g$sd?$31745$6Dw7t)
                                                 (if (g$memv$23570$6Dw7t
                                                       g$t$31757$6Dw7t
                                                       '(macro macro!))
                                                   (g$chi-body*$29385$6Dw7t
                                                     (cons
                                                       (g$add-subst$28830$6Dw7t
                                                         g$rib$31743$6Dw7t
                                                         (g$chi-macro$29351$6Dw7t
                                                           g$value$31754$6Dw7t
                                                           g$e$31746$6Dw7t
                                                           g$r$31736$6Dw7t))
                                                       (cdr g$e*$31735$6Dw7t))
                                                     g$r$31736$6Dw7t
                                                     g$mr$31737$6Dw7t
                                                     g$lex*$31738$6Dw7t
                                                     g$rhs*$31739$6Dw7t
                                                     g$mod**$31740$6Dw7t
                                                     g$kwd*$31756$6Dw7t
                                                     g$exp*$31742$6Dw7t
                                                     g$rib$31743$6Dw7t
                                                     g$mix?$31744$6Dw7t
                                                     g$sd?$31745$6Dw7t)
                                                   (if (eqv?
                                                         g$t$31757$6Dw7t
                                                         'module)
                                                     (call-with-values
                                                       (case-lambda
                                                         (()
                                                          (g$chi-internal-module$29384$6Dw7t
                                                            g$e$31746$6Dw7t
                                                            g$r$31736$6Dw7t
                                                            g$mr$31737$6Dw7t
                                                            g$lex*$31738$6Dw7t
                                                            g$rhs*$31739$6Dw7t
                                                            g$mod**$31740$6Dw7t
                                                            g$kwd*$31756$6Dw7t)))
                                                       (case-lambda
                                                         ((g$lex*$31803$6Dw7t
                                                            g$rhs*$31804$6Dw7t
                                                            g$m-exp-id*$31805$6Dw7t
                                                            g$m-exp-lab*$31806$6Dw7t
                                                            g$r$31807$6Dw7t
                                                            g$mr$31808$6Dw7t
                                                            g$mod**$31809$6Dw7t
                                                            g$kwd*$31810$6Dw7t)
                                                          ((case-lambda
                                                             ((g$kwd*$31811$6Dw7t
                                                                g$mod**$31812$6Dw7t
                                                                g$mr$31813$6Dw7t
                                                                g$r$31814$6Dw7t
                                                                g$m-exp-lab*$31815$6Dw7t
                                                                g$m-exp-id*$31816$6Dw7t
                                                                g$rhs*$31817$6Dw7t
                                                                g$lex*$31818$6Dw7t)
                                                              (begin
                                                                (g$vector-for-each$24095$6Dw7t
                                                                  (case-lambda
                                                                    ((g$id$31819$6Dw7t
                                                                       g$lab$31820$6Dw7t)
                                                                     (g$extend-rib!$28801$6Dw7t
                                                                       g$rib$31743$6Dw7t
                                                                       g$id$31819$6Dw7t
                                                                       g$lab$31820$6Dw7t
                                                                       g$sd?$31745$6Dw7t)))
                                                                  g$m-exp-id*$31816$6Dw7t
                                                                  g$m-exp-lab*$31815$6Dw7t)
                                                                (g$chi-body*$29385$6Dw7t
                                                                  (cdr g$e*$31735$6Dw7t)
                                                                  g$r$31814$6Dw7t
                                                                  g$mr$31813$6Dw7t
                                                                  g$lex*$31818$6Dw7t
                                                                  g$rhs*$31817$6Dw7t
                                                                  g$mod**$31812$6Dw7t
                                                                  g$kwd*$31811$6Dw7t
                                                                  g$exp*$31742$6Dw7t
                                                                  g$rib$31743$6Dw7t
                                                                  g$mix?$31744$6Dw7t
                                                                  g$sd?$31745$6Dw7t))))
                                                           g$kwd*$31810$6Dw7t
                                                           g$mod**$31809$6Dw7t
                                                           g$mr$31808$6Dw7t
                                                           g$r$31807$6Dw7t
                                                           g$m-exp-lab*$31806$6Dw7t
                                                           g$m-exp-id*$31805$6Dw7t
                                                           g$rhs*$31804$6Dw7t
                                                           g$lex*$31803$6Dw7t))))
                                                     (if (eqv?
                                                           g$t$31757$6Dw7t
                                                           'library)
                                                       (begin
                                                         (g$library-expander$29441$6Dw7t
                                                           (g$stx->datum$28851$6Dw7t
                                                             g$e$31746$6Dw7t))
                                                         (g$chi-body*$29385$6Dw7t
                                                           (cdr g$e*$31735$6Dw7t)
                                                           g$r$31736$6Dw7t
                                                           g$mr$31737$6Dw7t
                                                           g$lex*$31738$6Dw7t
                                                           g$rhs*$31739$6Dw7t
                                                           g$mod**$31740$6Dw7t
                                                           g$kwd*$31756$6Dw7t
                                                           g$exp*$31742$6Dw7t
                                                           g$rib$31743$6Dw7t
                                                           g$mix?$31744$6Dw7t
                                                           g$sd?$31745$6Dw7t))
                                                       (if (eqv?
                                                             g$t$31757$6Dw7t
                                                             'export)
                                                         ((case-lambda
                                                            ((g$t$31821$6Dw7t)
                                                             ((case-lambda
                                                                ((g$ls/false$31822$6Dw7t)
                                                                 (if g$ls/false$31822$6Dw7t
                                                                   (apply
                                                                     (case-lambda
                                                                       ((g$exp-decl*$31823$6Dw7t)
                                                                        (g$chi-body*$29385$6Dw7t
                                                                          (cdr g$e*$31735$6Dw7t)
                                                                          g$r$31736$6Dw7t
                                                                          g$mr$31737$6Dw7t
                                                                          g$lex*$31738$6Dw7t
                                                                          g$rhs*$31739$6Dw7t
                                                                          g$mod**$31740$6Dw7t
                                                                          g$kwd*$31756$6Dw7t
                                                                          (g$append$23587$6Dw7t
                                                                            g$exp-decl*$31823$6Dw7t
                                                                            g$exp*$31742$6Dw7t)
                                                                          g$rib$31743$6Dw7t
                                                                          g$mix?$31744$6Dw7t
                                                                          g$sd?$31745$6Dw7t)))
                                                                     g$ls/false$31822$6Dw7t)
                                                                   (g$syntax-violation$29458$6Dw7t
                                                                     '#f
                                                                     '"invalid syntax"
                                                                     g$t$31821$6Dw7t))))
                                                              (g$syntax-dispatch$29338$6Dw7t
                                                                g$t$31821$6Dw7t
                                                                '(_ .
                                                                    each-any)))))
                                                          g$e$31746$6Dw7t)
                                                         (if (eqv?
                                                               g$t$31757$6Dw7t
                                                               'import)
                                                           ((case-lambda
                                                              (()
                                                               (letrec* ((g$module-import?$31824$6Dw7t
                                                                           (case-lambda
                                                                             ((g$e$31866$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$31867$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31868$6Dw7t)
                                                                                      (if (if g$ls/false$31868$6Dw7t
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$id$31869$6Dw7t)
                                                                                                   (g$id?$28840$6Dw7t
                                                                                                     g$id$31869$6Dw7t)))
                                                                                                g$ls/false$31868$6Dw7t))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$31870$6Dw7t)
                                                                                             '#t))
                                                                                          g$ls/false$31868$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$t$31871$6Dw7t)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$31872$6Dw7t)
                                                                                                (if g$ls/false$31872$6Dw7t
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$imp*$31873$6Dw7t)
                                                                                                       '#f))
                                                                                                    g$ls/false$31872$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$31874$6Dw7t)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$31875$6Dw7t)
                                                                                                          (if g$ls/false$31875$6Dw7t
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$29458$6Dw7t
                                                                                                                   '#f
                                                                                                                   '"malformed import form"
                                                                                                                   g$e$31866$6Dw7t)))
                                                                                                              g$ls/false$31875$6Dw7t)
                                                                                                            (g$syntax-violation$29458$6Dw7t
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$31874$6Dw7t))))
                                                                                                       (g$syntax-dispatch$29338$6Dw7t
                                                                                                         g$t$31874$6Dw7t
                                                                                                         '_))))
                                                                                                   g$t$31871$6Dw7t))))
                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                               g$t$31871$6Dw7t
                                                                                               '(_ .
                                                                                                   each-any)))))
                                                                                         g$t$31867$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$31867$6Dw7t
                                                                                     '(_ any)))))
                                                                               g$e$31866$6Dw7t))))
                                                                         (g$module-import$31825$6Dw7t
                                                                           (case-lambda
                                                                             ((g$e$31849$6Dw7t
                                                                                g$r$31850$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$31851$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31852$6Dw7t)
                                                                                      (if (if g$ls/false$31852$6Dw7t
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$id$31853$6Dw7t)
                                                                                                   (g$id?$28840$6Dw7t
                                                                                                     g$id$31853$6Dw7t)))
                                                                                                g$ls/false$31852$6Dw7t))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$31854$6Dw7t)
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$syntax-type$28860$6Dw7t
                                                                                                    g$id$31854$6Dw7t
                                                                                                    g$r$31850$6Dw7t)))
                                                                                               (case-lambda
                                                                                                 ((g$type$31858$6Dw7t
                                                                                                    g$value$31859$6Dw7t
                                                                                                    g$kwd$31860$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$kwd$31861$6Dw7t
                                                                                                        g$value$31862$6Dw7t
                                                                                                        g$type$31863$6Dw7t)
                                                                                                      ((case-lambda
                                                                                                         ((g$t$31864$6Dw7t)
                                                                                                          (if (eqv?
                                                                                                                g$t$31864$6Dw7t
                                                                                                                '$module)
                                                                                                            ((case-lambda
                                                                                                               ((g$iface$31865$6Dw7t)
                                                                                                                (values
                                                                                                                  (g$module-interface-exp-id*$29382$6Dw7t
                                                                                                                    g$iface$31865$6Dw7t
                                                                                                                    g$id$31854$6Dw7t)
                                                                                                                  (g$module-interface-exp-lab-vec$29378$6Dw7t
                                                                                                                    g$iface$31865$6Dw7t))))
                                                                                                             g$value$31862$6Dw7t)
                                                                                                            ((case-lambda
                                                                                                               (()
                                                                                                                (begin
                                                                                                                  '#f
                                                                                                                  (g$syntax-violation$29458$6Dw7t
                                                                                                                    '#f
                                                                                                                    '"invalid import"
                                                                                                                    g$e$31849$6Dw7t))))))))
                                                                                                       g$type$31863$6Dw7t)))
                                                                                                   g$kwd$31860$6Dw7t
                                                                                                   g$value$31859$6Dw7t
                                                                                                   g$type$31858$6Dw7t))))))
                                                                                          g$ls/false$31852$6Dw7t)
                                                                                        (g$syntax-violation$29458$6Dw7t
                                                                                          '#f
                                                                                          '"invalid syntax"
                                                                                          g$t$31851$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$31851$6Dw7t
                                                                                     '(_ any)))))
                                                                               g$e$31849$6Dw7t))))
                                                                         (g$library-import$31826$6Dw7t
                                                                           (case-lambda
                                                                             ((g$e$31835$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$31836$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$31837$6Dw7t)
                                                                                      (if g$ls/false$31837$6Dw7t
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$ctxt$31838$6Dw7t
                                                                                               g$imp*$31839$6Dw7t)
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$parse-import-spec*$29390$6Dw7t
                                                                                                    (g$syntax->datum$29461$6Dw7t
                                                                                                      g$imp*$31839$6Dw7t))))
                                                                                               (case-lambda
                                                                                                 ((g$subst-names$31842$6Dw7t
                                                                                                    g$subst-labels$31843$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$subst-labels$31844$6Dw7t
                                                                                                        g$subst-names$31845$6Dw7t)
                                                                                                      (values
                                                                                                        (g$vector-map$24094$6Dw7t
                                                                                                          (case-lambda
                                                                                                            ((g$name$31846$6Dw7t)
                                                                                                             (g$datum->stx$28823$6Dw7t
                                                                                                               g$ctxt$31838$6Dw7t
                                                                                                               g$name$31846$6Dw7t)))
                                                                                                          g$subst-names$31845$6Dw7t)
                                                                                                        g$subst-labels$31844$6Dw7t)))
                                                                                                   g$subst-labels$31843$6Dw7t
                                                                                                   g$subst-names$31842$6Dw7t))))))
                                                                                          g$ls/false$31837$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$t$31847$6Dw7t)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$31848$6Dw7t)
                                                                                                (if g$ls/false$31848$6Dw7t
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$29458$6Dw7t
                                                                                                         '#f
                                                                                                         '"invalid import form"
                                                                                                         g$e$31835$6Dw7t)))
                                                                                                    g$ls/false$31848$6Dw7t)
                                                                                                  (g$syntax-violation$29458$6Dw7t
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$31847$6Dw7t))))
                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                               g$t$31847$6Dw7t
                                                                                               '_))))
                                                                                         g$t$31836$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$31836$6Dw7t
                                                                                     '(any .
                                                                                           each-any)))))
                                                                               g$e$31835$6Dw7t)))))
                                                                 (begin
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (if (g$module-import?$31824$6Dw7t
                                                                              g$e$31746$6Dw7t)
                                                                          (g$module-import$31825$6Dw7t
                                                                            g$e$31746$6Dw7t
                                                                            g$r$31736$6Dw7t)
                                                                          (g$library-import$31826$6Dw7t
                                                                            g$e$31746$6Dw7t))))
                                                                     (case-lambda
                                                                       ((g$id*$31829$6Dw7t
                                                                          g$lab*$31830$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$lab*$31831$6Dw7t
                                                                              g$id*$31832$6Dw7t)
                                                                            (g$vector-for-each$24095$6Dw7t
                                                                              (case-lambda
                                                                                ((g$id$31833$6Dw7t
                                                                                   g$lab$31834$6Dw7t)
                                                                                 (g$extend-rib!$28801$6Dw7t
                                                                                   g$rib$31743$6Dw7t
                                                                                   g$id$31833$6Dw7t
                                                                                   g$lab$31834$6Dw7t
                                                                                   g$sd?$31745$6Dw7t)))
                                                                              g$id*$31832$6Dw7t
                                                                              g$lab*$31831$6Dw7t)))
                                                                         g$lab*$31830$6Dw7t
                                                                         g$id*$31829$6Dw7t))))
                                                                   (g$chi-body*$29385$6Dw7t
                                                                     (cdr g$e*$31735$6Dw7t)
                                                                     g$r$31736$6Dw7t
                                                                     g$mr$31737$6Dw7t
                                                                     g$lex*$31738$6Dw7t
                                                                     g$rhs*$31739$6Dw7t
                                                                     g$mod**$31740$6Dw7t
                                                                     g$kwd*$31756$6Dw7t
                                                                     g$exp*$31742$6Dw7t
                                                                     g$rib$31743$6Dw7t
                                                                     g$mix?$31744$6Dw7t
                                                                     g$sd?$31745$6Dw7t))))))
                                                           ((case-lambda
                                                              (()
                                                               (begin
                                                                 '#f
                                                                 (if g$mix?$31744$6Dw7t
                                                                   (g$chi-body*$29385$6Dw7t
                                                                     (cdr g$e*$31735$6Dw7t)
                                                                     g$r$31736$6Dw7t
                                                                     g$mr$31737$6Dw7t
                                                                     (cons
                                                                       (g$gen-lexical$28775$6Dw7t
                                                                         'dummy)
                                                                       g$lex*$31738$6Dw7t)
                                                                     (cons
                                                                       (cons
                                                                         'top-expr
                                                                         g$e$31746$6Dw7t)
                                                                       g$rhs*$31739$6Dw7t)
                                                                     g$mod**$31740$6Dw7t
                                                                     g$kwd*$31756$6Dw7t
                                                                     g$exp*$31742$6Dw7t
                                                                     g$rib$31743$6Dw7t
                                                                     '#t
                                                                     g$sd?$31745$6Dw7t)
                                                                   (values
                                                                     g$e*$31735$6Dw7t
                                                                     g$r$31736$6Dw7t
                                                                     g$mr$31737$6Dw7t
                                                                     g$lex*$31738$6Dw7t
                                                                     g$rhs*$31739$6Dw7t
                                                                     g$mod**$31740$6Dw7t
                                                                     g$kwd*$31756$6Dw7t
                                                                     g$exp*$31742$6Dw7t)))))))))))))))))))
                                  g$type$31755$6Dw7t)))
                              (if (g$id?$28840$6Dw7t g$kwd$31753$6Dw7t)
                                (cons
                                  g$kwd$31753$6Dw7t
                                  g$kwd*$31741$6Dw7t)
                                g$kwd*$31741$6Dw7t))))
                          g$kwd$31752$6Dw7t
                          g$value$31751$6Dw7t
                          g$type$31750$6Dw7t))))))
                 (car g$e*$31735$6Dw7t))))))))))
   (g$expand-transformer$29386$6Dw7t
     g$expand-transformer$32983$6Dw7t
     (case-lambda
       ((g$expr$31876$6Dw7t g$r$31877$6Dw7t)
        ((case-lambda
           ((g$rtc$31878$6Dw7t)
            ((case-lambda
               ((g$expanded-rhs$31879$6Dw7t)
                (begin
                  (g$for-each$23582$6Dw7t
                    ((case-lambda
                       ((g$mark-visit$31880$6Dw7t)
                        (case-lambda
                          ((g$x$31881$6Dw7t)
                           (begin
                             (g$invoke-library$28546$6Dw7t
                               g$x$31881$6Dw7t)
                             (g$mark-visit$31880$6Dw7t
                               g$x$31881$6Dw7t))))))
                     (g$vis-collector$29394$6Dw7t))
                    (g$rtc$31878$6Dw7t))
                  g$expanded-rhs$31879$6Dw7t)))
             ((case-lambda
                ((g$inv-collector$31886$6Dw7t
                   g$vis-collector$31887$6Dw7t
                   g$inv-collector$31888$6Dw7t
                   g$vis-collector$31889$6Dw7t)
                 ((case-lambda
                    ((g$swap$31890$6Dw7t)
                     (dynamic-wind
                       g$swap$31890$6Dw7t
                       (case-lambda
                         (()
                          (g$chi-expr$29356$6Dw7t
                            g$expr$31876$6Dw7t
                            g$r$31877$6Dw7t
                            g$r$31877$6Dw7t)))
                       g$swap$31890$6Dw7t)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$31891$6Dw7t)
                           (begin
                             (g$inv-collector$31886$6Dw7t
                               g$inv-collector$31888$6Dw7t)
                             (set! g$inv-collector$31888$6Dw7t
                               g$t$31891$6Dw7t))))
                        (g$inv-collector$31886$6Dw7t))
                       ((case-lambda
                          ((g$t$31892$6Dw7t)
                           (begin
                             (g$vis-collector$31887$6Dw7t
                               g$vis-collector$31889$6Dw7t)
                             (set! g$vis-collector$31889$6Dw7t
                               g$t$31892$6Dw7t))))
                        (g$vis-collector$31887$6Dw7t))))))))
              g$inv-collector$29393$6Dw7t
              g$vis-collector$29394$6Dw7t
              g$rtc$31878$6Dw7t
              (case-lambda ((g$x$31893$6Dw7t) (values)))))))
         (g$make-collector$29392$6Dw7t)))))
   (g$parse-exports$29387$6Dw7t
     g$parse-exports$32984$6Dw7t
     (case-lambda
       ((g$exp*$31894$6Dw7t)
        ((letrec ((g$f$31895$6Dw7t
                    (case-lambda
                      ((g$exp*$31896$6Dw7t
                         g$int*$31897$6Dw7t
                         g$ext*$31898$6Dw7t)
                       (if (null? g$exp*$31896$6Dw7t)
                         (begin
                           (if (not (g$valid-bound-ids?$28845$6Dw7t
                                      g$ext*$31898$6Dw7t))
                             (g$syntax-violation$29458$6Dw7t
                               'export
                               '"invalid exports"
                               (g$find-dups$29366$6Dw7t
                                 g$ext*$31898$6Dw7t))
                             (void))
                           (values
                             (g$map$23581$6Dw7t
                               g$syntax->datum$29461$6Dw7t
                               g$ext*$31898$6Dw7t)
                             g$int*$31897$6Dw7t))
                         ((case-lambda
                            (()
                             (begin
                               '#f
                               ((case-lambda
                                  ((g$t$31899$6Dw7t)
                                   ((case-lambda
                                      ((g$ls/false$31900$6Dw7t)
                                       (if g$ls/false$31900$6Dw7t
                                         (apply
                                           (case-lambda
                                             ((g$rename$31901$6Dw7t
                                                g$i*$31902$6Dw7t
                                                g$e*$31903$6Dw7t)
                                              (begin
                                                (if (not (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                    g$rename$31901$6Dw7t)
                                                                  'rename)
                                                           (if (g$for-all$23579$6Dw7t
                                                                 g$id?$28840$6Dw7t
                                                                 g$i*$31902$6Dw7t)
                                                             (begin
                                                               '#f
                                                               (g$for-all$23579$6Dw7t
                                                                 g$id?$28840$6Dw7t
                                                                 g$e*$31903$6Dw7t))
                                                             '#f)
                                                           '#f))
                                                  (g$syntax-violation$29458$6Dw7t
                                                    'export
                                                    '"invalid export specifier"
                                                    (car g$exp*$31896$6Dw7t))
                                                  (void))
                                                (g$f$31895$6Dw7t
                                                  (cdr g$exp*$31896$6Dw7t)
                                                  (g$append$23587$6Dw7t
                                                    g$i*$31902$6Dw7t
                                                    g$int*$31897$6Dw7t)
                                                  (g$append$23587$6Dw7t
                                                    g$e*$31903$6Dw7t
                                                    g$ext*$31898$6Dw7t)))))
                                           g$ls/false$31900$6Dw7t)
                                         ((case-lambda
                                            ((g$t$31904$6Dw7t)
                                             ((case-lambda
                                                ((g$ls/false$31905$6Dw7t)
                                                 (if g$ls/false$31905$6Dw7t
                                                   (apply
                                                     (case-lambda
                                                       ((g$ie$31906$6Dw7t)
                                                        (begin
                                                          (if (not (g$id?$28840$6Dw7t
                                                                     g$ie$31906$6Dw7t))
                                                            (g$syntax-violation$29458$6Dw7t
                                                              'export
                                                              '"invalid export"
                                                              g$ie$31906$6Dw7t)
                                                            (void))
                                                          (g$f$31895$6Dw7t
                                                            (cdr g$exp*$31896$6Dw7t)
                                                            (cons
                                                              g$ie$31906$6Dw7t
                                                              g$int*$31897$6Dw7t)
                                                            (cons
                                                              g$ie$31906$6Dw7t
                                                              g$ext*$31898$6Dw7t)))))
                                                     g$ls/false$31905$6Dw7t)
                                                   (g$syntax-violation$29458$6Dw7t
                                                     '#f
                                                     '"invalid syntax"
                                                     g$t$31904$6Dw7t))))
                                              (g$syntax-dispatch$29338$6Dw7t
                                                g$t$31904$6Dw7t
                                                'any))))
                                          g$t$31899$6Dw7t))))
                                    (g$syntax-dispatch$29338$6Dw7t
                                      g$t$31899$6Dw7t
                                      '(any . #(each (any any)))))))
                                (car g$exp*$31896$6Dw7t)))))))))))
           g$f$31895$6Dw7t)
         g$exp*$31894$6Dw7t
         '()
         '()))))
   (g$parse-library-name$29388$6Dw7t
     g$parse-library-name$32985$6Dw7t
     (case-lambda
       ((g$spec$31907$6Dw7t)
        (letrec* ((g$parse$31908$6Dw7t
                    (case-lambda
                      ((g$x$31915$6Dw7t)
                       ((case-lambda
                          ((g$t$31916$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$31917$6Dw7t)
                               (if (if g$ls/false$31917$6Dw7t
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$31918$6Dw7t)
                                            (g$for-all$23579$6Dw7t
                                              (case-lambda
                                                ((g$x$31919$6Dw7t)
                                                 ((case-lambda
                                                    ((g$x$31920$6Dw7t)
                                                     (if (g$integer?$25056$6Dw7t
                                                           g$x$31920$6Dw7t)
                                                       (begin
                                                         '#f
                                                         (g$exact?$25051$6Dw7t
                                                           g$x$31920$6Dw7t))
                                                       '#f)))
                                                  (g$syntax->datum$29461$6Dw7t
                                                    g$x$31919$6Dw7t))))
                                              g$v*$31918$6Dw7t)))
                                         g$ls/false$31917$6Dw7t))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$31921$6Dw7t)
                                      (values
                                        '()
                                        (g$map$23581$6Dw7t
                                          g$syntax->datum$29461$6Dw7t
                                          g$v*$31921$6Dw7t))))
                                   g$ls/false$31917$6Dw7t)
                                 ((case-lambda
                                    ((g$t$31922$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$31923$6Dw7t)
                                         (if (if g$ls/false$31923$6Dw7t
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$31924$6Dw7t
                                                        g$rest$31925$6Dw7t)
                                                      (g$symbol?$24007$6Dw7t
                                                        (g$syntax->datum$29461$6Dw7t
                                                          g$x$31924$6Dw7t))))
                                                   g$ls/false$31923$6Dw7t))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$31926$6Dw7t
                                                  g$rest$31927$6Dw7t)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$31908$6Dw7t
                                                       g$rest$31927$6Dw7t)))
                                                  (case-lambda
                                                    ((g$x*$31930$6Dw7t
                                                       g$v*$31931$6Dw7t)
                                                     ((case-lambda
                                                        ((g$v*$31932$6Dw7t
                                                           g$x*$31933$6Dw7t)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$29461$6Dw7t
                                                               g$x$31926$6Dw7t)
                                                             g$x*$31933$6Dw7t)
                                                           g$v*$31932$6Dw7t)))
                                                      g$v*$31931$6Dw7t
                                                      g$x*$31930$6Dw7t))))))
                                             g$ls/false$31923$6Dw7t)
                                           ((case-lambda
                                              ((g$t$31934$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$31935$6Dw7t)
                                                   (if g$ls/false$31935$6Dw7t
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (values
                                                            '()
                                                            '())))
                                                       g$ls/false$31935$6Dw7t)
                                                     ((case-lambda
                                                        ((g$t$31936$6Dw7t)
                                                         ((case-lambda
                                                            ((g$ls/false$31937$6Dw7t)
                                                             (if g$ls/false$31937$6Dw7t
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$29458$6Dw7t
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$31907$6Dw7t)))
                                                                 g$ls/false$31937$6Dw7t)
                                                               (g$syntax-violation$29458$6Dw7t
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$31936$6Dw7t))))
                                                          (g$syntax-dispatch$29338$6Dw7t
                                                            g$t$31936$6Dw7t
                                                            '_))))
                                                      g$t$31934$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$31934$6Dw7t
                                                  '()))))
                                            g$t$31922$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$31922$6Dw7t
                                        '(any . any)))))
                                  g$t$31916$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$31916$6Dw7t
                              '(each-any)))))
                        g$x$31915$6Dw7t)))))
          (call-with-values
            (case-lambda (() (g$parse$31908$6Dw7t g$spec$31907$6Dw7t)))
            (case-lambda
              ((g$name*$31911$6Dw7t g$ver*$31912$6Dw7t)
               ((case-lambda
                  ((g$ver*$31913$6Dw7t g$name*$31914$6Dw7t)
                   (begin
                     (if (null? g$name*$31914$6Dw7t)
                       (g$syntax-violation$29458$6Dw7t
                         '#f
                         '"empty library name"
                         g$spec$31907$6Dw7t)
                       (void))
                     (values g$name*$31914$6Dw7t g$ver*$31913$6Dw7t))))
                g$ver*$31912$6Dw7t
                g$name*$31911$6Dw7t))))))))
   (g$parse-library$29389$6Dw7t
     g$parse-library$32986$6Dw7t
     (case-lambda
       ((g$e$31938$6Dw7t)
        ((case-lambda
           ((g$t$31939$6Dw7t)
            ((case-lambda
               ((g$ls/false$31940$6Dw7t)
                (if (if g$ls/false$31940$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$31941$6Dw7t
                               g$name*$31942$6Dw7t
                               g$export$31943$6Dw7t
                               g$exp*$31944$6Dw7t
                               g$import$31945$6Dw7t
                               g$imp*$31946$6Dw7t
                               g$b*$31947$6Dw7t)
                             (if (eq? (g$syntax->datum$29461$6Dw7t
                                        g$export$31943$6Dw7t)
                                      'export)
                               (if (eq? (g$syntax->datum$29461$6Dw7t
                                          g$import$31945$6Dw7t)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$29461$6Dw7t
                                          g$library$31941$6Dw7t)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$31940$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$31948$6Dw7t
                         g$name*$31949$6Dw7t
                         g$export$31950$6Dw7t
                         g$exp*$31951$6Dw7t
                         g$import$31952$6Dw7t
                         g$imp*$31953$6Dw7t
                         g$b*$31954$6Dw7t)
                       (values
                         g$name*$31949$6Dw7t
                         g$exp*$31951$6Dw7t
                         g$imp*$31953$6Dw7t
                         g$b*$31954$6Dw7t)))
                    g$ls/false$31940$6Dw7t)
                  ((case-lambda
                     ((g$t$31955$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$31956$6Dw7t)
                          (if g$ls/false$31956$6Dw7t
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$29458$6Dw7t
                                   '#f
                                   '"malformed library"
                                   g$e$31938$6Dw7t)))
                              g$ls/false$31956$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$31955$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$31955$6Dw7t
                         '_))))
                   g$t$31939$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$31939$6Dw7t
               '(any each-any
                     (any . each-any)
                     (any . each-any)
                     .
                     each-any)))))
         g$e$31938$6Dw7t))))
   (g$parse-import-spec*$29390$6Dw7t
     g$parse-import-spec*$32987$6Dw7t
     (case-lambda
       ((g$imp*$31957$6Dw7t)
        (letrec* ((g$idsyn?$31958$6Dw7t
                    (case-lambda
                      ((g$x$32218$6Dw7t)
                       (g$symbol?$24007$6Dw7t
                         (g$syntax->datum$29461$6Dw7t
                           g$x$32218$6Dw7t)))))
                  (g$dup-error$31959$6Dw7t
                    (case-lambda
                      ((g$name$32217$6Dw7t)
                       (g$syntax-violation$29458$6Dw7t
                         'import
                         '"two imports with different bindings"
                         g$name$32217$6Dw7t))))
                  (g$merge-substs$31960$6Dw7t
                    (case-lambda
                      ((g$s$32208$6Dw7t g$subst$32209$6Dw7t)
                       (letrec* ((g$insert-to-subst$32210$6Dw7t
                                   (case-lambda
                                     ((g$a$32211$6Dw7t
                                        g$subst$32212$6Dw7t)
                                      ((case-lambda
                                         ((g$name$32213$6Dw7t
                                            g$label$32214$6Dw7t)
                                          ((case-lambda
                                             ((g$t$32215$6Dw7t)
                                              (if g$t$32215$6Dw7t
                                                ((case-lambda
                                                   ((g$x$32216$6Dw7t)
                                                    (if (eq? (cdr g$x$32216$6Dw7t)
                                                             g$label$32214$6Dw7t)
                                                      g$subst$32212$6Dw7t
                                                      ((case-lambda
                                                         (()
                                                          (begin
                                                            '#f
                                                            (g$dup-error$31959$6Dw7t
                                                              g$name$32213$6Dw7t))))))))
                                                 g$t$32215$6Dw7t)
                                                ((case-lambda
                                                   (()
                                                    (begin
                                                      '#f
                                                      (cons
                                                        g$a$32211$6Dw7t
                                                        g$subst$32212$6Dw7t))))))))
                                           (g$assq$23565$6Dw7t
                                             g$name$32213$6Dw7t
                                             g$subst$32212$6Dw7t))))
                                       (car g$a$32211$6Dw7t)
                                       (cdr g$a$32211$6Dw7t))))))
                         (if (null? g$s$32208$6Dw7t)
                           g$subst$32209$6Dw7t
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$insert-to-subst$32210$6Dw7t
                                   (car g$s$32208$6Dw7t)
                                   (g$merge-substs$31960$6Dw7t
                                     (cdr g$s$32208$6Dw7t)
                                     g$subst$32209$6Dw7t)))))))))))
                  (g$exclude*$31961$6Dw7t
                    (case-lambda
                      ((g$sym*$32184$6Dw7t g$subst$32185$6Dw7t)
                       (letrec* ((g$exclude$32186$6Dw7t
                                   (case-lambda
                                     ((g$sym$32199$6Dw7t
                                        g$subst$32200$6Dw7t)
                                      (if (null? g$subst$32200$6Dw7t)
                                        (g$syntax-violation$29458$6Dw7t
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$32199$6Dw7t)
                                        (if (eq? g$sym$32199$6Dw7t
                                                 (g$caar$24044$6Dw7t
                                                   g$subst$32200$6Dw7t))
                                          (values
                                            (g$cdar$24046$6Dw7t
                                              g$subst$32200$6Dw7t)
                                            (cdr g$subst$32200$6Dw7t))
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                ((case-lambda
                                                   ((g$a$32201$6Dw7t)
                                                    (call-with-values
                                                      (case-lambda
                                                        (()
                                                         (g$exclude$32186$6Dw7t
                                                           g$sym$32199$6Dw7t
                                                           (cdr g$subst$32200$6Dw7t))))
                                                      (case-lambda
                                                        ((g$old$32204$6Dw7t
                                                           g$subst$32205$6Dw7t)
                                                         ((case-lambda
                                                            ((g$subst$32206$6Dw7t
                                                               g$old$32207$6Dw7t)
                                                             (values
                                                               g$old$32207$6Dw7t
                                                               (cons
                                                                 g$a$32201$6Dw7t
                                                                 g$subst$32206$6Dw7t))))
                                                          g$subst$32205$6Dw7t
                                                          g$old$32204$6Dw7t))))))
                                                 (car g$subst$32200$6Dw7t))))))))))))
                         (if (null? g$sym*$32184$6Dw7t)
                           (values '() g$subst$32185$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$exclude$32186$6Dw7t
                                        (car g$sym*$32184$6Dw7t)
                                        g$subst$32185$6Dw7t)))
                                   (case-lambda
                                     ((g$old$32189$6Dw7t
                                        g$subst$32190$6Dw7t)
                                      ((case-lambda
                                         ((g$subst$32191$6Dw7t
                                            g$old$32192$6Dw7t)
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$exclude*$31961$6Dw7t
                                                 (cdr g$sym*$32184$6Dw7t)
                                                 g$subst$32191$6Dw7t)))
                                            (case-lambda
                                              ((g$old*$32195$6Dw7t
                                                 g$subst$32196$6Dw7t)
                                               ((case-lambda
                                                  ((g$subst$32197$6Dw7t
                                                     g$old*$32198$6Dw7t)
                                                   (values
                                                     (cons
                                                       g$old$32192$6Dw7t
                                                       g$old*$32198$6Dw7t)
                                                     g$subst$32197$6Dw7t)))
                                                g$subst$32196$6Dw7t
                                                g$old*$32195$6Dw7t))))))
                                       g$subst$32190$6Dw7t
                                       g$old$32189$6Dw7t)))))))))))))
                  (g$find*$31962$6Dw7t
                    (case-lambda
                      ((g$sym*$32180$6Dw7t g$subst$32181$6Dw7t)
                       (g$map$23581$6Dw7t
                         (case-lambda
                           ((g$x$32182$6Dw7t)
                            ((case-lambda
                               ((g$t$32183$6Dw7t)
                                (if g$t$32183$6Dw7t
                                  (cdr g$t$32183$6Dw7t)
                                  ((case-lambda
                                     (()
                                      (begin
                                        '#f
                                        (g$syntax-violation$29458$6Dw7t
                                          'import
                                          '"cannot find identifier"
                                          g$x$32182$6Dw7t))))))))
                             (g$assq$23565$6Dw7t
                               g$x$32182$6Dw7t
                               g$subst$32181$6Dw7t))))
                         g$sym*$32180$6Dw7t))))
                  (g$rem*$31963$6Dw7t
                    (case-lambda
                      ((g$sym*$32176$6Dw7t g$subst$32177$6Dw7t)
                       ((letrec ((g$f$32178$6Dw7t
                                   (case-lambda
                                     ((g$subst$32179$6Dw7t)
                                      (if (null? g$subst$32179$6Dw7t)
                                        '()
                                        (if (g$memq$23569$6Dw7t
                                              (g$caar$24044$6Dw7t
                                                g$subst$32179$6Dw7t)
                                              g$sym*$32176$6Dw7t)
                                          (g$f$32178$6Dw7t
                                            (cdr g$subst$32179$6Dw7t))
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (cons
                                                  (car g$subst$32179$6Dw7t)
                                                  (g$f$32178$6Dw7t
                                                    (cdr g$subst$32179$6Dw7t)))))))))))))
                          g$f$32178$6Dw7t)
                        g$subst$32177$6Dw7t))))
                  (g$remove-dups$31964$6Dw7t
                    (case-lambda
                      ((g$ls$32175$6Dw7t)
                       (if (null? g$ls$32175$6Dw7t)
                         '()
                         (if (g$memq$23569$6Dw7t
                               (car g$ls$32175$6Dw7t)
                               (cdr g$ls$32175$6Dw7t))
                           (g$remove-dups$31964$6Dw7t
                             (cdr g$ls$32175$6Dw7t))
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (cons
                                   (car g$ls$32175$6Dw7t)
                                   (g$remove-dups$31964$6Dw7t
                                     (cdr g$ls$32175$6Dw7t))))))))))))
                  (g$parse-library-name$31965$6Dw7t
                    (case-lambda
                      ((g$spec$32059$6Dw7t)
                       (letrec* ((g$subversion?$32060$6Dw7t
                                   (case-lambda
                                     ((g$x$32173$6Dw7t)
                                      ((case-lambda
                                         ((g$x$32174$6Dw7t)
                                          (if (g$integer?$25056$6Dw7t
                                                g$x$32174$6Dw7t)
                                            (if (g$exact?$25051$6Dw7t
                                                  g$x$32174$6Dw7t)
                                              (begin
                                                '#f
                                                (g$>=$25073$6Dw7t
                                                  g$x$32174$6Dw7t
                                                  '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$29461$6Dw7t
                                         g$x$32173$6Dw7t)))))
                                 (g$subversion-pred$32061$6Dw7t
                                   (case-lambda
                                     ((g$x*$32125$6Dw7t)
                                      ((case-lambda
                                         ((g$t$32126$6Dw7t)
                                          ((case-lambda
                                             ((g$ls/false$32127$6Dw7t)
                                              (if (if g$ls/false$32127$6Dw7t
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$32128$6Dw7t)
                                                           (g$subversion?$32060$6Dw7t
                                                             g$n$32128$6Dw7t)))
                                                        g$ls/false$32127$6Dw7t))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$32129$6Dw7t)
                                                     (case-lambda
                                                       ((g$x$32130$6Dw7t)
                                                        (g$=$25069$6Dw7t
                                                          g$x$32130$6Dw7t
                                                          (g$syntax->datum$29461$6Dw7t
                                                            g$n$32129$6Dw7t))))))
                                                  g$ls/false$32127$6Dw7t)
                                                ((case-lambda
                                                   ((g$t$32131$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$32132$6Dw7t)
                                                        (if (if g$ls/false$32132$6Dw7t
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$32133$6Dw7t
                                                                       g$sub*$32134$6Dw7t)
                                                                     (eq? (g$syntax->datum$29461$6Dw7t
                                                                            g$p?$32133$6Dw7t)
                                                                          'and)))
                                                                  g$ls/false$32132$6Dw7t))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$32135$6Dw7t
                                                                 g$sub*$32136$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$p*$32137$6Dw7t)
                                                                   (case-lambda
                                                                     ((g$x$32138$6Dw7t)
                                                                      (g$for-all$23579$6Dw7t
                                                                        (case-lambda
                                                                          ((g$p$32139$6Dw7t)
                                                                           (g$p$32139$6Dw7t
                                                                             g$x$32138$6Dw7t)))
                                                                        g$p*$32137$6Dw7t)))))
                                                                (g$map$23581$6Dw7t
                                                                  g$subversion-pred$32061$6Dw7t
                                                                  g$sub*$32136$6Dw7t))))
                                                            g$ls/false$32132$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$32140$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$32141$6Dw7t)
                                                                  (if (if g$ls/false$32141$6Dw7t
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$32142$6Dw7t
                                                                                 g$sub*$32143$6Dw7t)
                                                                               (eq? (g$syntax->datum$29461$6Dw7t
                                                                                      g$p?$32142$6Dw7t)
                                                                                    'or)))
                                                                            g$ls/false$32141$6Dw7t))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$32144$6Dw7t
                                                                           g$sub*$32145$6Dw7t)
                                                                         ((case-lambda
                                                                            ((g$p*$32146$6Dw7t)
                                                                             (case-lambda
                                                                               ((g$x$32147$6Dw7t)
                                                                                (g$exists$23580$6Dw7t
                                                                                  (case-lambda
                                                                                    ((g$p$32148$6Dw7t)
                                                                                     (g$p$32148$6Dw7t
                                                                                       g$x$32147$6Dw7t)))
                                                                                  g$p*$32146$6Dw7t)))))
                                                                          (g$map$23581$6Dw7t
                                                                            g$subversion-pred$32061$6Dw7t
                                                                            g$sub*$32145$6Dw7t))))
                                                                      g$ls/false$32141$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$t$32149$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ls/false$32150$6Dw7t)
                                                                            (if (if g$ls/false$32150$6Dw7t
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$32151$6Dw7t
                                                                                           g$sub$32152$6Dw7t)
                                                                                         (eq? (g$syntax->datum$29461$6Dw7t
                                                                                                g$p?$32151$6Dw7t)
                                                                                              'not)))
                                                                                      g$ls/false$32150$6Dw7t))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$32153$6Dw7t
                                                                                     g$sub$32154$6Dw7t)
                                                                                   ((case-lambda
                                                                                      ((g$p$32155$6Dw7t)
                                                                                       (case-lambda
                                                                                         ((g$x$32156$6Dw7t)
                                                                                          (not (g$p$32155$6Dw7t
                                                                                                 g$x$32156$6Dw7t))))))
                                                                                    (g$subversion-pred$32061$6Dw7t
                                                                                      g$sub$32154$6Dw7t))))
                                                                                g$ls/false$32150$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$32157$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$32158$6Dw7t)
                                                                                      (if (if g$ls/false$32158$6Dw7t
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$32159$6Dw7t
                                                                                                     g$n$32160$6Dw7t)
                                                                                                   (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                                                              g$p?$32159$6Dw7t)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$32060$6Dw7t
                                                                                                         g$n$32160$6Dw7t))
                                                                                                     '#f)))
                                                                                                g$ls/false$32158$6Dw7t))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$32161$6Dw7t
                                                                                               g$n$32162$6Dw7t)
                                                                                             (case-lambda
                                                                                               ((g$x$32163$6Dw7t)
                                                                                                (g$<=$25071$6Dw7t
                                                                                                  g$x$32163$6Dw7t
                                                                                                  (g$syntax->datum$29461$6Dw7t
                                                                                                    g$n$32162$6Dw7t))))))
                                                                                          g$ls/false$32158$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$t$32164$6Dw7t)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$32165$6Dw7t)
                                                                                                (if (if g$ls/false$32165$6Dw7t
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$32166$6Dw7t
                                                                                                               g$n$32167$6Dw7t)
                                                                                                             (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                                                                        g$p?$32166$6Dw7t)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$32060$6Dw7t
                                                                                                                   g$n$32167$6Dw7t))
                                                                                                               '#f)))
                                                                                                          g$ls/false$32165$6Dw7t))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$32168$6Dw7t
                                                                                                         g$n$32169$6Dw7t)
                                                                                                       (case-lambda
                                                                                                         ((g$x$32170$6Dw7t)
                                                                                                          (g$>=$25073$6Dw7t
                                                                                                            g$x$32170$6Dw7t
                                                                                                            (g$syntax->datum$29461$6Dw7t
                                                                                                              g$n$32169$6Dw7t))))))
                                                                                                    g$ls/false$32165$6Dw7t)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$32171$6Dw7t)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$32172$6Dw7t)
                                                                                                          (if g$ls/false$32172$6Dw7t
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$29458$6Dw7t
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$32059$6Dw7t
                                                                                                                   g$x*$32125$6Dw7t)))
                                                                                                              g$ls/false$32172$6Dw7t)
                                                                                                            (g$syntax-violation$29458$6Dw7t
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$32171$6Dw7t))))
                                                                                                       (g$syntax-dispatch$29338$6Dw7t
                                                                                                         g$t$32171$6Dw7t
                                                                                                         '_))))
                                                                                                   g$t$32164$6Dw7t))))
                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                               g$t$32164$6Dw7t
                                                                                               '(any any)))))
                                                                                         g$t$32157$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$32157$6Dw7t
                                                                                     '(any any)))))
                                                                               g$t$32149$6Dw7t))))
                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                           g$t$32149$6Dw7t
                                                                           '(any any)))))
                                                                     g$t$32140$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$32140$6Dw7t
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$32131$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$32131$6Dw7t
                                                       '(any .
                                                             each-any)))))
                                                 g$t$32126$6Dw7t))))
                                           (g$syntax-dispatch$29338$6Dw7t
                                             g$t$32126$6Dw7t
                                             'any))))
                                       g$x*$32125$6Dw7t))))
                                 (g$version-pred$32062$6Dw7t
                                   (case-lambda
                                     ((g$x*$32085$6Dw7t)
                                      ((case-lambda
                                         ((g$t$32086$6Dw7t)
                                          ((case-lambda
                                             ((g$ls/false$32087$6Dw7t)
                                              (if g$ls/false$32087$6Dw7t
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$32088$6Dw7t)
                                                        '#t))))
                                                  g$ls/false$32087$6Dw7t)
                                                ((case-lambda
                                                   ((g$t$32089$6Dw7t)
                                                    ((case-lambda
                                                       ((g$ls/false$32090$6Dw7t)
                                                        (if (if g$ls/false$32090$6Dw7t
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$32091$6Dw7t
                                                                       g$ver*$32092$6Dw7t)
                                                                     (eq? (g$syntax->datum$29461$6Dw7t
                                                                            g$c$32091$6Dw7t)
                                                                          'and)))
                                                                  g$ls/false$32090$6Dw7t))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$32093$6Dw7t
                                                                 g$ver*$32094$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$p*$32095$6Dw7t)
                                                                   (case-lambda
                                                                     ((g$x$32096$6Dw7t)
                                                                      (g$for-all$23579$6Dw7t
                                                                        (case-lambda
                                                                          ((g$p$32097$6Dw7t)
                                                                           (g$p$32097$6Dw7t
                                                                             g$x$32096$6Dw7t)))
                                                                        g$p*$32095$6Dw7t)))))
                                                                (g$map$23581$6Dw7t
                                                                  g$version-pred$32062$6Dw7t
                                                                  g$ver*$32094$6Dw7t))))
                                                            g$ls/false$32090$6Dw7t)
                                                          ((case-lambda
                                                             ((g$t$32098$6Dw7t)
                                                              ((case-lambda
                                                                 ((g$ls/false$32099$6Dw7t)
                                                                  (if (if g$ls/false$32099$6Dw7t
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$32100$6Dw7t
                                                                                 g$ver*$32101$6Dw7t)
                                                                               (eq? (g$syntax->datum$29461$6Dw7t
                                                                                      g$c$32100$6Dw7t)
                                                                                    'or)))
                                                                            g$ls/false$32099$6Dw7t))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$32102$6Dw7t
                                                                           g$ver*$32103$6Dw7t)
                                                                         ((case-lambda
                                                                            ((g$p*$32104$6Dw7t)
                                                                             (case-lambda
                                                                               ((g$x$32105$6Dw7t)
                                                                                (g$exists$23580$6Dw7t
                                                                                  (case-lambda
                                                                                    ((g$p$32106$6Dw7t)
                                                                                     (g$p$32106$6Dw7t
                                                                                       g$x$32105$6Dw7t)))
                                                                                  g$p*$32104$6Dw7t)))))
                                                                          (g$map$23581$6Dw7t
                                                                            g$version-pred$32062$6Dw7t
                                                                            g$ver*$32103$6Dw7t))))
                                                                      g$ls/false$32099$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$t$32107$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$ls/false$32108$6Dw7t)
                                                                            (if (if g$ls/false$32108$6Dw7t
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$32109$6Dw7t
                                                                                           g$ver$32110$6Dw7t)
                                                                                         (eq? (g$syntax->datum$29461$6Dw7t
                                                                                                g$c$32109$6Dw7t)
                                                                                              'not)))
                                                                                      g$ls/false$32108$6Dw7t))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$32111$6Dw7t
                                                                                     g$ver$32112$6Dw7t)
                                                                                   ((case-lambda
                                                                                      ((g$p$32113$6Dw7t)
                                                                                       (case-lambda
                                                                                         ((g$x$32114$6Dw7t)
                                                                                          (not (g$p$32113$6Dw7t
                                                                                                 g$x$32114$6Dw7t))))))
                                                                                    (g$version-pred$32062$6Dw7t
                                                                                      g$ver$32112$6Dw7t))))
                                                                                g$ls/false$32108$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$t$32115$6Dw7t)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$32116$6Dw7t)
                                                                                      (if g$ls/false$32116$6Dw7t
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$32117$6Dw7t)
                                                                                             ((case-lambda
                                                                                                ((g$p*$32118$6Dw7t)
                                                                                                 (case-lambda
                                                                                                   ((g$x$32119$6Dw7t)
                                                                                                    ((letrec ((g$f$32120$6Dw7t
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$32121$6Dw7t
                                                                                                                     g$x$32122$6Dw7t)
                                                                                                                   (if (null?
                                                                                                                         g$p*$32121$6Dw7t)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$32122$6Dw7t)
                                                                                                                       '#f
                                                                                                                       ((case-lambda
                                                                                                                          (()
                                                                                                                           (begin
                                                                                                                             '#f
                                                                                                                             (if ((car g$p*$32121$6Dw7t)
                                                                                                                                  (car g$x$32122$6Dw7t))
                                                                                                                               (begin
                                                                                                                                 '#f
                                                                                                                                 (g$f$32120$6Dw7t
                                                                                                                                   (cdr g$p*$32121$6Dw7t)
                                                                                                                                   (cdr g$x$32122$6Dw7t)))
                                                                                                                               '#f)))))))))))
                                                                                                       g$f$32120$6Dw7t)
                                                                                                     g$p*$32118$6Dw7t
                                                                                                     g$x$32119$6Dw7t)))))
                                                                                              (g$map$23581$6Dw7t
                                                                                                g$subversion-pred$32061$6Dw7t
                                                                                                g$sub*$32117$6Dw7t))))
                                                                                          g$ls/false$32116$6Dw7t)
                                                                                        ((case-lambda
                                                                                           ((g$t$32123$6Dw7t)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$32124$6Dw7t)
                                                                                                (if g$ls/false$32124$6Dw7t
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$29458$6Dw7t
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$32059$6Dw7t
                                                                                                         g$x*$32085$6Dw7t)))
                                                                                                    g$ls/false$32124$6Dw7t)
                                                                                                  (g$syntax-violation$29458$6Dw7t
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$32123$6Dw7t))))
                                                                                             (g$syntax-dispatch$29338$6Dw7t
                                                                                               g$t$32123$6Dw7t
                                                                                               '_))))
                                                                                         g$t$32115$6Dw7t))))
                                                                                   (g$syntax-dispatch$29338$6Dw7t
                                                                                     g$t$32115$6Dw7t
                                                                                     'each-any))))
                                                                               g$t$32107$6Dw7t))))
                                                                         (g$syntax-dispatch$29338$6Dw7t
                                                                           g$t$32107$6Dw7t
                                                                           '(any any)))))
                                                                     g$t$32098$6Dw7t))))
                                                               (g$syntax-dispatch$29338$6Dw7t
                                                                 g$t$32098$6Dw7t
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$32089$6Dw7t))))
                                                     (g$syntax-dispatch$29338$6Dw7t
                                                       g$t$32089$6Dw7t
                                                       '(any .
                                                             each-any)))))
                                                 g$t$32086$6Dw7t))))
                                           (g$syntax-dispatch$29338$6Dw7t
                                             g$t$32086$6Dw7t
                                             '()))))
                                       g$x*$32085$6Dw7t)))))
                         ((letrec ((g$f$32063$6Dw7t
                                     (case-lambda
                                       ((g$x$32064$6Dw7t)
                                        ((case-lambda
                                           ((g$t$32065$6Dw7t)
                                            ((case-lambda
                                               ((g$ls/false$32066$6Dw7t)
                                                (if g$ls/false$32066$6Dw7t
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$32067$6Dw7t)
                                                       (values
                                                         '()
                                                         (g$version-pred$32062$6Dw7t
                                                           g$version-spec*$32067$6Dw7t))))
                                                    g$ls/false$32066$6Dw7t)
                                                  ((case-lambda
                                                     ((g$t$32068$6Dw7t)
                                                      ((case-lambda
                                                         ((g$ls/false$32069$6Dw7t)
                                                          (if (if g$ls/false$32069$6Dw7t
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$32070$6Dw7t
                                                                         g$x*$32071$6Dw7t)
                                                                       (g$idsyn?$31958$6Dw7t
                                                                         g$x$32070$6Dw7t)))
                                                                    g$ls/false$32069$6Dw7t))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$32072$6Dw7t
                                                                   g$x*$32073$6Dw7t)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$32063$6Dw7t
                                                                        g$x*$32073$6Dw7t)))
                                                                   (case-lambda
                                                                     ((g$name$32076$6Dw7t
                                                                        g$pred$32077$6Dw7t)
                                                                      ((case-lambda
                                                                         ((g$pred$32078$6Dw7t
                                                                            g$name$32079$6Dw7t)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$29461$6Dw7t
                                                                                g$x$32072$6Dw7t)
                                                                              g$name$32079$6Dw7t)
                                                                            g$pred$32078$6Dw7t)))
                                                                       g$pred$32077$6Dw7t
                                                                       g$name$32076$6Dw7t))))))
                                                              g$ls/false$32069$6Dw7t)
                                                            ((case-lambda
                                                               ((g$t$32080$6Dw7t)
                                                                ((case-lambda
                                                                   ((g$ls/false$32081$6Dw7t)
                                                                    (if g$ls/false$32081$6Dw7t
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$32082$6Dw7t)
                                                                                '#t)))))
                                                                        g$ls/false$32081$6Dw7t)
                                                                      ((case-lambda
                                                                         ((g$t$32083$6Dw7t)
                                                                          ((case-lambda
                                                                             ((g$ls/false$32084$6Dw7t)
                                                                              (if g$ls/false$32084$6Dw7t
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$29458$6Dw7t
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$32059$6Dw7t)))
                                                                                  g$ls/false$32084$6Dw7t)
                                                                                (g$syntax-violation$29458$6Dw7t
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$32083$6Dw7t))))
                                                                           (g$syntax-dispatch$29338$6Dw7t
                                                                             g$t$32083$6Dw7t
                                                                             '_))))
                                                                       g$t$32080$6Dw7t))))
                                                                 (g$syntax-dispatch$29338$6Dw7t
                                                                   g$t$32080$6Dw7t
                                                                   '()))))
                                                             g$t$32068$6Dw7t))))
                                                       (g$syntax-dispatch$29338$6Dw7t
                                                         g$t$32068$6Dw7t
                                                         '(any .
                                                               any)))))
                                                   g$t$32065$6Dw7t))))
                                             (g$syntax-dispatch$29338$6Dw7t
                                               g$t$32065$6Dw7t
                                               '(each-any)))))
                                         g$x$32064$6Dw7t)))))
                            g$f$32063$6Dw7t)
                          g$spec$32059$6Dw7t)))))
                  (g$import-library$31966$6Dw7t
                    (case-lambda
                      ((g$spec*$32051$6Dw7t)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$31965$6Dw7t
                              g$spec*$32051$6Dw7t)))
                         (case-lambda
                           ((g$name$32054$6Dw7t g$pred$32055$6Dw7t)
                            ((case-lambda
                               ((g$pred$32056$6Dw7t g$name$32057$6Dw7t)
                                (begin
                                  (if (null? g$name$32057$6Dw7t)
                                    (g$syntax-violation$29458$6Dw7t
                                      'import
                                      '"empty library name"
                                      g$spec*$32051$6Dw7t)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$32058$6Dw7t)
                                      (begin
                                        (if (not g$lib$32058$6Dw7t)
                                          (g$syntax-violation$29458$6Dw7t
                                            'import
                                            '"cannot find library with required name"
                                            g$name$32057$6Dw7t)
                                          (void))
                                        (if (not (g$pred$32056$6Dw7t
                                                   (g$library-version$28499$6Dw7t
                                                     g$lib$32058$6Dw7t)))
                                          (g$syntax-violation$29458$6Dw7t
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$32051$6Dw7t
                                            g$lib$32058$6Dw7t)
                                          (void))
                                        ((g$imp-collector$29395$6Dw7t)
                                         g$lib$32058$6Dw7t)
                                        (g$library-subst$28503$6Dw7t
                                          g$lib$32058$6Dw7t))))
                                   (g$find-library-by-name$28539$6Dw7t
                                     g$name$32057$6Dw7t)))))
                             g$pred$32055$6Dw7t
                             g$name$32054$6Dw7t)))))))
                  (g$get-import$31967$6Dw7t
                    (case-lambda
                      ((g$spec$31980$6Dw7t)
                       ((case-lambda
                          ((g$t$31981$6Dw7t)
                           ((case-lambda
                              ((g$ls/false$31982$6Dw7t)
                               (if (if g$ls/false$31982$6Dw7t
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$31983$6Dw7t
                                              g$x*$31984$6Dw7t)
                                            (not (g$memq$23569$6Dw7t
                                                   (g$syntax->datum$29461$6Dw7t
                                                     g$x$31983$6Dw7t)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$31982$6Dw7t))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$31985$6Dw7t g$x*$31986$6Dw7t)
                                      (g$import-library$31966$6Dw7t
                                        (cons
                                          g$x$31985$6Dw7t
                                          g$x*$31986$6Dw7t))))
                                   g$ls/false$31982$6Dw7t)
                                 ((case-lambda
                                    ((g$t$31987$6Dw7t)
                                     ((case-lambda
                                        ((g$ls/false$31988$6Dw7t)
                                         (if (if g$ls/false$31988$6Dw7t
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$31989$6Dw7t
                                                        g$isp$31990$6Dw7t
                                                        g$old*$31991$6Dw7t
                                                        g$new*$31992$6Dw7t)
                                                      (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                 g$rename$31989$6Dw7t)
                                                               'rename)
                                                        (if (g$for-all$23579$6Dw7t
                                                              g$idsyn?$31958$6Dw7t
                                                              g$old*$31991$6Dw7t)
                                                          (begin
                                                            '#f
                                                            (g$for-all$23579$6Dw7t
                                                              g$idsyn?$31958$6Dw7t
                                                              g$new*$31992$6Dw7t))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$31988$6Dw7t))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$31993$6Dw7t
                                                  g$isp$31994$6Dw7t
                                                  g$old*$31995$6Dw7t
                                                  g$new*$31996$6Dw7t)
                                                ((case-lambda
                                                   ((g$subst$31997$6Dw7t
                                                      g$old*$31998$6Dw7t
                                                      g$new*$31999$6Dw7t)
                                                    ((case-lambda
                                                       ((g$old-label*$32000$6Dw7t)
                                                        ((case-lambda
                                                           ((g$subst$32001$6Dw7t)
                                                            (g$merge-substs$31960$6Dw7t
                                                              (g$map$23581$6Dw7t
                                                                cons
                                                                g$new*$31999$6Dw7t
                                                                g$old-label*$32000$6Dw7t)
                                                              g$subst$32001$6Dw7t)))
                                                         (g$rem*$31963$6Dw7t
                                                           g$old*$31998$6Dw7t
                                                           g$subst$31997$6Dw7t))))
                                                     (g$find*$31962$6Dw7t
                                                       g$old*$31998$6Dw7t
                                                       g$subst$31997$6Dw7t))))
                                                 (g$get-import$31967$6Dw7t
                                                   g$isp$31994$6Dw7t)
                                                 (g$map$23581$6Dw7t
                                                   g$syntax->datum$29461$6Dw7t
                                                   g$old*$31995$6Dw7t)
                                                 (g$map$23581$6Dw7t
                                                   g$syntax->datum$29461$6Dw7t
                                                   g$new*$31996$6Dw7t))))
                                             g$ls/false$31988$6Dw7t)
                                           ((case-lambda
                                              ((g$t$32002$6Dw7t)
                                               ((case-lambda
                                                  ((g$ls/false$32003$6Dw7t)
                                                   (if (if g$ls/false$32003$6Dw7t
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$32004$6Dw7t
                                                                  g$isp$32005$6Dw7t
                                                                  g$sym*$32006$6Dw7t)
                                                                (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                           g$except$32004$6Dw7t)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$23579$6Dw7t
                                                                      g$idsyn?$31958$6Dw7t
                                                                      g$sym*$32006$6Dw7t))
                                                                  '#f)))
                                                             g$ls/false$32003$6Dw7t))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$32007$6Dw7t
                                                            g$isp$32008$6Dw7t
                                                            g$sym*$32009$6Dw7t)
                                                          ((case-lambda
                                                             ((g$subst$32010$6Dw7t)
                                                              (g$rem*$31963$6Dw7t
                                                                (g$map$23581$6Dw7t
                                                                  g$syntax->datum$29461$6Dw7t
                                                                  g$sym*$32009$6Dw7t)
                                                                g$subst$32010$6Dw7t)))
                                                           (g$get-import$31967$6Dw7t
                                                             g$isp$32008$6Dw7t))))
                                                       g$ls/false$32003$6Dw7t)
                                                     ((case-lambda
                                                        ((g$t$32011$6Dw7t)
                                                         ((case-lambda
                                                            ((g$ls/false$32012$6Dw7t)
                                                             (if (if g$ls/false$32012$6Dw7t
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$32013$6Dw7t
                                                                            g$isp$32014$6Dw7t
                                                                            g$sym*$32015$6Dw7t)
                                                                          (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                                     g$only$32013$6Dw7t)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$23579$6Dw7t
                                                                                g$idsyn?$31958$6Dw7t
                                                                                g$sym*$32015$6Dw7t))
                                                                            '#f)))
                                                                       g$ls/false$32012$6Dw7t))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$32016$6Dw7t
                                                                      g$isp$32017$6Dw7t
                                                                      g$sym*$32018$6Dw7t)
                                                                    ((case-lambda
                                                                       ((g$subst$32019$6Dw7t
                                                                          g$sym*$32020$6Dw7t)
                                                                        ((case-lambda
                                                                           ((g$sym*$32021$6Dw7t)
                                                                            ((case-lambda
                                                                               ((g$lab*$32022$6Dw7t)
                                                                                (g$map$23581$6Dw7t
                                                                                  cons
                                                                                  g$sym*$32021$6Dw7t
                                                                                  g$lab*$32022$6Dw7t)))
                                                                             (g$find*$31962$6Dw7t
                                                                               g$sym*$32021$6Dw7t
                                                                               g$subst$32019$6Dw7t))))
                                                                         (g$remove-dups$31964$6Dw7t
                                                                           g$sym*$32020$6Dw7t))))
                                                                     (g$get-import$31967$6Dw7t
                                                                       g$isp$32017$6Dw7t)
                                                                     (g$map$23581$6Dw7t
                                                                       g$syntax->datum$29461$6Dw7t
                                                                       g$sym*$32018$6Dw7t))))
                                                                 g$ls/false$32012$6Dw7t)
                                                               ((case-lambda
                                                                  ((g$t$32023$6Dw7t)
                                                                   ((case-lambda
                                                                      ((g$ls/false$32024$6Dw7t)
                                                                       (if (if g$ls/false$32024$6Dw7t
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$32025$6Dw7t
                                                                                      g$isp$32026$6Dw7t
                                                                                      g$p$32027$6Dw7t)
                                                                                    (if (eq? (g$syntax->datum$29461$6Dw7t
                                                                                               g$prefix$32025$6Dw7t)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$31958$6Dw7t
                                                                                          g$p$32027$6Dw7t))
                                                                                      '#f)))
                                                                                 g$ls/false$32024$6Dw7t))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$32028$6Dw7t
                                                                                g$isp$32029$6Dw7t
                                                                                g$p$32030$6Dw7t)
                                                                              ((case-lambda
                                                                                 ((g$subst$32031$6Dw7t
                                                                                    g$prefix$32032$6Dw7t)
                                                                                  (g$map$23581$6Dw7t
                                                                                    (case-lambda
                                                                                      ((g$x$32033$6Dw7t)
                                                                                       (cons
                                                                                         (g$string->symbol$24028$6Dw7t
                                                                                           (g$string-append$24025$6Dw7t
                                                                                             g$prefix$32032$6Dw7t
                                                                                             (g$symbol->string$24027$6Dw7t
                                                                                               (car g$x$32033$6Dw7t))))
                                                                                         (cdr g$x$32033$6Dw7t))))
                                                                                    g$subst$32031$6Dw7t)))
                                                                               (g$get-import$31967$6Dw7t
                                                                                 g$isp$32029$6Dw7t)
                                                                               (g$symbol->string$24027$6Dw7t
                                                                                 (g$syntax->datum$29461$6Dw7t
                                                                                   g$p$32030$6Dw7t)))))
                                                                           g$ls/false$32024$6Dw7t)
                                                                         ((case-lambda
                                                                            ((g$t$32034$6Dw7t)
                                                                             ((case-lambda
                                                                                ((g$ls/false$32035$6Dw7t)
                                                                                 (if (if g$ls/false$32035$6Dw7t
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$32036$6Dw7t
                                                                                                g$spec*$32037$6Dw7t)
                                                                                              (eq? (g$syntax->datum$29461$6Dw7t
                                                                                                     g$library$32036$6Dw7t)
                                                                                                   'library)))
                                                                                           g$ls/false$32035$6Dw7t))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$32038$6Dw7t
                                                                                          g$spec*$32039$6Dw7t)
                                                                                        (g$import-library$31966$6Dw7t
                                                                                          g$spec*$32039$6Dw7t)))
                                                                                     g$ls/false$32035$6Dw7t)
                                                                                   ((case-lambda
                                                                                      ((g$t$32040$6Dw7t)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$32041$6Dw7t)
                                                                                           (if (if g$ls/false$32041$6Dw7t
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$32042$6Dw7t
                                                                                                          g$isp$32043$6Dw7t
                                                                                                          g$rest$32044$6Dw7t)
                                                                                                        (eq? (g$syntax->datum$29461$6Dw7t
                                                                                                               g$for$32042$6Dw7t)
                                                                                                             'for)))
                                                                                                     g$ls/false$32041$6Dw7t))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$32045$6Dw7t
                                                                                                    g$isp$32046$6Dw7t
                                                                                                    g$rest$32047$6Dw7t)
                                                                                                  (g$get-import$31967$6Dw7t
                                                                                                    g$isp$32046$6Dw7t)))
                                                                                               g$ls/false$32041$6Dw7t)
                                                                                             ((case-lambda
                                                                                                ((g$t$32048$6Dw7t)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$32049$6Dw7t)
                                                                                                     (if g$ls/false$32049$6Dw7t
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$32050$6Dw7t)
                                                                                                            (g$syntax-violation$29458$6Dw7t
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$32050$6Dw7t)))
                                                                                                         g$ls/false$32049$6Dw7t)
                                                                                                       (g$syntax-violation$29458$6Dw7t
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$32048$6Dw7t))))
                                                                                                  (g$syntax-dispatch$29338$6Dw7t
                                                                                                    g$t$32048$6Dw7t
                                                                                                    'any))))
                                                                                              g$t$32040$6Dw7t))))
                                                                                        (g$syntax-dispatch$29338$6Dw7t
                                                                                          g$t$32040$6Dw7t
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$32034$6Dw7t))))
                                                                              (g$syntax-dispatch$29338$6Dw7t
                                                                                g$t$32034$6Dw7t
                                                                                '(any each-any)))))
                                                                          g$t$32023$6Dw7t))))
                                                                    (g$syntax-dispatch$29338$6Dw7t
                                                                      g$t$32023$6Dw7t
                                                                      '(any any
                                                                            any)))))
                                                                g$t$32011$6Dw7t))))
                                                          (g$syntax-dispatch$29338$6Dw7t
                                                            g$t$32011$6Dw7t
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$32002$6Dw7t))))
                                                (g$syntax-dispatch$29338$6Dw7t
                                                  g$t$32002$6Dw7t
                                                  '(any any
                                                        .
                                                        each-any)))))
                                            g$t$31987$6Dw7t))))
                                      (g$syntax-dispatch$29338$6Dw7t
                                        g$t$31987$6Dw7t
                                        '(any any
                                              .
                                              #(each (any any)))))))
                                  g$t$31981$6Dw7t))))
                            (g$syntax-dispatch$29338$6Dw7t
                              g$t$31981$6Dw7t
                              '(any . each-any)))))
                        g$spec$31980$6Dw7t))))
                  (g$add-imports!$31968$6Dw7t
                    (case-lambda
                      ((g$imp$31972$6Dw7t g$h$31973$6Dw7t)
                       ((case-lambda
                          ((g$subst$31974$6Dw7t)
                           (g$for-each$23582$6Dw7t
                             (case-lambda
                               ((g$x$31975$6Dw7t)
                                ((case-lambda
                                   ((g$name$31976$6Dw7t
                                      g$label$31977$6Dw7t)
                                    ((case-lambda
                                       ((g$t$31978$6Dw7t)
                                        (if g$t$31978$6Dw7t
                                          ((case-lambda
                                             ((g$l$31979$6Dw7t)
                                              (if (not (eq? g$l$31979$6Dw7t
                                                            g$label$31977$6Dw7t))
                                                (g$dup-error$31959$6Dw7t
                                                  g$name$31976$6Dw7t)
                                                (void))))
                                           g$t$31978$6Dw7t)
                                          ((case-lambda
                                             (()
                                              (begin
                                                '#f
                                                (g$hashtable-set!$24147$6Dw7t
                                                  g$h$31973$6Dw7t
                                                  g$name$31976$6Dw7t
                                                  g$label$31977$6Dw7t))))))))
                                     (g$hashtable-ref$24146$6Dw7t
                                       g$h$31973$6Dw7t
                                       g$name$31976$6Dw7t
                                       '#f))))
                                 (car g$x$31975$6Dw7t)
                                 (cdr g$x$31975$6Dw7t))))
                             g$subst$31974$6Dw7t)))
                        (g$get-import$31967$6Dw7t
                          g$imp$31972$6Dw7t))))))
          ((letrec ((g$f$31969$6Dw7t
                      (case-lambda
                        ((g$imp*$31970$6Dw7t g$h$31971$6Dw7t)
                         (if (null? g$imp*$31970$6Dw7t)
                           (hashtable-entries g$h$31971$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 (g$add-imports!$31968$6Dw7t
                                   (car g$imp*$31970$6Dw7t)
                                   g$h$31971$6Dw7t)
                                 (g$f$31969$6Dw7t
                                   (cdr g$imp*$31970$6Dw7t)
                                   g$h$31971$6Dw7t))))))))))
             g$f$31969$6Dw7t)
           g$imp*$31957$6Dw7t
           (g$make-eq-hashtable$24143$6Dw7t))))))
   (g$make-top-rib$29391$6Dw7t
     g$make-top-rib$32988$6Dw7t
     (case-lambda
       ((g$names$32219$6Dw7t g$labels$32220$6Dw7t)
        ((case-lambda
           ((g$rib$32221$6Dw7t)
            (begin
              (g$vector-for-each$24095$6Dw7t
                (case-lambda
                  ((g$name$32222$6Dw7t g$label$32223$6Dw7t)
                   (begin
                     (if (not (g$symbol?$24007$6Dw7t
                                g$name$32222$6Dw7t))
                       (g$error$20491$6Dw7t
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$32222$6Dw7t)
                       (void))
                     (g$extend-rib/nc!$28802$6Dw7t
                       g$rib$32221$6Dw7t
                       (g$make-stx$28813$6Dw7t
                         g$name$32222$6Dw7t
                         g$top-mark*$28773$6Dw7t
                         '()
                         '())
                       g$label$32223$6Dw7t))))
                g$names$32219$6Dw7t
                g$labels$32220$6Dw7t)
              g$rib$32221$6Dw7t)))
         (g$make-cache-rib$28799$6Dw7t)))))
   (g$make-collector$29392$6Dw7t
     g$make-collector$32989$6Dw7t
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$32224$6Dw7t)
            (case-lambda
              (() g$ls$32224$6Dw7t)
              ((g$x$32225$6Dw7t)
               (set! g$ls$32224$6Dw7t
                 (g$set-cons$28770$6Dw7t
                   g$x$32225$6Dw7t
                   g$ls$32224$6Dw7t))))))
         '()))))
   (g$inv-collector$29393$6Dw7t
     g$inv-collector$32990$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda
         (g$args$32226$6Dw7t
          (g$assertion-violation$20490$6Dw7t
            'inv-collector
            '"BUG: not initialized")))
       (case-lambda
         ((g$x$32227$6Dw7t)
          (begin
            (if (not (g$procedure?$24009$6Dw7t g$x$32227$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                'inv-collector
                '"BUG: not a procedure"
                g$x$32227$6Dw7t)
              (void))
            g$x$32227$6Dw7t)))))
   (g$vis-collector$29394$6Dw7t
     g$vis-collector$32991$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda
         (g$args$32228$6Dw7t
          (g$assertion-violation$20490$6Dw7t
            'vis-collector
            '"BUG: not initialized")))
       (case-lambda
         ((g$x$32229$6Dw7t)
          (begin
            (if (not (g$procedure?$24009$6Dw7t g$x$32229$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                'vis-collector
                '"BUG: not a procedure"
                g$x$32229$6Dw7t)
              (void))
            g$x$32229$6Dw7t)))))
   (g$imp-collector$29395$6Dw7t
     g$imp-collector$32992$6Dw7t
     (g$make-parameter$27681$6Dw7t
       (case-lambda
         (g$args$32230$6Dw7t
          (g$assertion-violation$20490$6Dw7t
            'imp-collector
            '"BUG: not initialized")))
       (case-lambda
         ((g$x$32231$6Dw7t)
          (begin
            (if (not (g$procedure?$24009$6Dw7t g$x$32231$6Dw7t))
              (g$assertion-violation$20490$6Dw7t
                'imp-collector
                '"BUG: not a procedure"
                g$x$32231$6Dw7t)
              (void))
            g$x$32231$6Dw7t)))))
   (g$chi-library-internal$29396$6Dw7t
     g$chi-library-internal$32993$6Dw7t
     (case-lambda
       ((g$e*$32232$6Dw7t g$rib$32233$6Dw7t g$mix?$32234$6Dw7t)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$29385$6Dw7t
               g$e*$32232$6Dw7t
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$32233$6Dw7t
               g$mix?$32234$6Dw7t
               '#t)))
          (case-lambda
            ((g$e*$32243$6Dw7t
               g$r$32244$6Dw7t
               g$mr$32245$6Dw7t
               g$lex*$32246$6Dw7t
               g$rhs*$32247$6Dw7t
               g$mod**$32248$6Dw7t
               g$_kwd*$32249$6Dw7t
               g$exp*$32250$6Dw7t)
             ((case-lambda
                ((g$exp*$32251$6Dw7t
                   g$_kwd*$32252$6Dw7t
                   g$mod**$32253$6Dw7t
                   g$rhs*$32254$6Dw7t
                   g$lex*$32255$6Dw7t
                   g$mr$32256$6Dw7t
                   g$r$32257$6Dw7t
                   g$e*$32258$6Dw7t)
                 (values
                   (g$append$23587$6Dw7t
                     (apply
                       g$append$23587$6Dw7t
                       (g$reverse$24043$6Dw7t g$mod**$32253$6Dw7t))
                     g$e*$32258$6Dw7t)
                   g$r$32257$6Dw7t
                   g$mr$32256$6Dw7t
                   (g$reverse$24043$6Dw7t g$lex*$32255$6Dw7t)
                   (g$reverse$24043$6Dw7t g$rhs*$32254$6Dw7t)
                   g$exp*$32251$6Dw7t)))
              g$exp*$32250$6Dw7t
              g$_kwd*$32249$6Dw7t
              g$mod**$32248$6Dw7t
              g$rhs*$32247$6Dw7t
              g$lex*$32246$6Dw7t
              g$mr$32245$6Dw7t
              g$r$32244$6Dw7t
              g$e*$32243$6Dw7t)))))))
   (g$chi-interaction-expr$29397$6Dw7t
     g$chi-interaction-expr$32994$6Dw7t
     (case-lambda
       ((g$e$32259$6Dw7t g$rib$32260$6Dw7t g$r$32261$6Dw7t)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$29385$6Dw7t
               (list g$e$32259$6Dw7t)
               g$r$32261$6Dw7t
               g$r$32261$6Dw7t
               '()
               '()
               '()
               '()
               '()
               g$rib$32260$6Dw7t
               '#t
               '#f)))
          (case-lambda
            ((g$e*$32270$6Dw7t
               g$r$32271$6Dw7t
               g$mr$32272$6Dw7t
               g$lex*$32273$6Dw7t
               g$rhs*$32274$6Dw7t
               g$mod**$32275$6Dw7t
               g$_kwd*$32276$6Dw7t
               g$_exp*$32277$6Dw7t)
             ((case-lambda
                ((g$_exp*$32278$6Dw7t
                   g$_kwd*$32279$6Dw7t
                   g$mod**$32280$6Dw7t
                   g$rhs*$32281$6Dw7t
                   g$lex*$32282$6Dw7t
                   g$mr$32283$6Dw7t
                   g$r$32284$6Dw7t
                   g$e*$32285$6Dw7t)
                 ((case-lambda
                    ((g$e*$32286$6Dw7t)
                     ((case-lambda
                        ((g$e$32287$6Dw7t)
                         (values g$e$32287$6Dw7t g$r$32284$6Dw7t)))
                      (if (null? g$e*$32286$6Dw7t)
                        (g$build-void$28766$6Dw7t)
                        (if (null? (cdr g$e*$32286$6Dw7t))
                          (car g$e*$32286$6Dw7t)
                          ((case-lambda
                             (()
                              (begin
                                '#f
                                (g$build-sequence$28765$6Dw7t
                                  '#f
                                  g$e*$32286$6Dw7t))))))))))
                  (g$expand-interaction-rhs*/init*$29363$6Dw7t
                    (g$reverse$24043$6Dw7t g$lex*$32282$6Dw7t)
                    (g$reverse$24043$6Dw7t g$rhs*$32281$6Dw7t)
                    (g$append$23587$6Dw7t
                      (apply
                        g$append$23587$6Dw7t
                        (g$reverse$24043$6Dw7t g$mod**$32280$6Dw7t))
                      g$e*$32285$6Dw7t)
                    g$r$32284$6Dw7t
                    g$mr$32283$6Dw7t))))
              g$_exp*$32277$6Dw7t
              g$_kwd*$32276$6Dw7t
              g$mod**$32275$6Dw7t
              g$rhs*$32274$6Dw7t
              g$lex*$32273$6Dw7t
              g$mr$32272$6Dw7t
              g$r$32271$6Dw7t
              g$e*$32270$6Dw7t)))))))
   (g$library-body-expander$29398$6Dw7t
     g$library-body-expander$32995$6Dw7t
     (case-lambda
       ((g$name$32288$6Dw7t
          g$main-exp*$32289$6Dw7t
          g$imp*$32290$6Dw7t
          g$b*$32291$6Dw7t
          g$mix?$32292$6Dw7t)
        (letrec* ((g$itc$32293$6Dw7t (g$make-collector$29392$6Dw7t)))
          ((case-lambda
             ((g$imp-collector$32298$6Dw7t
                g$top-level-context$32299$6Dw7t
                g$imp-collector$32300$6Dw7t
                g$top-level-context$32301$6Dw7t)
              ((case-lambda
                 ((g$swap$32302$6Dw7t)
                  (dynamic-wind
                    g$swap$32302$6Dw7t
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$29390$6Dw7t
                              g$imp*$32290$6Dw7t)))
                         (case-lambda
                           ((g$subst-names$32305$6Dw7t
                              g$subst-labels$32306$6Dw7t)
                            ((case-lambda
                               ((g$subst-labels$32307$6Dw7t
                                  g$subst-names$32308$6Dw7t)
                                ((case-lambda
                                   ((g$rib$32309$6Dw7t)
                                    (letrec* ((g$wrap$32310$6Dw7t
                                                (case-lambda
                                                  ((g$x$32372$6Dw7t)
                                                   (g$make-stx$28813$6Dw7t
                                                     g$x$32372$6Dw7t
                                                     g$top-mark*$28773$6Dw7t
                                                     (list
                                                       g$rib$32309$6Dw7t)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$32311$6Dw7t
                                            g$main-exp*$32312$6Dw7t
                                            g$rtc$32313$6Dw7t
                                            g$vtc$32314$6Dw7t)
                                          ((case-lambda
                                             ((g$inv-collector$32319$6Dw7t
                                                g$vis-collector$32320$6Dw7t
                                                g$inv-collector$32321$6Dw7t
                                                g$vis-collector$32322$6Dw7t)
                                              ((case-lambda
                                                 ((g$swap$32323$6Dw7t)
                                                  (dynamic-wind
                                                    g$swap$32323$6Dw7t
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$29396$6Dw7t
                                                              g$b*$32311$6Dw7t
                                                              g$rib$32309$6Dw7t
                                                              g$mix?$32292$6Dw7t)))
                                                         (case-lambda
                                                           ((g$init*$32330$6Dw7t
                                                              g$r$32331$6Dw7t
                                                              g$mr$32332$6Dw7t
                                                              g$lex*$32333$6Dw7t
                                                              g$rhs*$32334$6Dw7t
                                                              g$internal-exp*$32335$6Dw7t)
                                                            ((case-lambda
                                                               ((g$internal-exp*$32336$6Dw7t
                                                                  g$rhs*$32337$6Dw7t
                                                                  g$lex*$32338$6Dw7t
                                                                  g$mr$32339$6Dw7t
                                                                  g$r$32340$6Dw7t
                                                                  g$init*$32341$6Dw7t)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$29387$6Dw7t
                                                                       (g$append$23587$6Dw7t
                                                                         g$main-exp*$32312$6Dw7t
                                                                         g$internal-exp*$32336$6Dw7t))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$32344$6Dw7t
                                                                       g$exp-id*$32345$6Dw7t)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$32346$6Dw7t
                                                                           g$exp-name*$32347$6Dw7t)
                                                                         (begin
                                                                           (g$seal-rib!$28804$6Dw7t
                                                                             g$rib$32309$6Dw7t)
                                                                           ((case-lambda
                                                                              ((g$init*$32348$6Dw7t)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$32349$6Dw7t)
                                                                                   (begin
                                                                                     (g$unseal-rib!$28805$6Dw7t
                                                                                       g$rib$32309$6Dw7t)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$32350$6Dw7t
                                                                                           g$export-subst$32351$6Dw7t)
                                                                                         (letrec* ((g$errstr$32352$6Dw7t
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$29446$6Dw7t
                                                                                                  g$lex*$32338$6Dw7t
                                                                                                  g$loc*$32350$6Dw7t
                                                                                                  g$r$32340$6Dw7t)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$32356$6Dw7t
                                                                                                  g$global*$32357$6Dw7t
                                                                                                  g$macro*$32358$6Dw7t)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$32359$6Dw7t
                                                                                                      g$global*$32360$6Dw7t
                                                                                                      g$export-env$32361$6Dw7t)
                                                                                                    (begin
                                                                                                      (g$for-each$23582$6Dw7t
                                                                                                        (case-lambda
                                                                                                          ((g$s$32362$6Dw7t)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$32363$6Dw7t
                                                                                                                 g$label$32364$6Dw7t)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$32365$6Dw7t)
                                                                                                                   (if g$p$32365$6Dw7t
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$32366$6Dw7t)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$32367$6Dw7t)
                                                                                                                             (if (eq? g$type$32367$6Dw7t
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$29458$6Dw7t
                                                                                                                                 'export
                                                                                                                                 g$errstr$32352$6Dw7t
                                                                                                                                 g$name$32363$6Dw7t)
                                                                                                                               (void))))
                                                                                                                          (car g$b$32366$6Dw7t))))
                                                                                                                      (cdr g$p$32365$6Dw7t))
                                                                                                                     (void))))
                                                                                                                (g$assq$23565$6Dw7t
                                                                                                                  g$label$32364$6Dw7t
                                                                                                                  g$export-env$32361$6Dw7t))))
                                                                                                            (car g$s$32362$6Dw7t)
                                                                                                            (cdr g$s$32362$6Dw7t))))
                                                                                                        g$export-subst$32351$6Dw7t)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$32368$6Dw7t
                                                                                                            g$invoke-definitions$32369$6Dw7t)
                                                                                                          (values
                                                                                                            (g$itc$32293$6Dw7t)
                                                                                                            (g$rtc$32313$6Dw7t)
                                                                                                            (g$vtc$32314$6Dw7t)
                                                                                                            (g$build-sequence$28765$6Dw7t
                                                                                                              '#f
                                                                                                              (g$append$23587$6Dw7t
                                                                                                                g$invoke-definitions$32369$6Dw7t
                                                                                                                (list
                                                                                                                  g$invoke-body$32368$6Dw7t)))
                                                                                                            g$macro*$32359$6Dw7t
                                                                                                            g$export-subst$32351$6Dw7t
                                                                                                            g$export-env$32361$6Dw7t)))
                                                                                                       (g$build-library-letrec*$28769$6Dw7t
                                                                                                         '#f
                                                                                                         g$name$32288$6Dw7t
                                                                                                         g$lex*$32338$6Dw7t
                                                                                                         g$loc*$32350$6Dw7t
                                                                                                         g$rhs*$32349$6Dw7t
                                                                                                         (if (null?
                                                                                                               g$init*$32348$6Dw7t)
                                                                                                           (g$build-void$28766$6Dw7t)
                                                                                                           (g$build-sequence$28765$6Dw7t
                                                                                                             '#f
                                                                                                             g$init*$32348$6Dw7t)))
                                                                                                       (g$map$23581$6Dw7t
                                                                                                         g$build-global-define$28761$6Dw7t
                                                                                                         (g$map$23581$6Dw7t
                                                                                                           cdr
                                                                                                           g$global*$32360$6Dw7t))))))
                                                                                                 g$macro*$32358$6Dw7t
                                                                                                 g$global*$32357$6Dw7t
                                                                                                 g$export-env$32356$6Dw7t)))))))
                                                                                      (g$map$23581$6Dw7t
                                                                                        g$gen-global$28776$6Dw7t
                                                                                        g$lex*$32338$6Dw7t)
                                                                                      (g$make-export-subst$29445$6Dw7t
                                                                                        g$exp-name*$32347$6Dw7t
                                                                                        g$exp-id*$32346$6Dw7t)))))
                                                                                (g$chi-rhs*$29364$6Dw7t
                                                                                  g$rhs*$32337$6Dw7t
                                                                                  g$r$32340$6Dw7t
                                                                                  g$mr$32339$6Dw7t))))
                                                                            (g$chi-expr*$29354$6Dw7t
                                                                              g$init*$32341$6Dw7t
                                                                              g$r$32340$6Dw7t
                                                                              g$mr$32339$6Dw7t)))))
                                                                      g$exp-id*$32345$6Dw7t
                                                                      g$exp-name*$32344$6Dw7t))))))
                                                             g$internal-exp*$32335$6Dw7t
                                                             g$rhs*$32334$6Dw7t
                                                             g$lex*$32333$6Dw7t
                                                             g$mr$32332$6Dw7t
                                                             g$r$32331$6Dw7t
                                                             g$init*$32330$6Dw7t))))))
                                                    g$swap$32323$6Dw7t)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$32370$6Dw7t)
                                                        (begin
                                                          (g$inv-collector$32319$6Dw7t
                                                            g$inv-collector$32321$6Dw7t)
                                                          (set! g$inv-collector$32321$6Dw7t
                                                            g$t$32370$6Dw7t))))
                                                     (g$inv-collector$32319$6Dw7t))
                                                    ((case-lambda
                                                       ((g$t$32371$6Dw7t)
                                                        (begin
                                                          (g$vis-collector$32320$6Dw7t
                                                            g$vis-collector$32322$6Dw7t)
                                                          (set! g$vis-collector$32322$6Dw7t
                                                            g$t$32371$6Dw7t))))
                                                     (g$vis-collector$32320$6Dw7t))))))))
                                           g$inv-collector$29393$6Dw7t
                                           g$vis-collector$29394$6Dw7t
                                           g$rtc$32313$6Dw7t
                                           g$vtc$32314$6Dw7t)))
                                       (g$map$23581$6Dw7t
                                         g$wrap$32310$6Dw7t
                                         g$b*$32291$6Dw7t)
                                       (g$map$23581$6Dw7t
                                         g$wrap$32310$6Dw7t
                                         g$main-exp*$32289$6Dw7t)
                                       (g$make-collector$29392$6Dw7t)
                                       (g$make-collector$29392$6Dw7t)))))
                                 (g$make-top-rib$29391$6Dw7t
                                   g$subst-names$32308$6Dw7t
                                   g$subst-labels$32307$6Dw7t))))
                             g$subst-labels$32306$6Dw7t
                             g$subst-names$32305$6Dw7t))))))
                    g$swap$32302$6Dw7t)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$32373$6Dw7t)
                        (begin
                          (g$imp-collector$32298$6Dw7t
                            g$imp-collector$32300$6Dw7t)
                          (set! g$imp-collector$32300$6Dw7t
                            g$t$32373$6Dw7t))))
                     (g$imp-collector$32298$6Dw7t))
                    ((case-lambda
                       ((g$t$32374$6Dw7t)
                        (begin
                          (g$top-level-context$32299$6Dw7t
                            g$top-level-context$32301$6Dw7t)
                          (set! g$top-level-context$32301$6Dw7t
                            g$t$32374$6Dw7t))))
                     (g$top-level-context$32299$6Dw7t))))))))
           g$imp-collector$29395$6Dw7t
           g$top-level-context$29466$6Dw7t
           g$itc$32293$6Dw7t
           '#f)))))
   (g$core-library-expander$29399$6Dw7t
     g$core-library-expander$32996$6Dw7t
     (case-lambda
       ((g$e$32375$6Dw7t g$verify-name$32376$6Dw7t)
        (call-with-values
          (case-lambda
            (() (g$parse-library$29389$6Dw7t g$e$32375$6Dw7t)))
          (case-lambda
            ((g$name*$32381$6Dw7t
               g$exp*$32382$6Dw7t
               g$imp*$32383$6Dw7t
               g$b*$32384$6Dw7t)
             ((case-lambda
                ((g$b*$32385$6Dw7t
                   g$imp*$32386$6Dw7t
                   g$exp*$32387$6Dw7t
                   g$name*$32388$6Dw7t)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$29388$6Dw7t
                        g$name*$32388$6Dw7t)))
                   (case-lambda
                     ((g$name$32391$6Dw7t g$ver$32392$6Dw7t)
                      ((case-lambda
                         ((g$ver$32393$6Dw7t g$name$32394$6Dw7t)
                          (begin
                            (g$verify-name$32376$6Dw7t
                              g$name$32394$6Dw7t)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$29398$6Dw7t
                                   g$name$32394$6Dw7t
                                   g$exp*$32387$6Dw7t
                                   g$imp*$32386$6Dw7t
                                   g$b*$32385$6Dw7t
                                   '#f)))
                              (case-lambda
                                ((g$imp*$32402$6Dw7t
                                   g$invoke-req*$32403$6Dw7t
                                   g$visit-req*$32404$6Dw7t
                                   g$invoke-code$32405$6Dw7t
                                   g$visit-code$32406$6Dw7t
                                   g$export-subst$32407$6Dw7t
                                   g$export-env$32408$6Dw7t)
                                 ((case-lambda
                                    ((g$export-env$32409$6Dw7t
                                       g$export-subst$32410$6Dw7t
                                       g$visit-code$32411$6Dw7t
                                       g$invoke-code$32412$6Dw7t
                                       g$visit-req*$32413$6Dw7t
                                       g$invoke-req*$32414$6Dw7t
                                       g$imp*$32415$6Dw7t)
                                     (values
                                       g$name$32394$6Dw7t
                                       g$ver$32393$6Dw7t
                                       g$imp*$32415$6Dw7t
                                       g$invoke-req*$32414$6Dw7t
                                       g$visit-req*$32413$6Dw7t
                                       g$invoke-code$32412$6Dw7t
                                       g$visit-code$32411$6Dw7t
                                       g$export-subst$32410$6Dw7t
                                       g$export-env$32409$6Dw7t)))
                                  g$export-env$32408$6Dw7t
                                  g$export-subst$32407$6Dw7t
                                  g$visit-code$32406$6Dw7t
                                  g$invoke-code$32405$6Dw7t
                                  g$visit-req*$32404$6Dw7t
                                  g$invoke-req*$32403$6Dw7t
                                  g$imp*$32402$6Dw7t)))))))
                       g$ver$32392$6Dw7t
                       g$name$32391$6Dw7t))))))
              g$b*$32384$6Dw7t
              g$imp*$32383$6Dw7t
              g$exp*$32382$6Dw7t
              g$name*$32381$6Dw7t)))))))
   (g$parse-top-level-program$29400$6Dw7t
     g$parse-top-level-program$32997$6Dw7t
     (case-lambda
       ((g$e*$32416$6Dw7t)
        ((case-lambda
           ((g$t$32417$6Dw7t)
            ((case-lambda
               ((g$ls/false$32418$6Dw7t)
                (if (if g$ls/false$32418$6Dw7t
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$32419$6Dw7t
                               g$imp*$32420$6Dw7t
                               g$b*$32421$6Dw7t)
                             (eq? (g$syntax->datum$29461$6Dw7t
                                    g$import$32419$6Dw7t)
                                  'import)))
                          g$ls/false$32418$6Dw7t))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$32422$6Dw7t
                         g$imp*$32423$6Dw7t
                         g$b*$32424$6Dw7t)
                       (values g$imp*$32423$6Dw7t g$b*$32424$6Dw7t)))
                    g$ls/false$32418$6Dw7t)
                  ((case-lambda
                     ((g$t$32425$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$32426$6Dw7t)
                          (if (if g$ls/false$32426$6Dw7t
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$32427$6Dw7t
                                         g$x$32428$6Dw7t
                                         g$y$32429$6Dw7t)
                                       (eq? (g$syntax->datum$29461$6Dw7t
                                              g$import$32427$6Dw7t)
                                            'import)))
                                    g$ls/false$32426$6Dw7t))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$32430$6Dw7t
                                   g$x$32431$6Dw7t
                                   g$y$32432$6Dw7t)
                                 (g$syntax-violation$29458$6Dw7t
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$28837$6Dw7t
                                     g$e*$32416$6Dw7t))))
                              g$ls/false$32426$6Dw7t)
                            ((case-lambda
                               ((g$t$32433$6Dw7t)
                                ((case-lambda
                                   ((g$ls/false$32434$6Dw7t)
                                    (if g$ls/false$32434$6Dw7t
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$assertion-violation$20490$6Dw7t
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$32434$6Dw7t)
                                      (g$syntax-violation$29458$6Dw7t
                                        '#f
                                        '"invalid syntax"
                                        g$t$32433$6Dw7t))))
                                 (g$syntax-dispatch$29338$6Dw7t
                                   g$t$32433$6Dw7t
                                   '_))))
                             g$t$32425$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$32425$6Dw7t
                         '((any . any) . any)))))
                   g$t$32417$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$32417$6Dw7t
               '((any . each-any) . each-any)))))
         g$e*$32416$6Dw7t))))
   (g$top-level-expander$29401$6Dw7t
     g$top-level-expander$32998$6Dw7t
     (case-lambda
       ((g$e*$32435$6Dw7t)
        (call-with-values
          (case-lambda
            (()
             (g$parse-top-level-program$29400$6Dw7t g$e*$32435$6Dw7t)))
          (case-lambda
            ((g$imp*$32438$6Dw7t g$b*$32439$6Dw7t)
             ((case-lambda
                ((g$b*$32440$6Dw7t g$imp*$32441$6Dw7t)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$29398$6Dw7t
                        '()
                        '()
                        g$imp*$32441$6Dw7t
                        g$b*$32440$6Dw7t
                        '#t)))
                   (case-lambda
                     ((g$imp*$32449$6Dw7t
                        g$invoke-req*$32450$6Dw7t
                        g$visit-req*$32451$6Dw7t
                        g$invoke-code$32452$6Dw7t
                        g$visit-code$32453$6Dw7t
                        g$export-subst$32454$6Dw7t
                        g$export-env$32455$6Dw7t)
                      ((case-lambda
                         ((g$export-env$32456$6Dw7t
                            g$export-subst$32457$6Dw7t
                            g$visit-code$32458$6Dw7t
                            g$invoke-code$32459$6Dw7t
                            g$visit-req*$32460$6Dw7t
                            g$invoke-req*$32461$6Dw7t
                            g$imp*$32462$6Dw7t)
                          (values
                            g$invoke-req*$32461$6Dw7t
                            g$invoke-code$32459$6Dw7t)))
                       g$export-env$32455$6Dw7t
                       g$export-subst$32454$6Dw7t
                       g$visit-code$32453$6Dw7t
                       g$invoke-code$32452$6Dw7t
                       g$visit-req*$32451$6Dw7t
                       g$invoke-req*$32450$6Dw7t
                       g$imp*$32449$6Dw7t))))))
              g$b*$32439$6Dw7t
              g$imp*$32438$6Dw7t)))))))
   (g$10556$29402$6Dw7t
     g$10556$32999$6Dw7t
     (make-record-type-descriptor
       'env
       '#f
       'g$10559$6Dw7t
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$10558$29403$6Dw7t g$10558$33000$6Dw7t '#f)
   (g$10557$29404$6Dw7t
     g$10557$33001$6Dw7t
     (make-record-constructor-descriptor
       g$10556$29402$6Dw7t
       '#f
       g$10558$29403$6Dw7t))
   (g$env?$29407$6Dw7t
     g$env?$33002$6Dw7t
     (record-predicate g$10556$29402$6Dw7t))
   (g$make-env$29408$6Dw7t
     g$make-env$33003$6Dw7t
     (record-constructor g$10557$29404$6Dw7t))
   (g$env-names$29409$6Dw7t
     g$env-names$33004$6Dw7t
     (record-accessor g$10556$29402$6Dw7t '0))
   (g$env-labels$29410$6Dw7t
     g$env-labels$33005$6Dw7t
     (record-accessor g$10556$29402$6Dw7t '1))
   (g$env-itc$29411$6Dw7t
     g$env-itc$33006$6Dw7t
     (record-accessor g$10556$29402$6Dw7t '2))
   (g$set-env-names!$29412$6Dw7t
     g$set-env-names!$33007$6Dw7t
     (record-mutator g$10556$29402$6Dw7t '0))
   (g$set-env-labels!$29413$6Dw7t
     g$set-env-labels!$33008$6Dw7t
     (record-mutator g$10556$29402$6Dw7t '1))
   (g$set-env-itc!$29414$6Dw7t
     g$set-env-itc!$33009$6Dw7t
     (record-mutator g$10556$29402$6Dw7t '2))
   (g$rp$29415$6Dw7t
     g$rp$33010$6Dw7t
     (make-record-printer
       'env
       (case-lambda
         ((g$x$32463$6Dw7t g$p$32464$6Dw7t g$wr$32465$6Dw7t)
          (display '"#<environment>" g$p$32464$6Dw7t)))))
   (g$10573$29416$6Dw7t
     g$10573$33011$6Dw7t
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$10576$6Dw7t
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$10575$29417$6Dw7t g$10575$33012$6Dw7t '#f)
   (g$10574$29418$6Dw7t
     g$10574$33013$6Dw7t
     (make-record-constructor-descriptor
       g$10573$29416$6Dw7t
       '#f
       g$10575$29417$6Dw7t))
   (g$interaction-env?$29421$6Dw7t
     g$interaction-env?$33014$6Dw7t
     (record-predicate g$10573$29416$6Dw7t))
   (g$make-interaction-env$29422$6Dw7t
     g$make-interaction-env$33015$6Dw7t
     (record-constructor g$10574$29418$6Dw7t))
   (g$interaction-env-rib$29423$6Dw7t
     g$interaction-env-rib$33016$6Dw7t
     (record-accessor g$10573$29416$6Dw7t '0))
   (g$interaction-env-r$29424$6Dw7t
     g$interaction-env-r$33017$6Dw7t
     (record-accessor g$10573$29416$6Dw7t '1))
   (g$interaction-env-locs$29425$6Dw7t
     g$interaction-env-locs$33018$6Dw7t
     (record-accessor g$10573$29416$6Dw7t '2))
   (g$set-interaction-env-rib!$29426$6Dw7t
     g$set-interaction-env-rib!$33019$6Dw7t
     (record-mutator g$10573$29416$6Dw7t '0))
   (g$set-interaction-env-r!$29427$6Dw7t
     g$set-interaction-env-r!$33020$6Dw7t
     (record-mutator g$10573$29416$6Dw7t '1))
   (g$set-interaction-env-locs!$29428$6Dw7t
     g$set-interaction-env-locs!$33021$6Dw7t
     (record-mutator g$10573$29416$6Dw7t '2))
   (g$rp$29429$6Dw7t
     g$rp$33022$6Dw7t
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$32466$6Dw7t g$p$32467$6Dw7t g$wr$32468$6Dw7t)
          (display '"#<environment>" g$p$32467$6Dw7t)))))
   (g$interaction-environment-symbols$29430$6Dw7t
     g$interaction-environment-symbols$33023$6Dw7t
     (case-lambda
       (()
        (g$environment-symbols$29434$6Dw7t
          (g$interaction-environment$29465$6Dw7t)))))
   (g$environment-bindings$29431$6Dw7t
     g$environment-bindings$33024$6Dw7t
     (case-lambda
       ((g$e$32469$6Dw7t)
        (g$vector->list$24041$6Dw7t
          (g$vector-map$24094$6Dw7t
            (case-lambda
              ((g$name$32470$6Dw7t g$label$32471$6Dw7t)
               (g$parse-binding$29432$6Dw7t
                 (cons
                   g$name$32470$6Dw7t
                   (g$imported-label->binding$28545$6Dw7t
                     g$label$32471$6Dw7t)))))
            (g$env-names$29409$6Dw7t g$e$32469$6Dw7t)
            (g$env-labels$29410$6Dw7t g$e$32469$6Dw7t))))))
   (g$parse-binding$29432$6Dw7t
     g$parse-binding$33025$6Dw7t
     (case-lambda
       ((g$b$32472$6Dw7t)
        (cons
          (car g$b$32472$6Dw7t)
          ((case-lambda
             ((g$t$32473$6Dw7t)
              (if (g$memv$23570$6Dw7t
                    g$t$32473$6Dw7t
                    '(core-prim global))
                'procedure
                (if (g$memv$23570$6Dw7t
                      g$t$32473$6Dw7t
                      '(core-macro macro global-macro))
                  'syntax
                  (if (eqv? g$t$32473$6Dw7t '$core-rtd)
                    'record
                    ((case-lambda
                       (()
                        (begin
                          '#f
                          (if (eq? (car g$b$32472$6Dw7t)
                                   (g$cadr$24045$6Dw7t g$b$32472$6Dw7t))
                            'syntax
                            'unknown))))))))))
           (g$cadr$24045$6Dw7t g$b$32472$6Dw7t))))))
   (g$environment?$29433$6Dw7t
     g$environment?$33026$6Dw7t
     (case-lambda
       ((g$x$32474$6Dw7t)
        ((case-lambda
           ((g$t$32475$6Dw7t)
            (if g$t$32475$6Dw7t
              g$t$32475$6Dw7t
              (begin
                '#f
                (g$interaction-env?$29421$6Dw7t g$x$32474$6Dw7t)))))
         (g$env?$29407$6Dw7t g$x$32474$6Dw7t)))))
   (g$environment-symbols$29434$6Dw7t
     g$environment-symbols$33027$6Dw7t
     (case-lambda
       ((g$x$32476$6Dw7t)
        (if (g$env?$29407$6Dw7t g$x$32476$6Dw7t)
          (g$vector->list$24041$6Dw7t
            (g$env-names$29409$6Dw7t g$x$32476$6Dw7t))
          (if (g$interaction-env?$29421$6Dw7t g$x$32476$6Dw7t)
            (g$map$23581$6Dw7t
              values
              (g$rib-sym*$28788$6Dw7t
                (g$interaction-env-rib$29423$6Dw7t g$x$32476$6Dw7t)))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'environment-symbols
                    '"not an environment"
                    g$x$32476$6Dw7t))))))))))
   (g$environment$29435$6Dw7t
     g$environment$33028$6Dw7t
     (case-lambda
       (g$imp*$32477$6Dw7t
        ((case-lambda
           ((g$itc$32478$6Dw7t)
            ((case-lambda
               ((g$imp-collector$32481$6Dw7t
                  g$imp-collector$32482$6Dw7t)
                ((case-lambda
                   ((g$swap$32483$6Dw7t)
                    (dynamic-wind
                      g$swap$32483$6Dw7t
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$29390$6Dw7t
                                g$imp*$32477$6Dw7t)))
                           (case-lambda
                             ((g$subst-names$32486$6Dw7t
                                g$subst-labels$32487$6Dw7t)
                              ((case-lambda
                                 ((g$subst-labels$32488$6Dw7t
                                    g$subst-names$32489$6Dw7t)
                                  (g$make-env$29408$6Dw7t
                                    g$subst-names$32489$6Dw7t
                                    g$subst-labels$32488$6Dw7t
                                    g$itc$32478$6Dw7t)))
                               g$subst-labels$32487$6Dw7t
                               g$subst-names$32486$6Dw7t))))))
                      g$swap$32483$6Dw7t)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$32490$6Dw7t)
                        (begin
                          (g$imp-collector$32481$6Dw7t
                            g$imp-collector$32482$6Dw7t)
                          (set! g$imp-collector$32482$6Dw7t
                            g$t$32490$6Dw7t))))
                     (g$imp-collector$32481$6Dw7t)))))))
             g$imp-collector$29395$6Dw7t
             g$itc$32478$6Dw7t)))
         (g$make-collector$29392$6Dw7t)))))
   (g$null-environment$29436$6Dw7t
     g$null-environment$33029$6Dw7t
     (case-lambda
       ((g$n$32491$6Dw7t)
        (begin
          (if (not (eqv? g$n$32491$6Dw7t '5))
            (g$assertion-violation$20490$6Dw7t
              'null-environment
              '"not 5"
              g$n$32491$6Dw7t)
            (void))
          (g$environment$29435$6Dw7t '(psyntax null-environment-5))))))
   (g$scheme-report-environment$29437$6Dw7t
     g$scheme-report-environment$33030$6Dw7t
     (case-lambda
       ((g$n$32492$6Dw7t)
        (begin
          (if (not (eqv? g$n$32492$6Dw7t '5))
            (g$assertion-violation$20490$6Dw7t
              'scheme-report-environment
              '"not 5"
              g$n$32492$6Dw7t)
            (void))
          (g$environment$29435$6Dw7t
            '(psyntax scheme-report-environment-5))))))
   (g$expand$29438$6Dw7t
     g$expand$33031$6Dw7t
     (case-lambda
       ((g$x$32493$6Dw7t g$env$32494$6Dw7t)
        (if (g$env?$29407$6Dw7t g$env$32494$6Dw7t)
          ((case-lambda
             ((g$rib$32495$6Dw7t)
              ((case-lambda
                 ((g$x$32496$6Dw7t
                    g$itc$32497$6Dw7t
                    g$rtc$32498$6Dw7t
                    g$vtc$32499$6Dw7t)
                  ((case-lambda
                     ((g$x$32500$6Dw7t)
                      (begin
                        (g$seal-rib!$28804$6Dw7t g$rib$32495$6Dw7t)
                        (values g$x$32500$6Dw7t (g$rtc$32498$6Dw7t)))))
                   ((case-lambda
                      ((g$top-level-context$32509$6Dw7t
                         g$inv-collector$32510$6Dw7t
                         g$vis-collector$32511$6Dw7t
                         g$imp-collector$32512$6Dw7t
                         g$top-level-context$32513$6Dw7t
                         g$inv-collector$32514$6Dw7t
                         g$vis-collector$32515$6Dw7t
                         g$imp-collector$32516$6Dw7t)
                       ((case-lambda
                          ((g$swap$32517$6Dw7t)
                           (dynamic-wind
                             g$swap$32517$6Dw7t
                             (case-lambda
                               (()
                                (g$chi-expr$29356$6Dw7t
                                  g$x$32496$6Dw7t
                                  '()
                                  '())))
                             g$swap$32517$6Dw7t)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$32518$6Dw7t)
                                 (begin
                                   (g$top-level-context$32509$6Dw7t
                                     g$top-level-context$32513$6Dw7t)
                                   (set! g$top-level-context$32513$6Dw7t
                                     g$t$32518$6Dw7t))))
                              (g$top-level-context$32509$6Dw7t))
                             ((case-lambda
                                ((g$t$32519$6Dw7t)
                                 (begin
                                   (g$inv-collector$32510$6Dw7t
                                     g$inv-collector$32514$6Dw7t)
                                   (set! g$inv-collector$32514$6Dw7t
                                     g$t$32519$6Dw7t))))
                              (g$inv-collector$32510$6Dw7t))
                             ((case-lambda
                                ((g$t$32520$6Dw7t)
                                 (begin
                                   (g$vis-collector$32511$6Dw7t
                                     g$vis-collector$32515$6Dw7t)
                                   (set! g$vis-collector$32515$6Dw7t
                                     g$t$32520$6Dw7t))))
                              (g$vis-collector$32511$6Dw7t))
                             ((case-lambda
                                ((g$t$32521$6Dw7t)
                                 (begin
                                   (g$imp-collector$32512$6Dw7t
                                     g$imp-collector$32516$6Dw7t)
                                   (set! g$imp-collector$32516$6Dw7t
                                     g$t$32521$6Dw7t))))
                              (g$imp-collector$32512$6Dw7t))))))))
                    g$top-level-context$29466$6Dw7t
                    g$inv-collector$29393$6Dw7t
                    g$vis-collector$29394$6Dw7t
                    g$imp-collector$29395$6Dw7t
                    '#f
                    g$rtc$32498$6Dw7t
                    g$vtc$32499$6Dw7t
                    g$itc$32497$6Dw7t))))
               (g$make-stx$28813$6Dw7t
                 g$x$32493$6Dw7t
                 g$top-mark*$28773$6Dw7t
                 (list g$rib$32495$6Dw7t)
                 '())
               (g$env-itc$29411$6Dw7t g$env$32494$6Dw7t)
               (g$make-collector$29392$6Dw7t)
               (g$make-collector$29392$6Dw7t))))
           (g$make-top-rib$29391$6Dw7t
             (g$env-names$29409$6Dw7t g$env$32494$6Dw7t)
             (g$env-labels$29410$6Dw7t g$env$32494$6Dw7t)))
          (if (g$interaction-env?$29421$6Dw7t g$env$32494$6Dw7t)
            ((case-lambda
               ((g$rib$32522$6Dw7t g$r$32523$6Dw7t g$rtc$32524$6Dw7t)
                ((case-lambda
                   ((g$x$32525$6Dw7t)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$32536$6Dw7t
                               g$inv-collector$32537$6Dw7t
                               g$vis-collector$32538$6Dw7t
                               g$imp-collector$32539$6Dw7t
                               g$top-level-context$32540$6Dw7t
                               g$inv-collector$32541$6Dw7t
                               g$vis-collector$32542$6Dw7t
                               g$imp-collector$32543$6Dw7t)
                             ((case-lambda
                                ((g$swap$32544$6Dw7t)
                                 (dynamic-wind
                                   g$swap$32544$6Dw7t
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$29397$6Dw7t
                                        g$x$32525$6Dw7t
                                        g$rib$32522$6Dw7t
                                        g$r$32523$6Dw7t)))
                                   g$swap$32544$6Dw7t)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$32545$6Dw7t)
                                       (begin
                                         (g$top-level-context$32536$6Dw7t
                                           g$top-level-context$32540$6Dw7t)
                                         (set! g$top-level-context$32540$6Dw7t
                                           g$t$32545$6Dw7t))))
                                    (g$top-level-context$32536$6Dw7t))
                                   ((case-lambda
                                      ((g$t$32546$6Dw7t)
                                       (begin
                                         (g$inv-collector$32537$6Dw7t
                                           g$inv-collector$32541$6Dw7t)
                                         (set! g$inv-collector$32541$6Dw7t
                                           g$t$32546$6Dw7t))))
                                    (g$inv-collector$32537$6Dw7t))
                                   ((case-lambda
                                      ((g$t$32547$6Dw7t)
                                       (begin
                                         (g$vis-collector$32538$6Dw7t
                                           g$vis-collector$32542$6Dw7t)
                                         (set! g$vis-collector$32542$6Dw7t
                                           g$t$32547$6Dw7t))))
                                    (g$vis-collector$32538$6Dw7t))
                                   ((case-lambda
                                      ((g$t$32548$6Dw7t)
                                       (begin
                                         (g$imp-collector$32539$6Dw7t
                                           g$imp-collector$32543$6Dw7t)
                                         (set! g$imp-collector$32543$6Dw7t
                                           g$t$32548$6Dw7t))))
                                    (g$imp-collector$32539$6Dw7t))))))))
                          g$top-level-context$29466$6Dw7t
                          g$inv-collector$29393$6Dw7t
                          g$vis-collector$29394$6Dw7t
                          g$imp-collector$29395$6Dw7t
                          g$env$32494$6Dw7t
                          g$rtc$32524$6Dw7t
                          (g$make-collector$29392$6Dw7t)
                          (g$make-collector$29392$6Dw7t))))
                      (case-lambda
                        ((g$e$32549$6Dw7t g$r^$32550$6Dw7t)
                         ((case-lambda
                            ((g$r^$32551$6Dw7t g$e$32552$6Dw7t)
                             (begin
                               (g$set-interaction-env-r!$29427$6Dw7t
                                 g$env$32494$6Dw7t
                                 g$r^$32551$6Dw7t)
                               (values
                                 g$e$32552$6Dw7t
                                 (g$rtc$32524$6Dw7t)))))
                          g$r^$32550$6Dw7t
                          g$e$32549$6Dw7t))))))
                 (g$make-stx$28813$6Dw7t
                   g$x$32493$6Dw7t
                   g$top-mark*$28773$6Dw7t
                   (list g$rib$32522$6Dw7t)
                   '()))))
             (g$interaction-env-rib$29423$6Dw7t g$env$32494$6Dw7t)
             (g$interaction-env-r$29424$6Dw7t g$env$32494$6Dw7t)
             (g$make-collector$29392$6Dw7t))
            ((case-lambda
               (()
                (begin
                  '#f
                  (g$assertion-violation$20490$6Dw7t
                    'expand
                    '"not an environment"
                    g$env$32494$6Dw7t))))))))))
   (g$eval$29439$6Dw7t
     g$eval$33032$6Dw7t
     (case-lambda
       ((g$x$32553$6Dw7t g$env$32554$6Dw7t)
        (begin
          (if (not (g$environment?$29433$6Dw7t g$env$32554$6Dw7t))
            (g$error$20491$6Dw7t
              'eval
              '"not an environment"
              g$env$32554$6Dw7t)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$29438$6Dw7t
                 g$x$32553$6Dw7t
                 g$env$32554$6Dw7t)))
            (case-lambda
              ((g$x$32557$6Dw7t g$invoke-req*$32558$6Dw7t)
               ((case-lambda
                  ((g$invoke-req*$32559$6Dw7t g$x$32560$6Dw7t)
                   (begin
                     (g$for-each$23582$6Dw7t
                       g$invoke-library$28546$6Dw7t
                       g$invoke-req*$32559$6Dw7t)
                     (eval-core
                       (g$expanded->core$28278$6Dw7t
                         g$x$32560$6Dw7t)))))
                g$invoke-req*$32558$6Dw7t
                g$x$32557$6Dw7t))))))))
   (g$expand->core$29440$6Dw7t
     g$expand->core$33033$6Dw7t
     (case-lambda
       ((g$x$32561$6Dw7t g$env$32562$6Dw7t)
        (begin
          (if (not (g$environment?$29433$6Dw7t g$env$32562$6Dw7t))
            (g$error$20491$6Dw7t
              'eval
              '"not an environment"
              g$env$32562$6Dw7t)
            (void))
          (call-with-values
            (case-lambda
              (()
               (g$expand$29438$6Dw7t
                 g$x$32561$6Dw7t
                 g$env$32562$6Dw7t)))
            (case-lambda
              ((g$x$32565$6Dw7t g$invoke-req*$32566$6Dw7t)
               ((case-lambda
                  ((g$invoke-req*$32567$6Dw7t g$x$32568$6Dw7t)
                   (begin
                     (g$for-each$23582$6Dw7t
                       g$invoke-library$28546$6Dw7t
                       g$invoke-req*$32567$6Dw7t)
                     (g$expanded->core$28278$6Dw7t g$x$32568$6Dw7t))))
                g$invoke-req*$32566$6Dw7t
                g$x$32565$6Dw7t))))))))
   (g$library-expander$29441$6Dw7t
     g$library-expander$33034$6Dw7t
     (case-lambda
       ((g$x$32569$6Dw7t
          g$filename$32570$6Dw7t
          g$verify-name$32571$6Dw7t)
        (letrec* ((g$build-visit-code$32572$6Dw7t
                    (case-lambda
                      ((g$macro*$32615$6Dw7t)
                       (if (null? g$macro*$32615$6Dw7t)
                         (g$build-void$28766$6Dw7t)
                         (g$build-sequence$28765$6Dw7t
                           '#f
                           (g$map$23581$6Dw7t
                             (case-lambda
                               ((g$x$32616$6Dw7t)
                                ((case-lambda
                                   ((g$loc$32617$6Dw7t
                                      g$src$32618$6Dw7t)
                                    (list
                                      'set!
                                      g$loc$32617$6Dw7t
                                      g$src$32618$6Dw7t)))
                                 (car g$x$32616$6Dw7t)
                                 (g$cddr$24047$6Dw7t g$x$32616$6Dw7t))))
                             g$macro*$32615$6Dw7t))))))
                  (g$visit!$32573$6Dw7t
                    (case-lambda
                      ((g$macro*$32611$6Dw7t)
                       (g$for-each$23582$6Dw7t
                         (case-lambda
                           ((g$x$32612$6Dw7t)
                            ((case-lambda
                               ((g$loc$32613$6Dw7t g$proc$32614$6Dw7t)
                                (set-symbol-value!
                                  g$loc$32613$6Dw7t
                                  g$proc$32614$6Dw7t)))
                             (car g$x$32612$6Dw7t)
                             (g$cadr$24045$6Dw7t g$x$32612$6Dw7t))))
                         g$macro*$32611$6Dw7t)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$29399$6Dw7t
                 g$x$32569$6Dw7t
                 g$verify-name$32571$6Dw7t)))
            (case-lambda
              ((g$name$32583$6Dw7t
                 g$ver$32584$6Dw7t
                 g$imp*$32585$6Dw7t
                 g$inv*$32586$6Dw7t
                 g$vis*$32587$6Dw7t
                 g$invoke-code$32588$6Dw7t
                 g$macro*$32589$6Dw7t
                 g$export-subst$32590$6Dw7t
                 g$export-env$32591$6Dw7t)
               ((case-lambda
                  ((g$export-env$32592$6Dw7t
                     g$export-subst$32593$6Dw7t
                     g$macro*$32594$6Dw7t
                     g$invoke-code$32595$6Dw7t
                     g$vis*$32596$6Dw7t
                     g$inv*$32597$6Dw7t
                     g$imp*$32598$6Dw7t
                     g$ver$32599$6Dw7t
                     g$name$32600$6Dw7t)
                   ((case-lambda
                      ((g$id$32601$6Dw7t
                         g$name$32602$6Dw7t
                         g$ver$32603$6Dw7t
                         g$imp*$32604$6Dw7t
                         g$vis*$32605$6Dw7t
                         g$inv*$32606$6Dw7t
                         g$visit-proc$32607$6Dw7t
                         g$invoke-proc$32608$6Dw7t
                         g$visit-code$32609$6Dw7t
                         g$invoke-code$32610$6Dw7t)
                       (begin
                         (g$install-library$28544$6Dw7t
                           g$id$32601$6Dw7t
                           g$name$32602$6Dw7t
                           g$ver$32603$6Dw7t
                           g$imp*$32604$6Dw7t
                           g$vis*$32605$6Dw7t
                           g$inv*$32606$6Dw7t
                           g$export-subst$32593$6Dw7t
                           g$export-env$32592$6Dw7t
                           g$visit-proc$32607$6Dw7t
                           g$invoke-proc$32608$6Dw7t
                           g$visit-code$32609$6Dw7t
                           g$invoke-code$32610$6Dw7t
                           '#t
                           g$filename$32570$6Dw7t)
                         (values
                           g$id$32601$6Dw7t
                           g$name$32602$6Dw7t
                           g$ver$32603$6Dw7t
                           g$imp*$32604$6Dw7t
                           g$vis*$32605$6Dw7t
                           g$inv*$32606$6Dw7t
                           g$invoke-code$32610$6Dw7t
                           g$visit-code$32609$6Dw7t
                           g$export-subst$32593$6Dw7t
                           g$export-env$32592$6Dw7t))))
                    (gensym)
                    g$name$32600$6Dw7t
                    g$ver$32599$6Dw7t
                    (g$map$23581$6Dw7t
                      g$library-spec$28550$6Dw7t
                      g$imp*$32598$6Dw7t)
                    (g$map$23581$6Dw7t
                      g$library-spec$28550$6Dw7t
                      g$vis*$32596$6Dw7t)
                    (g$map$23581$6Dw7t
                      g$library-spec$28550$6Dw7t
                      g$inv*$32597$6Dw7t)
                    (case-lambda
                      (() (g$visit!$32573$6Dw7t g$macro*$32594$6Dw7t)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$28278$6Dw7t
                           g$invoke-code$32595$6Dw7t))))
                    (g$build-visit-code$32572$6Dw7t
                      g$macro*$32594$6Dw7t)
                    g$invoke-code$32595$6Dw7t)))
                g$export-env$32591$6Dw7t
                g$export-subst$32590$6Dw7t
                g$macro*$32589$6Dw7t
                g$invoke-code$32588$6Dw7t
                g$vis*$32587$6Dw7t
                g$inv*$32586$6Dw7t
                g$imp*$32585$6Dw7t
                g$ver$32584$6Dw7t
                g$name$32583$6Dw7t))))))
       ((g$x$32619$6Dw7t g$filename$32620$6Dw7t)
        (g$library-expander$29441$6Dw7t
          g$x$32619$6Dw7t
          g$filename$32620$6Dw7t
          (case-lambda ((g$x$32621$6Dw7t) (values)))))
       ((g$x$32622$6Dw7t)
        (g$library-expander$29441$6Dw7t
          g$x$32622$6Dw7t
          '#f
          (case-lambda ((g$x$32623$6Dw7t) (values)))))))
   (g$boot-library-expand$29442$6Dw7t
     g$boot-library-expand$33035$6Dw7t
     (case-lambda
       ((g$x$32624$6Dw7t)
        (call-with-values
          (case-lambda
            (() (g$library-expander$29441$6Dw7t g$x$32624$6Dw7t)))
          (case-lambda
            ((g$id$32635$6Dw7t
               g$name$32636$6Dw7t
               g$ver$32637$6Dw7t
               g$imp*$32638$6Dw7t
               g$vis*$32639$6Dw7t
               g$inv*$32640$6Dw7t
               g$invoke-code$32641$6Dw7t
               g$visit-code$32642$6Dw7t
               g$export-subst$32643$6Dw7t
               g$export-env$32644$6Dw7t)
             ((case-lambda
                ((g$export-env$32645$6Dw7t
                   g$export-subst$32646$6Dw7t
                   g$visit-code$32647$6Dw7t
                   g$invoke-code$32648$6Dw7t
                   g$inv*$32649$6Dw7t
                   g$vis*$32650$6Dw7t
                   g$imp*$32651$6Dw7t
                   g$ver$32652$6Dw7t
                   g$name$32653$6Dw7t
                   g$id$32654$6Dw7t)
                 (values
                   g$name$32653$6Dw7t
                   g$invoke-code$32648$6Dw7t
                   g$export-subst$32646$6Dw7t
                   g$export-env$32645$6Dw7t)))
              g$export-env$32644$6Dw7t
              g$export-subst$32643$6Dw7t
              g$visit-code$32642$6Dw7t
              g$invoke-code$32641$6Dw7t
              g$inv*$32640$6Dw7t
              g$vis*$32639$6Dw7t
              g$imp*$32638$6Dw7t
              g$ver$32637$6Dw7t
              g$name$32636$6Dw7t
              g$id$32635$6Dw7t)))))))
   (g$rev-map-append$29443$6Dw7t
     g$rev-map-append$33036$6Dw7t
     (case-lambda
       ((g$f$32655$6Dw7t g$ls$32656$6Dw7t g$ac$32657$6Dw7t)
        (if (null? g$ls$32656$6Dw7t)
          g$ac$32657$6Dw7t
          ((case-lambda
             (()
              (begin
                '#f
                (g$rev-map-append$29443$6Dw7t
                  g$f$32655$6Dw7t
                  (cdr g$ls$32656$6Dw7t)
                  (cons
                    (g$f$32655$6Dw7t (car g$ls$32656$6Dw7t))
                    g$ac$32657$6Dw7t))))))))))
   (g$build-exports$29444$6Dw7t
     g$build-exports$33037$6Dw7t
     (case-lambda
       ((g$lex*+loc*$32658$6Dw7t g$init*$32659$6Dw7t)
        (g$build-sequence$28765$6Dw7t
          '#f
          (cons
            (g$build-void$28766$6Dw7t)
            (g$rev-map-append$29443$6Dw7t
              (case-lambda
                ((g$x$32660$6Dw7t)
                 (list
                   'set!
                   (cdr g$x$32660$6Dw7t)
                   (car g$x$32660$6Dw7t))))
              g$lex*+loc*$32658$6Dw7t
              g$init*$32659$6Dw7t))))))
   (g$make-export-subst$29445$6Dw7t
     g$make-export-subst$33038$6Dw7t
     (case-lambda
       ((g$name*$32661$6Dw7t g$id*$32662$6Dw7t)
        (g$map$23581$6Dw7t
          (case-lambda
            ((g$name$32663$6Dw7t g$id$32664$6Dw7t)
             ((case-lambda
                ((g$label$32665$6Dw7t)
                 (begin
                   (if (not g$label$32665$6Dw7t)
                     (g$syntax-violation$29458$6Dw7t
                       '#f
                       '"cannot export unbound identifier"
                       g$id$32664$6Dw7t)
                     (void))
                   (cons g$name$32663$6Dw7t g$label$32665$6Dw7t))))
              (g$id->label$28853$6Dw7t g$id$32664$6Dw7t))))
          g$name*$32661$6Dw7t
          g$id*$32662$6Dw7t))))
   (g$make-export-env/macros$29446$6Dw7t
     g$make-export-env/macros$33039$6Dw7t
     (case-lambda
       ((g$lex*$32666$6Dw7t g$loc*$32667$6Dw7t g$r$32668$6Dw7t)
        (letrec* ((g$lookup$32669$6Dw7t
                    (case-lambda
                      ((g$x$32685$6Dw7t)
                       ((letrec ((g$f$32686$6Dw7t
                                   (case-lambda
                                     ((g$x$32687$6Dw7t
                                        g$lex*$32688$6Dw7t
                                        g$loc*$32689$6Dw7t)
                                      (if (pair? g$lex*$32688$6Dw7t)
                                        (if (eq? g$x$32687$6Dw7t
                                                 (car g$lex*$32688$6Dw7t))
                                          (car g$loc*$32689$6Dw7t)
                                          (g$f$32686$6Dw7t
                                            g$x$32687$6Dw7t
                                            (cdr g$lex*$32688$6Dw7t)
                                            (cdr g$loc*$32689$6Dw7t)))
                                        ((case-lambda
                                           (()
                                            (begin
                                              '#f
                                              (g$assertion-violation$20490$6Dw7t
                                                'lookup-make-export
                                                '"BUG"))))))))))
                          g$f$32686$6Dw7t)
                        g$x$32685$6Dw7t
                        g$lex*$32666$6Dw7t
                        g$loc*$32667$6Dw7t)))))
          ((letrec ((g$f$32670$6Dw7t
                      (case-lambda
                        ((g$r$32671$6Dw7t
                           g$env$32672$6Dw7t
                           g$global*$32673$6Dw7t
                           g$macro*$32674$6Dw7t)
                         (if (null? g$r$32671$6Dw7t)
                           (values
                             g$env$32672$6Dw7t
                             g$global*$32673$6Dw7t
                             g$macro*$32674$6Dw7t)
                           ((case-lambda
                              (()
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$x$32675$6Dw7t)
                                     ((case-lambda
                                        ((g$label$32676$6Dw7t
                                           g$b$32677$6Dw7t)
                                         ((case-lambda
                                            ((g$t$32678$6Dw7t)
                                             (if (eqv?
                                                   g$t$32678$6Dw7t
                                                   'lexical)
                                               ((case-lambda
                                                  ((g$v$32679$6Dw7t)
                                                   ((case-lambda
                                                      ((g$loc$32680$6Dw7t
                                                         g$type$32681$6Dw7t)
                                                       (g$f$32670$6Dw7t
                                                         (cdr g$r$32671$6Dw7t)
                                                         (cons
                                                           (g$cons*$23583$6Dw7t
                                                             g$label$32676$6Dw7t
                                                             g$type$32681$6Dw7t
                                                             g$loc$32680$6Dw7t)
                                                           g$env$32672$6Dw7t)
                                                         (cons
                                                           (cons
                                                             (g$lexical-var$29282$6Dw7t
                                                               g$v$32679$6Dw7t)
                                                             g$loc$32680$6Dw7t)
                                                           g$global*$32673$6Dw7t)
                                                         g$macro*$32674$6Dw7t)))
                                                    (g$lookup$32669$6Dw7t
                                                      (g$lexical-var$29282$6Dw7t
                                                        g$v$32679$6Dw7t))
                                                    (if (g$lexical-mutable?$29283$6Dw7t
                                                          g$v$32679$6Dw7t)
                                                      'mutable
                                                      'global))))
                                                (g$binding-value$28858$6Dw7t
                                                  g$b$32677$6Dw7t))
                                               (if (eqv?
                                                     g$t$32678$6Dw7t
                                                     'local-macro)
                                                 ((case-lambda
                                                    ((g$loc$32682$6Dw7t)
                                                     (g$f$32670$6Dw7t
                                                       (cdr g$r$32671$6Dw7t)
                                                       (cons
                                                         (g$cons*$23583$6Dw7t
                                                           g$label$32676$6Dw7t
                                                           'global-macro
                                                           g$loc$32682$6Dw7t)
                                                         g$env$32672$6Dw7t)
                                                       g$global*$32673$6Dw7t
                                                       (cons
                                                         (cons
                                                           g$loc$32682$6Dw7t
                                                           (g$binding-value$28858$6Dw7t
                                                             g$b$32677$6Dw7t))
                                                         g$macro*$32674$6Dw7t))))
                                                  (gensym))
                                                 (if (eqv?
                                                       g$t$32678$6Dw7t
                                                       'local-macro!)
                                                   ((case-lambda
                                                      ((g$loc$32683$6Dw7t)
                                                       (g$f$32670$6Dw7t
                                                         (cdr g$r$32671$6Dw7t)
                                                         (cons
                                                           (g$cons*$23583$6Dw7t
                                                             g$label$32676$6Dw7t
                                                             'global-macro!
                                                             g$loc$32683$6Dw7t)
                                                           g$env$32672$6Dw7t)
                                                         g$global*$32673$6Dw7t
                                                         (cons
                                                           (cons
                                                             g$loc$32683$6Dw7t
                                                             (g$binding-value$28858$6Dw7t
                                                               g$b$32677$6Dw7t))
                                                           g$macro*$32674$6Dw7t))))
                                                    (gensym))
                                                   (if (eqv?
                                                         g$t$32678$6Dw7t
                                                         'local-ctv)
                                                     ((case-lambda
                                                        ((g$loc$32684$6Dw7t)
                                                         (g$f$32670$6Dw7t
                                                           (cdr g$r$32671$6Dw7t)
                                                           (cons
                                                             (g$cons*$23583$6Dw7t
                                                               g$label$32676$6Dw7t
                                                               'global-ctv
                                                               g$loc$32684$6Dw7t)
                                                             g$env$32672$6Dw7t)
                                                           g$global*$32673$6Dw7t
                                                           (cons
                                                             (cons
                                                               g$loc$32684$6Dw7t
                                                               (g$binding-value$28858$6Dw7t
                                                                 g$b$32677$6Dw7t))
                                                             g$macro*$32674$6Dw7t))))
                                                      (gensym))
                                                     (if (g$memv$23570$6Dw7t
                                                           g$t$32678$6Dw7t
                                                           '($rtd
                                                              $module))
                                                       (g$f$32670$6Dw7t
                                                         (cdr g$r$32671$6Dw7t)
                                                         (cons
                                                           g$x$32675$6Dw7t
                                                           g$env$32672$6Dw7t)
                                                         g$global*$32673$6Dw7t
                                                         g$macro*$32674$6Dw7t)
                                                       ((case-lambda
                                                          (()
                                                           (begin
                                                             '#f
                                                             (g$assertion-violation$20490$6Dw7t
                                                               'expander
                                                               '"BUG: do not know how to export"
                                                               (g$binding-type$28857$6Dw7t
                                                                 g$b$32677$6Dw7t)
                                                               (g$binding-value$28858$6Dw7t
                                                                 g$b$32677$6Dw7t)))))))))))))
                                          (g$binding-type$28857$6Dw7t
                                            g$b$32677$6Dw7t))))
                                      (car g$x$32675$6Dw7t)
                                      (cdr g$x$32675$6Dw7t))))
                                  (car g$r$32671$6Dw7t)))))))))))
             g$f$32670$6Dw7t)
           g$r$32668$6Dw7t
           '()
           '()
           '())))))
   (g$generate-temporaries$29447$6Dw7t
     g$generate-temporaries$33040$6Dw7t
     (case-lambda
       ((g$ls$32690$6Dw7t)
        ((case-lambda
           ((g$t$32691$6Dw7t)
            ((case-lambda
               ((g$ls/false$32692$6Dw7t)
                (if g$ls/false$32692$6Dw7t
                  (apply
                    (case-lambda
                      ((g$ls$32693$6Dw7t)
                       (g$map$23581$6Dw7t
                         (case-lambda
                           ((g$x$32694$6Dw7t)
                            (g$make-stx$28813$6Dw7t
                              ((case-lambda
                                 ((g$x$32695$6Dw7t)
                                  (if ((case-lambda
                                         ((g$t$32696$6Dw7t)
                                          (if g$t$32696$6Dw7t
                                            g$t$32696$6Dw7t
                                            (begin
                                              '#f
                                              (g$string?$24003$6Dw7t
                                                g$x$32695$6Dw7t)))))
                                       (g$symbol?$24007$6Dw7t
                                         g$x$32695$6Dw7t))
                                    (gensym g$x$32695$6Dw7t)
                                    ((case-lambda
                                       (() (begin '#f (gensym 't))))))))
                               (g$syntax->datum$29461$6Dw7t
                                 g$x$32694$6Dw7t))
                              g$top-mark*$28773$6Dw7t
                              '()
                              '())))
                         g$ls$32693$6Dw7t)))
                    g$ls/false$32692$6Dw7t)
                  ((case-lambda
                     ((g$t$32697$6Dw7t)
                      ((case-lambda
                         ((g$ls/false$32698$6Dw7t)
                          (if g$ls/false$32698$6Dw7t
                            (apply
                              (case-lambda
                                (()
                                 (g$assertion-violation$20490$6Dw7t
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$32698$6Dw7t)
                            (g$syntax-violation$29458$6Dw7t
                              '#f
                              '"invalid syntax"
                              g$t$32697$6Dw7t))))
                       (g$syntax-dispatch$29338$6Dw7t
                         g$t$32697$6Dw7t
                         '_))))
                   g$t$32691$6Dw7t))))
             (g$syntax-dispatch$29338$6Dw7t
               g$t$32691$6Dw7t
               'each-any))))
         g$ls$32690$6Dw7t))))
   (g$free-identifier=?$29448$6Dw7t
     g$free-identifier=?$33041$6Dw7t
     (case-lambda
       ((g$x$32699$6Dw7t g$y$32700$6Dw7t)
        (if (g$id?$28840$6Dw7t g$x$32699$6Dw7t)
          (if (g$id?$28840$6Dw7t g$y$32700$6Dw7t)
            (g$free-id=?$28844$6Dw7t g$x$32699$6Dw7t g$y$32700$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'free-identifier=?
              '"not an identifier"
              g$y$32700$6Dw7t))
          (g$assertion-violation$20490$6Dw7t
            'free-identifier=?
            '"not an identifier"
            g$x$32699$6Dw7t)))))
   (g$bound-identifier=?$29449$6Dw7t
     g$bound-identifier=?$33042$6Dw7t
     (case-lambda
       ((g$x$32701$6Dw7t g$y$32702$6Dw7t)
        (if (g$id?$28840$6Dw7t g$x$32701$6Dw7t)
          (if (g$id?$28840$6Dw7t g$y$32702$6Dw7t)
            (g$bound-id=?$28843$6Dw7t g$x$32701$6Dw7t g$y$32702$6Dw7t)
            (g$assertion-violation$20490$6Dw7t
              'bound-identifier=?
              '"not an identifier"
              g$y$32702$6Dw7t))
          (g$assertion-violation$20490$6Dw7t
            'bound-identifier=?
            '"not an identifier"
            g$x$32701$6Dw7t)))))
   (g$make-source-condition$29450$6Dw7t
     g$make-source-condition$33043$6Dw7t
     (case-lambda
       ((g$x$32703$6Dw7t)
        (letrec* ((g$13549$32704$6Dw7t
                    (make-record-type-descriptor
                      '&source-information
                      g$&condition-rtd$20226$6Dw7t
                      'g$13552$6Dw7t
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$13551$32705$6Dw7t '#f)
                  (g$13550$32706$6Dw7t
                    (make-record-constructor-descriptor
                      g$13549$32704$6Dw7t
                      g$&condition-rcd$20227$6Dw7t
                      g$13551$32705$6Dw7t))
                  (g$13548$32709$6Dw7t
                    (record-predicate g$13549$32704$6Dw7t))
                  (g$make-source-condition$32710$6Dw7t
                    (record-constructor g$13550$32706$6Dw7t))
                  (g$13546$32711$6Dw7t
                    (record-accessor g$13549$32704$6Dw7t '0))
                  (g$13547$32712$6Dw7t
                    (record-accessor g$13549$32704$6Dw7t '1))
                  (g$source-condition?$32713$6Dw7t
                    (condition-predicate g$13549$32704$6Dw7t))
                  (g$source-filename$32714$6Dw7t
                    (condition-accessor
                      g$13549$32704$6Dw7t
                      g$13546$32711$6Dw7t))
                  (g$source-character$32715$6Dw7t
                    (condition-accessor
                      g$13549$32704$6Dw7t
                      g$13547$32712$6Dw7t)))
          (if (pair? g$x$32703$6Dw7t)
            (g$make-source-condition$32710$6Dw7t
              (car g$x$32703$6Dw7t)
              (cdr g$x$32703$6Dw7t))
            (condition))))))
   (g$extract-position-condition$29451$6Dw7t
     g$extract-position-condition$33044$6Dw7t
     (case-lambda
       ((g$x$32716$6Dw7t)
        (g$make-source-condition$29450$6Dw7t
          (g$expression-position$29452$6Dw7t g$x$32716$6Dw7t)))))
   (g$expression-position$29452$6Dw7t
     g$expression-position$33045$6Dw7t
     (case-lambda
       ((g$x$32717$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$32717$6Dw7t)
          (begin
            '#f
            ((case-lambda
               ((g$x$32718$6Dw7t)
                (if (annotation? g$x$32718$6Dw7t)
                  (begin '#f (annotation-source g$x$32718$6Dw7t))
                  '#f)))
             (g$stx-expr$28814$6Dw7t g$x$32717$6Dw7t)))
          '#f))))
   (g$syntax-annotation$29453$6Dw7t
     g$syntax-annotation$33046$6Dw7t
     (case-lambda
       ((g$x$32719$6Dw7t)
        (if (g$stx?$28812$6Dw7t g$x$32719$6Dw7t)
          (g$stx-expr$28814$6Dw7t g$x$32719$6Dw7t)
          g$x$32719$6Dw7t))))
   (g$assertion-error$29454$6Dw7t
     g$assertion-error$33047$6Dw7t
     (case-lambda
       ((g$expr$32720$6Dw7t g$pos$32721$6Dw7t)
        (raise
          (condition
            (g$make-assertion-violation$20274$6Dw7t)
            (g$make-who-condition$20292$6Dw7t 'assert)
            (g$make-message-condition$20232$6Dw7t '"assertion failed")
            (g$make-irritants-condition$20282$6Dw7t
              (list g$expr$32720$6Dw7t))
            (g$make-source-condition$29450$6Dw7t g$pos$32721$6Dw7t))))))
   (g$syntax-error$29455$6Dw7t
     g$syntax-error$33048$6Dw7t
     (case-lambda
       ((g$x$32722$6Dw7t . g$args$32723$6Dw7t)
        (begin
          (if (not (g$for-all$23579$6Dw7t
                     g$string?$24003$6Dw7t
                     g$args$32723$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'syntax-error
              '"invalid argument"
              g$args$32723$6Dw7t)
            (void))
          (raise
            (condition
              (g$make-message-condition$20232$6Dw7t
                (if (null? g$args$32723$6Dw7t)
                  '"invalid syntax"
                  (apply
                    g$string-append$24025$6Dw7t
                    g$args$32723$6Dw7t)))
              (g$make-syntax-violation$20346$6Dw7t
                (g$syntax->datum$29461$6Dw7t g$x$32722$6Dw7t)
                '#f)
              (g$extract-position-condition$29451$6Dw7t g$x$32722$6Dw7t)
              (g$extract-trace$29456$6Dw7t g$x$32722$6Dw7t)))))))
   (g$extract-trace$29456$6Dw7t
     g$extract-trace$33049$6Dw7t
     (case-lambda
       ((g$x$32724$6Dw7t)
        (letrec* ((g$13575$32725$6Dw7t
                    (make-record-type-descriptor
                      '&trace
                      g$&condition-rtd$20226$6Dw7t
                      'g$13578$6Dw7t
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$13577$32726$6Dw7t '#f)
                  (g$13576$32727$6Dw7t
                    (make-record-constructor-descriptor
                      g$13575$32725$6Dw7t
                      g$&condition-rcd$20227$6Dw7t
                      g$13577$32726$6Dw7t))
                  (g$13574$32730$6Dw7t
                    (record-predicate g$13575$32725$6Dw7t))
                  (g$make-trace$32731$6Dw7t
                    (record-constructor g$13576$32727$6Dw7t))
                  (g$13573$32732$6Dw7t
                    (record-accessor g$13575$32725$6Dw7t '0))
                  (g$trace?$32733$6Dw7t
                    (condition-predicate g$13575$32725$6Dw7t))
                  (g$trace-form$32734$6Dw7t
                    (condition-accessor
                      g$13575$32725$6Dw7t
                      g$13573$32732$6Dw7t)))
          ((letrec ((g$f$32735$6Dw7t
                      (case-lambda
                        ((g$x$32736$6Dw7t)
                         (if (g$stx?$28812$6Dw7t g$x$32736$6Dw7t)
                           (apply
                             condition
                             (g$make-trace$32731$6Dw7t g$x$32736$6Dw7t)
                             (g$map$23581$6Dw7t
                               g$f$32735$6Dw7t
                               (g$stx-ae*$28817$6Dw7t g$x$32736$6Dw7t)))
                           (if (annotation? g$x$32736$6Dw7t)
                             (g$make-trace$32731$6Dw7t
                               (g$make-stx$28813$6Dw7t
                                 g$x$32736$6Dw7t
                                 '()
                                 '()
                                 '()))
                             ((case-lambda
                                (() (begin '#f (condition)))))))))))
             g$f$32735$6Dw7t)
           g$x$32724$6Dw7t)))))
   (g$syntax-violation*$29457$6Dw7t
     g$syntax-violation*$33050$6Dw7t
     (case-lambda
       ((g$who$32737$6Dw7t
          g$msg$32738$6Dw7t
          g$form$32739$6Dw7t
          g$condition-object$32740$6Dw7t)
        (begin
          (if (not (g$string?$24003$6Dw7t g$msg$32738$6Dw7t))
            (g$assertion-violation$20490$6Dw7t
              'syntax-violation
              '"message is not a string"
              g$msg$32738$6Dw7t)
            (void))
          ((case-lambda
             ((g$who$32741$6Dw7t)
              (raise
                (condition
                  (if g$who$32741$6Dw7t
                    (g$make-who-condition$20292$6Dw7t g$who$32741$6Dw7t)
                    (condition))
                  (g$make-message-condition$20232$6Dw7t
                    g$msg$32738$6Dw7t)
                  g$condition-object$32740$6Dw7t
                  (g$extract-position-condition$29451$6Dw7t
                    g$form$32739$6Dw7t)
                  (g$extract-trace$29456$6Dw7t g$form$32739$6Dw7t)))))
           (if ((case-lambda
                  ((g$t$32742$6Dw7t)
                   (if g$t$32742$6Dw7t
                     g$t$32742$6Dw7t
                     (begin
                       '#f
                       (g$symbol?$24007$6Dw7t g$who$32737$6Dw7t)))))
                (g$string?$24003$6Dw7t g$who$32737$6Dw7t))
             g$who$32737$6Dw7t
             (if (not g$who$32737$6Dw7t)
               ((case-lambda
                  ((g$t$32743$6Dw7t)
                   ((case-lambda
                      ((g$ls/false$32744$6Dw7t)
                       (if (if g$ls/false$32744$6Dw7t
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$32745$6Dw7t)
                                    (g$id?$28840$6Dw7t
                                      g$id$32745$6Dw7t)))
                                 g$ls/false$32744$6Dw7t))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$32746$6Dw7t)
                              (g$syntax->datum$29461$6Dw7t
                                g$id$32746$6Dw7t)))
                           g$ls/false$32744$6Dw7t)
                         ((case-lambda
                            ((g$t$32747$6Dw7t)
                             ((case-lambda
                                ((g$ls/false$32748$6Dw7t)
                                 (if (if g$ls/false$32748$6Dw7t
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$32749$6Dw7t
                                                g$rest$32750$6Dw7t)
                                              (g$id?$28840$6Dw7t
                                                g$id$32749$6Dw7t)))
                                           g$ls/false$32748$6Dw7t))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$32751$6Dw7t
                                          g$rest$32752$6Dw7t)
                                        (g$syntax->datum$29461$6Dw7t
                                          g$id$32751$6Dw7t)))
                                     g$ls/false$32748$6Dw7t)
                                   ((case-lambda
                                      ((g$t$32753$6Dw7t)
                                       ((case-lambda
                                          ((g$ls/false$32754$6Dw7t)
                                           (if g$ls/false$32754$6Dw7t
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$32754$6Dw7t)
                                             (g$syntax-violation$29458$6Dw7t
                                               '#f
                                               '"invalid syntax"
                                               g$t$32753$6Dw7t))))
                                        (g$syntax-dispatch$29338$6Dw7t
                                          g$t$32753$6Dw7t
                                          '_))))
                                    g$t$32747$6Dw7t))))
                              (g$syntax-dispatch$29338$6Dw7t
                                g$t$32747$6Dw7t
                                '(any . any)))))
                          g$t$32743$6Dw7t))))
                    (g$syntax-dispatch$29338$6Dw7t
                      g$t$32743$6Dw7t
                      'any))))
                g$form$32739$6Dw7t)
               ((case-lambda
                  (()
                   (begin
                     '#f
                     (g$assertion-violation$20490$6Dw7t
                       'syntax-violation
                       '"invalid who argument"
                       g$who$32737$6Dw7t))))))))))))
   (g$syntax-violation$29458$6Dw7t
     g$syntax-violation$33051$6Dw7t
     (case-lambda
       ((g$who$32755$6Dw7t g$msg$32756$6Dw7t g$form$32757$6Dw7t)
        (g$syntax-violation$29458$6Dw7t
          g$who$32755$6Dw7t
          g$msg$32756$6Dw7t
          g$form$32757$6Dw7t
          '#f))
       ((g$who$32758$6Dw7t
          g$msg$32759$6Dw7t
          g$form$32760$6Dw7t
          g$subform$32761$6Dw7t)
        (g$syntax-violation*$29457$6Dw7t
          g$who$32758$6Dw7t
          g$msg$32759$6Dw7t
          g$form$32760$6Dw7t
          (g$make-syntax-violation$20346$6Dw7t
            (g$syntax->datum$29461$6Dw7t g$form$32760$6Dw7t)
            (g$syntax->datum$29461$6Dw7t g$subform$32761$6Dw7t))))))
   (g$identifier?$29459$6Dw7t
     g$identifier?$33052$6Dw7t
     (case-lambda
       ((g$x$32762$6Dw7t) (g$id?$28840$6Dw7t g$x$32762$6Dw7t))))
   (g$datum->syntax$29460$6Dw7t
     g$datum->syntax$33053$6Dw7t
     (case-lambda
       ((g$id$32763$6Dw7t g$datum$32764$6Dw7t)
        (if (g$id?$28840$6Dw7t g$id$32763$6Dw7t)
          (g$datum->stx$28823$6Dw7t
            g$id$32763$6Dw7t
            g$datum$32764$6Dw7t)
          (g$assertion-violation$20490$6Dw7t
            'datum->syntax
            '"not an identifier"
            g$id$32763$6Dw7t)))))
   (g$syntax->datum$29461$6Dw7t
     g$syntax->datum$33054$6Dw7t
     (case-lambda
       ((g$x$32765$6Dw7t) (g$stx->datum$28851$6Dw7t g$x$32765$6Dw7t))))
   (g$compile-r6rs-top-level$29462$6Dw7t
     g$compile-r6rs-top-level$33055$6Dw7t
     (case-lambda
       ((g$x*$32766$6Dw7t)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$29401$6Dw7t g$x*$32766$6Dw7t)))
          (case-lambda
            ((g$lib*$32769$6Dw7t g$invoke-code$32770$6Dw7t)
             ((case-lambda
                ((g$invoke-code$32771$6Dw7t g$lib*$32772$6Dw7t)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$23582$6Dw7t
                        g$invoke-library$28546$6Dw7t
                        g$lib*$32772$6Dw7t)
                      (eval-core
                        (g$expanded->core$28278$6Dw7t
                          g$invoke-code$32771$6Dw7t)))))))
              g$invoke-code$32770$6Dw7t
              g$lib*$32769$6Dw7t)))))))
   (g$pre-compile-r6rs-top-level$29463$6Dw7t
     g$pre-compile-r6rs-top-level$33056$6Dw7t
     (case-lambda
       ((g$x*$32773$6Dw7t)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$29401$6Dw7t g$x*$32773$6Dw7t)))
          (case-lambda
            ((g$lib*$32776$6Dw7t g$invoke-code$32777$6Dw7t)
             ((case-lambda
                ((g$invoke-code$32778$6Dw7t g$lib*$32779$6Dw7t)
                 (begin
                   (g$for-each$23582$6Dw7t
                     g$invoke-library$28546$6Dw7t
                     g$lib*$32779$6Dw7t)
                   (compile-core
                     (g$expanded->core$28278$6Dw7t
                       g$invoke-code$32778$6Dw7t)))))
              g$invoke-code$32777$6Dw7t
              g$lib*$32776$6Dw7t)))))))
   (g$new-interaction-environment$29464$6Dw7t
     g$new-interaction-environment$33057$6Dw7t
     (case-lambda
       (() (g$new-interaction-environment$29464$6Dw7t '(ironscheme)))
       ((g$libname$32780$6Dw7t)
        ((case-lambda
           ((g$lib$32781$6Dw7t g$rib$32782$6Dw7t)
            (begin
              ((case-lambda
                 ((g$subst$32783$6Dw7t)
                  (begin
                    (g$set-rib-sym*!$28793$6Dw7t
                      g$rib$32782$6Dw7t
                      (g$map$23581$6Dw7t car g$subst$32783$6Dw7t))
                    (g$set-rib-mark**!$28794$6Dw7t
                      g$rib$32782$6Dw7t
                      (g$map$23581$6Dw7t
                        (case-lambda
                          ((g$x$32784$6Dw7t) g$top-mark*$28773$6Dw7t))
                        g$subst$32783$6Dw7t))
                    (g$set-rib-label*!$28795$6Dw7t
                      g$rib$32782$6Dw7t
                      (g$map$23581$6Dw7t cdr g$subst$32783$6Dw7t)))))
               (g$library-subst$28503$6Dw7t g$lib$32781$6Dw7t))
              (g$make-interaction-env$29422$6Dw7t
                g$rib$32782$6Dw7t
                '()
                '()))))
         (g$find-library-by-name$28539$6Dw7t g$libname$32780$6Dw7t)
         (g$make-empty-rib$28798$6Dw7t)))))
   (g$interaction-environment$29465$6Dw7t
     g$interaction-environment$33058$6Dw7t
     (g$make-parameter$27681$6Dw7t '#f))
   (g$top-level-context$29466$6Dw7t
     g$top-level-context$33059$6Dw7t
     (g$make-parameter$27681$6Dw7t '#f)))
  (g$current-library-expander$28536$6Dw7t
    g$library-expander$29441$6Dw7t))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$28275$6Dw7t
      (case-lambda
        ((g$x$33146$6Dw7t)
         ((case-lambda
            ((g$t$33147$6Dw7t)
             (if g$t$33147$6Dw7t
               (cdr g$t$33147$6Dw7t)
               ((case-lambda (() (begin '#f '#f)))))))
          (g$assq$23565$6Dw7t
            g$x$33146$6Dw7t
            '((ellipsis-map . g$ellipsis-map$32942$6Dw7t)
              (&stacktrace-rcd . g$&stacktrace-rcd$20317$6Dw7t)
              (&stacktrace-rtd . g$&stacktrace-rtd$20316$6Dw7t)
              (&where-rcd . g$&where-rcd$20307$6Dw7t)
              (&where-rtd . g$&where-rtd$20306$6Dw7t)
              (&no-nans-rcd . g$&no-nans-rcd$20481$6Dw7t)
              (&no-nans-rtd . g$&no-nans-rtd$20480$6Dw7t)
              (&no-infinities-rcd . g$&no-infinities-rcd$20473$6Dw7t)
              (&no-infinities-rtd . g$&no-infinities-rtd$20472$6Dw7t)
              (&i/o-encoding-rcd . g$&i/o-encoding-rcd$20465$6Dw7t)
              (&i/o-encoding-rtd . g$&i/o-encoding-rtd$20464$6Dw7t)
              (&i/o-decoding-rcd . g$&i/o-decoding-rcd$20455$6Dw7t)
              (&i/o-decoding-rtd . g$&i/o-decoding-rtd$20454$6Dw7t)
              (&i/o-port-rcd . g$&i/o-port-rcd$20447$6Dw7t)
              (&i/o-port-rtd . g$&i/o-port-rtd$20446$6Dw7t)
              (&i/o-file-does-not-exist-rcd
                .
                g$&i/o-file-does-not-exist-rcd$20437$6Dw7t)
              (&i/o-file-does-not-exist-rtd
                .
                g$&i/o-file-does-not-exist-rtd$20436$6Dw7t)
              (&i/o-file-already-exists-rcd
                .
                g$&i/o-file-already-exists-rcd$20429$6Dw7t)
              (&i/o-file-already-exists-rtd
                .
                g$&i/o-file-already-exists-rtd$20428$6Dw7t)
              (&i/o-file-is-read-only-rcd
                .
                g$&i/o-file-is-read-only-rcd$20421$6Dw7t)
              (&i/o-file-is-read-only-rtd
                .
                g$&i/o-file-is-read-only-rtd$20420$6Dw7t)
              (&i/o-file-protection-rcd
                .
                g$&i/o-file-protection-rcd$20413$6Dw7t)
              (&i/o-file-protection-rtd
                .
                g$&i/o-file-protection-rtd$20412$6Dw7t)
              (&i/o-filename-rcd . g$&i/o-filename-rcd$20405$6Dw7t)
              (&i/o-filename-rtd . g$&i/o-filename-rtd$20404$6Dw7t)
              (&i/o-invalid-position-rcd
                .
                g$&i/o-invalid-position-rcd$20395$6Dw7t)
              (&i/o-invalid-position-rtd
                .
                g$&i/o-invalid-position-rtd$20394$6Dw7t)
              (&i/o-write-rcd . g$&i/o-write-rcd$20385$6Dw7t)
              (&i/o-write-rtd . g$&i/o-write-rtd$20384$6Dw7t)
              (&i/o-read-rcd . g$&i/o-read-rcd$20377$6Dw7t)
              (&i/o-read-rtd . g$&i/o-read-rtd$20376$6Dw7t)
              (&i/o-rcd . g$&i/o-rcd$20369$6Dw7t)
              (&i/o-rtd . g$&i/o-rtd$20368$6Dw7t)
              (&undefined-rcd . g$&undefined-rcd$20361$6Dw7t)
              (&undefined-rtd . g$&undefined-rtd$20360$6Dw7t)
              (&syntax-rcd . g$&syntax-rcd$20353$6Dw7t)
              (&syntax-rtd . g$&syntax-rtd$20352$6Dw7t)
              (&lexical-rcd . g$&lexical-rcd$20341$6Dw7t)
              (&lexical-rtd . g$&lexical-rtd$20340$6Dw7t)
              (&implementation-restriction-rcd
                .
                g$&implementation-restriction-rcd$20333$6Dw7t)
              (&implementation-restriction-rtd
                .
                g$&implementation-restriction-rtd$20332$6Dw7t)
              (&non-continuable-rcd
                .
                g$&non-continuable-rcd$20325$6Dw7t)
              (&non-continuable-rtd
                .
                g$&non-continuable-rtd$20324$6Dw7t)
              (&who-rcd . g$&who-rcd$20297$6Dw7t)
              (&who-rtd . g$&who-rtd$20296$6Dw7t)
              (&irritants-rcd . g$&irritants-rcd$20287$6Dw7t)
              (&irritants-rtd . g$&irritants-rtd$20286$6Dw7t)
              (&assertion-rcd . g$&assertion-rcd$20277$6Dw7t)
              (&assertion-rtd . g$&assertion-rtd$20276$6Dw7t)
              (&violation-rcd . g$&violation-rcd$20269$6Dw7t)
              (&violation-rtd . g$&violation-rtd$20268$6Dw7t)
              (&error-rcd . g$&error-rcd$20261$6Dw7t)
              (&error-rtd . g$&error-rtd$20260$6Dw7t)
              (&serious-rcd . g$&serious-rcd$20253$6Dw7t)
              (&serious-rtd . g$&serious-rtd$20252$6Dw7t)
              (&warning-rcd . g$&warning-rcd$20245$6Dw7t)
              (&warning-rtd . g$&warning-rtd$20244$6Dw7t)
              (&message-rcd . g$&message-rcd$20237$6Dw7t)
              (&message-rtd . g$&message-rtd$20236$6Dw7t)
              (&condition-rcd . g$&condition-rcd$20227$6Dw7t)
              (&condition-rtd . g$&condition-rtd$20226$6Dw7t)
              (tanh . g$tanh$25091$6Dw7t)
              (cosh . g$cosh$25089$6Dw7t)
              (sinh . g$sinh$25086$6Dw7t)
              (make-list . g$make-list$23560$6Dw7t)
              (last-pair . g$last-pair$23559$6Dw7t)
              (ironscheme-test . g$ironscheme-test$33136$6Dw7t)
              (ironscheme-build . g$ironscheme-build$33137$6Dw7t)
              (syntax-error . g$syntax-error$33048$6Dw7t)
              (syntax-dispatch . g$syntax-dispatch$32937$6Dw7t)
              (compile-system-libraries
                .
                g$compile-system-libraries$33141$6Dw7t)
              (compile->closure . g$compile->closure$33143$6Dw7t)
              (compile . g$compile$33142$6Dw7t)
              (load . g$load$33135$6Dw7t)
              (new-interaction-environment
                .
                g$new-interaction-environment$33057$6Dw7t)
              (interaction-environment
                .
                g$interaction-environment$33058$6Dw7t)
              (string-upcase . g$string-upcase$25432$6Dw7t)
              (string-titlecase . g$string-titlecase$25425$6Dw7t)
              (string-normalize-nfkd
                .
                g$string-normalize-nfkd$25436$6Dw7t)
              (string-normalize-nfkc
                .
                g$string-normalize-nfkc$25435$6Dw7t)
              (string-normalize-nfd
                .
                g$string-normalize-nfd$25434$6Dw7t)
              (string-normalize-nfc
                .
                g$string-normalize-nfc$25433$6Dw7t)
              (string-foldcase . g$string-foldcase$25426$6Dw7t)
              (string-ci>? . g$string-ci>?$25422$6Dw7t)
              (string-ci>=? . g$string-ci>=?$25424$6Dw7t)
              (string-ci=? . g$string-ci=?$25420$6Dw7t)
              (string-ci<? . g$string-ci<?$25421$6Dw7t)
              (string-ci<=? . g$string-ci<=?$25423$6Dw7t)
              (char-whitespace? . g$char-whitespace?$25412$6Dw7t)
              (char-upper-case? . g$char-upper-case?$25413$6Dw7t)
              (char-title-case? . g$char-title-case?$25415$6Dw7t)
              (char-numeric? . g$char-numeric?$25411$6Dw7t)
              (char-lower-case? . g$char-lower-case?$25414$6Dw7t)
              (char-general-category
                .
                g$char-general-category$25416$6Dw7t)
              (char-upcase . g$char-upcase$25406$6Dw7t)
              (char-titlecase . g$char-titlecase$25408$6Dw7t)
              (char-foldcase . g$char-foldcase$25409$6Dw7t)
              (char-downcase . g$char-downcase$25407$6Dw7t)
              (char-ci>? . g$char-ci>?$25429$6Dw7t)
              (char-ci>=? . g$char-ci>=?$25431$6Dw7t)
              (char-ci=? . g$char-ci=?$25427$6Dw7t)
              (char-ci<? . g$char-ci<?$25428$6Dw7t)
              (char-ci<=? . g$char-ci<=?$25430$6Dw7t)
              (char-alphabetic? . g$char-alphabetic?$25410$6Dw7t)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$32875$6Dw7t)
              (variable-transformer?
                .
                g$variable-transformer?$32874$6Dw7t)
              (make-variable-transformer
                .
                g$make-variable-transformer$32872$6Dw7t)
              (identifier? . g$identifier?$33052$6Dw7t)
              (generate-temporaries
                .
                g$generate-temporaries$33040$6Dw7t)
              (free-identifier=? . g$free-identifier=?$33041$6Dw7t)
              (syntax->datum . g$syntax->datum$33054$6Dw7t)
              (datum->syntax . g$datum->syntax$33053$6Dw7t)
              (bound-identifier=? . g$bound-identifier=?$33042$6Dw7t)
              (delete-file . g$delete-file$24165$6Dw7t)
              (file-exists? . g$file-exists?$24164$6Dw7t)
              (vector-sort . g$vector-sort$25172$6Dw7t)
              (list-sort . g$list-sort$25171$6Dw7t)
              (symbol-hash . g$symbol-hash$24154$6Dw7t)
              (string-ci-hash . g$string-ci-hash$24153$6Dw7t)
              (string-hash . g$string-hash$24152$6Dw7t)
              (make-eqv-hashtable . g$make-eqv-hashtable$24144$6Dw7t)
              (make-eq-hashtable . g$make-eq-hashtable$24143$6Dw7t)
              (hashtable? . g$hashtable?$24142$6Dw7t)
              (hashtable-update! . g$hashtable-update!$24150$6Dw7t)
              (hashtable-size . g$hashtable-size$24145$6Dw7t)
              (hashtable-set! . g$hashtable-set!$24147$6Dw7t)
              (hashtable-ref . g$hashtable-ref$24146$6Dw7t)
              (hashtable-delete! . g$hashtable-delete!$24148$6Dw7t)
              (hashtable-contains? . g$hashtable-contains?$24149$6Dw7t)
              (hashtable-clear! . g$hashtable-clear!$24151$6Dw7t)
              (call-with-output-file
                .
                g$call-with-output-file$27187$6Dw7t)
              (call-with-input-file
                .
                g$call-with-input-file$27186$6Dw7t)
              (write-char . g$write-char$27183$6Dw7t)
              (with-output-to-file . g$with-output-to-file$27185$6Dw7t)
              (with-input-from-file
                .
                g$with-input-from-file$27184$6Dw7t)
              (read-char . g$read-char$27182$6Dw7t)
              (peek-char . g$peek-char$27181$6Dw7t)
              (newline . g$newline$27188$6Dw7t)
              (standard-output-port
                .
                g$standard-output-port$27115$6Dw7t)
              (standard-input-port . g$standard-input-port$27114$6Dw7t)
              (standard-error-port . g$standard-error-port$27113$6Dw7t)
              (put-datum . g$put-datum$27118$6Dw7t)
              (port? . g$port?$27123$6Dw7t)
              (open-string-output-port
                .
                g$open-string-output-port$27122$6Dw7t)
              (native-eol-style . g$native-eol-style$27116$6Dw7t)
              (make-i/o-write-error
                .
                g$make-i/o-write-error$20382$6Dw7t)
              (make-i/o-read-error . g$make-i/o-read-error$20374$6Dw7t)
              (make-i/o-port-error . g$make-i/o-port-error$20442$6Dw7t)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$20390$6Dw7t)
              (make-i/o-filename-error
                .
                g$make-i/o-filename-error$20400$6Dw7t)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$20410$6Dw7t)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$20418$6Dw7t)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$20434$6Dw7t)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$20426$6Dw7t)
              (make-i/o-error . g$make-i/o-error$20366$6Dw7t)
              (make-i/o-encoding-error
                .
                g$make-i/o-encoding-error$20460$6Dw7t)
              (make-i/o-decoding-error
                .
                g$make-i/o-decoding-error$20452$6Dw7t)
              (make-bytevector . g$make-bytevector$24499$6Dw7t)
              (i/o-write-error? . g$i/o-write-error?$20383$6Dw7t)
              (i/o-read-error? . g$i/o-read-error?$20375$6Dw7t)
              (i/o-port-error? . g$i/o-port-error?$20444$6Dw7t)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$20392$6Dw7t)
              (i/o-error-position . g$i/o-error-position$20393$6Dw7t)
              (i/o-filename-error? . g$i/o-filename-error?$20402$6Dw7t)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$20411$6Dw7t)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$20419$6Dw7t)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$20435$6Dw7t)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$20427$6Dw7t)
              (i/o-error? . g$i/o-error?$20367$6Dw7t)
              (i/o-error-port . g$i/o-error-port$20445$6Dw7t)
              (i/o-error-filename . g$i/o-error-filename$20403$6Dw7t)
              (i/o-encoding-error? . g$i/o-encoding-error?$20462$6Dw7t)
              (i/o-encoding-error-char
                .
                g$i/o-encoding-error-char$20463$6Dw7t)
              (i/o-decoding-error? . g$i/o-decoding-error?$20453$6Dw7t)
              (get-datum . g$get-datum$27119$6Dw7t)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$27124$6Dw7t)
              (call-with-port . g$call-with-port$27125$6Dw7t)
              (buffer-mode? . g$buffer-mode?$27117$6Dw7t)
              (scheme-report-environment
                .
                g$scheme-report-environment$33030$6Dw7t)
              (quotient . g$quotient$25134$6Dw7t)
              (null-environment . g$null-environment$33029$6Dw7t)
              (remainder . g$remainder$25135$6Dw7t)
              (modulo . g$modulo$25136$6Dw7t)
              (inexact->exact . g$inexact->exact$25131$6Dw7t)
              (force . g$force$25138$6Dw7t)
              (exact->inexact . g$exact->inexact$25132$6Dw7t)
              (command-line . g$command-line$33130$6Dw7t)
              (string-fill! . g$string-fill!$24018$6Dw7t)
              (string-set! . g$string-set!$24017$6Dw7t)
              (set-cdr! . g$set-cdr!$25110$6Dw7t)
              (set-car! . g$set-car!$25109$6Dw7t)
              (remove . g$remove$23590$6Dw7t)
              (remv . g$remv$23591$6Dw7t)
              (remp . g$remp$23563$6Dw7t)
              (remq . g$remq$23592$6Dw7t)
              (partition . g$partition$23562$6Dw7t)
              (memv . g$memv$23570$6Dw7t)
              (memq . g$memq$23569$6Dw7t)
              (memp . g$memp$23572$6Dw7t)
              (member . g$member$23571$6Dw7t)
              (exists . g$exists$23580$6Dw7t)
              (for-all . g$for-all$23579$6Dw7t)
              (fold-right . g$fold-right$23589$6Dw7t)
              (fold-left . g$fold-left$23588$6Dw7t)
              (find . g$find$23561$6Dw7t)
              (filter . g$filter$23564$6Dw7t)
              (cons* . g$cons*$23583$6Dw7t)
              (assv . g$assv$23566$6Dw7t)
              (assq . g$assq$23565$6Dw7t)
              (assp . g$assp$23568$6Dw7t)
              (assoc . g$assoc$23567$6Dw7t)
              (eval . g$eval$33032$6Dw7t)
              (environment . g$environment$33028$6Dw7t)
              (make-enumeration . g$make-enumeration$27324$6Dw7t)
              (enum-set=? . g$enum-set=?$27331$6Dw7t)
              (enum-set-universe . g$enum-set-universe$27325$6Dw7t)
              (enum-set-union . g$enum-set-union$27332$6Dw7t)
              (enum-set-subset? . g$enum-set-subset?$27330$6Dw7t)
              (enum-set-projection . g$enum-set-projection$27336$6Dw7t)
              (enum-set-member? . g$enum-set-member?$27329$6Dw7t)
              (enum-set-intersection
                .
                g$enum-set-intersection$27333$6Dw7t)
              (enum-set-indexer . g$enum-set-indexer$27326$6Dw7t)
              (enum-set-difference . g$enum-set-difference$27334$6Dw7t)
              (enum-set-constructor
                .
                g$enum-set-constructor$27327$6Dw7t)
              (enum-set-complement . g$enum-set-complement$27335$6Dw7t)
              (enum-set->list . g$enum-set->list$27328$6Dw7t)
              (who-condition? . g$who-condition?$20294$6Dw7t)
              (warning? . g$warning?$20243$6Dw7t)
              (violation? . g$violation?$20267$6Dw7t)
              (undefined-violation?
                .
                g$undefined-violation?$20359$6Dw7t)
              (syntax-violation? . g$syntax-violation?$20349$6Dw7t)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$20351$6Dw7t)
              (syntax-violation-form
                .
                g$syntax-violation-form$20350$6Dw7t)
              (syntax-violation . g$syntax-violation$33051$6Dw7t)
              (serious-condition? . g$serious-condition?$20251$6Dw7t)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$20323$6Dw7t)
              (message-condition? . g$message-condition?$20234$6Dw7t)
              (make-who-condition . g$make-who-condition$20292$6Dw7t)
              (make-warning . g$make-warning$20242$6Dw7t)
              (make-violation . g$make-violation$20266$6Dw7t)
              (make-undefined-violation
                .
                g$make-undefined-violation$20358$6Dw7t)
              (make-syntax-violation
                .
                g$make-syntax-violation$20346$6Dw7t)
              (make-serious-condition
                .
                g$make-serious-condition$20250$6Dw7t)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$20322$6Dw7t)
              (make-message-condition
                .
                g$make-message-condition$20232$6Dw7t)
              (make-lexical-violation
                .
                g$make-lexical-violation$20338$6Dw7t)
              (make-irritants-condition
                .
                g$make-irritants-condition$20282$6Dw7t)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$20330$6Dw7t)
              (make-error . g$make-error$20258$6Dw7t)
              (make-assertion-violation
                .
                g$make-assertion-violation$20274$6Dw7t)
              (lexical-violation? . g$lexical-violation?$20339$6Dw7t)
              (irritants-condition?
                .
                g$irritants-condition?$20284$6Dw7t)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$20331$6Dw7t)
              (error? . g$error?$20259$6Dw7t)
              (condition-who . g$condition-who$20295$6Dw7t)
              (condition-message . g$condition-message$20235$6Dw7t)
              (condition-irritants . g$condition-irritants$20285$6Dw7t)
              (assertion-violation?
                .
                g$assertion-violation?$20275$6Dw7t)
              (utf32->string . g$utf32->string$24521$6Dw7t)
              (utf16->string . g$utf16->string$24520$6Dw7t)
              (utf8->string . g$utf8->string$24518$6Dw7t)
              (uint-list->bytevector
                .
                g$uint-list->bytevector$24522$6Dw7t)
              (u8-list->bytevector . g$u8-list->bytevector$24510$6Dw7t)
              (string->utf8 . g$string->utf8$24515$6Dw7t)
              (string->utf32 . g$string->utf32$24517$6Dw7t)
              (string->utf16 . g$string->utf16$24516$6Dw7t)
              (sint-list->bytevector
                .
                g$sint-list->bytevector$24523$6Dw7t)
              (native-endianness . g$native-endianness$24486$6Dw7t)
              (bytevector? . g$bytevector?$24006$6Dw7t)
              (bytevector=? . g$bytevector=?$24501$6Dw7t)
              (bytevector-uint-set!
                .
                g$bytevector-uint-set!$24513$6Dw7t)
              (bytevector-uint-ref . g$bytevector-uint-ref$24511$6Dw7t)
              (bytevector-u8-set! . g$bytevector-u8-set!$24506$6Dw7t)
              (bytevector-u8-ref . g$bytevector-u8-ref$24505$6Dw7t)
              (bytevector-u64-set! . g$bytevector-u64-set!$24551$6Dw7t)
              (bytevector-u64-ref . g$bytevector-u64-ref$24547$6Dw7t)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$24553$6Dw7t)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$24549$6Dw7t)
              (bytevector-u32-set! . g$bytevector-u32-set!$24543$6Dw7t)
              (bytevector-u32-ref . g$bytevector-u32-ref$24539$6Dw7t)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$24545$6Dw7t)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$24541$6Dw7t)
              (bytevector-u16-set! . g$bytevector-u16-set!$24535$6Dw7t)
              (bytevector-u16-ref . g$bytevector-u16-ref$24531$6Dw7t)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$24537$6Dw7t)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$24533$6Dw7t)
              (bytevector-sint-set!
                .
                g$bytevector-sint-set!$24514$6Dw7t)
              (bytevector-sint-ref . g$bytevector-sint-ref$24512$6Dw7t)
              (bytevector-s8-set! . g$bytevector-s8-set!$24508$6Dw7t)
              (bytevector-s8-ref . g$bytevector-s8-ref$24507$6Dw7t)
              (bytevector-s64-set! . g$bytevector-s64-set!$24552$6Dw7t)
              (bytevector-s64-ref . g$bytevector-s64-ref$24548$6Dw7t)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$24554$6Dw7t)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$24550$6Dw7t)
              (bytevector-s32-set! . g$bytevector-s32-set!$24544$6Dw7t)
              (bytevector-s32-ref . g$bytevector-s32-ref$24540$6Dw7t)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$24546$6Dw7t)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$24542$6Dw7t)
              (bytevector-s16-set! . g$bytevector-s16-set!$24536$6Dw7t)
              (bytevector-s16-ref . g$bytevector-s16-ref$24532$6Dw7t)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$24538$6Dw7t)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$24534$6Dw7t)
              (bytevector-length . g$bytevector-length$24500$6Dw7t)
              (bytevector-ieee-single-set!
                .
                g$bytevector-ieee-single-set!$24529$6Dw7t)
              (bytevector-ieee-single-ref
                .
                g$bytevector-ieee-single-ref$24527$6Dw7t)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$24557$6Dw7t)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$24555$6Dw7t)
              (bytevector-ieee-double-set!
                .
                g$bytevector-ieee-double-set!$24530$6Dw7t)
              (bytevector-ieee-double-ref
                .
                g$bytevector-ieee-double-ref$24528$6Dw7t)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$24558$6Dw7t)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$24556$6Dw7t)
              (bytevector-fill! . g$bytevector-fill!$24502$6Dw7t)
              (bytevector-copy! . g$bytevector-copy!$24503$6Dw7t)
              (bytevector-copy . g$bytevector-copy$24504$6Dw7t)
              (bytevector->uint-list
                .
                g$bytevector->uint-list$24524$6Dw7t)
              (bytevector->u8-list . g$bytevector->u8-list$24509$6Dw7t)
              (bytevector->sint-list
                .
                g$bytevector->sint-list$24525$6Dw7t)
              (no-nans-violation? . g$no-nans-violation?$20479$6Dw7t)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$20471$6Dw7t)
              (make-no-nans-violation
                .
                g$make-no-nans-violation$20478$6Dw7t)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$20470$6Dw7t)
              (real->flonum . g$real->flonum$25045$6Dw7t)
              (flzero? . g$flzero?$27080$6Dw7t)
              (fltruncate . g$fltruncate$27075$6Dw7t)
              (fltan . g$fltan$27064$6Dw7t)
              (flsqrt . g$flsqrt$27069$6Dw7t)
              (flsin . g$flsin$27062$6Dw7t)
              (flround . g$flround$27076$6Dw7t)
              (flpositive? . g$flpositive?$27078$6Dw7t)
              (flonum? . g$flonum?$24011$6Dw7t)
              (flodd? . g$flodd?$27082$6Dw7t)
              (flnumerator . g$flnumerator$27040$6Dw7t)
              (flnegative? . g$flnegative?$27079$6Dw7t)
              (flnan? . g$flnan?$27061$6Dw7t)
              (flmod0 . g$flmod0$27052$6Dw7t)
              (flmod . g$flmod$27051$6Dw7t)
              (flmin . g$flmin$27084$6Dw7t)
              (flmax . g$flmax$27083$6Dw7t)
              (fllog . g$fllog$27068$6Dw7t)
              (flinteger? . g$flinteger?$27057$6Dw7t)
              (flinfinite? . g$flinfinite?$27060$6Dw7t)
              (flfloor . g$flfloor$27074$6Dw7t)
              (flfinite? . g$flfinite?$27058$6Dw7t)
              (flexpt . g$flexpt$27071$6Dw7t)
              (flexp . g$flexp$27070$6Dw7t)
              (fleven? . g$fleven?$27081$6Dw7t)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$27056$6Dw7t)
              (fldiv0 . g$fldiv0$27049$6Dw7t)
              (fldiv-and-mod . g$fldiv-and-mod$27053$6Dw7t)
              (fldiv . g$fldiv$27055$6Dw7t)
              (fldenominator . g$fldenominator$27039$6Dw7t)
              (flcos . g$flcos$27063$6Dw7t)
              (flceiling . g$flceiling$27072$6Dw7t)
              (flatan . g$flatan$27067$6Dw7t)
              (flasin . g$flasin$27065$6Dw7t)
              (flacos . g$flacos$27066$6Dw7t)
              (flabs . g$flabs$27077$6Dw7t)
              (fl>? . g$fl>?$27046$6Dw7t)
              (fl>=? . g$fl>=?$27047$6Dw7t)
              (fl=? . g$fl=?$27043$6Dw7t)
              (fl<? . g$fl<?$27044$6Dw7t)
              (fl<=? . g$fl<=?$27045$6Dw7t)
              (fl/ . g$fl/$27042$6Dw7t)
              (fl- . g$fl-$27041$6Dw7t)
              (fl+ . g$fl+$27037$6Dw7t)
              (fl* . g$fl*$27038$6Dw7t)
              (fixnum->flonum . g$fixnum->flonum$25046$6Dw7t)
              (fxzero? . g$fxzero?$23330$6Dw7t)
              (fxxor . g$fxxor$23314$6Dw7t)
              (fxrotate-bit-field . g$fxrotate-bit-field$23350$6Dw7t)
              (fxreverse-bit-field . g$fxreverse-bit-field$23351$6Dw7t)
              (fxpositive? . g$fxpositive?$23326$6Dw7t)
              (fxodd? . g$fxodd?$23334$6Dw7t)
              (fxnot . g$fxnot$23306$6Dw7t)
              (fxnegative? . g$fxnegative?$23328$6Dw7t)
              (fxmod0 . g$fxmod0$23319$6Dw7t)
              (fxmod . g$fxmod$23318$6Dw7t)
              (fxmin . g$fxmin$23336$6Dw7t)
              (fxmax . g$fxmax$23335$6Dw7t)
              (fxlength . g$fxlength$23303$6Dw7t)
              (fxior . g$fxior$23313$6Dw7t)
              (fxif . g$fxif$23341$6Dw7t)
              (fxfirst-bit-set . g$fxfirst-bit-set$23304$6Dw7t)
              (fxeven? . g$fxeven?$23332$6Dw7t)
              (fxdiv0-and-mod0 . g$fxdiv0-and-mod0$23324$6Dw7t)
              (fxdiv0 . g$fxdiv0$23322$6Dw7t)
              (fxdiv-and-mod . g$fxdiv-and-mod$23320$6Dw7t)
              (fxdiv . g$fxdiv$23316$6Dw7t)
              (fxcopy-bit-field . g$fxcopy-bit-field$23347$6Dw7t)
              (fxcopy-bit . g$fxcopy-bit$23343$6Dw7t)
              (fxbit-set? . g$fxbit-set?$23305$6Dw7t)
              (fxbit-field . g$fxbit-field$23345$6Dw7t)
              (fxbit-count . g$fxbit-count$23301$6Dw7t)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$23349$6Dw7t)
              (fxarithmetic-shift-left
                .
                g$fxarithmetic-shift-left$23348$6Dw7t)
              (fxarithmetic-shift . g$fxarithmetic-shift$23299$6Dw7t)
              (fxand . g$fxand$23312$6Dw7t)
              (fx>? . g$fx>?$23310$6Dw7t)
              (fx>=? . g$fx>=?$23311$6Dw7t)
              (fx=? . g$fx=?$23307$6Dw7t)
              (fx<? . g$fx<?$23308$6Dw7t)
              (fx<=? . g$fx<=?$23309$6Dw7t)
              (fx-/carry . g$fx-/carry$23338$6Dw7t)
              (fx- . g$fx-$23296$6Dw7t)
              (fx+/carry . g$fx+/carry$23339$6Dw7t)
              (fx+ . g$fx+$23294$6Dw7t)
              (fx*/carry . g$fx*/carry$23337$6Dw7t)
              (fx* . g$fx*$23295$6Dw7t)
              (greatest-fixnum . g$greatest-fixnum$23292$6Dw7t)
              (least-fixnum . g$least-fixnum$23293$6Dw7t)
              (fixnum-width . g$fixnum-width$24012$6Dw7t)
              (fixnum? . g$fixnum?$24010$6Dw7t)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$25542$6Dw7t)
              (bitwise-reverse-bit-field
                .
                g$bitwise-reverse-bit-field$25543$6Dw7t)
              (bitwise-length . g$bitwise-length$25532$6Dw7t)
              (bitwise-if . g$bitwise-if$25535$6Dw7t)
              (bitwise-first-bit-set
                .
                g$bitwise-first-bit-set$25533$6Dw7t)
              (bitwise-copy-bit-field
                .
                g$bitwise-copy-bit-field$25538$6Dw7t)
              (bitwise-copy-bit . g$bitwise-copy-bit$25536$6Dw7t)
              (bitwise-bit-set? . g$bitwise-bit-set?$25534$6Dw7t)
              (bitwise-bit-field . g$bitwise-bit-field$25537$6Dw7t)
              (bitwise-bit-count . g$bitwise-bit-count$25531$6Dw7t)
              (bitwise-xor . g$bitwise-xor$25530$6Dw7t)
              (bitwise-ior . g$bitwise-ior$25529$6Dw7t)
              (bitwise-and . g$bitwise-and$25528$6Dw7t)
              (bitwise-not . g$bitwise-not$25527$6Dw7t)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$25541$6Dw7t)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$25540$6Dw7t)
              (bitwise-arithmetic-shift
                .
                g$bitwise-arithmetic-shift$25539$6Dw7t)
              (zero? . g$zero?$25060$6Dw7t)
              (vector? . g$vector?$24005$6Dw7t)
              (vector-set! . g$vector-set!$24037$6Dw7t)
              (vector-ref . g$vector-ref$24036$6Dw7t)
              (vector-map . g$vector-map$24094$6Dw7t)
              (vector-length . g$vector-length$24039$6Dw7t)
              (vector-for-each . g$vector-for-each$24095$6Dw7t)
              (vector-fill! . g$vector-fill!$24040$6Dw7t)
              (vector->list . g$vector->list$24041$6Dw7t)
              (truncate . g$truncate$25098$6Dw7t)
              (tan . g$tan$25090$6Dw7t)
              (symbol? . g$symbol?$24007$6Dw7t)
              (symbol=? . g$symbol=?$24084$6Dw7t)
              (symbol->string . g$symbol->string$24027$6Dw7t)
              (substring . g$substring$24024$6Dw7t)
              (string? . g$string?$24003$6Dw7t)
              (string>? . g$string>?$24081$6Dw7t)
              (string>=? . g$string>=?$24083$6Dw7t)
              (string=? . g$string=?$24079$6Dw7t)
              (string<? . g$string<?$24080$6Dw7t)
              (string<=? . g$string<=?$24082$6Dw7t)
              (string-ref . g$string-ref$24016$6Dw7t)
              (string-length . g$string-length$24019$6Dw7t)
              (string-for-each . g$string-for-each$24096$6Dw7t)
              (string-copy . g$string-copy$24023$6Dw7t)
              (string-append . g$string-append$24025$6Dw7t)
              (string->symbol . g$string->symbol$24028$6Dw7t)
              (string->list . g$string->list$24022$6Dw7t)
              (string . g$string$24021$6Dw7t)
              (sqrt . g$sqrt$25100$6Dw7t)
              (sin . g$sin$25084$6Dw7t)
              (round . g$round$25099$6Dw7t)
              (reverse . g$reverse$24043$6Dw7t)
              (real? . g$real?$25054$6Dw7t)
              (real-valued? . g$real-valued?$25057$6Dw7t)
              (real-part . g$real-part$25081$6Dw7t)
              (rationalize . g$rationalize$24091$6Dw7t)
              (rational? . g$rational?$25055$6Dw7t)
              (rational-valued? . g$rational-valued?$25058$6Dw7t)
              (procedure? . g$procedure?$24009$6Dw7t)
              (positive? . g$positive?$25061$6Dw7t)
              (odd? . g$odd?$24073$6Dw7t)
              (numerator . g$numerator$25079$6Dw7t)
              (number? . g$number?$25047$6Dw7t)
              (number->string . g$number->string$25068$6Dw7t)
              (negative? . g$negative?$25062$6Dw7t)
              (nan? . g$nan?$25048$6Dw7t)
              (min . g$min$24075$6Dw7t)
              (max . g$max$24074$6Dw7t)
              (map . g$map$23581$6Dw7t)
              (make-vector . g$make-vector$24038$6Dw7t)
              (make-string . g$make-string$24015$6Dw7t)
              (make-rectangular . g$make-rectangular$25074$6Dw7t)
              (make-polar . g$make-polar$25075$6Dw7t)
              (magnitude . g$magnitude$25077$6Dw7t)
              (log . g$log$25093$6Dw7t)
              (list? . g$list?$23576$6Dw7t)
              (list-tail . g$list-tail$23557$6Dw7t)
              (list-ref . g$list-ref$23558$6Dw7t)
              (list->vector . g$list->vector$24034$6Dw7t)
              (list->string . g$list->string$24035$6Dw7t)
              (length . g$length$23578$6Dw7t)
              (lcm . g$lcm$24077$6Dw7t)
              (integer? . g$integer?$25056$6Dw7t)
              (integer-valued? . g$integer-valued?$25059$6Dw7t)
              (integer->char . g$integer->char$24014$6Dw7t)
              (infinite? . g$infinite?$25050$6Dw7t)
              (inexact? . g$inexact?$25052$6Dw7t)
              (inexact . g$inexact$25063$6Dw7t)
              (imag-part . g$imag-part$25082$6Dw7t)
              (gcd . g$gcd$24076$6Dw7t)
              (for-each . g$for-each$23582$6Dw7t)
              (floor . g$floor$25096$6Dw7t)
              (finite? . g$finite?$25049$6Dw7t)
              (expt . g$expt$25102$6Dw7t)
              (exp . g$exp$25083$6Dw7t)
              (exact? . g$exact?$25051$6Dw7t)
              (exact-integer-sqrt . g$exact-integer-sqrt$25101$6Dw7t)
              (exact . g$exact$25064$6Dw7t)
              (even? . g$even?$24072$6Dw7t)
              (error . g$error$20491$6Dw7t)
              (equal? . g$equal?$27474$6Dw7t)
              (div0-and-mod0 . g$div0-and-mod0$24033$6Dw7t)
              (mod0 . g$mod0$24031$6Dw7t)
              (div0 . g$div0$24029$6Dw7t)
              (div-and-mod . g$div-and-mod$24032$6Dw7t)
              (mod . g$mod$24030$6Dw7t)
              (div . g$div$25094$6Dw7t)
              (denominator . g$denominator$25080$6Dw7t)
              (cos . g$cos$25087$6Dw7t)
              (complex? . g$complex?$25053$6Dw7t)
              (char? . g$char?$24004$6Dw7t)
              (char>? . g$char>?$24088$6Dw7t)
              (char>=? . g$char>=?$24090$6Dw7t)
              (char=? . g$char=?$24086$6Dw7t)
              (char<? . g$char<?$24087$6Dw7t)
              (char<=? . g$char<=?$24089$6Dw7t)
              (char->integer . g$char->integer$24013$6Dw7t)
              (ceiling . g$ceiling$25097$6Dw7t)
              (cddddr . g$cddddr$24071$6Dw7t)
              (cdddar . g$cdddar$24070$6Dw7t)
              (cddadr . g$cddadr$24069$6Dw7t)
              (cddaar . g$cddaar$24068$6Dw7t)
              (cdaddr . g$cdaddr$24067$6Dw7t)
              (cdadar . g$cdadar$24066$6Dw7t)
              (cdaadr . g$cdaadr$24065$6Dw7t)
              (cdaaar . g$cdaaar$24064$6Dw7t)
              (cadddr . g$cadddr$24063$6Dw7t)
              (caddar . g$caddar$24062$6Dw7t)
              (cadadr . g$cadadr$24061$6Dw7t)
              (cadaar . g$cadaar$24060$6Dw7t)
              (caaddr . g$caaddr$24059$6Dw7t)
              (caadar . g$caadar$24058$6Dw7t)
              (caaadr . g$caaadr$24057$6Dw7t)
              (caaaar . g$caaaar$24056$6Dw7t)
              (cdddr . g$cdddr$24055$6Dw7t)
              (cddar . g$cddar$24054$6Dw7t)
              (cdadr . g$cdadr$24053$6Dw7t)
              (cdaar . g$cdaar$24052$6Dw7t)
              (caddr . g$caddr$24051$6Dw7t)
              (cadar . g$cadar$24050$6Dw7t)
              (caadr . g$caadr$24049$6Dw7t)
              (caaar . g$caaar$24048$6Dw7t)
              (cddr . g$cddr$24047$6Dw7t)
              (cdar . g$cdar$24046$6Dw7t)
              (cadr . g$cadr$24045$6Dw7t)
              (caar . g$caar$24044$6Dw7t)
              (boolean? . g$boolean?$24008$6Dw7t)
              (boolean=? . g$boolean=?$24085$6Dw7t)
              (atan . g$atan$25092$6Dw7t)
              (assertion-violation . g$assertion-violation$20490$6Dw7t)
              (asin . g$asin$25085$6Dw7t)
              (append . g$append$23587$6Dw7t)
              (angle . g$angle$25076$6Dw7t)
              (acos . g$acos$25088$6Dw7t)
              (abs . g$abs$25095$6Dw7t)
              (>= . g$>=$25073$6Dw7t)
              (> . g$>$25072$6Dw7t)
              (= . g$=$25069$6Dw7t)
              (<= . g$<=$25071$6Dw7t)
              (< . g$<$25070$6Dw7t)
              (enum-set? . g$enum?$27305$6Dw7t)
              (make-promise . g$make-promise$25137$6Dw7t)
              (load/unload . g$load/unload$33134$6Dw7t)
              (load/args . g$load/args$33133$6Dw7t)
              (printf . g$printf$27360$6Dw7t)
              (fprintf . g$fprintf$27361$6Dw7t)
              (format . g$format$27362$6Dw7t)
              (trace-printer . g$trace-printer$33128$6Dw7t)
              (make-traced-macro . g$make-traced-macro$27366$6Dw7t)
              (assertion-error . g$assertion-error$33047$6Dw7t)
              (make-parameter . g$make-parameter$27681$6Dw7t)
              (environment-bindings
                .
                g$environment-bindings$33024$6Dw7t)
              (environment-symbols . g$environment-symbols$33027$6Dw7t)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$33023$6Dw7t)
              (library-path . g$library-path$28528$6Dw7t)
              (make-compile-time-value
                .
                g$make-compile-time-value$32873$6Dw7t)
              (expand->core . g$expand->core$33033$6Dw7t)
              (expand . g$expand$33031$6Dw7t)
              (emacs-mode? . g$emacs-mode?$33131$6Dw7t)
              (syntax-transpose . g$syntax-transpose$32980$6Dw7t)
              (convert->cps . g$convert->cps$28209$6Dw7t)
              (condition-stacktrace
                .
                g$condition-stacktrace$20315$6Dw7t)
              (stacktrace-condition?
                .
                g$stacktrace-condition?$20314$6Dw7t)
              (stacktrace-enable? . g$stacktrace-enable?$33129$6Dw7t)
              (make-stacktrace-condition
                .
                g$make-stacktrace-condition$20312$6Dw7t)
              (condition-where . g$condition-where$20305$6Dw7t)
              (where-condition? . g$where-condition?$20304$6Dw7t)
              (make-where-condition
                .
                g$make-where-condition$20302$6Dw7t)
              (installed-libraries . g$installed-libraries$28549$6Dw7t)
              (uninstall-library . g$uninstall-library$28540$6Dw7t)
              (pretty-gensyms . g$pretty-gensyms$27889$6Dw7t)
              (pretty-width . g$pretty-width$27886$6Dw7t)
              (pretty-print . g$pretty-print$27891$6Dw7t)))))))
    (g$install-library$28544$6Dw7t
      'g$14039$6Dw7t
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$7781$6Dw7t)
        (cosh . g$7779$6Dw7t)
        (sinh . g$7776$6Dw7t)
        (make-guid . g$14032$6Dw7t)
        (unspecified? . g$14031$6Dw7t)
        (make-list . g$6794$6Dw7t)
        (last-pair . g$6793$6Dw7t)
        (load-r5rs . g$14030$6Dw7t)
        (license . g$14029$6Dw7t)
        (stacktrace . g$14028$6Dw7t)
        (ironscheme-test . g$13646$6Dw7t)
        (ironscheme-build . g$13647$6Dw7t)
        (remove-location . g$14012$6Dw7t)
        (set-symbol-value! . g$14011$6Dw7t)
        (symbol-value . g$14010$6Dw7t)
        (symbol-bound? . g$14009$6Dw7t)
        (ungensym . g$14008$6Dw7t)
        (gensym . g$14007$6Dw7t)
        (void . g$14006$6Dw7t)
        (compile-system-libraries . g$13651$6Dw7t)
        (compile->closure . g$13653$6Dw7t)
        (compile . g$13652$6Dw7t)
        (load . g$13645$6Dw7t)
        (new-interaction-environment . g$10624$6Dw7t)
        (interaction-environment . g$10625$6Dw7t)
        (string-upcase . g$8149$6Dw7t)
        (string-titlecase . g$8137$6Dw7t)
        (string-normalize-nfkd . g$8158$6Dw7t)
        (string-normalize-nfkc . g$8157$6Dw7t)
        (string-normalize-nfd . g$8156$6Dw7t)
        (string-normalize-nfc . g$8155$6Dw7t)
        (string-foldcase . g$8138$6Dw7t)
        (string-downcase . g$14001$6Dw7t)
        (string-ci>? . g$8134$6Dw7t)
        (string-ci>=? . g$8136$6Dw7t)
        (string-ci=? . g$8132$6Dw7t)
        (string-ci<? . g$8133$6Dw7t)
        (string-ci<=? . g$8135$6Dw7t)
        (char-whitespace? . g$8114$6Dw7t)
        (char-upper-case? . g$8115$6Dw7t)
        (char-title-case? . g$8117$6Dw7t)
        (char-numeric? . g$8113$6Dw7t)
        (char-lower-case? . g$8116$6Dw7t)
        (char-general-category . g$8118$6Dw7t)
        (char-upcase . g$8108$6Dw7t)
        (char-titlecase . g$8110$6Dw7t)
        (char-foldcase . g$8111$6Dw7t)
        (char-downcase . g$8109$6Dw7t)
        (char-ci>? . g$8146$6Dw7t)
        (char-ci>=? . g$8148$6Dw7t)
        (char-ci=? . g$8144$6Dw7t)
        (char-ci<? . g$8145$6Dw7t)
        (char-ci<=? . g$8147$6Dw7t)
        (char-alphabetic? . g$8112$6Dw7t)
        (make-variable-transformer . g$10298$6Dw7t)
        (identifier? . g$10619$6Dw7t)
        (generate-temporaries . g$10607$6Dw7t)
        (free-identifier=? . g$10608$6Dw7t)
        (syntax->datum . g$10621$6Dw7t)
        (datum->syntax . g$10620$6Dw7t)
        (bound-identifier=? . g$10609$6Dw7t)
        (record-type-descriptor? . g$14000$6Dw7t)
        (record-predicate . g$13999$6Dw7t)
        (record-mutator . g$13998$6Dw7t)
        (record-constructor . g$13997$6Dw7t)
        (record-accessor . g$13996$6Dw7t)
        (make-record-type-descriptor . g$13995$6Dw7t)
        (make-record-constructor-descriptor . g$13994$6Dw7t)
        (record? . g$13993$6Dw7t)
        (record-type-uid . g$13992$6Dw7t)
        (record-type-sealed? . g$13991$6Dw7t)
        (record-type-parent . g$13990$6Dw7t)
        (record-type-opaque? . g$13989$6Dw7t)
        (record-type-name . g$13988$6Dw7t)
        (record-type-generative? . g$13987$6Dw7t)
        (record-type-field-names . g$13986$6Dw7t)
        (record-rtd . g$13985$6Dw7t)
        (record-field-mutable? . g$13984$6Dw7t)
        (delete-file . g$7370$6Dw7t)
        (file-exists? . g$7369$6Dw7t)
        (vector-sort! . g$13983$6Dw7t)
        (vector-sort . g$8078$6Dw7t)
        (list-sort . g$8077$6Dw7t)
        (symbol-hash . g$7340$6Dw7t)
        (string-ci-hash . g$7339$6Dw7t)
        (string-hash . g$7338$6Dw7t)
        (equal-hash . g$13982$6Dw7t)
        (hashtable-equivalence-function . g$13981$6Dw7t)
        (make-hashtable . g$13980$6Dw7t)
        (hashtable-hash-function . g$13979$6Dw7t)
        (make-eqv-hashtable . g$7330$6Dw7t)
        (make-eq-hashtable . g$7329$6Dw7t)
        (hashtable? . g$7328$6Dw7t)
        (hashtable-update! . g$7336$6Dw7t)
        (hashtable-size . g$7331$6Dw7t)
        (hashtable-set! . g$7333$6Dw7t)
        (hashtable-ref . g$7332$6Dw7t)
        (hashtable-mutable? . g$13978$6Dw7t)
        (hashtable-keys . g$13977$6Dw7t)
        (hashtable-entries . g$13976$6Dw7t)
        (hashtable-delete! . g$7334$6Dw7t)
        (hashtable-copy . g$13975$6Dw7t)
        (hashtable-contains? . g$7335$6Dw7t)
        (hashtable-clear! . g$7337$6Dw7t)
        (call-with-output-file . g$9010$6Dw7t)
        (call-with-input-file . g$9009$6Dw7t)
        (write-char . g$9001$6Dw7t)
        (write . g$13974$6Dw7t)
        (with-output-to-file . g$9008$6Dw7t)
        (with-input-from-file . g$9007$6Dw7t)
        (read-char . g$9000$6Dw7t)
        (read . g$13973$6Dw7t)
        (peek-char . g$8999$6Dw7t)
        (open-output-file . g$13972$6Dw7t)
        (open-input-file . g$13971$6Dw7t)
        (newline . g$9011$6Dw7t)
        (display . g$13970$6Dw7t)
        (close-output-port . g$13969$6Dw7t)
        (close-input-port . g$13968$6Dw7t)
        (eof-object? . g$13967$6Dw7t)
        (eof-object . g$13966$6Dw7t)
        (current-error-port . g$13965$6Dw7t)
        (current-output-port . g$13964$6Dw7t)
        (current-input-port . g$13963$6Dw7t)
        (output-port? . g$13962$6Dw7t)
        (input-port? . g$13961$6Dw7t)
        (utf-8-codec . g$13960$6Dw7t)
        (utf-16-codec . g$13959$6Dw7t)
        (transcoder-error-handling-mode . g$13958$6Dw7t)
        (transcoder-eol-style . g$13957$6Dw7t)
        (transcoder-codec . g$13956$6Dw7t)
        (transcoded-port . g$13955$6Dw7t)
        (textual-port? . g$13954$6Dw7t)
        (string->bytevector . g$13953$6Dw7t)
        (standard-output-port . g$8975$6Dw7t)
        (standard-input-port . g$8974$6Dw7t)
        (standard-error-port . g$8973$6Dw7t)
        (set-port-position! . g$13952$6Dw7t)
        (put-u8 . g$13951$6Dw7t)
        (put-string . g$13950$6Dw7t)
        (put-datum . g$8978$6Dw7t)
        (put-char . g$13949$6Dw7t)
        (put-bytevector . g$13948$6Dw7t)
        (port? . g$8983$6Dw7t)
        (port-transcoder . g$13947$6Dw7t)
        (port-position . g$13946$6Dw7t)
        (port-has-set-port-position!? . g$13945$6Dw7t)
        (port-has-port-position? . g$13944$6Dw7t)
        (port-eof? . g$13943$6Dw7t)
        (output-port-buffer-mode . g$13942$6Dw7t)
        (open-string-output-port . g$8982$6Dw7t)
        (open-string-input-port . g$13941$6Dw7t)
        (open-file-output-port . g$13940$6Dw7t)
        (open-file-input/output-port . g$13939$6Dw7t)
        (open-file-input-port . g$13938$6Dw7t)
        (open-bytevector-output-port . g$13937$6Dw7t)
        (open-bytevector-input-port . g$13936$6Dw7t)
        (native-transcoder . g$13935$6Dw7t)
        (native-eol-style . g$8976$6Dw7t)
        (make-transcoder . g$13934$6Dw7t)
        (latin-1-codec . g$13933$6Dw7t)
        (make-i/o-write-error . g$5428$6Dw7t)
        (make-i/o-read-error . g$5415$6Dw7t)
        (make-i/o-port-error . g$5523$6Dw7t)
        (make-i/o-invalid-position-error . g$5441$6Dw7t)
        (make-i/o-filename-error . g$5456$6Dw7t)
        (make-i/o-file-protection-error . g$5471$6Dw7t)
        (make-i/o-file-is-read-only-error . g$5484$6Dw7t)
        (make-i/o-file-does-not-exist-error . g$5510$6Dw7t)
        (make-i/o-file-already-exists-error . g$5497$6Dw7t)
        (make-i/o-error . g$5402$6Dw7t)
        (make-i/o-encoding-error . g$5551$6Dw7t)
        (make-i/o-decoding-error . g$5538$6Dw7t)
        (make-custom-textual-output-port . g$13932$6Dw7t)
        (make-custom-textual-input/output-port . g$13931$6Dw7t)
        (make-custom-textual-input-port . g$13930$6Dw7t)
        (make-custom-binary-output-port . g$13929$6Dw7t)
        (make-custom-binary-input/output-port . g$13928$6Dw7t)
        (make-custom-binary-input-port . g$13927$6Dw7t)
        (make-bytevector . g$7389$6Dw7t)
        (lookahead-u8 . g$13926$6Dw7t)
        (lookahead-char . g$13925$6Dw7t)
        (i/o-write-error? . g$5429$6Dw7t)
        (i/o-read-error? . g$5416$6Dw7t)
        (i/o-port-error? . g$5525$6Dw7t)
        (i/o-invalid-position-error? . g$5443$6Dw7t)
        (i/o-error-position . g$5444$6Dw7t)
        (i/o-filename-error? . g$5458$6Dw7t)
        (i/o-file-protection-error? . g$5472$6Dw7t)
        (i/o-file-is-read-only-error? . g$5485$6Dw7t)
        (i/o-file-does-not-exist-error? . g$5511$6Dw7t)
        (i/o-file-already-exists-error? . g$5498$6Dw7t)
        (i/o-error? . g$5403$6Dw7t)
        (i/o-error-port . g$5526$6Dw7t)
        (i/o-error-filename . g$5459$6Dw7t)
        (i/o-encoding-error? . g$5553$6Dw7t)
        (i/o-encoding-error-char . g$5554$6Dw7t)
        (i/o-decoding-error? . g$5539$6Dw7t)
        (get-u8 . g$13924$6Dw7t)
        (get-string-n! . g$13923$6Dw7t)
        (get-string-n . g$13922$6Dw7t)
        (get-string-all . g$13921$6Dw7t)
        (get-line . g$13920$6Dw7t)
        (get-datum . g$8979$6Dw7t)
        (get-char . g$13919$6Dw7t)
        (get-bytevector-some . g$13918$6Dw7t)
        (get-bytevector-n! . g$13917$6Dw7t)
        (get-bytevector-n . g$13916$6Dw7t)
        (get-bytevector-all . g$13915$6Dw7t)
        (flush-output-port . g$13914$6Dw7t)
        (close-port . g$13913$6Dw7t)
        (call-with-string-output-port . g$8984$6Dw7t)
        (call-with-port . g$8985$6Dw7t)
        (call-with-bytevector-output-port . g$13912$6Dw7t)
        (bytevector->string . g$13911$6Dw7t)
        (buffer-mode? . g$8977$6Dw7t)
        (binary-port? . g$13910$6Dw7t)
        (scheme-report-environment . g$10597$6Dw7t)
        (quotient . g$8056$6Dw7t)
        (null-environment . g$10596$6Dw7t)
        (remainder . g$8057$6Dw7t)
        (modulo . g$8058$6Dw7t)
        (inexact->exact . g$8053$6Dw7t)
        (force . g$8060$6Dw7t)
        (exact->inexact . g$8054$6Dw7t)
        (exit . g$13909$6Dw7t)
        (command-line . g$13640$6Dw7t)
        (string-fill! . g$7002$6Dw7t)
        (string-set! . g$7001$6Dw7t)
        (set-cdr! . g$8045$6Dw7t)
        (set-car! . g$8044$6Dw7t)
        (remove . g$6824$6Dw7t)
        (remv . g$6825$6Dw7t)
        (remp . g$6797$6Dw7t)
        (remq . g$6826$6Dw7t)
        (partition . g$6796$6Dw7t)
        (memv . g$6804$6Dw7t)
        (memq . g$6803$6Dw7t)
        (memp . g$6806$6Dw7t)
        (member . g$6805$6Dw7t)
        (exists . g$6814$6Dw7t)
        (for-all . g$6813$6Dw7t)
        (fold-right . g$6823$6Dw7t)
        (fold-left . g$6822$6Dw7t)
        (find . g$6795$6Dw7t)
        (filter . g$6798$6Dw7t)
        (cons* . g$6817$6Dw7t)
        (assv . g$6800$6Dw7t)
        (assq . g$6799$6Dw7t)
        (assp . g$6802$6Dw7t)
        (assoc . g$6801$6Dw7t)
        (with-exception-handler . g$13908$6Dw7t)
        (raise-continuable . g$13907$6Dw7t)
        (raise . g$13906$6Dw7t)
        (eval . g$10599$6Dw7t)
        (environment . g$10595$6Dw7t)
        (make-enumeration . g$9071$6Dw7t)
        (enum-set=? . g$9078$6Dw7t)
        (enum-set-universe . g$9072$6Dw7t)
        (enum-set-union . g$9079$6Dw7t)
        (enum-set-subset? . g$9077$6Dw7t)
        (enum-set-projection . g$9083$6Dw7t)
        (enum-set-member? . g$9076$6Dw7t)
        (enum-set-intersection . g$9080$6Dw7t)
        (enum-set-indexer . g$9073$6Dw7t)
        (enum-set-difference . g$9081$6Dw7t)
        (enum-set-constructor . g$9074$6Dw7t)
        (enum-set-complement . g$9082$6Dw7t)
        (enum-set->list . g$9075$6Dw7t)
        (who-condition? . g$5290$6Dw7t)
        (warning? . g$5209$6Dw7t)
        (violation? . g$5248$6Dw7t)
        (undefined-violation? . g$5390$6Dw7t)
        (syntax-violation? . g$5375$6Dw7t)
        (syntax-violation-subform . g$5377$6Dw7t)
        (syntax-violation-form . g$5376$6Dw7t)
        (syntax-violation . g$10618$6Dw7t)
        (simple-conditions . g$13905$6Dw7t)
        (serious-condition? . g$5222$6Dw7t)
        (non-continuable-violation? . g$5334$6Dw7t)
        (message-condition? . g$5195$6Dw7t)
        (make-who-condition . g$5288$6Dw7t)
        (make-warning . g$5208$6Dw7t)
        (make-violation . g$5247$6Dw7t)
        (make-undefined-violation . g$5389$6Dw7t)
        (make-syntax-violation . g$5372$6Dw7t)
        (make-serious-condition . g$5221$6Dw7t)
        (make-non-continuable-violation . g$5333$6Dw7t)
        (make-message-condition . g$5193$6Dw7t)
        (make-lexical-violation . g$5359$6Dw7t)
        (make-irritants-condition . g$5273$6Dw7t)
        (make-implementation-restriction-violation . g$5346$6Dw7t)
        (make-error . g$5234$6Dw7t)
        (make-assertion-violation . g$5260$6Dw7t)
        (lexical-violation? . g$5360$6Dw7t)
        (irritants-condition? . g$5275$6Dw7t)
        (implementation-restriction-violation? . g$5347$6Dw7t)
        (error? . g$5235$6Dw7t)
        (condition-who . g$5291$6Dw7t)
        (condition-predicate . g$13904$6Dw7t)
        (condition-message . g$5196$6Dw7t)
        (condition-irritants . g$5276$6Dw7t)
        (condition-accessor . g$13903$6Dw7t)
        (condition . g$13902$6Dw7t)
        (assertion-violation? . g$5261$6Dw7t)
        (condition? . g$13901$6Dw7t)
        (utf32->string . g$7411$6Dw7t)
        (utf16->string . g$7410$6Dw7t)
        (utf8->string . g$7408$6Dw7t)
        (uint-list->bytevector . g$7412$6Dw7t)
        (u8-list->bytevector . g$7400$6Dw7t)
        (string->utf8 . g$7405$6Dw7t)
        (string->utf32 . g$7407$6Dw7t)
        (string->utf16 . g$7406$6Dw7t)
        (sint-list->bytevector . g$7413$6Dw7t)
        (native-endianness . g$7376$6Dw7t)
        (bytevector? . g$6990$6Dw7t)
        (bytevector=? . g$7391$6Dw7t)
        (bytevector-uint-set! . g$7403$6Dw7t)
        (bytevector-uint-ref . g$7401$6Dw7t)
        (bytevector-u8-set! . g$7396$6Dw7t)
        (bytevector-u8-ref . g$7395$6Dw7t)
        (bytevector-u64-set! . g$7441$6Dw7t)
        (bytevector-u64-ref . g$7437$6Dw7t)
        (bytevector-u64-native-set! . g$7443$6Dw7t)
        (bytevector-u64-native-ref . g$7439$6Dw7t)
        (bytevector-u32-set! . g$7433$6Dw7t)
        (bytevector-u32-ref . g$7429$6Dw7t)
        (bytevector-u32-native-set! . g$7435$6Dw7t)
        (bytevector-u32-native-ref . g$7431$6Dw7t)
        (bytevector-u16-set! . g$7425$6Dw7t)
        (bytevector-u16-ref . g$7421$6Dw7t)
        (bytevector-u16-native-set! . g$7427$6Dw7t)
        (bytevector-u16-native-ref . g$7423$6Dw7t)
        (bytevector-sint-set! . g$7404$6Dw7t)
        (bytevector-sint-ref . g$7402$6Dw7t)
        (bytevector-s8-set! . g$7398$6Dw7t)
        (bytevector-s8-ref . g$7397$6Dw7t)
        (bytevector-s64-set! . g$7442$6Dw7t)
        (bytevector-s64-ref . g$7438$6Dw7t)
        (bytevector-s64-native-set! . g$7444$6Dw7t)
        (bytevector-s64-native-ref . g$7440$6Dw7t)
        (bytevector-s32-set! . g$7434$6Dw7t)
        (bytevector-s32-ref . g$7430$6Dw7t)
        (bytevector-s32-native-set! . g$7436$6Dw7t)
        (bytevector-s32-native-ref . g$7432$6Dw7t)
        (bytevector-s16-set! . g$7426$6Dw7t)
        (bytevector-s16-ref . g$7422$6Dw7t)
        (bytevector-s16-native-set! . g$7428$6Dw7t)
        (bytevector-s16-native-ref . g$7424$6Dw7t)
        (bytevector-length . g$7390$6Dw7t)
        (bytevector-ieee-single-set! . g$7419$6Dw7t)
        (bytevector-ieee-single-ref . g$7417$6Dw7t)
        (bytevector-ieee-single-native-set! . g$7447$6Dw7t)
        (bytevector-ieee-single-native-ref . g$7445$6Dw7t)
        (bytevector-ieee-double-set! . g$7420$6Dw7t)
        (bytevector-ieee-double-ref . g$7418$6Dw7t)
        (bytevector-ieee-double-native-set! . g$7448$6Dw7t)
        (bytevector-ieee-double-native-ref . g$7446$6Dw7t)
        (bytevector-fill! . g$7392$6Dw7t)
        (bytevector-copy! . g$7393$6Dw7t)
        (bytevector-copy . g$7394$6Dw7t)
        (bytevector->uint-list . g$7414$6Dw7t)
        (bytevector->u8-list . g$7399$6Dw7t)
        (bytevector->sint-list . g$7415$6Dw7t)
        (no-nans-violation? . g$5580$6Dw7t)
        (no-infinities-violation? . g$5567$6Dw7t)
        (make-no-nans-violation . g$5579$6Dw7t)
        (make-no-infinities-violation . g$5566$6Dw7t)
        (real->flonum . g$7721$6Dw7t)
        (flzero? . g$8415$6Dw7t)
        (fltruncate . g$8410$6Dw7t)
        (fltan . g$8396$6Dw7t)
        (flsqrt . g$8401$6Dw7t)
        (flsin . g$8394$6Dw7t)
        (flround . g$8411$6Dw7t)
        (flpositive? . g$8413$6Dw7t)
        (flonum? . g$6995$6Dw7t)
        (flodd? . g$8417$6Dw7t)
        (flnumerator . g$8360$6Dw7t)
        (flnegative? . g$8414$6Dw7t)
        (flnan? . g$8393$6Dw7t)
        (flmod0 . g$8378$6Dw7t)
        (flmod . g$8377$6Dw7t)
        (flmin . g$8419$6Dw7t)
        (flmax . g$8418$6Dw7t)
        (fllog . g$8400$6Dw7t)
        (flinteger? . g$8386$6Dw7t)
        (flinfinite? . g$8392$6Dw7t)
        (flfloor . g$8409$6Dw7t)
        (flfinite? . g$8387$6Dw7t)
        (flexpt . g$8403$6Dw7t)
        (flexp . g$8402$6Dw7t)
        (fleven? . g$8416$6Dw7t)
        (fldiv0-and-mod0 . g$8385$6Dw7t)
        (fldiv0 . g$8372$6Dw7t)
        (fldiv-and-mod . g$8379$6Dw7t)
        (fldiv . g$8384$6Dw7t)
        (fldenominator . g$8359$6Dw7t)
        (flcos . g$8395$6Dw7t)
        (flceiling . g$8404$6Dw7t)
        (flatan . g$8399$6Dw7t)
        (flasin . g$8397$6Dw7t)
        (flacos . g$8398$6Dw7t)
        (flabs . g$8412$6Dw7t)
        (fl>? . g$8366$6Dw7t)
        (fl>=? . g$8367$6Dw7t)
        (fl=? . g$8363$6Dw7t)
        (fl<? . g$8364$6Dw7t)
        (fl<=? . g$8365$6Dw7t)
        (fl/ . g$8362$6Dw7t)
        (fl- . g$8361$6Dw7t)
        (fl+ . g$8357$6Dw7t)
        (fl* . g$8358$6Dw7t)
        (fixnum->flonum . g$7722$6Dw7t)
        (fxzero? . g$5924$6Dw7t)
        (fxxor . g$5887$6Dw7t)
        (fxrotate-bit-field . g$5962$6Dw7t)
        (fxreverse-bit-field . g$5963$6Dw7t)
        (fxpositive? . g$5914$6Dw7t)
        (fxodd? . g$5934$6Dw7t)
        (fxnot . g$5868$6Dw7t)
        (fxnegative? . g$5919$6Dw7t)
        (fxmod0 . g$5898$6Dw7t)
        (fxmod . g$5897$6Dw7t)
        (fxmin . g$5936$6Dw7t)
        (fxmax . g$5935$6Dw7t)
        (fxlength . g$5865$6Dw7t)
        (fxior . g$5886$6Dw7t)
        (fxif . g$5944$6Dw7t)
        (fxfirst-bit-set . g$5866$6Dw7t)
        (fxeven? . g$5929$6Dw7t)
        (fxdiv0-and-mod0 . g$5909$6Dw7t)
        (fxdiv0 . g$5904$6Dw7t)
        (fxdiv-and-mod . g$5899$6Dw7t)
        (fxdiv . g$5892$6Dw7t)
        (fxcopy-bit-field . g$5959$6Dw7t)
        (fxcopy-bit . g$5949$6Dw7t)
        (fxbit-set? . g$5867$6Dw7t)
        (fxbit-field . g$5954$6Dw7t)
        (fxbit-count . g$5860$6Dw7t)
        (fxarithmetic-shift-right . g$5961$6Dw7t)
        (fxarithmetic-shift-left . g$5960$6Dw7t)
        (fxarithmetic-shift . g$5855$6Dw7t)
        (fxand . g$5885$6Dw7t)
        (fx>? . g$5877$6Dw7t)
        (fx>=? . g$5878$6Dw7t)
        (fx=? . g$5874$6Dw7t)
        (fx<? . g$5875$6Dw7t)
        (fx<=? . g$5876$6Dw7t)
        (fx-/carry . g$5938$6Dw7t)
        (fx- . g$5849$6Dw7t)
        (fx+/carry . g$5939$6Dw7t)
        (fx+ . g$5847$6Dw7t)
        (fx*/carry . g$5937$6Dw7t)
        (fx* . g$5848$6Dw7t)
        (greatest-fixnum . g$5818$6Dw7t)
        (least-fixnum . g$5819$6Dw7t)
        (fixnum-width . g$6996$6Dw7t)
        (fixnum? . g$6994$6Dw7t)
        (bitwise-rotate-bit-field . g$8255$6Dw7t)
        (bitwise-reverse-bit-field . g$8256$6Dw7t)
        (bitwise-length . g$8245$6Dw7t)
        (bitwise-if . g$8248$6Dw7t)
        (bitwise-first-bit-set . g$8246$6Dw7t)
        (bitwise-copy-bit-field . g$8251$6Dw7t)
        (bitwise-copy-bit . g$8249$6Dw7t)
        (bitwise-bit-set? . g$8247$6Dw7t)
        (bitwise-bit-field . g$8250$6Dw7t)
        (bitwise-bit-count . g$8244$6Dw7t)
        (bitwise-xor . g$8243$6Dw7t)
        (bitwise-ior . g$8242$6Dw7t)
        (bitwise-and . g$8241$6Dw7t)
        (bitwise-not . g$8240$6Dw7t)
        (bitwise-arithmetic-shift-right . g$8254$6Dw7t)
        (bitwise-arithmetic-shift-left . g$8253$6Dw7t)
        (bitwise-arithmetic-shift . g$8252$6Dw7t)
        (zero? . g$7736$6Dw7t)
        (vector? . g$6989$6Dw7t)
        (vector-set! . g$7021$6Dw7t)
        (vector-ref . g$7020$6Dw7t)
        (vector-map . g$7088$6Dw7t)
        (vector-length . g$7023$6Dw7t)
        (vector-for-each . g$7089$6Dw7t)
        (vector-fill! . g$7024$6Dw7t)
        (vector->list . g$7025$6Dw7t)
        (vector . g$13900$6Dw7t)
        (values . g$13899$6Dw7t)
        (truncate . g$7788$6Dw7t)
        (tan . g$7780$6Dw7t)
        (symbol? . g$6991$6Dw7t)
        (symbol=? . g$7073$6Dw7t)
        (symbol->string . g$7011$6Dw7t)
        (substring . g$7008$6Dw7t)
        (string? . g$6987$6Dw7t)
        (string>? . g$7070$6Dw7t)
        (string>=? . g$7072$6Dw7t)
        (string=? . g$7068$6Dw7t)
        (string<? . g$7069$6Dw7t)
        (string<=? . g$7071$6Dw7t)
        (string-ref . g$7000$6Dw7t)
        (string-length . g$7003$6Dw7t)
        (string-for-each . g$7090$6Dw7t)
        (string-copy . g$7007$6Dw7t)
        (string-append . g$7009$6Dw7t)
        (string->symbol . g$7012$6Dw7t)
        (string->number . g$13898$6Dw7t)
        (string->list . g$7006$6Dw7t)
        (string . g$7005$6Dw7t)
        (sqrt . g$7790$6Dw7t)
        (sin . g$7774$6Dw7t)
        (round . g$7789$6Dw7t)
        (reverse . g$7027$6Dw7t)
        (real? . g$7730$6Dw7t)
        (real-valued? . g$7733$6Dw7t)
        (real-part . g$7767$6Dw7t)
        (rationalize . g$7085$6Dw7t)
        (rational? . g$7731$6Dw7t)
        (rational-valued? . g$7734$6Dw7t)
        (procedure? . g$6993$6Dw7t)
        (positive? . g$7737$6Dw7t)
        (pair? . g$13897$6Dw7t)
        (odd? . g$7057$6Dw7t)
        (numerator . g$7765$6Dw7t)
        (number? . g$7723$6Dw7t)
        (number->string . g$7744$6Dw7t)
        (null? . g$13896$6Dw7t)
        (not . g$13895$6Dw7t)
        (negative? . g$7738$6Dw7t)
        (nan? . g$7724$6Dw7t)
        (min . g$7059$6Dw7t)
        (max . g$7058$6Dw7t)
        (map . g$6815$6Dw7t)
        (make-vector . g$7022$6Dw7t)
        (make-string . g$6999$6Dw7t)
        (make-rectangular . g$7760$6Dw7t)
        (make-polar . g$7761$6Dw7t)
        (magnitude . g$7763$6Dw7t)
        (log . g$7783$6Dw7t)
        (list? . g$6810$6Dw7t)
        (list-tail . g$6791$6Dw7t)
        (list-ref . g$6792$6Dw7t)
        (list->vector . g$7018$6Dw7t)
        (list->string . g$7019$6Dw7t)
        (list . g$13894$6Dw7t)
        (length . g$6812$6Dw7t)
        (lcm . g$7061$6Dw7t)
        (integer? . g$7732$6Dw7t)
        (integer-valued? . g$7735$6Dw7t)
        (integer->char . g$6998$6Dw7t)
        (infinite? . g$7726$6Dw7t)
        (inexact? . g$7728$6Dw7t)
        (inexact . g$7739$6Dw7t)
        (imag-part . g$7768$6Dw7t)
        (gcd . g$7060$6Dw7t)
        (for-each . g$6816$6Dw7t)
        (floor . g$7786$6Dw7t)
        (finite? . g$7725$6Dw7t)
        (expt . g$7792$6Dw7t)
        (exp . g$7773$6Dw7t)
        (exact? . g$7727$6Dw7t)
        (exact-integer-sqrt . g$7791$6Dw7t)
        (exact . g$7740$6Dw7t)
        (even? . g$7056$6Dw7t)
        (error . g$5586$6Dw7t)
        (eqv? . g$13893$6Dw7t)
        (equal? . g$9203$6Dw7t)
        (eq? . g$13892$6Dw7t)
        (dynamic-wind . g$13891$6Dw7t)
        (div0-and-mod0 . g$7017$6Dw7t)
        (mod0 . g$7015$6Dw7t)
        (div0 . g$7013$6Dw7t)
        (div-and-mod . g$7016$6Dw7t)
        (mod . g$7014$6Dw7t)
        (div . g$7784$6Dw7t)
        (denominator . g$7766$6Dw7t)
        (cos . g$7777$6Dw7t)
        (cons . g$13890$6Dw7t)
        (complex? . g$7729$6Dw7t)
        (char? . g$6988$6Dw7t)
        (char>? . g$7082$6Dw7t)
        (char>=? . g$7084$6Dw7t)
        (char=? . g$7080$6Dw7t)
        (char<? . g$7081$6Dw7t)
        (char<=? . g$7083$6Dw7t)
        (char->integer . g$6997$6Dw7t)
        (ceiling . g$7787$6Dw7t)
        (call-with-values . g$13889$6Dw7t)
        (call/cc . g$13888$6Dw7t)
        (call-with-current-continuation . g$13887$6Dw7t)
        (cddddr . g$7055$6Dw7t)
        (cdddar . g$7054$6Dw7t)
        (cddadr . g$7053$6Dw7t)
        (cddaar . g$7052$6Dw7t)
        (cdaddr . g$7051$6Dw7t)
        (cdadar . g$7050$6Dw7t)
        (cdaadr . g$7049$6Dw7t)
        (cdaaar . g$7048$6Dw7t)
        (cadddr . g$7047$6Dw7t)
        (caddar . g$7046$6Dw7t)
        (cadadr . g$7045$6Dw7t)
        (cadaar . g$7044$6Dw7t)
        (caaddr . g$7043$6Dw7t)
        (caadar . g$7042$6Dw7t)
        (caaadr . g$7041$6Dw7t)
        (caaaar . g$7040$6Dw7t)
        (cdddr . g$7039$6Dw7t)
        (cddar . g$7038$6Dw7t)
        (cdadr . g$7037$6Dw7t)
        (cdaar . g$7036$6Dw7t)
        (caddr . g$7035$6Dw7t)
        (cadar . g$7034$6Dw7t)
        (caadr . g$7033$6Dw7t)
        (caaar . g$7032$6Dw7t)
        (cddr . g$7031$6Dw7t)
        (cdar . g$7030$6Dw7t)
        (cadr . g$7029$6Dw7t)
        (caar . g$7028$6Dw7t)
        (cdr . g$13886$6Dw7t)
        (car . g$13885$6Dw7t)
        (boolean? . g$6992$6Dw7t)
        (boolean=? . g$7074$6Dw7t)
        (atan . g$7782$6Dw7t)
        (assertion-violation . g$5585$6Dw7t)
        (asin . g$7775$6Dw7t)
        (apply . g$13884$6Dw7t)
        (append . g$6821$6Dw7t)
        (angle . g$7762$6Dw7t)
        (acos . g$7778$6Dw7t)
        (abs . g$7785$6Dw7t)
        (/ . g$13883$6Dw7t)
        (* . g$13882$6Dw7t)
        (- . g$13881$6Dw7t)
        (+ . g$13880$6Dw7t)
        (>= . g$7759$6Dw7t)
        (> . g$7758$6Dw7t)
        (= . g$7755$6Dw7t)
        (<= . g$7757$6Dw7t)
        (< . g$7756$6Dw7t)
        (deserialize-port . g$13841$6Dw7t)
        (serialize-port . g$13840$6Dw7t)
        (enum-set? . g$9048$6Dw7t)
        (load/unload . g$13644$6Dw7t)
        (load/args . g$13643$6Dw7t)
        (printf . g$9157$6Dw7t)
        (fprintf . g$9158$6Dw7t)
        (format . g$9159$6Dw7t)
        (procedure-form . g$13839$6Dw7t)
        (procedure-environment . g$13838$6Dw7t)
        (procedure-name . g$13837$6Dw7t)
        (procedure-arity . g$13836$6Dw7t)
        (gc-collect . g$13835$6Dw7t)
        (typeof . g$13834$6Dw7t)
        (clr-type? . g$13833$6Dw7t)
        (get-clr-type . g$13832$6Dw7t)
        (vector-append . g$13830$6Dw7t)
        (vector-filter . g$13829$6Dw7t)
        (vector-reverse! . g$13828$6Dw7t)
        (vector-contains? . g$13827$6Dw7t)
        (vector-index-of . g$13826$6Dw7t)
        (vector-copy . g$13825$6Dw7t)
        (vector-binary-search . g$13824$6Dw7t)
        (string-ci-compare . g$13823$6Dw7t)
        (string-compare . g$13822$6Dw7t)
        (string-format . g$13821$6Dw7t)
        (trace-printer . g$13638$6Dw7t)
        (time-it . g$13819$6Dw7t)
        (make-parameter . g$9282$6Dw7t)
        (open-tcp-input/output-port . g$13816$6Dw7t)
        (hashtable-for-each . g$13815$6Dw7t)
        (hashtable-map . g$13814$6Dw7t)
        (environment-bindings . g$10591$6Dw7t)
        (environment-symbols . g$10594$6Dw7t)
        (interaction-environment-symbols . g$10590$6Dw7t)
        (optimization-level . g$13813$6Dw7t)
        (library-path . g$9920$6Dw7t)
        (make-compile-time-value . g$10299$6Dw7t)
        (expand->core . g$10600$6Dw7t)
        (expand . g$10598$6Dw7t)
        (emacs-mode? . g$13641$6Dw7t)
        (syntax-transpose . g$10537$6Dw7t)
        (convert->cps . g$9601$6Dw7t)
        (condition-stacktrace . g$5321$6Dw7t)
        (stacktrace-condition? . g$5320$6Dw7t)
        (stacktrace-enable? . g$13639$6Dw7t)
        (make-stacktrace-condition . g$5318$6Dw7t)
        (condition-where . g$5306$6Dw7t)
        (where-condition? . g$5305$6Dw7t)
        (make-where-condition . g$5303$6Dw7t)
        (installed-libraries . g$9941$6Dw7t)
        (uninstall-library . g$9932$6Dw7t)
        (pretty-gensyms . g$9365$6Dw7t)
        (pretty-width . g$9362$6Dw7t)
        (pretty-print . g$9367$6Dw7t)
        (pointer+ . g$13806$6Dw7t)
        (&stacktrace . g$13805$6Dw7t)
        (&where . g$13804$6Dw7t)
        (&no-nans . g$13803$6Dw7t)
        (&no-infinities . g$13802$6Dw7t)
        (&i/o-encoding . g$13801$6Dw7t)
        (&i/o-decoding . g$13800$6Dw7t)
        (&i/o-port . g$13799$6Dw7t)
        (&i/o-file-does-not-exist . g$13798$6Dw7t)
        (&i/o-file-already-exists . g$13797$6Dw7t)
        (&i/o-file-is-read-only . g$13796$6Dw7t)
        (&i/o-file-protection . g$13795$6Dw7t)
        (&i/o-filename . g$13794$6Dw7t)
        (&i/o-invalid-position . g$13793$6Dw7t)
        (&i/o-write . g$13792$6Dw7t)
        (&i/o-read . g$13791$6Dw7t)
        (&i/o . g$13790$6Dw7t)
        (&non-continuable . g$13789$6Dw7t)
        (&undefined . g$13788$6Dw7t)
        (&syntax . g$13787$6Dw7t)
        (&lexical . g$13786$6Dw7t)
        (&implementation-restriction . g$13785$6Dw7t)
        (&who . g$13784$6Dw7t)
        (&irritants . g$13783$6Dw7t)
        (&assertion . g$13782$6Dw7t)
        (&violation . g$13781$6Dw7t)
        (&error . g$13780$6Dw7t)
        (&serious . g$13779$6Dw7t)
        (&warning . g$13778$6Dw7t)
        (&message . g$13777$6Dw7t)
        (&condition . g$13776$6Dw7t)
        (define-condition-type . g$13775$6Dw7t)
        (define-enumeration . g$13774$6Dw7t)
        (define-record-type . g$13773$6Dw7t)
        (parent-rtd . g$13772$6Dw7t)
        (nongenerative . g$13771$6Dw7t)
        (opaque . g$13770$6Dw7t)
        (sealed . g$13769$6Dw7t)
        (protocol . g$13768$6Dw7t)
        (parent . g$13767$6Dw7t)
        (immutable . g$13766$6Dw7t)
        (mutable . g$13765$6Dw7t)
        (fields . g$13764$6Dw7t)
        (error-handling-mode . g$13763$6Dw7t)
        (file-options . g$13762$6Dw7t)
        (buffer-mode . g$13761$6Dw7t)
        (eol-style . g$13760$6Dw7t)
        (guard . g$13759$6Dw7t)
        (trace-letrec-syntax . g$13758$6Dw7t)
        (trace-let-syntax . g$13757$6Dw7t)
        (trace-define-syntax . g$13756$6Dw7t)
        (trace-define . g$13755$6Dw7t)
        (trace-lambda . g$13754$6Dw7t)
        (unsyntax-splicing . g$13753$6Dw7t)
        (unsyntax . g$13752$6Dw7t)
        (unquote-splicing . g$13751$6Dw7t)
        (unquote . g$13750$6Dw7t)
        (_ . g$13749$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t)
        (... . g$13746$6Dw7t)
        (assert . g$13745$6Dw7t)
        (endianness . g$13744$6Dw7t)
        (delay . g$13743$6Dw7t)
        (time . g$13742$6Dw7t)
        (or . g$13741$6Dw7t)
        (and . g$13740$6Dw7t)
        (do . g$13739$6Dw7t)
        (cond . g$13738$6Dw7t)
        (let* . g$13737$6Dw7t)
        (let . g$13736$6Dw7t)
        (identifier-syntax . g$13735$6Dw7t)
        (with-syntax . g$13734$6Dw7t)
        (quasisyntax . g$13733$6Dw7t)
        (quasiquote . g$13732$6Dw7t)
        (syntax-rules . g$13731$6Dw7t)
        (include-into . g$13730$6Dw7t)
        (include . g$13729$6Dw7t)
        (let-values . g$13727$6Dw7t)
        (let*-values . g$13726$6Dw7t)
        (record-constructor-descriptor . g$13725$6Dw7t)
        (record-type-descriptor . g$13724$6Dw7t)
        (fluid-let-syntax . g$13723$6Dw7t)
        (case . g$13722$6Dw7t)
        (parameterize . g$13721$6Dw7t)
        (unless . g$13720$6Dw7t)
        (when . g$13719$6Dw7t)
        (if . g$13718$6Dw7t)
        (letrec* . g$13717$6Dw7t)
        (letrec . g$13716$6Dw7t)
        (case-lambda . g$13714$6Dw7t)
        (lambda . g$13713$6Dw7t)
        (syntax . g$13712$6Dw7t)
        (syntax-case . g$13711$6Dw7t)
        (quote . g$13710$6Dw7t)
        (letrec-syntax . g$13708$6Dw7t)
        (let-syntax . g$13707$6Dw7t)
        (set! . g$13706$6Dw7t)
        (export . g$13705$6Dw7t)
        (import . g$13704$6Dw7t)
        (library . g$13703$6Dw7t)
        (begin . g$13702$6Dw7t)
        (module . g$13701$6Dw7t)
        (define-syntax . g$13700$6Dw7t)
        (define . g$13699$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14040$6Dw7t
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$13817$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14041$6Dw7t
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$14037$6Dw7t)
        (annotation-source . g$14036$6Dw7t)
        (annotation-expression . g$14035$6Dw7t)
        (annotation? . g$14034$6Dw7t)
        (read-annotated . g$14033$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14042$6Dw7t
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$14005$6Dw7t)
        (serialize-library . g$14004$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14043$6Dw7t
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$14003$6Dw7t)
        (variable-transformer-procedure . g$10301$6Dw7t)
        (variable-transformer? . g$10300$6Dw7t)
        (eqv-hash . g$13843$6Dw7t)
        (reverse! . g$13842$6Dw7t)
        (make-promise . g$8059$6Dw7t)
        (format . g$9159$6Dw7t)
        (get-command-line . g$13831$6Dw7t)
        (make-traced-procedure . g$13820$6Dw7t)
        (make-traced-macro . g$9179$6Dw7t)
        (assertion-error . g$10614$6Dw7t)
        (library-locator . g$13818$6Dw7t)
        (get-library-paths . g$13817$6Dw7t)
        (library-path . g$9920$6Dw7t)
        (inexact=? . g$13812$6Dw7t)
        (bignum-sqrt-exact . g$13811$6Dw7t)
        (bignum-sqrt . g$13810$6Dw7t)
        (flonum->string . g$13809$6Dw7t)
        (inexact-compare . g$13808$6Dw7t)
        (exact-compare . g$13807$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14044$6Dw7t
      '(ironscheme unsafe)
      '()
      '()
      '()
      '()
      '(($bytevector-set! . g$13879$6Dw7t)
        ($bytevector-ref . g$13878$6Dw7t)
        ($fl>=? . g$13877$6Dw7t)
        ($fl>? . g$13876$6Dw7t)
        ($fl<=? . g$13875$6Dw7t)
        ($fl<? . g$13874$6Dw7t)
        ($fl- . g$13873$6Dw7t)
        ($fl/ . g$13872$6Dw7t)
        ($fl* . g$13871$6Dw7t)
        ($fl+ . g$13870$6Dw7t)
        ($fl=? . g$13869$6Dw7t)
        ($try . g$13868$6Dw7t)
        ($fxarithmetic-shift-right . g$13867$6Dw7t)
        ($fxarithmetic-shift-left . g$13866$6Dw7t)
        ($$fx- . g$13865$6Dw7t)
        ($$fx* . g$13864$6Dw7t)
        ($$fx+ . g$13863$6Dw7t)
        ($fxnot . g$13862$6Dw7t)
        ($fxxor . g$13861$6Dw7t)
        ($fxior . g$13860$6Dw7t)
        ($fxand . g$13859$6Dw7t)
        ($fx>=? . g$13858$6Dw7t)
        ($fx>? . g$13857$6Dw7t)
        ($fx<=? . g$13856$6Dw7t)
        ($fx<? . g$13855$6Dw7t)
        ($fx- . g$13854$6Dw7t)
        ($fxmod0 . g$13853$6Dw7t)
        ($fxdiv0 . g$13852$6Dw7t)
        ($fx* . g$13851$6Dw7t)
        ($fx+ . g$13850$6Dw7t)
        ($fx=? . g$13849$6Dw7t)
        ($vector-set! . g$13848$6Dw7t)
        ($vector-ref . g$13847$6Dw7t)
        ($cdr . g$13846$6Dw7t)
        ($car . g$13845$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14045$6Dw7t
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$13844$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14046$6Dw7t
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((pinvoke-call-internal . g$14027$6Dw7t)
        (ffi-callback-internal . g$14026$6Dw7t)
        (ffi-callout-internal . g$14025$6Dw7t)
        (define-clr-class-internal . g$14024$6Dw7t)
        (clr-field-set!-internal . g$14023$6Dw7t)
        (clr-field-get-internal . g$14022$6Dw7t)
        (clr-cast-internal . g$14021$6Dw7t)
        (clr-call-internal . g$14020$6Dw7t)
        (clr-new-internal . g$14019$6Dw7t)
        (clr-new-array-internal . g$14018$6Dw7t)
        (clr-is-internal . g$14017$6Dw7t)
        (clr-reference-internal . g$14016$6Dw7t)
        (clr-using-internal . g$14015$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14047$6Dw7t
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$13751$6Dw7t)
        (unquote . g$13750$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t)
        (delay . g$13743$6Dw7t)
        (or . g$13741$6Dw7t)
        (and . g$13740$6Dw7t)
        (do . g$13739$6Dw7t)
        (cond . g$13738$6Dw7t)
        (let* . g$13737$6Dw7t)
        (let . g$13736$6Dw7t)
        (quasiquote . g$13732$6Dw7t)
        (syntax-rules . g$13731$6Dw7t)
        (case . g$13722$6Dw7t)
        (if . g$13718$6Dw7t)
        (letrec . g$13716$6Dw7t)
        (lambda . g$13713$6Dw7t)
        (quote . g$13710$6Dw7t)
        (letrec-syntax . g$13708$6Dw7t)
        (let-syntax . g$13707$6Dw7t)
        (set! . g$13706$6Dw7t)
        (begin . g$13702$6Dw7t)
        (define-syntax . g$13700$6Dw7t)
        (define . g$13699$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14048$6Dw7t
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$14002$6Dw7t)
        (string-ci>? . g$8134$6Dw7t)
        (string-ci>=? . g$8136$6Dw7t)
        (string-ci=? . g$8132$6Dw7t)
        (string-ci<? . g$8133$6Dw7t)
        (string-ci<=? . g$8135$6Dw7t)
        (char-whitespace? . g$8114$6Dw7t)
        (char-upper-case? . g$8115$6Dw7t)
        (char-numeric? . g$8113$6Dw7t)
        (char-lower-case? . g$8116$6Dw7t)
        (char-upcase . g$8108$6Dw7t)
        (char-downcase . g$8109$6Dw7t)
        (char-ci>? . g$8146$6Dw7t)
        (char-ci>=? . g$8148$6Dw7t)
        (char-ci=? . g$8144$6Dw7t)
        (char-ci<? . g$8145$6Dw7t)
        (char-ci<=? . g$8147$6Dw7t)
        (char-alphabetic? . g$8112$6Dw7t)
        (call-with-output-file . g$9010$6Dw7t)
        (call-with-input-file . g$9009$6Dw7t)
        (write-char . g$9001$6Dw7t)
        (write . g$13974$6Dw7t)
        (with-output-to-file . g$9008$6Dw7t)
        (with-input-from-file . g$9007$6Dw7t)
        (read-char . g$9000$6Dw7t)
        (read . g$13973$6Dw7t)
        (peek-char . g$8999$6Dw7t)
        (open-output-file . g$13972$6Dw7t)
        (open-input-file . g$13971$6Dw7t)
        (newline . g$9011$6Dw7t)
        (display . g$13970$6Dw7t)
        (close-output-port . g$13969$6Dw7t)
        (close-input-port . g$13968$6Dw7t)
        (eof-object? . g$13967$6Dw7t)
        (current-error-port . g$13965$6Dw7t)
        (current-output-port . g$13964$6Dw7t)
        (current-input-port . g$13963$6Dw7t)
        (output-port? . g$13962$6Dw7t)
        (input-port? . g$13961$6Dw7t)
        (scheme-report-environment . g$10597$6Dw7t)
        (quotient . g$8056$6Dw7t)
        (null-environment . g$10596$6Dw7t)
        (remainder . g$8057$6Dw7t)
        (modulo . g$8058$6Dw7t)
        (inexact->exact . g$8053$6Dw7t)
        (force . g$8060$6Dw7t)
        (exact->inexact . g$8054$6Dw7t)
        (string-fill! . g$7002$6Dw7t)
        (string-set! . g$7001$6Dw7t)
        (set-cdr! . g$8045$6Dw7t)
        (set-car! . g$8044$6Dw7t)
        (memv . g$6804$6Dw7t)
        (memq . g$6803$6Dw7t)
        (member . g$6805$6Dw7t)
        (assv . g$6800$6Dw7t)
        (assq . g$6799$6Dw7t)
        (assoc . g$6801$6Dw7t)
        (eval . g$10599$6Dw7t)
        (zero? . g$7736$6Dw7t)
        (vector? . g$6989$6Dw7t)
        (vector-set! . g$7021$6Dw7t)
        (vector-ref . g$7020$6Dw7t)
        (vector-length . g$7023$6Dw7t)
        (vector-fill! . g$7024$6Dw7t)
        (vector->list . g$7025$6Dw7t)
        (vector . g$13900$6Dw7t)
        (values . g$13899$6Dw7t)
        (truncate . g$7788$6Dw7t)
        (tan . g$7780$6Dw7t)
        (symbol? . g$6991$6Dw7t)
        (symbol->string . g$7011$6Dw7t)
        (substring . g$7008$6Dw7t)
        (string? . g$6987$6Dw7t)
        (string>? . g$7070$6Dw7t)
        (string>=? . g$7072$6Dw7t)
        (string=? . g$7068$6Dw7t)
        (string<? . g$7069$6Dw7t)
        (string<=? . g$7071$6Dw7t)
        (string-ref . g$7000$6Dw7t)
        (string-length . g$7003$6Dw7t)
        (string-copy . g$7007$6Dw7t)
        (string-append . g$7009$6Dw7t)
        (string->symbol . g$7012$6Dw7t)
        (string->number . g$13898$6Dw7t)
        (string->list . g$7006$6Dw7t)
        (string . g$7005$6Dw7t)
        (sqrt . g$7790$6Dw7t)
        (sin . g$7774$6Dw7t)
        (round . g$7789$6Dw7t)
        (reverse . g$7027$6Dw7t)
        (real? . g$7730$6Dw7t)
        (real-part . g$7767$6Dw7t)
        (rationalize . g$7085$6Dw7t)
        (rational? . g$7731$6Dw7t)
        (procedure? . g$6993$6Dw7t)
        (positive? . g$7737$6Dw7t)
        (pair? . g$13897$6Dw7t)
        (odd? . g$7057$6Dw7t)
        (numerator . g$7765$6Dw7t)
        (number? . g$7723$6Dw7t)
        (number->string . g$7744$6Dw7t)
        (null? . g$13896$6Dw7t)
        (not . g$13895$6Dw7t)
        (negative? . g$7738$6Dw7t)
        (min . g$7059$6Dw7t)
        (max . g$7058$6Dw7t)
        (map . g$6815$6Dw7t)
        (make-vector . g$7022$6Dw7t)
        (make-string . g$6999$6Dw7t)
        (make-rectangular . g$7760$6Dw7t)
        (make-polar . g$7761$6Dw7t)
        (magnitude . g$7763$6Dw7t)
        (log . g$7783$6Dw7t)
        (list? . g$6810$6Dw7t)
        (list-tail . g$6791$6Dw7t)
        (list-ref . g$6792$6Dw7t)
        (list->vector . g$7018$6Dw7t)
        (list->string . g$7019$6Dw7t)
        (list . g$13894$6Dw7t)
        (length . g$6812$6Dw7t)
        (lcm . g$7061$6Dw7t)
        (integer? . g$7732$6Dw7t)
        (integer->char . g$6998$6Dw7t)
        (inexact? . g$7728$6Dw7t)
        (imag-part . g$7768$6Dw7t)
        (gcd . g$7060$6Dw7t)
        (for-each . g$6816$6Dw7t)
        (floor . g$7786$6Dw7t)
        (expt . g$7792$6Dw7t)
        (exp . g$7773$6Dw7t)
        (exact? . g$7727$6Dw7t)
        (even? . g$7056$6Dw7t)
        (eqv? . g$13893$6Dw7t)
        (equal? . g$9203$6Dw7t)
        (eq? . g$13892$6Dw7t)
        (dynamic-wind . g$13891$6Dw7t)
        (denominator . g$7766$6Dw7t)
        (cos . g$7777$6Dw7t)
        (cons . g$13890$6Dw7t)
        (complex? . g$7729$6Dw7t)
        (char? . g$6988$6Dw7t)
        (char>? . g$7082$6Dw7t)
        (char>=? . g$7084$6Dw7t)
        (char=? . g$7080$6Dw7t)
        (char<? . g$7081$6Dw7t)
        (char<=? . g$7083$6Dw7t)
        (char->integer . g$6997$6Dw7t)
        (ceiling . g$7787$6Dw7t)
        (call-with-values . g$13889$6Dw7t)
        (call-with-current-continuation . g$13887$6Dw7t)
        (cddddr . g$7055$6Dw7t)
        (cdddar . g$7054$6Dw7t)
        (cddadr . g$7053$6Dw7t)
        (cddaar . g$7052$6Dw7t)
        (cdaddr . g$7051$6Dw7t)
        (cdadar . g$7050$6Dw7t)
        (cdaadr . g$7049$6Dw7t)
        (cdaaar . g$7048$6Dw7t)
        (cadddr . g$7047$6Dw7t)
        (caddar . g$7046$6Dw7t)
        (cadadr . g$7045$6Dw7t)
        (cadaar . g$7044$6Dw7t)
        (caaddr . g$7043$6Dw7t)
        (caadar . g$7042$6Dw7t)
        (caaadr . g$7041$6Dw7t)
        (caaaar . g$7040$6Dw7t)
        (cdddr . g$7039$6Dw7t)
        (cddar . g$7038$6Dw7t)
        (cdadr . g$7037$6Dw7t)
        (cdaar . g$7036$6Dw7t)
        (caddr . g$7035$6Dw7t)
        (cadar . g$7034$6Dw7t)
        (caadr . g$7033$6Dw7t)
        (caaar . g$7032$6Dw7t)
        (cddr . g$7031$6Dw7t)
        (cdar . g$7030$6Dw7t)
        (cadr . g$7029$6Dw7t)
        (caar . g$7028$6Dw7t)
        (cdr . g$13886$6Dw7t)
        (car . g$13885$6Dw7t)
        (boolean? . g$6992$6Dw7t)
        (atan . g$7782$6Dw7t)
        (asin . g$7775$6Dw7t)
        (apply . g$13884$6Dw7t)
        (append . g$6821$6Dw7t)
        (angle . g$7762$6Dw7t)
        (acos . g$7778$6Dw7t)
        (abs . g$7785$6Dw7t)
        (/ . g$13883$6Dw7t)
        (* . g$13882$6Dw7t)
        (- . g$13881$6Dw7t)
        (+ . g$13880$6Dw7t)
        (>= . g$7759$6Dw7t)
        (> . g$7758$6Dw7t)
        (= . g$7755$6Dw7t)
        (<= . g$7757$6Dw7t)
        (< . g$7756$6Dw7t)
        (unquote-splicing . g$13751$6Dw7t)
        (unquote . g$13750$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t)
        (... . g$13746$6Dw7t)
        (delay . g$13743$6Dw7t)
        (or . g$13741$6Dw7t)
        (and . g$13740$6Dw7t)
        (do . g$13739$6Dw7t)
        (cond . g$13738$6Dw7t)
        (let* . g$13737$6Dw7t)
        (let . g$13736$6Dw7t)
        (quasiquote . g$13732$6Dw7t)
        (syntax-rules . g$13731$6Dw7t)
        (case . g$13722$6Dw7t)
        (if . g$13718$6Dw7t)
        (letrec . g$13716$6Dw7t)
        (lambda . g$13713$6Dw7t)
        (quote . g$13710$6Dw7t)
        (letrec-syntax . g$13708$6Dw7t)
        (let-syntax . g$13707$6Dw7t)
        (set! . g$13706$6Dw7t)
        (begin . g$13702$6Dw7t)
        (define-syntax . g$13700$6Dw7t)
        (define . g$13699$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14049$6Dw7t
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$8149$6Dw7t)
        (string-titlecase . g$8137$6Dw7t)
        (string-normalize-nfkd . g$8158$6Dw7t)
        (string-normalize-nfkc . g$8157$6Dw7t)
        (string-normalize-nfd . g$8156$6Dw7t)
        (string-normalize-nfc . g$8155$6Dw7t)
        (string-foldcase . g$8138$6Dw7t)
        (string-downcase . g$14001$6Dw7t)
        (string-ci>? . g$8134$6Dw7t)
        (string-ci>=? . g$8136$6Dw7t)
        (string-ci=? . g$8132$6Dw7t)
        (string-ci<? . g$8133$6Dw7t)
        (string-ci<=? . g$8135$6Dw7t)
        (char-whitespace? . g$8114$6Dw7t)
        (char-upper-case? . g$8115$6Dw7t)
        (char-title-case? . g$8117$6Dw7t)
        (char-numeric? . g$8113$6Dw7t)
        (char-lower-case? . g$8116$6Dw7t)
        (char-general-category . g$8118$6Dw7t)
        (char-upcase . g$8108$6Dw7t)
        (char-titlecase . g$8110$6Dw7t)
        (char-foldcase . g$8111$6Dw7t)
        (char-downcase . g$8109$6Dw7t)
        (char-ci>? . g$8146$6Dw7t)
        (char-ci>=? . g$8148$6Dw7t)
        (char-ci=? . g$8144$6Dw7t)
        (char-ci<? . g$8145$6Dw7t)
        (char-ci<=? . g$8147$6Dw7t)
        (char-alphabetic? . g$8112$6Dw7t)
        (make-variable-transformer . g$10298$6Dw7t)
        (identifier? . g$10619$6Dw7t)
        (generate-temporaries . g$10607$6Dw7t)
        (free-identifier=? . g$10608$6Dw7t)
        (syntax->datum . g$10621$6Dw7t)
        (datum->syntax . g$10620$6Dw7t)
        (bound-identifier=? . g$10609$6Dw7t)
        (record-type-descriptor? . g$14000$6Dw7t)
        (record-predicate . g$13999$6Dw7t)
        (record-mutator . g$13998$6Dw7t)
        (record-constructor . g$13997$6Dw7t)
        (record-accessor . g$13996$6Dw7t)
        (make-record-type-descriptor . g$13995$6Dw7t)
        (make-record-constructor-descriptor . g$13994$6Dw7t)
        (record? . g$13993$6Dw7t)
        (record-type-uid . g$13992$6Dw7t)
        (record-type-sealed? . g$13991$6Dw7t)
        (record-type-parent . g$13990$6Dw7t)
        (record-type-opaque? . g$13989$6Dw7t)
        (record-type-name . g$13988$6Dw7t)
        (record-type-generative? . g$13987$6Dw7t)
        (record-type-field-names . g$13986$6Dw7t)
        (record-rtd . g$13985$6Dw7t)
        (record-field-mutable? . g$13984$6Dw7t)
        (delete-file . g$7370$6Dw7t)
        (file-exists? . g$7369$6Dw7t)
        (vector-sort! . g$13983$6Dw7t)
        (vector-sort . g$8078$6Dw7t)
        (list-sort . g$8077$6Dw7t)
        (symbol-hash . g$7340$6Dw7t)
        (string-ci-hash . g$7339$6Dw7t)
        (string-hash . g$7338$6Dw7t)
        (equal-hash . g$13982$6Dw7t)
        (hashtable-equivalence-function . g$13981$6Dw7t)
        (make-hashtable . g$13980$6Dw7t)
        (hashtable-hash-function . g$13979$6Dw7t)
        (make-eqv-hashtable . g$7330$6Dw7t)
        (make-eq-hashtable . g$7329$6Dw7t)
        (hashtable? . g$7328$6Dw7t)
        (hashtable-update! . g$7336$6Dw7t)
        (hashtable-size . g$7331$6Dw7t)
        (hashtable-set! . g$7333$6Dw7t)
        (hashtable-ref . g$7332$6Dw7t)
        (hashtable-mutable? . g$13978$6Dw7t)
        (hashtable-keys . g$13977$6Dw7t)
        (hashtable-entries . g$13976$6Dw7t)
        (hashtable-delete! . g$7334$6Dw7t)
        (hashtable-copy . g$13975$6Dw7t)
        (hashtable-contains? . g$7335$6Dw7t)
        (hashtable-clear! . g$7337$6Dw7t)
        (call-with-output-file . g$9010$6Dw7t)
        (call-with-input-file . g$9009$6Dw7t)
        (write-char . g$9001$6Dw7t)
        (write . g$13974$6Dw7t)
        (with-output-to-file . g$9008$6Dw7t)
        (with-input-from-file . g$9007$6Dw7t)
        (read-char . g$9000$6Dw7t)
        (read . g$13973$6Dw7t)
        (peek-char . g$8999$6Dw7t)
        (open-output-file . g$13972$6Dw7t)
        (open-input-file . g$13971$6Dw7t)
        (newline . g$9011$6Dw7t)
        (display . g$13970$6Dw7t)
        (close-output-port . g$13969$6Dw7t)
        (close-input-port . g$13968$6Dw7t)
        (eof-object? . g$13967$6Dw7t)
        (eof-object . g$13966$6Dw7t)
        (current-error-port . g$13965$6Dw7t)
        (current-output-port . g$13964$6Dw7t)
        (current-input-port . g$13963$6Dw7t)
        (output-port? . g$13962$6Dw7t)
        (input-port? . g$13961$6Dw7t)
        (utf-8-codec . g$13960$6Dw7t)
        (utf-16-codec . g$13959$6Dw7t)
        (transcoder-error-handling-mode . g$13958$6Dw7t)
        (transcoder-eol-style . g$13957$6Dw7t)
        (transcoder-codec . g$13956$6Dw7t)
        (transcoded-port . g$13955$6Dw7t)
        (textual-port? . g$13954$6Dw7t)
        (string->bytevector . g$13953$6Dw7t)
        (standard-output-port . g$8975$6Dw7t)
        (standard-input-port . g$8974$6Dw7t)
        (standard-error-port . g$8973$6Dw7t)
        (set-port-position! . g$13952$6Dw7t)
        (put-u8 . g$13951$6Dw7t)
        (put-string . g$13950$6Dw7t)
        (put-datum . g$8978$6Dw7t)
        (put-char . g$13949$6Dw7t)
        (put-bytevector . g$13948$6Dw7t)
        (port? . g$8983$6Dw7t)
        (port-transcoder . g$13947$6Dw7t)
        (port-position . g$13946$6Dw7t)
        (port-has-set-port-position!? . g$13945$6Dw7t)
        (port-has-port-position? . g$13944$6Dw7t)
        (port-eof? . g$13943$6Dw7t)
        (output-port-buffer-mode . g$13942$6Dw7t)
        (open-string-output-port . g$8982$6Dw7t)
        (open-string-input-port . g$13941$6Dw7t)
        (open-file-output-port . g$13940$6Dw7t)
        (open-file-input/output-port . g$13939$6Dw7t)
        (open-file-input-port . g$13938$6Dw7t)
        (open-bytevector-output-port . g$13937$6Dw7t)
        (open-bytevector-input-port . g$13936$6Dw7t)
        (native-transcoder . g$13935$6Dw7t)
        (native-eol-style . g$8976$6Dw7t)
        (make-transcoder . g$13934$6Dw7t)
        (latin-1-codec . g$13933$6Dw7t)
        (make-i/o-write-error . g$5428$6Dw7t)
        (make-i/o-read-error . g$5415$6Dw7t)
        (make-i/o-port-error . g$5523$6Dw7t)
        (make-i/o-invalid-position-error . g$5441$6Dw7t)
        (make-i/o-filename-error . g$5456$6Dw7t)
        (make-i/o-file-protection-error . g$5471$6Dw7t)
        (make-i/o-file-is-read-only-error . g$5484$6Dw7t)
        (make-i/o-file-does-not-exist-error . g$5510$6Dw7t)
        (make-i/o-file-already-exists-error . g$5497$6Dw7t)
        (make-i/o-error . g$5402$6Dw7t)
        (make-i/o-encoding-error . g$5551$6Dw7t)
        (make-i/o-decoding-error . g$5538$6Dw7t)
        (make-custom-textual-output-port . g$13932$6Dw7t)
        (make-custom-textual-input/output-port . g$13931$6Dw7t)
        (make-custom-textual-input-port . g$13930$6Dw7t)
        (make-custom-binary-output-port . g$13929$6Dw7t)
        (make-custom-binary-input/output-port . g$13928$6Dw7t)
        (make-custom-binary-input-port . g$13927$6Dw7t)
        (make-bytevector . g$7389$6Dw7t)
        (lookahead-u8 . g$13926$6Dw7t)
        (lookahead-char . g$13925$6Dw7t)
        (i/o-write-error? . g$5429$6Dw7t)
        (i/o-read-error? . g$5416$6Dw7t)
        (i/o-port-error? . g$5525$6Dw7t)
        (i/o-invalid-position-error? . g$5443$6Dw7t)
        (i/o-error-position . g$5444$6Dw7t)
        (i/o-filename-error? . g$5458$6Dw7t)
        (i/o-file-protection-error? . g$5472$6Dw7t)
        (i/o-file-is-read-only-error? . g$5485$6Dw7t)
        (i/o-file-does-not-exist-error? . g$5511$6Dw7t)
        (i/o-file-already-exists-error? . g$5498$6Dw7t)
        (i/o-error? . g$5403$6Dw7t)
        (i/o-error-port . g$5526$6Dw7t)
        (i/o-error-filename . g$5459$6Dw7t)
        (i/o-encoding-error? . g$5553$6Dw7t)
        (i/o-encoding-error-char . g$5554$6Dw7t)
        (i/o-decoding-error? . g$5539$6Dw7t)
        (get-u8 . g$13924$6Dw7t)
        (get-string-n! . g$13923$6Dw7t)
        (get-string-n . g$13922$6Dw7t)
        (get-string-all . g$13921$6Dw7t)
        (get-line . g$13920$6Dw7t)
        (get-datum . g$8979$6Dw7t)
        (get-char . g$13919$6Dw7t)
        (get-bytevector-some . g$13918$6Dw7t)
        (get-bytevector-n! . g$13917$6Dw7t)
        (get-bytevector-n . g$13916$6Dw7t)
        (get-bytevector-all . g$13915$6Dw7t)
        (flush-output-port . g$13914$6Dw7t)
        (close-port . g$13913$6Dw7t)
        (call-with-string-output-port . g$8984$6Dw7t)
        (call-with-port . g$8985$6Dw7t)
        (call-with-bytevector-output-port . g$13912$6Dw7t)
        (bytevector->string . g$13911$6Dw7t)
        (buffer-mode? . g$8977$6Dw7t)
        (binary-port? . g$13910$6Dw7t)
        (exit . g$13909$6Dw7t)
        (command-line . g$13640$6Dw7t)
        (remove . g$6824$6Dw7t)
        (remv . g$6825$6Dw7t)
        (remp . g$6797$6Dw7t)
        (remq . g$6826$6Dw7t)
        (partition . g$6796$6Dw7t)
        (memv . g$6804$6Dw7t)
        (memq . g$6803$6Dw7t)
        (memp . g$6806$6Dw7t)
        (member . g$6805$6Dw7t)
        (exists . g$6814$6Dw7t)
        (for-all . g$6813$6Dw7t)
        (fold-right . g$6823$6Dw7t)
        (fold-left . g$6822$6Dw7t)
        (find . g$6795$6Dw7t)
        (filter . g$6798$6Dw7t)
        (cons* . g$6817$6Dw7t)
        (assv . g$6800$6Dw7t)
        (assq . g$6799$6Dw7t)
        (assp . g$6802$6Dw7t)
        (assoc . g$6801$6Dw7t)
        (with-exception-handler . g$13908$6Dw7t)
        (raise-continuable . g$13907$6Dw7t)
        (raise . g$13906$6Dw7t)
        (make-enumeration . g$9071$6Dw7t)
        (enum-set=? . g$9078$6Dw7t)
        (enum-set-universe . g$9072$6Dw7t)
        (enum-set-union . g$9079$6Dw7t)
        (enum-set-subset? . g$9077$6Dw7t)
        (enum-set-projection . g$9083$6Dw7t)
        (enum-set-member? . g$9076$6Dw7t)
        (enum-set-intersection . g$9080$6Dw7t)
        (enum-set-indexer . g$9073$6Dw7t)
        (enum-set-difference . g$9081$6Dw7t)
        (enum-set-constructor . g$9074$6Dw7t)
        (enum-set-complement . g$9082$6Dw7t)
        (enum-set->list . g$9075$6Dw7t)
        (who-condition? . g$5290$6Dw7t)
        (warning? . g$5209$6Dw7t)
        (violation? . g$5248$6Dw7t)
        (undefined-violation? . g$5390$6Dw7t)
        (syntax-violation? . g$5375$6Dw7t)
        (syntax-violation-subform . g$5377$6Dw7t)
        (syntax-violation-form . g$5376$6Dw7t)
        (syntax-violation . g$10618$6Dw7t)
        (simple-conditions . g$13905$6Dw7t)
        (serious-condition? . g$5222$6Dw7t)
        (non-continuable-violation? . g$5334$6Dw7t)
        (message-condition? . g$5195$6Dw7t)
        (make-who-condition . g$5288$6Dw7t)
        (make-warning . g$5208$6Dw7t)
        (make-violation . g$5247$6Dw7t)
        (make-undefined-violation . g$5389$6Dw7t)
        (make-syntax-violation . g$5372$6Dw7t)
        (make-serious-condition . g$5221$6Dw7t)
        (make-non-continuable-violation . g$5333$6Dw7t)
        (make-message-condition . g$5193$6Dw7t)
        (make-lexical-violation . g$5359$6Dw7t)
        (make-irritants-condition . g$5273$6Dw7t)
        (make-implementation-restriction-violation . g$5346$6Dw7t)
        (make-error . g$5234$6Dw7t)
        (make-assertion-violation . g$5260$6Dw7t)
        (lexical-violation? . g$5360$6Dw7t)
        (irritants-condition? . g$5275$6Dw7t)
        (implementation-restriction-violation? . g$5347$6Dw7t)
        (error? . g$5235$6Dw7t)
        (condition-who . g$5291$6Dw7t)
        (condition-predicate . g$13904$6Dw7t)
        (condition-message . g$5196$6Dw7t)
        (condition-irritants . g$5276$6Dw7t)
        (condition-accessor . g$13903$6Dw7t)
        (condition . g$13902$6Dw7t)
        (assertion-violation? . g$5261$6Dw7t)
        (condition? . g$13901$6Dw7t)
        (utf32->string . g$7411$6Dw7t)
        (utf16->string . g$7410$6Dw7t)
        (utf8->string . g$7408$6Dw7t)
        (uint-list->bytevector . g$7412$6Dw7t)
        (u8-list->bytevector . g$7400$6Dw7t)
        (string->utf8 . g$7405$6Dw7t)
        (string->utf32 . g$7407$6Dw7t)
        (string->utf16 . g$7406$6Dw7t)
        (sint-list->bytevector . g$7413$6Dw7t)
        (native-endianness . g$7376$6Dw7t)
        (bytevector? . g$6990$6Dw7t)
        (bytevector=? . g$7391$6Dw7t)
        (bytevector-uint-set! . g$7403$6Dw7t)
        (bytevector-uint-ref . g$7401$6Dw7t)
        (bytevector-u8-set! . g$7396$6Dw7t)
        (bytevector-u8-ref . g$7395$6Dw7t)
        (bytevector-u64-set! . g$7441$6Dw7t)
        (bytevector-u64-ref . g$7437$6Dw7t)
        (bytevector-u64-native-set! . g$7443$6Dw7t)
        (bytevector-u64-native-ref . g$7439$6Dw7t)
        (bytevector-u32-set! . g$7433$6Dw7t)
        (bytevector-u32-ref . g$7429$6Dw7t)
        (bytevector-u32-native-set! . g$7435$6Dw7t)
        (bytevector-u32-native-ref . g$7431$6Dw7t)
        (bytevector-u16-set! . g$7425$6Dw7t)
        (bytevector-u16-ref . g$7421$6Dw7t)
        (bytevector-u16-native-set! . g$7427$6Dw7t)
        (bytevector-u16-native-ref . g$7423$6Dw7t)
        (bytevector-sint-set! . g$7404$6Dw7t)
        (bytevector-sint-ref . g$7402$6Dw7t)
        (bytevector-s8-set! . g$7398$6Dw7t)
        (bytevector-s8-ref . g$7397$6Dw7t)
        (bytevector-s64-set! . g$7442$6Dw7t)
        (bytevector-s64-ref . g$7438$6Dw7t)
        (bytevector-s64-native-set! . g$7444$6Dw7t)
        (bytevector-s64-native-ref . g$7440$6Dw7t)
        (bytevector-s32-set! . g$7434$6Dw7t)
        (bytevector-s32-ref . g$7430$6Dw7t)
        (bytevector-s32-native-set! . g$7436$6Dw7t)
        (bytevector-s32-native-ref . g$7432$6Dw7t)
        (bytevector-s16-set! . g$7426$6Dw7t)
        (bytevector-s16-ref . g$7422$6Dw7t)
        (bytevector-s16-native-set! . g$7428$6Dw7t)
        (bytevector-s16-native-ref . g$7424$6Dw7t)
        (bytevector-length . g$7390$6Dw7t)
        (bytevector-ieee-single-set! . g$7419$6Dw7t)
        (bytevector-ieee-single-ref . g$7417$6Dw7t)
        (bytevector-ieee-single-native-set! . g$7447$6Dw7t)
        (bytevector-ieee-single-native-ref . g$7445$6Dw7t)
        (bytevector-ieee-double-set! . g$7420$6Dw7t)
        (bytevector-ieee-double-ref . g$7418$6Dw7t)
        (bytevector-ieee-double-native-set! . g$7448$6Dw7t)
        (bytevector-ieee-double-native-ref . g$7446$6Dw7t)
        (bytevector-fill! . g$7392$6Dw7t)
        (bytevector-copy! . g$7393$6Dw7t)
        (bytevector-copy . g$7394$6Dw7t)
        (bytevector->uint-list . g$7414$6Dw7t)
        (bytevector->u8-list . g$7399$6Dw7t)
        (bytevector->sint-list . g$7415$6Dw7t)
        (no-nans-violation? . g$5580$6Dw7t)
        (no-infinities-violation? . g$5567$6Dw7t)
        (make-no-nans-violation . g$5579$6Dw7t)
        (make-no-infinities-violation . g$5566$6Dw7t)
        (real->flonum . g$7721$6Dw7t)
        (flzero? . g$8415$6Dw7t)
        (fltruncate . g$8410$6Dw7t)
        (fltan . g$8396$6Dw7t)
        (flsqrt . g$8401$6Dw7t)
        (flsin . g$8394$6Dw7t)
        (flround . g$8411$6Dw7t)
        (flpositive? . g$8413$6Dw7t)
        (flonum? . g$6995$6Dw7t)
        (flodd? . g$8417$6Dw7t)
        (flnumerator . g$8360$6Dw7t)
        (flnegative? . g$8414$6Dw7t)
        (flnan? . g$8393$6Dw7t)
        (flmod0 . g$8378$6Dw7t)
        (flmod . g$8377$6Dw7t)
        (flmin . g$8419$6Dw7t)
        (flmax . g$8418$6Dw7t)
        (fllog . g$8400$6Dw7t)
        (flinteger? . g$8386$6Dw7t)
        (flinfinite? . g$8392$6Dw7t)
        (flfloor . g$8409$6Dw7t)
        (flfinite? . g$8387$6Dw7t)
        (flexpt . g$8403$6Dw7t)
        (flexp . g$8402$6Dw7t)
        (fleven? . g$8416$6Dw7t)
        (fldiv0-and-mod0 . g$8385$6Dw7t)
        (fldiv0 . g$8372$6Dw7t)
        (fldiv-and-mod . g$8379$6Dw7t)
        (fldiv . g$8384$6Dw7t)
        (fldenominator . g$8359$6Dw7t)
        (flcos . g$8395$6Dw7t)
        (flceiling . g$8404$6Dw7t)
        (flatan . g$8399$6Dw7t)
        (flasin . g$8397$6Dw7t)
        (flacos . g$8398$6Dw7t)
        (flabs . g$8412$6Dw7t)
        (fl>? . g$8366$6Dw7t)
        (fl>=? . g$8367$6Dw7t)
        (fl=? . g$8363$6Dw7t)
        (fl<? . g$8364$6Dw7t)
        (fl<=? . g$8365$6Dw7t)
        (fl/ . g$8362$6Dw7t)
        (fl- . g$8361$6Dw7t)
        (fl+ . g$8357$6Dw7t)
        (fl* . g$8358$6Dw7t)
        (fixnum->flonum . g$7722$6Dw7t)
        (fxzero? . g$5924$6Dw7t)
        (fxxor . g$5887$6Dw7t)
        (fxrotate-bit-field . g$5962$6Dw7t)
        (fxreverse-bit-field . g$5963$6Dw7t)
        (fxpositive? . g$5914$6Dw7t)
        (fxodd? . g$5934$6Dw7t)
        (fxnot . g$5868$6Dw7t)
        (fxnegative? . g$5919$6Dw7t)
        (fxmod0 . g$5898$6Dw7t)
        (fxmod . g$5897$6Dw7t)
        (fxmin . g$5936$6Dw7t)
        (fxmax . g$5935$6Dw7t)
        (fxlength . g$5865$6Dw7t)
        (fxior . g$5886$6Dw7t)
        (fxif . g$5944$6Dw7t)
        (fxfirst-bit-set . g$5866$6Dw7t)
        (fxeven? . g$5929$6Dw7t)
        (fxdiv0-and-mod0 . g$5909$6Dw7t)
        (fxdiv0 . g$5904$6Dw7t)
        (fxdiv-and-mod . g$5899$6Dw7t)
        (fxdiv . g$5892$6Dw7t)
        (fxcopy-bit-field . g$5959$6Dw7t)
        (fxcopy-bit . g$5949$6Dw7t)
        (fxbit-set? . g$5867$6Dw7t)
        (fxbit-field . g$5954$6Dw7t)
        (fxbit-count . g$5860$6Dw7t)
        (fxarithmetic-shift-right . g$5961$6Dw7t)
        (fxarithmetic-shift-left . g$5960$6Dw7t)
        (fxarithmetic-shift . g$5855$6Dw7t)
        (fxand . g$5885$6Dw7t)
        (fx>? . g$5877$6Dw7t)
        (fx>=? . g$5878$6Dw7t)
        (fx=? . g$5874$6Dw7t)
        (fx<? . g$5875$6Dw7t)
        (fx<=? . g$5876$6Dw7t)
        (fx-/carry . g$5938$6Dw7t)
        (fx- . g$5849$6Dw7t)
        (fx+/carry . g$5939$6Dw7t)
        (fx+ . g$5847$6Dw7t)
        (fx*/carry . g$5937$6Dw7t)
        (fx* . g$5848$6Dw7t)
        (greatest-fixnum . g$5818$6Dw7t)
        (least-fixnum . g$5819$6Dw7t)
        (fixnum-width . g$6996$6Dw7t)
        (fixnum? . g$6994$6Dw7t)
        (bitwise-rotate-bit-field . g$8255$6Dw7t)
        (bitwise-reverse-bit-field . g$8256$6Dw7t)
        (bitwise-length . g$8245$6Dw7t)
        (bitwise-if . g$8248$6Dw7t)
        (bitwise-first-bit-set . g$8246$6Dw7t)
        (bitwise-copy-bit-field . g$8251$6Dw7t)
        (bitwise-copy-bit . g$8249$6Dw7t)
        (bitwise-bit-set? . g$8247$6Dw7t)
        (bitwise-bit-field . g$8250$6Dw7t)
        (bitwise-bit-count . g$8244$6Dw7t)
        (bitwise-xor . g$8243$6Dw7t)
        (bitwise-ior . g$8242$6Dw7t)
        (bitwise-and . g$8241$6Dw7t)
        (bitwise-not . g$8240$6Dw7t)
        (bitwise-arithmetic-shift-right . g$8254$6Dw7t)
        (bitwise-arithmetic-shift-left . g$8253$6Dw7t)
        (bitwise-arithmetic-shift . g$8252$6Dw7t)
        (zero? . g$7736$6Dw7t)
        (vector? . g$6989$6Dw7t)
        (vector-set! . g$7021$6Dw7t)
        (vector-ref . g$7020$6Dw7t)
        (vector-map . g$7088$6Dw7t)
        (vector-length . g$7023$6Dw7t)
        (vector-for-each . g$7089$6Dw7t)
        (vector-fill! . g$7024$6Dw7t)
        (vector->list . g$7025$6Dw7t)
        (vector . g$13900$6Dw7t)
        (values . g$13899$6Dw7t)
        (truncate . g$7788$6Dw7t)
        (tan . g$7780$6Dw7t)
        (symbol? . g$6991$6Dw7t)
        (symbol=? . g$7073$6Dw7t)
        (symbol->string . g$7011$6Dw7t)
        (substring . g$7008$6Dw7t)
        (string? . g$6987$6Dw7t)
        (string>? . g$7070$6Dw7t)
        (string>=? . g$7072$6Dw7t)
        (string=? . g$7068$6Dw7t)
        (string<? . g$7069$6Dw7t)
        (string<=? . g$7071$6Dw7t)
        (string-ref . g$7000$6Dw7t)
        (string-length . g$7003$6Dw7t)
        (string-for-each . g$7090$6Dw7t)
        (string-copy . g$7007$6Dw7t)
        (string-append . g$7009$6Dw7t)
        (string->symbol . g$7012$6Dw7t)
        (string->number . g$13898$6Dw7t)
        (string->list . g$7006$6Dw7t)
        (string . g$7005$6Dw7t)
        (sqrt . g$7790$6Dw7t)
        (sin . g$7774$6Dw7t)
        (round . g$7789$6Dw7t)
        (reverse . g$7027$6Dw7t)
        (real? . g$7730$6Dw7t)
        (real-valued? . g$7733$6Dw7t)
        (real-part . g$7767$6Dw7t)
        (rationalize . g$7085$6Dw7t)
        (rational? . g$7731$6Dw7t)
        (rational-valued? . g$7734$6Dw7t)
        (procedure? . g$6993$6Dw7t)
        (positive? . g$7737$6Dw7t)
        (pair? . g$13897$6Dw7t)
        (odd? . g$7057$6Dw7t)
        (numerator . g$7765$6Dw7t)
        (number? . g$7723$6Dw7t)
        (number->string . g$7744$6Dw7t)
        (null? . g$13896$6Dw7t)
        (not . g$13895$6Dw7t)
        (negative? . g$7738$6Dw7t)
        (nan? . g$7724$6Dw7t)
        (min . g$7059$6Dw7t)
        (max . g$7058$6Dw7t)
        (map . g$6815$6Dw7t)
        (make-vector . g$7022$6Dw7t)
        (make-string . g$6999$6Dw7t)
        (make-rectangular . g$7760$6Dw7t)
        (make-polar . g$7761$6Dw7t)
        (magnitude . g$7763$6Dw7t)
        (log . g$7783$6Dw7t)
        (list? . g$6810$6Dw7t)
        (list-tail . g$6791$6Dw7t)
        (list-ref . g$6792$6Dw7t)
        (list->vector . g$7018$6Dw7t)
        (list->string . g$7019$6Dw7t)
        (list . g$13894$6Dw7t)
        (length . g$6812$6Dw7t)
        (lcm . g$7061$6Dw7t)
        (integer? . g$7732$6Dw7t)
        (integer-valued? . g$7735$6Dw7t)
        (integer->char . g$6998$6Dw7t)
        (infinite? . g$7726$6Dw7t)
        (inexact? . g$7728$6Dw7t)
        (inexact . g$7739$6Dw7t)
        (imag-part . g$7768$6Dw7t)
        (gcd . g$7060$6Dw7t)
        (for-each . g$6816$6Dw7t)
        (floor . g$7786$6Dw7t)
        (finite? . g$7725$6Dw7t)
        (expt . g$7792$6Dw7t)
        (exp . g$7773$6Dw7t)
        (exact? . g$7727$6Dw7t)
        (exact-integer-sqrt . g$7791$6Dw7t)
        (exact . g$7740$6Dw7t)
        (even? . g$7056$6Dw7t)
        (error . g$5586$6Dw7t)
        (eqv? . g$13893$6Dw7t)
        (equal? . g$9203$6Dw7t)
        (eq? . g$13892$6Dw7t)
        (dynamic-wind . g$13891$6Dw7t)
        (div0-and-mod0 . g$7017$6Dw7t)
        (mod0 . g$7015$6Dw7t)
        (div0 . g$7013$6Dw7t)
        (div-and-mod . g$7016$6Dw7t)
        (mod . g$7014$6Dw7t)
        (div . g$7784$6Dw7t)
        (denominator . g$7766$6Dw7t)
        (cos . g$7777$6Dw7t)
        (cons . g$13890$6Dw7t)
        (complex? . g$7729$6Dw7t)
        (char? . g$6988$6Dw7t)
        (char>? . g$7082$6Dw7t)
        (char>=? . g$7084$6Dw7t)
        (char=? . g$7080$6Dw7t)
        (char<? . g$7081$6Dw7t)
        (char<=? . g$7083$6Dw7t)
        (char->integer . g$6997$6Dw7t)
        (ceiling . g$7787$6Dw7t)
        (call-with-values . g$13889$6Dw7t)
        (call/cc . g$13888$6Dw7t)
        (call-with-current-continuation . g$13887$6Dw7t)
        (cddddr . g$7055$6Dw7t)
        (cdddar . g$7054$6Dw7t)
        (cddadr . g$7053$6Dw7t)
        (cddaar . g$7052$6Dw7t)
        (cdaddr . g$7051$6Dw7t)
        (cdadar . g$7050$6Dw7t)
        (cdaadr . g$7049$6Dw7t)
        (cdaaar . g$7048$6Dw7t)
        (cadddr . g$7047$6Dw7t)
        (caddar . g$7046$6Dw7t)
        (cadadr . g$7045$6Dw7t)
        (cadaar . g$7044$6Dw7t)
        (caaddr . g$7043$6Dw7t)
        (caadar . g$7042$6Dw7t)
        (caaadr . g$7041$6Dw7t)
        (caaaar . g$7040$6Dw7t)
        (cdddr . g$7039$6Dw7t)
        (cddar . g$7038$6Dw7t)
        (cdadr . g$7037$6Dw7t)
        (cdaar . g$7036$6Dw7t)
        (caddr . g$7035$6Dw7t)
        (cadar . g$7034$6Dw7t)
        (caadr . g$7033$6Dw7t)
        (caaar . g$7032$6Dw7t)
        (cddr . g$7031$6Dw7t)
        (cdar . g$7030$6Dw7t)
        (cadr . g$7029$6Dw7t)
        (caar . g$7028$6Dw7t)
        (cdr . g$13886$6Dw7t)
        (car . g$13885$6Dw7t)
        (boolean? . g$6992$6Dw7t)
        (boolean=? . g$7074$6Dw7t)
        (atan . g$7782$6Dw7t)
        (assertion-violation . g$5585$6Dw7t)
        (asin . g$7775$6Dw7t)
        (apply . g$13884$6Dw7t)
        (append . g$6821$6Dw7t)
        (angle . g$7762$6Dw7t)
        (acos . g$7778$6Dw7t)
        (abs . g$7785$6Dw7t)
        (/ . g$13883$6Dw7t)
        (* . g$13882$6Dw7t)
        (- . g$13881$6Dw7t)
        (+ . g$13880$6Dw7t)
        (>= . g$7759$6Dw7t)
        (> . g$7758$6Dw7t)
        (= . g$7755$6Dw7t)
        (<= . g$7757$6Dw7t)
        (< . g$7756$6Dw7t)
        (&no-nans . g$13803$6Dw7t)
        (&no-infinities . g$13802$6Dw7t)
        (&i/o-encoding . g$13801$6Dw7t)
        (&i/o-decoding . g$13800$6Dw7t)
        (&i/o-port . g$13799$6Dw7t)
        (&i/o-file-does-not-exist . g$13798$6Dw7t)
        (&i/o-file-already-exists . g$13797$6Dw7t)
        (&i/o-file-is-read-only . g$13796$6Dw7t)
        (&i/o-file-protection . g$13795$6Dw7t)
        (&i/o-filename . g$13794$6Dw7t)
        (&i/o-invalid-position . g$13793$6Dw7t)
        (&i/o-write . g$13792$6Dw7t)
        (&i/o-read . g$13791$6Dw7t)
        (&i/o . g$13790$6Dw7t)
        (&non-continuable . g$13789$6Dw7t)
        (&undefined . g$13788$6Dw7t)
        (&syntax . g$13787$6Dw7t)
        (&lexical . g$13786$6Dw7t)
        (&implementation-restriction . g$13785$6Dw7t)
        (&who . g$13784$6Dw7t)
        (&irritants . g$13783$6Dw7t)
        (&assertion . g$13782$6Dw7t)
        (&violation . g$13781$6Dw7t)
        (&error . g$13780$6Dw7t)
        (&serious . g$13779$6Dw7t)
        (&warning . g$13778$6Dw7t)
        (&message . g$13777$6Dw7t)
        (&condition . g$13776$6Dw7t)
        (define-condition-type . g$13775$6Dw7t)
        (define-enumeration . g$13774$6Dw7t)
        (define-record-type . g$13773$6Dw7t)
        (parent-rtd . g$13772$6Dw7t)
        (nongenerative . g$13771$6Dw7t)
        (opaque . g$13770$6Dw7t)
        (sealed . g$13769$6Dw7t)
        (protocol . g$13768$6Dw7t)
        (parent . g$13767$6Dw7t)
        (immutable . g$13766$6Dw7t)
        (mutable . g$13765$6Dw7t)
        (fields . g$13764$6Dw7t)
        (error-handling-mode . g$13763$6Dw7t)
        (file-options . g$13762$6Dw7t)
        (buffer-mode . g$13761$6Dw7t)
        (eol-style . g$13760$6Dw7t)
        (guard . g$13759$6Dw7t)
        (unsyntax-splicing . g$13753$6Dw7t)
        (unsyntax . g$13752$6Dw7t)
        (unquote-splicing . g$13751$6Dw7t)
        (unquote . g$13750$6Dw7t)
        (_ . g$13749$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t)
        (... . g$13746$6Dw7t)
        (assert . g$13745$6Dw7t)
        (endianness . g$13744$6Dw7t)
        (or . g$13741$6Dw7t)
        (and . g$13740$6Dw7t)
        (do . g$13739$6Dw7t)
        (cond . g$13738$6Dw7t)
        (let* . g$13737$6Dw7t)
        (let . g$13736$6Dw7t)
        (identifier-syntax . g$13735$6Dw7t)
        (with-syntax . g$13734$6Dw7t)
        (quasisyntax . g$13733$6Dw7t)
        (quasiquote . g$13732$6Dw7t)
        (syntax-rules . g$13731$6Dw7t)
        (let-values . g$13727$6Dw7t)
        (let*-values . g$13726$6Dw7t)
        (record-constructor-descriptor . g$13725$6Dw7t)
        (record-type-descriptor . g$13724$6Dw7t)
        (case . g$13722$6Dw7t)
        (unless . g$13720$6Dw7t)
        (when . g$13719$6Dw7t)
        (if . g$13718$6Dw7t)
        (letrec* . g$13717$6Dw7t)
        (letrec . g$13716$6Dw7t)
        (case-lambda . g$13714$6Dw7t)
        (lambda . g$13713$6Dw7t)
        (syntax . g$13712$6Dw7t)
        (syntax-case . g$13711$6Dw7t)
        (quote . g$13710$6Dw7t)
        (letrec-syntax . g$13708$6Dw7t)
        (let-syntax . g$13707$6Dw7t)
        (set! . g$13706$6Dw7t)
        (begin . g$13702$6Dw7t)
        (define-syntax . g$13700$6Dw7t)
        (define . g$13699$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14050$6Dw7t
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$10597$6Dw7t)
        (quotient . g$8056$6Dw7t)
        (null-environment . g$10596$6Dw7t)
        (remainder . g$8057$6Dw7t)
        (modulo . g$8058$6Dw7t)
        (inexact->exact . g$8053$6Dw7t)
        (force . g$8060$6Dw7t)
        (exact->inexact . g$8054$6Dw7t)
        (delay . g$13743$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14051$6Dw7t
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$13739$6Dw7t)
        (unless . g$13720$6Dw7t)
        (when . g$13719$6Dw7t)
        (case-lambda . g$13714$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14052$6Dw7t
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$10599$6Dw7t) (environment . g$10595$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14053$6Dw7t
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$8045$6Dw7t) (set-car! . g$8044$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14054$6Dw7t
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$7002$6Dw7t) (string-set! . g$7001$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14055$6Dw7t
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$13909$6Dw7t) (command-line . g$13640$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14056$6Dw7t
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$10298$6Dw7t)
        (identifier? . g$10619$6Dw7t)
        (generate-temporaries . g$10607$6Dw7t)
        (free-identifier=? . g$10608$6Dw7t)
        (syntax->datum . g$10621$6Dw7t)
        (datum->syntax . g$10620$6Dw7t)
        (bound-identifier=? . g$10609$6Dw7t)
        (syntax-violation . g$10618$6Dw7t)
        (unsyntax-splicing . g$13753$6Dw7t)
        (unsyntax . g$13752$6Dw7t)
        (_ . g$13749$6Dw7t)
        (... . g$13746$6Dw7t)
        (with-syntax . g$13734$6Dw7t)
        (quasisyntax . g$13733$6Dw7t)
        (syntax . g$13712$6Dw7t)
        (syntax-case . g$13711$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14057$6Dw7t
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$7370$6Dw7t)
        (file-exists? . g$7369$6Dw7t)
        (make-i/o-write-error . g$5428$6Dw7t)
        (make-i/o-read-error . g$5415$6Dw7t)
        (make-i/o-port-error . g$5523$6Dw7t)
        (make-i/o-invalid-position-error . g$5441$6Dw7t)
        (make-i/o-filename-error . g$5456$6Dw7t)
        (make-i/o-file-protection-error . g$5471$6Dw7t)
        (make-i/o-file-is-read-only-error . g$5484$6Dw7t)
        (make-i/o-file-does-not-exist-error . g$5510$6Dw7t)
        (make-i/o-file-already-exists-error . g$5497$6Dw7t)
        (make-i/o-error . g$5402$6Dw7t)
        (i/o-write-error? . g$5429$6Dw7t)
        (i/o-read-error? . g$5416$6Dw7t)
        (i/o-port-error? . g$5525$6Dw7t)
        (i/o-invalid-position-error? . g$5443$6Dw7t)
        (i/o-error-position . g$5444$6Dw7t)
        (i/o-filename-error? . g$5458$6Dw7t)
        (i/o-file-protection-error? . g$5472$6Dw7t)
        (i/o-file-is-read-only-error? . g$5485$6Dw7t)
        (i/o-file-does-not-exist-error? . g$5511$6Dw7t)
        (i/o-file-already-exists-error? . g$5498$6Dw7t)
        (i/o-error? . g$5403$6Dw7t)
        (i/o-error-port . g$5526$6Dw7t)
        (i/o-error-filename . g$5459$6Dw7t)
        (&i/o-port . g$13799$6Dw7t)
        (&i/o-file-does-not-exist . g$13798$6Dw7t)
        (&i/o-file-already-exists . g$13797$6Dw7t)
        (&i/o-file-is-read-only . g$13796$6Dw7t)
        (&i/o-file-protection . g$13795$6Dw7t)
        (&i/o-filename . g$13794$6Dw7t)
        (&i/o-invalid-position . g$13793$6Dw7t)
        (&i/o-write . g$13792$6Dw7t)
        (&i/o-read . g$13791$6Dw7t)
        (&i/o . g$13790$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14058$6Dw7t
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$13983$6Dw7t)
        (vector-sort . g$8078$6Dw7t)
        (list-sort . g$8077$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14059$6Dw7t
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$7736$6Dw7t)
        (vector? . g$6989$6Dw7t)
        (vector-set! . g$7021$6Dw7t)
        (vector-ref . g$7020$6Dw7t)
        (vector-map . g$7088$6Dw7t)
        (vector-length . g$7023$6Dw7t)
        (vector-for-each . g$7089$6Dw7t)
        (vector-fill! . g$7024$6Dw7t)
        (vector->list . g$7025$6Dw7t)
        (vector . g$13900$6Dw7t)
        (values . g$13899$6Dw7t)
        (truncate . g$7788$6Dw7t)
        (tan . g$7780$6Dw7t)
        (symbol? . g$6991$6Dw7t)
        (symbol=? . g$7073$6Dw7t)
        (symbol->string . g$7011$6Dw7t)
        (substring . g$7008$6Dw7t)
        (string? . g$6987$6Dw7t)
        (string>? . g$7070$6Dw7t)
        (string>=? . g$7072$6Dw7t)
        (string=? . g$7068$6Dw7t)
        (string<? . g$7069$6Dw7t)
        (string<=? . g$7071$6Dw7t)
        (string-ref . g$7000$6Dw7t)
        (string-length . g$7003$6Dw7t)
        (string-for-each . g$7090$6Dw7t)
        (string-copy . g$7007$6Dw7t)
        (string-append . g$7009$6Dw7t)
        (string->symbol . g$7012$6Dw7t)
        (string->number . g$13898$6Dw7t)
        (string->list . g$7006$6Dw7t)
        (string . g$7005$6Dw7t)
        (sqrt . g$7790$6Dw7t)
        (sin . g$7774$6Dw7t)
        (round . g$7789$6Dw7t)
        (reverse . g$7027$6Dw7t)
        (real? . g$7730$6Dw7t)
        (real-valued? . g$7733$6Dw7t)
        (real-part . g$7767$6Dw7t)
        (rationalize . g$7085$6Dw7t)
        (rational? . g$7731$6Dw7t)
        (rational-valued? . g$7734$6Dw7t)
        (procedure? . g$6993$6Dw7t)
        (positive? . g$7737$6Dw7t)
        (pair? . g$13897$6Dw7t)
        (odd? . g$7057$6Dw7t)
        (numerator . g$7765$6Dw7t)
        (number? . g$7723$6Dw7t)
        (number->string . g$7744$6Dw7t)
        (null? . g$13896$6Dw7t)
        (not . g$13895$6Dw7t)
        (negative? . g$7738$6Dw7t)
        (nan? . g$7724$6Dw7t)
        (min . g$7059$6Dw7t)
        (max . g$7058$6Dw7t)
        (map . g$6815$6Dw7t)
        (make-vector . g$7022$6Dw7t)
        (make-string . g$6999$6Dw7t)
        (make-rectangular . g$7760$6Dw7t)
        (make-polar . g$7761$6Dw7t)
        (magnitude . g$7763$6Dw7t)
        (log . g$7783$6Dw7t)
        (list? . g$6810$6Dw7t)
        (list-tail . g$6791$6Dw7t)
        (list-ref . g$6792$6Dw7t)
        (list->vector . g$7018$6Dw7t)
        (list->string . g$7019$6Dw7t)
        (list . g$13894$6Dw7t)
        (length . g$6812$6Dw7t)
        (lcm . g$7061$6Dw7t)
        (integer? . g$7732$6Dw7t)
        (integer-valued? . g$7735$6Dw7t)
        (integer->char . g$6998$6Dw7t)
        (infinite? . g$7726$6Dw7t)
        (inexact? . g$7728$6Dw7t)
        (inexact . g$7739$6Dw7t)
        (imag-part . g$7768$6Dw7t)
        (gcd . g$7060$6Dw7t)
        (for-each . g$6816$6Dw7t)
        (floor . g$7786$6Dw7t)
        (finite? . g$7725$6Dw7t)
        (expt . g$7792$6Dw7t)
        (exp . g$7773$6Dw7t)
        (exact? . g$7727$6Dw7t)
        (exact-integer-sqrt . g$7791$6Dw7t)
        (exact . g$7740$6Dw7t)
        (even? . g$7056$6Dw7t)
        (error . g$5586$6Dw7t)
        (eqv? . g$13893$6Dw7t)
        (equal? . g$9203$6Dw7t)
        (eq? . g$13892$6Dw7t)
        (dynamic-wind . g$13891$6Dw7t)
        (div0-and-mod0 . g$7017$6Dw7t)
        (mod0 . g$7015$6Dw7t)
        (div0 . g$7013$6Dw7t)
        (div-and-mod . g$7016$6Dw7t)
        (mod . g$7014$6Dw7t)
        (div . g$7784$6Dw7t)
        (denominator . g$7766$6Dw7t)
        (cos . g$7777$6Dw7t)
        (cons . g$13890$6Dw7t)
        (complex? . g$7729$6Dw7t)
        (char? . g$6988$6Dw7t)
        (char>? . g$7082$6Dw7t)
        (char>=? . g$7084$6Dw7t)
        (char=? . g$7080$6Dw7t)
        (char<? . g$7081$6Dw7t)
        (char<=? . g$7083$6Dw7t)
        (char->integer . g$6997$6Dw7t)
        (ceiling . g$7787$6Dw7t)
        (call-with-values . g$13889$6Dw7t)
        (call/cc . g$13888$6Dw7t)
        (call-with-current-continuation . g$13887$6Dw7t)
        (cddddr . g$7055$6Dw7t)
        (cdddar . g$7054$6Dw7t)
        (cddadr . g$7053$6Dw7t)
        (cddaar . g$7052$6Dw7t)
        (cdaddr . g$7051$6Dw7t)
        (cdadar . g$7050$6Dw7t)
        (cdaadr . g$7049$6Dw7t)
        (cdaaar . g$7048$6Dw7t)
        (cadddr . g$7047$6Dw7t)
        (caddar . g$7046$6Dw7t)
        (cadadr . g$7045$6Dw7t)
        (cadaar . g$7044$6Dw7t)
        (caaddr . g$7043$6Dw7t)
        (caadar . g$7042$6Dw7t)
        (caaadr . g$7041$6Dw7t)
        (caaaar . g$7040$6Dw7t)
        (cdddr . g$7039$6Dw7t)
        (cddar . g$7038$6Dw7t)
        (cdadr . g$7037$6Dw7t)
        (cdaar . g$7036$6Dw7t)
        (caddr . g$7035$6Dw7t)
        (cadar . g$7034$6Dw7t)
        (caadr . g$7033$6Dw7t)
        (caaar . g$7032$6Dw7t)
        (cddr . g$7031$6Dw7t)
        (cdar . g$7030$6Dw7t)
        (cadr . g$7029$6Dw7t)
        (caar . g$7028$6Dw7t)
        (cdr . g$13886$6Dw7t)
        (car . g$13885$6Dw7t)
        (boolean? . g$6992$6Dw7t)
        (boolean=? . g$7074$6Dw7t)
        (atan . g$7782$6Dw7t)
        (assertion-violation . g$5585$6Dw7t)
        (asin . g$7775$6Dw7t)
        (apply . g$13884$6Dw7t)
        (append . g$6821$6Dw7t)
        (angle . g$7762$6Dw7t)
        (acos . g$7778$6Dw7t)
        (abs . g$7785$6Dw7t)
        (/ . g$13883$6Dw7t)
        (* . g$13882$6Dw7t)
        (- . g$13881$6Dw7t)
        (+ . g$13880$6Dw7t)
        (>= . g$7759$6Dw7t)
        (> . g$7758$6Dw7t)
        (= . g$7755$6Dw7t)
        (<= . g$7757$6Dw7t)
        (< . g$7756$6Dw7t)
        (unquote-splicing . g$13751$6Dw7t)
        (unquote . g$13750$6Dw7t)
        (_ . g$13749$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t)
        (... . g$13746$6Dw7t)
        (assert . g$13745$6Dw7t)
        (or . g$13741$6Dw7t)
        (and . g$13740$6Dw7t)
        (cond . g$13738$6Dw7t)
        (let* . g$13737$6Dw7t)
        (let . g$13736$6Dw7t)
        (identifier-syntax . g$13735$6Dw7t)
        (quasiquote . g$13732$6Dw7t)
        (syntax-rules . g$13731$6Dw7t)
        (let-values . g$13727$6Dw7t)
        (let*-values . g$13726$6Dw7t)
        (case . g$13722$6Dw7t)
        (if . g$13718$6Dw7t)
        (letrec* . g$13717$6Dw7t)
        (letrec . g$13716$6Dw7t)
        (lambda . g$13713$6Dw7t)
        (quote . g$13710$6Dw7t)
        (letrec-syntax . g$13708$6Dw7t)
        (let-syntax . g$13707$6Dw7t)
        (set! . g$13706$6Dw7t)
        (begin . g$13702$6Dw7t)
        (define-syntax . g$13700$6Dw7t)
        (define . g$13699$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14060$6Dw7t
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6824$6Dw7t)
        (remv . g$6825$6Dw7t)
        (remp . g$6797$6Dw7t)
        (remq . g$6826$6Dw7t)
        (partition . g$6796$6Dw7t)
        (memv . g$6804$6Dw7t)
        (memq . g$6803$6Dw7t)
        (memp . g$6806$6Dw7t)
        (member . g$6805$6Dw7t)
        (exists . g$6814$6Dw7t)
        (for-all . g$6813$6Dw7t)
        (fold-right . g$6823$6Dw7t)
        (fold-left . g$6822$6Dw7t)
        (find . g$6795$6Dw7t)
        (filter . g$6798$6Dw7t)
        (cons* . g$6817$6Dw7t)
        (assv . g$6800$6Dw7t)
        (assq . g$6799$6Dw7t)
        (assp . g$6802$6Dw7t)
        (assoc . g$6801$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14061$6Dw7t
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$9010$6Dw7t)
        (call-with-input-file . g$9009$6Dw7t)
        (write-char . g$9001$6Dw7t)
        (write . g$13974$6Dw7t)
        (with-output-to-file . g$9008$6Dw7t)
        (with-input-from-file . g$9007$6Dw7t)
        (read-char . g$9000$6Dw7t)
        (read . g$13973$6Dw7t)
        (peek-char . g$8999$6Dw7t)
        (open-output-file . g$13972$6Dw7t)
        (open-input-file . g$13971$6Dw7t)
        (newline . g$9011$6Dw7t)
        (display . g$13970$6Dw7t)
        (close-output-port . g$13969$6Dw7t)
        (close-input-port . g$13968$6Dw7t)
        (eof-object? . g$13967$6Dw7t)
        (eof-object . g$13966$6Dw7t)
        (current-error-port . g$13965$6Dw7t)
        (current-output-port . g$13964$6Dw7t)
        (current-input-port . g$13963$6Dw7t)
        (output-port? . g$13962$6Dw7t)
        (input-port? . g$13961$6Dw7t)
        (make-i/o-write-error . g$5428$6Dw7t)
        (make-i/o-read-error . g$5415$6Dw7t)
        (make-i/o-port-error . g$5523$6Dw7t)
        (make-i/o-invalid-position-error . g$5441$6Dw7t)
        (make-i/o-filename-error . g$5456$6Dw7t)
        (make-i/o-file-protection-error . g$5471$6Dw7t)
        (make-i/o-file-is-read-only-error . g$5484$6Dw7t)
        (make-i/o-file-does-not-exist-error . g$5510$6Dw7t)
        (make-i/o-file-already-exists-error . g$5497$6Dw7t)
        (make-i/o-error . g$5402$6Dw7t)
        (i/o-write-error? . g$5429$6Dw7t)
        (i/o-read-error? . g$5416$6Dw7t)
        (i/o-port-error? . g$5525$6Dw7t)
        (i/o-invalid-position-error? . g$5443$6Dw7t)
        (i/o-error-position . g$5444$6Dw7t)
        (i/o-filename-error? . g$5458$6Dw7t)
        (i/o-file-protection-error? . g$5472$6Dw7t)
        (i/o-file-is-read-only-error? . g$5485$6Dw7t)
        (i/o-file-does-not-exist-error? . g$5511$6Dw7t)
        (i/o-file-already-exists-error? . g$5498$6Dw7t)
        (i/o-error? . g$5403$6Dw7t)
        (i/o-error-port . g$5526$6Dw7t)
        (i/o-error-filename . g$5459$6Dw7t)
        (&i/o-port . g$13799$6Dw7t)
        (&i/o-file-does-not-exist . g$13798$6Dw7t)
        (&i/o-file-already-exists . g$13797$6Dw7t)
        (&i/o-file-is-read-only . g$13796$6Dw7t)
        (&i/o-file-protection . g$13795$6Dw7t)
        (&i/o-filename . g$13794$6Dw7t)
        (&i/o-invalid-position . g$13793$6Dw7t)
        (&i/o-write . g$13792$6Dw7t)
        (&i/o-read . g$13791$6Dw7t)
        (&i/o . g$13790$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14062$6Dw7t
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$7389$6Dw7t)
        (utf32->string . g$7411$6Dw7t)
        (utf16->string . g$7410$6Dw7t)
        (utf8->string . g$7408$6Dw7t)
        (uint-list->bytevector . g$7412$6Dw7t)
        (u8-list->bytevector . g$7400$6Dw7t)
        (string->utf8 . g$7405$6Dw7t)
        (string->utf32 . g$7407$6Dw7t)
        (string->utf16 . g$7406$6Dw7t)
        (sint-list->bytevector . g$7413$6Dw7t)
        (native-endianness . g$7376$6Dw7t)
        (bytevector? . g$6990$6Dw7t)
        (bytevector=? . g$7391$6Dw7t)
        (bytevector-uint-set! . g$7403$6Dw7t)
        (bytevector-uint-ref . g$7401$6Dw7t)
        (bytevector-u8-set! . g$7396$6Dw7t)
        (bytevector-u8-ref . g$7395$6Dw7t)
        (bytevector-u64-set! . g$7441$6Dw7t)
        (bytevector-u64-ref . g$7437$6Dw7t)
        (bytevector-u64-native-set! . g$7443$6Dw7t)
        (bytevector-u64-native-ref . g$7439$6Dw7t)
        (bytevector-u32-set! . g$7433$6Dw7t)
        (bytevector-u32-ref . g$7429$6Dw7t)
        (bytevector-u32-native-set! . g$7435$6Dw7t)
        (bytevector-u32-native-ref . g$7431$6Dw7t)
        (bytevector-u16-set! . g$7425$6Dw7t)
        (bytevector-u16-ref . g$7421$6Dw7t)
        (bytevector-u16-native-set! . g$7427$6Dw7t)
        (bytevector-u16-native-ref . g$7423$6Dw7t)
        (bytevector-sint-set! . g$7404$6Dw7t)
        (bytevector-sint-ref . g$7402$6Dw7t)
        (bytevector-s8-set! . g$7398$6Dw7t)
        (bytevector-s8-ref . g$7397$6Dw7t)
        (bytevector-s64-set! . g$7442$6Dw7t)
        (bytevector-s64-ref . g$7438$6Dw7t)
        (bytevector-s64-native-set! . g$7444$6Dw7t)
        (bytevector-s64-native-ref . g$7440$6Dw7t)
        (bytevector-s32-set! . g$7434$6Dw7t)
        (bytevector-s32-ref . g$7430$6Dw7t)
        (bytevector-s32-native-set! . g$7436$6Dw7t)
        (bytevector-s32-native-ref . g$7432$6Dw7t)
        (bytevector-s16-set! . g$7426$6Dw7t)
        (bytevector-s16-ref . g$7422$6Dw7t)
        (bytevector-s16-native-set! . g$7428$6Dw7t)
        (bytevector-s16-native-ref . g$7424$6Dw7t)
        (bytevector-length . g$7390$6Dw7t)
        (bytevector-ieee-single-set! . g$7419$6Dw7t)
        (bytevector-ieee-single-ref . g$7417$6Dw7t)
        (bytevector-ieee-single-native-set! . g$7447$6Dw7t)
        (bytevector-ieee-single-native-ref . g$7445$6Dw7t)
        (bytevector-ieee-double-set! . g$7420$6Dw7t)
        (bytevector-ieee-double-ref . g$7418$6Dw7t)
        (bytevector-ieee-double-native-set! . g$7448$6Dw7t)
        (bytevector-ieee-double-native-ref . g$7446$6Dw7t)
        (bytevector-fill! . g$7392$6Dw7t)
        (bytevector-copy! . g$7393$6Dw7t)
        (bytevector-copy . g$7394$6Dw7t)
        (bytevector->uint-list . g$7414$6Dw7t)
        (bytevector->u8-list . g$7399$6Dw7t)
        (bytevector->sint-list . g$7415$6Dw7t)
        (endianness . g$13744$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14063$6Dw7t
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$8149$6Dw7t)
        (string-titlecase . g$8137$6Dw7t)
        (string-normalize-nfkd . g$8158$6Dw7t)
        (string-normalize-nfkc . g$8157$6Dw7t)
        (string-normalize-nfd . g$8156$6Dw7t)
        (string-normalize-nfc . g$8155$6Dw7t)
        (string-foldcase . g$8138$6Dw7t)
        (string-downcase . g$14001$6Dw7t)
        (string-ci>? . g$8134$6Dw7t)
        (string-ci>=? . g$8136$6Dw7t)
        (string-ci=? . g$8132$6Dw7t)
        (string-ci<? . g$8133$6Dw7t)
        (string-ci<=? . g$8135$6Dw7t)
        (char-whitespace? . g$8114$6Dw7t)
        (char-upper-case? . g$8115$6Dw7t)
        (char-title-case? . g$8117$6Dw7t)
        (char-numeric? . g$8113$6Dw7t)
        (char-lower-case? . g$8116$6Dw7t)
        (char-general-category . g$8118$6Dw7t)
        (char-upcase . g$8108$6Dw7t)
        (char-titlecase . g$8110$6Dw7t)
        (char-foldcase . g$8111$6Dw7t)
        (char-downcase . g$8109$6Dw7t)
        (char-ci>? . g$8146$6Dw7t)
        (char-ci>=? . g$8148$6Dw7t)
        (char-ci=? . g$8144$6Dw7t)
        (char-ci<? . g$8145$6Dw7t)
        (char-ci<=? . g$8147$6Dw7t)
        (char-alphabetic? . g$8112$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14064$6Dw7t
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$13908$6Dw7t)
        (raise-continuable . g$13907$6Dw7t)
        (raise . g$13906$6Dw7t)
        (guard . g$13759$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14065$6Dw7t
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$8255$6Dw7t)
        (bitwise-reverse-bit-field . g$8256$6Dw7t)
        (bitwise-length . g$8245$6Dw7t)
        (bitwise-if . g$8248$6Dw7t)
        (bitwise-first-bit-set . g$8246$6Dw7t)
        (bitwise-copy-bit-field . g$8251$6Dw7t)
        (bitwise-copy-bit . g$8249$6Dw7t)
        (bitwise-bit-set? . g$8247$6Dw7t)
        (bitwise-bit-field . g$8250$6Dw7t)
        (bitwise-bit-count . g$8244$6Dw7t)
        (bitwise-xor . g$8243$6Dw7t)
        (bitwise-ior . g$8242$6Dw7t)
        (bitwise-and . g$8241$6Dw7t)
        (bitwise-not . g$8240$6Dw7t)
        (bitwise-arithmetic-shift-right . g$8254$6Dw7t)
        (bitwise-arithmetic-shift-left . g$8253$6Dw7t)
        (bitwise-arithmetic-shift . g$8252$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14066$6Dw7t
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$5924$6Dw7t)
        (fxxor . g$5887$6Dw7t)
        (fxrotate-bit-field . g$5962$6Dw7t)
        (fxreverse-bit-field . g$5963$6Dw7t)
        (fxpositive? . g$5914$6Dw7t)
        (fxodd? . g$5934$6Dw7t)
        (fxnot . g$5868$6Dw7t)
        (fxnegative? . g$5919$6Dw7t)
        (fxmod0 . g$5898$6Dw7t)
        (fxmod . g$5897$6Dw7t)
        (fxmin . g$5936$6Dw7t)
        (fxmax . g$5935$6Dw7t)
        (fxlength . g$5865$6Dw7t)
        (fxior . g$5886$6Dw7t)
        (fxif . g$5944$6Dw7t)
        (fxfirst-bit-set . g$5866$6Dw7t)
        (fxeven? . g$5929$6Dw7t)
        (fxdiv0-and-mod0 . g$5909$6Dw7t)
        (fxdiv0 . g$5904$6Dw7t)
        (fxdiv-and-mod . g$5899$6Dw7t)
        (fxdiv . g$5892$6Dw7t)
        (fxcopy-bit-field . g$5959$6Dw7t)
        (fxcopy-bit . g$5949$6Dw7t)
        (fxbit-set? . g$5867$6Dw7t)
        (fxbit-field . g$5954$6Dw7t)
        (fxbit-count . g$5860$6Dw7t)
        (fxarithmetic-shift-right . g$5961$6Dw7t)
        (fxarithmetic-shift-left . g$5960$6Dw7t)
        (fxarithmetic-shift . g$5855$6Dw7t)
        (fxand . g$5885$6Dw7t)
        (fx>? . g$5877$6Dw7t)
        (fx>=? . g$5878$6Dw7t)
        (fx=? . g$5874$6Dw7t)
        (fx<? . g$5875$6Dw7t)
        (fx<=? . g$5876$6Dw7t)
        (fx-/carry . g$5938$6Dw7t)
        (fx- . g$5849$6Dw7t)
        (fx+/carry . g$5939$6Dw7t)
        (fx+ . g$5847$6Dw7t)
        (fx*/carry . g$5937$6Dw7t)
        (fx* . g$5848$6Dw7t)
        (greatest-fixnum . g$5818$6Dw7t)
        (least-fixnum . g$5819$6Dw7t)
        (fixnum-width . g$6996$6Dw7t)
        (fixnum? . g$6994$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14067$6Dw7t
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$5580$6Dw7t)
        (no-infinities-violation? . g$5567$6Dw7t)
        (make-no-nans-violation . g$5579$6Dw7t)
        (make-no-infinities-violation . g$5566$6Dw7t)
        (real->flonum . g$7721$6Dw7t)
        (flzero? . g$8415$6Dw7t)
        (fltruncate . g$8410$6Dw7t)
        (fltan . g$8396$6Dw7t)
        (flsqrt . g$8401$6Dw7t)
        (flsin . g$8394$6Dw7t)
        (flround . g$8411$6Dw7t)
        (flpositive? . g$8413$6Dw7t)
        (flonum? . g$6995$6Dw7t)
        (flodd? . g$8417$6Dw7t)
        (flnumerator . g$8360$6Dw7t)
        (flnegative? . g$8414$6Dw7t)
        (flnan? . g$8393$6Dw7t)
        (flmod0 . g$8378$6Dw7t)
        (flmod . g$8377$6Dw7t)
        (flmin . g$8419$6Dw7t)
        (flmax . g$8418$6Dw7t)
        (fllog . g$8400$6Dw7t)
        (flinteger? . g$8386$6Dw7t)
        (flinfinite? . g$8392$6Dw7t)
        (flfloor . g$8409$6Dw7t)
        (flfinite? . g$8387$6Dw7t)
        (flexpt . g$8403$6Dw7t)
        (flexp . g$8402$6Dw7t)
        (fleven? . g$8416$6Dw7t)
        (fldiv0-and-mod0 . g$8385$6Dw7t)
        (fldiv0 . g$8372$6Dw7t)
        (fldiv-and-mod . g$8379$6Dw7t)
        (fldiv . g$8384$6Dw7t)
        (fldenominator . g$8359$6Dw7t)
        (flcos . g$8395$6Dw7t)
        (flceiling . g$8404$6Dw7t)
        (flatan . g$8399$6Dw7t)
        (flasin . g$8397$6Dw7t)
        (flacos . g$8398$6Dw7t)
        (flabs . g$8412$6Dw7t)
        (fl>? . g$8366$6Dw7t)
        (fl>=? . g$8367$6Dw7t)
        (fl=? . g$8363$6Dw7t)
        (fl<? . g$8364$6Dw7t)
        (fl<=? . g$8365$6Dw7t)
        (fl/ . g$8362$6Dw7t)
        (fl- . g$8361$6Dw7t)
        (fl+ . g$8357$6Dw7t)
        (fl* . g$8358$6Dw7t)
        (fixnum->flonum . g$7722$6Dw7t)
        (&no-nans . g$13803$6Dw7t)
        (&no-infinities . g$13802$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14068$6Dw7t
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$7340$6Dw7t)
        (string-ci-hash . g$7339$6Dw7t)
        (string-hash . g$7338$6Dw7t)
        (equal-hash . g$13982$6Dw7t)
        (hashtable-equivalence-function . g$13981$6Dw7t)
        (make-hashtable . g$13980$6Dw7t)
        (hashtable-hash-function . g$13979$6Dw7t)
        (make-eqv-hashtable . g$7330$6Dw7t)
        (make-eq-hashtable . g$7329$6Dw7t)
        (hashtable? . g$7328$6Dw7t)
        (hashtable-update! . g$7336$6Dw7t)
        (hashtable-size . g$7331$6Dw7t)
        (hashtable-set! . g$7333$6Dw7t)
        (hashtable-ref . g$7332$6Dw7t)
        (hashtable-mutable? . g$13978$6Dw7t)
        (hashtable-keys . g$13977$6Dw7t)
        (hashtable-entries . g$13976$6Dw7t)
        (hashtable-delete! . g$7334$6Dw7t)
        (hashtable-copy . g$13975$6Dw7t)
        (hashtable-contains? . g$7335$6Dw7t)
        (hashtable-clear! . g$7337$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14069$6Dw7t
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$13967$6Dw7t)
        (eof-object . g$13966$6Dw7t)
        (current-error-port . g$13965$6Dw7t)
        (current-output-port . g$13964$6Dw7t)
        (current-input-port . g$13963$6Dw7t)
        (output-port? . g$13962$6Dw7t)
        (input-port? . g$13961$6Dw7t)
        (utf-8-codec . g$13960$6Dw7t)
        (utf-16-codec . g$13959$6Dw7t)
        (transcoder-error-handling-mode . g$13958$6Dw7t)
        (transcoder-eol-style . g$13957$6Dw7t)
        (transcoder-codec . g$13956$6Dw7t)
        (transcoded-port . g$13955$6Dw7t)
        (textual-port? . g$13954$6Dw7t)
        (string->bytevector . g$13953$6Dw7t)
        (standard-output-port . g$8975$6Dw7t)
        (standard-input-port . g$8974$6Dw7t)
        (standard-error-port . g$8973$6Dw7t)
        (set-port-position! . g$13952$6Dw7t)
        (put-u8 . g$13951$6Dw7t)
        (put-string . g$13950$6Dw7t)
        (put-datum . g$8978$6Dw7t)
        (put-char . g$13949$6Dw7t)
        (put-bytevector . g$13948$6Dw7t)
        (port? . g$8983$6Dw7t)
        (port-transcoder . g$13947$6Dw7t)
        (port-position . g$13946$6Dw7t)
        (port-has-set-port-position!? . g$13945$6Dw7t)
        (port-has-port-position? . g$13944$6Dw7t)
        (port-eof? . g$13943$6Dw7t)
        (output-port-buffer-mode . g$13942$6Dw7t)
        (open-string-output-port . g$8982$6Dw7t)
        (open-string-input-port . g$13941$6Dw7t)
        (open-file-output-port . g$13940$6Dw7t)
        (open-file-input/output-port . g$13939$6Dw7t)
        (open-file-input-port . g$13938$6Dw7t)
        (open-bytevector-output-port . g$13937$6Dw7t)
        (open-bytevector-input-port . g$13936$6Dw7t)
        (native-transcoder . g$13935$6Dw7t)
        (native-eol-style . g$8976$6Dw7t)
        (make-transcoder . g$13934$6Dw7t)
        (latin-1-codec . g$13933$6Dw7t)
        (make-i/o-write-error . g$5428$6Dw7t)
        (make-i/o-read-error . g$5415$6Dw7t)
        (make-i/o-port-error . g$5523$6Dw7t)
        (make-i/o-invalid-position-error . g$5441$6Dw7t)
        (make-i/o-filename-error . g$5456$6Dw7t)
        (make-i/o-file-protection-error . g$5471$6Dw7t)
        (make-i/o-file-is-read-only-error . g$5484$6Dw7t)
        (make-i/o-file-does-not-exist-error . g$5510$6Dw7t)
        (make-i/o-file-already-exists-error . g$5497$6Dw7t)
        (make-i/o-error . g$5402$6Dw7t)
        (make-i/o-encoding-error . g$5551$6Dw7t)
        (make-i/o-decoding-error . g$5538$6Dw7t)
        (make-custom-textual-output-port . g$13932$6Dw7t)
        (make-custom-textual-input/output-port . g$13931$6Dw7t)
        (make-custom-textual-input-port . g$13930$6Dw7t)
        (make-custom-binary-output-port . g$13929$6Dw7t)
        (make-custom-binary-input/output-port . g$13928$6Dw7t)
        (make-custom-binary-input-port . g$13927$6Dw7t)
        (lookahead-u8 . g$13926$6Dw7t)
        (lookahead-char . g$13925$6Dw7t)
        (i/o-write-error? . g$5429$6Dw7t)
        (i/o-read-error? . g$5416$6Dw7t)
        (i/o-port-error? . g$5525$6Dw7t)
        (i/o-invalid-position-error? . g$5443$6Dw7t)
        (i/o-error-position . g$5444$6Dw7t)
        (i/o-filename-error? . g$5458$6Dw7t)
        (i/o-file-protection-error? . g$5472$6Dw7t)
        (i/o-file-is-read-only-error? . g$5485$6Dw7t)
        (i/o-file-does-not-exist-error? . g$5511$6Dw7t)
        (i/o-file-already-exists-error? . g$5498$6Dw7t)
        (i/o-error? . g$5403$6Dw7t)
        (i/o-error-port . g$5526$6Dw7t)
        (i/o-error-filename . g$5459$6Dw7t)
        (i/o-encoding-error? . g$5553$6Dw7t)
        (i/o-encoding-error-char . g$5554$6Dw7t)
        (i/o-decoding-error? . g$5539$6Dw7t)
        (get-u8 . g$13924$6Dw7t)
        (get-string-n! . g$13923$6Dw7t)
        (get-string-n . g$13922$6Dw7t)
        (get-string-all . g$13921$6Dw7t)
        (get-line . g$13920$6Dw7t)
        (get-datum . g$8979$6Dw7t)
        (get-char . g$13919$6Dw7t)
        (get-bytevector-some . g$13918$6Dw7t)
        (get-bytevector-n! . g$13917$6Dw7t)
        (get-bytevector-n . g$13916$6Dw7t)
        (get-bytevector-all . g$13915$6Dw7t)
        (flush-output-port . g$13914$6Dw7t)
        (close-port . g$13913$6Dw7t)
        (call-with-string-output-port . g$8984$6Dw7t)
        (call-with-port . g$8985$6Dw7t)
        (call-with-bytevector-output-port . g$13912$6Dw7t)
        (bytevector->string . g$13911$6Dw7t)
        (buffer-mode? . g$8977$6Dw7t)
        (binary-port? . g$13910$6Dw7t)
        (&i/o-encoding . g$13801$6Dw7t)
        (&i/o-decoding . g$13800$6Dw7t)
        (&i/o-port . g$13799$6Dw7t)
        (&i/o-file-does-not-exist . g$13798$6Dw7t)
        (&i/o-file-already-exists . g$13797$6Dw7t)
        (&i/o-file-is-read-only . g$13796$6Dw7t)
        (&i/o-file-protection . g$13795$6Dw7t)
        (&i/o-filename . g$13794$6Dw7t)
        (&i/o-invalid-position . g$13793$6Dw7t)
        (&i/o-write . g$13792$6Dw7t)
        (&i/o-read . g$13791$6Dw7t)
        (&i/o . g$13790$6Dw7t)
        (error-handling-mode . g$13763$6Dw7t)
        (file-options . g$13762$6Dw7t)
        (buffer-mode . g$13761$6Dw7t)
        (eol-style . g$13760$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14070$6Dw7t
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$9071$6Dw7t)
        (enum-set=? . g$9078$6Dw7t)
        (enum-set-universe . g$9072$6Dw7t)
        (enum-set-union . g$9079$6Dw7t)
        (enum-set-subset? . g$9077$6Dw7t)
        (enum-set-projection . g$9083$6Dw7t)
        (enum-set-member? . g$9076$6Dw7t)
        (enum-set-intersection . g$9080$6Dw7t)
        (enum-set-indexer . g$9073$6Dw7t)
        (enum-set-difference . g$9081$6Dw7t)
        (enum-set-constructor . g$9074$6Dw7t)
        (enum-set-complement . g$9082$6Dw7t)
        (enum-set->list . g$9075$6Dw7t)
        (define-enumeration . g$13774$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14071$6Dw7t
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$5290$6Dw7t)
        (warning? . g$5209$6Dw7t)
        (violation? . g$5248$6Dw7t)
        (undefined-violation? . g$5390$6Dw7t)
        (syntax-violation? . g$5375$6Dw7t)
        (syntax-violation-subform . g$5377$6Dw7t)
        (syntax-violation-form . g$5376$6Dw7t)
        (simple-conditions . g$13905$6Dw7t)
        (serious-condition? . g$5222$6Dw7t)
        (non-continuable-violation? . g$5334$6Dw7t)
        (message-condition? . g$5195$6Dw7t)
        (make-who-condition . g$5288$6Dw7t)
        (make-warning . g$5208$6Dw7t)
        (make-violation . g$5247$6Dw7t)
        (make-undefined-violation . g$5389$6Dw7t)
        (make-syntax-violation . g$5372$6Dw7t)
        (make-serious-condition . g$5221$6Dw7t)
        (make-non-continuable-violation . g$5333$6Dw7t)
        (make-message-condition . g$5193$6Dw7t)
        (make-lexical-violation . g$5359$6Dw7t)
        (make-irritants-condition . g$5273$6Dw7t)
        (make-implementation-restriction-violation . g$5346$6Dw7t)
        (make-error . g$5234$6Dw7t)
        (make-assertion-violation . g$5260$6Dw7t)
        (lexical-violation? . g$5360$6Dw7t)
        (irritants-condition? . g$5275$6Dw7t)
        (implementation-restriction-violation? . g$5347$6Dw7t)
        (error? . g$5235$6Dw7t)
        (condition-who . g$5291$6Dw7t)
        (condition-predicate . g$13904$6Dw7t)
        (condition-message . g$5196$6Dw7t)
        (condition-irritants . g$5276$6Dw7t)
        (condition-accessor . g$13903$6Dw7t)
        (condition . g$13902$6Dw7t)
        (assertion-violation? . g$5261$6Dw7t)
        (condition? . g$13901$6Dw7t)
        (&non-continuable . g$13789$6Dw7t)
        (&undefined . g$13788$6Dw7t)
        (&syntax . g$13787$6Dw7t)
        (&lexical . g$13786$6Dw7t)
        (&implementation-restriction . g$13785$6Dw7t)
        (&who . g$13784$6Dw7t)
        (&irritants . g$13783$6Dw7t)
        (&assertion . g$13782$6Dw7t)
        (&violation . g$13781$6Dw7t)
        (&error . g$13780$6Dw7t)
        (&serious . g$13779$6Dw7t)
        (&warning . g$13778$6Dw7t)
        (&message . g$13777$6Dw7t)
        (&condition . g$13776$6Dw7t)
        (define-condition-type . g$13775$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14072$6Dw7t
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$13993$6Dw7t)
        (record-type-uid . g$13992$6Dw7t)
        (record-type-sealed? . g$13991$6Dw7t)
        (record-type-parent . g$13990$6Dw7t)
        (record-type-opaque? . g$13989$6Dw7t)
        (record-type-name . g$13988$6Dw7t)
        (record-type-generative? . g$13987$6Dw7t)
        (record-type-field-names . g$13986$6Dw7t)
        (record-rtd . g$13985$6Dw7t)
        (record-field-mutable? . g$13984$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14073$6Dw7t
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$14000$6Dw7t)
        (record-predicate . g$13999$6Dw7t)
        (record-mutator . g$13998$6Dw7t)
        (record-constructor . g$13997$6Dw7t)
        (record-accessor . g$13996$6Dw7t)
        (make-record-type-descriptor . g$13995$6Dw7t)
        (make-record-constructor-descriptor . g$13994$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14074$6Dw7t
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$13773$6Dw7t)
        (parent-rtd . g$13772$6Dw7t)
        (nongenerative . g$13771$6Dw7t)
        (opaque . g$13770$6Dw7t)
        (sealed . g$13769$6Dw7t)
        (protocol . g$13768$6Dw7t)
        (parent . g$13767$6Dw7t)
        (immutable . g$13766$6Dw7t)
        (mutable . g$13765$6Dw7t)
        (fields . g$13764$6Dw7t)
        (record-constructor-descriptor . g$13725$6Dw7t)
        (record-type-descriptor . g$13724$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14075$6Dw7t
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$10494$6Dw7t)
        (&stacktrace-rcd . g$5323$6Dw7t)
        (&stacktrace-rtd . g$5322$6Dw7t)
        (&where-rcd . g$5308$6Dw7t)
        (&where-rtd . g$5307$6Dw7t)
        (&no-nans-rcd . g$5582$6Dw7t)
        (&no-nans-rtd . g$5581$6Dw7t)
        (&no-infinities-rcd . g$5569$6Dw7t)
        (&no-infinities-rtd . g$5568$6Dw7t)
        (&i/o-encoding-rcd . g$5556$6Dw7t)
        (&i/o-encoding-rtd . g$5555$6Dw7t)
        (&i/o-decoding-rcd . g$5541$6Dw7t)
        (&i/o-decoding-rtd . g$5540$6Dw7t)
        (&i/o-port-rcd . g$5528$6Dw7t)
        (&i/o-port-rtd . g$5527$6Dw7t)
        (&i/o-file-does-not-exist-rcd . g$5513$6Dw7t)
        (&i/o-file-does-not-exist-rtd . g$5512$6Dw7t)
        (&i/o-file-already-exists-rcd . g$5500$6Dw7t)
        (&i/o-file-already-exists-rtd . g$5499$6Dw7t)
        (&i/o-file-is-read-only-rcd . g$5487$6Dw7t)
        (&i/o-file-is-read-only-rtd . g$5486$6Dw7t)
        (&i/o-file-protection-rcd . g$5474$6Dw7t)
        (&i/o-file-protection-rtd . g$5473$6Dw7t)
        (&i/o-filename-rcd . g$5461$6Dw7t)
        (&i/o-filename-rtd . g$5460$6Dw7t)
        (&i/o-invalid-position-rcd . g$5446$6Dw7t)
        (&i/o-invalid-position-rtd . g$5445$6Dw7t)
        (&i/o-write-rcd . g$5431$6Dw7t)
        (&i/o-write-rtd . g$5430$6Dw7t)
        (&i/o-read-rcd . g$5418$6Dw7t)
        (&i/o-read-rtd . g$5417$6Dw7t)
        (&i/o-rcd . g$5405$6Dw7t)
        (&i/o-rtd . g$5404$6Dw7t)
        (&undefined-rcd . g$5392$6Dw7t)
        (&undefined-rtd . g$5391$6Dw7t)
        (&syntax-rcd . g$5379$6Dw7t)
        (&syntax-rtd . g$5378$6Dw7t)
        (&lexical-rcd . g$5362$6Dw7t)
        (&lexical-rtd . g$5361$6Dw7t)
        (&implementation-restriction-rcd . g$5349$6Dw7t)
        (&implementation-restriction-rtd . g$5348$6Dw7t)
        (&non-continuable-rcd . g$5336$6Dw7t)
        (&non-continuable-rtd . g$5335$6Dw7t)
        (&who-rcd . g$5293$6Dw7t)
        (&who-rtd . g$5292$6Dw7t)
        (&irritants-rcd . g$5278$6Dw7t)
        (&irritants-rtd . g$5277$6Dw7t)
        (&assertion-rcd . g$5263$6Dw7t)
        (&assertion-rtd . g$5262$6Dw7t)
        (&violation-rcd . g$5250$6Dw7t)
        (&violation-rtd . g$5249$6Dw7t)
        (&error-rcd . g$5237$6Dw7t)
        (&error-rtd . g$5236$6Dw7t)
        (&serious-rcd . g$5224$6Dw7t)
        (&serious-rtd . g$5223$6Dw7t)
        (&warning-rcd . g$5211$6Dw7t)
        (&warning-rtd . g$5210$6Dw7t)
        (&message-rcd . g$5198$6Dw7t)
        (&message-rtd . g$5197$6Dw7t)
        (&condition-rcd . g$5158$6Dw7t)
        (&condition-rtd . g$5157$6Dw7t)
        (library-letrec* . g$14038$6Dw7t)
        (annotation-stripped . g$14037$6Dw7t)
        (annotation-source . g$14036$6Dw7t)
        (annotation-expression . g$14035$6Dw7t)
        (annotation? . g$14034$6Dw7t)
        (read-annotated . g$14033$6Dw7t)
        (tanh . g$7781$6Dw7t)
        (cosh . g$7779$6Dw7t)
        (sinh . g$7776$6Dw7t)
        (make-guid . g$14032$6Dw7t)
        (unspecified? . g$14031$6Dw7t)
        (make-list . g$6794$6Dw7t)
        (last-pair . g$6793$6Dw7t)
        (load-r5rs . g$14030$6Dw7t)
        (license . g$14029$6Dw7t)
        (stacktrace . g$14028$6Dw7t)
        (ironscheme-test . g$13646$6Dw7t)
        (ironscheme-build . g$13647$6Dw7t)
        (pinvoke-call-internal . g$14027$6Dw7t)
        (ffi-callback-internal . g$14026$6Dw7t)
        (ffi-callout-internal . g$14025$6Dw7t)
        (define-clr-class-internal . g$14024$6Dw7t)
        (clr-field-set!-internal . g$14023$6Dw7t)
        (clr-field-get-internal . g$14022$6Dw7t)
        (clr-cast-internal . g$14021$6Dw7t)
        (clr-call-internal . g$14020$6Dw7t)
        (clr-new-internal . g$14019$6Dw7t)
        (clr-new-array-internal . g$14018$6Dw7t)
        (clr-is-internal . g$14017$6Dw7t)
        (clr-reference-internal . g$14016$6Dw7t)
        (clr-using-internal . g$14015$6Dw7t)
        (syntax-error . g$10615$6Dw7t)
        (syntax-dispatch . g$10489$6Dw7t)
        (compile-core . g$14014$6Dw7t)
        (eval-core . g$14013$6Dw7t)
        (remove-location . g$14012$6Dw7t)
        (set-symbol-value! . g$14011$6Dw7t)
        (symbol-value . g$14010$6Dw7t)
        (symbol-bound? . g$14009$6Dw7t)
        (ungensym . g$14008$6Dw7t)
        (gensym . g$14007$6Dw7t)
        (void . g$14006$6Dw7t)
        (load-serialized-library . g$14005$6Dw7t)
        (serialize-library . g$14004$6Dw7t)
        (compile-system-libraries . g$13651$6Dw7t)
        (compile->closure . g$13653$6Dw7t)
        (compile . g$13652$6Dw7t)
        (load . g$13645$6Dw7t)
        (string-normalize . g$14003$6Dw7t)
        (new-interaction-environment . g$10624$6Dw7t)
        (interaction-environment . g$10625$6Dw7t)
        (char-ready? . g$14002$6Dw7t)
        (string-upcase . g$8149$6Dw7t)
        (string-titlecase . g$8137$6Dw7t)
        (string-normalize-nfkd . g$8158$6Dw7t)
        (string-normalize-nfkc . g$8157$6Dw7t)
        (string-normalize-nfd . g$8156$6Dw7t)
        (string-normalize-nfc . g$8155$6Dw7t)
        (string-foldcase . g$8138$6Dw7t)
        (string-downcase . g$14001$6Dw7t)
        (string-ci>? . g$8134$6Dw7t)
        (string-ci>=? . g$8136$6Dw7t)
        (string-ci=? . g$8132$6Dw7t)
        (string-ci<? . g$8133$6Dw7t)
        (string-ci<=? . g$8135$6Dw7t)
        (char-whitespace? . g$8114$6Dw7t)
        (char-upper-case? . g$8115$6Dw7t)
        (char-title-case? . g$8117$6Dw7t)
        (char-numeric? . g$8113$6Dw7t)
        (char-lower-case? . g$8116$6Dw7t)
        (char-general-category . g$8118$6Dw7t)
        (char-upcase . g$8108$6Dw7t)
        (char-titlecase . g$8110$6Dw7t)
        (char-foldcase . g$8111$6Dw7t)
        (char-downcase . g$8109$6Dw7t)
        (char-ci>? . g$8146$6Dw7t)
        (char-ci>=? . g$8148$6Dw7t)
        (char-ci=? . g$8144$6Dw7t)
        (char-ci<? . g$8145$6Dw7t)
        (char-ci<=? . g$8147$6Dw7t)
        (char-alphabetic? . g$8112$6Dw7t)
        (variable-transformer-procedure . g$10301$6Dw7t)
        (variable-transformer? . g$10300$6Dw7t)
        (make-variable-transformer . g$10298$6Dw7t)
        (identifier? . g$10619$6Dw7t)
        (generate-temporaries . g$10607$6Dw7t)
        (free-identifier=? . g$10608$6Dw7t)
        (syntax->datum . g$10621$6Dw7t)
        (datum->syntax . g$10620$6Dw7t)
        (bound-identifier=? . g$10609$6Dw7t)
        (record-type-descriptor? . g$14000$6Dw7t)
        (record-predicate . g$13999$6Dw7t)
        (record-mutator . g$13998$6Dw7t)
        (record-constructor . g$13997$6Dw7t)
        (record-accessor . g$13996$6Dw7t)
        (make-record-type-descriptor . g$13995$6Dw7t)
        (make-record-constructor-descriptor . g$13994$6Dw7t)
        (record? . g$13993$6Dw7t)
        (record-type-uid . g$13992$6Dw7t)
        (record-type-sealed? . g$13991$6Dw7t)
        (record-type-parent . g$13990$6Dw7t)
        (record-type-opaque? . g$13989$6Dw7t)
        (record-type-name . g$13988$6Dw7t)
        (record-type-generative? . g$13987$6Dw7t)
        (record-type-field-names . g$13986$6Dw7t)
        (record-rtd . g$13985$6Dw7t)
        (record-field-mutable? . g$13984$6Dw7t)
        (delete-file . g$7370$6Dw7t)
        (file-exists? . g$7369$6Dw7t)
        (vector-sort! . g$13983$6Dw7t)
        (vector-sort . g$8078$6Dw7t)
        (list-sort . g$8077$6Dw7t)
        (symbol-hash . g$7340$6Dw7t)
        (string-ci-hash . g$7339$6Dw7t)
        (string-hash . g$7338$6Dw7t)
        (equal-hash . g$13982$6Dw7t)
        (hashtable-equivalence-function . g$13981$6Dw7t)
        (make-hashtable . g$13980$6Dw7t)
        (hashtable-hash-function . g$13979$6Dw7t)
        (make-eqv-hashtable . g$7330$6Dw7t)
        (make-eq-hashtable . g$7329$6Dw7t)
        (hashtable? . g$7328$6Dw7t)
        (hashtable-update! . g$7336$6Dw7t)
        (hashtable-size . g$7331$6Dw7t)
        (hashtable-set! . g$7333$6Dw7t)
        (hashtable-ref . g$7332$6Dw7t)
        (hashtable-mutable? . g$13978$6Dw7t)
        (hashtable-keys . g$13977$6Dw7t)
        (hashtable-entries . g$13976$6Dw7t)
        (hashtable-delete! . g$7334$6Dw7t)
        (hashtable-copy . g$13975$6Dw7t)
        (hashtable-contains? . g$7335$6Dw7t)
        (hashtable-clear! . g$7337$6Dw7t)
        (call-with-output-file . g$9010$6Dw7t)
        (call-with-input-file . g$9009$6Dw7t)
        (write-char . g$9001$6Dw7t)
        (write . g$13974$6Dw7t)
        (with-output-to-file . g$9008$6Dw7t)
        (with-input-from-file . g$9007$6Dw7t)
        (read-char . g$9000$6Dw7t)
        (read . g$13973$6Dw7t)
        (peek-char . g$8999$6Dw7t)
        (open-output-file . g$13972$6Dw7t)
        (open-input-file . g$13971$6Dw7t)
        (newline . g$9011$6Dw7t)
        (display . g$13970$6Dw7t)
        (close-output-port . g$13969$6Dw7t)
        (close-input-port . g$13968$6Dw7t)
        (eof-object? . g$13967$6Dw7t)
        (eof-object . g$13966$6Dw7t)
        (current-error-port . g$13965$6Dw7t)
        (current-output-port . g$13964$6Dw7t)
        (current-input-port . g$13963$6Dw7t)
        (output-port? . g$13962$6Dw7t)
        (input-port? . g$13961$6Dw7t)
        (utf-8-codec . g$13960$6Dw7t)
        (utf-16-codec . g$13959$6Dw7t)
        (transcoder-error-handling-mode . g$13958$6Dw7t)
        (transcoder-eol-style . g$13957$6Dw7t)
        (transcoder-codec . g$13956$6Dw7t)
        (transcoded-port . g$13955$6Dw7t)
        (textual-port? . g$13954$6Dw7t)
        (string->bytevector . g$13953$6Dw7t)
        (standard-output-port . g$8975$6Dw7t)
        (standard-input-port . g$8974$6Dw7t)
        (standard-error-port . g$8973$6Dw7t)
        (set-port-position! . g$13952$6Dw7t)
        (put-u8 . g$13951$6Dw7t)
        (put-string . g$13950$6Dw7t)
        (put-datum . g$8978$6Dw7t)
        (put-char . g$13949$6Dw7t)
        (put-bytevector . g$13948$6Dw7t)
        (port? . g$8983$6Dw7t)
        (port-transcoder . g$13947$6Dw7t)
        (port-position . g$13946$6Dw7t)
        (port-has-set-port-position!? . g$13945$6Dw7t)
        (port-has-port-position? . g$13944$6Dw7t)
        (port-eof? . g$13943$6Dw7t)
        (output-port-buffer-mode . g$13942$6Dw7t)
        (open-string-output-port . g$8982$6Dw7t)
        (open-string-input-port . g$13941$6Dw7t)
        (open-file-output-port . g$13940$6Dw7t)
        (open-file-input/output-port . g$13939$6Dw7t)
        (open-file-input-port . g$13938$6Dw7t)
        (open-bytevector-output-port . g$13937$6Dw7t)
        (open-bytevector-input-port . g$13936$6Dw7t)
        (native-transcoder . g$13935$6Dw7t)
        (native-eol-style . g$8976$6Dw7t)
        (make-transcoder . g$13934$6Dw7t)
        (latin-1-codec . g$13933$6Dw7t)
        (make-i/o-write-error . g$5428$6Dw7t)
        (make-i/o-read-error . g$5415$6Dw7t)
        (make-i/o-port-error . g$5523$6Dw7t)
        (make-i/o-invalid-position-error . g$5441$6Dw7t)
        (make-i/o-filename-error . g$5456$6Dw7t)
        (make-i/o-file-protection-error . g$5471$6Dw7t)
        (make-i/o-file-is-read-only-error . g$5484$6Dw7t)
        (make-i/o-file-does-not-exist-error . g$5510$6Dw7t)
        (make-i/o-file-already-exists-error . g$5497$6Dw7t)
        (make-i/o-error . g$5402$6Dw7t)
        (make-i/o-encoding-error . g$5551$6Dw7t)
        (make-i/o-decoding-error . g$5538$6Dw7t)
        (make-custom-textual-output-port . g$13932$6Dw7t)
        (make-custom-textual-input/output-port . g$13931$6Dw7t)
        (make-custom-textual-input-port . g$13930$6Dw7t)
        (make-custom-binary-output-port . g$13929$6Dw7t)
        (make-custom-binary-input/output-port . g$13928$6Dw7t)
        (make-custom-binary-input-port . g$13927$6Dw7t)
        (make-bytevector . g$7389$6Dw7t)
        (lookahead-u8 . g$13926$6Dw7t)
        (lookahead-char . g$13925$6Dw7t)
        (i/o-write-error? . g$5429$6Dw7t)
        (i/o-read-error? . g$5416$6Dw7t)
        (i/o-port-error? . g$5525$6Dw7t)
        (i/o-invalid-position-error? . g$5443$6Dw7t)
        (i/o-error-position . g$5444$6Dw7t)
        (i/o-filename-error? . g$5458$6Dw7t)
        (i/o-file-protection-error? . g$5472$6Dw7t)
        (i/o-file-is-read-only-error? . g$5485$6Dw7t)
        (i/o-file-does-not-exist-error? . g$5511$6Dw7t)
        (i/o-file-already-exists-error? . g$5498$6Dw7t)
        (i/o-error? . g$5403$6Dw7t)
        (i/o-error-port . g$5526$6Dw7t)
        (i/o-error-filename . g$5459$6Dw7t)
        (i/o-encoding-error? . g$5553$6Dw7t)
        (i/o-encoding-error-char . g$5554$6Dw7t)
        (i/o-decoding-error? . g$5539$6Dw7t)
        (get-u8 . g$13924$6Dw7t)
        (get-string-n! . g$13923$6Dw7t)
        (get-string-n . g$13922$6Dw7t)
        (get-string-all . g$13921$6Dw7t)
        (get-line . g$13920$6Dw7t)
        (get-datum . g$8979$6Dw7t)
        (get-char . g$13919$6Dw7t)
        (get-bytevector-some . g$13918$6Dw7t)
        (get-bytevector-n! . g$13917$6Dw7t)
        (get-bytevector-n . g$13916$6Dw7t)
        (get-bytevector-all . g$13915$6Dw7t)
        (flush-output-port . g$13914$6Dw7t)
        (close-port . g$13913$6Dw7t)
        (call-with-string-output-port . g$8984$6Dw7t)
        (call-with-port . g$8985$6Dw7t)
        (call-with-bytevector-output-port . g$13912$6Dw7t)
        (bytevector->string . g$13911$6Dw7t)
        (buffer-mode? . g$8977$6Dw7t)
        (binary-port? . g$13910$6Dw7t)
        (scheme-report-environment . g$10597$6Dw7t)
        (quotient . g$8056$6Dw7t)
        (null-environment . g$10596$6Dw7t)
        (remainder . g$8057$6Dw7t)
        (modulo . g$8058$6Dw7t)
        (inexact->exact . g$8053$6Dw7t)
        (force . g$8060$6Dw7t)
        (exact->inexact . g$8054$6Dw7t)
        (exit . g$13909$6Dw7t)
        (command-line . g$13640$6Dw7t)
        (string-fill! . g$7002$6Dw7t)
        (string-set! . g$7001$6Dw7t)
        (set-cdr! . g$8045$6Dw7t)
        (set-car! . g$8044$6Dw7t)
        (remove . g$6824$6Dw7t)
        (remv . g$6825$6Dw7t)
        (remp . g$6797$6Dw7t)
        (remq . g$6826$6Dw7t)
        (partition . g$6796$6Dw7t)
        (memv . g$6804$6Dw7t)
        (memq . g$6803$6Dw7t)
        (memp . g$6806$6Dw7t)
        (member . g$6805$6Dw7t)
        (exists . g$6814$6Dw7t)
        (for-all . g$6813$6Dw7t)
        (fold-right . g$6823$6Dw7t)
        (fold-left . g$6822$6Dw7t)
        (find . g$6795$6Dw7t)
        (filter . g$6798$6Dw7t)
        (cons* . g$6817$6Dw7t)
        (assv . g$6800$6Dw7t)
        (assq . g$6799$6Dw7t)
        (assp . g$6802$6Dw7t)
        (assoc . g$6801$6Dw7t)
        (with-exception-handler . g$13908$6Dw7t)
        (raise-continuable . g$13907$6Dw7t)
        (raise . g$13906$6Dw7t)
        (eval . g$10599$6Dw7t)
        (environment . g$10595$6Dw7t)
        (make-enumeration . g$9071$6Dw7t)
        (enum-set=? . g$9078$6Dw7t)
        (enum-set-universe . g$9072$6Dw7t)
        (enum-set-union . g$9079$6Dw7t)
        (enum-set-subset? . g$9077$6Dw7t)
        (enum-set-projection . g$9083$6Dw7t)
        (enum-set-member? . g$9076$6Dw7t)
        (enum-set-intersection . g$9080$6Dw7t)
        (enum-set-indexer . g$9073$6Dw7t)
        (enum-set-difference . g$9081$6Dw7t)
        (enum-set-constructor . g$9074$6Dw7t)
        (enum-set-complement . g$9082$6Dw7t)
        (enum-set->list . g$9075$6Dw7t)
        (who-condition? . g$5290$6Dw7t)
        (warning? . g$5209$6Dw7t)
        (violation? . g$5248$6Dw7t)
        (undefined-violation? . g$5390$6Dw7t)
        (syntax-violation? . g$5375$6Dw7t)
        (syntax-violation-subform . g$5377$6Dw7t)
        (syntax-violation-form . g$5376$6Dw7t)
        (syntax-violation . g$10618$6Dw7t)
        (simple-conditions . g$13905$6Dw7t)
        (serious-condition? . g$5222$6Dw7t)
        (non-continuable-violation? . g$5334$6Dw7t)
        (message-condition? . g$5195$6Dw7t)
        (make-who-condition . g$5288$6Dw7t)
        (make-warning . g$5208$6Dw7t)
        (make-violation . g$5247$6Dw7t)
        (make-undefined-violation . g$5389$6Dw7t)
        (make-syntax-violation . g$5372$6Dw7t)
        (make-serious-condition . g$5221$6Dw7t)
        (make-non-continuable-violation . g$5333$6Dw7t)
        (make-message-condition . g$5193$6Dw7t)
        (make-lexical-violation . g$5359$6Dw7t)
        (make-irritants-condition . g$5273$6Dw7t)
        (make-implementation-restriction-violation . g$5346$6Dw7t)
        (make-error . g$5234$6Dw7t)
        (make-assertion-violation . g$5260$6Dw7t)
        (lexical-violation? . g$5360$6Dw7t)
        (irritants-condition? . g$5275$6Dw7t)
        (implementation-restriction-violation? . g$5347$6Dw7t)
        (error? . g$5235$6Dw7t)
        (condition-who . g$5291$6Dw7t)
        (condition-predicate . g$13904$6Dw7t)
        (condition-message . g$5196$6Dw7t)
        (condition-irritants . g$5276$6Dw7t)
        (condition-accessor . g$13903$6Dw7t)
        (condition . g$13902$6Dw7t)
        (assertion-violation? . g$5261$6Dw7t)
        (condition? . g$13901$6Dw7t)
        (utf32->string . g$7411$6Dw7t)
        (utf16->string . g$7410$6Dw7t)
        (utf8->string . g$7408$6Dw7t)
        (uint-list->bytevector . g$7412$6Dw7t)
        (u8-list->bytevector . g$7400$6Dw7t)
        (string->utf8 . g$7405$6Dw7t)
        (string->utf32 . g$7407$6Dw7t)
        (string->utf16 . g$7406$6Dw7t)
        (sint-list->bytevector . g$7413$6Dw7t)
        (native-endianness . g$7376$6Dw7t)
        (bytevector? . g$6990$6Dw7t)
        (bytevector=? . g$7391$6Dw7t)
        (bytevector-uint-set! . g$7403$6Dw7t)
        (bytevector-uint-ref . g$7401$6Dw7t)
        (bytevector-u8-set! . g$7396$6Dw7t)
        (bytevector-u8-ref . g$7395$6Dw7t)
        (bytevector-u64-set! . g$7441$6Dw7t)
        (bytevector-u64-ref . g$7437$6Dw7t)
        (bytevector-u64-native-set! . g$7443$6Dw7t)
        (bytevector-u64-native-ref . g$7439$6Dw7t)
        (bytevector-u32-set! . g$7433$6Dw7t)
        (bytevector-u32-ref . g$7429$6Dw7t)
        (bytevector-u32-native-set! . g$7435$6Dw7t)
        (bytevector-u32-native-ref . g$7431$6Dw7t)
        (bytevector-u16-set! . g$7425$6Dw7t)
        (bytevector-u16-ref . g$7421$6Dw7t)
        (bytevector-u16-native-set! . g$7427$6Dw7t)
        (bytevector-u16-native-ref . g$7423$6Dw7t)
        (bytevector-sint-set! . g$7404$6Dw7t)
        (bytevector-sint-ref . g$7402$6Dw7t)
        (bytevector-s8-set! . g$7398$6Dw7t)
        (bytevector-s8-ref . g$7397$6Dw7t)
        (bytevector-s64-set! . g$7442$6Dw7t)
        (bytevector-s64-ref . g$7438$6Dw7t)
        (bytevector-s64-native-set! . g$7444$6Dw7t)
        (bytevector-s64-native-ref . g$7440$6Dw7t)
        (bytevector-s32-set! . g$7434$6Dw7t)
        (bytevector-s32-ref . g$7430$6Dw7t)
        (bytevector-s32-native-set! . g$7436$6Dw7t)
        (bytevector-s32-native-ref . g$7432$6Dw7t)
        (bytevector-s16-set! . g$7426$6Dw7t)
        (bytevector-s16-ref . g$7422$6Dw7t)
        (bytevector-s16-native-set! . g$7428$6Dw7t)
        (bytevector-s16-native-ref . g$7424$6Dw7t)
        (bytevector-length . g$7390$6Dw7t)
        (bytevector-ieee-single-set! . g$7419$6Dw7t)
        (bytevector-ieee-single-ref . g$7417$6Dw7t)
        (bytevector-ieee-single-native-set! . g$7447$6Dw7t)
        (bytevector-ieee-single-native-ref . g$7445$6Dw7t)
        (bytevector-ieee-double-set! . g$7420$6Dw7t)
        (bytevector-ieee-double-ref . g$7418$6Dw7t)
        (bytevector-ieee-double-native-set! . g$7448$6Dw7t)
        (bytevector-ieee-double-native-ref . g$7446$6Dw7t)
        (bytevector-fill! . g$7392$6Dw7t)
        (bytevector-copy! . g$7393$6Dw7t)
        (bytevector-copy . g$7394$6Dw7t)
        (bytevector->uint-list . g$7414$6Dw7t)
        (bytevector->u8-list . g$7399$6Dw7t)
        (bytevector->sint-list . g$7415$6Dw7t)
        (no-nans-violation? . g$5580$6Dw7t)
        (no-infinities-violation? . g$5567$6Dw7t)
        (make-no-nans-violation . g$5579$6Dw7t)
        (make-no-infinities-violation . g$5566$6Dw7t)
        (real->flonum . g$7721$6Dw7t)
        (flzero? . g$8415$6Dw7t)
        (fltruncate . g$8410$6Dw7t)
        (fltan . g$8396$6Dw7t)
        (flsqrt . g$8401$6Dw7t)
        (flsin . g$8394$6Dw7t)
        (flround . g$8411$6Dw7t)
        (flpositive? . g$8413$6Dw7t)
        (flonum? . g$6995$6Dw7t)
        (flodd? . g$8417$6Dw7t)
        (flnumerator . g$8360$6Dw7t)
        (flnegative? . g$8414$6Dw7t)
        (flnan? . g$8393$6Dw7t)
        (flmod0 . g$8378$6Dw7t)
        (flmod . g$8377$6Dw7t)
        (flmin . g$8419$6Dw7t)
        (flmax . g$8418$6Dw7t)
        (fllog . g$8400$6Dw7t)
        (flinteger? . g$8386$6Dw7t)
        (flinfinite? . g$8392$6Dw7t)
        (flfloor . g$8409$6Dw7t)
        (flfinite? . g$8387$6Dw7t)
        (flexpt . g$8403$6Dw7t)
        (flexp . g$8402$6Dw7t)
        (fleven? . g$8416$6Dw7t)
        (fldiv0-and-mod0 . g$8385$6Dw7t)
        (fldiv0 . g$8372$6Dw7t)
        (fldiv-and-mod . g$8379$6Dw7t)
        (fldiv . g$8384$6Dw7t)
        (fldenominator . g$8359$6Dw7t)
        (flcos . g$8395$6Dw7t)
        (flceiling . g$8404$6Dw7t)
        (flatan . g$8399$6Dw7t)
        (flasin . g$8397$6Dw7t)
        (flacos . g$8398$6Dw7t)
        (flabs . g$8412$6Dw7t)
        (fl>? . g$8366$6Dw7t)
        (fl>=? . g$8367$6Dw7t)
        (fl=? . g$8363$6Dw7t)
        (fl<? . g$8364$6Dw7t)
        (fl<=? . g$8365$6Dw7t)
        (fl/ . g$8362$6Dw7t)
        (fl- . g$8361$6Dw7t)
        (fl+ . g$8357$6Dw7t)
        (fl* . g$8358$6Dw7t)
        (fixnum->flonum . g$7722$6Dw7t)
        (fxzero? . g$5924$6Dw7t)
        (fxxor . g$5887$6Dw7t)
        (fxrotate-bit-field . g$5962$6Dw7t)
        (fxreverse-bit-field . g$5963$6Dw7t)
        (fxpositive? . g$5914$6Dw7t)
        (fxodd? . g$5934$6Dw7t)
        (fxnot . g$5868$6Dw7t)
        (fxnegative? . g$5919$6Dw7t)
        (fxmod0 . g$5898$6Dw7t)
        (fxmod . g$5897$6Dw7t)
        (fxmin . g$5936$6Dw7t)
        (fxmax . g$5935$6Dw7t)
        (fxlength . g$5865$6Dw7t)
        (fxior . g$5886$6Dw7t)
        (fxif . g$5944$6Dw7t)
        (fxfirst-bit-set . g$5866$6Dw7t)
        (fxeven? . g$5929$6Dw7t)
        (fxdiv0-and-mod0 . g$5909$6Dw7t)
        (fxdiv0 . g$5904$6Dw7t)
        (fxdiv-and-mod . g$5899$6Dw7t)
        (fxdiv . g$5892$6Dw7t)
        (fxcopy-bit-field . g$5959$6Dw7t)
        (fxcopy-bit . g$5949$6Dw7t)
        (fxbit-set? . g$5867$6Dw7t)
        (fxbit-field . g$5954$6Dw7t)
        (fxbit-count . g$5860$6Dw7t)
        (fxarithmetic-shift-right . g$5961$6Dw7t)
        (fxarithmetic-shift-left . g$5960$6Dw7t)
        (fxarithmetic-shift . g$5855$6Dw7t)
        (fxand . g$5885$6Dw7t)
        (fx>? . g$5877$6Dw7t)
        (fx>=? . g$5878$6Dw7t)
        (fx=? . g$5874$6Dw7t)
        (fx<? . g$5875$6Dw7t)
        (fx<=? . g$5876$6Dw7t)
        (fx-/carry . g$5938$6Dw7t)
        (fx- . g$5849$6Dw7t)
        (fx+/carry . g$5939$6Dw7t)
        (fx+ . g$5847$6Dw7t)
        (fx*/carry . g$5937$6Dw7t)
        (fx* . g$5848$6Dw7t)
        (greatest-fixnum . g$5818$6Dw7t)
        (least-fixnum . g$5819$6Dw7t)
        (fixnum-width . g$6996$6Dw7t)
        (fixnum? . g$6994$6Dw7t)
        (bitwise-rotate-bit-field . g$8255$6Dw7t)
        (bitwise-reverse-bit-field . g$8256$6Dw7t)
        (bitwise-length . g$8245$6Dw7t)
        (bitwise-if . g$8248$6Dw7t)
        (bitwise-first-bit-set . g$8246$6Dw7t)
        (bitwise-copy-bit-field . g$8251$6Dw7t)
        (bitwise-copy-bit . g$8249$6Dw7t)
        (bitwise-bit-set? . g$8247$6Dw7t)
        (bitwise-bit-field . g$8250$6Dw7t)
        (bitwise-bit-count . g$8244$6Dw7t)
        (bitwise-xor . g$8243$6Dw7t)
        (bitwise-ior . g$8242$6Dw7t)
        (bitwise-and . g$8241$6Dw7t)
        (bitwise-not . g$8240$6Dw7t)
        (bitwise-arithmetic-shift-right . g$8254$6Dw7t)
        (bitwise-arithmetic-shift-left . g$8253$6Dw7t)
        (bitwise-arithmetic-shift . g$8252$6Dw7t)
        (zero? . g$7736$6Dw7t)
        (vector? . g$6989$6Dw7t)
        (vector-set! . g$7021$6Dw7t)
        (vector-ref . g$7020$6Dw7t)
        (vector-map . g$7088$6Dw7t)
        (vector-length . g$7023$6Dw7t)
        (vector-for-each . g$7089$6Dw7t)
        (vector-fill! . g$7024$6Dw7t)
        (vector->list . g$7025$6Dw7t)
        (vector . g$13900$6Dw7t)
        (values . g$13899$6Dw7t)
        (truncate . g$7788$6Dw7t)
        (tan . g$7780$6Dw7t)
        (symbol? . g$6991$6Dw7t)
        (symbol=? . g$7073$6Dw7t)
        (symbol->string . g$7011$6Dw7t)
        (substring . g$7008$6Dw7t)
        (string? . g$6987$6Dw7t)
        (string>? . g$7070$6Dw7t)
        (string>=? . g$7072$6Dw7t)
        (string=? . g$7068$6Dw7t)
        (string<? . g$7069$6Dw7t)
        (string<=? . g$7071$6Dw7t)
        (string-ref . g$7000$6Dw7t)
        (string-length . g$7003$6Dw7t)
        (string-for-each . g$7090$6Dw7t)
        (string-copy . g$7007$6Dw7t)
        (string-append . g$7009$6Dw7t)
        (string->symbol . g$7012$6Dw7t)
        (string->number . g$13898$6Dw7t)
        (string->list . g$7006$6Dw7t)
        (string . g$7005$6Dw7t)
        (sqrt . g$7790$6Dw7t)
        (sin . g$7774$6Dw7t)
        (round . g$7789$6Dw7t)
        (reverse . g$7027$6Dw7t)
        (real? . g$7730$6Dw7t)
        (real-valued? . g$7733$6Dw7t)
        (real-part . g$7767$6Dw7t)
        (rationalize . g$7085$6Dw7t)
        (rational? . g$7731$6Dw7t)
        (rational-valued? . g$7734$6Dw7t)
        (procedure? . g$6993$6Dw7t)
        (positive? . g$7737$6Dw7t)
        (pair? . g$13897$6Dw7t)
        (odd? . g$7057$6Dw7t)
        (numerator . g$7765$6Dw7t)
        (number? . g$7723$6Dw7t)
        (number->string . g$7744$6Dw7t)
        (null? . g$13896$6Dw7t)
        (not . g$13895$6Dw7t)
        (negative? . g$7738$6Dw7t)
        (nan? . g$7724$6Dw7t)
        (min . g$7059$6Dw7t)
        (max . g$7058$6Dw7t)
        (map . g$6815$6Dw7t)
        (make-vector . g$7022$6Dw7t)
        (make-string . g$6999$6Dw7t)
        (make-rectangular . g$7760$6Dw7t)
        (make-polar . g$7761$6Dw7t)
        (magnitude . g$7763$6Dw7t)
        (log . g$7783$6Dw7t)
        (list? . g$6810$6Dw7t)
        (list-tail . g$6791$6Dw7t)
        (list-ref . g$6792$6Dw7t)
        (list->vector . g$7018$6Dw7t)
        (list->string . g$7019$6Dw7t)
        (list . g$13894$6Dw7t)
        (length . g$6812$6Dw7t)
        (lcm . g$7061$6Dw7t)
        (integer? . g$7732$6Dw7t)
        (integer-valued? . g$7735$6Dw7t)
        (integer->char . g$6998$6Dw7t)
        (infinite? . g$7726$6Dw7t)
        (inexact? . g$7728$6Dw7t)
        (inexact . g$7739$6Dw7t)
        (imag-part . g$7768$6Dw7t)
        (gcd . g$7060$6Dw7t)
        (for-each . g$6816$6Dw7t)
        (floor . g$7786$6Dw7t)
        (finite? . g$7725$6Dw7t)
        (expt . g$7792$6Dw7t)
        (exp . g$7773$6Dw7t)
        (exact? . g$7727$6Dw7t)
        (exact-integer-sqrt . g$7791$6Dw7t)
        (exact . g$7740$6Dw7t)
        (even? . g$7056$6Dw7t)
        (error . g$5586$6Dw7t)
        (eqv? . g$13893$6Dw7t)
        (equal? . g$9203$6Dw7t)
        (eq? . g$13892$6Dw7t)
        (dynamic-wind . g$13891$6Dw7t)
        (div0-and-mod0 . g$7017$6Dw7t)
        (mod0 . g$7015$6Dw7t)
        (div0 . g$7013$6Dw7t)
        (div-and-mod . g$7016$6Dw7t)
        (mod . g$7014$6Dw7t)
        (div . g$7784$6Dw7t)
        (denominator . g$7766$6Dw7t)
        (cos . g$7777$6Dw7t)
        (cons . g$13890$6Dw7t)
        (complex? . g$7729$6Dw7t)
        (char? . g$6988$6Dw7t)
        (char>? . g$7082$6Dw7t)
        (char>=? . g$7084$6Dw7t)
        (char=? . g$7080$6Dw7t)
        (char<? . g$7081$6Dw7t)
        (char<=? . g$7083$6Dw7t)
        (char->integer . g$6997$6Dw7t)
        (ceiling . g$7787$6Dw7t)
        (call-with-values . g$13889$6Dw7t)
        (call/cc . g$13888$6Dw7t)
        (call-with-current-continuation . g$13887$6Dw7t)
        (cddddr . g$7055$6Dw7t)
        (cdddar . g$7054$6Dw7t)
        (cddadr . g$7053$6Dw7t)
        (cddaar . g$7052$6Dw7t)
        (cdaddr . g$7051$6Dw7t)
        (cdadar . g$7050$6Dw7t)
        (cdaadr . g$7049$6Dw7t)
        (cdaaar . g$7048$6Dw7t)
        (cadddr . g$7047$6Dw7t)
        (caddar . g$7046$6Dw7t)
        (cadadr . g$7045$6Dw7t)
        (cadaar . g$7044$6Dw7t)
        (caaddr . g$7043$6Dw7t)
        (caadar . g$7042$6Dw7t)
        (caaadr . g$7041$6Dw7t)
        (caaaar . g$7040$6Dw7t)
        (cdddr . g$7039$6Dw7t)
        (cddar . g$7038$6Dw7t)
        (cdadr . g$7037$6Dw7t)
        (cdaar . g$7036$6Dw7t)
        (caddr . g$7035$6Dw7t)
        (cadar . g$7034$6Dw7t)
        (caadr . g$7033$6Dw7t)
        (caaar . g$7032$6Dw7t)
        (cddr . g$7031$6Dw7t)
        (cdar . g$7030$6Dw7t)
        (cadr . g$7029$6Dw7t)
        (caar . g$7028$6Dw7t)
        (cdr . g$13886$6Dw7t)
        (car . g$13885$6Dw7t)
        (boolean? . g$6992$6Dw7t)
        (boolean=? . g$7074$6Dw7t)
        (atan . g$7782$6Dw7t)
        (assertion-violation . g$5585$6Dw7t)
        (asin . g$7775$6Dw7t)
        (apply . g$13884$6Dw7t)
        (append . g$6821$6Dw7t)
        (angle . g$7762$6Dw7t)
        (acos . g$7778$6Dw7t)
        (abs . g$7785$6Dw7t)
        (/ . g$13883$6Dw7t)
        (* . g$13882$6Dw7t)
        (- . g$13881$6Dw7t)
        (+ . g$13880$6Dw7t)
        (>= . g$7759$6Dw7t)
        (> . g$7758$6Dw7t)
        (= . g$7755$6Dw7t)
        (<= . g$7757$6Dw7t)
        (< . g$7756$6Dw7t)
        ($bytevector-set! . g$13879$6Dw7t)
        ($bytevector-ref . g$13878$6Dw7t)
        ($fl>=? . g$13877$6Dw7t)
        ($fl>? . g$13876$6Dw7t)
        ($fl<=? . g$13875$6Dw7t)
        ($fl<? . g$13874$6Dw7t)
        ($fl- . g$13873$6Dw7t)
        ($fl/ . g$13872$6Dw7t)
        ($fl* . g$13871$6Dw7t)
        ($fl+ . g$13870$6Dw7t)
        ($fl=? . g$13869$6Dw7t)
        ($try . g$13868$6Dw7t)
        ($fxarithmetic-shift-right . g$13867$6Dw7t)
        ($fxarithmetic-shift-left . g$13866$6Dw7t)
        ($$fx- . g$13865$6Dw7t)
        ($$fx* . g$13864$6Dw7t)
        ($$fx+ . g$13863$6Dw7t)
        ($fxnot . g$13862$6Dw7t)
        ($fxxor . g$13861$6Dw7t)
        ($fxior . g$13860$6Dw7t)
        ($fxand . g$13859$6Dw7t)
        ($fx>=? . g$13858$6Dw7t)
        ($fx>? . g$13857$6Dw7t)
        ($fx<=? . g$13856$6Dw7t)
        ($fx<? . g$13855$6Dw7t)
        ($fx- . g$13854$6Dw7t)
        ($fxmod0 . g$13853$6Dw7t)
        ($fxdiv0 . g$13852$6Dw7t)
        ($fx* . g$13851$6Dw7t)
        ($fx+ . g$13850$6Dw7t)
        ($fx=? . g$13849$6Dw7t)
        ($vector-set! . g$13848$6Dw7t)
        ($vector-ref . g$13847$6Dw7t)
        ($cdr . g$13846$6Dw7t)
        ($car . g$13845$6Dw7t)
        (make-record-printer . g$13844$6Dw7t)
        (eqv-hash . g$13843$6Dw7t)
        (reverse! . g$13842$6Dw7t)
        (deserialize-port . g$13841$6Dw7t)
        (serialize-port . g$13840$6Dw7t)
        (enum-set? . g$9048$6Dw7t)
        (make-promise . g$8059$6Dw7t)
        (load/unload . g$13644$6Dw7t)
        (load/args . g$13643$6Dw7t)
        (printf . g$9157$6Dw7t)
        (fprintf . g$9158$6Dw7t)
        (format . g$9159$6Dw7t)
        (procedure-form . g$13839$6Dw7t)
        (procedure-environment . g$13838$6Dw7t)
        (procedure-name . g$13837$6Dw7t)
        (procedure-arity . g$13836$6Dw7t)
        (gc-collect . g$13835$6Dw7t)
        (typeof . g$13834$6Dw7t)
        (clr-type? . g$13833$6Dw7t)
        (get-clr-type . g$13832$6Dw7t)
        (get-command-line . g$13831$6Dw7t)
        (vector-append . g$13830$6Dw7t)
        (vector-filter . g$13829$6Dw7t)
        (vector-reverse! . g$13828$6Dw7t)
        (vector-contains? . g$13827$6Dw7t)
        (vector-index-of . g$13826$6Dw7t)
        (vector-copy . g$13825$6Dw7t)
        (vector-binary-search . g$13824$6Dw7t)
        (string-ci-compare . g$13823$6Dw7t)
        (string-compare . g$13822$6Dw7t)
        (string-format . g$13821$6Dw7t)
        (trace-printer . g$13638$6Dw7t)
        (make-traced-procedure . g$13820$6Dw7t)
        (make-traced-macro . g$9179$6Dw7t)
        (assertion-error . g$10614$6Dw7t)
        (time-it . g$13819$6Dw7t)
        (make-parameter . g$9282$6Dw7t)
        (library-locator . g$13818$6Dw7t)
        (get-library-paths . g$13817$6Dw7t)
        (open-tcp-input/output-port . g$13816$6Dw7t)
        (hashtable-for-each . g$13815$6Dw7t)
        (hashtable-map . g$13814$6Dw7t)
        (environment-bindings . g$10591$6Dw7t)
        (environment-symbols . g$10594$6Dw7t)
        (interaction-environment-symbols . g$10590$6Dw7t)
        (optimization-level . g$13813$6Dw7t)
        (library-path . g$9920$6Dw7t)
        (make-compile-time-value . g$10299$6Dw7t)
        (expand->core . g$10600$6Dw7t)
        (expand . g$10598$6Dw7t)
        (emacs-mode? . g$13641$6Dw7t)
        (syntax-transpose . g$10537$6Dw7t)
        (convert->cps . g$9601$6Dw7t)
        (inexact=? . g$13812$6Dw7t)
        (bignum-sqrt-exact . g$13811$6Dw7t)
        (bignum-sqrt . g$13810$6Dw7t)
        (flonum->string . g$13809$6Dw7t)
        (inexact-compare . g$13808$6Dw7t)
        (exact-compare . g$13807$6Dw7t)
        (condition-stacktrace . g$5321$6Dw7t)
        (stacktrace-condition? . g$5320$6Dw7t)
        (stacktrace-enable? . g$13639$6Dw7t)
        (make-stacktrace-condition . g$5318$6Dw7t)
        (condition-where . g$5306$6Dw7t)
        (where-condition? . g$5305$6Dw7t)
        (make-where-condition . g$5303$6Dw7t)
        (installed-libraries . g$9941$6Dw7t)
        (uninstall-library . g$9932$6Dw7t)
        (pretty-gensyms . g$9365$6Dw7t)
        (pretty-width . g$9362$6Dw7t)
        (pretty-print . g$9367$6Dw7t)
        (pointer+ . g$13806$6Dw7t)
        (&stacktrace . g$13805$6Dw7t)
        (&where . g$13804$6Dw7t)
        (&no-nans . g$13803$6Dw7t)
        (&no-infinities . g$13802$6Dw7t)
        (&i/o-encoding . g$13801$6Dw7t)
        (&i/o-decoding . g$13800$6Dw7t)
        (&i/o-port . g$13799$6Dw7t)
        (&i/o-file-does-not-exist . g$13798$6Dw7t)
        (&i/o-file-already-exists . g$13797$6Dw7t)
        (&i/o-file-is-read-only . g$13796$6Dw7t)
        (&i/o-file-protection . g$13795$6Dw7t)
        (&i/o-filename . g$13794$6Dw7t)
        (&i/o-invalid-position . g$13793$6Dw7t)
        (&i/o-write . g$13792$6Dw7t)
        (&i/o-read . g$13791$6Dw7t)
        (&i/o . g$13790$6Dw7t)
        (&non-continuable . g$13789$6Dw7t)
        (&undefined . g$13788$6Dw7t)
        (&syntax . g$13787$6Dw7t)
        (&lexical . g$13786$6Dw7t)
        (&implementation-restriction . g$13785$6Dw7t)
        (&who . g$13784$6Dw7t)
        (&irritants . g$13783$6Dw7t)
        (&assertion . g$13782$6Dw7t)
        (&violation . g$13781$6Dw7t)
        (&error . g$13780$6Dw7t)
        (&serious . g$13779$6Dw7t)
        (&warning . g$13778$6Dw7t)
        (&message . g$13777$6Dw7t)
        (&condition . g$13776$6Dw7t)
        (define-condition-type . g$13775$6Dw7t)
        (define-enumeration . g$13774$6Dw7t)
        (define-record-type . g$13773$6Dw7t)
        (parent-rtd . g$13772$6Dw7t)
        (nongenerative . g$13771$6Dw7t)
        (opaque . g$13770$6Dw7t)
        (sealed . g$13769$6Dw7t)
        (protocol . g$13768$6Dw7t)
        (parent . g$13767$6Dw7t)
        (immutable . g$13766$6Dw7t)
        (mutable . g$13765$6Dw7t)
        (fields . g$13764$6Dw7t)
        (error-handling-mode . g$13763$6Dw7t)
        (file-options . g$13762$6Dw7t)
        (buffer-mode . g$13761$6Dw7t)
        (eol-style . g$13760$6Dw7t)
        (guard . g$13759$6Dw7t)
        (trace-letrec-syntax . g$13758$6Dw7t)
        (trace-let-syntax . g$13757$6Dw7t)
        (trace-define-syntax . g$13756$6Dw7t)
        (trace-define . g$13755$6Dw7t)
        (trace-lambda . g$13754$6Dw7t)
        (unsyntax-splicing . g$13753$6Dw7t)
        (unsyntax . g$13752$6Dw7t)
        (unquote-splicing . g$13751$6Dw7t)
        (unquote . g$13750$6Dw7t)
        (_ . g$13749$6Dw7t)
        (else . g$13748$6Dw7t)
        (=> . g$13747$6Dw7t)
        (... . g$13746$6Dw7t)
        (assert . g$13745$6Dw7t)
        (endianness . g$13744$6Dw7t)
        (delay . g$13743$6Dw7t)
        (time . g$13742$6Dw7t)
        (or . g$13741$6Dw7t)
        (and . g$13740$6Dw7t)
        (do . g$13739$6Dw7t)
        (cond . g$13738$6Dw7t)
        (let* . g$13737$6Dw7t)
        (let . g$13736$6Dw7t)
        (identifier-syntax . g$13735$6Dw7t)
        (with-syntax . g$13734$6Dw7t)
        (quasisyntax . g$13733$6Dw7t)
        (quasiquote . g$13732$6Dw7t)
        (syntax-rules . g$13731$6Dw7t)
        (include-into . g$13730$6Dw7t)
        (include . g$13729$6Dw7t)
        (define-struct . g$13728$6Dw7t)
        (let-values . g$13727$6Dw7t)
        (let*-values . g$13726$6Dw7t)
        (record-constructor-descriptor . g$13725$6Dw7t)
        (record-type-descriptor . g$13724$6Dw7t)
        (fluid-let-syntax . g$13723$6Dw7t)
        (case . g$13722$6Dw7t)
        (parameterize . g$13721$6Dw7t)
        (unless . g$13720$6Dw7t)
        (when . g$13719$6Dw7t)
        (if . g$13718$6Dw7t)
        (letrec* . g$13717$6Dw7t)
        (letrec . g$13716$6Dw7t)
        (type-descriptor . g$13715$6Dw7t)
        (case-lambda . g$13714$6Dw7t)
        (lambda . g$13713$6Dw7t)
        (syntax . g$13712$6Dw7t)
        (syntax-case . g$13711$6Dw7t)
        (quote . g$13710$6Dw7t)
        (foreign-call . g$13709$6Dw7t)
        (letrec-syntax . g$13708$6Dw7t)
        (let-syntax . g$13707$6Dw7t)
        (set! . g$13706$6Dw7t)
        (export . g$13705$6Dw7t)
        (import . g$13704$6Dw7t)
        (library . g$13703$6Dw7t)
        (begin . g$13702$6Dw7t)
        (module . g$13701$6Dw7t)
        (define-syntax . g$13700$6Dw7t)
        (define . g$13699$6Dw7t))
      '((g$10494$6Dw7t core-prim . ellipsis-map)
        (g$5323$6Dw7t core-prim . &stacktrace-rcd)
        (g$5322$6Dw7t core-prim . &stacktrace-rtd)
        (g$5308$6Dw7t core-prim . &where-rcd)
        (g$5307$6Dw7t core-prim . &where-rtd)
        (g$5582$6Dw7t core-prim . &no-nans-rcd)
        (g$5581$6Dw7t core-prim . &no-nans-rtd)
        (g$5569$6Dw7t core-prim . &no-infinities-rcd)
        (g$5568$6Dw7t core-prim . &no-infinities-rtd)
        (g$5556$6Dw7t core-prim . &i/o-encoding-rcd)
        (g$5555$6Dw7t core-prim . &i/o-encoding-rtd)
        (g$5541$6Dw7t core-prim . &i/o-decoding-rcd)
        (g$5540$6Dw7t core-prim . &i/o-decoding-rtd)
        (g$5528$6Dw7t core-prim . &i/o-port-rcd)
        (g$5527$6Dw7t core-prim . &i/o-port-rtd)
        (g$5513$6Dw7t core-prim . &i/o-file-does-not-exist-rcd)
        (g$5512$6Dw7t core-prim . &i/o-file-does-not-exist-rtd)
        (g$5500$6Dw7t core-prim . &i/o-file-already-exists-rcd)
        (g$5499$6Dw7t core-prim . &i/o-file-already-exists-rtd)
        (g$5487$6Dw7t core-prim . &i/o-file-is-read-only-rcd)
        (g$5486$6Dw7t core-prim . &i/o-file-is-read-only-rtd)
        (g$5474$6Dw7t core-prim . &i/o-file-protection-rcd)
        (g$5473$6Dw7t core-prim . &i/o-file-protection-rtd)
        (g$5461$6Dw7t core-prim . &i/o-filename-rcd)
        (g$5460$6Dw7t core-prim . &i/o-filename-rtd)
        (g$5446$6Dw7t core-prim . &i/o-invalid-position-rcd)
        (g$5445$6Dw7t core-prim . &i/o-invalid-position-rtd)
        (g$5431$6Dw7t core-prim . &i/o-write-rcd)
        (g$5430$6Dw7t core-prim . &i/o-write-rtd)
        (g$5418$6Dw7t core-prim . &i/o-read-rcd)
        (g$5417$6Dw7t core-prim . &i/o-read-rtd)
        (g$5405$6Dw7t core-prim . &i/o-rcd)
        (g$5404$6Dw7t core-prim . &i/o-rtd)
        (g$5392$6Dw7t core-prim . &undefined-rcd)
        (g$5391$6Dw7t core-prim . &undefined-rtd)
        (g$5379$6Dw7t core-prim . &syntax-rcd)
        (g$5378$6Dw7t core-prim . &syntax-rtd)
        (g$5362$6Dw7t core-prim . &lexical-rcd)
        (g$5361$6Dw7t core-prim . &lexical-rtd)
        (g$5349$6Dw7t core-prim . &implementation-restriction-rcd)
        (g$5348$6Dw7t core-prim . &implementation-restriction-rtd)
        (g$5336$6Dw7t core-prim . &non-continuable-rcd)
        (g$5335$6Dw7t core-prim . &non-continuable-rtd)
        (g$5293$6Dw7t core-prim . &who-rcd)
        (g$5292$6Dw7t core-prim . &who-rtd)
        (g$5278$6Dw7t core-prim . &irritants-rcd)
        (g$5277$6Dw7t core-prim . &irritants-rtd)
        (g$5263$6Dw7t core-prim . &assertion-rcd)
        (g$5262$6Dw7t core-prim . &assertion-rtd)
        (g$5250$6Dw7t core-prim . &violation-rcd)
        (g$5249$6Dw7t core-prim . &violation-rtd)
        (g$5237$6Dw7t core-prim . &error-rcd)
        (g$5236$6Dw7t core-prim . &error-rtd)
        (g$5224$6Dw7t core-prim . &serious-rcd)
        (g$5223$6Dw7t core-prim . &serious-rtd)
        (g$5211$6Dw7t core-prim . &warning-rcd)
        (g$5210$6Dw7t core-prim . &warning-rtd)
        (g$5198$6Dw7t core-prim . &message-rcd)
        (g$5197$6Dw7t core-prim . &message-rtd)
        (g$5158$6Dw7t core-prim . &condition-rcd)
        (g$5157$6Dw7t core-prim . &condition-rtd)
        (g$14038$6Dw7t core-prim . library-letrec*)
        (g$14037$6Dw7t core-prim . annotation-stripped)
        (g$14036$6Dw7t core-prim . annotation-source)
        (g$14035$6Dw7t core-prim . annotation-expression)
        (g$14034$6Dw7t core-prim . annotation?)
        (g$14033$6Dw7t core-prim . read-annotated)
        (g$7781$6Dw7t core-prim . tanh)
        (g$7779$6Dw7t core-prim . cosh)
        (g$7776$6Dw7t core-prim . sinh)
        (g$14032$6Dw7t core-prim . make-guid)
        (g$14031$6Dw7t core-prim . unspecified?)
        (g$6794$6Dw7t core-prim . make-list)
        (g$6793$6Dw7t core-prim . last-pair)
        (g$14030$6Dw7t core-prim . load-r5rs)
        (g$14029$6Dw7t core-prim . license)
        (g$14028$6Dw7t core-prim . stacktrace)
        (g$13646$6Dw7t core-prim . ironscheme-test)
        (g$13647$6Dw7t core-prim . ironscheme-build)
        (g$14027$6Dw7t core-prim . pinvoke-call-internal)
        (g$14026$6Dw7t core-prim . ffi-callback-internal)
        (g$14025$6Dw7t core-prim . ffi-callout-internal)
        (g$14024$6Dw7t core-prim . define-clr-class-internal)
        (g$14023$6Dw7t core-prim . clr-field-set!-internal)
        (g$14022$6Dw7t core-prim . clr-field-get-internal)
        (g$14021$6Dw7t core-prim . clr-cast-internal)
        (g$14020$6Dw7t core-prim . clr-call-internal)
        (g$14019$6Dw7t core-prim . clr-new-internal)
        (g$14018$6Dw7t core-prim . clr-new-array-internal)
        (g$14017$6Dw7t core-prim . clr-is-internal)
        (g$14016$6Dw7t core-prim . clr-reference-internal)
        (g$14015$6Dw7t core-prim . clr-using-internal)
        (g$10615$6Dw7t core-prim . syntax-error)
        (g$10489$6Dw7t core-prim . syntax-dispatch)
        (g$14014$6Dw7t core-prim . compile-core)
        (g$14013$6Dw7t core-prim . eval-core)
        (g$14012$6Dw7t core-prim . remove-location)
        (g$14011$6Dw7t core-prim . set-symbol-value!)
        (g$14010$6Dw7t core-prim . symbol-value)
        (g$14009$6Dw7t core-prim . symbol-bound?)
        (g$14008$6Dw7t core-prim . ungensym)
        (g$14007$6Dw7t core-prim . gensym)
        (g$14006$6Dw7t core-prim . void)
        (g$14005$6Dw7t core-prim . load-serialized-library)
        (g$14004$6Dw7t core-prim . serialize-library)
        (g$13651$6Dw7t core-prim . compile-system-libraries)
        (g$13653$6Dw7t core-prim . compile->closure)
        (g$13652$6Dw7t core-prim . compile)
        (g$13645$6Dw7t core-prim . load)
        (g$14003$6Dw7t core-prim . string-normalize)
        (g$10624$6Dw7t core-prim . new-interaction-environment)
        (g$10625$6Dw7t core-prim . interaction-environment)
        (g$14002$6Dw7t core-prim . char-ready?)
        (g$8149$6Dw7t core-prim . string-upcase)
        (g$8137$6Dw7t core-prim . string-titlecase)
        (g$8158$6Dw7t core-prim . string-normalize-nfkd)
        (g$8157$6Dw7t core-prim . string-normalize-nfkc)
        (g$8156$6Dw7t core-prim . string-normalize-nfd)
        (g$8155$6Dw7t core-prim . string-normalize-nfc)
        (g$8138$6Dw7t core-prim . string-foldcase)
        (g$14001$6Dw7t core-prim . string-downcase)
        (g$8134$6Dw7t core-prim . string-ci>?)
        (g$8136$6Dw7t core-prim . string-ci>=?)
        (g$8132$6Dw7t core-prim . string-ci=?)
        (g$8133$6Dw7t core-prim . string-ci<?)
        (g$8135$6Dw7t core-prim . string-ci<=?)
        (g$8114$6Dw7t core-prim . char-whitespace?)
        (g$8115$6Dw7t core-prim . char-upper-case?)
        (g$8117$6Dw7t core-prim . char-title-case?)
        (g$8113$6Dw7t core-prim . char-numeric?)
        (g$8116$6Dw7t core-prim . char-lower-case?)
        (g$8118$6Dw7t core-prim . char-general-category)
        (g$8108$6Dw7t core-prim . char-upcase)
        (g$8110$6Dw7t core-prim . char-titlecase)
        (g$8111$6Dw7t core-prim . char-foldcase)
        (g$8109$6Dw7t core-prim . char-downcase)
        (g$8146$6Dw7t core-prim . char-ci>?)
        (g$8148$6Dw7t core-prim . char-ci>=?)
        (g$8144$6Dw7t core-prim . char-ci=?)
        (g$8145$6Dw7t core-prim . char-ci<?)
        (g$8147$6Dw7t core-prim . char-ci<=?)
        (g$8112$6Dw7t core-prim . char-alphabetic?)
        (g$10301$6Dw7t core-prim . variable-transformer-procedure)
        (g$10300$6Dw7t core-prim . variable-transformer?)
        (g$10298$6Dw7t core-prim . make-variable-transformer)
        (g$10619$6Dw7t core-prim . identifier?)
        (g$10607$6Dw7t core-prim . generate-temporaries)
        (g$10608$6Dw7t core-prim . free-identifier=?)
        (g$10621$6Dw7t core-prim . syntax->datum)
        (g$10620$6Dw7t core-prim . datum->syntax)
        (g$10609$6Dw7t core-prim . bound-identifier=?)
        (g$14000$6Dw7t core-prim . record-type-descriptor?)
        (g$13999$6Dw7t core-prim . record-predicate)
        (g$13998$6Dw7t core-prim . record-mutator)
        (g$13997$6Dw7t core-prim . record-constructor)
        (g$13996$6Dw7t core-prim . record-accessor)
        (g$13995$6Dw7t core-prim . make-record-type-descriptor)
        (g$13994$6Dw7t core-prim . make-record-constructor-descriptor)
        (g$13993$6Dw7t core-prim . record?)
        (g$13992$6Dw7t core-prim . record-type-uid)
        (g$13991$6Dw7t core-prim . record-type-sealed?)
        (g$13990$6Dw7t core-prim . record-type-parent)
        (g$13989$6Dw7t core-prim . record-type-opaque?)
        (g$13988$6Dw7t core-prim . record-type-name)
        (g$13987$6Dw7t core-prim . record-type-generative?)
        (g$13986$6Dw7t core-prim . record-type-field-names)
        (g$13985$6Dw7t core-prim . record-rtd)
        (g$13984$6Dw7t core-prim . record-field-mutable?)
        (g$7370$6Dw7t core-prim . delete-file)
        (g$7369$6Dw7t core-prim . file-exists?)
        (g$13983$6Dw7t core-prim . vector-sort!)
        (g$8078$6Dw7t core-prim . vector-sort)
        (g$8077$6Dw7t core-prim . list-sort)
        (g$7340$6Dw7t core-prim . symbol-hash)
        (g$7339$6Dw7t core-prim . string-ci-hash)
        (g$7338$6Dw7t core-prim . string-hash)
        (g$13982$6Dw7t core-prim . equal-hash)
        (g$13981$6Dw7t core-prim . hashtable-equivalence-function)
        (g$13980$6Dw7t core-prim . make-hashtable)
        (g$13979$6Dw7t core-prim . hashtable-hash-function)
        (g$7330$6Dw7t core-prim . make-eqv-hashtable)
        (g$7329$6Dw7t core-prim . make-eq-hashtable)
        (g$7328$6Dw7t core-prim . hashtable?)
        (g$7336$6Dw7t core-prim . hashtable-update!)
        (g$7331$6Dw7t core-prim . hashtable-size)
        (g$7333$6Dw7t core-prim . hashtable-set!)
        (g$7332$6Dw7t core-prim . hashtable-ref)
        (g$13978$6Dw7t core-prim . hashtable-mutable?)
        (g$13977$6Dw7t core-prim . hashtable-keys)
        (g$13976$6Dw7t core-prim . hashtable-entries)
        (g$7334$6Dw7t core-prim . hashtable-delete!)
        (g$13975$6Dw7t core-prim . hashtable-copy)
        (g$7335$6Dw7t core-prim . hashtable-contains?)
        (g$7337$6Dw7t core-prim . hashtable-clear!)
        (g$9010$6Dw7t core-prim . call-with-output-file)
        (g$9009$6Dw7t core-prim . call-with-input-file)
        (g$9001$6Dw7t core-prim . write-char)
        (g$13974$6Dw7t core-prim . write)
        (g$9008$6Dw7t core-prim . with-output-to-file)
        (g$9007$6Dw7t core-prim . with-input-from-file)
        (g$9000$6Dw7t core-prim . read-char)
        (g$13973$6Dw7t core-prim . read)
        (g$8999$6Dw7t core-prim . peek-char)
        (g$13972$6Dw7t core-prim . open-output-file)
        (g$13971$6Dw7t core-prim . open-input-file)
        (g$9011$6Dw7t core-prim . newline)
        (g$13970$6Dw7t core-prim . display)
        (g$13969$6Dw7t core-prim . close-output-port)
        (g$13968$6Dw7t core-prim . close-input-port)
        (g$13967$6Dw7t core-prim . eof-object?)
        (g$13966$6Dw7t core-prim . eof-object)
        (g$13965$6Dw7t core-prim . current-error-port)
        (g$13964$6Dw7t core-prim . current-output-port)
        (g$13963$6Dw7t core-prim . current-input-port)
        (g$13962$6Dw7t core-prim . output-port?)
        (g$13961$6Dw7t core-prim . input-port?)
        (g$13960$6Dw7t core-prim . utf-8-codec)
        (g$13959$6Dw7t core-prim . utf-16-codec)
        (g$13958$6Dw7t core-prim . transcoder-error-handling-mode)
        (g$13957$6Dw7t core-prim . transcoder-eol-style)
        (g$13956$6Dw7t core-prim . transcoder-codec)
        (g$13955$6Dw7t core-prim . transcoded-port)
        (g$13954$6Dw7t core-prim . textual-port?)
        (g$13953$6Dw7t core-prim . string->bytevector)
        (g$8975$6Dw7t core-prim . standard-output-port)
        (g$8974$6Dw7t core-prim . standard-input-port)
        (g$8973$6Dw7t core-prim . standard-error-port)
        (g$13952$6Dw7t core-prim . set-port-position!)
        (g$13951$6Dw7t core-prim . put-u8)
        (g$13950$6Dw7t core-prim . put-string)
        (g$8978$6Dw7t core-prim . put-datum)
        (g$13949$6Dw7t core-prim . put-char)
        (g$13948$6Dw7t core-prim . put-bytevector)
        (g$8983$6Dw7t core-prim . port?)
        (g$13947$6Dw7t core-prim . port-transcoder)
        (g$13946$6Dw7t core-prim . port-position)
        (g$13945$6Dw7t core-prim . port-has-set-port-position!?)
        (g$13944$6Dw7t core-prim . port-has-port-position?)
        (g$13943$6Dw7t core-prim . port-eof?)
        (g$13942$6Dw7t core-prim . output-port-buffer-mode)
        (g$8982$6Dw7t core-prim . open-string-output-port)
        (g$13941$6Dw7t core-prim . open-string-input-port)
        (g$13940$6Dw7t core-prim . open-file-output-port)
        (g$13939$6Dw7t core-prim . open-file-input/output-port)
        (g$13938$6Dw7t core-prim . open-file-input-port)
        (g$13937$6Dw7t core-prim . open-bytevector-output-port)
        (g$13936$6Dw7t core-prim . open-bytevector-input-port)
        (g$13935$6Dw7t core-prim . native-transcoder)
        (g$8976$6Dw7t core-prim . native-eol-style)
        (g$13934$6Dw7t core-prim . make-transcoder)
        (g$13933$6Dw7t core-prim . latin-1-codec)
        (g$5428$6Dw7t core-prim . make-i/o-write-error)
        (g$5415$6Dw7t core-prim . make-i/o-read-error)
        (g$5523$6Dw7t core-prim . make-i/o-port-error)
        (g$5441$6Dw7t core-prim . make-i/o-invalid-position-error)
        (g$5456$6Dw7t core-prim . make-i/o-filename-error)
        (g$5471$6Dw7t core-prim . make-i/o-file-protection-error)
        (g$5484$6Dw7t core-prim . make-i/o-file-is-read-only-error)
        (g$5510$6Dw7t core-prim . make-i/o-file-does-not-exist-error)
        (g$5497$6Dw7t core-prim . make-i/o-file-already-exists-error)
        (g$5402$6Dw7t core-prim . make-i/o-error)
        (g$5551$6Dw7t core-prim . make-i/o-encoding-error)
        (g$5538$6Dw7t core-prim . make-i/o-decoding-error)
        (g$13932$6Dw7t core-prim . make-custom-textual-output-port)
        (g$13931$6Dw7t
          core-prim
          .
          make-custom-textual-input/output-port)
        (g$13930$6Dw7t core-prim . make-custom-textual-input-port)
        (g$13929$6Dw7t core-prim . make-custom-binary-output-port)
        (g$13928$6Dw7t core-prim . make-custom-binary-input/output-port)
        (g$13927$6Dw7t core-prim . make-custom-binary-input-port)
        (g$7389$6Dw7t core-prim . make-bytevector)
        (g$13926$6Dw7t core-prim . lookahead-u8)
        (g$13925$6Dw7t core-prim . lookahead-char)
        (g$5429$6Dw7t core-prim . i/o-write-error?)
        (g$5416$6Dw7t core-prim . i/o-read-error?)
        (g$5525$6Dw7t core-prim . i/o-port-error?)
        (g$5443$6Dw7t core-prim . i/o-invalid-position-error?)
        (g$5444$6Dw7t core-prim . i/o-error-position)
        (g$5458$6Dw7t core-prim . i/o-filename-error?)
        (g$5472$6Dw7t core-prim . i/o-file-protection-error?)
        (g$5485$6Dw7t core-prim . i/o-file-is-read-only-error?)
        (g$5511$6Dw7t core-prim . i/o-file-does-not-exist-error?)
        (g$5498$6Dw7t core-prim . i/o-file-already-exists-error?)
        (g$5403$6Dw7t core-prim . i/o-error?)
        (g$5526$6Dw7t core-prim . i/o-error-port)
        (g$5459$6Dw7t core-prim . i/o-error-filename)
        (g$5553$6Dw7t core-prim . i/o-encoding-error?)
        (g$5554$6Dw7t core-prim . i/o-encoding-error-char)
        (g$5539$6Dw7t core-prim . i/o-decoding-error?)
        (g$13924$6Dw7t core-prim . get-u8)
        (g$13923$6Dw7t core-prim . get-string-n!)
        (g$13922$6Dw7t core-prim . get-string-n)
        (g$13921$6Dw7t core-prim . get-string-all)
        (g$13920$6Dw7t core-prim . get-line)
        (g$8979$6Dw7t core-prim . get-datum)
        (g$13919$6Dw7t core-prim . get-char)
        (g$13918$6Dw7t core-prim . get-bytevector-some)
        (g$13917$6Dw7t core-prim . get-bytevector-n!)
        (g$13916$6Dw7t core-prim . get-bytevector-n)
        (g$13915$6Dw7t core-prim . get-bytevector-all)
        (g$13914$6Dw7t core-prim . flush-output-port)
        (g$13913$6Dw7t core-prim . close-port)
        (g$8984$6Dw7t core-prim . call-with-string-output-port)
        (g$8985$6Dw7t core-prim . call-with-port)
        (g$13912$6Dw7t core-prim . call-with-bytevector-output-port)
        (g$13911$6Dw7t core-prim . bytevector->string)
        (g$8977$6Dw7t core-prim . buffer-mode?)
        (g$13910$6Dw7t core-prim . binary-port?)
        (g$10597$6Dw7t core-prim . scheme-report-environment)
        (g$8056$6Dw7t core-prim . quotient)
        (g$10596$6Dw7t core-prim . null-environment)
        (g$8057$6Dw7t core-prim . remainder)
        (g$8058$6Dw7t core-prim . modulo)
        (g$8053$6Dw7t core-prim . inexact->exact)
        (g$8060$6Dw7t core-prim . force)
        (g$8054$6Dw7t core-prim . exact->inexact)
        (g$13909$6Dw7t core-prim . exit)
        (g$13640$6Dw7t core-prim . command-line)
        (g$7002$6Dw7t core-prim . string-fill!)
        (g$7001$6Dw7t core-prim . string-set!)
        (g$8045$6Dw7t core-prim . set-cdr!)
        (g$8044$6Dw7t core-prim . set-car!)
        (g$6824$6Dw7t core-prim . remove)
        (g$6825$6Dw7t core-prim . remv)
        (g$6797$6Dw7t core-prim . remp)
        (g$6826$6Dw7t core-prim . remq)
        (g$6796$6Dw7t core-prim . partition)
        (g$6804$6Dw7t core-prim . memv)
        (g$6803$6Dw7t core-prim . memq)
        (g$6806$6Dw7t core-prim . memp)
        (g$6805$6Dw7t core-prim . member)
        (g$6814$6Dw7t core-prim . exists)
        (g$6813$6Dw7t core-prim . for-all)
        (g$6823$6Dw7t core-prim . fold-right)
        (g$6822$6Dw7t core-prim . fold-left)
        (g$6795$6Dw7t core-prim . find)
        (g$6798$6Dw7t core-prim . filter)
        (g$6817$6Dw7t core-prim . cons*)
        (g$6800$6Dw7t core-prim . assv)
        (g$6799$6Dw7t core-prim . assq)
        (g$6802$6Dw7t core-prim . assp)
        (g$6801$6Dw7t core-prim . assoc)
        (g$13908$6Dw7t core-prim . with-exception-handler)
        (g$13907$6Dw7t core-prim . raise-continuable)
        (g$13906$6Dw7t core-prim . raise)
        (g$10599$6Dw7t core-prim . eval)
        (g$10595$6Dw7t core-prim . environment)
        (g$9071$6Dw7t core-prim . make-enumeration)
        (g$9078$6Dw7t core-prim . enum-set=?)
        (g$9072$6Dw7t core-prim . enum-set-universe)
        (g$9079$6Dw7t core-prim . enum-set-union)
        (g$9077$6Dw7t core-prim . enum-set-subset?)
        (g$9083$6Dw7t core-prim . enum-set-projection)
        (g$9076$6Dw7t core-prim . enum-set-member?)
        (g$9080$6Dw7t core-prim . enum-set-intersection)
        (g$9073$6Dw7t core-prim . enum-set-indexer)
        (g$9081$6Dw7t core-prim . enum-set-difference)
        (g$9074$6Dw7t core-prim . enum-set-constructor)
        (g$9082$6Dw7t core-prim . enum-set-complement)
        (g$9075$6Dw7t core-prim . enum-set->list)
        (g$5290$6Dw7t core-prim . who-condition?)
        (g$5209$6Dw7t core-prim . warning?)
        (g$5248$6Dw7t core-prim . violation?)
        (g$5390$6Dw7t core-prim . undefined-violation?)
        (g$5375$6Dw7t core-prim . syntax-violation?)
        (g$5377$6Dw7t core-prim . syntax-violation-subform)
        (g$5376$6Dw7t core-prim . syntax-violation-form)
        (g$10618$6Dw7t core-prim . syntax-violation)
        (g$13905$6Dw7t core-prim . simple-conditions)
        (g$5222$6Dw7t core-prim . serious-condition?)
        (g$5334$6Dw7t core-prim . non-continuable-violation?)
        (g$5195$6Dw7t core-prim . message-condition?)
        (g$5288$6Dw7t core-prim . make-who-condition)
        (g$5208$6Dw7t core-prim . make-warning)
        (g$5247$6Dw7t core-prim . make-violation)
        (g$5389$6Dw7t core-prim . make-undefined-violation)
        (g$5372$6Dw7t core-prim . make-syntax-violation)
        (g$5221$6Dw7t core-prim . make-serious-condition)
        (g$5333$6Dw7t core-prim . make-non-continuable-violation)
        (g$5193$6Dw7t core-prim . make-message-condition)
        (g$5359$6Dw7t core-prim . make-lexical-violation)
        (g$5273$6Dw7t core-prim . make-irritants-condition)
        (g$5346$6Dw7t
          core-prim
          .
          make-implementation-restriction-violation)
        (g$5234$6Dw7t core-prim . make-error)
        (g$5260$6Dw7t core-prim . make-assertion-violation)
        (g$5360$6Dw7t core-prim . lexical-violation?)
        (g$5275$6Dw7t core-prim . irritants-condition?)
        (g$5347$6Dw7t core-prim . implementation-restriction-violation?)
        (g$5235$6Dw7t core-prim . error?)
        (g$5291$6Dw7t core-prim . condition-who)
        (g$13904$6Dw7t core-prim . condition-predicate)
        (g$5196$6Dw7t core-prim . condition-message)
        (g$5276$6Dw7t core-prim . condition-irritants)
        (g$13903$6Dw7t core-prim . condition-accessor)
        (g$13902$6Dw7t core-prim . condition)
        (g$5261$6Dw7t core-prim . assertion-violation?)
        (g$13901$6Dw7t core-prim . condition?)
        (g$7411$6Dw7t core-prim . utf32->string)
        (g$7410$6Dw7t core-prim . utf16->string)
        (g$7408$6Dw7t core-prim . utf8->string)
        (g$7412$6Dw7t core-prim . uint-list->bytevector)
        (g$7400$6Dw7t core-prim . u8-list->bytevector)
        (g$7405$6Dw7t core-prim . string->utf8)
        (g$7407$6Dw7t core-prim . string->utf32)
        (g$7406$6Dw7t core-prim . string->utf16)
        (g$7413$6Dw7t core-prim . sint-list->bytevector)
        (g$7376$6Dw7t core-prim . native-endianness)
        (g$6990$6Dw7t core-prim . bytevector?)
        (g$7391$6Dw7t core-prim . bytevector=?)
        (g$7403$6Dw7t core-prim . bytevector-uint-set!)
        (g$7401$6Dw7t core-prim . bytevector-uint-ref)
        (g$7396$6Dw7t core-prim . bytevector-u8-set!)
        (g$7395$6Dw7t core-prim . bytevector-u8-ref)
        (g$7441$6Dw7t core-prim . bytevector-u64-set!)
        (g$7437$6Dw7t core-prim . bytevector-u64-ref)
        (g$7443$6Dw7t core-prim . bytevector-u64-native-set!)
        (g$7439$6Dw7t core-prim . bytevector-u64-native-ref)
        (g$7433$6Dw7t core-prim . bytevector-u32-set!)
        (g$7429$6Dw7t core-prim . bytevector-u32-ref)
        (g$7435$6Dw7t core-prim . bytevector-u32-native-set!)
        (g$7431$6Dw7t core-prim . bytevector-u32-native-ref)
        (g$7425$6Dw7t core-prim . bytevector-u16-set!)
        (g$7421$6Dw7t core-prim . bytevector-u16-ref)
        (g$7427$6Dw7t core-prim . bytevector-u16-native-set!)
        (g$7423$6Dw7t core-prim . bytevector-u16-native-ref)
        (g$7404$6Dw7t core-prim . bytevector-sint-set!)
        (g$7402$6Dw7t core-prim . bytevector-sint-ref)
        (g$7398$6Dw7t core-prim . bytevector-s8-set!)
        (g$7397$6Dw7t core-prim . bytevector-s8-ref)
        (g$7442$6Dw7t core-prim . bytevector-s64-set!)
        (g$7438$6Dw7t core-prim . bytevector-s64-ref)
        (g$7444$6Dw7t core-prim . bytevector-s64-native-set!)
        (g$7440$6Dw7t core-prim . bytevector-s64-native-ref)
        (g$7434$6Dw7t core-prim . bytevector-s32-set!)
        (g$7430$6Dw7t core-prim . bytevector-s32-ref)
        (g$7436$6Dw7t core-prim . bytevector-s32-native-set!)
        (g$7432$6Dw7t core-prim . bytevector-s32-native-ref)
        (g$7426$6Dw7t core-prim . bytevector-s16-set!)
        (g$7422$6Dw7t core-prim . bytevector-s16-ref)
        (g$7428$6Dw7t core-prim . bytevector-s16-native-set!)
        (g$7424$6Dw7t core-prim . bytevector-s16-native-ref)
        (g$7390$6Dw7t core-prim . bytevector-length)
        (g$7419$6Dw7t core-prim . bytevector-ieee-single-set!)
        (g$7417$6Dw7t core-prim . bytevector-ieee-single-ref)
        (g$7447$6Dw7t core-prim . bytevector-ieee-single-native-set!)
        (g$7445$6Dw7t core-prim . bytevector-ieee-single-native-ref)
        (g$7420$6Dw7t core-prim . bytevector-ieee-double-set!)
        (g$7418$6Dw7t core-prim . bytevector-ieee-double-ref)
        (g$7448$6Dw7t core-prim . bytevector-ieee-double-native-set!)
        (g$7446$6Dw7t core-prim . bytevector-ieee-double-native-ref)
        (g$7392$6Dw7t core-prim . bytevector-fill!)
        (g$7393$6Dw7t core-prim . bytevector-copy!)
        (g$7394$6Dw7t core-prim . bytevector-copy)
        (g$7414$6Dw7t core-prim . bytevector->uint-list)
        (g$7399$6Dw7t core-prim . bytevector->u8-list)
        (g$7415$6Dw7t core-prim . bytevector->sint-list)
        (g$5580$6Dw7t core-prim . no-nans-violation?)
        (g$5567$6Dw7t core-prim . no-infinities-violation?)
        (g$5579$6Dw7t core-prim . make-no-nans-violation)
        (g$5566$6Dw7t core-prim . make-no-infinities-violation)
        (g$7721$6Dw7t core-prim . real->flonum)
        (g$8415$6Dw7t core-prim . flzero?)
        (g$8410$6Dw7t core-prim . fltruncate)
        (g$8396$6Dw7t core-prim . fltan)
        (g$8401$6Dw7t core-prim . flsqrt)
        (g$8394$6Dw7t core-prim . flsin)
        (g$8411$6Dw7t core-prim . flround)
        (g$8413$6Dw7t core-prim . flpositive?)
        (g$6995$6Dw7t core-prim . flonum?)
        (g$8417$6Dw7t core-prim . flodd?)
        (g$8360$6Dw7t core-prim . flnumerator)
        (g$8414$6Dw7t core-prim . flnegative?)
        (g$8393$6Dw7t core-prim . flnan?)
        (g$8378$6Dw7t core-prim . flmod0)
        (g$8377$6Dw7t core-prim . flmod)
        (g$8419$6Dw7t core-prim . flmin)
        (g$8418$6Dw7t core-prim . flmax)
        (g$8400$6Dw7t core-prim . fllog)
        (g$8386$6Dw7t core-prim . flinteger?)
        (g$8392$6Dw7t core-prim . flinfinite?)
        (g$8409$6Dw7t core-prim . flfloor)
        (g$8387$6Dw7t core-prim . flfinite?)
        (g$8403$6Dw7t core-prim . flexpt)
        (g$8402$6Dw7t core-prim . flexp)
        (g$8416$6Dw7t core-prim . fleven?)
        (g$8385$6Dw7t core-prim . fldiv0-and-mod0)
        (g$8372$6Dw7t core-prim . fldiv0)
        (g$8379$6Dw7t core-prim . fldiv-and-mod)
        (g$8384$6Dw7t core-prim . fldiv)
        (g$8359$6Dw7t core-prim . fldenominator)
        (g$8395$6Dw7t core-prim . flcos)
        (g$8404$6Dw7t core-prim . flceiling)
        (g$8399$6Dw7t core-prim . flatan)
        (g$8397$6Dw7t core-prim . flasin)
        (g$8398$6Dw7t core-prim . flacos)
        (g$8412$6Dw7t core-prim . flabs)
        (g$8366$6Dw7t core-prim . fl>?)
        (g$8367$6Dw7t core-prim . fl>=?)
        (g$8363$6Dw7t core-prim . fl=?)
        (g$8364$6Dw7t core-prim . fl<?)
        (g$8365$6Dw7t core-prim . fl<=?)
        (g$8362$6Dw7t core-prim . fl/)
        (g$8361$6Dw7t core-prim . fl-)
        (g$8357$6Dw7t core-prim . fl+)
        (g$8358$6Dw7t core-prim . fl*)
        (g$7722$6Dw7t core-prim . fixnum->flonum)
        (g$5924$6Dw7t core-prim . fxzero?)
        (g$5887$6Dw7t core-prim . fxxor)
        (g$5962$6Dw7t core-prim . fxrotate-bit-field)
        (g$5963$6Dw7t core-prim . fxreverse-bit-field)
        (g$5914$6Dw7t core-prim . fxpositive?)
        (g$5934$6Dw7t core-prim . fxodd?)
        (g$5868$6Dw7t core-prim . fxnot)
        (g$5919$6Dw7t core-prim . fxnegative?)
        (g$5898$6Dw7t core-prim . fxmod0)
        (g$5897$6Dw7t core-prim . fxmod)
        (g$5936$6Dw7t core-prim . fxmin)
        (g$5935$6Dw7t core-prim . fxmax)
        (g$5865$6Dw7t core-prim . fxlength)
        (g$5886$6Dw7t core-prim . fxior)
        (g$5944$6Dw7t core-prim . fxif)
        (g$5866$6Dw7t core-prim . fxfirst-bit-set)
        (g$5929$6Dw7t core-prim . fxeven?)
        (g$5909$6Dw7t core-prim . fxdiv0-and-mod0)
        (g$5904$6Dw7t core-prim . fxdiv0)
        (g$5899$6Dw7t core-prim . fxdiv-and-mod)
        (g$5892$6Dw7t core-prim . fxdiv)
        (g$5959$6Dw7t core-prim . fxcopy-bit-field)
        (g$5949$6Dw7t core-prim . fxcopy-bit)
        (g$5867$6Dw7t core-prim . fxbit-set?)
        (g$5954$6Dw7t core-prim . fxbit-field)
        (g$5860$6Dw7t core-prim . fxbit-count)
        (g$5961$6Dw7t core-prim . fxarithmetic-shift-right)
        (g$5960$6Dw7t core-prim . fxarithmetic-shift-left)
        (g$5855$6Dw7t core-prim . fxarithmetic-shift)
        (g$5885$6Dw7t core-prim . fxand)
        (g$5877$6Dw7t core-prim . fx>?)
        (g$5878$6Dw7t core-prim . fx>=?)
        (g$5874$6Dw7t core-prim . fx=?)
        (g$5875$6Dw7t core-prim . fx<?)
        (g$5876$6Dw7t core-prim . fx<=?)
        (g$5938$6Dw7t core-prim . fx-/carry)
        (g$5849$6Dw7t core-prim . fx-)
        (g$5939$6Dw7t core-prim . fx+/carry)
        (g$5847$6Dw7t core-prim . fx+)
        (g$5937$6Dw7t core-prim . fx*/carry)
        (g$5848$6Dw7t core-prim . fx*)
        (g$5818$6Dw7t core-prim . greatest-fixnum)
        (g$5819$6Dw7t core-prim . least-fixnum)
        (g$6996$6Dw7t core-prim . fixnum-width)
        (g$6994$6Dw7t core-prim . fixnum?)
        (g$8255$6Dw7t core-prim . bitwise-rotate-bit-field)
        (g$8256$6Dw7t core-prim . bitwise-reverse-bit-field)
        (g$8245$6Dw7t core-prim . bitwise-length)
        (g$8248$6Dw7t core-prim . bitwise-if)
        (g$8246$6Dw7t core-prim . bitwise-first-bit-set)
        (g$8251$6Dw7t core-prim . bitwise-copy-bit-field)
        (g$8249$6Dw7t core-prim . bitwise-copy-bit)
        (g$8247$6Dw7t core-prim . bitwise-bit-set?)
        (g$8250$6Dw7t core-prim . bitwise-bit-field)
        (g$8244$6Dw7t core-prim . bitwise-bit-count)
        (g$8243$6Dw7t core-prim . bitwise-xor)
        (g$8242$6Dw7t core-prim . bitwise-ior)
        (g$8241$6Dw7t core-prim . bitwise-and)
        (g$8240$6Dw7t core-prim . bitwise-not)
        (g$8254$6Dw7t core-prim . bitwise-arithmetic-shift-right)
        (g$8253$6Dw7t core-prim . bitwise-arithmetic-shift-left)
        (g$8252$6Dw7t core-prim . bitwise-arithmetic-shift)
        (g$7736$6Dw7t core-prim . zero?)
        (g$6989$6Dw7t core-prim . vector?)
        (g$7021$6Dw7t core-prim . vector-set!)
        (g$7020$6Dw7t core-prim . vector-ref)
        (g$7088$6Dw7t core-prim . vector-map)
        (g$7023$6Dw7t core-prim . vector-length)
        (g$7089$6Dw7t core-prim . vector-for-each)
        (g$7024$6Dw7t core-prim . vector-fill!)
        (g$7025$6Dw7t core-prim . vector->list)
        (g$13900$6Dw7t core-prim . vector)
        (g$13899$6Dw7t core-prim . values)
        (g$7788$6Dw7t core-prim . truncate)
        (g$7780$6Dw7t core-prim . tan)
        (g$6991$6Dw7t core-prim . symbol?)
        (g$7073$6Dw7t core-prim . symbol=?)
        (g$7011$6Dw7t core-prim . symbol->string)
        (g$7008$6Dw7t core-prim . substring)
        (g$6987$6Dw7t core-prim . string?)
        (g$7070$6Dw7t core-prim . string>?)
        (g$7072$6Dw7t core-prim . string>=?)
        (g$7068$6Dw7t core-prim . string=?)
        (g$7069$6Dw7t core-prim . string<?)
        (g$7071$6Dw7t core-prim . string<=?)
        (g$7000$6Dw7t core-prim . string-ref)
        (g$7003$6Dw7t core-prim . string-length)
        (g$7090$6Dw7t core-prim . string-for-each)
        (g$7007$6Dw7t core-prim . string-copy)
        (g$7009$6Dw7t core-prim . string-append)
        (g$7012$6Dw7t core-prim . string->symbol)
        (g$13898$6Dw7t core-prim . string->number)
        (g$7006$6Dw7t core-prim . string->list)
        (g$7005$6Dw7t core-prim . string)
        (g$7790$6Dw7t core-prim . sqrt)
        (g$7774$6Dw7t core-prim . sin)
        (g$7789$6Dw7t core-prim . round)
        (g$7027$6Dw7t core-prim . reverse)
        (g$7730$6Dw7t core-prim . real?)
        (g$7733$6Dw7t core-prim . real-valued?)
        (g$7767$6Dw7t core-prim . real-part)
        (g$7085$6Dw7t core-prim . rationalize)
        (g$7731$6Dw7t core-prim . rational?)
        (g$7734$6Dw7t core-prim . rational-valued?)
        (g$6993$6Dw7t core-prim . procedure?)
        (g$7737$6Dw7t core-prim . positive?)
        (g$13897$6Dw7t core-prim . pair?)
        (g$7057$6Dw7t core-prim . odd?)
        (g$7765$6Dw7t core-prim . numerator)
        (g$7723$6Dw7t core-prim . number?)
        (g$7744$6Dw7t core-prim . number->string)
        (g$13896$6Dw7t core-prim . null?)
        (g$13895$6Dw7t core-prim . not)
        (g$7738$6Dw7t core-prim . negative?)
        (g$7724$6Dw7t core-prim . nan?)
        (g$7059$6Dw7t core-prim . min)
        (g$7058$6Dw7t core-prim . max)
        (g$6815$6Dw7t core-prim . map)
        (g$7022$6Dw7t core-prim . make-vector)
        (g$6999$6Dw7t core-prim . make-string)
        (g$7760$6Dw7t core-prim . make-rectangular)
        (g$7761$6Dw7t core-prim . make-polar)
        (g$7763$6Dw7t core-prim . magnitude)
        (g$7783$6Dw7t core-prim . log)
        (g$6810$6Dw7t core-prim . list?)
        (g$6791$6Dw7t core-prim . list-tail)
        (g$6792$6Dw7t core-prim . list-ref)
        (g$7018$6Dw7t core-prim . list->vector)
        (g$7019$6Dw7t core-prim . list->string)
        (g$13894$6Dw7t core-prim . list)
        (g$6812$6Dw7t core-prim . length)
        (g$7061$6Dw7t core-prim . lcm)
        (g$7732$6Dw7t core-prim . integer?)
        (g$7735$6Dw7t core-prim . integer-valued?)
        (g$6998$6Dw7t core-prim . integer->char)
        (g$7726$6Dw7t core-prim . infinite?)
        (g$7728$6Dw7t core-prim . inexact?)
        (g$7739$6Dw7t core-prim . inexact)
        (g$7768$6Dw7t core-prim . imag-part)
        (g$7060$6Dw7t core-prim . gcd)
        (g$6816$6Dw7t core-prim . for-each)
        (g$7786$6Dw7t core-prim . floor)
        (g$7725$6Dw7t core-prim . finite?)
        (g$7792$6Dw7t core-prim . expt)
        (g$7773$6Dw7t core-prim . exp)
        (g$7727$6Dw7t core-prim . exact?)
        (g$7791$6Dw7t core-prim . exact-integer-sqrt)
        (g$7740$6Dw7t core-prim . exact)
        (g$7056$6Dw7t core-prim . even?)
        (g$5586$6Dw7t core-prim . error)
        (g$13893$6Dw7t core-prim . eqv?)
        (g$9203$6Dw7t core-prim . equal?)
        (g$13892$6Dw7t core-prim . eq?)
        (g$13891$6Dw7t core-prim . dynamic-wind)
        (g$7017$6Dw7t core-prim . div0-and-mod0)
        (g$7015$6Dw7t core-prim . mod0)
        (g$7013$6Dw7t core-prim . div0)
        (g$7016$6Dw7t core-prim . div-and-mod)
        (g$7014$6Dw7t core-prim . mod)
        (g$7784$6Dw7t core-prim . div)
        (g$7766$6Dw7t core-prim . denominator)
        (g$7777$6Dw7t core-prim . cos)
        (g$13890$6Dw7t core-prim . cons)
        (g$7729$6Dw7t core-prim . complex?)
        (g$6988$6Dw7t core-prim . char?)
        (g$7082$6Dw7t core-prim . char>?)
        (g$7084$6Dw7t core-prim . char>=?)
        (g$7080$6Dw7t core-prim . char=?)
        (g$7081$6Dw7t core-prim . char<?)
        (g$7083$6Dw7t core-prim . char<=?)
        (g$6997$6Dw7t core-prim . char->integer)
        (g$7787$6Dw7t core-prim . ceiling)
        (g$13889$6Dw7t core-prim . call-with-values)
        (g$13888$6Dw7t core-prim . call/cc)
        (g$13887$6Dw7t core-prim . call-with-current-continuation)
        (g$7055$6Dw7t core-prim . cddddr)
        (g$7054$6Dw7t core-prim . cdddar)
        (g$7053$6Dw7t core-prim . cddadr)
        (g$7052$6Dw7t core-prim . cddaar)
        (g$7051$6Dw7t core-prim . cdaddr)
        (g$7050$6Dw7t core-prim . cdadar)
        (g$7049$6Dw7t core-prim . cdaadr)
        (g$7048$6Dw7t core-prim . cdaaar)
        (g$7047$6Dw7t core-prim . cadddr)
        (g$7046$6Dw7t core-prim . caddar)
        (g$7045$6Dw7t core-prim . cadadr)
        (g$7044$6Dw7t core-prim . cadaar)
        (g$7043$6Dw7t core-prim . caaddr)
        (g$7042$6Dw7t core-prim . caadar)
        (g$7041$6Dw7t core-prim . caaadr)
        (g$7040$6Dw7t core-prim . caaaar)
        (g$7039$6Dw7t core-prim . cdddr)
        (g$7038$6Dw7t core-prim . cddar)
        (g$7037$6Dw7t core-prim . cdadr)
        (g$7036$6Dw7t core-prim . cdaar)
        (g$7035$6Dw7t core-prim . caddr)
        (g$7034$6Dw7t core-prim . cadar)
        (g$7033$6Dw7t core-prim . caadr)
        (g$7032$6Dw7t core-prim . caaar)
        (g$7031$6Dw7t core-prim . cddr)
        (g$7030$6Dw7t core-prim . cdar)
        (g$7029$6Dw7t core-prim . cadr)
        (g$7028$6Dw7t core-prim . caar)
        (g$13886$6Dw7t core-prim . cdr)
        (g$13885$6Dw7t core-prim . car)
        (g$6992$6Dw7t core-prim . boolean?)
        (g$7074$6Dw7t core-prim . boolean=?)
        (g$7782$6Dw7t core-prim . atan)
        (g$5585$6Dw7t core-prim . assertion-violation)
        (g$7775$6Dw7t core-prim . asin)
        (g$13884$6Dw7t core-prim . apply)
        (g$6821$6Dw7t core-prim . append)
        (g$7762$6Dw7t core-prim . angle)
        (g$7778$6Dw7t core-prim . acos)
        (g$7785$6Dw7t core-prim . abs)
        (g$13883$6Dw7t core-prim . /)
        (g$13882$6Dw7t core-prim . *)
        (g$13881$6Dw7t core-prim . -)
        (g$13880$6Dw7t core-prim . +)
        (g$7759$6Dw7t core-prim . >=)
        (g$7758$6Dw7t core-prim . >)
        (g$7755$6Dw7t core-prim . =)
        (g$7757$6Dw7t core-prim . <=)
        (g$7756$6Dw7t core-prim . <)
        (g$13879$6Dw7t core-prim . $bytevector-set!)
        (g$13878$6Dw7t core-prim . $bytevector-ref)
        (g$13877$6Dw7t core-prim . $fl>=?)
        (g$13876$6Dw7t core-prim . $fl>?)
        (g$13875$6Dw7t core-prim . $fl<=?)
        (g$13874$6Dw7t core-prim . $fl<?)
        (g$13873$6Dw7t core-prim . $fl-)
        (g$13872$6Dw7t core-prim . $fl/)
        (g$13871$6Dw7t core-prim . $fl*)
        (g$13870$6Dw7t core-prim . $fl+)
        (g$13869$6Dw7t core-prim . $fl=?)
        (g$13868$6Dw7t core-prim . $try)
        (g$13867$6Dw7t core-prim . $fxarithmetic-shift-right)
        (g$13866$6Dw7t core-prim . $fxarithmetic-shift-left)
        (g$13865$6Dw7t core-prim . $$fx-)
        (g$13864$6Dw7t core-prim . $$fx*)
        (g$13863$6Dw7t core-prim . $$fx+)
        (g$13862$6Dw7t core-prim . $fxnot)
        (g$13861$6Dw7t core-prim . $fxxor)
        (g$13860$6Dw7t core-prim . $fxior)
        (g$13859$6Dw7t core-prim . $fxand)
        (g$13858$6Dw7t core-prim . $fx>=?)
        (g$13857$6Dw7t core-prim . $fx>?)
        (g$13856$6Dw7t core-prim . $fx<=?)
        (g$13855$6Dw7t core-prim . $fx<?)
        (g$13854$6Dw7t core-prim . $fx-)
        (g$13853$6Dw7t core-prim . $fxmod0)
        (g$13852$6Dw7t core-prim . $fxdiv0)
        (g$13851$6Dw7t core-prim . $fx*)
        (g$13850$6Dw7t core-prim . $fx+)
        (g$13849$6Dw7t core-prim . $fx=?)
        (g$13848$6Dw7t core-prim . $vector-set!)
        (g$13847$6Dw7t core-prim . $vector-ref)
        (g$13846$6Dw7t core-prim . $cdr)
        (g$13845$6Dw7t core-prim . $car)
        (g$13844$6Dw7t core-prim . make-record-printer)
        (g$13843$6Dw7t core-prim . eqv-hash)
        (g$13842$6Dw7t core-prim . reverse!)
        (g$13841$6Dw7t core-prim . deserialize-port)
        (g$13840$6Dw7t core-prim . serialize-port)
        (g$9048$6Dw7t core-prim . enum-set?)
        (g$8059$6Dw7t core-prim . make-promise)
        (g$13644$6Dw7t core-prim . load/unload)
        (g$13643$6Dw7t core-prim . load/args)
        (g$9157$6Dw7t core-prim . printf)
        (g$9158$6Dw7t core-prim . fprintf)
        (g$9159$6Dw7t core-prim . format)
        (g$13839$6Dw7t core-prim . procedure-form)
        (g$13838$6Dw7t core-prim . procedure-environment)
        (g$13837$6Dw7t core-prim . procedure-name)
        (g$13836$6Dw7t core-prim . procedure-arity)
        (g$13835$6Dw7t core-prim . gc-collect)
        (g$13834$6Dw7t core-prim . typeof)
        (g$13833$6Dw7t core-prim . clr-type?)
        (g$13832$6Dw7t core-prim . get-clr-type)
        (g$13831$6Dw7t core-prim . get-command-line)
        (g$13830$6Dw7t core-prim . vector-append)
        (g$13829$6Dw7t core-prim . vector-filter)
        (g$13828$6Dw7t core-prim . vector-reverse!)
        (g$13827$6Dw7t core-prim . vector-contains?)
        (g$13826$6Dw7t core-prim . vector-index-of)
        (g$13825$6Dw7t core-prim . vector-copy)
        (g$13824$6Dw7t core-prim . vector-binary-search)
        (g$13823$6Dw7t core-prim . string-ci-compare)
        (g$13822$6Dw7t core-prim . string-compare)
        (g$13821$6Dw7t core-prim . string-format)
        (g$13638$6Dw7t core-prim . trace-printer)
        (g$13820$6Dw7t core-prim . make-traced-procedure)
        (g$9179$6Dw7t core-prim . make-traced-macro)
        (g$10614$6Dw7t core-prim . assertion-error)
        (g$13819$6Dw7t core-prim . time-it)
        (g$9282$6Dw7t core-prim . make-parameter)
        (g$13818$6Dw7t core-prim . library-locator)
        (g$13817$6Dw7t core-prim . get-library-paths)
        (g$13816$6Dw7t core-prim . open-tcp-input/output-port)
        (g$13815$6Dw7t core-prim . hashtable-for-each)
        (g$13814$6Dw7t core-prim . hashtable-map)
        (g$10591$6Dw7t core-prim . environment-bindings)
        (g$10594$6Dw7t core-prim . environment-symbols)
        (g$10590$6Dw7t core-prim . interaction-environment-symbols)
        (g$13813$6Dw7t core-prim . optimization-level)
        (g$9920$6Dw7t core-prim . library-path)
        (g$10299$6Dw7t core-prim . make-compile-time-value)
        (g$10600$6Dw7t core-prim . expand->core)
        (g$10598$6Dw7t core-prim . expand)
        (g$13641$6Dw7t core-prim . emacs-mode?)
        (g$10537$6Dw7t core-prim . syntax-transpose)
        (g$9601$6Dw7t core-prim . convert->cps)
        (g$13812$6Dw7t core-prim . inexact=?)
        (g$13811$6Dw7t core-prim . bignum-sqrt-exact)
        (g$13810$6Dw7t core-prim . bignum-sqrt)
        (g$13809$6Dw7t core-prim . flonum->string)
        (g$13808$6Dw7t core-prim . inexact-compare)
        (g$13807$6Dw7t core-prim . exact-compare)
        (g$5321$6Dw7t core-prim . condition-stacktrace)
        (g$5320$6Dw7t core-prim . stacktrace-condition?)
        (g$13639$6Dw7t core-prim . stacktrace-enable?)
        (g$5318$6Dw7t core-prim . make-stacktrace-condition)
        (g$5306$6Dw7t core-prim . condition-where)
        (g$5305$6Dw7t core-prim . where-condition?)
        (g$5303$6Dw7t core-prim . make-where-condition)
        (g$9941$6Dw7t core-prim . installed-libraries)
        (g$9932$6Dw7t core-prim . uninstall-library)
        (g$9365$6Dw7t core-prim . pretty-gensyms)
        (g$9362$6Dw7t core-prim . pretty-width)
        (g$9367$6Dw7t core-prim . pretty-print)
        (g$13806$6Dw7t core-prim . pointer+)
        (g$13805$6Dw7t $core-rtd &stacktrace-rtd &stacktrace-rcd)
        (g$13804$6Dw7t $core-rtd &where-rtd &where-rcd)
        (g$13803$6Dw7t $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$13802$6Dw7t $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$13801$6Dw7t $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$13800$6Dw7t $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$13799$6Dw7t $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$13798$6Dw7t
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$13797$6Dw7t
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$13796$6Dw7t
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$13795$6Dw7t
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$13794$6Dw7t $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$13793$6Dw7t
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$13792$6Dw7t $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$13791$6Dw7t $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$13790$6Dw7t $core-rtd &i/o-rtd &i/o-rcd)
        (g$13789$6Dw7t
          $core-rtd
          &non-continuable-rtd
          &non-continuable-rcd)
        (g$13788$6Dw7t $core-rtd &undefined-rtd &undefined-rcd)
        (g$13787$6Dw7t $core-rtd &syntax-rtd &syntax-rcd)
        (g$13786$6Dw7t $core-rtd &lexical-rtd &lexical-rcd)
        (g$13785$6Dw7t
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$13784$6Dw7t $core-rtd &who-rtd &who-rcd)
        (g$13783$6Dw7t $core-rtd &irritants-rtd &irritants-rcd)
        (g$13782$6Dw7t $core-rtd &assertion-rtd &assertion-rcd)
        (g$13781$6Dw7t $core-rtd &violation-rtd &violation-rcd)
        (g$13780$6Dw7t $core-rtd &error-rtd &error-rcd)
        (g$13779$6Dw7t $core-rtd &serious-rtd &serious-rcd)
        (g$13778$6Dw7t $core-rtd &warning-rtd &warning-rcd)
        (g$13777$6Dw7t $core-rtd &message-rtd &message-rcd)
        (g$13776$6Dw7t $core-rtd &condition-rtd &condition-rcd)
        (g$13775$6Dw7t macro . define-condition-type)
        (g$13774$6Dw7t macro . define-enumeration)
        (g$13773$6Dw7t macro . define-record-type)
        (g$13772$6Dw7t macro . parent-rtd)
        (g$13771$6Dw7t macro . nongenerative)
        (g$13770$6Dw7t macro . opaque)
        (g$13769$6Dw7t macro . sealed)
        (g$13768$6Dw7t macro . protocol)
        (g$13767$6Dw7t macro . parent)
        (g$13766$6Dw7t macro . immutable)
        (g$13765$6Dw7t macro . mutable)
        (g$13764$6Dw7t macro . fields)
        (g$13763$6Dw7t macro . error-handling-mode)
        (g$13762$6Dw7t macro . file-options)
        (g$13761$6Dw7t macro . buffer-mode)
        (g$13760$6Dw7t macro . eol-style)
        (g$13759$6Dw7t macro . guard)
        (g$13758$6Dw7t macro . trace-letrec-syntax)
        (g$13757$6Dw7t macro . trace-let-syntax)
        (g$13756$6Dw7t macro . trace-define-syntax)
        (g$13755$6Dw7t macro . trace-define)
        (g$13754$6Dw7t macro . trace-lambda)
        (g$13753$6Dw7t macro . unsyntax-splicing)
        (g$13752$6Dw7t macro . unsyntax)
        (g$13751$6Dw7t macro . unquote-splicing)
        (g$13750$6Dw7t macro . unquote)
        (g$13749$6Dw7t macro . _)
        (g$13748$6Dw7t macro . else)
        (g$13747$6Dw7t macro . =>)
        (g$13746$6Dw7t macro . ...)
        (g$13745$6Dw7t macro . assert)
        (g$13744$6Dw7t macro . endianness)
        (g$13743$6Dw7t macro . delay)
        (g$13742$6Dw7t macro . time)
        (g$13741$6Dw7t macro . or)
        (g$13740$6Dw7t macro . and)
        (g$13739$6Dw7t macro . do)
        (g$13738$6Dw7t macro . cond)
        (g$13737$6Dw7t macro . let*)
        (g$13736$6Dw7t macro . let)
        (g$13735$6Dw7t macro . identifier-syntax)
        (g$13734$6Dw7t macro . with-syntax)
        (g$13733$6Dw7t macro . quasisyntax)
        (g$13732$6Dw7t macro . quasiquote)
        (g$13731$6Dw7t macro . syntax-rules)
        (g$13730$6Dw7t macro . include-into)
        (g$13729$6Dw7t macro . include)
        (g$13728$6Dw7t macro . define-struct)
        (g$13727$6Dw7t macro . let-values)
        (g$13726$6Dw7t macro . let*-values)
        (g$13725$6Dw7t core-macro . record-constructor-descriptor)
        (g$13724$6Dw7t core-macro . record-type-descriptor)
        (g$13723$6Dw7t core-macro . fluid-let-syntax)
        (g$13722$6Dw7t macro . case)
        (g$13721$6Dw7t macro . parameterize)
        (g$13720$6Dw7t macro . unless)
        (g$13719$6Dw7t macro . when)
        (g$13718$6Dw7t core-macro . if)
        (g$13717$6Dw7t core-macro . letrec*)
        (g$13716$6Dw7t core-macro . letrec)
        (g$13715$6Dw7t core-macro . type-descriptor)
        (g$13714$6Dw7t core-macro . case-lambda)
        (g$13713$6Dw7t core-macro . lambda)
        (g$13712$6Dw7t core-macro . syntax)
        (g$13711$6Dw7t core-macro . syntax-case)
        (g$13710$6Dw7t core-macro . quote)
        (g$13709$6Dw7t core-macro . foreign-call)
        (g$13708$6Dw7t letrec-syntax)
        (g$13707$6Dw7t let-syntax)
        (g$13706$6Dw7t set!)
        (g$13705$6Dw7t export)
        (g$13704$6Dw7t import)
        (g$13703$6Dw7t library)
        (g$13702$6Dw7t begin)
        (g$13701$6Dw7t module)
        (g$13700$6Dw7t define-syntax)
        (g$13699$6Dw7t define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$28544$6Dw7t
      'g$14076$6Dw7t
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$14014$6Dw7t)
        (eval-core . g$14013$6Dw7t)
        (set-symbol-value! . g$14011$6Dw7t)
        (symbol-value . g$14010$6Dw7t)
        (gensym . g$14007$6Dw7t)
        (void . g$14006$6Dw7t))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$33060$6Dw7t
     g$trace-printer$33128$6Dw7t
     (g$make-parameter$27681$6Dw7t g$pretty-print$27891$6Dw7t))
   (g$stacktrace-enable?$33061$6Dw7t
     g$stacktrace-enable?$33129$6Dw7t
     (g$make-parameter$27681$6Dw7t '#t))
   (g$command-line$33062$6Dw7t
     g$command-line$33130$6Dw7t
     (g$make-parameter$27681$6Dw7t (get-command-line)))
   (g$emacs-mode?$33063$6Dw7t
     g$emacs-mode?$33131$6Dw7t
     (g$make-parameter$27681$6Dw7t '#f))
   (g$local-library-path$33064$6Dw7t
     g$local-library-path$33132$6Dw7t
     (case-lambda
       ((g$filename$33079$6Dw7t)
        (cons
          (g$get-directory-name$24166$6Dw7t g$filename$33079$6Dw7t)
          (g$library-path$28528$6Dw7t)))))
   (g$load/args$33065$6Dw7t
     g$load/args$33133$6Dw7t
     (case-lambda
       ((g$filename$33080$6Dw7t . g$args$33081$6Dw7t)
        (begin
          (apply
            g$load-r6rs-top-level$33076$6Dw7t
            g$filename$33080$6Dw7t
            'load
            g$args$33081$6Dw7t)
          (void)))))
   (g$load/unload$33066$6Dw7t
     g$load/unload$33134$6Dw7t
     (case-lambda
       ((g$filename$33082$6Dw7t)
        ((case-lambda
           ((g$libs$33083$6Dw7t)
            (begin
              (g$load$33067$6Dw7t g$filename$33082$6Dw7t)
              (g$for-each$23582$6Dw7t
                (case-lambda
                  ((g$lib$33084$6Dw7t)
                   (if (not (g$memq$23569$6Dw7t
                              g$lib$33084$6Dw7t
                              g$libs$33083$6Dw7t))
                     (g$uninstall-library$28540$6Dw7t g$lib$33084$6Dw7t)
                     (void))))
                (g$installed-libraries$28549$6Dw7t)))))
         (g$installed-libraries$28549$6Dw7t)))))
   (g$load$33067$6Dw7t
     g$load$33135$6Dw7t
     (case-lambda
       ((g$filename$33085$6Dw7t)
        (begin
          (apply
            g$load-r6rs-top-level$33076$6Dw7t
            g$filename$33085$6Dw7t
            'load
            (cdr (g$command-line$33062$6Dw7t)))
          (void)))))
   (g$ironscheme-test$33068$6Dw7t
     g$ironscheme-test$33136$6Dw7t
     (case-lambda (() (g$load$33067$6Dw7t '"tests/r6rs/run.sps"))))
   (g$ironscheme-build$33069$6Dw7t
     g$ironscheme-build$33137$6Dw7t
     (case-lambda
       (() (g$ironscheme-build$33069$6Dw7t '#f))
       ((g$cps?$33086$6Dw7t)
        (begin
          (g$call-with-output-file$27187$6Dw7t
            '"build-options.ss"
            (case-lambda
              ((g$p$33087$6Dw7t)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$33086$6Dw7t)
                   g$p$33087$6Dw7t)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$33086$6Dw7t))
                   g$p$33087$6Dw7t)
                 (g$newline$27188$6Dw7t g$p$33087$6Dw7t)))))
          (g$load$33067$6Dw7t '"ironscheme-buildscript.ss")))))
   (g$foreground-color$33070$6Dw7t
     g$foreground-color$33138$6Dw7t
     (case-lambda
       (()
        (if (not (g$emacs-mode?$33063$6Dw7t))
          (begin
            '#f
            (clr-call-internal 'console 'get_foregroundcolor '()))
          '#f))
       ((g$color$33088$6Dw7t)
        (if (not (g$emacs-mode?$33063$6Dw7t))
          (begin
            '#f
            (clr-call-internal
              'console
              'set_foregroundcolor
              '()
              g$color$33088$6Dw7t))
          '#f))))
   (g$system-exception?$33071$6Dw7t
     g$system-exception?$33139$6Dw7t
     (case-lambda
       ((g$e$33089$6Dw7t)
        (clr-is-internal 'SystemException g$e$33089$6Dw7t))))
   (g$eval-top-level$33072$6Dw7t
     g$eval-top-level$33140$6Dw7t
     (case-lambda
       ((g$x$33090$6Dw7t)
        (call/cc
          (case-lambda
            ((g$k$33091$6Dw7t)
             (with-exception-handler
               (case-lambda
                 ((g$e$33092$6Dw7t)
                  ((case-lambda
                     ((g$serious?$33093$6Dw7t)
                      (begin
                        ((case-lambda
                           ((g$foreground-color$33098$6Dw7t
                              g$current-output-port$33099$6Dw7t
                              g$foreground-color$33100$6Dw7t
                              g$current-output-port$33101$6Dw7t)
                            ((case-lambda
                               ((g$swap$33102$6Dw7t)
                                (dynamic-wind
                                  g$swap$33102$6Dw7t
                                  (case-lambda
                                    (()
                                     (begin
                                       (if g$serious?$33093$6Dw7t
                                         (display
                                           '"Unhandled exception during evaluation:
")
                                         (void))
                                       (display g$e$33092$6Dw7t)
                                       (g$newline$27188$6Dw7t))))
                                  g$swap$33102$6Dw7t)))
                             (case-lambda
                               (()
                                (begin
                                  ((case-lambda
                                     ((g$t$33103$6Dw7t)
                                      (begin
                                        (g$foreground-color$33098$6Dw7t
                                          g$foreground-color$33100$6Dw7t)
                                        (set! g$foreground-color$33100$6Dw7t
                                          g$t$33103$6Dw7t))))
                                   (g$foreground-color$33098$6Dw7t))
                                  ((case-lambda
                                     ((g$t$33104$6Dw7t)
                                      (begin
                                        (g$current-output-port$33099$6Dw7t
                                          g$current-output-port$33101$6Dw7t)
                                        (set! g$current-output-port$33101$6Dw7t
                                          g$t$33104$6Dw7t))))
                                   (g$current-output-port$33099$6Dw7t))))))))
                         g$foreground-color$33070$6Dw7t
                         current-output-port
                         (if g$serious?$33093$6Dw7t 'red 'yellow)
                         (current-error-port))
                        (if g$serious?$33093$6Dw7t
                          (g$k$33091$6Dw7t)
                          (void)))))
                   ((case-lambda
                      ((g$t$33105$6Dw7t)
                       (if g$t$33105$6Dw7t
                         g$t$33105$6Dw7t
                         (begin
                           '#f
                           (g$system-exception?$33071$6Dw7t
                             g$e$33092$6Dw7t)))))
                    (g$serious-condition?$20251$6Dw7t
                      g$e$33092$6Dw7t)))))
               (case-lambda
                 (()
                  (g$eval$33032$6Dw7t
                    g$x$33090$6Dw7t
                    (g$interaction-environment$33058$6Dw7t)))))))))))
   (g$compile-system-libraries$33073$6Dw7t
     g$compile-system-libraries$33141$6Dw7t
     (case-lambda
       (()
        (g$eval-top-level$33072$6Dw7t
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$33074$6Dw7t
     g$compile$33142$6Dw7t
     (case-lambda
       ((g$filename$33106$6Dw7t)
        (g$load-r6rs-top-level$33076$6Dw7t
          g$filename$33106$6Dw7t
          'compile))))
   (g$compile->closure$33075$6Dw7t
     g$compile->closure$33143$6Dw7t
     (case-lambda
       ((g$filename$33107$6Dw7t)
        (g$load-r6rs-top-level$33076$6Dw7t
          g$filename$33107$6Dw7t
          'closure))))
   (g$load-r6rs-top-level$33076$6Dw7t
     g$load-r6rs-top-level$33144$6Dw7t
     (case-lambda
       ((g$filename$33108$6Dw7t g$how$33109$6Dw7t . g$args$33110$6Dw7t)
        ((case-lambda
           ((g$library-path$33113$6Dw7t g$library-path$33114$6Dw7t)
            ((case-lambda
               ((g$swap$33115$6Dw7t)
                (dynamic-wind
                  g$swap$33115$6Dw7t
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$33116$6Dw7t)
                         ((case-lambda
                            ((g$t$33117$6Dw7t)
                             (if (eqv? g$t$33117$6Dw7t 'closure)
                               (g$pre-compile-r6rs-top-level$33056$6Dw7t
                                 g$x*$33116$6Dw7t)
                               (if (eqv? g$t$33117$6Dw7t 'load)
                                 ((case-lambda
                                    ((g$command-line$33120$6Dw7t
                                       g$command-line$33121$6Dw7t)
                                     ((case-lambda
                                        ((g$swap$33122$6Dw7t)
                                         (dynamic-wind
                                           g$swap$33122$6Dw7t
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$33055$6Dw7t
                                                 g$x*$33116$6Dw7t))))
                                           g$swap$33122$6Dw7t)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$33123$6Dw7t)
                                             (begin
                                               (g$command-line$33120$6Dw7t
                                                 g$command-line$33121$6Dw7t)
                                               (set! g$command-line$33121$6Dw7t
                                                 g$t$33123$6Dw7t))))
                                          (g$command-line$33120$6Dw7t)))))))
                                  g$command-line$33062$6Dw7t
                                  (cons
                                    g$filename$33108$6Dw7t
                                    (g$map$23581$6Dw7t
                                      (case-lambda
                                        ((g$x$33124$6Dw7t)
                                         (g$format$27362$6Dw7t
                                           '"~a"
                                           g$x$33124$6Dw7t)))
                                      g$args$33110$6Dw7t)))
                                 (if (eqv? g$t$33117$6Dw7t 'compile)
                                   (begin
                                     (g$compile-r6rs-top-level$33055$6Dw7t
                                       g$x*$33116$6Dw7t)
                                     (g$serialize-all$28532$6Dw7t
                                       serialize-library
                                       g$compile-core-expr$28279$6Dw7t))
                                   (if '#f '#f (void)))))))
                          g$how$33109$6Dw7t)))
                      (g$with-input-from-file$27184$6Dw7t
                        g$filename$33108$6Dw7t
                        (case-lambda
                          (()
                           ((letrec ((g$f$33125$6Dw7t
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$33126$6Dw7t)
                                              (if (eof-object?
                                                    g$x$33126$6Dw7t)
                                                '()
                                                (cons
                                                  g$x$33126$6Dw7t
                                                  (g$f$33125$6Dw7t)))))
                                           (read-annotated))))))
                              g$f$33125$6Dw7t))))))))
                  g$swap$33115$6Dw7t)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$33127$6Dw7t)
                    (begin
                      (g$library-path$33113$6Dw7t
                        g$library-path$33114$6Dw7t)
                      (set! g$library-path$33114$6Dw7t
                        g$t$33127$6Dw7t))))
                 (g$library-path$33113$6Dw7t)))))))
         g$library-path$28528$6Dw7t
         (g$local-library-path$33064$6Dw7t g$filename$33108$6Dw7t)))))
   (g$fo$33077$6Dw7t
     g$fo$33145$6Dw7t
     (g$make-enumeration$27324$6Dw7t '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$28533$6Dw7t
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$33078$6Dw7t)
         (if (g$serious-condition?$20251$6Dw7t g$ex$33078$6Dw7t)
           (raise g$ex$33078$6Dw7t)
           ((case-lambda
              (()
               (begin
                 '#f
                 (display g$ex$33078$6Dw7t)
                 (g$newline$27188$6Dw7t)))))))))
    (set-symbol-value! 'load g$load$33067$6Dw7t)
    (set-symbol-value! 'compile g$compile$33074$6Dw7t)
    (set-symbol-value! 'compile->closure g$compile->closure$33075$6Dw7t)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$33072$6Dw7t)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$33023$6Dw7t)
    (set-symbol-value! 'expanded2core g$expanded->core$28278$6Dw7t)
    (set-symbol-value! 'trace-printer g$trace-printer$33060$6Dw7t)
    (set-symbol-value! 'pretty-print g$pretty-print$27891$6Dw7t)
    (set-symbol-value! 'convert->cps g$convert->cps$28209$6Dw7t)
    (set-symbol-value!
      'assertion-violation
      g$assertion-violation$20490$6Dw7t)
    (set-symbol-value! 'raise raise)
    (set-symbol-value! 'emacs-mode? g$emacs-mode?$33063$6Dw7t)
    (set-symbol-value!
      'stacktrace-enable?
      g$stacktrace-enable?$33061$6Dw7t)
    (g$file-options-constructor$27682$6Dw7t
      (g$enum-set-constructor$27327$6Dw7t g$fo$33077$6Dw7t))
    (g$library-path$28528$6Dw7t (get-library-paths))
    (g$library-extensions$28529$6Dw7t
      (cons '".ironscheme.sls" (g$library-extensions$28529$6Dw7t)))
    (g$enable-constant-fold/env$28229$6Dw7t
      '(only
         (rnrs)
         =
         <
         >
         <=
         >=
         negative?
         positive?
         zero?
         exp
         expt
         div
         mod
         div0
         mod0)
      '(except
         (rnrs arithmetic fixnums)
         fx*/carry
         fx-/carry
         fx+/carry
         fxdiv0-and-mod0
         fxdiv-and-mod)
      '(except (rnrs arithmetic flonums) fldiv0-and-mod0 fldiv-and-mod)
      '(rnrs arithmetic bitwise))
    (g$interaction-environment$33058$6Dw7t
      (g$new-interaction-environment$33057$6Dw7t))))

